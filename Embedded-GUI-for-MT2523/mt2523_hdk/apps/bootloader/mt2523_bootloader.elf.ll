; ModuleID = './Build/mt2523_bootloader.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.BL_GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.lzma_alloc_t = type { i8* (i8*, i32)*, void (i8*, i8*)* }
%struct.bl_fota_header_t = type { i32, i32, [1 x %struct.bl_fota_bin_info_t] }
%struct.bl_fota_bin_info_t = type { i32, i32, i32, i32, i32, i32, i32, [4 x i8] }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.debug_array = type { i32, i32, i32, i32, i32 }
%struct.I2C_REGISTER_T = type { i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [2 x i16], i16, i16, [6 x i16], i16, i16, i16, i16, i16, i16, i16, i16, [2 x i16], i16, i16 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.hal_wdt_config_t*, i8*, %struct.hal_wdt_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_wdt_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_wdt_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_wdt_config_t], [8 x %struct.hal_wdt_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%union.CACHE_CON_Type = type { %struct.pmic_i2c_config_t }
%struct.pmic_i2c_config_t = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.CLzmaDec = type { %struct._CLzmaProps, i16*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, [4 x i32], i32, i32, i32, i32, i32, [20 x i8] }
%struct._CLzmaProps = type { i32, i32, i32, i32 }
%struct.__va_list = type { i8* }
%struct.pmic_i2c_send_to_receive_config_t = type { i8, i8*, i32, i8*, i32 }
%struct.bl_fota_update_info_t = type { i32, i32, i32, i32, [32 x i8], [4 x i32] }
%struct.mbedtls_sha1_context = type { [2 x i32], [5 x i32], [64 x i8] }
%struct.CMEMEntrySFI = type { [10 x i32], [32 x i8], [8 x i32] }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.hal_wdt_config_t*, i8*, %struct.hal_wdt_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_wdt_config_t]] }

@.str = private unnamed_addr constant [54 x i8] c"destination error: must at begin address of one block\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"read header fail\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [50 x i8] c"ERROR: decompressed size over reserverd size!!!\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"LZMA decode begin: \0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"destination = %x\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"source = %x\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"unpacked_size = %d\0D\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"inbuf malloc failed!\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"outbuf malloc failed!\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"LZMA_flash_init fail\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"LZMA_read_data, addr = %x \0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"read data fail \0D\0A\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"LZMA_write fail\0D\0A\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"set CP10 and CP11 Full Access\0D\0A\00", align 1
@.str.1.14 = private unnamed_addr constant [15 x i8] c"bl_uart_init\0A\0D\00", align 1
@.str.2.15 = private unnamed_addr constant [20 x i8] c"i2c clock enable \0A\0D\00", align 1
@.str.3.16 = private unnamed_addr constant [15 x i8] c"bl_pmic_init\0A\0D\00", align 1
@.str.4.17 = private unnamed_addr constant [17 x i8] c"custom_setEMI \0A\0D\00", align 1
@.str.5.18 = private unnamed_addr constant [24 x i8] c"clk_set_pll_dcm_init \0A\0D\00", align 1
@.str.6.19 = private unnamed_addr constant [14 x i8] c"cm4 freq=%d\0A\0D\00", align 1
@.str.7.20 = private unnamed_addr constant [15 x i8] c"upll freq=%d\0A\0D\00", align 1
@.str.8.21 = private unnamed_addr constant [14 x i8] c"bus freq=%d\0A\0D\00", align 1
@.str.9.22 = private unnamed_addr constant [20 x i8] c"custom_setAdvEMI \0A\0D\00", align 1
@.str.10.23 = private unnamed_addr constant [20 x i8] c"custom_setSFIExt \0A\0D\00", align 1
@.str.11.24 = private unnamed_addr constant [12 x i8] c"NOR_init \0A\0D\00", align 1
@.str.12.25 = private unnamed_addr constant [18 x i8] c"hal_flash_init \0A\0D\00", align 1
@.str.13.26 = private unnamed_addr constant [21 x i8] c"hal_wdt_init (%d) \0A\0D\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"gpdac_sram_power_down\0A\0D\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"config bonding io register\0A\0D\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"D2D IO pull down\0A\0D\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"i2c init \0A\0D\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"i2c clock disable \0A\0D\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"Jump to addr %x\0A\0D\00", align 1
@buf = internal global [512 x i8] zeroinitializer, align 1, !dbg !0
@debug_level = internal unnamed_addr global i32 0, align 4, !dbg !25
@bl_itoa.rev = internal unnamed_addr global [21 x i8] zeroinitializer, align 1, !dbg !28
@.str.27 = private unnamed_addr constant [7 x i8] c"abcdef\00", align 1
@bl_itof.rev = internal unnamed_addr global [21 x i8] zeroinitializer, align 1, !dbg !47
@__const.bl_uart_init.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@.str.38 = private unnamed_addr constant [27 x i8] c"%s: ABIST_FQMTR_CON1=%x \0A\0D\00", align 1
@__func__.bl_clock_freq_monitor = private unnamed_addr constant [22 x i8] c"bl_clock_freq_monitor\00", align 1
@.str.1.39 = private unnamed_addr constant [43 x i8] c"%s: ABIST_FQMTR_CON2=%x,CON1=%x,DATA=%x \0A\0D\00", align 1
@.str.2.42 = private unnamed_addr constant [27 x i8] c"LFOSC freq before K = %d\0A\0D\00", align 1
@.str.3.43 = private unnamed_addr constant [38 x i8] c"[LFOSC] Before K = %d, After K = %d\0A\0D\00", align 1
@.str.4.44 = private unnamed_addr constant [29 x i8] c"[LFOSC] calibration failed\0A\0D\00", align 1
@.str.5.45 = private unnamed_addr constant [35 x i8] c"UPLL freq measured by LFOSC = %d\0A\0D\00", align 1
@.str.6.46 = private unnamed_addr constant [50 x i8] c"LFOSC freq after K= %d, K %d times, total %d us\0A\0D\00", align 1
@.str.7.47 = private unnamed_addr constant [27 x i8] c"HFOSC freq before K = %d\0A\0D\00", align 1
@.str.8.48 = private unnamed_addr constant [38 x i8] c"[HFOSC] Before K = %d, After K = %d\0A\0D\00", align 1
@.str.9.49 = private unnamed_addr constant [29 x i8] c"[HFOSC] calibration failed\0A\0D\00", align 1
@.str.10.50 = private unnamed_addr constant [50 x i8] c"HFOSC freq after K= %d, K %d times, total %d us\0A\0D\00", align 1
@gpt_ms = dso_local local_unnamed_addr global %struct.BL_GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.BL_GPT_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !61
@gpt_us = dso_local local_unnamed_addr global %struct.BL_GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.BL_GPT_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !75
@us_init_falg = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !92
@ms_init_falg = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !95
@g_current_capid = dso_local local_unnamed_addr global i32 431, align 4, !dbg !97
@.str.61 = private unnamed_addr constant [20 x i8] c" temp_capid = %d \0A\0D\00", align 1
@.str.1.62 = private unnamed_addr constant [33 x i8] c" increase CAPID from %d to %d \0A\0D\00", align 1
@.str.2.63 = private unnamed_addr constant [33 x i8] c" decrease CAPID from %d to %d \0A\0D\00", align 1
@.str.3.64 = private unnamed_addr constant [24 x i8] c" BL_DCXO_CAP_ID = %u \0A\0D\00", align 1
@.str.4.65 = private unnamed_addr constant [21 x i8] c" EFUSE CAPID = %u \0A\0D\00", align 1
@.str.5.66 = private unnamed_addr constant [22 x i8] c" EFUSE CAPID0 = %u \0A\0D\00", align 1
@.str.6.67 = private unnamed_addr constant [22 x i8] c" EFUSE CAPID1 = %u \0A\0D\00", align 1
@.str.7.68 = private unnamed_addr constant [22 x i8] c" EFUSE CAPID2 = %u \0A\0D\00", align 1
@.str.8.69 = private unnamed_addr constant [26 x i8] c" target cal_capid = %u \0A\0D\00", align 1
@.str.9.70 = private unnamed_addr constant [25 x i8] c" read EFUSE CAPID2 %d \0A\0D\00", align 1
@.str.10.71 = private unnamed_addr constant [25 x i8] c" read EFUSE CAPID1 %d \0A\0D\00", align 1
@.str.11.72 = private unnamed_addr constant [25 x i8] c" read EFUSE CAPID0 %d \0A\0D\00", align 1
@.str.12.73 = private unnamed_addr constant [46 x i8] c" EFUSE CAPID not exists , read golden value\0A\0D\00", align 1
@.str.13.74 = private unnamed_addr constant [38 x i8] c" dump capid = %u (%d) , fqmtr = %d \0A\0D\00", align 1
@.str.14.75 = private unnamed_addr constant [30 x i8] c" target fqmtr 952148 found \0A\0D\00", align 1
@.str.15.76 = private unnamed_addr constant [32 x i8] c" dump capid result = %u (%d) \0A\0D\00", align 1
@.str.16.77 = private unnamed_addr constant [38 x i8] c" final cal capid = %d , fqmtr = %d \0A\0D\00", align 1
@.str.17.78 = private unnamed_addr constant [38 x i8] c" final cal capid = 0 , change to 1 \0A\0D\00", align 1
@.str.18.79 = private unnamed_addr constant [98 x i8] c" Please write the calibrated CAPID (%d) in SW, re-build, and re-download the normal bootloader \0D\0A\00", align 1
@.str.19.82 = private unnamed_addr constant [42 x i8] c" BL_DCXO_CAP_ID = %u , SW K value = %u \0D\0A\00", align 1
@.str.21 = private unnamed_addr constant [24 x i8] c" BL_DCXO_CAP_ID = %u \0D\0A\00", align 1
@.str.87 = private unnamed_addr constant [30 x i8] c"\0A\0DFind MT6385 PMIC CHIP ID \0A\0D\00", align 1
@bl_pmic_vmc_vr_control = dso_local local_unnamed_addr global void (i8)* null, align 4, !dbg !124
@.str.1.88 = private unnamed_addr constant [32 x i8] c"\0A\0DFind MAX14745 PMIC CHIP ID \0A\0D\00", align 1
@.str.2.89 = private unnamed_addr constant [23 x i8] c"system reset by WDT \0A\0D\00", align 1
@.str.3.90 = private unnamed_addr constant [27 x i8] c"system reset not by WDT \0A\0D\00", align 1
@.str.4.91 = private unnamed_addr constant [39 x i8] c"\0A\0DERROR : not Find any PMIC CHIP ID \0A\0D\00", align 1
@.str.94 = private unnamed_addr constant [33 x i8] c"bl_usb_low_power_setting start\0A\0D\00", align 1
@bl_pmic_vusb_vr_control = dso_local local_unnamed_addr global void (i8)* null, align 4, !dbg !136
@.str.114 = private unnamed_addr constant [23 x i8] c"_bl_alloc size = %d \0D\0A\00", align 1
@.str.1.115 = private unnamed_addr constant [35 x i8] c"_bl_alloc lzma_alloc_count = %d \0D\0A\00", align 1
@lzma_alloc_count = internal unnamed_addr global i32 0, align 4, !dbg !142
@lzma_buf_0 = internal global [16384 x i8] zeroinitializer, align 1, !dbg !253
@lzma_buf_1 = internal global [16384 x i8] zeroinitializer, align 1, !dbg !258
@lzma_buf_2 = internal global [4096 x i8] zeroinitializer, align 1, !dbg !260
@lzma_buf_3 = internal global [4096 x i8] zeroinitializer, align 1, !dbg !265
@.str.2.116 = private unnamed_addr constant [11 x i8] c"e: %s %d\0A\0D\00", align 1
@__FUNCTION__.bl_alloc = private unnamed_addr constant [9 x i8] c"bl_alloc\00", align 1
@.str.3.113 = private unnamed_addr constant [13 x i8] c"_bl_free  \0D\0A\00", align 1
@lzma_alloc = dso_local global %struct.lzma_alloc_t { i8* (i8*, i32)* @bl_alloc, void (i8*, i8*)* @bl_free }, align 4, !dbg !189
@fota_head_buf = internal global %struct.bl_fota_header_t zeroinitializer, align 4, !dbg !228
@.str.4.117 = private unnamed_addr constant [50 x i8] c"p addr                                    = %x \0A\0D\00", align 1
@.str.5.118 = private unnamed_addr constant [54 x i8] c"fota_head_buf.m_bin_info[%d].m_bin_length     = %x \0A\0D\00", align 1
@.str.6.119 = private unnamed_addr constant [54 x i8] c"fota_head_buf.m_bin_info[%d].m_bin_offset     = %x \0A\0D\00", align 1
@.str.7.120 = private unnamed_addr constant [54 x i8] c"fota_head_buf.m_bin_info[%d].m_bin_start_addr = %x \0A\0D\00", align 1
@.str.8.121 = private unnamed_addr constant [54 x i8] c"fota_head_buf.m_bin_info[%d].m_partition_len  = %x \0A\0D\00", align 1
@.str.9.122 = private unnamed_addr constant [32 x i8] c"lzma_source             = %x \0D\0A\00", align 1
@.str.10.123 = private unnamed_addr constant [32 x i8] c"lzma_dest_size          = %x \0D\0A\00", align 1
@.str.11.124 = private unnamed_addr constant [32 x i8] c"lzma_dest_addr          = %x \0D\0A\00", align 1
@.str.12.125 = private unnamed_addr constant [29 x i8] c"fota compress status = %d \0D\0A\00", align 1
@__FUNCTION__.bl_fota_compress_update = private unnamed_addr constant [24 x i8] c"bl_fota_compress_update\00", align 1
@__FUNCTION__.bl_fota_get_block_size_length = private unnamed_addr constant [30 x i8] c"bl_fota_get_block_size_length\00", align 1
@.str.13.126 = private unnamed_addr constant [18 x i8] c"block size =%x \0A\0D\00", align 1
@.str.14.127 = private unnamed_addr constant [34 x i8] c"erase addr: %x, marker addr: %x\0D\0A\00", align 1
@.str.15.128 = private unnamed_addr constant [30 x i8] c"hal_flash_erase status = %d\0D\0A\00", align 1
@__FUNCTION__.bl_fota_write_update_info = private unnamed_addr constant [26 x i8] c"bl_fota_write_update_info\00", align 1
@.str.16.129 = private unnamed_addr constant [30 x i8] c"hal_flash_write status = %d\0D\0A\00", align 1
@.str.17.130 = private unnamed_addr constant [29 x i8] c"write update info addr %x \0D\0A\00", align 1
@__const.bl_fota_update_progress.phase_portion = private unnamed_addr constant [5 x i32] [i32 5, i32 15, i32 30, i32 40, i32 10], align 4
@bl_fota_update_progress.last_progress = internal unnamed_addr global i32 0, align 4, !dbg !208
@.str.18.131 = private unnamed_addr constant [75 x i8] c"bl_fota_update_progress: progress = %d/100   ( phase %d , progress %d ) \0A\0D\00", align 1
@page_buffer = internal global [512 x i32] zeroinitializer, align 4, !dbg !225
@__FUNCTION__.bl_fota_do_update = private unnamed_addr constant [18 x i8] c"bl_fota_do_update\00", align 1
@.str.19.133 = private unnamed_addr constant [33 x i8] c"hal_flash_erase , status = %d \0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [32 x i8] c"hal_flash_read , status = %d \0D\0A\00", align 1
@.str.21.132 = private unnamed_addr constant [33 x i8] c"hal_flash_write , status = %d \0D\0A\00", align 1
@.str.22 = private unnamed_addr constant [53 x i8] c"Error when processing os bin raw seek %d, status%d\0A\0D\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"sha1 start \0D\0A\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"sha1 update %x (%d/%d) \0D\0A\00", align 1
@__FUNCTION__.bl_fota_integrity_check = private unnamed_addr constant [24 x i8] c"bl_fota_integrity_check\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"sha1 finish \0D\0A\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"dump sig = \00", align 1
@.str.27.134 = private unnamed_addr constant [4 x i8] c"%x \00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"sig_len = %d\0D\0A\00", align 1
@.str.30 = private unnamed_addr constant [30 x i8] c"hal_flash_read status = %d \0D\0A\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"integrity check fail\0D\0A\00", align 1
@.str.32 = private unnamed_addr constant [23 x i8] c"integrity check pass\0D\0A\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"hal_flash_read \0A\0D\00", align 1
@.str.34 = private unnamed_addr constant [29 x i8] c"hal_flash_read status = %d\0D\0A\00", align 1
@__FUNCTION__.bl_fota_load_and_check_fota_header = private unnamed_addr constant [35 x i8] c"bl_fota_load_and_check_fota_header\00", align 1
@.str.35 = private unnamed_addr constant [34 x i8] c"fota_head_buf.m_magic_ver = %x \0A\0D\00", align 1
@.str.36 = private unnamed_addr constant [49 x i8] c"fota_head_buf.m_bin_info[0].m_bin_length = %x \0A\0D\00", align 1
@.str.37 = private unnamed_addr constant [49 x i8] c"fota_head_buf.m_bin_info[0].m_bin_offset = %x \0A\0D\00", align 1
@.str.38.135 = private unnamed_addr constant [53 x i8] c"fota_head_buf.m_bin_info[0].m_bin_start_addr = %x \0A\0D\00", align 1
@.str.39 = private unnamed_addr constant [49 x i8] c"fota_head_buf.m_bin_info[0].m_sig_length = %x \0A\0D\00", align 1
@.str.40 = private unnamed_addr constant [49 x i8] c"fota_head_buf.m_bin_info[0].m_sig_offset = %x \0A\0D\00", align 1
@.str.41 = private unnamed_addr constant [52 x i8] c"fota_head_buf.m_bin_info[0].m_is_compressed = %x \0A\0D\00", align 1
@.str.42 = private unnamed_addr constant [32 x i8] c"BL_FOTA_HEADER_GET_MAGIC fail\0A\0D\00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"updating marker exist\00", align 1
@.str.44 = private unnamed_addr constant [37 x i8] c"bl_fota_load_and_check_fota_header\0A\0D\00", align 1
@.str.45 = private unnamed_addr constant [33 x i8] c"wrong is_compressed value = %x\0A\0D\00", align 1
@.str.46 = private unnamed_addr constant [20 x i8] c"fota update fail \0D\0A\00", align 1
@__FUNCTION__.bl_fota_read_update_info = private unnamed_addr constant [25 x i8] c"bl_fota_read_update_info\00", align 1
@.str.47 = private unnamed_addr constant [28 x i8] c"read update info from %x \0D\0A\00", align 1
@.str.48 = private unnamed_addr constant [19 x i8] c"fota is updating\0A\0D\00", align 1
@__FUNCTION__.bl_fota_is_triggered = private unnamed_addr constant [21 x i8] c"bl_fota_is_triggered\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"exit: %s %d\0A\00", align 1
@.str.50 = private unnamed_addr constant [21 x i8] c"start fota update \0A\0D\00", align 1
@.str.51 = private unnamed_addr constant [22 x i8] c"FOTA update success\0A\0D\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"FOTA error%d\0A\0D\00", align 1
@__FUNCTION__.bl_fota_check_updating_marker = private unnamed_addr constant [30 x i8] c"bl_fota_check_updating_marker\00", align 1
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], align 4, !dbg !267
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, align 4, !dbg !279
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, align 4, !dbg !281
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, align 4, !dbg !283
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !285
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !287
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !289
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !291
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !293
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !295
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !297
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !299
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !301
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !303
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !305
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !307
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, align 4, !dbg !309
@.str.138 = private unnamed_addr constant [19 x i8] c"Dump EMI Setting\0A\0D\00", align 1
@.str.1.139 = private unnamed_addr constant [16 x i8] c"EMI_CONM = %x\0A\0D\00", align 1
@.str.2.140 = private unnamed_addr constant [16 x i8] c"EMI_GENA = %x\0A\0D\00", align 1
@.str.3.141 = private unnamed_addr constant [16 x i8] c"EMI_RDCT = %x\0A\0D\00", align 1
@.str.4.142 = private unnamed_addr constant [16 x i8] c"EMI_DLLV = %x\0A\0D\00", align 1
@.str.5.143 = private unnamed_addr constant [16 x i8] c"EMI_IDLC = %x\0A\0D\00", align 1
@.str.6.144 = private unnamed_addr constant [16 x i8] c"EMI_IDLD = %x\0A\0D\00", align 1
@.str.7.145 = private unnamed_addr constant [16 x i8] c"EMI_IDLE = %x\0A\0D\00", align 1
@.str.8.146 = private unnamed_addr constant [16 x i8] c"EMI_ODLC = %x\0A\0D\00", align 1
@.str.9.147 = private unnamed_addr constant [16 x i8] c"EMI_ODLD = %x\0A\0D\00", align 1
@.str.10.148 = private unnamed_addr constant [16 x i8] c"EMI_ODLE = %x\0A\0D\00", align 1
@.str.11.149 = private unnamed_addr constant [16 x i8] c"EMI_ODLF = %x\0A\0D\00", align 1
@.str.12.150 = private unnamed_addr constant [15 x i8] c"EMI_IOA = %x\0A\0D\00", align 1
@.str.13.151 = private unnamed_addr constant [15 x i8] c"EMI_IOB = %x\0A\0D\00", align 1
@.str.14.152 = private unnamed_addr constant [17 x i8] c"EMI_DSRAM = %x\0A\0D\00", align 1
@.str.15.153 = private unnamed_addr constant [17 x i8] c"EMI_MSRAM = %u\0A\0D\00", align 1
@.str.16.154 = private unnamed_addr constant [19 x i8] c"EMI_MREG_RW = %x\0A\0D\00", align 1
@.str.17.155 = private unnamed_addr constant [11 x i8] c"MR0 = %x\0A\0D\00", align 1
@.str.18.156 = private unnamed_addr constant [11 x i8] c"MR1 = %x\0A\0D\00", align 1
@.str.19.157 = private unnamed_addr constant [11 x i8] c"MR2 = %x\0A\0D\00", align 1
@.str.20.158 = private unnamed_addr constant [11 x i8] c"MR4 = %x\0A\0D\00", align 1
@.str.21.159 = private unnamed_addr constant [11 x i8] c"MR6 = %x\0A\0D\00", align 1
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@.str.22.164 = private unnamed_addr constant [25 x i8] c"PSRAM Memory Test Pass!!\00", align 1
@.str.23.165 = private unnamed_addr constant [27 x i8] c"PSRAM Memory Test Failed!!\00", align 1
@debug_node_counter = dso_local local_unnamed_addr global i32 0, align 4, !dbg !330
@debug_info = dso_local local_unnamed_addr global [20 x %struct.debug_array] zeroinitializer, align 4, !dbg !340
@counter = dso_local local_unnamed_addr global [20 x i32] zeroinitializer, align 4, !dbg !353
@.str.167 = private unnamed_addr constant [31 x i8] c"pattern %d, failed number %d\0A\0D\00", align 1
@.str.1.168 = private unnamed_addr constant [26 x i8] c"total failed number: %d\0A\0D\00", align 1
@.str.2.169 = private unnamed_addr constant [29 x i8] c"SLT Mem test pattern pass!\0A\0D\00", align 1
@.str.3.170 = private unnamed_addr constant [31 x i8] c"SLT Mem test pattern failed!\0A\0D\00", align 1
@.str.4.171 = private unnamed_addr constant [18 x i8] c"flush buffer...\0A\0D\00", align 1
@.str.5.172 = private unnamed_addr constant [18 x i8] c"Init debug node\0A\0D\00", align 1
@.str.6.166 = private unnamed_addr constant [109 x i8] c"(%2d,%2d bit,0x%08x,&0x%08x,0x%08x) format:(pattern num,bit operation,test pattern,failed addr,failed val)\0A\0D\00", align 1
@__FUNCTION__.pmic_i2c_send_polling = private unnamed_addr constant [22 x i8] c"pmic_i2c_send_polling\00", align 1
@.str.179 = private unnamed_addr constant [25 x i8] c"i2c pmic send error:%d\0D\0A\00", align 1
@__FUNCTION__.pmic_i2c_send_to_receive_polling = private unnamed_addr constant [33 x i8] c"pmic_i2c_send_to_receive_polling\00", align 1
@.str.1.182 = private unnamed_addr constant [33 x i8] c"i2c pmic send_to_read error:%d\0D\0A\00", align 1
@i2c_master_register = dso_local local_unnamed_addr constant [4 x %struct.I2C_REGISTER_T*] [%struct.I2C_REGISTER_T* inttoptr (i32 -1608450048 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608384512 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1608843264 to %struct.I2C_REGISTER_T*), %struct.I2C_REGISTER_T* inttoptr (i32 -1575682048 to %struct.I2C_REGISTER_T*)], align 4, !dbg !356
@g_i2c_tx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 3, i32 5, i32 7, i32 7], align 4, !dbg !467
@g_i2c_rx_dma_channel = dso_local local_unnamed_addr constant [4 x i32] [i32 4, i32 6, i32 7, i32 7], align 4, !dbg !472
@g_i2c_pdn_table = dso_local local_unnamed_addr constant [4 x i32] [i32 138, i32 137, i32 39, i32 38], align 4, !dbg !474
@g_i2c_source_clock_table = dso_local local_unnamed_addr global [4 x i32] [i32 26000, i32 26000, i32 62400, i32 62400], align 4, !dbg !479
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !545
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !594
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !898
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !900
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !902
@sfi_index = dso_local local_unnamed_addr global i32 0, align 4, !dbg !907
@CS_COUNT_SFI = dso_local local_unnamed_addr global i32 0, align 4, !dbg !949
@combo_mem_hw_list = internal constant { [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> } { [16 x i8] c"COMBO_MEM_SFI\00\00\00", i32 1, i32 5, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] } { [10 x i32] [i32 65536, i32 -351578256, i32 1391984640, i32 1, i32 0, i32 369098774, i32 262148, i32 0, i32 0, i32 0], <{ [15 x i8], [17 x i8] }> <{ [15 x i8] c"\01\01\06\01\02\01B\01\02\05\01\01\02\C0\02", [17 x i8] zeroinitializer }>, [8 x i32] [i32 65536, i32 -351578256, i32 1391984640, i32 1, i32 0, i32 0, i32 0, i32 0] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] } { [10 x i32] [i32 65536, i32 -351578256, i32 1391984640, i32 1, i32 0, i32 369098774, i32 262148, i32 0, i32 0, i32 0], <{ [15 x i8], [17 x i8] }> <{ [15 x i8] c"\01\01\06\01\02\01B\01\02\05\01\01\02\C0\02", [17 x i8] zeroinitializer }>, [8 x i32] [i32 65536, i32 -351578256, i32 1391984640, i32 1, i32 0, i32 0, i32 0, i32 0] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } { [10 x i32] [i32 65536, i32 -351578128, i32 1391984640, i32 1, i32 0, i32 452984859, i32 131074, i32 0, i32 0, i32 0], <{ [18 x i8], [14 x i8] }> <{ [18 x i8] c"\01\01P\01\03\01\02\02\03\08\01\11\01\11\00\00\00@", [14 x i8] zeroinitializer }>, [8 x i32] [i32 65536, i32 -351578128, i32 1391984640, i32 1, i32 0, i32 0, i32 0, i32 0] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] } { [10 x i32] [i32 65536, i32 -351578255, i32 1391984656, i32 1, i32 0, i32 352321557, i32 262148, i32 0, i32 0, i32 0], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }> <{ i8 1, i8 1, i8 53, i8 3, i8 2, i8 -64, i8 2, [25 x i8] zeroinitializer }>, [8 x i32] [i32 65536, i32 185284465, i32 855113728, i32 1, i32 0, i32 0, i32 0, i32 0] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } { [10 x i32] [i32 65536, i32 -351578128, i32 1391984656, i32 1, i32 0, i32 385875991, i32 512, i32 0, i32 0, i32 0], <{ [18 x i8], [14 x i8] }> <{ [18 x i8] c"\01\01P\01\03\01\02\02\03\08\01\11\01\11\00\00\00@", [14 x i8] zeroinitializer }>, [8 x i32] [i32 65536, i32 -351578128, i32 1391984640, i32 1, i32 0, i32 0, i32 0, i32 0] } }> }, section ".ram_rodata", align 4, !dbg !951
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !981
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1033
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1036
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1069
@nor_egid = dso_local local_unnamed_addr global %struct.anon* null, align 4, !dbg !1079
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1306
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_wdt_config_t] [%struct.hal_wdt_config_t { i32 0, i32 4096 }, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer], [8 x %struct.hal_wdt_config_t] [%struct.hal_wdt_config_t { i32 4194304, i32 1 }, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_wdt_config_t] [%struct.hal_wdt_config_t { i32 0, i32 4096 }, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer], [8 x %struct.hal_wdt_config_t] [%struct.hal_wdt_config_t { i32 4194304, i32 1 }, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_wdt_config_t] [%struct.hal_wdt_config_t { i32 0, i32 4096 }, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer], [8 x %struct.hal_wdt_config_t] [%struct.hal_wdt_config_t { i32 4194304, i32 1 }, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_wdt_config_t] [%struct.hal_wdt_config_t { i32 0, i32 4096 }, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer], [8 x %struct.hal_wdt_config_t] [%struct.hal_wdt_config_t { i32 4194304, i32 1 }, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_wdt_config_t] [%struct.hal_wdt_config_t { i32 0, i32 4096 }, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer], [8 x %struct.hal_wdt_config_t] [%struct.hal_wdt_config_t { i32 4194304, i32 1 }, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer, %struct.hal_wdt_config_t zeroinitializer] }] } }, align 4, !dbg !1308
@BlockLayout = internal unnamed_addr global %struct.hal_wdt_config_t* null, align 4, !dbg !1116
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1104
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1106
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1339
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1137
@BankInfo = internal global [8 x %struct.hal_wdt_config_t] zeroinitializer, align 4, !dbg !1129
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1274
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1277
@EntireDiskRegionInfo = internal global [8 x %struct.hal_wdt_config_t] zeroinitializer, align 4, !dbg !1279
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1139
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1125
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1127
@mtdflash = dso_local local_unnamed_addr global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1191
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !1348
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1282
@processing_irqCnt = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1399
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1403
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1409
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1411
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1413
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1415
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !1417
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !1471
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !1473
@g_cache_status = dso_local global i8 0, align 1, !dbg !1475
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str.243 = private unnamed_addr constant [51 x i8] c"../../../../../driver/chip/mt2523//src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1.244 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@sha1_padding = internal constant <{ i8, [63 x i8] }> <{ i8 -128, [63 x i8] zeroinitializer }>, align 1, !dbg !1553
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:04:45 GMT +00:00\00", align 1, !dbg !1564
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !1569
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !1575

; Function Attrs: noinline nounwind optsize
define dso_local i32 @lzma_decode(i8* noundef %0, i32* nocapture noundef %1, i8* noundef %2, i32* nocapture noundef %3, i8* noundef %4, i32 noundef %5, %struct.lzma_alloc_t* noundef %6) local_unnamed_addr #0 !dbg !1942 {
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !1956, metadata !DIExpression()), !dbg !1971
  call void @llvm.dbg.value(metadata i32* %1, metadata !1957, metadata !DIExpression()), !dbg !1971
  call void @llvm.dbg.value(metadata i8* %2, metadata !1958, metadata !DIExpression()), !dbg !1971
  call void @llvm.dbg.value(metadata i32* %3, metadata !1959, metadata !DIExpression()), !dbg !1971
  call void @llvm.dbg.value(metadata i8* %4, metadata !1960, metadata !DIExpression()), !dbg !1971
  call void @llvm.dbg.value(metadata i32 %5, metadata !1961, metadata !DIExpression()), !dbg !1971
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %6, metadata !1962, metadata !DIExpression()), !dbg !1971
  call void @llvm.dbg.value(metadata i32 0, metadata !1963, metadata !DIExpression()), !dbg !1971
  call void @llvm.dbg.value(metadata i32 0, metadata !1965, metadata !DIExpression()), !dbg !1971
  %11 = bitcast i32* %8 to i8*, !dbg !1972
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #23, !dbg !1972
  %12 = load i32, i32* %1, align 4, !dbg !1973
  call void @llvm.dbg.value(metadata i32 %12, metadata !1966, metadata !DIExpression()), !dbg !1971
  store i32 %12, i32* %8, align 4, !dbg !1974
  %13 = bitcast i32* %9 to i8*, !dbg !1975
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #23, !dbg !1975
  %14 = load i32, i32* %3, align 4, !dbg !1976
  call void @llvm.dbg.value(metadata i32 %14, metadata !1967, metadata !DIExpression()), !dbg !1971
  store i32 %14, i32* %9, align 4, !dbg !1977
  %15 = bitcast i32* %10 to i8*, !dbg !1978
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #23, !dbg !1978
  %16 = bitcast %struct.lzma_alloc_t* %6 to %struct.lzma_alloc_t*, !dbg !1979
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %16, metadata !1968, metadata !DIExpression()), !dbg !1971
  call void @llvm.dbg.value(metadata i32* %8, metadata !1966, metadata !DIExpression(DW_OP_deref)), !dbg !1971
  call void @llvm.dbg.value(metadata i32* %9, metadata !1967, metadata !DIExpression(DW_OP_deref)), !dbg !1971
  call void @llvm.dbg.value(metadata i32* %10, metadata !1969, metadata !DIExpression(DW_OP_deref)), !dbg !1971
  %17 = call i32 @LzmaDecode(i8* noundef %0, i32* noundef nonnull %8, i8* noundef %2, i32* noundef nonnull %9, i8* noundef %4, i32 noundef %5, i32 noundef 0, i32* noundef nonnull %10, %struct.lzma_alloc_t* noundef %16) #24, !dbg !1980
  call void @llvm.dbg.value(metadata i32 %17, metadata !1963, metadata !DIExpression()), !dbg !1971
  %18 = load i32, i32* %8, align 4, !dbg !1981
  call void @llvm.dbg.value(metadata i32 %18, metadata !1966, metadata !DIExpression()), !dbg !1971
  store i32 %18, i32* %1, align 4, !dbg !1982
  %19 = load i32, i32* %9, align 4, !dbg !1983
  call void @llvm.dbg.value(metadata i32 %19, metadata !1967, metadata !DIExpression()), !dbg !1971
  store i32 %19, i32* %3, align 4, !dbg !1984
  call void @llvm.dbg.value(metadata i32 %17, metadata !1965, metadata !DIExpression()), !dbg !1971
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #23, !dbg !1985
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #23, !dbg !1985
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #23, !dbg !1985
  ret i32 %17, !dbg !1986
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: noinline nounwind optsize
define dso_local i32 @lzma_decode2flash(i8* noundef %0, i32 noundef %1, i8* noundef %2, %struct.lzma_alloc_t* noundef %3) local_unnamed_addr #0 !dbg !1987 {
  %5 = alloca %struct.CLzmaDec, align 4
  %6 = alloca [13 x i8], align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !1991, metadata !DIExpression()), !dbg !2038
  call void @llvm.dbg.value(metadata i32 %1, metadata !1992, metadata !DIExpression()), !dbg !2038
  call void @llvm.dbg.value(metadata i8* %2, metadata !1993, metadata !DIExpression()), !dbg !2038
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %3, metadata !1994, metadata !DIExpression()), !dbg !2038
  call void @llvm.dbg.value(metadata i32 0, metadata !1997, metadata !DIExpression()), !dbg !2038
  %7 = bitcast %struct.CLzmaDec* %5 to i8*, !dbg !2039
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %7) #23, !dbg !2039
  call void @llvm.dbg.declare(metadata %struct.CLzmaDec* %5, metadata !1999, metadata !DIExpression()), !dbg !2040
  %8 = getelementptr inbounds [13 x i8], [13 x i8]* %6, i32 0, i32 0, !dbg !2041
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %8) #23, !dbg !2041
  call void @llvm.dbg.declare(metadata [13 x i8]* %6, metadata !2032, metadata !DIExpression()), !dbg !2042
  call void @llvm.dbg.value(metadata i32 0, metadata !2037, metadata !DIExpression()), !dbg !2038
  %9 = bitcast %struct.lzma_alloc_t* %3 to %struct.lzma_alloc_t*, !dbg !2043
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %9, metadata !1998, metadata !DIExpression()), !dbg !2038
  %10 = ptrtoint i8* %0 to i32, !dbg !2044
  %11 = and i32 %10, 4095, !dbg !2046
  %12 = icmp eq i32 %11, 0, !dbg !2047
  br i1 %12, label %14, label %13, !dbg !2048

13:                                               ; preds = %4
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i32 0, i32 0)) #24, !dbg !2049
  br label %46, !dbg !2051

14:                                               ; preds = %4
  %15 = load i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !2052
  %16 = icmp eq i32 %15, 9507, !dbg !2054
  %17 = ptrtoint i8* %2 to i32
  %18 = icmp sgt i8* %2, inttoptr (i32 134217728 to i8*)
  %19 = and i1 %18, %16, !dbg !2055
  %20 = add i32 %17, -134217728, !dbg !2055
  %21 = select i1 %19, i32 %20, i32 %17, !dbg !2055
  %22 = call i32 @hal_flash_read(i32 noundef %21, i8* noundef nonnull %8, i32 noundef 13) #24, !dbg !2056
  call void @llvm.dbg.value(metadata i32 %22, metadata !2036, metadata !DIExpression()), !dbg !2038
  %23 = icmp eq i32 %22, 0, !dbg !2057
  br i1 %23, label %25, label %24, !dbg !2059

24:                                               ; preds = %14
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !2060
  br label %46, !dbg !2062

25:                                               ; preds = %14, %25
  %26 = phi i32 [ %35, %25 ], [ 0, %14 ]
  %27 = phi i32 [ %34, %25 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !1996, metadata !DIExpression()), !dbg !2038
  call void @llvm.dbg.value(metadata i32 %27, metadata !1995, metadata !DIExpression()), !dbg !2038
  %28 = add nuw nsw i32 %26, 5, !dbg !2063
  %29 = getelementptr inbounds [13 x i8], [13 x i8]* %6, i32 0, i32 %28, !dbg !2066
  %30 = load i8, i8* %29, align 1, !dbg !2066
  %31 = zext i8 %30 to i32, !dbg !2067
  %32 = shl nuw nsw i32 %26, 3, !dbg !2068
  %33 = shl i32 %31, %32, !dbg !2069
  %34 = add i32 %33, %27, !dbg !2070
  call void @llvm.dbg.value(metadata i32 %34, metadata !1995, metadata !DIExpression()), !dbg !2038
  %35 = add nuw nsw i32 %26, 1, !dbg !2071
  call void @llvm.dbg.value(metadata i32 %35, metadata !1996, metadata !DIExpression()), !dbg !2038
  %36 = icmp eq i32 %35, 8, !dbg !2072
  br i1 %36, label %37, label %25, !dbg !2073, !llvm.loop !2074

37:                                               ; preds = %25
  %38 = icmp ugt i32 %34, %1, !dbg !2076
  br i1 %38, label %39, label %40, !dbg !2078

39:                                               ; preds = %37
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)) #24, !dbg !2079
  br label %46, !dbg !2081

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %5, i32 0, i32 2, !dbg !2082
  store i8* null, i8** %41, align 4, !dbg !2082
  %42 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %5, i32 0, i32 1, !dbg !2082
  store i16* null, i16** %42, align 4, !dbg !2082
  %43 = call i32 @LzmaDec_Allocate(%struct.CLzmaDec* noundef nonnull %5, i8* noundef nonnull %8, i32 noundef 5, %struct.lzma_alloc_t* noundef %9) #24, !dbg !2084
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0)) #24, !dbg !2085
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i32 0, i32 0), i8* noundef %0) #24, !dbg !2086
  %44 = getelementptr inbounds i8, i8* %2, i32 13, !dbg !2087
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i32 0, i32 0), i8* noundef nonnull %44) #24, !dbg !2087
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i32 0, i32 0), i32 noundef %34) #24, !dbg !2088
  call void @llvm.dbg.value(metadata i32 0, metadata !2037, metadata !DIExpression()), !dbg !2038
  call void @llvm.dbg.value(metadata i32 undef, metadata !2037, metadata !DIExpression()), !dbg !2038
  call void @llvm.dbg.value(metadata i32 undef, metadata !2037, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2038
  %45 = call fastcc i32 @Decode2Ram(%struct.CLzmaDec* noundef nonnull %5, i8* noundef %0, i8* noundef nonnull %44, i32 noundef %34, %struct.lzma_alloc_t* noundef %9) #25, !dbg !2089
  call void @llvm.dbg.value(metadata i32 %45, metadata !1997, metadata !DIExpression()), !dbg !2038
  call void @LzmaDec_Free(%struct.CLzmaDec* noundef nonnull %5, %struct.lzma_alloc_t* noundef %9) #24, !dbg !2090
  br label %46, !dbg !2091

46:                                               ; preds = %40, %39, %24, %13
  %47 = phi i32 [ 2, %13 ], [ 8, %24 ], [ 2, %39 ], [ %45, %40 ], !dbg !2038
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %8) #23, !dbg !2092
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %7) #23, !dbg !2092
  ret i32 %47, !dbg !2092
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @Decode2Ram(%struct.CLzmaDec* noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3, %struct.lzma_alloc_t* noundef %4) unnamed_addr #0 !dbg !2093 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !2098, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i8* %1, metadata !2099, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i8* %2, metadata !2100, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 %3, metadata !2101, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %4, metadata !2102, metadata !DIExpression()), !dbg !2119
  %9 = icmp ne i32 %3, -1, !dbg !2120
  call void @llvm.dbg.value(metadata i1 %9, metadata !2103, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !2119
  call void @llvm.dbg.value(metadata i32 0, metadata !2106, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 0, metadata !2107, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 0, metadata !2108, metadata !DIExpression()), !dbg !2119
  %10 = bitcast i32* %6 to i8*, !dbg !2121
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !2121
  %11 = bitcast i32* %7 to i8*, !dbg !2122
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #23, !dbg !2122
  %12 = bitcast i32* %8 to i8*, !dbg !2123
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #23, !dbg !2123
  call void @llvm.dbg.value(metadata i8* %2, metadata !2116, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i8* %1, metadata !2117, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 0, metadata !2118, metadata !DIExpression()), !dbg !2119
  %13 = getelementptr inbounds %struct.lzma_alloc_t, %struct.lzma_alloc_t* %4, i32 0, i32 0, !dbg !2124
  %14 = load i8* (i8*, i32)*, i8* (i8*, i32)** %13, align 4, !dbg !2124
  %15 = bitcast %struct.lzma_alloc_t* %4 to i8*, !dbg !2126
  %16 = tail call i8* %14(i8* noundef %15, i32 noundef 4096) #24, !dbg !2127
  call void @llvm.dbg.value(metadata i8* %16, metadata !2104, metadata !DIExpression()), !dbg !2119
  %17 = icmp eq i8* %16, null, !dbg !2128
  br i1 %17, label %18, label %19, !dbg !2129

18:                                               ; preds = %5
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i32 0, i32 0)) #24, !dbg !2130
  br label %100, !dbg !2132

19:                                               ; preds = %5
  %20 = load i8* (i8*, i32)*, i8* (i8*, i32)** %13, align 4, !dbg !2133
  %21 = tail call i8* %20(i8* noundef nonnull %15, i32 noundef 4096) #24, !dbg !2135
  call void @llvm.dbg.value(metadata i8* %21, metadata !2105, metadata !DIExpression()), !dbg !2119
  %22 = icmp eq i8* %21, null, !dbg !2136
  br i1 %22, label %23, label %24, !dbg !2137

23:                                               ; preds = %19
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i32 0, i32 0)) #24, !dbg !2138
  br label %100, !dbg !2140

24:                                               ; preds = %19
  tail call void @LzmaDec_Init(%struct.CLzmaDec* noundef %0) #24, !dbg !2141
  %25 = tail call i32 @hal_flash_init() #24, !dbg !2142
  call void @llvm.dbg.value(metadata i32 %25, metadata !2109, metadata !DIExpression()), !dbg !2119
  %26 = icmp slt i32 %25, 0, !dbg !2143
  br i1 %26, label %27, label %28, !dbg !2145

27:                                               ; preds = %24
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0)) #24, !dbg !2146
  br label %100, !dbg !2148

28:                                               ; preds = %24, %98
  %29 = phi i32 [ %62, %98 ], [ %3, %24 ]
  %30 = phi i32 [ %60, %98 ], [ 0, %24 ], !dbg !2119
  %31 = phi i32 [ %50, %98 ], [ 0, %24 ], !dbg !2119
  %32 = phi i8* [ %51, %98 ], [ %2, %24 ], !dbg !2119
  %33 = phi i8* [ %70, %98 ], [ %1, %24 ], !dbg !2119
  call void @llvm.dbg.value(metadata i8* %33, metadata !2117, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i8* %32, metadata !2116, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 0, metadata !2108, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 %31, metadata !2107, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 %30, metadata !2106, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 %29, metadata !2101, metadata !DIExpression()), !dbg !2119
  %34 = icmp eq i32 %30, %31, !dbg !2149
  br i1 %34, label %35, label %48, !dbg !2154

35:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 4096, metadata !2107, metadata !DIExpression()), !dbg !2119
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i32 0, i32 0), i8* noundef %32) #24, !dbg !2155
  call void @llvm.dbg.value(metadata i32 0, metadata !2118, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 undef, metadata !2118, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 undef, metadata !2118, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2119
  %36 = load i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !2157
  %37 = icmp eq i32 %36, 9507, !dbg !2159
  %38 = ptrtoint i8* %32 to i32
  %39 = icmp sgt i8* %32, inttoptr (i32 134217728 to i8*)
  %40 = select i1 %37, i1 %39, i1 false, !dbg !2160
  %41 = add i32 %38, -134217728, !dbg !2160
  %42 = select i1 %40, i32 %41, i32 %38, !dbg !2160
  %43 = call i32 @hal_flash_read(i32 noundef %42, i8* noundef nonnull %16, i32 noundef 4096) #24, !dbg !2161
  call void @llvm.dbg.value(metadata i32 %43, metadata !2109, metadata !DIExpression()), !dbg !2119
  %44 = icmp eq i32 %43, 0, !dbg !2162
  br i1 %44, label %46, label %45, !dbg !2164

45:                                               ; preds = %35
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i32 0, i32 0)) #24, !dbg !2165
  br label %100, !dbg !2167

46:                                               ; preds = %35
  %47 = getelementptr inbounds i8, i8* %32, i32 4096, !dbg !2168
  call void @llvm.dbg.value(metadata i8* %47, metadata !2116, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 0, metadata !2106, metadata !DIExpression()), !dbg !2119
  br label %48, !dbg !2169

48:                                               ; preds = %46, %28
  %49 = phi i32 [ 0, %46 ], [ %30, %28 ], !dbg !2119
  %50 = phi i32 [ 4096, %46 ], [ %31, %28 ], !dbg !2119
  %51 = phi i8* [ %47, %46 ], [ %32, %28 ], !dbg !2119
  call void @llvm.dbg.value(metadata i8* %51, metadata !2116, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 %50, metadata !2107, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 %49, metadata !2106, metadata !DIExpression()), !dbg !2119
  %52 = sub i32 %50, %49, !dbg !2170
  call void @llvm.dbg.value(metadata i32 %52, metadata !2111, metadata !DIExpression()), !dbg !2119
  store i32 %52, i32* %6, align 4, !dbg !2171
  call void @llvm.dbg.value(metadata i32 4096, metadata !2112, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 0, metadata !2114, metadata !DIExpression()), !dbg !2119
  %53 = icmp ult i32 %29, 4096
  %54 = select i1 %9, i1 %53, i1 false, !dbg !2172
  %55 = select i1 %54, i32 %29, i32 4096, !dbg !2172
  store i32 %55, i32* %7, align 4, !dbg !2174
  %56 = zext i1 %54 to i32, !dbg !2172
  call void @llvm.dbg.value(metadata i32 %56, metadata !2114, metadata !DIExpression()), !dbg !2119
  %57 = getelementptr inbounds i8, i8* %16, i32 %49, !dbg !2175
  call void @llvm.dbg.value(metadata i32* %6, metadata !2111, metadata !DIExpression(DW_OP_deref)), !dbg !2119
  call void @llvm.dbg.value(metadata i32* %7, metadata !2112, metadata !DIExpression(DW_OP_deref)), !dbg !2119
  call void @llvm.dbg.value(metadata i32* %8, metadata !2113, metadata !DIExpression(DW_OP_deref)), !dbg !2119
  %58 = call i32 @LzmaDec_DecodeToBuf(%struct.CLzmaDec* noundef %0, i8* noundef nonnull %21, i32* noundef nonnull %7, i8* noundef nonnull %57, i32* noundef nonnull %6, i32 noundef %56, i32* noundef nonnull %8) #24, !dbg !2176
  call void @llvm.dbg.value(metadata i32 %58, metadata !2110, metadata !DIExpression()), !dbg !2119
  %59 = load i32, i32* %6, align 4, !dbg !2177
  call void @llvm.dbg.value(metadata i32 %59, metadata !2111, metadata !DIExpression()), !dbg !2119
  %60 = add i32 %59, %49, !dbg !2178
  call void @llvm.dbg.value(metadata i32 %60, metadata !2106, metadata !DIExpression()), !dbg !2119
  %61 = load i32, i32* %7, align 4, !dbg !2179
  call void @llvm.dbg.value(metadata i32 %61, metadata !2112, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 %61, metadata !2108, metadata !DIExpression()), !dbg !2119
  %62 = sub i32 %29, %61, !dbg !2180
  call void @llvm.dbg.value(metadata i32 %62, metadata !2101, metadata !DIExpression()), !dbg !2119
  %63 = call fastcc i32 @Write2Flash(i8* noundef %33, i8* noundef nonnull %21, i32 noundef %61) #25, !dbg !2181
  %64 = icmp eq i32 %63, 0, !dbg !2183
  br i1 %64, label %69, label %65, !dbg !2184

65:                                               ; preds = %48
  %66 = getelementptr inbounds %struct.lzma_alloc_t, %struct.lzma_alloc_t* %4, i32 0, i32 1, !dbg !2185
  %67 = load void (i8*, i8*)*, void (i8*, i8*)** %66, align 4, !dbg !2185
  call void %67(i8* noundef %15, i8* noundef nonnull %16) #24, !dbg !2187
  %68 = load void (i8*, i8*)*, void (i8*, i8*)** %66, align 4, !dbg !2188
  call void %68(i8* noundef %15, i8* noundef nonnull %21) #24, !dbg !2189
  br label %100, !dbg !2190

69:                                               ; preds = %48
  %70 = getelementptr inbounds i8, i8* %33, i32 %61, !dbg !2191
  call void @llvm.dbg.value(metadata i8* %70, metadata !2117, metadata !DIExpression()), !dbg !2119
  call void @llvm.dbg.value(metadata i32 0, metadata !2108, metadata !DIExpression()), !dbg !2119
  %71 = icmp eq i32 %58, 0, !dbg !2192
  br i1 %71, label %72, label %75, !dbg !2194

72:                                               ; preds = %69
  %73 = icmp eq i32 %62, 0
  %74 = select i1 %9, i1 %73, i1 false, !dbg !2195
  br i1 %74, label %75, label %79, !dbg !2195

75:                                               ; preds = %72, %69
  %76 = getelementptr inbounds %struct.lzma_alloc_t, %struct.lzma_alloc_t* %4, i32 0, i32 1, !dbg !2196
  %77 = load void (i8*, i8*)*, void (i8*, i8*)** %76, align 4, !dbg !2196
  call void %77(i8* noundef %15, i8* noundef nonnull %16) #24, !dbg !2198
  %78 = load void (i8*, i8*)*, void (i8*, i8*)** %76, align 4, !dbg !2199
  call void %78(i8* noundef %15, i8* noundef nonnull %21) #24, !dbg !2200
  br label %100, !dbg !2201

79:                                               ; preds = %72
  %80 = load i32, i32* %6, align 4, !dbg !2202
  call void @llvm.dbg.value(metadata i32 %80, metadata !2111, metadata !DIExpression()), !dbg !2119
  %81 = icmp eq i32 %80, 0, !dbg !2204
  %82 = load i32, i32* %7, align 4
  call void @llvm.dbg.value(metadata i32 %82, metadata !2112, metadata !DIExpression()), !dbg !2119
  %83 = icmp eq i32 %82, 0
  %84 = select i1 %81, i1 %83, i1 false, !dbg !2205
  br i1 %84, label %85, label %93, !dbg !2205

85:                                               ; preds = %79
  %86 = load i32, i32* %8, align 4
  call void @llvm.dbg.value(metadata i32 %86, metadata !2113, metadata !DIExpression()), !dbg !2119
  %87 = icmp ne i32 %86, 1
  %88 = select i1 %9, i1 true, i1 %87, !dbg !2206
  %89 = getelementptr inbounds %struct.lzma_alloc_t, %struct.lzma_alloc_t* %4, i32 0, i32 1, !dbg !2209
  %90 = load void (i8*, i8*)*, void (i8*, i8*)** %89, align 4, !dbg !2209
  call void %90(i8* noundef %15, i8* noundef nonnull %16) #24, !dbg !2209
  %91 = load void (i8*, i8*)*, void (i8*, i8*)** %89, align 4, !dbg !2209
  call void %91(i8* noundef %15, i8* noundef nonnull %21) #24, !dbg !2209
  %92 = zext i1 %88 to i32, !dbg !2209
  br label %100, !dbg !2209

93:                                               ; preds = %79
  br i1 %73, label %94, label %98, !dbg !2210

94:                                               ; preds = %93
  %95 = getelementptr inbounds %struct.lzma_alloc_t, %struct.lzma_alloc_t* %4, i32 0, i32 1, !dbg !2211
  %96 = load void (i8*, i8*)*, void (i8*, i8*)** %95, align 4, !dbg !2211
  call void %96(i8* noundef %15, i8* noundef nonnull %16) #24, !dbg !2214
  %97 = load void (i8*, i8*)*, void (i8*, i8*)** %95, align 4, !dbg !2215
  call void %97(i8* noundef %15, i8* noundef nonnull %21) #24, !dbg !2216
  br label %100, !dbg !2217

98:                                               ; preds = %93
  %99 = call i32 @hal_wdt_feed(i32 noundef -559035650) #24, !dbg !2218
  br label %28, !dbg !2219, !llvm.loop !2220

100:                                              ; preds = %85, %94, %75, %65, %45, %27, %23, %18
  %101 = phi i32 [ 2, %18 ], [ 2, %23 ], [ 2, %27 ], [ 8, %45 ], [ 9, %65 ], [ %58, %75 ], [ 0, %94 ], [ %92, %85 ], !dbg !2119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #23, !dbg !2223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #23, !dbg !2223
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !2223
  ret i32 %101, !dbg !2223
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @Write2Flash(i8* noundef %0, i8* noundef %1, i32 noundef %2) unnamed_addr #0 !dbg !2224 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2228, metadata !DIExpression()), !dbg !2238
  call void @llvm.dbg.value(metadata i8* %1, metadata !2229, metadata !DIExpression()), !dbg !2238
  call void @llvm.dbg.value(metadata i32 %2, metadata !2230, metadata !DIExpression()), !dbg !2238
  %4 = getelementptr inbounds i8, i8* %0, i32 %2, !dbg !2239
  %5 = getelementptr inbounds i8, i8* %4, i32 -1, !dbg !2240
  call void @llvm.dbg.value(metadata i8* %5, metadata !2233, metadata !DIExpression()), !dbg !2238
  %6 = ptrtoint i8* %5 to i32, !dbg !2241
  %7 = lshr i32 %6, 12, !dbg !2242
  call void @llvm.dbg.value(metadata i32 %7, metadata !2234, metadata !DIExpression()), !dbg !2238
  %8 = ptrtoint i8* %0 to i32, !dbg !2243
  %9 = lshr i32 %8, 12, !dbg !2244
  call void @llvm.dbg.value(metadata i32 %9, metadata !2231, metadata !DIExpression()), !dbg !2238
  %10 = and i32 %8, -4096, !dbg !2245
  %11 = inttoptr i32 %10 to i8*, !dbg !2246
  call void @llvm.dbg.value(metadata i8* %11, metadata !2232, metadata !DIExpression()), !dbg !2238
  %12 = icmp ne i8* %11, %0, !dbg !2247
  %13 = zext i1 %12 to i32, !dbg !2249
  %14 = add nuw nsw i32 %9, %13, !dbg !2249
  call void @llvm.dbg.value(metadata i32 %14, metadata !2231, metadata !DIExpression()), !dbg !2238
  call void @llvm.dbg.value(metadata i32 %14, metadata !2235, metadata !DIExpression()), !dbg !2238
  %15 = icmp ugt i32 %14, %7, !dbg !2250
  br i1 %15, label %30, label %19, !dbg !2253

16:                                               ; preds = %19
  %17 = add nuw nsw i32 %20, 1, !dbg !2254
  call void @llvm.dbg.value(metadata i32 %17, metadata !2235, metadata !DIExpression()), !dbg !2238
  call void @llvm.dbg.value(metadata i32 %20, metadata !2235, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2238
  %18 = icmp eq i32 %20, %7, !dbg !2250
  br i1 %18, label %30, label %19, !dbg !2253, !llvm.loop !2255

19:                                               ; preds = %3, %16
  %20 = phi i32 [ %17, %16 ], [ %14, %3 ]
  call void @llvm.dbg.value(metadata i32 %20, metadata !2235, metadata !DIExpression()), !dbg !2238
  %21 = shl i32 %20, 12, !dbg !2257
  call void @llvm.dbg.value(metadata i32 %21, metadata !2236, metadata !DIExpression()), !dbg !2238
  %22 = load i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !2259
  %23 = icmp eq i32 %22, 9507, !dbg !2261
  %24 = icmp ugt i32 %21, 134217728
  %25 = select i1 %23, i1 %24, i1 false, !dbg !2262
  %26 = add i32 %21, -134217728, !dbg !2262
  %27 = select i1 %25, i32 %26, i32 %21, !dbg !2262
  %28 = tail call i32 @hal_flash_erase(i32 noundef %27, i32 noundef 0) #24, !dbg !2263
  call void @llvm.dbg.value(metadata i32 %28, metadata !2237, metadata !DIExpression()), !dbg !2238
  %29 = icmp slt i32 %28, 0, !dbg !2264
  call void @llvm.dbg.value(metadata i32 %20, metadata !2235, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2238
  br i1 %29, label %40, label %16, !dbg !2266

30:                                               ; preds = %16, %3
  %31 = load i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !2267
  %32 = icmp eq i32 %31, 9507, !dbg !2269
  %33 = icmp sgt i8* %0, inttoptr (i32 134217728 to i8*)
  %34 = and i1 %33, %32, !dbg !2270
  %35 = add i32 %8, -134217728, !dbg !2270
  %36 = select i1 %34, i32 %35, i32 %8, !dbg !2270
  %37 = tail call i32 @hal_flash_write(i32 noundef %36, i8* noundef %1, i32 noundef %2) #24, !dbg !2271
  call void @llvm.dbg.value(metadata i32 %37, metadata !2237, metadata !DIExpression()), !dbg !2238
  %38 = icmp slt i32 %37, 0, !dbg !2272
  br i1 %38, label %39, label %40, !dbg !2274

39:                                               ; preds = %30
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i32 0, i32 0)) #24, !dbg !2275
  br label %40, !dbg !2277

40:                                               ; preds = %19, %30, %39
  %41 = phi i32 [ -1, %39 ], [ 0, %30 ], [ -7, %19 ], !dbg !2238
  ret i32 %41, !dbg !2278
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LzmaDec_InitDicAndState(%struct.CLzmaDec* nocapture noundef writeonly %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #3 !dbg !2279 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !2313, metadata !DIExpression()), !dbg !2316
  call void @llvm.dbg.value(metadata i32 %1, metadata !2314, metadata !DIExpression()), !dbg !2316
  call void @llvm.dbg.value(metadata i32 %2, metadata !2315, metadata !DIExpression()), !dbg !2316
  %4 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 13, !dbg !2317
  store i32 1, i32* %4, align 4, !dbg !2318
  %5 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 12, !dbg !2319
  store i32 0, i32* %5, align 4, !dbg !2320
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 16, !dbg !2321
  store i32 0, i32* %6, align 4, !dbg !2322
  %7 = icmp eq i32 %1, 0, !dbg !2323
  br i1 %7, label %12, label %8, !dbg !2325

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 8, !dbg !2326
  store i32 0, i32* %9, align 4, !dbg !2328
  %10 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 9, !dbg !2329
  store i32 0, i32* %10, align 4, !dbg !2330
  %11 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 14, !dbg !2331
  store i32 1, i32* %11, align 4, !dbg !2332
  br label %12, !dbg !2333

12:                                               ; preds = %8, %3
  %13 = icmp eq i32 %2, 0, !dbg !2334
  br i1 %13, label %16, label %14, !dbg !2336

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 14, !dbg !2337
  store i32 1, i32* %15, align 4, !dbg !2338
  br label %16, !dbg !2339

16:                                               ; preds = %14, %12
  ret void, !dbg !2340
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @LzmaDec_Init(%struct.CLzmaDec* nocapture noundef writeonly %0) local_unnamed_addr #3 !dbg !2341 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !2345, metadata !DIExpression()), !dbg !2346
  %2 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 6, !dbg !2347
  store i32 0, i32* %2, align 4, !dbg !2348
  tail call void @LzmaDec_InitDicAndState(%struct.CLzmaDec* noundef %0, i32 noundef 1, i32 noundef 1) #25, !dbg !2349
  ret void, !dbg !2350
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @LzmaDec_DecodeToDic(%struct.CLzmaDec* noundef %0, i32 noundef %1, i8* noundef %2, i32* nocapture noundef %3, i32 noundef %4, i32* nocapture noundef writeonly %5) local_unnamed_addr #0 !dbg !2351 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !2357, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32 %1, metadata !2358, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i8* %2, metadata !2359, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32* %3, metadata !2360, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32 %4, metadata !2361, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32* %5, metadata !2362, metadata !DIExpression()), !dbg !2381
  %7 = load i32, i32* %3, align 4, !dbg !2382
  call void @llvm.dbg.value(metadata i32 %7, metadata !2363, metadata !DIExpression()), !dbg !2381
  store i32 0, i32* %3, align 4, !dbg !2383
  tail call fastcc void @LzmaDec_WriteRem(%struct.CLzmaDec* noundef %0, i32 noundef %1) #25, !dbg !2384
  store i32 0, i32* %5, align 4, !dbg !2385
  %8 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 12
  call void @llvm.dbg.value(metadata i8* %2, metadata !2359, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32 %7, metadata !2363, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i8* poison, metadata !2369, metadata !DIExpression()), !dbg !2386
  %9 = load i32, i32* %8, align 4, !dbg !2387
  %10 = icmp eq i32 %9, 274, !dbg !2388
  br i1 %10, label %175, label %11, !dbg !2389

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 13
  %13 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 16
  %14 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 17, i32 0
  %15 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 17, i32 1
  %16 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 17, i32 2
  %17 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 17, i32 3
  %18 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 17, i32 4
  %19 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 5
  %20 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 4
  %21 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 6
  %22 = icmp eq i32 %4, 0
  %23 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 14
  %24 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 3
  %25 = ptrtoint i8* %14 to i32
  br label %26, !dbg !2389

26:                                               ; preds = %11, %169
  %27 = phi i8* [ %2, %11 ], [ %171, %169 ]
  %28 = phi i32 [ %7, %11 ], [ %172, %169 ]
  call void @llvm.dbg.value(metadata i8* %27, metadata !2359, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32 %28, metadata !2363, metadata !DIExpression()), !dbg !2381
  %29 = load i32, i32* %12, align 4, !dbg !2390
  %30 = icmp eq i32 %29, 0, !dbg !2392
  br i1 %30, label %72, label %31, !dbg !2393

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i8* %27, metadata !2359, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32 %28, metadata !2363, metadata !DIExpression()), !dbg !2381
  %32 = icmp eq i32 %28, 0, !dbg !2394
  br i1 %32, label %47, label %33, !dbg !2398

33:                                               ; preds = %31, %38
  %34 = phi i8* [ %39, %38 ], [ %27, %31 ]
  %35 = phi i32 [ %45, %38 ], [ %28, %31 ]
  call void @llvm.dbg.value(metadata i8* %34, metadata !2359, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32 %35, metadata !2363, metadata !DIExpression()), !dbg !2381
  %36 = load i32, i32* %13, align 4, !dbg !2399
  %37 = icmp ult i32 %36, 5, !dbg !2400
  br i1 %37, label %38, label %52, !dbg !2401

38:                                               ; preds = %33
  %39 = getelementptr inbounds i8, i8* %34, i32 1, !dbg !2402
  call void @llvm.dbg.value(metadata i8* %39, metadata !2359, metadata !DIExpression()), !dbg !2381
  %40 = load i8, i8* %34, align 1, !dbg !2403
  %41 = add nuw nsw i32 %36, 1, !dbg !2404
  store i32 %41, i32* %13, align 4, !dbg !2404
  %42 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 17, i32 %36, !dbg !2405
  store i8 %40, i8* %42, align 1, !dbg !2406
  %43 = load i32, i32* %3, align 4, !dbg !2407
  %44 = add i32 %43, 1, !dbg !2407
  store i32 %44, i32* %3, align 4, !dbg !2407
  %45 = add i32 %35, -1, !dbg !2408
  call void @llvm.dbg.value(metadata i32 %45, metadata !2363, metadata !DIExpression()), !dbg !2381
  %46 = icmp eq i32 %45, 0, !dbg !2394
  br i1 %46, label %47, label %33, !dbg !2398, !llvm.loop !2409

47:                                               ; preds = %38, %31
  %48 = phi i8* [ %27, %31 ], [ %39, %38 ]
  %49 = load i32, i32* %13, align 4, !dbg !2411
  %50 = icmp ult i32 %49, 5, !dbg !2413
  br i1 %50, label %51, label %52, !dbg !2414

51:                                               ; preds = %47
  store i32 3, i32* %5, align 4, !dbg !2415
  br label %185, !dbg !2417

52:                                               ; preds = %33, %47
  %53 = phi i8* [ %48, %47 ], [ %34, %33 ]
  %54 = phi i32 [ 0, %47 ], [ %35, %33 ]
  %55 = load i8, i8* %14, align 4, !dbg !2418
  %56 = icmp eq i8 %55, 0, !dbg !2420
  br i1 %56, label %57, label %185, !dbg !2421

57:                                               ; preds = %52
  %58 = load i8, i8* %15, align 1, !dbg !2422
  %59 = zext i8 %58 to i32, !dbg !2423
  %60 = shl nuw i32 %59, 24, !dbg !2424
  %61 = load i8, i8* %16, align 2, !dbg !2425
  %62 = zext i8 %61 to i32, !dbg !2426
  %63 = shl nuw nsw i32 %62, 16, !dbg !2427
  %64 = or i32 %63, %60, !dbg !2428
  %65 = load i8, i8* %17, align 1, !dbg !2429
  %66 = zext i8 %65 to i32, !dbg !2430
  %67 = shl nuw nsw i32 %66, 8, !dbg !2431
  %68 = or i32 %64, %67, !dbg !2432
  %69 = load i8, i8* %18, align 4, !dbg !2433
  %70 = zext i8 %69 to i32, !dbg !2434
  %71 = or i32 %68, %70, !dbg !2435
  store i32 %71, i32* %19, align 4, !dbg !2436
  store i32 -1, i32* %20, align 4, !dbg !2437
  store i32 0, i32* %12, align 4, !dbg !2438
  store i32 0, i32* %13, align 4, !dbg !2439
  br label %72, !dbg !2440

72:                                               ; preds = %57, %26
  %73 = phi i32 [ %54, %57 ], [ %28, %26 ], !dbg !2441
  %74 = phi i8* [ %53, %57 ], [ %27, %26 ]
  call void @llvm.dbg.value(metadata i8* %74, metadata !2359, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32 %73, metadata !2363, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32 0, metadata !2364, metadata !DIExpression()), !dbg !2442
  %75 = load i32, i32* %21, align 4, !dbg !2443
  %76 = icmp ult i32 %75, %1, !dbg !2445
  br i1 %76, label %88, label %77, !dbg !2446

77:                                               ; preds = %72
  %78 = load i32, i32* %8, align 4, !dbg !2447
  %79 = icmp eq i32 %78, 0, !dbg !2450
  br i1 %79, label %80, label %85, !dbg !2451

80:                                               ; preds = %77
  %81 = load i32, i32* %19, align 4, !dbg !2452
  %82 = icmp eq i32 %81, 0, !dbg !2453
  br i1 %82, label %83, label %84, !dbg !2454

83:                                               ; preds = %80
  store i32 4, i32* %5, align 4, !dbg !2455
  br label %185, !dbg !2457

84:                                               ; preds = %80
  br i1 %22, label %86, label %88, !dbg !2458

85:                                               ; preds = %77
  br i1 %22, label %86, label %87, !dbg !2458

86:                                               ; preds = %84, %85
  store i32 2, i32* %5, align 4, !dbg !2459
  br label %185, !dbg !2462

87:                                               ; preds = %85
  store i32 2, i32* %5, align 4, !dbg !2463
  br label %185, !dbg !2466

88:                                               ; preds = %84, %72
  %89 = xor i1 %76, true, !dbg !2442
  call void @llvm.dbg.value(metadata i32 undef, metadata !2364, metadata !DIExpression()), !dbg !2442
  %90 = load i32, i32* %23, align 4, !dbg !2467
  %91 = icmp eq i32 %90, 0, !dbg !2469
  br i1 %91, label %93, label %92, !dbg !2470

92:                                               ; preds = %88
  tail call fastcc void @LzmaDec_InitStateReal(%struct.CLzmaDec* noundef nonnull %0) #25, !dbg !2471
  br label %93, !dbg !2471

93:                                               ; preds = %92, %88
  %94 = load i32, i32* %13, align 4, !dbg !2472
  %95 = icmp eq i32 %94, 0, !dbg !2473
  br i1 %95, label %100, label %96, !dbg !2474

96:                                               ; preds = %93
  call void @llvm.dbg.value(metadata i32 0, metadata !2375, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.value(metadata i32 %94, metadata !2373, metadata !DIExpression()), !dbg !2475
  %97 = icmp ult i32 %94, 20, !dbg !2476
  %98 = icmp ne i32 %73, 0, !dbg !2477
  %99 = select i1 %97, i1 %98, i1 false, !dbg !2477
  br i1 %99, label %128, label %139, !dbg !2478

100:                                              ; preds = %93
  %101 = icmp ult i32 %73, 20, !dbg !2479
  %102 = select i1 %101, i1 true, i1 %89, !dbg !2480
  br i1 %102, label %103, label %114, !dbg !2480

103:                                              ; preds = %100
  %104 = tail call fastcc i32 @LzmaDec_TryDummy(%struct.CLzmaDec* noundef nonnull %0, i8* noundef %74, i32 noundef %73) #25, !dbg !2481
  call void @llvm.dbg.value(metadata i32 %104, metadata !2370, metadata !DIExpression()), !dbg !2482
  %105 = icmp eq i32 %104, 0, !dbg !2483
  br i1 %105, label %106, label %110, !dbg !2485

106:                                              ; preds = %103
  %107 = tail call i8* @memcpy(i8* noundef nonnull %14, i8* noundef %74, i32 noundef %73) #24, !dbg !2486
  store i32 %73, i32* %13, align 4, !dbg !2488
  %108 = load i32, i32* %3, align 4, !dbg !2489
  %109 = add i32 %108, %73, !dbg !2489
  store i32 %109, i32* %3, align 4, !dbg !2489
  store i32 3, i32* %5, align 4, !dbg !2490
  br label %185, !dbg !2491

110:                                              ; preds = %103
  %111 = icmp ne i32 %104, 2
  %112 = select i1 %89, i1 %111, i1 false, !dbg !2492
  br i1 %112, label %113, label %117, !dbg !2492

113:                                              ; preds = %110
  store i32 2, i32* %5, align 4, !dbg !2494
  br label %185, !dbg !2496

114:                                              ; preds = %100
  %115 = getelementptr inbounds i8, i8* %74, i32 -20, !dbg !2497
  %116 = getelementptr inbounds i8, i8* %115, i32 %73, !dbg !2498
  call void @llvm.dbg.value(metadata i8* %116, metadata !2369, metadata !DIExpression()), !dbg !2386
  br label %117

117:                                              ; preds = %110, %114
  %118 = phi i8* [ %116, %114 ], [ %74, %110 ]
  call void @llvm.dbg.value(metadata i8* %118, metadata !2369, metadata !DIExpression()), !dbg !2386
  store i8* %74, i8** %24, align 4, !dbg !2499
  %119 = tail call fastcc i32 @LzmaDec_DecodeReal2(%struct.CLzmaDec* noundef nonnull %0, i32 noundef %1, i8* noundef %118) #25, !dbg !2500
  %120 = icmp eq i32 %119, 0, !dbg !2502
  br i1 %120, label %121, label %185, !dbg !2503

121:                                              ; preds = %117
  %122 = load i8*, i8** %24, align 4, !dbg !2504
  %123 = ptrtoint i8* %122 to i32, !dbg !2505
  %124 = ptrtoint i8* %74 to i32, !dbg !2505
  %125 = sub i32 %123, %124, !dbg !2505
  call void @llvm.dbg.value(metadata i32 %125, metadata !2366, metadata !DIExpression()), !dbg !2386
  %126 = load i32, i32* %3, align 4, !dbg !2506
  %127 = add i32 %125, %126, !dbg !2506
  store i32 %127, i32* %3, align 4, !dbg !2506
  call void @llvm.dbg.value(metadata !DIArgList(i8* %74, i32 %125), metadata !2359, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2381
  call void @llvm.dbg.value(metadata !DIArgList(i32 %73, i32 %125), metadata !2363, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2381
  call void @llvm.dbg.value(metadata i8* %118, metadata !2369, metadata !DIExpression()), !dbg !2386
  br label %169

128:                                              ; preds = %96, %128
  %129 = phi i32 [ %131, %128 ], [ 0, %96 ]
  %130 = phi i32 [ %134, %128 ], [ %94, %96 ]
  call void @llvm.dbg.value(metadata i32 %129, metadata !2375, metadata !DIExpression()), !dbg !2475
  call void @llvm.dbg.value(metadata i32 %130, metadata !2373, metadata !DIExpression()), !dbg !2475
  %131 = add nuw nsw i32 %129, 1, !dbg !2507
  call void @llvm.dbg.value(metadata i32 %131, metadata !2375, metadata !DIExpression()), !dbg !2475
  %132 = getelementptr inbounds i8, i8* %74, i32 %129, !dbg !2508
  %133 = load i8, i8* %132, align 1, !dbg !2508
  %134 = add nuw nsw i32 %130, 1, !dbg !2509
  call void @llvm.dbg.value(metadata i32 %134, metadata !2373, metadata !DIExpression()), !dbg !2475
  %135 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 17, i32 %130, !dbg !2510
  store i8 %133, i8* %135, align 1, !dbg !2511
  %136 = icmp ult i32 %130, 19, !dbg !2476
  %137 = icmp ult i32 %131, %73, !dbg !2477
  %138 = select i1 %136, i1 %137, i1 false, !dbg !2477
  br i1 %138, label %128, label %139, !dbg !2478, !llvm.loop !2512

139:                                              ; preds = %128, %96
  %140 = phi i32 [ %94, %96 ], [ %134, %128 ], !dbg !2475
  %141 = phi i32 [ 0, %96 ], [ %131, %128 ], !dbg !2475
  %142 = phi i1 [ %97, %96 ], [ %136, %128 ], !dbg !2476
  store i32 %140, i32* %13, align 4, !dbg !2514
  %143 = select i1 %142, i1 true, i1 %89, !dbg !2515
  br i1 %143, label %144, label %154, !dbg !2515

144:                                              ; preds = %139
  %145 = tail call fastcc i32 @LzmaDec_TryDummy(%struct.CLzmaDec* noundef nonnull %0, i8* noundef nonnull %14, i32 noundef %140) #25, !dbg !2516
  call void @llvm.dbg.value(metadata i32 %145, metadata !2376, metadata !DIExpression()), !dbg !2517
  %146 = icmp eq i32 %145, 0, !dbg !2518
  br i1 %146, label %147, label %150, !dbg !2520

147:                                              ; preds = %144
  %148 = load i32, i32* %3, align 4, !dbg !2521
  %149 = add i32 %148, %141, !dbg !2521
  store i32 %149, i32* %3, align 4, !dbg !2521
  store i32 3, i32* %5, align 4, !dbg !2523
  br label %185, !dbg !2524

150:                                              ; preds = %144
  %151 = icmp ne i32 %145, 2
  %152 = select i1 %89, i1 %151, i1 false, !dbg !2525
  br i1 %152, label %153, label %154, !dbg !2525

153:                                              ; preds = %150
  store i32 2, i32* %5, align 4, !dbg !2527
  br label %185, !dbg !2529

154:                                              ; preds = %150, %139
  store i8* %14, i8** %24, align 4, !dbg !2530
  %155 = tail call fastcc i32 @LzmaDec_DecodeReal2(%struct.CLzmaDec* noundef nonnull %0, i32 noundef %1, i8* noundef nonnull %14) #25, !dbg !2531
  %156 = icmp eq i32 %155, 0, !dbg !2533
  br i1 %156, label %157, label %185, !dbg !2534

157:                                              ; preds = %154
  %158 = load i8*, i8** %24, align 4, !dbg !2535
  %159 = ptrtoint i8* %158 to i32, !dbg !2536
  %160 = sub i32 %159, %25, !dbg !2536
  call void @llvm.dbg.value(metadata i32 %160, metadata !2379, metadata !DIExpression()), !dbg !2537
  %161 = icmp ult i32 %140, %160, !dbg !2538
  br i1 %161, label %185, label %162, !dbg !2540

162:                                              ; preds = %157
  %163 = sub i32 %140, %160, !dbg !2541
  call void @llvm.dbg.value(metadata i32 %163, metadata !2373, metadata !DIExpression()), !dbg !2475
  %164 = icmp ult i32 %141, %163, !dbg !2542
  br i1 %164, label %185, label %165, !dbg !2544

165:                                              ; preds = %162
  %166 = sub i32 %141, %163, !dbg !2545
  call void @llvm.dbg.value(metadata i32 %166, metadata !2375, metadata !DIExpression()), !dbg !2475
  %167 = load i32, i32* %3, align 4, !dbg !2546
  %168 = add i32 %167, %166, !dbg !2546
  store i32 %168, i32* %3, align 4, !dbg !2546
  call void @llvm.dbg.value(metadata !DIArgList(i8* %74, i32 %166), metadata !2359, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !2381
  call void @llvm.dbg.value(metadata !DIArgList(i32 %73, i32 %166), metadata !2363, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !2381
  store i32 0, i32* %13, align 4, !dbg !2547
  br label %169

169:                                              ; preds = %121, %165
  %170 = phi i32 [ %125, %121 ], [ %166, %165 ]
  %171 = getelementptr inbounds i8, i8* %74, i32 %170, !dbg !2548
  %172 = sub i32 %73, %170, !dbg !2441
  call void @llvm.dbg.value(metadata i8* %171, metadata !2359, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32 %172, metadata !2363, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i8* poison, metadata !2369, metadata !DIExpression()), !dbg !2386
  %173 = load i32, i32* %8, align 4, !dbg !2387
  %174 = icmp eq i32 %173, 274, !dbg !2388
  br i1 %174, label %175, label %26, !dbg !2389, !llvm.loop !2549

175:                                              ; preds = %169, %6
  %176 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 5, !dbg !2551
  %177 = load i32, i32* %176, align 4, !dbg !2551
  %178 = icmp eq i32 %177, 0, !dbg !2553
  br i1 %178, label %179, label %181, !dbg !2554

179:                                              ; preds = %175
  store i32 1, i32* %5, align 4, !dbg !2555
  %180 = load i32, i32* %176, align 4, !dbg !2556
  br label %181, !dbg !2557

181:                                              ; preds = %179, %175
  %182 = phi i32 [ %180, %179 ], [ %177, %175 ], !dbg !2556
  %183 = icmp ne i32 %182, 0, !dbg !2558
  %184 = zext i1 %183 to i32, !dbg !2559
  br label %185, !dbg !2560

185:                                              ; preds = %162, %157, %154, %117, %52, %147, %153, %106, %113, %51, %83, %86, %87, %181
  %186 = phi i32 [ %184, %181 ], [ 0, %51 ], [ 0, %83 ], [ 0, %86 ], [ 1, %87 ], [ 0, %106 ], [ 1, %113 ], [ 0, %147 ], [ 1, %153 ], [ 11, %162 ], [ 11, %157 ], [ 1, %154 ], [ 1, %117 ], [ 1, %52 ], !dbg !2381
  ret i32 %186, !dbg !2561
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @LzmaDec_WriteRem(%struct.CLzmaDec* nocapture noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !2562 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !2566, metadata !DIExpression()), !dbg !2576
  call void @llvm.dbg.value(metadata i32 %1, metadata !2567, metadata !DIExpression()), !dbg !2576
  %3 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 12, !dbg !2577
  %4 = load i32, i32* %3, align 4, !dbg !2577
  %5 = add i32 %4, -1, !dbg !2578
  %6 = icmp ult i32 %5, 273, !dbg !2578
  br i1 %6, label %7, label %54, !dbg !2578

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 2, !dbg !2579
  %9 = load i8*, i8** %8, align 4, !dbg !2579
  call void @llvm.dbg.value(metadata i8* %9, metadata !2568, metadata !DIExpression()), !dbg !2580
  %10 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 6, !dbg !2581
  %11 = load i32, i32* %10, align 4, !dbg !2581
  call void @llvm.dbg.value(metadata i32 %11, metadata !2571, metadata !DIExpression()), !dbg !2580
  %12 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 7, !dbg !2582
  %13 = load i32, i32* %12, align 4, !dbg !2582
  call void @llvm.dbg.value(metadata i32 %13, metadata !2572, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.value(metadata i32 %4, metadata !2573, metadata !DIExpression()), !dbg !2580
  %14 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 11, i32 0, !dbg !2583
  %15 = load i32, i32* %14, align 4, !dbg !2583
  call void @llvm.dbg.value(metadata i32 %15, metadata !2574, metadata !DIExpression()), !dbg !2580
  %16 = sub i32 %1, %11, !dbg !2584
  call void @llvm.dbg.value(metadata i32 %16, metadata !2575, metadata !DIExpression()), !dbg !2580
  %17 = icmp ult i32 %16, %4, !dbg !2585
  %18 = select i1 %17, i32 %16, i32 %4, !dbg !2587
  call void @llvm.dbg.value(metadata i32 %18, metadata !2573, metadata !DIExpression()), !dbg !2580
  %19 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 9, !dbg !2588
  %20 = load i32, i32* %19, align 4, !dbg !2588
  %21 = icmp eq i32 %20, 0, !dbg !2590
  br i1 %21, label %25, label %22, !dbg !2591

22:                                               ; preds = %7
  %23 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 8
  %24 = load i32, i32* %23, align 4, !dbg !2592
  br label %33, !dbg !2591

25:                                               ; preds = %7
  %26 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 0, i32 3, !dbg !2593
  %27 = load i32, i32* %26, align 4, !dbg !2593
  %28 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 8, !dbg !2594
  %29 = load i32, i32* %28, align 4, !dbg !2594
  %30 = sub i32 %27, %29, !dbg !2595
  %31 = icmp ugt i32 %30, %18, !dbg !2596
  br i1 %31, label %33, label %32, !dbg !2597

32:                                               ; preds = %25
  store i32 %27, i32* %19, align 4, !dbg !2598
  br label %33, !dbg !2599

33:                                               ; preds = %22, %32, %25
  %34 = phi i32 [ %24, %22 ], [ %29, %32 ], [ %29, %25 ], !dbg !2592
  %35 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 8, !dbg !2600
  %36 = add i32 %34, %18, !dbg !2592
  store i32 %36, i32* %35, align 4, !dbg !2592
  %37 = sub nsw i32 %4, %18, !dbg !2601
  store i32 %37, i32* %3, align 4, !dbg !2601
  call void @llvm.dbg.value(metadata i32 %11, metadata !2571, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.value(metadata i32 %18, metadata !2573, metadata !DIExpression()), !dbg !2580
  %38 = icmp eq i32 %18, 0, !dbg !2602
  br i1 %38, label %52, label %39, !dbg !2603

39:                                               ; preds = %33, %39
  %40 = phi i32 [ %50, %39 ], [ %11, %33 ]
  %41 = phi i32 [ %42, %39 ], [ %18, %33 ]
  call void @llvm.dbg.value(metadata i32 %40, metadata !2571, metadata !DIExpression()), !dbg !2580
  call void @llvm.dbg.value(metadata i32 %41, metadata !2573, metadata !DIExpression()), !dbg !2580
  %42 = add i32 %41, -1, !dbg !2604
  call void @llvm.dbg.value(metadata i32 %42, metadata !2573, metadata !DIExpression()), !dbg !2580
  %43 = sub i32 %40, %15, !dbg !2606
  %44 = icmp ult i32 %40, %15, !dbg !2607
  %45 = select i1 %44, i32 %13, i32 0, !dbg !2608
  %46 = add i32 %43, %45, !dbg !2609
  %47 = getelementptr inbounds i8, i8* %9, i32 %46, !dbg !2610
  %48 = load i8, i8* %47, align 1, !dbg !2610
  %49 = getelementptr inbounds i8, i8* %9, i32 %40, !dbg !2611
  store i8 %48, i8* %49, align 1, !dbg !2612
  %50 = add i32 %40, 1, !dbg !2613
  call void @llvm.dbg.value(metadata i32 %50, metadata !2571, metadata !DIExpression()), !dbg !2580
  %51 = icmp eq i32 %42, 0, !dbg !2602
  br i1 %51, label %52, label %39, !dbg !2603, !llvm.loop !2614

52:                                               ; preds = %39, %33
  %53 = phi i32 [ %11, %33 ], [ %50, %39 ], !dbg !2580
  store i32 %53, i32* %10, align 4, !dbg !2616
  br label %54, !dbg !2617

54:                                               ; preds = %52, %2
  ret void, !dbg !2618
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @LzmaDec_InitStateReal(%struct.CLzmaDec* nocapture noundef %0) unnamed_addr #4 !dbg !2619 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !2621, metadata !DIExpression()), !dbg !2625
  %2 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 0, i32 0, !dbg !2626
  %3 = load i32, i32* %2, align 4, !dbg !2626
  %4 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 0, i32 1, !dbg !2626
  %5 = load i32, i32* %4, align 4, !dbg !2626
  %6 = add i32 %5, %3, !dbg !2626
  %7 = shl i32 768, %6, !dbg !2626
  %8 = add i32 %7, 1846, !dbg !2626
  call void @llvm.dbg.value(metadata i32 %8, metadata !2622, metadata !DIExpression()), !dbg !2625
  %9 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 1, !dbg !2627
  %10 = load i16*, i16** %9, align 4, !dbg !2627
  call void @llvm.dbg.value(metadata i16* %10, metadata !2624, metadata !DIExpression()), !dbg !2625
  call void @llvm.dbg.value(metadata i32 0, metadata !2623, metadata !DIExpression()), !dbg !2625
  %11 = call i32 @llvm.umax.i32(i32 %8, i32 1), !dbg !2628
  br label %12, !dbg !2628

12:                                               ; preds = %1, %12
  %13 = phi i32 [ 0, %1 ], [ %15, %12 ]
  call void @llvm.dbg.value(metadata i32 %13, metadata !2623, metadata !DIExpression()), !dbg !2625
  %14 = getelementptr inbounds i16, i16* %10, i32 %13, !dbg !2630
  store i16 1024, i16* %14, align 2, !dbg !2632
  %15 = add nuw i32 %13, 1, !dbg !2633
  call void @llvm.dbg.value(metadata i32 %15, metadata !2623, metadata !DIExpression()), !dbg !2625
  %16 = icmp eq i32 %15, %11, !dbg !2634
  br i1 %16, label %17, label %12, !dbg !2628, !llvm.loop !2635

17:                                               ; preds = %12
  %18 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 11, i32 3, !dbg !2637
  store i32 1, i32* %18, align 4, !dbg !2638
  %19 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 11, i32 2, !dbg !2639
  store i32 1, i32* %19, align 4, !dbg !2640
  %20 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 11, i32 1, !dbg !2641
  store i32 1, i32* %20, align 4, !dbg !2642
  %21 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 11, i32 0, !dbg !2643
  store i32 1, i32* %21, align 4, !dbg !2644
  %22 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 10, !dbg !2645
  store i32 0, i32* %22, align 4, !dbg !2646
  %23 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 14, !dbg !2647
  store i32 0, i32* %23, align 4, !dbg !2648
  ret void, !dbg !2649
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define internal fastcc i32 @LzmaDec_TryDummy(%struct.CLzmaDec* nocapture noundef readonly %0, i8* noundef readonly %1, i32 noundef %2) unnamed_addr #5 !dbg !2650 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !2657, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i8* %1, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %2, metadata !2659, metadata !DIExpression()), !dbg !2699
  %4 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 4, !dbg !2700
  %5 = load i32, i32* %4, align 4, !dbg !2700
  call void @llvm.dbg.value(metadata i32 %5, metadata !2660, metadata !DIExpression()), !dbg !2699
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 5, !dbg !2701
  %7 = load i32, i32* %6, align 4, !dbg !2701
  call void @llvm.dbg.value(metadata i32 %7, metadata !2661, metadata !DIExpression()), !dbg !2699
  %8 = getelementptr inbounds i8, i8* %1, i32 %2, !dbg !2702
  call void @llvm.dbg.value(metadata i8* %8, metadata !2662, metadata !DIExpression()), !dbg !2699
  %9 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 1, !dbg !2703
  %10 = load i16*, i16** %9, align 4, !dbg !2703
  call void @llvm.dbg.value(metadata i16* %10, metadata !2663, metadata !DIExpression()), !dbg !2699
  %11 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 10, !dbg !2704
  %12 = load i32, i32* %11, align 4, !dbg !2704
  call void @llvm.dbg.value(metadata i32 %12, metadata !2666, metadata !DIExpression()), !dbg !2699
  %13 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 8, !dbg !2705
  %14 = load i32, i32* %13, align 4, !dbg !2705
  %15 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 0, i32 2, !dbg !2706
  %16 = load i32, i32* %15, align 4, !dbg !2706
  %17 = shl nsw i32 -1, %16, !dbg !2707
  %18 = xor i32 %17, -1, !dbg !2707
  %19 = and i32 %14, %18, !dbg !2708
  call void @llvm.dbg.value(metadata i32 %19, metadata !2672, metadata !DIExpression()), !dbg !2709
  %20 = shl i32 %12, 4, !dbg !2710
  %21 = getelementptr inbounds i16, i16* %10, i32 %20, !dbg !2711
  %22 = getelementptr inbounds i16, i16* %21, i32 %19, !dbg !2712
  call void @llvm.dbg.value(metadata i16* %22, metadata !2668, metadata !DIExpression()), !dbg !2709
  %23 = load i16, i16* %22, align 2, !dbg !2713
  %24 = zext i16 %23 to i32, !dbg !2713
  call void @llvm.dbg.value(metadata i32 %24, metadata !2671, metadata !DIExpression()), !dbg !2709
  %25 = icmp ult i32 %5, 16777216, !dbg !2714
  br i1 %25, label %26, label %35, !dbg !2713

26:                                               ; preds = %3
  %27 = icmp sgt i32 %2, 0, !dbg !2716
  br i1 %27, label %28, label %548, !dbg !2719

28:                                               ; preds = %26
  %29 = shl nuw i32 %5, 8, !dbg !2719
  call void @llvm.dbg.value(metadata i32 %29, metadata !2660, metadata !DIExpression()), !dbg !2699
  %30 = shl i32 %7, 8, !dbg !2719
  %31 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !2719
  call void @llvm.dbg.value(metadata i8* %31, metadata !2658, metadata !DIExpression()), !dbg !2699
  %32 = load i8, i8* %1, align 1, !dbg !2719
  %33 = zext i8 %32 to i32, !dbg !2719
  %34 = or i32 %30, %33, !dbg !2719
  call void @llvm.dbg.value(metadata i32 %34, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %35, !dbg !2719

35:                                               ; preds = %28, %3
  %36 = phi i32 [ %34, %28 ], [ %7, %3 ], !dbg !2699
  %37 = phi i32 [ %29, %28 ], [ %5, %3 ], !dbg !2699
  %38 = phi i8* [ %31, %28 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %37, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %36, metadata !2661, metadata !DIExpression()), !dbg !2699
  %39 = lshr i32 %37, 11, !dbg !2713
  %40 = mul i32 %39, %24, !dbg !2713
  call void @llvm.dbg.value(metadata i32 %40, metadata !2670, metadata !DIExpression()), !dbg !2709
  %41 = icmp ult i32 %36, %40, !dbg !2720
  br i1 %41, label %42, label %177, !dbg !2713

42:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 %40, metadata !2660, metadata !DIExpression()), !dbg !2699
  %43 = getelementptr inbounds i16, i16* %10, i32 1846, !dbg !2721
  call void @llvm.dbg.value(metadata i16* %43, metadata !2668, metadata !DIExpression()), !dbg !2709
  %44 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 9, !dbg !2722
  %45 = load i32, i32* %44, align 4, !dbg !2722
  %46 = icmp eq i32 %45, 0, !dbg !2724
  %47 = icmp eq i32 %14, 0
  %48 = select i1 %46, i1 %47, i1 false, !dbg !2725
  br i1 %48, label %77, label %49, !dbg !2725

49:                                               ; preds = %42
  %50 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 0, i32 1, !dbg !2726
  %51 = load i32, i32* %50, align 4, !dbg !2726
  %52 = shl nsw i32 -1, %51, !dbg !2727
  %53 = xor i32 %52, -1, !dbg !2727
  %54 = and i32 %14, %53, !dbg !2728
  %55 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 0, i32 0, !dbg !2729
  %56 = load i32, i32* %55, align 4, !dbg !2729
  %57 = shl i32 %54, %56, !dbg !2730
  %58 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 2, !dbg !2731
  %59 = load i8*, i8** %58, align 4, !dbg !2731
  %60 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 6, !dbg !2732
  %61 = load i32, i32* %60, align 4, !dbg !2732
  %62 = icmp eq i32 %61, 0, !dbg !2733
  br i1 %62, label %63, label %66, !dbg !2734

63:                                               ; preds = %49
  %64 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 7, !dbg !2735
  %65 = load i32, i32* %64, align 4, !dbg !2735
  br label %66, !dbg !2734

66:                                               ; preds = %49, %63
  %67 = phi i32 [ %65, %63 ], [ %61, %49 ], !dbg !2734
  %68 = add i32 %67, -1, !dbg !2736
  %69 = getelementptr inbounds i8, i8* %59, i32 %68, !dbg !2737
  %70 = load i8, i8* %69, align 1, !dbg !2737
  %71 = zext i8 %70 to i32, !dbg !2737
  %72 = sub i32 8, %56, !dbg !2738
  %73 = lshr i32 %71, %72, !dbg !2739
  %74 = add i32 %73, %57, !dbg !2740
  %75 = mul i32 %74, 768, !dbg !2741
  %76 = getelementptr inbounds i16, i16* %43, i32 %75, !dbg !2742
  call void @llvm.dbg.value(metadata i16* %76, metadata !2668, metadata !DIExpression()), !dbg !2709
  br label %77, !dbg !2743

77:                                               ; preds = %42, %66
  %78 = phi i16* [ %76, %66 ], [ %43, %42 ], !dbg !2744
  call void @llvm.dbg.value(metadata i16* %78, metadata !2668, metadata !DIExpression()), !dbg !2709
  %79 = icmp ult i32 %12, 7, !dbg !2745
  br i1 %79, label %80, label %114, !dbg !2746

80:                                               ; preds = %77, %98
  %81 = phi i32 [ %108, %98 ], [ %36, %77 ], !dbg !2709
  %82 = phi i32 [ %109, %98 ], [ %40, %77 ], !dbg !2744
  %83 = phi i32 [ %112, %98 ], [ 1, %77 ], !dbg !2747
  %84 = phi i8* [ %101, %98 ], [ %38, %77 ], !dbg !2709
  call void @llvm.dbg.value(metadata i8* %84, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %83, metadata !2673, metadata !DIExpression()), !dbg !2747
  call void @llvm.dbg.value(metadata i32 %82, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %81, metadata !2661, metadata !DIExpression()), !dbg !2699
  %85 = getelementptr inbounds i16, i16* %78, i32 %83, !dbg !2748
  %86 = load i16, i16* %85, align 2, !dbg !2748
  %87 = zext i16 %86 to i32, !dbg !2748
  call void @llvm.dbg.value(metadata i32 %87, metadata !2671, metadata !DIExpression()), !dbg !2709
  %88 = icmp ult i32 %82, 16777216, !dbg !2750
  br i1 %88, label %89, label %98, !dbg !2748

89:                                               ; preds = %80
  %90 = icmp ult i8* %84, %8, !dbg !2752
  br i1 %90, label %91, label %548, !dbg !2755

91:                                               ; preds = %89
  %92 = shl nuw i32 %82, 8, !dbg !2755
  call void @llvm.dbg.value(metadata i32 %92, metadata !2660, metadata !DIExpression()), !dbg !2699
  %93 = shl i32 %81, 8, !dbg !2755
  %94 = getelementptr inbounds i8, i8* %84, i32 1, !dbg !2755
  call void @llvm.dbg.value(metadata i8* %94, metadata !2658, metadata !DIExpression()), !dbg !2699
  %95 = load i8, i8* %84, align 1, !dbg !2755
  %96 = zext i8 %95 to i32, !dbg !2755
  %97 = or i32 %93, %96, !dbg !2755
  call void @llvm.dbg.value(metadata i32 %97, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %98, !dbg !2755

98:                                               ; preds = %91, %80
  %99 = phi i32 [ %97, %91 ], [ %81, %80 ], !dbg !2709
  %100 = phi i32 [ %92, %91 ], [ %82, %80 ], !dbg !2744
  %101 = phi i8* [ %94, %91 ], [ %84, %80 ], !dbg !2709
  call void @llvm.dbg.value(metadata i8* %101, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %100, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %99, metadata !2661, metadata !DIExpression()), !dbg !2699
  %102 = lshr i32 %100, 11, !dbg !2748
  %103 = mul i32 %102, %87, !dbg !2748
  call void @llvm.dbg.value(metadata i32 %103, metadata !2670, metadata !DIExpression()), !dbg !2709
  %104 = icmp ult i32 %99, %103, !dbg !2756
  %105 = shl nuw nsw i32 %83, 1, !dbg !2748
  %106 = sub i32 %100, %103, !dbg !2748
  %107 = select i1 %104, i32 0, i32 %103, !dbg !2748
  %108 = sub i32 %99, %107, !dbg !2748
  %109 = select i1 %104, i32 %103, i32 %106, !dbg !2748
  %110 = xor i1 %104, true, !dbg !2748
  %111 = zext i1 %110 to i32, !dbg !2748
  %112 = or i32 %105, %111, !dbg !2748
  call void @llvm.dbg.value(metadata i32 %112, metadata !2673, metadata !DIExpression()), !dbg !2747
  call void @llvm.dbg.value(metadata i32 %109, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %108, metadata !2661, metadata !DIExpression()), !dbg !2699
  %113 = icmp ult i32 %112, 256, !dbg !2758
  br i1 %113, label %80, label %540, !dbg !2759, !llvm.loop !2760

114:                                              ; preds = %77
  %115 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 2, !dbg !2763
  %116 = load i8*, i8** %115, align 4, !dbg !2763
  %117 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 6, !dbg !2764
  %118 = load i32, i32* %117, align 4, !dbg !2764
  %119 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 11, i32 0, !dbg !2765
  %120 = load i32, i32* %119, align 4, !dbg !2765
  %121 = sub i32 %118, %120, !dbg !2766
  %122 = icmp ult i32 %118, %120, !dbg !2767
  br i1 %122, label %123, label %126, !dbg !2768

123:                                              ; preds = %114
  %124 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 7, !dbg !2769
  %125 = load i32, i32* %124, align 4, !dbg !2769
  br label %126, !dbg !2768

126:                                              ; preds = %114, %123
  %127 = phi i32 [ %125, %123 ], [ 0, %114 ], !dbg !2768
  %128 = add i32 %121, %127, !dbg !2770
  %129 = getelementptr inbounds i8, i8* %116, i32 %128, !dbg !2771
  %130 = load i8, i8* %129, align 1, !dbg !2771
  %131 = zext i8 %130 to i32, !dbg !2771
  call void @llvm.dbg.value(metadata i32 %131, metadata !2678, metadata !DIExpression()), !dbg !2772
  call void @llvm.dbg.value(metadata i32 256, metadata !2680, metadata !DIExpression()), !dbg !2772
  call void @llvm.dbg.value(metadata i32 1, metadata !2681, metadata !DIExpression()), !dbg !2772
  br label %132, !dbg !2773

132:                                              ; preds = %171, %126
  %133 = phi i32 [ %36, %126 ], [ %172, %171 ], !dbg !2719
  %134 = phi i32 [ %40, %126 ], [ %173, %171 ], !dbg !2774
  %135 = phi i32 [ %131, %126 ], [ %139, %171 ], !dbg !2772
  %136 = phi i32 [ 256, %126 ], [ %174, %171 ], !dbg !2775
  %137 = phi i32 [ 1, %126 ], [ %175, %171 ], !dbg !2776
  %138 = phi i8* [ %38, %126 ], [ %159, %171 ], !dbg !2719
  call void @llvm.dbg.value(metadata i8* %138, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %137, metadata !2681, metadata !DIExpression()), !dbg !2772
  call void @llvm.dbg.value(metadata i32 %136, metadata !2680, metadata !DIExpression()), !dbg !2772
  call void @llvm.dbg.value(metadata i32 %135, metadata !2678, metadata !DIExpression()), !dbg !2772
  call void @llvm.dbg.value(metadata i32 %134, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %133, metadata !2661, metadata !DIExpression()), !dbg !2699
  %139 = shl i32 %135, 1, !dbg !2777
  call void @llvm.dbg.value(metadata i32 %139, metadata !2678, metadata !DIExpression()), !dbg !2772
  %140 = and i32 %139, %136, !dbg !2778
  call void @llvm.dbg.value(metadata i32 %140, metadata !2682, metadata !DIExpression()), !dbg !2779
  %141 = getelementptr inbounds i16, i16* %78, i32 %136, !dbg !2780
  %142 = getelementptr inbounds i16, i16* %141, i32 %140, !dbg !2781
  %143 = getelementptr inbounds i16, i16* %142, i32 %137, !dbg !2782
  call void @llvm.dbg.value(metadata i16* %143, metadata !2684, metadata !DIExpression()), !dbg !2779
  %144 = load i16, i16* %143, align 2, !dbg !2783
  %145 = zext i16 %144 to i32, !dbg !2783
  call void @llvm.dbg.value(metadata i32 %145, metadata !2671, metadata !DIExpression()), !dbg !2709
  %146 = icmp ult i32 %134, 16777216, !dbg !2784
  br i1 %146, label %147, label %156, !dbg !2783

147:                                              ; preds = %132
  %148 = icmp ult i8* %138, %8, !dbg !2786
  br i1 %148, label %149, label %548, !dbg !2789

149:                                              ; preds = %147
  %150 = shl nuw i32 %134, 8, !dbg !2789
  call void @llvm.dbg.value(metadata i32 %150, metadata !2660, metadata !DIExpression()), !dbg !2699
  %151 = shl i32 %133, 8, !dbg !2789
  %152 = getelementptr inbounds i8, i8* %138, i32 1, !dbg !2789
  call void @llvm.dbg.value(metadata i8* %152, metadata !2658, metadata !DIExpression()), !dbg !2699
  %153 = load i8, i8* %138, align 1, !dbg !2789
  %154 = zext i8 %153 to i32, !dbg !2789
  %155 = or i32 %151, %154, !dbg !2789
  call void @llvm.dbg.value(metadata i32 %155, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %156, !dbg !2789

156:                                              ; preds = %149, %132
  %157 = phi i32 [ %155, %149 ], [ %133, %132 ], !dbg !2709
  %158 = phi i32 [ %150, %149 ], [ %134, %132 ], !dbg !2744
  %159 = phi i8* [ %152, %149 ], [ %138, %132 ], !dbg !2709
  call void @llvm.dbg.value(metadata i8* %159, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %158, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %157, metadata !2661, metadata !DIExpression()), !dbg !2699
  %160 = lshr i32 %158, 11, !dbg !2783
  %161 = mul i32 %160, %145, !dbg !2783
  call void @llvm.dbg.value(metadata i32 %161, metadata !2670, metadata !DIExpression()), !dbg !2709
  %162 = icmp ult i32 %157, %161, !dbg !2790
  br i1 %162, label %163, label %166, !dbg !2783

163:                                              ; preds = %156
  call void @llvm.dbg.value(metadata i32 %161, metadata !2660, metadata !DIExpression()), !dbg !2699
  %164 = shl nuw nsw i32 %137, 1, !dbg !2792
  call void @llvm.dbg.value(metadata i32 %164, metadata !2681, metadata !DIExpression()), !dbg !2772
  %165 = xor i32 %140, %136, !dbg !2792
  call void @llvm.dbg.value(metadata i32 %165, metadata !2680, metadata !DIExpression()), !dbg !2772
  br label %171, !dbg !2792

166:                                              ; preds = %156
  %167 = sub i32 %158, %161, !dbg !2794
  call void @llvm.dbg.value(metadata i32 %167, metadata !2660, metadata !DIExpression()), !dbg !2699
  %168 = sub i32 %157, %161, !dbg !2794
  call void @llvm.dbg.value(metadata i32 %168, metadata !2661, metadata !DIExpression()), !dbg !2699
  %169 = shl nuw nsw i32 %137, 1, !dbg !2794
  %170 = or i32 %169, 1, !dbg !2794
  call void @llvm.dbg.value(metadata i32 %170, metadata !2681, metadata !DIExpression()), !dbg !2772
  call void @llvm.dbg.value(metadata i32 %140, metadata !2680, metadata !DIExpression()), !dbg !2772
  br label %171

171:                                              ; preds = %166, %163
  %172 = phi i32 [ %168, %166 ], [ %157, %163 ]
  %173 = phi i32 [ %167, %166 ], [ %161, %163 ]
  %174 = phi i32 [ %140, %166 ], [ %165, %163 ]
  %175 = phi i32 [ %170, %166 ], [ %164, %163 ]
  call void @llvm.dbg.value(metadata i8* undef, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 undef, metadata !2681, metadata !DIExpression()), !dbg !2772
  call void @llvm.dbg.value(metadata i32 undef, metadata !2680, metadata !DIExpression()), !dbg !2772
  call void @llvm.dbg.value(metadata i32 undef, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 undef, metadata !2661, metadata !DIExpression()), !dbg !2699
  %176 = icmp ult i32 %175, 256, !dbg !2796
  br i1 %176, label %132, label %540, !dbg !2797, !llvm.loop !2798

177:                                              ; preds = %35
  %178 = sub i32 %37, %40, !dbg !2800
  call void @llvm.dbg.value(metadata i32 %178, metadata !2660, metadata !DIExpression()), !dbg !2699
  %179 = sub i32 %36, %40, !dbg !2800
  call void @llvm.dbg.value(metadata i32 %179, metadata !2661, metadata !DIExpression()), !dbg !2699
  %180 = getelementptr inbounds i16, i16* %10, i32 192, !dbg !2801
  %181 = getelementptr inbounds i16, i16* %180, i32 %12, !dbg !2802
  call void @llvm.dbg.value(metadata i16* %181, metadata !2668, metadata !DIExpression()), !dbg !2709
  %182 = load i16, i16* %181, align 2, !dbg !2803
  %183 = zext i16 %182 to i32, !dbg !2803
  call void @llvm.dbg.value(metadata i32 %183, metadata !2671, metadata !DIExpression()), !dbg !2709
  %184 = icmp ult i32 %178, 16777216, !dbg !2804
  br i1 %184, label %185, label %194, !dbg !2803

185:                                              ; preds = %177
  %186 = icmp ult i8* %38, %8, !dbg !2806
  br i1 %186, label %187, label %548, !dbg !2809

187:                                              ; preds = %185
  %188 = shl nuw i32 %178, 8, !dbg !2809
  call void @llvm.dbg.value(metadata i32 %188, metadata !2660, metadata !DIExpression()), !dbg !2699
  %189 = shl i32 %179, 8, !dbg !2809
  %190 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !2809
  call void @llvm.dbg.value(metadata i8* %190, metadata !2658, metadata !DIExpression()), !dbg !2699
  %191 = load i8, i8* %38, align 1, !dbg !2809
  %192 = zext i8 %191 to i32, !dbg !2809
  %193 = or i32 %189, %192, !dbg !2809
  call void @llvm.dbg.value(metadata i32 %193, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %194, !dbg !2809

194:                                              ; preds = %187, %177
  %195 = phi i32 [ %193, %187 ], [ %179, %177 ], !dbg !2810
  %196 = phi i32 [ %188, %187 ], [ %178, %177 ], !dbg !2810
  %197 = phi i8* [ %190, %187 ], [ %38, %177 ], !dbg !2709
  call void @llvm.dbg.value(metadata i8* %197, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %196, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %195, metadata !2661, metadata !DIExpression()), !dbg !2699
  %198 = lshr i32 %196, 11, !dbg !2803
  %199 = mul i32 %198, %183, !dbg !2803
  call void @llvm.dbg.value(metadata i32 %199, metadata !2670, metadata !DIExpression()), !dbg !2709
  %200 = icmp ult i32 %195, %199, !dbg !2811
  br i1 %200, label %307, label %201, !dbg !2803

201:                                              ; preds = %194
  %202 = sub i32 %196, %199, !dbg !2813
  call void @llvm.dbg.value(metadata i32 %202, metadata !2660, metadata !DIExpression()), !dbg !2699
  %203 = sub i32 %195, %199, !dbg !2813
  call void @llvm.dbg.value(metadata i32 %203, metadata !2661, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 3, metadata !2667, metadata !DIExpression()), !dbg !2699
  %204 = getelementptr inbounds i16, i16* %10, i32 204, !dbg !2815
  %205 = getelementptr inbounds i16, i16* %204, i32 %12, !dbg !2816
  call void @llvm.dbg.value(metadata i16* %205, metadata !2668, metadata !DIExpression()), !dbg !2709
  %206 = load i16, i16* %205, align 2, !dbg !2817
  %207 = zext i16 %206 to i32, !dbg !2817
  call void @llvm.dbg.value(metadata i32 %207, metadata !2671, metadata !DIExpression()), !dbg !2709
  %208 = icmp ult i32 %202, 16777216, !dbg !2818
  br i1 %208, label %209, label %218, !dbg !2817

209:                                              ; preds = %201
  %210 = icmp ult i8* %197, %8, !dbg !2820
  br i1 %210, label %211, label %548, !dbg !2823

211:                                              ; preds = %209
  %212 = shl nuw i32 %202, 8, !dbg !2823
  call void @llvm.dbg.value(metadata i32 %212, metadata !2660, metadata !DIExpression()), !dbg !2699
  %213 = shl i32 %203, 8, !dbg !2823
  %214 = getelementptr inbounds i8, i8* %197, i32 1, !dbg !2823
  call void @llvm.dbg.value(metadata i8* %214, metadata !2658, metadata !DIExpression()), !dbg !2699
  %215 = load i8, i8* %197, align 1, !dbg !2823
  %216 = zext i8 %215 to i32, !dbg !2823
  %217 = or i32 %213, %216, !dbg !2823
  call void @llvm.dbg.value(metadata i32 %217, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %218, !dbg !2823

218:                                              ; preds = %211, %201
  %219 = phi i32 [ %217, %211 ], [ %203, %201 ], !dbg !2824
  %220 = phi i32 [ %212, %211 ], [ %202, %201 ], !dbg !2824
  %221 = phi i8* [ %214, %211 ], [ %197, %201 ], !dbg !2810
  call void @llvm.dbg.value(metadata i8* %221, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %220, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %219, metadata !2661, metadata !DIExpression()), !dbg !2699
  %222 = lshr i32 %220, 11, !dbg !2817
  %223 = mul i32 %222, %207, !dbg !2817
  call void @llvm.dbg.value(metadata i32 %223, metadata !2670, metadata !DIExpression()), !dbg !2709
  %224 = icmp ult i32 %219, %223, !dbg !2825
  br i1 %224, label %225, label %256, !dbg !2817

225:                                              ; preds = %218
  call void @llvm.dbg.value(metadata i32 %223, metadata !2660, metadata !DIExpression()), !dbg !2699
  %226 = getelementptr inbounds i16, i16* %10, i32 240, !dbg !2827
  %227 = getelementptr inbounds i16, i16* %226, i32 %20, !dbg !2829
  %228 = getelementptr inbounds i16, i16* %227, i32 %19, !dbg !2830
  call void @llvm.dbg.value(metadata i16* %228, metadata !2668, metadata !DIExpression()), !dbg !2709
  %229 = load i16, i16* %228, align 2, !dbg !2831
  %230 = zext i16 %229 to i32, !dbg !2831
  call void @llvm.dbg.value(metadata i32 %230, metadata !2671, metadata !DIExpression()), !dbg !2709
  %231 = icmp ult i32 %223, 16777216, !dbg !2832
  br i1 %231, label %232, label %241, !dbg !2831

232:                                              ; preds = %225
  %233 = icmp ult i8* %221, %8, !dbg !2834
  br i1 %233, label %234, label %548, !dbg !2837

234:                                              ; preds = %232
  %235 = shl nuw i32 %223, 8, !dbg !2837
  call void @llvm.dbg.value(metadata i32 %235, metadata !2660, metadata !DIExpression()), !dbg !2699
  %236 = shl i32 %219, 8, !dbg !2837
  %237 = getelementptr inbounds i8, i8* %221, i32 1, !dbg !2837
  call void @llvm.dbg.value(metadata i8* %237, metadata !2658, metadata !DIExpression()), !dbg !2699
  %238 = load i8, i8* %221, align 1, !dbg !2837
  %239 = zext i8 %238 to i32, !dbg !2837
  %240 = or i32 %236, %239, !dbg !2837
  call void @llvm.dbg.value(metadata i32 %240, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %241, !dbg !2837

241:                                              ; preds = %234, %225
  %242 = phi i32 [ %240, %234 ], [ %219, %225 ], !dbg !2824
  %243 = phi i32 [ %235, %234 ], [ %223, %225 ], !dbg !2838
  %244 = phi i8* [ %237, %234 ], [ %221, %225 ], !dbg !2824
  call void @llvm.dbg.value(metadata i8* %244, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %243, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %242, metadata !2661, metadata !DIExpression()), !dbg !2699
  %245 = lshr i32 %243, 11, !dbg !2831
  %246 = mul i32 %245, %230, !dbg !2831
  call void @llvm.dbg.value(metadata i32 %246, metadata !2670, metadata !DIExpression()), !dbg !2709
  %247 = icmp ult i32 %242, %246, !dbg !2839
  br i1 %247, label %248, label %253, !dbg !2831

248:                                              ; preds = %241
  call void @llvm.dbg.value(metadata i32 %246, metadata !2660, metadata !DIExpression()), !dbg !2699
  %249 = icmp ult i32 %246, 16777216, !dbg !2841
  br i1 %249, label %250, label %548, !dbg !2844

250:                                              ; preds = %248
  %251 = icmp ult i8* %244, %8, !dbg !2845
  %252 = select i1 %251, i32 3, i32 0, !dbg !2848
  br label %548, !dbg !2848

253:                                              ; preds = %241
  %254 = sub i32 %243, %246, !dbg !2849
  call void @llvm.dbg.value(metadata i32 %254, metadata !2660, metadata !DIExpression()), !dbg !2699
  %255 = sub i32 %242, %246, !dbg !2849
  call void @llvm.dbg.value(metadata i32 %255, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %307, !dbg !2851

256:                                              ; preds = %218
  %257 = sub i32 %220, %223, !dbg !2852
  call void @llvm.dbg.value(metadata i32 %257, metadata !2660, metadata !DIExpression()), !dbg !2699
  %258 = sub i32 %219, %223, !dbg !2852
  call void @llvm.dbg.value(metadata i32 %258, metadata !2661, metadata !DIExpression()), !dbg !2699
  %259 = getelementptr inbounds i16, i16* %10, i32 216, !dbg !2854
  %260 = getelementptr inbounds i16, i16* %259, i32 %12, !dbg !2855
  call void @llvm.dbg.value(metadata i16* %260, metadata !2668, metadata !DIExpression()), !dbg !2709
  %261 = load i16, i16* %260, align 2, !dbg !2856
  %262 = zext i16 %261 to i32, !dbg !2856
  call void @llvm.dbg.value(metadata i32 %262, metadata !2671, metadata !DIExpression()), !dbg !2709
  %263 = icmp ult i32 %257, 16777216, !dbg !2857
  br i1 %263, label %264, label %273, !dbg !2856

264:                                              ; preds = %256
  %265 = icmp ult i8* %221, %8, !dbg !2859
  br i1 %265, label %266, label %548, !dbg !2862

266:                                              ; preds = %264
  %267 = shl nuw i32 %257, 8, !dbg !2862
  call void @llvm.dbg.value(metadata i32 %267, metadata !2660, metadata !DIExpression()), !dbg !2699
  %268 = shl i32 %258, 8, !dbg !2862
  %269 = getelementptr inbounds i8, i8* %221, i32 1, !dbg !2862
  call void @llvm.dbg.value(metadata i8* %269, metadata !2658, metadata !DIExpression()), !dbg !2699
  %270 = load i8, i8* %221, align 1, !dbg !2862
  %271 = zext i8 %270 to i32, !dbg !2862
  %272 = or i32 %268, %271, !dbg !2862
  call void @llvm.dbg.value(metadata i32 %272, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %273, !dbg !2862

273:                                              ; preds = %266, %256
  %274 = phi i32 [ %272, %266 ], [ %258, %256 ], !dbg !2863
  %275 = phi i32 [ %267, %266 ], [ %257, %256 ], !dbg !2863
  %276 = phi i8* [ %269, %266 ], [ %221, %256 ], !dbg !2824
  call void @llvm.dbg.value(metadata i8* %276, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %275, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %274, metadata !2661, metadata !DIExpression()), !dbg !2699
  %277 = lshr i32 %275, 11, !dbg !2856
  %278 = mul i32 %277, %262, !dbg !2856
  call void @llvm.dbg.value(metadata i32 %278, metadata !2670, metadata !DIExpression()), !dbg !2709
  %279 = icmp ult i32 %274, %278, !dbg !2864
  br i1 %279, label %307, label %280, !dbg !2856

280:                                              ; preds = %273
  %281 = sub i32 %275, %278, !dbg !2866
  call void @llvm.dbg.value(metadata i32 %281, metadata !2660, metadata !DIExpression()), !dbg !2699
  %282 = sub i32 %274, %278, !dbg !2866
  call void @llvm.dbg.value(metadata i32 %282, metadata !2661, metadata !DIExpression()), !dbg !2699
  %283 = getelementptr inbounds i16, i16* %10, i32 228, !dbg !2868
  %284 = getelementptr inbounds i16, i16* %283, i32 %12, !dbg !2869
  call void @llvm.dbg.value(metadata i16* %284, metadata !2668, metadata !DIExpression()), !dbg !2709
  %285 = load i16, i16* %284, align 2, !dbg !2870
  %286 = zext i16 %285 to i32, !dbg !2870
  call void @llvm.dbg.value(metadata i32 %286, metadata !2671, metadata !DIExpression()), !dbg !2709
  %287 = icmp ult i32 %281, 16777216, !dbg !2871
  br i1 %287, label %288, label %297, !dbg !2870

288:                                              ; preds = %280
  %289 = icmp ult i8* %276, %8, !dbg !2873
  br i1 %289, label %290, label %548, !dbg !2876

290:                                              ; preds = %288
  %291 = shl nuw i32 %281, 8, !dbg !2876
  call void @llvm.dbg.value(metadata i32 %291, metadata !2660, metadata !DIExpression()), !dbg !2699
  %292 = shl i32 %282, 8, !dbg !2876
  %293 = getelementptr inbounds i8, i8* %276, i32 1, !dbg !2876
  call void @llvm.dbg.value(metadata i8* %293, metadata !2658, metadata !DIExpression()), !dbg !2699
  %294 = load i8, i8* %276, align 1, !dbg !2876
  %295 = zext i8 %294 to i32, !dbg !2876
  %296 = or i32 %292, %295, !dbg !2876
  call void @llvm.dbg.value(metadata i32 %296, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %297, !dbg !2876

297:                                              ; preds = %290, %280
  %298 = phi i32 [ %296, %290 ], [ %282, %280 ], !dbg !2877
  %299 = phi i32 [ %291, %290 ], [ %281, %280 ], !dbg !2877
  %300 = phi i8* [ %293, %290 ], [ %276, %280 ], !dbg !2863
  call void @llvm.dbg.value(metadata i8* %300, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %299, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %298, metadata !2661, metadata !DIExpression()), !dbg !2699
  %301 = lshr i32 %299, 11, !dbg !2870
  %302 = mul i32 %301, %286, !dbg !2870
  call void @llvm.dbg.value(metadata i32 %302, metadata !2670, metadata !DIExpression()), !dbg !2709
  %303 = icmp ult i32 %298, %302, !dbg !2878
  br i1 %303, label %307, label %304, !dbg !2870

304:                                              ; preds = %297
  %305 = sub i32 %299, %302, !dbg !2880
  call void @llvm.dbg.value(metadata i32 %305, metadata !2660, metadata !DIExpression()), !dbg !2699
  %306 = sub i32 %298, %302, !dbg !2880
  call void @llvm.dbg.value(metadata i32 %306, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %307

307:                                              ; preds = %253, %304, %273, %297, %194
  %308 = phi i32 [ 818, %194 ], [ 1332, %297 ], [ 1332, %273 ], [ 1332, %304 ], [ 1332, %253 ]
  %309 = phi i32 [ %195, %194 ], [ %298, %297 ], [ %274, %273 ], [ %306, %304 ], [ %255, %253 ], !dbg !2810
  %310 = phi i32 [ 2, %194 ], [ 3, %297 ], [ 3, %273 ], [ 3, %304 ], [ 3, %253 ], !dbg !2882
  %311 = phi i32 [ %199, %194 ], [ %302, %297 ], [ %278, %273 ], [ %305, %304 ], [ %254, %253 ], !dbg !2882
  %312 = phi i8* [ %197, %194 ], [ %300, %297 ], [ %276, %273 ], [ %300, %304 ], [ %244, %253 ], !dbg !2810
  %313 = getelementptr inbounds i16, i16* %10, i32 %308, !dbg !2882
  call void @llvm.dbg.value(metadata i8* %312, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %311, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i16* %313, metadata !2668, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata i32 %310, metadata !2667, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 undef, metadata !2666, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %309, metadata !2661, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i16* %313, metadata !2690, metadata !DIExpression()), !dbg !2883
  %314 = load i16, i16* %313, align 2, !dbg !2884
  %315 = zext i16 %314 to i32, !dbg !2884
  call void @llvm.dbg.value(metadata i32 %315, metadata !2671, metadata !DIExpression()), !dbg !2709
  %316 = icmp ult i32 %311, 16777216, !dbg !2885
  br i1 %316, label %317, label %326, !dbg !2884

317:                                              ; preds = %307
  %318 = icmp ult i8* %312, %8, !dbg !2887
  br i1 %318, label %319, label %548, !dbg !2890

319:                                              ; preds = %317
  %320 = shl nuw i32 %311, 8, !dbg !2890
  call void @llvm.dbg.value(metadata i32 %320, metadata !2660, metadata !DIExpression()), !dbg !2699
  %321 = shl i32 %309, 8, !dbg !2890
  %322 = getelementptr inbounds i8, i8* %312, i32 1, !dbg !2890
  call void @llvm.dbg.value(metadata i8* %322, metadata !2658, metadata !DIExpression()), !dbg !2699
  %323 = load i8, i8* %312, align 1, !dbg !2890
  %324 = zext i8 %323 to i32, !dbg !2890
  %325 = or i32 %321, %324, !dbg !2890
  call void @llvm.dbg.value(metadata i32 %325, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %326, !dbg !2890

326:                                              ; preds = %319, %307
  %327 = phi i32 [ %325, %319 ], [ %309, %307 ], !dbg !2810
  %328 = phi i32 [ %320, %319 ], [ %311, %307 ], !dbg !2810
  %329 = phi i8* [ %322, %319 ], [ %312, %307 ], !dbg !2810
  call void @llvm.dbg.value(metadata i8* %329, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %328, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %327, metadata !2661, metadata !DIExpression()), !dbg !2699
  %330 = lshr i32 %328, 11, !dbg !2884
  %331 = mul i32 %330, %315, !dbg !2884
  call void @llvm.dbg.value(metadata i32 %331, metadata !2670, metadata !DIExpression()), !dbg !2709
  %332 = icmp ult i32 %327, %331, !dbg !2891
  br i1 %332, label %333, label %337, !dbg !2884

333:                                              ; preds = %326
  call void @llvm.dbg.value(metadata i32 %331, metadata !2660, metadata !DIExpression()), !dbg !2699
  %334 = getelementptr inbounds i16, i16* %313, i32 2, !dbg !2893
  %335 = shl i32 %19, 3, !dbg !2895
  %336 = getelementptr inbounds i16, i16* %334, i32 %335, !dbg !2896
  call void @llvm.dbg.value(metadata i16* %336, metadata !2690, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata i32 0, metadata !2689, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata i32 8, metadata !2687, metadata !DIExpression()), !dbg !2883
  br label %368, !dbg !2897

337:                                              ; preds = %326
  %338 = sub i32 %328, %331, !dbg !2898
  call void @llvm.dbg.value(metadata i32 %338, metadata !2660, metadata !DIExpression()), !dbg !2699
  %339 = sub i32 %327, %331, !dbg !2898
  call void @llvm.dbg.value(metadata i32 %339, metadata !2661, metadata !DIExpression()), !dbg !2699
  %340 = getelementptr inbounds i16, i16* %313, i32 1, !dbg !2900
  call void @llvm.dbg.value(metadata i16* %340, metadata !2690, metadata !DIExpression()), !dbg !2883
  %341 = load i16, i16* %340, align 2, !dbg !2901
  %342 = zext i16 %341 to i32, !dbg !2901
  call void @llvm.dbg.value(metadata i32 %342, metadata !2671, metadata !DIExpression()), !dbg !2709
  %343 = icmp ult i32 %338, 16777216, !dbg !2902
  br i1 %343, label %344, label %353, !dbg !2901

344:                                              ; preds = %337
  %345 = icmp ult i8* %329, %8, !dbg !2904
  br i1 %345, label %346, label %548, !dbg !2907

346:                                              ; preds = %344
  %347 = shl nuw i32 %338, 8, !dbg !2907
  call void @llvm.dbg.value(metadata i32 %347, metadata !2660, metadata !DIExpression()), !dbg !2699
  %348 = shl i32 %339, 8, !dbg !2907
  %349 = getelementptr inbounds i8, i8* %329, i32 1, !dbg !2907
  call void @llvm.dbg.value(metadata i8* %349, metadata !2658, metadata !DIExpression()), !dbg !2699
  %350 = load i8, i8* %329, align 1, !dbg !2907
  %351 = zext i8 %350 to i32, !dbg !2907
  %352 = or i32 %348, %351, !dbg !2907
  call void @llvm.dbg.value(metadata i32 %352, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %353, !dbg !2907

353:                                              ; preds = %346, %337
  %354 = phi i32 [ %352, %346 ], [ %339, %337 ], !dbg !2908
  %355 = phi i32 [ %347, %346 ], [ %338, %337 ], !dbg !2908
  %356 = phi i8* [ %349, %346 ], [ %329, %337 ], !dbg !2883
  call void @llvm.dbg.value(metadata i8* %356, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %355, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %354, metadata !2661, metadata !DIExpression()), !dbg !2699
  %357 = lshr i32 %355, 11, !dbg !2901
  %358 = mul i32 %357, %342, !dbg !2901
  call void @llvm.dbg.value(metadata i32 %358, metadata !2670, metadata !DIExpression()), !dbg !2709
  %359 = icmp ult i32 %354, %358, !dbg !2909
  br i1 %359, label %360, label %364, !dbg !2901

360:                                              ; preds = %353
  call void @llvm.dbg.value(metadata i32 %358, metadata !2660, metadata !DIExpression()), !dbg !2699
  %361 = getelementptr inbounds i16, i16* %313, i32 130, !dbg !2911
  %362 = shl i32 %19, 3, !dbg !2913
  %363 = getelementptr inbounds i16, i16* %361, i32 %362, !dbg !2914
  call void @llvm.dbg.value(metadata i16* %363, metadata !2690, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata i32 8, metadata !2689, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata i32 8, metadata !2687, metadata !DIExpression()), !dbg !2883
  br label %368, !dbg !2915

364:                                              ; preds = %353
  %365 = sub i32 %355, %358, !dbg !2916
  call void @llvm.dbg.value(metadata i32 %365, metadata !2660, metadata !DIExpression()), !dbg !2699
  %366 = sub i32 %354, %358, !dbg !2916
  call void @llvm.dbg.value(metadata i32 %366, metadata !2661, metadata !DIExpression()), !dbg !2699
  %367 = getelementptr inbounds i16, i16* %313, i32 258, !dbg !2918
  call void @llvm.dbg.value(metadata i16* %367, metadata !2690, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata i32 16, metadata !2689, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata i32 256, metadata !2687, metadata !DIExpression()), !dbg !2883
  br label %368

368:                                              ; preds = %360, %364, %333
  %369 = phi i32 [ %327, %333 ], [ %354, %360 ], [ %366, %364 ], !dbg !2883
  %370 = phi i32 [ %331, %333 ], [ %358, %360 ], [ %365, %364 ], !dbg !2919
  %371 = phi i8* [ %329, %333 ], [ %356, %360 ], [ %356, %364 ], !dbg !2883
  %372 = phi i32 [ 8, %333 ], [ 8, %360 ], [ 256, %364 ], !dbg !2919
  %373 = phi i32 [ 0, %333 ], [ 8, %360 ], [ 16, %364 ], !dbg !2919
  %374 = phi i16* [ %336, %333 ], [ %363, %360 ], [ %367, %364 ], !dbg !2919
  call void @llvm.dbg.value(metadata i16* %374, metadata !2690, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata i32 %373, metadata !2689, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata i32 %372, metadata !2687, metadata !DIExpression()), !dbg !2883
  call void @llvm.dbg.value(metadata i8* %371, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %370, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %369, metadata !2661, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 1, metadata !2685, metadata !DIExpression()), !dbg !2810
  br label %375, !dbg !2920

375:                                              ; preds = %393, %368
  %376 = phi i32 [ %369, %368 ], [ %403, %393 ], !dbg !2883
  %377 = phi i32 [ %370, %368 ], [ %404, %393 ], !dbg !2883
  %378 = phi i8* [ %371, %368 ], [ %396, %393 ], !dbg !2883
  %379 = phi i32 [ 1, %368 ], [ %407, %393 ], !dbg !2922
  call void @llvm.dbg.value(metadata i32 %379, metadata !2685, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.value(metadata i8* %378, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %377, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %376, metadata !2661, metadata !DIExpression()), !dbg !2699
  %380 = getelementptr inbounds i16, i16* %374, i32 %379, !dbg !2923
  %381 = load i16, i16* %380, align 2, !dbg !2923
  %382 = zext i16 %381 to i32, !dbg !2923
  call void @llvm.dbg.value(metadata i32 %382, metadata !2671, metadata !DIExpression()), !dbg !2709
  %383 = icmp ult i32 %377, 16777216, !dbg !2925
  br i1 %383, label %384, label %393, !dbg !2923

384:                                              ; preds = %375
  %385 = icmp ult i8* %378, %8, !dbg !2927
  br i1 %385, label %386, label %548, !dbg !2930

386:                                              ; preds = %384
  %387 = shl nuw i32 %377, 8, !dbg !2930
  call void @llvm.dbg.value(metadata i32 %387, metadata !2660, metadata !DIExpression()), !dbg !2699
  %388 = shl i32 %376, 8, !dbg !2930
  %389 = getelementptr inbounds i8, i8* %378, i32 1, !dbg !2930
  call void @llvm.dbg.value(metadata i8* %389, metadata !2658, metadata !DIExpression()), !dbg !2699
  %390 = load i8, i8* %378, align 1, !dbg !2930
  %391 = zext i8 %390 to i32, !dbg !2930
  %392 = or i32 %388, %391, !dbg !2930
  call void @llvm.dbg.value(metadata i32 %392, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %393, !dbg !2930

393:                                              ; preds = %386, %375
  %394 = phi i32 [ %392, %386 ], [ %376, %375 ], !dbg !2883
  %395 = phi i32 [ %387, %386 ], [ %377, %375 ], !dbg !2883
  %396 = phi i8* [ %389, %386 ], [ %378, %375 ], !dbg !2883
  call void @llvm.dbg.value(metadata i8* %396, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %395, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %394, metadata !2661, metadata !DIExpression()), !dbg !2699
  %397 = lshr i32 %395, 11, !dbg !2923
  %398 = mul i32 %397, %382, !dbg !2923
  call void @llvm.dbg.value(metadata i32 %398, metadata !2670, metadata !DIExpression()), !dbg !2709
  %399 = icmp ult i32 %394, %398, !dbg !2931
  %400 = shl i32 %379, 1, !dbg !2923
  %401 = sub i32 %395, %398, !dbg !2923
  %402 = select i1 %399, i32 0, i32 %398, !dbg !2923
  %403 = sub i32 %394, %402, !dbg !2923
  %404 = select i1 %399, i32 %398, i32 %401, !dbg !2923
  %405 = xor i1 %399, true, !dbg !2923
  %406 = zext i1 %405 to i32, !dbg !2923
  %407 = or i32 %400, %406, !dbg !2923
  call void @llvm.dbg.value(metadata i32 %407, metadata !2685, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.value(metadata i32 %404, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %403, metadata !2661, metadata !DIExpression()), !dbg !2699
  %408 = icmp ult i32 %407, %372, !dbg !2920
  br i1 %408, label %375, label %409, !dbg !2923, !llvm.loop !2933

409:                                              ; preds = %393
  %410 = sub i32 %407, %372, !dbg !2920
  call void @llvm.dbg.value(metadata i32 %410, metadata !2685, metadata !DIExpression()), !dbg !2810
  %411 = add i32 %410, %373, !dbg !2934
  call void @llvm.dbg.value(metadata i32 %411, metadata !2685, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.value(metadata i8* %396, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %404, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %403, metadata !2661, metadata !DIExpression()), !dbg !2699
  br i1 %200, label %412, label %540, !dbg !2935

412:                                              ; preds = %409
  %413 = getelementptr inbounds i16, i16* %10, i32 432, !dbg !2936
  %414 = icmp ult i32 %411, 3, !dbg !2937
  %415 = select i1 %414, i32 %411, i32 3, !dbg !2937
  %416 = shl nuw nsw i32 %415, 6, !dbg !2938
  %417 = getelementptr inbounds i16, i16* %413, i32 %416, !dbg !2939
  call void @llvm.dbg.value(metadata i16* %417, metadata !2668, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata i32 1, metadata !2691, metadata !DIExpression()), !dbg !2940
  br label %418, !dbg !2941

418:                                              ; preds = %436, %412
  %419 = phi i32 [ %403, %412 ], [ %446, %436 ], !dbg !2810
  %420 = phi i32 [ %404, %412 ], [ %447, %436 ], !dbg !2810
  %421 = phi i8* [ %396, %412 ], [ %439, %436 ], !dbg !2810
  %422 = phi i32 [ 1, %412 ], [ %450, %436 ], !dbg !2943
  call void @llvm.dbg.value(metadata i32 %422, metadata !2691, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.value(metadata i8* %421, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %420, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %419, metadata !2661, metadata !DIExpression()), !dbg !2699
  %423 = getelementptr inbounds i16, i16* %417, i32 %422, !dbg !2944
  %424 = load i16, i16* %423, align 2, !dbg !2944
  %425 = zext i16 %424 to i32, !dbg !2944
  call void @llvm.dbg.value(metadata i32 %425, metadata !2671, metadata !DIExpression()), !dbg !2709
  %426 = icmp ult i32 %420, 16777216, !dbg !2946
  br i1 %426, label %427, label %436, !dbg !2944

427:                                              ; preds = %418
  %428 = icmp ult i8* %421, %8, !dbg !2948
  br i1 %428, label %429, label %548, !dbg !2951

429:                                              ; preds = %427
  %430 = shl nuw i32 %420, 8, !dbg !2951
  call void @llvm.dbg.value(metadata i32 %430, metadata !2660, metadata !DIExpression()), !dbg !2699
  %431 = shl i32 %419, 8, !dbg !2951
  %432 = getelementptr inbounds i8, i8* %421, i32 1, !dbg !2951
  call void @llvm.dbg.value(metadata i8* %432, metadata !2658, metadata !DIExpression()), !dbg !2699
  %433 = load i8, i8* %421, align 1, !dbg !2951
  %434 = zext i8 %433 to i32, !dbg !2951
  %435 = or i32 %431, %434, !dbg !2951
  call void @llvm.dbg.value(metadata i32 %435, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %436, !dbg !2951

436:                                              ; preds = %429, %418
  %437 = phi i32 [ %435, %429 ], [ %419, %418 ], !dbg !2810
  %438 = phi i32 [ %430, %429 ], [ %420, %418 ], !dbg !2810
  %439 = phi i8* [ %432, %429 ], [ %421, %418 ], !dbg !2810
  call void @llvm.dbg.value(metadata i8* %439, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %438, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %437, metadata !2661, metadata !DIExpression()), !dbg !2699
  %440 = lshr i32 %438, 11, !dbg !2944
  %441 = mul i32 %440, %425, !dbg !2944
  call void @llvm.dbg.value(metadata i32 %441, metadata !2670, metadata !DIExpression()), !dbg !2709
  %442 = icmp ult i32 %437, %441, !dbg !2952
  %443 = shl nuw nsw i32 %422, 1, !dbg !2944
  %444 = sub i32 %438, %441, !dbg !2944
  %445 = select i1 %442, i32 0, i32 %441, !dbg !2944
  %446 = sub i32 %437, %445, !dbg !2944
  %447 = select i1 %442, i32 %441, i32 %444, !dbg !2944
  %448 = xor i1 %442, true, !dbg !2944
  %449 = zext i1 %448 to i32, !dbg !2944
  %450 = or i32 %443, %449, !dbg !2944
  call void @llvm.dbg.value(metadata i32 %450, metadata !2691, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.value(metadata i32 %447, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %446, metadata !2661, metadata !DIExpression()), !dbg !2699
  %451 = icmp ult i32 %450, 64, !dbg !2941
  br i1 %451, label %418, label %452, !dbg !2944, !llvm.loop !2954

452:                                              ; preds = %436
  %453 = add i32 %450, -64, !dbg !2941
  call void @llvm.dbg.value(metadata i32 %453, metadata !2691, metadata !DIExpression()), !dbg !2940
  %454 = icmp ugt i32 %453, 3, !dbg !2955
  br i1 %454, label %455, label %540, !dbg !2956

455:                                              ; preds = %452
  %456 = lshr i32 %453, 1, !dbg !2957
  %457 = add nsw i32 %456, -1, !dbg !2958
  call void @llvm.dbg.value(metadata i32 %457, metadata !2694, metadata !DIExpression()), !dbg !2959
  %458 = icmp ult i32 %453, 14, !dbg !2960
  br i1 %458, label %459, label %467, !dbg !2962

459:                                              ; preds = %455
  %460 = getelementptr inbounds i16, i16* %10, i32 688, !dbg !2963
  %461 = select i1 %442, i32 2, i32 3, !dbg !2965
  %462 = shl i32 %461, %457, !dbg !2966
  %463 = getelementptr inbounds i16, i16* %460, i32 %462, !dbg !2967
  %464 = sub nsw i32 64, %450, !dbg !2968
  %465 = getelementptr inbounds i16, i16* %463, i32 %464, !dbg !2968
  %466 = getelementptr inbounds i16, i16* %465, i32 -1, !dbg !2969
  call void @llvm.dbg.value(metadata i16* %466, metadata !2668, metadata !DIExpression()), !dbg !2709
  br label %498, !dbg !2970

467:                                              ; preds = %455
  %468 = add nsw i32 %456, -5, !dbg !2971
  call void @llvm.dbg.value(metadata i32 %468, metadata !2694, metadata !DIExpression()), !dbg !2959
  br label %469, !dbg !2973

469:                                              ; preds = %484, %467
  %470 = phi i32 [ %446, %467 ], [ %493, %484 ], !dbg !2940
  %471 = phi i32 [ %447, %467 ], [ %488, %484 ], !dbg !2940
  %472 = phi i8* [ %439, %467 ], [ %487, %484 ], !dbg !2940
  %473 = phi i32 [ %468, %467 ], [ %494, %484 ], !dbg !2974
  call void @llvm.dbg.value(metadata i32 %473, metadata !2694, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.value(metadata i8* %472, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %471, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %470, metadata !2661, metadata !DIExpression()), !dbg !2699
  %474 = icmp ult i32 %471, 16777216, !dbg !2975
  br i1 %474, label %475, label %484, !dbg !2978

475:                                              ; preds = %469
  %476 = icmp ult i8* %472, %8, !dbg !2979
  br i1 %476, label %477, label %548, !dbg !2982

477:                                              ; preds = %475
  %478 = shl nuw i32 %471, 8, !dbg !2982
  call void @llvm.dbg.value(metadata i32 %478, metadata !2660, metadata !DIExpression()), !dbg !2699
  %479 = shl i32 %470, 8, !dbg !2982
  %480 = getelementptr inbounds i8, i8* %472, i32 1, !dbg !2982
  call void @llvm.dbg.value(metadata i8* %480, metadata !2658, metadata !DIExpression()), !dbg !2699
  %481 = load i8, i8* %472, align 1, !dbg !2982
  %482 = zext i8 %481 to i32, !dbg !2982
  %483 = or i32 %479, %482, !dbg !2982
  call void @llvm.dbg.value(metadata i32 %483, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %484, !dbg !2982

484:                                              ; preds = %477, %469
  %485 = phi i32 [ %483, %477 ], [ %470, %469 ], !dbg !2940
  %486 = phi i32 [ %478, %477 ], [ %471, %469 ], !dbg !2940
  %487 = phi i8* [ %480, %477 ], [ %472, %469 ], !dbg !2940
  call void @llvm.dbg.value(metadata i8* %487, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %486, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %485, metadata !2661, metadata !DIExpression()), !dbg !2699
  %488 = lshr i32 %486, 1, !dbg !2983
  call void @llvm.dbg.value(metadata i32 %488, metadata !2660, metadata !DIExpression()), !dbg !2699
  %489 = sub i32 %485, %488, !dbg !2984
  %490 = lshr i32 %489, 31, !dbg !2985
  %491 = add nuw i32 %490, 2147483647, !dbg !2986
  %492 = and i32 %491, %488, !dbg !2987
  %493 = sub i32 %485, %492, !dbg !2988
  call void @llvm.dbg.value(metadata i32 %493, metadata !2661, metadata !DIExpression()), !dbg !2699
  %494 = add i32 %473, -1, !dbg !2989
  call void @llvm.dbg.value(metadata i32 %494, metadata !2694, metadata !DIExpression()), !dbg !2959
  %495 = icmp eq i32 %494, 0, !dbg !2990
  br i1 %495, label %496, label %469, !dbg !2991, !llvm.loop !2992

496:                                              ; preds = %484
  %497 = getelementptr inbounds i16, i16* %10, i32 802, !dbg !2994
  call void @llvm.dbg.value(metadata i16* %497, metadata !2668, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata i32 4, metadata !2694, metadata !DIExpression()), !dbg !2959
  br label %498

498:                                              ; preds = %496, %459
  %499 = phi i32 [ %446, %459 ], [ %493, %496 ], !dbg !2940
  %500 = phi i16* [ %466, %459 ], [ %497, %496 ], !dbg !2995
  %501 = phi i32 [ %447, %459 ], [ %488, %496 ], !dbg !2940
  %502 = phi i8* [ %439, %459 ], [ %487, %496 ], !dbg !2940
  %503 = phi i32 [ %457, %459 ], [ 4, %496 ], !dbg !2959
  call void @llvm.dbg.value(metadata i32 %503, metadata !2694, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.value(metadata i8* %502, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %501, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i16* %500, metadata !2668, metadata !DIExpression()), !dbg !2709
  call void @llvm.dbg.value(metadata i32 %499, metadata !2661, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 1, metadata !2697, metadata !DIExpression()), !dbg !2996
  br label %504, !dbg !2997

504:                                              ; preds = %523, %498
  %505 = phi i32 [ %499, %498 ], [ %533, %523 ], !dbg !2940
  %506 = phi i32 [ %501, %498 ], [ %534, %523 ], !dbg !2940
  %507 = phi i8* [ %502, %498 ], [ %526, %523 ], !dbg !2940
  %508 = phi i32 [ %503, %498 ], [ %538, %523 ], !dbg !2959
  %509 = phi i32 [ 1, %498 ], [ %537, %523 ], !dbg !2996
  call void @llvm.dbg.value(metadata i32 %509, metadata !2697, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %508, metadata !2694, metadata !DIExpression()), !dbg !2959
  call void @llvm.dbg.value(metadata i8* %507, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %506, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %505, metadata !2661, metadata !DIExpression()), !dbg !2699
  %510 = getelementptr inbounds i16, i16* %500, i32 %509, !dbg !2998
  %511 = load i16, i16* %510, align 2, !dbg !2998
  %512 = zext i16 %511 to i32, !dbg !2998
  call void @llvm.dbg.value(metadata i32 %512, metadata !2671, metadata !DIExpression()), !dbg !2709
  %513 = icmp ult i32 %506, 16777216, !dbg !3000
  br i1 %513, label %514, label %523, !dbg !2998

514:                                              ; preds = %504
  %515 = icmp ult i8* %507, %8, !dbg !3002
  br i1 %515, label %516, label %548, !dbg !3005

516:                                              ; preds = %514
  %517 = shl nuw i32 %506, 8, !dbg !3005
  call void @llvm.dbg.value(metadata i32 %517, metadata !2660, metadata !DIExpression()), !dbg !2699
  %518 = shl i32 %505, 8, !dbg !3005
  %519 = getelementptr inbounds i8, i8* %507, i32 1, !dbg !3005
  call void @llvm.dbg.value(metadata i8* %519, metadata !2658, metadata !DIExpression()), !dbg !2699
  %520 = load i8, i8* %507, align 1, !dbg !3005
  %521 = zext i8 %520 to i32, !dbg !3005
  %522 = or i32 %518, %521, !dbg !3005
  call void @llvm.dbg.value(metadata i32 %522, metadata !2661, metadata !DIExpression()), !dbg !2699
  br label %523, !dbg !3005

523:                                              ; preds = %516, %504
  %524 = phi i32 [ %522, %516 ], [ %505, %504 ], !dbg !2940
  %525 = phi i32 [ %517, %516 ], [ %506, %504 ], !dbg !2940
  %526 = phi i8* [ %519, %516 ], [ %507, %504 ], !dbg !2940
  call void @llvm.dbg.value(metadata i8* %526, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %525, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %524, metadata !2661, metadata !DIExpression()), !dbg !2699
  %527 = lshr i32 %525, 11, !dbg !2998
  %528 = mul i32 %527, %512, !dbg !2998
  call void @llvm.dbg.value(metadata i32 %528, metadata !2670, metadata !DIExpression()), !dbg !2709
  %529 = icmp ult i32 %524, %528, !dbg !3006
  %530 = shl i32 %509, 1, !dbg !2998
  %531 = sub i32 %525, %528, !dbg !2998
  %532 = select i1 %529, i32 0, i32 %528, !dbg !2998
  %533 = sub i32 %524, %532, !dbg !2998
  %534 = select i1 %529, i32 %528, i32 %531, !dbg !2998
  %535 = xor i1 %529, true, !dbg !2998
  %536 = zext i1 %535 to i32, !dbg !2998
  %537 = or i32 %530, %536, !dbg !2998
  call void @llvm.dbg.value(metadata i32 %537, metadata !2697, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.value(metadata i32 %534, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %533, metadata !2661, metadata !DIExpression()), !dbg !2699
  %538 = add i32 %508, -1, !dbg !3008
  call void @llvm.dbg.value(metadata i32 %538, metadata !2694, metadata !DIExpression()), !dbg !2959
  %539 = icmp eq i32 %538, 0, !dbg !3009
  br i1 %539, label %540, label %504, !dbg !3010, !llvm.loop !3011

540:                                              ; preds = %523, %171, %98, %452, %409
  %541 = phi i32 [ %310, %409 ], [ %310, %452 ], [ 1, %98 ], [ 1, %171 ], [ %310, %523 ]
  %542 = phi i32 [ %404, %409 ], [ %447, %452 ], [ %109, %98 ], [ %173, %171 ], [ %534, %523 ]
  %543 = phi i8* [ %396, %409 ], [ %439, %452 ], [ %101, %98 ], [ %159, %171 ], [ %526, %523 ]
  call void @llvm.dbg.value(metadata i8* undef, metadata !2658, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 undef, metadata !2660, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 undef, metadata !2667, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 undef, metadata !2661, metadata !DIExpression()), !dbg !2699
  %544 = icmp ugt i32 %542, 16777215
  %545 = icmp ult i8* %543, %8
  %546 = select i1 %544, i1 true, i1 %545
  %547 = select i1 %546, i32 %541, i32 0
  br label %548

548:                                              ; preds = %384, %427, %475, %514, %147, %89, %250, %26, %185, %209, %232, %248, %264, %288, %317, %344, %540
  %549 = phi i32 [ %547, %540 ], [ 0, %26 ], [ 0, %288 ], [ 0, %264 ], [ 3, %248 ], [ 0, %232 ], [ 0, %209 ], [ 0, %185 ], [ 0, %317 ], [ 0, %344 ], [ %252, %250 ], [ 0, %89 ], [ 0, %147 ], [ 0, %514 ], [ 0, %475 ], [ 0, %427 ], [ 0, %384 ]
  ret i32 %549, !dbg !3013
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @LzmaDec_DecodeReal2(%struct.CLzmaDec* nocapture noundef %0, i32 noundef %1, i8* noundef %2) unnamed_addr #7 !dbg !3014 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !3018, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.value(metadata i32 %1, metadata !3019, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.value(metadata i8* %2, metadata !3020, metadata !DIExpression()), !dbg !3028
  %4 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 9
  %5 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 0, i32 3
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 8
  %7 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 6
  %8 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 3
  %9 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 12
  br label %10, !dbg !3029

10:                                               ; preds = %40, %3
  call void @llvm.dbg.value(metadata i32 %1, metadata !3021, metadata !DIExpression()), !dbg !3030
  %11 = load i32, i32* %4, align 4, !dbg !3031
  %12 = icmp eq i32 %11, 0, !dbg !3032
  br i1 %12, label %13, label %22, !dbg !3033

13:                                               ; preds = %10
  %14 = load i32, i32* %5, align 4, !dbg !3034
  %15 = load i32, i32* %6, align 4, !dbg !3035
  %16 = sub i32 %14, %15, !dbg !3036
  call void @llvm.dbg.value(metadata i32 %16, metadata !3023, metadata !DIExpression()), !dbg !3037
  %17 = load i32, i32* %7, align 4, !dbg !3038
  %18 = sub i32 %1, %17, !dbg !3040
  %19 = icmp ugt i32 %18, %16, !dbg !3041
  %20 = add i32 %17, %16
  %21 = select i1 %19, i32 %20, i32 %1, !dbg !3042
  call void @llvm.dbg.value(metadata i32 %21, metadata !3021, metadata !DIExpression()), !dbg !3030
  br label %22, !dbg !3043

22:                                               ; preds = %13, %10
  %23 = phi i32 [ %21, %13 ], [ %1, %10 ], !dbg !3030
  call void @llvm.dbg.value(metadata i32 %23, metadata !3021, metadata !DIExpression()), !dbg !3030
  %24 = tail call fastcc i32 @LzmaDec_DecodeReal(%struct.CLzmaDec* noundef nonnull %0, i32 noundef %23, i8* noundef %2) #25, !dbg !3044
  call void @llvm.dbg.value(metadata i32 %24, metadata !3026, metadata !DIExpression()), !dbg !3045
  %25 = icmp eq i32 %24, 0, !dbg !3046
  br i1 %25, label %26, label %49

26:                                               ; preds = %22
  %27 = load i32, i32* %4, align 4, !dbg !3048
  %28 = icmp eq i32 %27, 0, !dbg !3050
  br i1 %28, label %29, label %34, !dbg !3051

29:                                               ; preds = %26
  %30 = load i32, i32* %6, align 4, !dbg !3052
  %31 = load i32, i32* %5, align 4, !dbg !3053
  %32 = icmp ult i32 %30, %31, !dbg !3054
  br i1 %32, label %34, label %33, !dbg !3055

33:                                               ; preds = %29
  store i32 %31, i32* %4, align 4, !dbg !3056
  br label %34, !dbg !3057

34:                                               ; preds = %26, %29, %33
  tail call fastcc void @LzmaDec_WriteRem(%struct.CLzmaDec* noundef nonnull %0, i32 noundef %1) #25, !dbg !3058
  %35 = load i32, i32* %7, align 4, !dbg !3059
  %36 = icmp ult i32 %35, %1, !dbg !3060
  br i1 %36, label %37, label %43, !dbg !3061

37:                                               ; preds = %34
  %38 = load i8*, i8** %8, align 4, !dbg !3062
  %39 = icmp ult i8* %38, %2, !dbg !3063
  br i1 %39, label %40, label %43, !dbg !3064

40:                                               ; preds = %37
  %41 = load i32, i32* %9, align 4, !dbg !3065
  %42 = icmp ult i32 %41, 274, !dbg !3066
  br i1 %42, label %10, label %45, !dbg !3067, !llvm.loop !3068

43:                                               ; preds = %37, %34
  %44 = load i32, i32* %9, align 4, !dbg !3070
  br label %45, !dbg !3070

45:                                               ; preds = %40, %43
  %46 = phi i32 [ %44, %43 ], [ %41, %40 ], !dbg !3070
  %47 = icmp ugt i32 %46, 274, !dbg !3072
  br i1 %47, label %48, label %49, !dbg !3073

48:                                               ; preds = %45
  store i32 274, i32* %9, align 4, !dbg !3074
  br label %49, !dbg !3075

49:                                               ; preds = %22, %45, %48
  ret i32 %24, !dbg !3076
}

; Function Attrs: nofree noinline nosync nounwind optsize
define internal fastcc i32 @LzmaDec_DecodeReal(%struct.CLzmaDec* nocapture noundef %0, i32 noundef %1, i8* noundef readnone %2) unnamed_addr #7 !dbg !3077 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !3079, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1, metadata !3080, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %2, metadata !3081, metadata !DIExpression()), !dbg !3150
  %4 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 1, !dbg !3151
  %5 = load i16*, i16** %4, align 4, !dbg !3151
  call void @llvm.dbg.value(metadata i16* %5, metadata !3082, metadata !DIExpression()), !dbg !3150
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 10, !dbg !3152
  %7 = load i32, i32* %6, align 4, !dbg !3152
  call void @llvm.dbg.value(metadata i32 %7, metadata !3083, metadata !DIExpression()), !dbg !3150
  %8 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 11, i32 0, !dbg !3153
  %9 = load i32, i32* %8, align 4, !dbg !3153
  call void @llvm.dbg.value(metadata i32 %9, metadata !3084, metadata !DIExpression()), !dbg !3150
  %10 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 11, i32 1, !dbg !3154
  %11 = load i32, i32* %10, align 4, !dbg !3154
  call void @llvm.dbg.value(metadata i32 %11, metadata !3085, metadata !DIExpression()), !dbg !3150
  %12 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 11, i32 2, !dbg !3155
  %13 = load i32, i32* %12, align 4, !dbg !3155
  call void @llvm.dbg.value(metadata i32 %13, metadata !3086, metadata !DIExpression()), !dbg !3150
  %14 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 11, i32 3, !dbg !3156
  %15 = load i32, i32* %14, align 4, !dbg !3156
  call void @llvm.dbg.value(metadata i32 %15, metadata !3087, metadata !DIExpression()), !dbg !3150
  %16 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 0, i32 2, !dbg !3157
  %17 = load i32, i32* %16, align 4, !dbg !3157
  %18 = shl nsw i32 -1, %17, !dbg !3158
  %19 = xor i32 %18, -1, !dbg !3158
  call void @llvm.dbg.value(metadata i32 %19, metadata !3088, metadata !DIExpression()), !dbg !3150
  %20 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 0, i32 1, !dbg !3159
  %21 = load i32, i32* %20, align 4, !dbg !3159
  %22 = shl nsw i32 -1, %21, !dbg !3160
  %23 = xor i32 %22, -1, !dbg !3160
  call void @llvm.dbg.value(metadata i32 %23, metadata !3089, metadata !DIExpression()), !dbg !3150
  %24 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 0, i32 0, !dbg !3161
  %25 = load i32, i32* %24, align 4, !dbg !3161
  call void @llvm.dbg.value(metadata i32 %25, metadata !3090, metadata !DIExpression()), !dbg !3150
  %26 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 2, !dbg !3162
  %27 = load i8*, i8** %26, align 4, !dbg !3162
  call void @llvm.dbg.value(metadata i8* %27, metadata !3091, metadata !DIExpression()), !dbg !3150
  %28 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 7, !dbg !3163
  %29 = load i32, i32* %28, align 4, !dbg !3163
  call void @llvm.dbg.value(metadata i32 %29, metadata !3092, metadata !DIExpression()), !dbg !3150
  %30 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 6, !dbg !3164
  %31 = load i32, i32* %30, align 4, !dbg !3164
  call void @llvm.dbg.value(metadata i32 %31, metadata !3093, metadata !DIExpression()), !dbg !3150
  %32 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 8, !dbg !3165
  %33 = load i32, i32* %32, align 4, !dbg !3165
  call void @llvm.dbg.value(metadata i32 %33, metadata !3094, metadata !DIExpression()), !dbg !3150
  %34 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 9, !dbg !3166
  %35 = load i32, i32* %34, align 4, !dbg !3166
  call void @llvm.dbg.value(metadata i32 %35, metadata !3095, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 0, metadata !3096, metadata !DIExpression()), !dbg !3150
  %36 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 3, !dbg !3167
  %37 = load i8*, i8** %36, align 4, !dbg !3167
  call void @llvm.dbg.value(metadata i8* %37, metadata !3097, metadata !DIExpression()), !dbg !3150
  %38 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 4, !dbg !3168
  %39 = load i32, i32* %38, align 4, !dbg !3168
  call void @llvm.dbg.value(metadata i32 %39, metadata !3098, metadata !DIExpression()), !dbg !3150
  %40 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 5, !dbg !3169
  %41 = load i32, i32* %40, align 4, !dbg !3169
  call void @llvm.dbg.value(metadata i32 %41, metadata !3099, metadata !DIExpression()), !dbg !3150
  %42 = getelementptr inbounds i16, i16* %5, i32 192
  %43 = icmp eq i32 %35, 0
  %44 = getelementptr inbounds i16, i16* %5, i32 204
  %45 = getelementptr inbounds i16, i16* %5, i32 216
  %46 = getelementptr inbounds i16, i16* %5, i32 228
  %47 = getelementptr inbounds i16, i16* %5, i32 240
  %48 = getelementptr inbounds i16, i16* %5, i32 1332
  %49 = getelementptr inbounds i16, i16* %5, i32 818
  %50 = getelementptr inbounds i16, i16* %5, i32 432
  %51 = getelementptr inbounds i16, i16* %5, i32 802
  %52 = getelementptr inbounds i16, i16* %5, i32 803
  %53 = getelementptr inbounds i16, i16* %5, i32 1846
  %54 = icmp ne i32 %35, 0
  %55 = sub i32 8, %25
  %56 = getelementptr inbounds i16, i16* %5, i32 687
  br label %57, !dbg !3170

57:                                               ; preds = %1740, %3
  %58 = phi i32 [ %33, %3 ], [ %1752, %1740 ], !dbg !3150
  %59 = phi i32 [ %31, %3 ], [ %1742, %1740 ], !dbg !3150
  %60 = phi i32 [ 0, %3 ], [ %1743, %1740 ], !dbg !3171
  %61 = phi i8* [ %37, %3 ], [ %1744, %1740 ], !dbg !3150
  %62 = phi i32 [ %39, %3 ], [ %1745, %1740 ], !dbg !3150
  %63 = phi i32 [ %41, %3 ], [ %1746, %1740 ], !dbg !3150
  %64 = phi i32 [ %15, %3 ], [ %1747, %1740 ], !dbg !3172
  %65 = phi i32 [ %13, %3 ], [ %1748, %1740 ], !dbg !3173
  %66 = phi i32 [ %11, %3 ], [ %1749, %1740 ], !dbg !3174
  %67 = phi i32 [ %9, %3 ], [ %1750, %1740 ], !dbg !3175
  %68 = phi i32 [ %7, %3 ], [ %1751, %1740 ], !dbg !3150
  call void @llvm.dbg.value(metadata i32 %68, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %67, metadata !3084, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %66, metadata !3085, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %65, metadata !3086, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %64, metadata !3087, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %63, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %62, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %61, metadata !3097, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %60, metadata !3096, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %59, metadata !3093, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %58, metadata !3094, metadata !DIExpression()), !dbg !3150
  %69 = and i32 %58, %19, !dbg !3176
  call void @llvm.dbg.value(metadata i32 %69, metadata !3104, metadata !DIExpression()), !dbg !3177
  %70 = shl i32 %68, 4, !dbg !3178
  %71 = getelementptr inbounds i16, i16* %5, i32 %70, !dbg !3179
  %72 = getelementptr inbounds i16, i16* %71, i32 %69, !dbg !3180
  call void @llvm.dbg.value(metadata i16* %72, metadata !3100, metadata !DIExpression()), !dbg !3177
  %73 = load i16, i16* %72, align 2, !dbg !3181
  %74 = zext i16 %73 to i32, !dbg !3181
  call void @llvm.dbg.value(metadata i32 %74, metadata !3103, metadata !DIExpression()), !dbg !3177
  %75 = icmp ult i32 %62, 16777216, !dbg !3182
  br i1 %75, label %76, label %83, !dbg !3181

76:                                               ; preds = %57
  %77 = shl nuw i32 %62, 8, !dbg !3184
  call void @llvm.dbg.value(metadata i32 %77, metadata !3098, metadata !DIExpression()), !dbg !3150
  %78 = shl i32 %63, 8, !dbg !3184
  %79 = getelementptr inbounds i8, i8* %61, i32 1, !dbg !3184
  call void @llvm.dbg.value(metadata i8* %79, metadata !3097, metadata !DIExpression()), !dbg !3150
  %80 = load i8, i8* %61, align 1, !dbg !3184
  %81 = zext i8 %80 to i32, !dbg !3184
  %82 = or i32 %78, %81, !dbg !3184
  call void @llvm.dbg.value(metadata i32 %82, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %83, !dbg !3184

83:                                               ; preds = %76, %57
  %84 = phi i8* [ %79, %76 ], [ %61, %57 ], !dbg !3150
  %85 = phi i32 [ %77, %76 ], [ %62, %57 ], !dbg !3150
  %86 = phi i32 [ %82, %76 ], [ %63, %57 ], !dbg !3150
  call void @llvm.dbg.value(metadata i32 %86, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %85, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %84, metadata !3097, metadata !DIExpression()), !dbg !3150
  %87 = lshr i32 %85, 11, !dbg !3181
  %88 = mul i32 %87, %74, !dbg !3181
  call void @llvm.dbg.value(metadata i32 %88, metadata !3102, metadata !DIExpression()), !dbg !3177
  %89 = icmp ult i32 %86, %88, !dbg !3186
  br i1 %89, label %90, label %727, !dbg !3181

90:                                               ; preds = %83
  call void @llvm.dbg.value(metadata i32 %88, metadata !3098, metadata !DIExpression()), !dbg !3150
  %91 = sub nsw i32 2048, %74, !dbg !3187
  %92 = lshr i32 %91, 5, !dbg !3187
  %93 = trunc i32 %92 to i16, !dbg !3187
  %94 = add i16 %73, %93, !dbg !3187
  store i16 %94, i16* %72, align 2, !dbg !3187
  call void @llvm.dbg.value(metadata i16* %53, metadata !3100, metadata !DIExpression()), !dbg !3177
  %95 = icmp ne i32 %58, 0, !dbg !3188
  %96 = select i1 %95, i1 true, i1 %54, !dbg !3190
  br i1 %96, label %97, label %110, !dbg !3190

97:                                               ; preds = %90
  %98 = and i32 %58, %23, !dbg !3191
  %99 = shl i32 %98, %25, !dbg !3192
  %100 = icmp eq i32 %59, 0, !dbg !3193
  %101 = select i1 %100, i32 %29, i32 %59, !dbg !3194
  %102 = add i32 %101, -1, !dbg !3195
  %103 = getelementptr inbounds i8, i8* %27, i32 %102, !dbg !3196
  %104 = load i8, i8* %103, align 1, !dbg !3196
  %105 = zext i8 %104 to i32, !dbg !3196
  %106 = lshr i32 %105, %55, !dbg !3197
  %107 = add i32 %106, %99, !dbg !3198
  %108 = mul i32 %107, 768, !dbg !3199
  %109 = getelementptr inbounds i16, i16* %53, i32 %108, !dbg !3200
  call void @llvm.dbg.value(metadata i16* %109, metadata !3100, metadata !DIExpression()), !dbg !3177
  br label %110, !dbg !3201

110:                                              ; preds = %90, %97
  %111 = phi i16* [ %109, %97 ], [ %53, %90 ], !dbg !3202
  call void @llvm.dbg.value(metadata i16* %111, metadata !3100, metadata !DIExpression()), !dbg !3177
  call void @llvm.dbg.value(metadata i32 %58, metadata !3094, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3150
  %112 = icmp ult i32 %68, 7, !dbg !3203
  br i1 %112, label %113, label %389, !dbg !3204

113:                                              ; preds = %110
  %114 = tail call i32 @llvm.usub.sat.i32(i32 %68, i32 3), !dbg !3205
  call void @llvm.dbg.value(metadata i32 %114, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 1, metadata !3105, metadata !DIExpression()), !dbg !3202
  %115 = getelementptr inbounds i16, i16* %111, i32 1, !dbg !3207
  %116 = load i16, i16* %115, align 2, !dbg !3207
  %117 = zext i16 %116 to i32, !dbg !3207
  call void @llvm.dbg.value(metadata i32 %117, metadata !3103, metadata !DIExpression()), !dbg !3177
  %118 = icmp ult i32 %88, 16777216, !dbg !3208
  br i1 %118, label %119, label %126, !dbg !3207

119:                                              ; preds = %113
  %120 = shl nuw i32 %88, 8, !dbg !3210
  call void @llvm.dbg.value(metadata i32 %120, metadata !3098, metadata !DIExpression()), !dbg !3150
  %121 = shl i32 %86, 8, !dbg !3210
  %122 = getelementptr inbounds i8, i8* %84, i32 1, !dbg !3210
  call void @llvm.dbg.value(metadata i8* %122, metadata !3097, metadata !DIExpression()), !dbg !3150
  %123 = load i8, i8* %84, align 1, !dbg !3210
  %124 = zext i8 %123 to i32, !dbg !3210
  %125 = or i32 %121, %124, !dbg !3210
  call void @llvm.dbg.value(metadata i32 %125, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %126, !dbg !3210

126:                                              ; preds = %119, %113
  %127 = phi i8* [ %122, %119 ], [ %84, %113 ], !dbg !3177
  %128 = phi i32 [ %120, %119 ], [ %88, %113 ], !dbg !3202
  %129 = phi i32 [ %125, %119 ], [ %86, %113 ], !dbg !3177
  call void @llvm.dbg.value(metadata i32 %129, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %128, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %127, metadata !3097, metadata !DIExpression()), !dbg !3150
  %130 = lshr i32 %128, 11, !dbg !3207
  %131 = mul i32 %130, %117, !dbg !3207
  call void @llvm.dbg.value(metadata i32 %131, metadata !3102, metadata !DIExpression()), !dbg !3177
  %132 = icmp ult i32 %129, %131, !dbg !3212
  br i1 %132, label %133, label %138, !dbg !3207

133:                                              ; preds = %126
  call void @llvm.dbg.value(metadata i32 %131, metadata !3098, metadata !DIExpression()), !dbg !3150
  %134 = sub nsw i32 2048, %117, !dbg !3214
  %135 = lshr i32 %134, 5, !dbg !3214
  %136 = trunc i32 %135 to i16, !dbg !3214
  %137 = add i16 %116, %136, !dbg !3214
  call void @llvm.dbg.value(metadata i32 2, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %143, !dbg !3214

138:                                              ; preds = %126
  %139 = sub i32 %128, %131, !dbg !3216
  call void @llvm.dbg.value(metadata i32 %139, metadata !3098, metadata !DIExpression()), !dbg !3150
  %140 = sub i32 %129, %131, !dbg !3216
  call void @llvm.dbg.value(metadata i32 %140, metadata !3099, metadata !DIExpression()), !dbg !3150
  %141 = lshr i16 %116, 5, !dbg !3216
  %142 = sub i16 %116, %141, !dbg !3216
  call void @llvm.dbg.value(metadata i32 3, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %143

143:                                              ; preds = %138, %133
  %144 = phi i16 [ %142, %138 ], [ %137, %133 ], !dbg !3218
  %145 = phi i32 [ %139, %138 ], [ %131, %133 ], !dbg !3218
  %146 = phi i32 [ %140, %138 ], [ %129, %133 ], !dbg !3219
  %147 = phi i32 [ 3, %138 ], [ 2, %133 ], !dbg !3218
  store i16 %144, i16* %115, align 2, !dbg !3218
  call void @llvm.dbg.value(metadata i32 %147, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %146, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %145, metadata !3098, metadata !DIExpression()), !dbg !3150
  %148 = getelementptr inbounds i16, i16* %111, i32 %147, !dbg !3220
  %149 = load i16, i16* %148, align 2, !dbg !3220
  %150 = zext i16 %149 to i32, !dbg !3220
  call void @llvm.dbg.value(metadata i32 %150, metadata !3103, metadata !DIExpression()), !dbg !3177
  %151 = icmp ult i32 %145, 16777216, !dbg !3221
  br i1 %151, label %152, label %159, !dbg !3220

152:                                              ; preds = %143
  %153 = shl nuw i32 %145, 8, !dbg !3223
  call void @llvm.dbg.value(metadata i32 %153, metadata !3098, metadata !DIExpression()), !dbg !3150
  %154 = shl i32 %146, 8, !dbg !3223
  %155 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !3223
  call void @llvm.dbg.value(metadata i8* %155, metadata !3097, metadata !DIExpression()), !dbg !3150
  %156 = load i8, i8* %127, align 1, !dbg !3223
  %157 = zext i8 %156 to i32, !dbg !3223
  %158 = or i32 %154, %157, !dbg !3223
  call void @llvm.dbg.value(metadata i32 %158, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %159, !dbg !3223

159:                                              ; preds = %152, %143
  %160 = phi i8* [ %155, %152 ], [ %127, %143 ], !dbg !3219
  %161 = phi i32 [ %153, %152 ], [ %145, %143 ], !dbg !3219
  %162 = phi i32 [ %158, %152 ], [ %146, %143 ], !dbg !3219
  call void @llvm.dbg.value(metadata i32 %162, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %161, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %160, metadata !3097, metadata !DIExpression()), !dbg !3150
  %163 = lshr i32 %161, 11, !dbg !3220
  %164 = mul i32 %163, %150, !dbg !3220
  call void @llvm.dbg.value(metadata i32 %164, metadata !3102, metadata !DIExpression()), !dbg !3177
  %165 = icmp ult i32 %162, %164, !dbg !3225
  br i1 %165, label %166, label %172, !dbg !3220

166:                                              ; preds = %159
  call void @llvm.dbg.value(metadata i32 %164, metadata !3098, metadata !DIExpression()), !dbg !3150
  %167 = sub nsw i32 2048, %150, !dbg !3227
  %168 = lshr i32 %167, 5, !dbg !3227
  %169 = trunc i32 %168 to i16, !dbg !3227
  %170 = add i16 %149, %169, !dbg !3227
  store i16 %170, i16* %148, align 2, !dbg !3227
  %171 = shl nuw nsw i32 %147, 1, !dbg !3227
  call void @llvm.dbg.value(metadata i32 %171, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %179, !dbg !3227

172:                                              ; preds = %159
  %173 = sub i32 %161, %164, !dbg !3229
  call void @llvm.dbg.value(metadata i32 %173, metadata !3098, metadata !DIExpression()), !dbg !3150
  %174 = sub i32 %162, %164, !dbg !3229
  call void @llvm.dbg.value(metadata i32 %174, metadata !3099, metadata !DIExpression()), !dbg !3150
  %175 = lshr i16 %149, 5, !dbg !3229
  %176 = sub i16 %149, %175, !dbg !3229
  store i16 %176, i16* %148, align 2, !dbg !3229
  %177 = shl nuw nsw i32 %147, 1, !dbg !3229
  %178 = or i32 %177, 1, !dbg !3229
  call void @llvm.dbg.value(metadata i32 %178, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %179

179:                                              ; preds = %172, %166
  %180 = phi i32 [ %164, %166 ], [ %173, %172 ], !dbg !3231
  %181 = phi i32 [ %162, %166 ], [ %174, %172 ], !dbg !3219
  %182 = phi i32 [ %171, %166 ], [ %178, %172 ], !dbg !3231
  call void @llvm.dbg.value(metadata i32 %182, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %181, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %180, metadata !3098, metadata !DIExpression()), !dbg !3150
  %183 = getelementptr inbounds i16, i16* %111, i32 %182, !dbg !3232
  %184 = load i16, i16* %183, align 2, !dbg !3232
  %185 = zext i16 %184 to i32, !dbg !3232
  call void @llvm.dbg.value(metadata i32 %185, metadata !3103, metadata !DIExpression()), !dbg !3177
  %186 = icmp ult i32 %180, 16777216, !dbg !3233
  br i1 %186, label %187, label %194, !dbg !3232

187:                                              ; preds = %179
  %188 = shl nuw i32 %180, 8, !dbg !3235
  call void @llvm.dbg.value(metadata i32 %188, metadata !3098, metadata !DIExpression()), !dbg !3150
  %189 = shl i32 %181, 8, !dbg !3235
  %190 = getelementptr inbounds i8, i8* %160, i32 1, !dbg !3235
  call void @llvm.dbg.value(metadata i8* %190, metadata !3097, metadata !DIExpression()), !dbg !3150
  %191 = load i8, i8* %160, align 1, !dbg !3235
  %192 = zext i8 %191 to i32, !dbg !3235
  %193 = or i32 %189, %192, !dbg !3235
  call void @llvm.dbg.value(metadata i32 %193, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %194, !dbg !3235

194:                                              ; preds = %187, %179
  %195 = phi i8* [ %190, %187 ], [ %160, %179 ], !dbg !3219
  %196 = phi i32 [ %188, %187 ], [ %180, %179 ], !dbg !3219
  %197 = phi i32 [ %193, %187 ], [ %181, %179 ], !dbg !3219
  call void @llvm.dbg.value(metadata i32 %197, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %196, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %195, metadata !3097, metadata !DIExpression()), !dbg !3150
  %198 = lshr i32 %196, 11, !dbg !3232
  %199 = mul i32 %198, %185, !dbg !3232
  call void @llvm.dbg.value(metadata i32 %199, metadata !3102, metadata !DIExpression()), !dbg !3177
  %200 = icmp ult i32 %197, %199, !dbg !3237
  br i1 %200, label %201, label %207, !dbg !3232

201:                                              ; preds = %194
  call void @llvm.dbg.value(metadata i32 %199, metadata !3098, metadata !DIExpression()), !dbg !3150
  %202 = sub nsw i32 2048, %185, !dbg !3239
  %203 = lshr i32 %202, 5, !dbg !3239
  %204 = trunc i32 %203 to i16, !dbg !3239
  %205 = add i16 %184, %204, !dbg !3239
  store i16 %205, i16* %183, align 2, !dbg !3239
  %206 = shl nsw i32 %182, 1, !dbg !3239
  call void @llvm.dbg.value(metadata i32 %206, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %214, !dbg !3239

207:                                              ; preds = %194
  %208 = sub i32 %196, %199, !dbg !3241
  call void @llvm.dbg.value(metadata i32 %208, metadata !3098, metadata !DIExpression()), !dbg !3150
  %209 = sub i32 %197, %199, !dbg !3241
  call void @llvm.dbg.value(metadata i32 %209, metadata !3099, metadata !DIExpression()), !dbg !3150
  %210 = lshr i16 %184, 5, !dbg !3241
  %211 = sub i16 %184, %210, !dbg !3241
  store i16 %211, i16* %183, align 2, !dbg !3241
  %212 = shl nsw i32 %182, 1, !dbg !3241
  %213 = or i32 %212, 1, !dbg !3241
  call void @llvm.dbg.value(metadata i32 %213, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %214

214:                                              ; preds = %207, %201
  %215 = phi i32 [ %199, %201 ], [ %208, %207 ], !dbg !3243
  %216 = phi i32 [ %197, %201 ], [ %209, %207 ], !dbg !3219
  %217 = phi i32 [ %206, %201 ], [ %213, %207 ], !dbg !3243
  call void @llvm.dbg.value(metadata i32 %217, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %216, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %215, metadata !3098, metadata !DIExpression()), !dbg !3150
  %218 = getelementptr inbounds i16, i16* %111, i32 %217, !dbg !3244
  %219 = load i16, i16* %218, align 2, !dbg !3244
  %220 = zext i16 %219 to i32, !dbg !3244
  call void @llvm.dbg.value(metadata i32 %220, metadata !3103, metadata !DIExpression()), !dbg !3177
  %221 = icmp ult i32 %215, 16777216, !dbg !3245
  br i1 %221, label %222, label %229, !dbg !3244

222:                                              ; preds = %214
  %223 = shl nuw i32 %215, 8, !dbg !3247
  call void @llvm.dbg.value(metadata i32 %223, metadata !3098, metadata !DIExpression()), !dbg !3150
  %224 = shl i32 %216, 8, !dbg !3247
  %225 = getelementptr inbounds i8, i8* %195, i32 1, !dbg !3247
  call void @llvm.dbg.value(metadata i8* %225, metadata !3097, metadata !DIExpression()), !dbg !3150
  %226 = load i8, i8* %195, align 1, !dbg !3247
  %227 = zext i8 %226 to i32, !dbg !3247
  %228 = or i32 %224, %227, !dbg !3247
  call void @llvm.dbg.value(metadata i32 %228, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %229, !dbg !3247

229:                                              ; preds = %222, %214
  %230 = phi i8* [ %225, %222 ], [ %195, %214 ], !dbg !3219
  %231 = phi i32 [ %223, %222 ], [ %215, %214 ], !dbg !3219
  %232 = phi i32 [ %228, %222 ], [ %216, %214 ], !dbg !3219
  call void @llvm.dbg.value(metadata i32 %232, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %231, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %230, metadata !3097, metadata !DIExpression()), !dbg !3150
  %233 = lshr i32 %231, 11, !dbg !3244
  %234 = mul i32 %233, %220, !dbg !3244
  call void @llvm.dbg.value(metadata i32 %234, metadata !3102, metadata !DIExpression()), !dbg !3177
  %235 = icmp ult i32 %232, %234, !dbg !3249
  br i1 %235, label %236, label %242, !dbg !3244

236:                                              ; preds = %229
  call void @llvm.dbg.value(metadata i32 %234, metadata !3098, metadata !DIExpression()), !dbg !3150
  %237 = sub nsw i32 2048, %220, !dbg !3251
  %238 = lshr i32 %237, 5, !dbg !3251
  %239 = trunc i32 %238 to i16, !dbg !3251
  %240 = add i16 %219, %239, !dbg !3251
  store i16 %240, i16* %218, align 2, !dbg !3251
  %241 = shl i32 %217, 1, !dbg !3251
  call void @llvm.dbg.value(metadata i32 %241, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %249, !dbg !3251

242:                                              ; preds = %229
  %243 = sub i32 %231, %234, !dbg !3253
  call void @llvm.dbg.value(metadata i32 %243, metadata !3098, metadata !DIExpression()), !dbg !3150
  %244 = sub i32 %232, %234, !dbg !3253
  call void @llvm.dbg.value(metadata i32 %244, metadata !3099, metadata !DIExpression()), !dbg !3150
  %245 = lshr i16 %219, 5, !dbg !3253
  %246 = sub i16 %219, %245, !dbg !3253
  store i16 %246, i16* %218, align 2, !dbg !3253
  %247 = shl i32 %217, 1, !dbg !3253
  %248 = or i32 %247, 1, !dbg !3253
  call void @llvm.dbg.value(metadata i32 %248, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %249

249:                                              ; preds = %242, %236
  %250 = phi i32 [ %234, %236 ], [ %243, %242 ], !dbg !3255
  %251 = phi i32 [ %232, %236 ], [ %244, %242 ], !dbg !3219
  %252 = phi i32 [ %241, %236 ], [ %248, %242 ], !dbg !3255
  call void @llvm.dbg.value(metadata i32 %252, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %251, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %250, metadata !3098, metadata !DIExpression()), !dbg !3150
  %253 = getelementptr inbounds i16, i16* %111, i32 %252, !dbg !3256
  %254 = load i16, i16* %253, align 2, !dbg !3256
  %255 = zext i16 %254 to i32, !dbg !3256
  call void @llvm.dbg.value(metadata i32 %255, metadata !3103, metadata !DIExpression()), !dbg !3177
  %256 = icmp ult i32 %250, 16777216, !dbg !3257
  br i1 %256, label %257, label %264, !dbg !3256

257:                                              ; preds = %249
  %258 = shl nuw i32 %250, 8, !dbg !3259
  call void @llvm.dbg.value(metadata i32 %258, metadata !3098, metadata !DIExpression()), !dbg !3150
  %259 = shl i32 %251, 8, !dbg !3259
  %260 = getelementptr inbounds i8, i8* %230, i32 1, !dbg !3259
  call void @llvm.dbg.value(metadata i8* %260, metadata !3097, metadata !DIExpression()), !dbg !3150
  %261 = load i8, i8* %230, align 1, !dbg !3259
  %262 = zext i8 %261 to i32, !dbg !3259
  %263 = or i32 %259, %262, !dbg !3259
  call void @llvm.dbg.value(metadata i32 %263, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %264, !dbg !3259

264:                                              ; preds = %257, %249
  %265 = phi i8* [ %260, %257 ], [ %230, %249 ], !dbg !3219
  %266 = phi i32 [ %258, %257 ], [ %250, %249 ], !dbg !3219
  %267 = phi i32 [ %263, %257 ], [ %251, %249 ], !dbg !3219
  call void @llvm.dbg.value(metadata i32 %267, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %266, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %265, metadata !3097, metadata !DIExpression()), !dbg !3150
  %268 = lshr i32 %266, 11, !dbg !3256
  %269 = mul i32 %268, %255, !dbg !3256
  call void @llvm.dbg.value(metadata i32 %269, metadata !3102, metadata !DIExpression()), !dbg !3177
  %270 = icmp ult i32 %267, %269, !dbg !3261
  br i1 %270, label %271, label %277, !dbg !3256

271:                                              ; preds = %264
  call void @llvm.dbg.value(metadata i32 %269, metadata !3098, metadata !DIExpression()), !dbg !3150
  %272 = sub nsw i32 2048, %255, !dbg !3263
  %273 = lshr i32 %272, 5, !dbg !3263
  %274 = trunc i32 %273 to i16, !dbg !3263
  %275 = add i16 %254, %274, !dbg !3263
  store i16 %275, i16* %253, align 2, !dbg !3263
  %276 = shl i32 %252, 1, !dbg !3263
  call void @llvm.dbg.value(metadata i32 %276, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %284, !dbg !3263

277:                                              ; preds = %264
  %278 = sub i32 %266, %269, !dbg !3265
  call void @llvm.dbg.value(metadata i32 %278, metadata !3098, metadata !DIExpression()), !dbg !3150
  %279 = sub i32 %267, %269, !dbg !3265
  call void @llvm.dbg.value(metadata i32 %279, metadata !3099, metadata !DIExpression()), !dbg !3150
  %280 = lshr i16 %254, 5, !dbg !3265
  %281 = sub i16 %254, %280, !dbg !3265
  store i16 %281, i16* %253, align 2, !dbg !3265
  %282 = shl i32 %252, 1, !dbg !3265
  %283 = or i32 %282, 1, !dbg !3265
  call void @llvm.dbg.value(metadata i32 %283, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %284

284:                                              ; preds = %277, %271
  %285 = phi i32 [ %269, %271 ], [ %278, %277 ], !dbg !3267
  %286 = phi i32 [ %267, %271 ], [ %279, %277 ], !dbg !3219
  %287 = phi i32 [ %276, %271 ], [ %283, %277 ], !dbg !3267
  call void @llvm.dbg.value(metadata i32 %287, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %286, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %285, metadata !3098, metadata !DIExpression()), !dbg !3150
  %288 = getelementptr inbounds i16, i16* %111, i32 %287, !dbg !3268
  %289 = load i16, i16* %288, align 2, !dbg !3268
  %290 = zext i16 %289 to i32, !dbg !3268
  call void @llvm.dbg.value(metadata i32 %290, metadata !3103, metadata !DIExpression()), !dbg !3177
  %291 = icmp ult i32 %285, 16777216, !dbg !3269
  br i1 %291, label %292, label %299, !dbg !3268

292:                                              ; preds = %284
  %293 = shl nuw i32 %285, 8, !dbg !3271
  call void @llvm.dbg.value(metadata i32 %293, metadata !3098, metadata !DIExpression()), !dbg !3150
  %294 = shl i32 %286, 8, !dbg !3271
  %295 = getelementptr inbounds i8, i8* %265, i32 1, !dbg !3271
  call void @llvm.dbg.value(metadata i8* %295, metadata !3097, metadata !DIExpression()), !dbg !3150
  %296 = load i8, i8* %265, align 1, !dbg !3271
  %297 = zext i8 %296 to i32, !dbg !3271
  %298 = or i32 %294, %297, !dbg !3271
  call void @llvm.dbg.value(metadata i32 %298, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %299, !dbg !3271

299:                                              ; preds = %292, %284
  %300 = phi i8* [ %295, %292 ], [ %265, %284 ], !dbg !3219
  %301 = phi i32 [ %293, %292 ], [ %285, %284 ], !dbg !3219
  %302 = phi i32 [ %298, %292 ], [ %286, %284 ], !dbg !3219
  call void @llvm.dbg.value(metadata i32 %302, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %301, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %300, metadata !3097, metadata !DIExpression()), !dbg !3150
  %303 = lshr i32 %301, 11, !dbg !3268
  %304 = mul i32 %303, %290, !dbg !3268
  call void @llvm.dbg.value(metadata i32 %304, metadata !3102, metadata !DIExpression()), !dbg !3177
  %305 = icmp ult i32 %302, %304, !dbg !3273
  br i1 %305, label %306, label %312, !dbg !3268

306:                                              ; preds = %299
  call void @llvm.dbg.value(metadata i32 %304, metadata !3098, metadata !DIExpression()), !dbg !3150
  %307 = sub nsw i32 2048, %290, !dbg !3275
  %308 = lshr i32 %307, 5, !dbg !3275
  %309 = trunc i32 %308 to i16, !dbg !3275
  %310 = add i16 %289, %309, !dbg !3275
  store i16 %310, i16* %288, align 2, !dbg !3275
  %311 = shl i32 %287, 1, !dbg !3275
  call void @llvm.dbg.value(metadata i32 %311, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %319, !dbg !3275

312:                                              ; preds = %299
  %313 = sub i32 %301, %304, !dbg !3277
  call void @llvm.dbg.value(metadata i32 %313, metadata !3098, metadata !DIExpression()), !dbg !3150
  %314 = sub i32 %302, %304, !dbg !3277
  call void @llvm.dbg.value(metadata i32 %314, metadata !3099, metadata !DIExpression()), !dbg !3150
  %315 = lshr i16 %289, 5, !dbg !3277
  %316 = sub i16 %289, %315, !dbg !3277
  store i16 %316, i16* %288, align 2, !dbg !3277
  %317 = shl i32 %287, 1, !dbg !3277
  %318 = or i32 %317, 1, !dbg !3277
  call void @llvm.dbg.value(metadata i32 %318, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %319

319:                                              ; preds = %312, %306
  %320 = phi i32 [ %304, %306 ], [ %313, %312 ], !dbg !3279
  %321 = phi i32 [ %302, %306 ], [ %314, %312 ], !dbg !3219
  %322 = phi i32 [ %311, %306 ], [ %318, %312 ], !dbg !3279
  call void @llvm.dbg.value(metadata i32 %322, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %321, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %320, metadata !3098, metadata !DIExpression()), !dbg !3150
  %323 = getelementptr inbounds i16, i16* %111, i32 %322, !dbg !3280
  %324 = load i16, i16* %323, align 2, !dbg !3280
  %325 = zext i16 %324 to i32, !dbg !3280
  call void @llvm.dbg.value(metadata i32 %325, metadata !3103, metadata !DIExpression()), !dbg !3177
  %326 = icmp ult i32 %320, 16777216, !dbg !3281
  br i1 %326, label %327, label %334, !dbg !3280

327:                                              ; preds = %319
  %328 = shl nuw i32 %320, 8, !dbg !3283
  call void @llvm.dbg.value(metadata i32 %328, metadata !3098, metadata !DIExpression()), !dbg !3150
  %329 = shl i32 %321, 8, !dbg !3283
  %330 = getelementptr inbounds i8, i8* %300, i32 1, !dbg !3283
  call void @llvm.dbg.value(metadata i8* %330, metadata !3097, metadata !DIExpression()), !dbg !3150
  %331 = load i8, i8* %300, align 1, !dbg !3283
  %332 = zext i8 %331 to i32, !dbg !3283
  %333 = or i32 %329, %332, !dbg !3283
  call void @llvm.dbg.value(metadata i32 %333, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %334, !dbg !3283

334:                                              ; preds = %327, %319
  %335 = phi i8* [ %330, %327 ], [ %300, %319 ], !dbg !3219
  %336 = phi i32 [ %328, %327 ], [ %320, %319 ], !dbg !3219
  %337 = phi i32 [ %333, %327 ], [ %321, %319 ], !dbg !3219
  call void @llvm.dbg.value(metadata i32 %337, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %336, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %335, metadata !3097, metadata !DIExpression()), !dbg !3150
  %338 = lshr i32 %336, 11, !dbg !3280
  %339 = mul i32 %338, %325, !dbg !3280
  call void @llvm.dbg.value(metadata i32 %339, metadata !3102, metadata !DIExpression()), !dbg !3177
  %340 = icmp ult i32 %337, %339, !dbg !3285
  br i1 %340, label %341, label %347, !dbg !3280

341:                                              ; preds = %334
  call void @llvm.dbg.value(metadata i32 %339, metadata !3098, metadata !DIExpression()), !dbg !3150
  %342 = sub nsw i32 2048, %325, !dbg !3287
  %343 = lshr i32 %342, 5, !dbg !3287
  %344 = trunc i32 %343 to i16, !dbg !3287
  %345 = add i16 %324, %344, !dbg !3287
  store i16 %345, i16* %323, align 2, !dbg !3287
  %346 = shl i32 %322, 1, !dbg !3287
  call void @llvm.dbg.value(metadata i32 %346, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %354, !dbg !3287

347:                                              ; preds = %334
  %348 = sub i32 %336, %339, !dbg !3289
  call void @llvm.dbg.value(metadata i32 %348, metadata !3098, metadata !DIExpression()), !dbg !3150
  %349 = sub i32 %337, %339, !dbg !3289
  call void @llvm.dbg.value(metadata i32 %349, metadata !3099, metadata !DIExpression()), !dbg !3150
  %350 = lshr i16 %324, 5, !dbg !3289
  %351 = sub i16 %324, %350, !dbg !3289
  store i16 %351, i16* %323, align 2, !dbg !3289
  %352 = shl i32 %322, 1, !dbg !3289
  %353 = or i32 %352, 1, !dbg !3289
  call void @llvm.dbg.value(metadata i32 %353, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %354

354:                                              ; preds = %347, %341
  %355 = phi i32 [ %339, %341 ], [ %348, %347 ], !dbg !3291
  %356 = phi i32 [ %337, %341 ], [ %349, %347 ], !dbg !3219
  %357 = phi i32 [ %346, %341 ], [ %353, %347 ], !dbg !3291
  call void @llvm.dbg.value(metadata i32 %357, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %356, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %355, metadata !3098, metadata !DIExpression()), !dbg !3150
  %358 = getelementptr inbounds i16, i16* %111, i32 %357, !dbg !3292
  %359 = load i16, i16* %358, align 2, !dbg !3292
  %360 = zext i16 %359 to i32, !dbg !3292
  call void @llvm.dbg.value(metadata i32 %360, metadata !3103, metadata !DIExpression()), !dbg !3177
  %361 = icmp ult i32 %355, 16777216, !dbg !3293
  br i1 %361, label %362, label %369, !dbg !3292

362:                                              ; preds = %354
  %363 = shl nuw i32 %355, 8, !dbg !3295
  call void @llvm.dbg.value(metadata i32 %363, metadata !3098, metadata !DIExpression()), !dbg !3150
  %364 = shl i32 %356, 8, !dbg !3295
  %365 = getelementptr inbounds i8, i8* %335, i32 1, !dbg !3295
  call void @llvm.dbg.value(metadata i8* %365, metadata !3097, metadata !DIExpression()), !dbg !3150
  %366 = load i8, i8* %335, align 1, !dbg !3295
  %367 = zext i8 %366 to i32, !dbg !3295
  %368 = or i32 %364, %367, !dbg !3295
  call void @llvm.dbg.value(metadata i32 %368, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %369, !dbg !3295

369:                                              ; preds = %362, %354
  %370 = phi i8* [ %365, %362 ], [ %335, %354 ], !dbg !3219
  %371 = phi i32 [ %363, %362 ], [ %355, %354 ], !dbg !3219
  %372 = phi i32 [ %368, %362 ], [ %356, %354 ], !dbg !3219
  call void @llvm.dbg.value(metadata i32 %372, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %371, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %370, metadata !3097, metadata !DIExpression()), !dbg !3150
  %373 = lshr i32 %371, 11, !dbg !3292
  %374 = mul i32 %373, %360, !dbg !3292
  call void @llvm.dbg.value(metadata i32 %374, metadata !3102, metadata !DIExpression()), !dbg !3177
  %375 = icmp ult i32 %372, %374, !dbg !3297
  br i1 %375, label %376, label %382, !dbg !3292

376:                                              ; preds = %369
  call void @llvm.dbg.value(metadata i32 %374, metadata !3098, metadata !DIExpression()), !dbg !3150
  %377 = sub nsw i32 2048, %360, !dbg !3299
  %378 = lshr i32 %377, 5, !dbg !3299
  %379 = trunc i32 %378 to i16, !dbg !3299
  %380 = add i16 %359, %379, !dbg !3299
  store i16 %380, i16* %358, align 2, !dbg !3299
  %381 = shl i32 %357, 1, !dbg !3299
  call void @llvm.dbg.value(metadata i32 %381, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %718, !dbg !3299

382:                                              ; preds = %369
  %383 = sub i32 %371, %374, !dbg !3301
  call void @llvm.dbg.value(metadata i32 %383, metadata !3098, metadata !DIExpression()), !dbg !3150
  %384 = sub i32 %372, %374, !dbg !3301
  call void @llvm.dbg.value(metadata i32 %384, metadata !3099, metadata !DIExpression()), !dbg !3150
  %385 = lshr i16 %359, 5, !dbg !3301
  %386 = sub i16 %359, %385, !dbg !3301
  store i16 %386, i16* %358, align 2, !dbg !3301
  %387 = shl i32 %357, 1, !dbg !3301
  %388 = or i32 %387, 1, !dbg !3301
  call void @llvm.dbg.value(metadata i32 %388, metadata !3105, metadata !DIExpression()), !dbg !3202
  br label %718

389:                                              ; preds = %110
  %390 = sub i32 %59, %67, !dbg !3303
  %391 = icmp ult i32 %59, %67, !dbg !3304
  %392 = select i1 %391, i32 %29, i32 0, !dbg !3305
  %393 = add i32 %390, %392, !dbg !3306
  %394 = getelementptr inbounds i8, i8* %27, i32 %393, !dbg !3307
  %395 = load i8, i8* %394, align 1, !dbg !3307
  %396 = zext i8 %395 to i32, !dbg !3307
  call void @llvm.dbg.value(metadata i32 %396, metadata !3108, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 256, metadata !3111, metadata !DIExpression()), !dbg !3308
  %397 = icmp ult i32 %68, 10, !dbg !3309
  %398 = select i1 %397, i32 -3, i32 -6, !dbg !3310
  %399 = add i32 %398, %68, !dbg !3311
  call void @llvm.dbg.value(metadata i32 %399, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 1, metadata !3105, metadata !DIExpression()), !dbg !3202
  %400 = shl nuw nsw i32 %396, 1, !dbg !3312
  call void @llvm.dbg.value(metadata i32 %400, metadata !3108, metadata !DIExpression()), !dbg !3308
  %401 = and i32 %400, 256, !dbg !3312
  call void @llvm.dbg.value(metadata i32 %400, metadata !3112, metadata !DIExpression(DW_OP_constu, 256, DW_OP_and, DW_OP_stack_value)), !dbg !3313
  %402 = getelementptr inbounds i16, i16* %111, i32 257, !dbg !3312
  %403 = getelementptr inbounds i16, i16* %402, i32 %401, !dbg !3312
  call void @llvm.dbg.value(metadata i16* %403, metadata !3114, metadata !DIExpression()), !dbg !3313
  %404 = load i16, i16* %403, align 2, !dbg !3312
  %405 = zext i16 %404 to i32, !dbg !3312
  call void @llvm.dbg.value(metadata i32 %405, metadata !3103, metadata !DIExpression()), !dbg !3177
  %406 = icmp ult i32 %88, 16777216, !dbg !3314
  br i1 %406, label %407, label %414, !dbg !3312

407:                                              ; preds = %389
  %408 = shl nuw i32 %88, 8, !dbg !3316
  call void @llvm.dbg.value(metadata i32 %408, metadata !3098, metadata !DIExpression()), !dbg !3150
  %409 = shl i32 %86, 8, !dbg !3316
  %410 = getelementptr inbounds i8, i8* %84, i32 1, !dbg !3316
  call void @llvm.dbg.value(metadata i8* %410, metadata !3097, metadata !DIExpression()), !dbg !3150
  %411 = load i8, i8* %84, align 1, !dbg !3316
  %412 = zext i8 %411 to i32, !dbg !3316
  %413 = or i32 %409, %412, !dbg !3316
  call void @llvm.dbg.value(metadata i32 %413, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %414, !dbg !3316

414:                                              ; preds = %407, %389
  %415 = phi i8* [ %410, %407 ], [ %84, %389 ], !dbg !3177
  %416 = phi i32 [ %408, %407 ], [ %88, %389 ], !dbg !3202
  %417 = phi i32 [ %413, %407 ], [ %86, %389 ], !dbg !3177
  call void @llvm.dbg.value(metadata i32 %417, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %416, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %415, metadata !3097, metadata !DIExpression()), !dbg !3150
  %418 = lshr i32 %416, 11, !dbg !3312
  %419 = mul i32 %418, %405, !dbg !3312
  call void @llvm.dbg.value(metadata i32 %419, metadata !3102, metadata !DIExpression()), !dbg !3177
  %420 = icmp ult i32 %417, %419, !dbg !3318
  br i1 %420, label %421, label %427, !dbg !3312

421:                                              ; preds = %414
  call void @llvm.dbg.value(metadata i32 %419, metadata !3098, metadata !DIExpression()), !dbg !3150
  %422 = sub nsw i32 2048, %405, !dbg !3320
  %423 = lshr i32 %422, 5, !dbg !3320
  %424 = trunc i32 %423 to i16, !dbg !3320
  %425 = add i16 %404, %424, !dbg !3320
  store i16 %425, i16* %403, align 2, !dbg !3320
  call void @llvm.dbg.value(metadata i32 2, metadata !3105, metadata !DIExpression()), !dbg !3202
  %426 = xor i32 %401, 256, !dbg !3320
  call void @llvm.dbg.value(metadata i32 %426, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %432, !dbg !3320

427:                                              ; preds = %414
  %428 = sub i32 %416, %419, !dbg !3322
  call void @llvm.dbg.value(metadata i32 %428, metadata !3098, metadata !DIExpression()), !dbg !3150
  %429 = sub i32 %417, %419, !dbg !3322
  call void @llvm.dbg.value(metadata i32 %429, metadata !3099, metadata !DIExpression()), !dbg !3150
  %430 = lshr i16 %404, 5, !dbg !3322
  %431 = sub i16 %404, %430, !dbg !3322
  store i16 %431, i16* %403, align 2, !dbg !3322
  call void @llvm.dbg.value(metadata i32 3, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %400, metadata !3111, metadata !DIExpression(DW_OP_constu, 256, DW_OP_and, DW_OP_stack_value)), !dbg !3308
  br label %432

432:                                              ; preds = %427, %421
  %433 = phi i32 [ %419, %421 ], [ %428, %427 ], !dbg !3324
  %434 = phi i32 [ %417, %421 ], [ %429, %427 ], !dbg !3313
  %435 = phi i32 [ 2, %421 ], [ 3, %427 ], !dbg !3324
  %436 = phi i32 [ %426, %421 ], [ %401, %427 ], !dbg !3324
  call void @llvm.dbg.value(metadata i32 %436, metadata !3111, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %435, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %434, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %433, metadata !3098, metadata !DIExpression()), !dbg !3150
  %437 = shl nuw nsw i32 %396, 2, !dbg !3325
  call void @llvm.dbg.value(metadata i32 %437, metadata !3108, metadata !DIExpression()), !dbg !3308
  %438 = and i32 %436, %437, !dbg !3325
  call void @llvm.dbg.value(metadata i32 %438, metadata !3112, metadata !DIExpression()), !dbg !3313
  %439 = getelementptr inbounds i16, i16* %111, i32 %436, !dbg !3325
  %440 = getelementptr inbounds i16, i16* %439, i32 %438, !dbg !3325
  %441 = getelementptr inbounds i16, i16* %440, i32 %435, !dbg !3325
  call void @llvm.dbg.value(metadata i16* %441, metadata !3114, metadata !DIExpression()), !dbg !3313
  %442 = load i16, i16* %441, align 2, !dbg !3325
  %443 = zext i16 %442 to i32, !dbg !3325
  call void @llvm.dbg.value(metadata i32 %443, metadata !3103, metadata !DIExpression()), !dbg !3177
  %444 = icmp ult i32 %433, 16777216, !dbg !3326
  br i1 %444, label %445, label %452, !dbg !3325

445:                                              ; preds = %432
  %446 = shl nuw i32 %433, 8, !dbg !3328
  call void @llvm.dbg.value(metadata i32 %446, metadata !3098, metadata !DIExpression()), !dbg !3150
  %447 = shl i32 %434, 8, !dbg !3328
  %448 = getelementptr inbounds i8, i8* %415, i32 1, !dbg !3328
  call void @llvm.dbg.value(metadata i8* %448, metadata !3097, metadata !DIExpression()), !dbg !3150
  %449 = load i8, i8* %415, align 1, !dbg !3328
  %450 = zext i8 %449 to i32, !dbg !3328
  %451 = or i32 %447, %450, !dbg !3328
  call void @llvm.dbg.value(metadata i32 %451, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %452, !dbg !3328

452:                                              ; preds = %445, %432
  %453 = phi i8* [ %448, %445 ], [ %415, %432 ], !dbg !3313
  %454 = phi i32 [ %446, %445 ], [ %433, %432 ], !dbg !3313
  %455 = phi i32 [ %451, %445 ], [ %434, %432 ], !dbg !3313
  call void @llvm.dbg.value(metadata i32 %455, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %454, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %453, metadata !3097, metadata !DIExpression()), !dbg !3150
  %456 = lshr i32 %454, 11, !dbg !3325
  %457 = mul i32 %456, %443, !dbg !3325
  call void @llvm.dbg.value(metadata i32 %457, metadata !3102, metadata !DIExpression()), !dbg !3177
  %458 = icmp ult i32 %455, %457, !dbg !3330
  br i1 %458, label %459, label %466, !dbg !3325

459:                                              ; preds = %452
  call void @llvm.dbg.value(metadata i32 %457, metadata !3098, metadata !DIExpression()), !dbg !3150
  %460 = sub nsw i32 2048, %443, !dbg !3332
  %461 = lshr i32 %460, 5, !dbg !3332
  %462 = trunc i32 %461 to i16, !dbg !3332
  %463 = add i16 %442, %462, !dbg !3332
  store i16 %463, i16* %441, align 2, !dbg !3332
  %464 = shl nuw nsw i32 %435, 1, !dbg !3332
  call void @llvm.dbg.value(metadata i32 %464, metadata !3105, metadata !DIExpression()), !dbg !3202
  %465 = xor i32 %438, %436, !dbg !3332
  call void @llvm.dbg.value(metadata i32 %465, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %473, !dbg !3332

466:                                              ; preds = %452
  %467 = sub i32 %454, %457, !dbg !3334
  call void @llvm.dbg.value(metadata i32 %467, metadata !3098, metadata !DIExpression()), !dbg !3150
  %468 = sub i32 %455, %457, !dbg !3334
  call void @llvm.dbg.value(metadata i32 %468, metadata !3099, metadata !DIExpression()), !dbg !3150
  %469 = lshr i16 %442, 5, !dbg !3334
  %470 = sub i16 %442, %469, !dbg !3334
  store i16 %470, i16* %441, align 2, !dbg !3334
  %471 = shl nuw nsw i32 %435, 1, !dbg !3334
  %472 = or i32 %471, 1, !dbg !3334
  call void @llvm.dbg.value(metadata i32 %472, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %438, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %473

473:                                              ; preds = %466, %459
  %474 = phi i32 [ %457, %459 ], [ %467, %466 ], !dbg !3336
  %475 = phi i32 [ %455, %459 ], [ %468, %466 ], !dbg !3313
  %476 = phi i32 [ %464, %459 ], [ %472, %466 ], !dbg !3336
  %477 = phi i32 [ %465, %459 ], [ %438, %466 ], !dbg !3336
  call void @llvm.dbg.value(metadata i32 %477, metadata !3111, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %476, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %475, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %474, metadata !3098, metadata !DIExpression()), !dbg !3150
  %478 = shl nuw nsw i32 %396, 3, !dbg !3337
  call void @llvm.dbg.value(metadata i32 %478, metadata !3108, metadata !DIExpression()), !dbg !3308
  %479 = and i32 %477, %478, !dbg !3337
  call void @llvm.dbg.value(metadata i32 %479, metadata !3112, metadata !DIExpression()), !dbg !3313
  %480 = getelementptr inbounds i16, i16* %111, i32 %477, !dbg !3337
  %481 = getelementptr inbounds i16, i16* %480, i32 %479, !dbg !3337
  %482 = getelementptr inbounds i16, i16* %481, i32 %476, !dbg !3337
  call void @llvm.dbg.value(metadata i16* %482, metadata !3114, metadata !DIExpression()), !dbg !3313
  %483 = load i16, i16* %482, align 2, !dbg !3337
  %484 = zext i16 %483 to i32, !dbg !3337
  call void @llvm.dbg.value(metadata i32 %484, metadata !3103, metadata !DIExpression()), !dbg !3177
  %485 = icmp ult i32 %474, 16777216, !dbg !3338
  br i1 %485, label %486, label %493, !dbg !3337

486:                                              ; preds = %473
  %487 = shl nuw i32 %474, 8, !dbg !3340
  call void @llvm.dbg.value(metadata i32 %487, metadata !3098, metadata !DIExpression()), !dbg !3150
  %488 = shl i32 %475, 8, !dbg !3340
  %489 = getelementptr inbounds i8, i8* %453, i32 1, !dbg !3340
  call void @llvm.dbg.value(metadata i8* %489, metadata !3097, metadata !DIExpression()), !dbg !3150
  %490 = load i8, i8* %453, align 1, !dbg !3340
  %491 = zext i8 %490 to i32, !dbg !3340
  %492 = or i32 %488, %491, !dbg !3340
  call void @llvm.dbg.value(metadata i32 %492, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %493, !dbg !3340

493:                                              ; preds = %486, %473
  %494 = phi i8* [ %489, %486 ], [ %453, %473 ], !dbg !3313
  %495 = phi i32 [ %487, %486 ], [ %474, %473 ], !dbg !3313
  %496 = phi i32 [ %492, %486 ], [ %475, %473 ], !dbg !3313
  call void @llvm.dbg.value(metadata i32 %496, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %495, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %494, metadata !3097, metadata !DIExpression()), !dbg !3150
  %497 = lshr i32 %495, 11, !dbg !3337
  %498 = mul i32 %497, %484, !dbg !3337
  call void @llvm.dbg.value(metadata i32 %498, metadata !3102, metadata !DIExpression()), !dbg !3177
  %499 = icmp ult i32 %496, %498, !dbg !3342
  br i1 %499, label %500, label %507, !dbg !3337

500:                                              ; preds = %493
  call void @llvm.dbg.value(metadata i32 %498, metadata !3098, metadata !DIExpression()), !dbg !3150
  %501 = sub nsw i32 2048, %484, !dbg !3344
  %502 = lshr i32 %501, 5, !dbg !3344
  %503 = trunc i32 %502 to i16, !dbg !3344
  %504 = add i16 %483, %503, !dbg !3344
  store i16 %504, i16* %482, align 2, !dbg !3344
  %505 = shl nsw i32 %476, 1, !dbg !3344
  call void @llvm.dbg.value(metadata i32 %505, metadata !3105, metadata !DIExpression()), !dbg !3202
  %506 = xor i32 %479, %477, !dbg !3344
  call void @llvm.dbg.value(metadata i32 %506, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %514, !dbg !3344

507:                                              ; preds = %493
  %508 = sub i32 %495, %498, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %508, metadata !3098, metadata !DIExpression()), !dbg !3150
  %509 = sub i32 %496, %498, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %509, metadata !3099, metadata !DIExpression()), !dbg !3150
  %510 = lshr i16 %483, 5, !dbg !3346
  %511 = sub i16 %483, %510, !dbg !3346
  store i16 %511, i16* %482, align 2, !dbg !3346
  %512 = shl nsw i32 %476, 1, !dbg !3346
  %513 = or i32 %512, 1, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %513, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %479, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %514

514:                                              ; preds = %507, %500
  %515 = phi i32 [ %498, %500 ], [ %508, %507 ], !dbg !3348
  %516 = phi i32 [ %496, %500 ], [ %509, %507 ], !dbg !3313
  %517 = phi i32 [ %505, %500 ], [ %513, %507 ], !dbg !3348
  %518 = phi i32 [ %506, %500 ], [ %479, %507 ], !dbg !3348
  call void @llvm.dbg.value(metadata i32 %518, metadata !3111, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %517, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %516, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %515, metadata !3098, metadata !DIExpression()), !dbg !3150
  %519 = shl nuw nsw i32 %396, 4, !dbg !3349
  call void @llvm.dbg.value(metadata i32 %519, metadata !3108, metadata !DIExpression()), !dbg !3308
  %520 = and i32 %518, %519, !dbg !3349
  call void @llvm.dbg.value(metadata i32 %520, metadata !3112, metadata !DIExpression()), !dbg !3313
  %521 = getelementptr inbounds i16, i16* %111, i32 %518, !dbg !3349
  %522 = getelementptr inbounds i16, i16* %521, i32 %520, !dbg !3349
  %523 = getelementptr inbounds i16, i16* %522, i32 %517, !dbg !3349
  call void @llvm.dbg.value(metadata i16* %523, metadata !3114, metadata !DIExpression()), !dbg !3313
  %524 = load i16, i16* %523, align 2, !dbg !3349
  %525 = zext i16 %524 to i32, !dbg !3349
  call void @llvm.dbg.value(metadata i32 %525, metadata !3103, metadata !DIExpression()), !dbg !3177
  %526 = icmp ult i32 %515, 16777216, !dbg !3350
  br i1 %526, label %527, label %534, !dbg !3349

527:                                              ; preds = %514
  %528 = shl nuw i32 %515, 8, !dbg !3352
  call void @llvm.dbg.value(metadata i32 %528, metadata !3098, metadata !DIExpression()), !dbg !3150
  %529 = shl i32 %516, 8, !dbg !3352
  %530 = getelementptr inbounds i8, i8* %494, i32 1, !dbg !3352
  call void @llvm.dbg.value(metadata i8* %530, metadata !3097, metadata !DIExpression()), !dbg !3150
  %531 = load i8, i8* %494, align 1, !dbg !3352
  %532 = zext i8 %531 to i32, !dbg !3352
  %533 = or i32 %529, %532, !dbg !3352
  call void @llvm.dbg.value(metadata i32 %533, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %534, !dbg !3352

534:                                              ; preds = %527, %514
  %535 = phi i8* [ %530, %527 ], [ %494, %514 ], !dbg !3313
  %536 = phi i32 [ %528, %527 ], [ %515, %514 ], !dbg !3313
  %537 = phi i32 [ %533, %527 ], [ %516, %514 ], !dbg !3313
  call void @llvm.dbg.value(metadata i32 %537, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %536, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %535, metadata !3097, metadata !DIExpression()), !dbg !3150
  %538 = lshr i32 %536, 11, !dbg !3349
  %539 = mul i32 %538, %525, !dbg !3349
  call void @llvm.dbg.value(metadata i32 %539, metadata !3102, metadata !DIExpression()), !dbg !3177
  %540 = icmp ult i32 %537, %539, !dbg !3354
  br i1 %540, label %541, label %548, !dbg !3349

541:                                              ; preds = %534
  call void @llvm.dbg.value(metadata i32 %539, metadata !3098, metadata !DIExpression()), !dbg !3150
  %542 = sub nsw i32 2048, %525, !dbg !3356
  %543 = lshr i32 %542, 5, !dbg !3356
  %544 = trunc i32 %543 to i16, !dbg !3356
  %545 = add i16 %524, %544, !dbg !3356
  store i16 %545, i16* %523, align 2, !dbg !3356
  %546 = shl i32 %517, 1, !dbg !3356
  call void @llvm.dbg.value(metadata i32 %546, metadata !3105, metadata !DIExpression()), !dbg !3202
  %547 = xor i32 %520, %518, !dbg !3356
  call void @llvm.dbg.value(metadata i32 %547, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %555, !dbg !3356

548:                                              ; preds = %534
  %549 = sub i32 %536, %539, !dbg !3358
  call void @llvm.dbg.value(metadata i32 %549, metadata !3098, metadata !DIExpression()), !dbg !3150
  %550 = sub i32 %537, %539, !dbg !3358
  call void @llvm.dbg.value(metadata i32 %550, metadata !3099, metadata !DIExpression()), !dbg !3150
  %551 = lshr i16 %524, 5, !dbg !3358
  %552 = sub i16 %524, %551, !dbg !3358
  store i16 %552, i16* %523, align 2, !dbg !3358
  %553 = shl i32 %517, 1, !dbg !3358
  %554 = or i32 %553, 1, !dbg !3358
  call void @llvm.dbg.value(metadata i32 %554, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %520, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %555

555:                                              ; preds = %548, %541
  %556 = phi i32 [ %539, %541 ], [ %549, %548 ], !dbg !3360
  %557 = phi i32 [ %537, %541 ], [ %550, %548 ], !dbg !3313
  %558 = phi i32 [ %546, %541 ], [ %554, %548 ], !dbg !3360
  %559 = phi i32 [ %547, %541 ], [ %520, %548 ], !dbg !3360
  call void @llvm.dbg.value(metadata i32 %559, metadata !3111, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %558, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %557, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %556, metadata !3098, metadata !DIExpression()), !dbg !3150
  %560 = shl nuw nsw i32 %396, 5, !dbg !3361
  call void @llvm.dbg.value(metadata i32 %560, metadata !3108, metadata !DIExpression()), !dbg !3308
  %561 = and i32 %559, %560, !dbg !3361
  call void @llvm.dbg.value(metadata i32 %561, metadata !3112, metadata !DIExpression()), !dbg !3313
  %562 = getelementptr inbounds i16, i16* %111, i32 %559, !dbg !3361
  %563 = getelementptr inbounds i16, i16* %562, i32 %561, !dbg !3361
  %564 = getelementptr inbounds i16, i16* %563, i32 %558, !dbg !3361
  call void @llvm.dbg.value(metadata i16* %564, metadata !3114, metadata !DIExpression()), !dbg !3313
  %565 = load i16, i16* %564, align 2, !dbg !3361
  %566 = zext i16 %565 to i32, !dbg !3361
  call void @llvm.dbg.value(metadata i32 %566, metadata !3103, metadata !DIExpression()), !dbg !3177
  %567 = icmp ult i32 %556, 16777216, !dbg !3362
  br i1 %567, label %568, label %575, !dbg !3361

568:                                              ; preds = %555
  %569 = shl nuw i32 %556, 8, !dbg !3364
  call void @llvm.dbg.value(metadata i32 %569, metadata !3098, metadata !DIExpression()), !dbg !3150
  %570 = shl i32 %557, 8, !dbg !3364
  %571 = getelementptr inbounds i8, i8* %535, i32 1, !dbg !3364
  call void @llvm.dbg.value(metadata i8* %571, metadata !3097, metadata !DIExpression()), !dbg !3150
  %572 = load i8, i8* %535, align 1, !dbg !3364
  %573 = zext i8 %572 to i32, !dbg !3364
  %574 = or i32 %570, %573, !dbg !3364
  call void @llvm.dbg.value(metadata i32 %574, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %575, !dbg !3364

575:                                              ; preds = %568, %555
  %576 = phi i8* [ %571, %568 ], [ %535, %555 ], !dbg !3313
  %577 = phi i32 [ %569, %568 ], [ %556, %555 ], !dbg !3313
  %578 = phi i32 [ %574, %568 ], [ %557, %555 ], !dbg !3313
  call void @llvm.dbg.value(metadata i32 %578, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %577, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %576, metadata !3097, metadata !DIExpression()), !dbg !3150
  %579 = lshr i32 %577, 11, !dbg !3361
  %580 = mul i32 %579, %566, !dbg !3361
  call void @llvm.dbg.value(metadata i32 %580, metadata !3102, metadata !DIExpression()), !dbg !3177
  %581 = icmp ult i32 %578, %580, !dbg !3366
  br i1 %581, label %582, label %589, !dbg !3361

582:                                              ; preds = %575
  call void @llvm.dbg.value(metadata i32 %580, metadata !3098, metadata !DIExpression()), !dbg !3150
  %583 = sub nsw i32 2048, %566, !dbg !3368
  %584 = lshr i32 %583, 5, !dbg !3368
  %585 = trunc i32 %584 to i16, !dbg !3368
  %586 = add i16 %565, %585, !dbg !3368
  store i16 %586, i16* %564, align 2, !dbg !3368
  %587 = shl i32 %558, 1, !dbg !3368
  call void @llvm.dbg.value(metadata i32 %587, metadata !3105, metadata !DIExpression()), !dbg !3202
  %588 = xor i32 %561, %559, !dbg !3368
  call void @llvm.dbg.value(metadata i32 %588, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %596, !dbg !3368

589:                                              ; preds = %575
  %590 = sub i32 %577, %580, !dbg !3370
  call void @llvm.dbg.value(metadata i32 %590, metadata !3098, metadata !DIExpression()), !dbg !3150
  %591 = sub i32 %578, %580, !dbg !3370
  call void @llvm.dbg.value(metadata i32 %591, metadata !3099, metadata !DIExpression()), !dbg !3150
  %592 = lshr i16 %565, 5, !dbg !3370
  %593 = sub i16 %565, %592, !dbg !3370
  store i16 %593, i16* %564, align 2, !dbg !3370
  %594 = shl i32 %558, 1, !dbg !3370
  %595 = or i32 %594, 1, !dbg !3370
  call void @llvm.dbg.value(metadata i32 %595, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %561, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %596

596:                                              ; preds = %589, %582
  %597 = phi i32 [ %580, %582 ], [ %590, %589 ], !dbg !3372
  %598 = phi i32 [ %578, %582 ], [ %591, %589 ], !dbg !3313
  %599 = phi i32 [ %587, %582 ], [ %595, %589 ], !dbg !3372
  %600 = phi i32 [ %588, %582 ], [ %561, %589 ], !dbg !3372
  call void @llvm.dbg.value(metadata i32 %600, metadata !3111, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %599, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %598, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %597, metadata !3098, metadata !DIExpression()), !dbg !3150
  %601 = shl nuw nsw i32 %396, 6, !dbg !3373
  call void @llvm.dbg.value(metadata i32 %601, metadata !3108, metadata !DIExpression()), !dbg !3308
  %602 = and i32 %600, %601, !dbg !3373
  call void @llvm.dbg.value(metadata i32 %602, metadata !3112, metadata !DIExpression()), !dbg !3313
  %603 = getelementptr inbounds i16, i16* %111, i32 %600, !dbg !3373
  %604 = getelementptr inbounds i16, i16* %603, i32 %602, !dbg !3373
  %605 = getelementptr inbounds i16, i16* %604, i32 %599, !dbg !3373
  call void @llvm.dbg.value(metadata i16* %605, metadata !3114, metadata !DIExpression()), !dbg !3313
  %606 = load i16, i16* %605, align 2, !dbg !3373
  %607 = zext i16 %606 to i32, !dbg !3373
  call void @llvm.dbg.value(metadata i32 %607, metadata !3103, metadata !DIExpression()), !dbg !3177
  %608 = icmp ult i32 %597, 16777216, !dbg !3374
  br i1 %608, label %609, label %616, !dbg !3373

609:                                              ; preds = %596
  %610 = shl nuw i32 %597, 8, !dbg !3376
  call void @llvm.dbg.value(metadata i32 %610, metadata !3098, metadata !DIExpression()), !dbg !3150
  %611 = shl i32 %598, 8, !dbg !3376
  %612 = getelementptr inbounds i8, i8* %576, i32 1, !dbg !3376
  call void @llvm.dbg.value(metadata i8* %612, metadata !3097, metadata !DIExpression()), !dbg !3150
  %613 = load i8, i8* %576, align 1, !dbg !3376
  %614 = zext i8 %613 to i32, !dbg !3376
  %615 = or i32 %611, %614, !dbg !3376
  call void @llvm.dbg.value(metadata i32 %615, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %616, !dbg !3376

616:                                              ; preds = %609, %596
  %617 = phi i8* [ %612, %609 ], [ %576, %596 ], !dbg !3313
  %618 = phi i32 [ %610, %609 ], [ %597, %596 ], !dbg !3313
  %619 = phi i32 [ %615, %609 ], [ %598, %596 ], !dbg !3313
  call void @llvm.dbg.value(metadata i32 %619, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %618, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %617, metadata !3097, metadata !DIExpression()), !dbg !3150
  %620 = lshr i32 %618, 11, !dbg !3373
  %621 = mul i32 %620, %607, !dbg !3373
  call void @llvm.dbg.value(metadata i32 %621, metadata !3102, metadata !DIExpression()), !dbg !3177
  %622 = icmp ult i32 %619, %621, !dbg !3378
  br i1 %622, label %623, label %630, !dbg !3373

623:                                              ; preds = %616
  call void @llvm.dbg.value(metadata i32 %621, metadata !3098, metadata !DIExpression()), !dbg !3150
  %624 = sub nsw i32 2048, %607, !dbg !3380
  %625 = lshr i32 %624, 5, !dbg !3380
  %626 = trunc i32 %625 to i16, !dbg !3380
  %627 = add i16 %606, %626, !dbg !3380
  store i16 %627, i16* %605, align 2, !dbg !3380
  %628 = shl i32 %599, 1, !dbg !3380
  call void @llvm.dbg.value(metadata i32 %628, metadata !3105, metadata !DIExpression()), !dbg !3202
  %629 = xor i32 %602, %600, !dbg !3380
  call void @llvm.dbg.value(metadata i32 %629, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %637, !dbg !3380

630:                                              ; preds = %616
  %631 = sub i32 %618, %621, !dbg !3382
  call void @llvm.dbg.value(metadata i32 %631, metadata !3098, metadata !DIExpression()), !dbg !3150
  %632 = sub i32 %619, %621, !dbg !3382
  call void @llvm.dbg.value(metadata i32 %632, metadata !3099, metadata !DIExpression()), !dbg !3150
  %633 = lshr i16 %606, 5, !dbg !3382
  %634 = sub i16 %606, %633, !dbg !3382
  store i16 %634, i16* %605, align 2, !dbg !3382
  %635 = shl i32 %599, 1, !dbg !3382
  %636 = or i32 %635, 1, !dbg !3382
  call void @llvm.dbg.value(metadata i32 %636, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %602, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %637

637:                                              ; preds = %630, %623
  %638 = phi i32 [ %621, %623 ], [ %631, %630 ], !dbg !3384
  %639 = phi i32 [ %619, %623 ], [ %632, %630 ], !dbg !3313
  %640 = phi i32 [ %628, %623 ], [ %636, %630 ], !dbg !3384
  %641 = phi i32 [ %629, %623 ], [ %602, %630 ], !dbg !3384
  call void @llvm.dbg.value(metadata i32 %641, metadata !3111, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %640, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %639, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %638, metadata !3098, metadata !DIExpression()), !dbg !3150
  %642 = shl nuw nsw i32 %396, 7, !dbg !3385
  call void @llvm.dbg.value(metadata i32 %642, metadata !3108, metadata !DIExpression()), !dbg !3308
  %643 = and i32 %641, %642, !dbg !3385
  call void @llvm.dbg.value(metadata i32 %643, metadata !3112, metadata !DIExpression()), !dbg !3313
  %644 = getelementptr inbounds i16, i16* %111, i32 %641, !dbg !3385
  %645 = getelementptr inbounds i16, i16* %644, i32 %643, !dbg !3385
  %646 = getelementptr inbounds i16, i16* %645, i32 %640, !dbg !3385
  call void @llvm.dbg.value(metadata i16* %646, metadata !3114, metadata !DIExpression()), !dbg !3313
  %647 = load i16, i16* %646, align 2, !dbg !3385
  %648 = zext i16 %647 to i32, !dbg !3385
  call void @llvm.dbg.value(metadata i32 %648, metadata !3103, metadata !DIExpression()), !dbg !3177
  %649 = icmp ult i32 %638, 16777216, !dbg !3386
  br i1 %649, label %650, label %657, !dbg !3385

650:                                              ; preds = %637
  %651 = shl nuw i32 %638, 8, !dbg !3388
  call void @llvm.dbg.value(metadata i32 %651, metadata !3098, metadata !DIExpression()), !dbg !3150
  %652 = shl i32 %639, 8, !dbg !3388
  %653 = getelementptr inbounds i8, i8* %617, i32 1, !dbg !3388
  call void @llvm.dbg.value(metadata i8* %653, metadata !3097, metadata !DIExpression()), !dbg !3150
  %654 = load i8, i8* %617, align 1, !dbg !3388
  %655 = zext i8 %654 to i32, !dbg !3388
  %656 = or i32 %652, %655, !dbg !3388
  call void @llvm.dbg.value(metadata i32 %656, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %657, !dbg !3388

657:                                              ; preds = %650, %637
  %658 = phi i8* [ %653, %650 ], [ %617, %637 ], !dbg !3313
  %659 = phi i32 [ %651, %650 ], [ %638, %637 ], !dbg !3313
  %660 = phi i32 [ %656, %650 ], [ %639, %637 ], !dbg !3313
  call void @llvm.dbg.value(metadata i32 %660, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %659, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %658, metadata !3097, metadata !DIExpression()), !dbg !3150
  %661 = lshr i32 %659, 11, !dbg !3385
  %662 = mul i32 %661, %648, !dbg !3385
  call void @llvm.dbg.value(metadata i32 %662, metadata !3102, metadata !DIExpression()), !dbg !3177
  %663 = icmp ult i32 %660, %662, !dbg !3390
  br i1 %663, label %664, label %671, !dbg !3385

664:                                              ; preds = %657
  call void @llvm.dbg.value(metadata i32 %662, metadata !3098, metadata !DIExpression()), !dbg !3150
  %665 = sub nsw i32 2048, %648, !dbg !3392
  %666 = lshr i32 %665, 5, !dbg !3392
  %667 = trunc i32 %666 to i16, !dbg !3392
  %668 = add i16 %647, %667, !dbg !3392
  store i16 %668, i16* %646, align 2, !dbg !3392
  %669 = shl i32 %640, 1, !dbg !3392
  call void @llvm.dbg.value(metadata i32 %669, metadata !3105, metadata !DIExpression()), !dbg !3202
  %670 = xor i32 %643, %641, !dbg !3392
  call void @llvm.dbg.value(metadata i32 %670, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %678, !dbg !3392

671:                                              ; preds = %657
  %672 = sub i32 %659, %662, !dbg !3394
  call void @llvm.dbg.value(metadata i32 %672, metadata !3098, metadata !DIExpression()), !dbg !3150
  %673 = sub i32 %660, %662, !dbg !3394
  call void @llvm.dbg.value(metadata i32 %673, metadata !3099, metadata !DIExpression()), !dbg !3150
  %674 = lshr i16 %647, 5, !dbg !3394
  %675 = sub i16 %647, %674, !dbg !3394
  store i16 %675, i16* %646, align 2, !dbg !3394
  %676 = shl i32 %640, 1, !dbg !3394
  %677 = or i32 %676, 1, !dbg !3394
  call void @llvm.dbg.value(metadata i32 %677, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %643, metadata !3111, metadata !DIExpression()), !dbg !3308
  br label %678

678:                                              ; preds = %671, %664
  %679 = phi i32 [ %662, %664 ], [ %672, %671 ], !dbg !3396
  %680 = phi i32 [ %660, %664 ], [ %673, %671 ], !dbg !3313
  %681 = phi i32 [ %669, %664 ], [ %677, %671 ], !dbg !3396
  %682 = phi i32 [ %670, %664 ], [ %643, %671 ], !dbg !3396
  call void @llvm.dbg.value(metadata i32 %682, metadata !3111, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.value(metadata i32 %681, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %680, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %679, metadata !3098, metadata !DIExpression()), !dbg !3150
  %683 = shl nuw nsw i32 %396, 8, !dbg !3397
  call void @llvm.dbg.value(metadata i32 %683, metadata !3108, metadata !DIExpression()), !dbg !3308
  %684 = and i32 %682, %683, !dbg !3397
  call void @llvm.dbg.value(metadata i32 %684, metadata !3112, metadata !DIExpression()), !dbg !3313
  %685 = getelementptr inbounds i16, i16* %111, i32 %682, !dbg !3397
  %686 = getelementptr inbounds i16, i16* %685, i32 %684, !dbg !3397
  %687 = getelementptr inbounds i16, i16* %686, i32 %681, !dbg !3397
  call void @llvm.dbg.value(metadata i16* %687, metadata !3114, metadata !DIExpression()), !dbg !3313
  %688 = load i16, i16* %687, align 2, !dbg !3397
  %689 = zext i16 %688 to i32, !dbg !3397
  call void @llvm.dbg.value(metadata i32 %689, metadata !3103, metadata !DIExpression()), !dbg !3177
  %690 = icmp ult i32 %679, 16777216, !dbg !3398
  br i1 %690, label %691, label %698, !dbg !3397

691:                                              ; preds = %678
  %692 = shl nuw i32 %679, 8, !dbg !3400
  call void @llvm.dbg.value(metadata i32 %692, metadata !3098, metadata !DIExpression()), !dbg !3150
  %693 = shl i32 %680, 8, !dbg !3400
  %694 = getelementptr inbounds i8, i8* %658, i32 1, !dbg !3400
  call void @llvm.dbg.value(metadata i8* %694, metadata !3097, metadata !DIExpression()), !dbg !3150
  %695 = load i8, i8* %658, align 1, !dbg !3400
  %696 = zext i8 %695 to i32, !dbg !3400
  %697 = or i32 %693, %696, !dbg !3400
  call void @llvm.dbg.value(metadata i32 %697, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %698, !dbg !3400

698:                                              ; preds = %691, %678
  %699 = phi i8* [ %694, %691 ], [ %658, %678 ], !dbg !3313
  %700 = phi i32 [ %692, %691 ], [ %679, %678 ], !dbg !3313
  %701 = phi i32 [ %697, %691 ], [ %680, %678 ], !dbg !3313
  call void @llvm.dbg.value(metadata i32 %701, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %700, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %699, metadata !3097, metadata !DIExpression()), !dbg !3150
  %702 = lshr i32 %700, 11, !dbg !3397
  %703 = mul i32 %702, %689, !dbg !3397
  call void @llvm.dbg.value(metadata i32 %703, metadata !3102, metadata !DIExpression()), !dbg !3177
  %704 = icmp ult i32 %701, %703, !dbg !3402
  br i1 %704, label %705, label %711, !dbg !3397

705:                                              ; preds = %698
  call void @llvm.dbg.value(metadata i32 %703, metadata !3098, metadata !DIExpression()), !dbg !3150
  %706 = sub nsw i32 2048, %689, !dbg !3404
  %707 = lshr i32 %706, 5, !dbg !3404
  %708 = trunc i32 %707 to i16, !dbg !3404
  %709 = add i16 %688, %708, !dbg !3404
  store i16 %709, i16* %687, align 2, !dbg !3404
  %710 = shl i32 %681, 1, !dbg !3404
  call void @llvm.dbg.value(metadata i32 %710, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata !DIArgList(i32 %682, i32 %684), metadata !3111, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 18446744073709551615, DW_OP_xor, DW_OP_and, DW_OP_stack_value)), !dbg !3308
  br label %718, !dbg !3404

711:                                              ; preds = %698
  %712 = sub i32 %700, %703, !dbg !3406
  call void @llvm.dbg.value(metadata i32 %712, metadata !3098, metadata !DIExpression()), !dbg !3150
  %713 = sub i32 %701, %703, !dbg !3406
  call void @llvm.dbg.value(metadata i32 %713, metadata !3099, metadata !DIExpression()), !dbg !3150
  %714 = lshr i16 %688, 5, !dbg !3406
  %715 = sub i16 %688, %714, !dbg !3406
  store i16 %715, i16* %687, align 2, !dbg !3406
  %716 = shl i32 %681, 1, !dbg !3406
  %717 = or i32 %716, 1, !dbg !3406
  call void @llvm.dbg.value(metadata i32 %717, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata !DIArgList(i32 %682, i32 %684), metadata !3111, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_and, DW_OP_stack_value)), !dbg !3308
  br label %718

718:                                              ; preds = %705, %711, %376, %382
  %719 = phi i8* [ %370, %376 ], [ %370, %382 ], [ %699, %711 ], [ %699, %705 ], !dbg !3408
  %720 = phi i32 [ %374, %376 ], [ %383, %382 ], [ %712, %711 ], [ %703, %705 ], !dbg !3408
  %721 = phi i32 [ %372, %376 ], [ %384, %382 ], [ %713, %711 ], [ %701, %705 ], !dbg !3408
  %722 = phi i32 [ %381, %376 ], [ %388, %382 ], [ %717, %711 ], [ %710, %705 ], !dbg !3408
  %723 = phi i32 [ %114, %376 ], [ %114, %382 ], [ %399, %711 ], [ %399, %705 ], !dbg !3408
  call void @llvm.dbg.value(metadata i32 %723, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %722, metadata !3105, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %721, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %720, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %719, metadata !3097, metadata !DIExpression()), !dbg !3150
  %724 = trunc i32 %722 to i8, !dbg !3409
  %725 = add i32 %59, 1, !dbg !3410
  call void @llvm.dbg.value(metadata i32 %725, metadata !3093, metadata !DIExpression()), !dbg !3150
  %726 = getelementptr inbounds i8, i8* %27, i32 %59, !dbg !3411
  store i8 %724, i8* %726, align 1, !dbg !3412
  br label %1740

727:                                              ; preds = %83
  %728 = sub i32 %85, %88, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %728, metadata !3098, metadata !DIExpression()), !dbg !3150
  %729 = sub i32 %86, %88, !dbg !3413
  call void @llvm.dbg.value(metadata i32 %729, metadata !3099, metadata !DIExpression()), !dbg !3150
  %730 = lshr i16 %73, 5, !dbg !3413
  %731 = sub i16 %73, %730, !dbg !3413
  store i16 %731, i16* %72, align 2, !dbg !3413
  %732 = getelementptr inbounds i16, i16* %42, i32 %68, !dbg !3414
  call void @llvm.dbg.value(metadata i16* %732, metadata !3100, metadata !DIExpression()), !dbg !3177
  %733 = load i16, i16* %732, align 2, !dbg !3415
  %734 = zext i16 %733 to i32, !dbg !3415
  call void @llvm.dbg.value(metadata i32 %734, metadata !3103, metadata !DIExpression()), !dbg !3177
  %735 = icmp ult i32 %728, 16777216, !dbg !3416
  br i1 %735, label %736, label %743, !dbg !3415

736:                                              ; preds = %727
  %737 = shl nuw i32 %728, 8, !dbg !3418
  call void @llvm.dbg.value(metadata i32 %737, metadata !3098, metadata !DIExpression()), !dbg !3150
  %738 = shl i32 %729, 8, !dbg !3418
  %739 = getelementptr inbounds i8, i8* %84, i32 1, !dbg !3418
  call void @llvm.dbg.value(metadata i8* %739, metadata !3097, metadata !DIExpression()), !dbg !3150
  %740 = load i8, i8* %84, align 1, !dbg !3418
  %741 = zext i8 %740 to i32, !dbg !3418
  %742 = or i32 %738, %741, !dbg !3418
  call void @llvm.dbg.value(metadata i32 %742, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %743, !dbg !3418

743:                                              ; preds = %736, %727
  %744 = phi i8* [ %739, %736 ], [ %84, %727 ], !dbg !3177
  %745 = phi i32 [ %737, %736 ], [ %728, %727 ], !dbg !3420
  %746 = phi i32 [ %742, %736 ], [ %729, %727 ], !dbg !3420
  call void @llvm.dbg.value(metadata i32 %746, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %745, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %744, metadata !3097, metadata !DIExpression()), !dbg !3150
  %747 = lshr i32 %745, 11, !dbg !3415
  %748 = mul i32 %747, %734, !dbg !3415
  call void @llvm.dbg.value(metadata i32 %748, metadata !3102, metadata !DIExpression()), !dbg !3177
  %749 = icmp ult i32 %746, %748, !dbg !3421
  br i1 %749, label %750, label %756, !dbg !3415

750:                                              ; preds = %743
  call void @llvm.dbg.value(metadata i32 %748, metadata !3098, metadata !DIExpression()), !dbg !3150
  %751 = sub nsw i32 2048, %734, !dbg !3422
  %752 = lshr i32 %751, 5, !dbg !3422
  %753 = trunc i32 %752 to i16, !dbg !3422
  %754 = add i16 %733, %753, !dbg !3422
  store i16 %754, i16* %732, align 2, !dbg !3422
  %755 = add i32 %68, 12, !dbg !3424
  call void @llvm.dbg.value(metadata i32 %755, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i16* %49, metadata !3100, metadata !DIExpression()), !dbg !3177
  br label %903, !dbg !3425

756:                                              ; preds = %743
  %757 = sub i32 %745, %748, !dbg !3426
  call void @llvm.dbg.value(metadata i32 %757, metadata !3098, metadata !DIExpression()), !dbg !3150
  %758 = sub i32 %746, %748, !dbg !3426
  call void @llvm.dbg.value(metadata i32 %758, metadata !3099, metadata !DIExpression()), !dbg !3150
  %759 = lshr i16 %733, 5, !dbg !3426
  %760 = sub i16 %733, %759, !dbg !3426
  store i16 %760, i16* %732, align 2, !dbg !3426
  %761 = icmp eq i32 %58, 0
  %762 = select i1 %43, i1 %761, i1 false, !dbg !3427
  br i1 %762, label %1781, label %763, !dbg !3427

763:                                              ; preds = %756
  %764 = getelementptr inbounds i16, i16* %44, i32 %68, !dbg !3429
  call void @llvm.dbg.value(metadata i16* %764, metadata !3100, metadata !DIExpression()), !dbg !3177
  %765 = load i16, i16* %764, align 2, !dbg !3430
  %766 = zext i16 %765 to i32, !dbg !3430
  call void @llvm.dbg.value(metadata i32 %766, metadata !3103, metadata !DIExpression()), !dbg !3177
  %767 = icmp ult i32 %757, 16777216, !dbg !3431
  br i1 %767, label %768, label %775, !dbg !3430

768:                                              ; preds = %763
  %769 = shl nuw i32 %757, 8, !dbg !3433
  call void @llvm.dbg.value(metadata i32 %769, metadata !3098, metadata !DIExpression()), !dbg !3150
  %770 = shl i32 %758, 8, !dbg !3433
  %771 = getelementptr inbounds i8, i8* %744, i32 1, !dbg !3433
  call void @llvm.dbg.value(metadata i8* %771, metadata !3097, metadata !DIExpression()), !dbg !3150
  %772 = load i8, i8* %744, align 1, !dbg !3433
  %773 = zext i8 %772 to i32, !dbg !3433
  %774 = or i32 %770, %773, !dbg !3433
  call void @llvm.dbg.value(metadata i32 %774, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %775, !dbg !3433

775:                                              ; preds = %768, %763
  %776 = phi i8* [ %771, %768 ], [ %744, %763 ], !dbg !3420
  %777 = phi i32 [ %769, %768 ], [ %757, %763 ], !dbg !3435
  %778 = phi i32 [ %774, %768 ], [ %758, %763 ], !dbg !3435
  call void @llvm.dbg.value(metadata i32 %778, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %777, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %776, metadata !3097, metadata !DIExpression()), !dbg !3150
  %779 = lshr i32 %777, 11, !dbg !3430
  %780 = mul i32 %779, %766, !dbg !3430
  call void @llvm.dbg.value(metadata i32 %780, metadata !3102, metadata !DIExpression()), !dbg !3177
  %781 = icmp ult i32 %778, %780, !dbg !3436
  br i1 %781, label %782, label %826, !dbg !3430

782:                                              ; preds = %775
  call void @llvm.dbg.value(metadata i32 %780, metadata !3098, metadata !DIExpression()), !dbg !3150
  %783 = sub nsw i32 2048, %766, !dbg !3437
  %784 = lshr i32 %783, 5, !dbg !3437
  %785 = trunc i32 %784 to i16, !dbg !3437
  %786 = add i16 %765, %785, !dbg !3437
  store i16 %786, i16* %764, align 2, !dbg !3437
  %787 = getelementptr inbounds i16, i16* %47, i32 %70, !dbg !3439
  %788 = getelementptr inbounds i16, i16* %787, i32 %69, !dbg !3440
  call void @llvm.dbg.value(metadata i16* %788, metadata !3100, metadata !DIExpression()), !dbg !3177
  %789 = load i16, i16* %788, align 2, !dbg !3441
  %790 = zext i16 %789 to i32, !dbg !3441
  call void @llvm.dbg.value(metadata i32 %790, metadata !3103, metadata !DIExpression()), !dbg !3177
  %791 = icmp ult i32 %780, 16777216, !dbg !3442
  br i1 %791, label %792, label %799, !dbg !3441

792:                                              ; preds = %782
  %793 = shl nuw i32 %780, 8, !dbg !3444
  call void @llvm.dbg.value(metadata i32 %793, metadata !3098, metadata !DIExpression()), !dbg !3150
  %794 = shl i32 %778, 8, !dbg !3444
  %795 = getelementptr inbounds i8, i8* %776, i32 1, !dbg !3444
  call void @llvm.dbg.value(metadata i8* %795, metadata !3097, metadata !DIExpression()), !dbg !3150
  %796 = load i8, i8* %776, align 1, !dbg !3444
  %797 = zext i8 %796 to i32, !dbg !3444
  %798 = or i32 %794, %797, !dbg !3444
  call void @llvm.dbg.value(metadata i32 %798, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %799, !dbg !3444

799:                                              ; preds = %792, %782
  %800 = phi i8* [ %795, %792 ], [ %776, %782 ], !dbg !3435
  %801 = phi i32 [ %793, %792 ], [ %780, %782 ], !dbg !3446
  %802 = phi i32 [ %798, %792 ], [ %778, %782 ], !dbg !3435
  call void @llvm.dbg.value(metadata i32 %802, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %801, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %800, metadata !3097, metadata !DIExpression()), !dbg !3150
  %803 = lshr i32 %801, 11, !dbg !3441
  %804 = mul i32 %803, %790, !dbg !3441
  call void @llvm.dbg.value(metadata i32 %804, metadata !3102, metadata !DIExpression()), !dbg !3177
  %805 = icmp ult i32 %802, %804, !dbg !3447
  br i1 %805, label %806, label %821, !dbg !3441

806:                                              ; preds = %799
  call void @llvm.dbg.value(metadata i32 %804, metadata !3098, metadata !DIExpression()), !dbg !3150
  %807 = sub nsw i32 2048, %790, !dbg !3449
  %808 = lshr i32 %807, 5, !dbg !3449
  %809 = trunc i32 %808 to i16, !dbg !3449
  %810 = add i16 %789, %809, !dbg !3449
  store i16 %810, i16* %788, align 2, !dbg !3449
  %811 = sub i32 %59, %67, !dbg !3451
  %812 = icmp ult i32 %59, %67, !dbg !3452
  %813 = select i1 %812, i32 %29, i32 0, !dbg !3453
  %814 = add i32 %811, %813, !dbg !3454
  %815 = getelementptr inbounds i8, i8* %27, i32 %814, !dbg !3455
  %816 = load i8, i8* %815, align 1, !dbg !3455
  %817 = getelementptr inbounds i8, i8* %27, i32 %59, !dbg !3456
  store i8 %816, i8* %817, align 1, !dbg !3457
  %818 = add i32 %59, 1, !dbg !3458
  call void @llvm.dbg.value(metadata i32 %818, metadata !3093, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %58, metadata !3094, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3150
  %819 = icmp ult i32 %68, 7, !dbg !3459
  %820 = select i1 %819, i32 9, i32 11, !dbg !3460
  call void @llvm.dbg.value(metadata i32 %820, metadata !3083, metadata !DIExpression()), !dbg !3150
  br label %1740, !dbg !3461

821:                                              ; preds = %799
  %822 = sub i32 %801, %804, !dbg !3462
  call void @llvm.dbg.value(metadata i32 %822, metadata !3098, metadata !DIExpression()), !dbg !3150
  %823 = sub i32 %802, %804, !dbg !3462
  call void @llvm.dbg.value(metadata i32 %823, metadata !3099, metadata !DIExpression()), !dbg !3150
  %824 = lshr i16 %789, 5, !dbg !3462
  %825 = sub i16 %789, %824, !dbg !3462
  store i16 %825, i16* %788, align 2, !dbg !3462
  br label %893, !dbg !3463

826:                                              ; preds = %775
  %827 = sub i32 %777, %780, !dbg !3464
  call void @llvm.dbg.value(metadata i32 %827, metadata !3098, metadata !DIExpression()), !dbg !3150
  %828 = sub i32 %778, %780, !dbg !3464
  call void @llvm.dbg.value(metadata i32 %828, metadata !3099, metadata !DIExpression()), !dbg !3150
  %829 = lshr i16 %765, 5, !dbg !3464
  %830 = sub i16 %765, %829, !dbg !3464
  store i16 %830, i16* %764, align 2, !dbg !3464
  %831 = getelementptr inbounds i16, i16* %45, i32 %68, !dbg !3465
  call void @llvm.dbg.value(metadata i16* %831, metadata !3100, metadata !DIExpression()), !dbg !3177
  %832 = load i16, i16* %831, align 2, !dbg !3466
  %833 = zext i16 %832 to i32, !dbg !3466
  call void @llvm.dbg.value(metadata i32 %833, metadata !3103, metadata !DIExpression()), !dbg !3177
  %834 = icmp ult i32 %827, 16777216, !dbg !3467
  br i1 %834, label %835, label %842, !dbg !3466

835:                                              ; preds = %826
  %836 = shl nuw i32 %827, 8, !dbg !3469
  call void @llvm.dbg.value(metadata i32 %836, metadata !3098, metadata !DIExpression()), !dbg !3150
  %837 = shl i32 %828, 8, !dbg !3469
  %838 = getelementptr inbounds i8, i8* %776, i32 1, !dbg !3469
  call void @llvm.dbg.value(metadata i8* %838, metadata !3097, metadata !DIExpression()), !dbg !3150
  %839 = load i8, i8* %776, align 1, !dbg !3469
  %840 = zext i8 %839 to i32, !dbg !3469
  %841 = or i32 %837, %840, !dbg !3469
  call void @llvm.dbg.value(metadata i32 %841, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %842, !dbg !3469

842:                                              ; preds = %835, %826
  %843 = phi i8* [ %838, %835 ], [ %776, %826 ], !dbg !3435
  %844 = phi i32 [ %836, %835 ], [ %827, %826 ], !dbg !3471
  %845 = phi i32 [ %841, %835 ], [ %828, %826 ], !dbg !3471
  call void @llvm.dbg.value(metadata i32 %845, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %844, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %843, metadata !3097, metadata !DIExpression()), !dbg !3150
  %846 = lshr i32 %844, 11, !dbg !3466
  %847 = mul i32 %846, %833, !dbg !3466
  call void @llvm.dbg.value(metadata i32 %847, metadata !3102, metadata !DIExpression()), !dbg !3177
  %848 = icmp ult i32 %845, %847, !dbg !3472
  br i1 %848, label %849, label %854, !dbg !3466

849:                                              ; preds = %842
  call void @llvm.dbg.value(metadata i32 %847, metadata !3098, metadata !DIExpression()), !dbg !3150
  %850 = sub nsw i32 2048, %833, !dbg !3474
  %851 = lshr i32 %850, 5, !dbg !3474
  %852 = trunc i32 %851 to i16, !dbg !3474
  %853 = add i16 %832, %852, !dbg !3474
  store i16 %853, i16* %831, align 2, !dbg !3474
  call void @llvm.dbg.value(metadata i32 %66, metadata !3115, metadata !DIExpression()), !dbg !3471
  br label %893, !dbg !3476

854:                                              ; preds = %842
  %855 = sub i32 %844, %847, !dbg !3477
  call void @llvm.dbg.value(metadata i32 %855, metadata !3098, metadata !DIExpression()), !dbg !3150
  %856 = sub i32 %845, %847, !dbg !3477
  call void @llvm.dbg.value(metadata i32 %856, metadata !3099, metadata !DIExpression()), !dbg !3150
  %857 = lshr i16 %832, 5, !dbg !3477
  %858 = sub i16 %832, %857, !dbg !3477
  store i16 %858, i16* %831, align 2, !dbg !3477
  %859 = getelementptr inbounds i16, i16* %46, i32 %68, !dbg !3479
  call void @llvm.dbg.value(metadata i16* %859, metadata !3100, metadata !DIExpression()), !dbg !3177
  %860 = load i16, i16* %859, align 2, !dbg !3480
  %861 = zext i16 %860 to i32, !dbg !3480
  call void @llvm.dbg.value(metadata i32 %861, metadata !3103, metadata !DIExpression()), !dbg !3177
  %862 = icmp ult i32 %855, 16777216, !dbg !3481
  br i1 %862, label %863, label %870, !dbg !3480

863:                                              ; preds = %854
  %864 = shl nuw i32 %855, 8, !dbg !3483
  call void @llvm.dbg.value(metadata i32 %864, metadata !3098, metadata !DIExpression()), !dbg !3150
  %865 = shl i32 %856, 8, !dbg !3483
  %866 = getelementptr inbounds i8, i8* %843, i32 1, !dbg !3483
  call void @llvm.dbg.value(metadata i8* %866, metadata !3097, metadata !DIExpression()), !dbg !3150
  %867 = load i8, i8* %843, align 1, !dbg !3483
  %868 = zext i8 %867 to i32, !dbg !3483
  %869 = or i32 %865, %868, !dbg !3483
  call void @llvm.dbg.value(metadata i32 %869, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %870, !dbg !3483

870:                                              ; preds = %863, %854
  %871 = phi i8* [ %866, %863 ], [ %843, %854 ], !dbg !3471
  %872 = phi i32 [ %864, %863 ], [ %855, %854 ], !dbg !3485
  %873 = phi i32 [ %869, %863 ], [ %856, %854 ], !dbg !3485
  call void @llvm.dbg.value(metadata i32 %873, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %872, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %871, metadata !3097, metadata !DIExpression()), !dbg !3150
  %874 = lshr i32 %872, 11, !dbg !3480
  %875 = mul i32 %874, %861, !dbg !3480
  call void @llvm.dbg.value(metadata i32 %875, metadata !3102, metadata !DIExpression()), !dbg !3177
  %876 = icmp ult i32 %873, %875, !dbg !3486
  br i1 %876, label %877, label %882, !dbg !3480

877:                                              ; preds = %870
  call void @llvm.dbg.value(metadata i32 %875, metadata !3098, metadata !DIExpression()), !dbg !3150
  %878 = sub nsw i32 2048, %861, !dbg !3488
  %879 = lshr i32 %878, 5, !dbg !3488
  %880 = trunc i32 %879 to i16, !dbg !3488
  %881 = add i16 %860, %880, !dbg !3488
  call void @llvm.dbg.value(metadata i32 %65, metadata !3115, metadata !DIExpression()), !dbg !3471
  br label %887, !dbg !3490

882:                                              ; preds = %870
  %883 = sub i32 %872, %875, !dbg !3491
  call void @llvm.dbg.value(metadata i32 %883, metadata !3098, metadata !DIExpression()), !dbg !3150
  %884 = sub i32 %873, %875, !dbg !3491
  call void @llvm.dbg.value(metadata i32 %884, metadata !3099, metadata !DIExpression()), !dbg !3150
  %885 = lshr i16 %860, 5, !dbg !3491
  %886 = sub i16 %860, %885, !dbg !3491
  call void @llvm.dbg.value(metadata i32 %64, metadata !3115, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i32 %65, metadata !3087, metadata !DIExpression()), !dbg !3150
  br label %887

887:                                              ; preds = %882, %877
  %888 = phi i16 [ %886, %882 ], [ %881, %877 ], !dbg !3493
  %889 = phi i32 [ %883, %882 ], [ %875, %877 ], !dbg !3493
  %890 = phi i32 [ %884, %882 ], [ %873, %877 ], !dbg !3485
  %891 = phi i32 [ %65, %882 ], [ %64, %877 ], !dbg !3150
  %892 = phi i32 [ %64, %882 ], [ %65, %877 ], !dbg !3493
  store i16 %888, i16* %859, align 2, !dbg !3493
  call void @llvm.dbg.value(metadata i32 %892, metadata !3115, metadata !DIExpression()), !dbg !3471
  call void @llvm.dbg.value(metadata i32 %891, metadata !3087, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %890, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %889, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %66, metadata !3086, metadata !DIExpression()), !dbg !3150
  br label %893

893:                                              ; preds = %849, %887, %821
  %894 = phi i8* [ %800, %821 ], [ %843, %849 ], [ %871, %887 ], !dbg !3494
  %895 = phi i32 [ %822, %821 ], [ %847, %849 ], [ %889, %887 ], !dbg !3494
  %896 = phi i32 [ %823, %821 ], [ %845, %849 ], [ %890, %887 ], !dbg !3494
  %897 = phi i32 [ %64, %821 ], [ %64, %849 ], [ %891, %887 ], !dbg !3172
  %898 = phi i32 [ %65, %821 ], [ %65, %849 ], [ %66, %887 ], !dbg !3173
  %899 = phi i32 [ %66, %821 ], [ %67, %849 ], [ %67, %887 ], !dbg !3150
  %900 = phi i32 [ %67, %821 ], [ %66, %849 ], [ %892, %887 ], !dbg !3150
  call void @llvm.dbg.value(metadata i32 %900, metadata !3084, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %899, metadata !3085, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %898, metadata !3086, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %897, metadata !3087, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %896, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %895, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %894, metadata !3097, metadata !DIExpression()), !dbg !3150
  %901 = icmp ult i32 %68, 7, !dbg !3495
  %902 = select i1 %901, i32 8, i32 11, !dbg !3496
  call void @llvm.dbg.value(metadata i32 %902, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i16* %48, metadata !3100, metadata !DIExpression()), !dbg !3177
  br label %903

903:                                              ; preds = %893, %750
  %904 = phi i8* [ %744, %750 ], [ %894, %893 ], !dbg !3420
  %905 = phi i32 [ %748, %750 ], [ %895, %893 ], !dbg !3497
  %906 = phi i32 [ %746, %750 ], [ %896, %893 ], !dbg !3420
  %907 = phi i16* [ %49, %750 ], [ %48, %893 ], !dbg !3497
  %908 = phi i32 [ %64, %750 ], [ %897, %893 ], !dbg !3172
  %909 = phi i32 [ %65, %750 ], [ %898, %893 ], !dbg !3173
  %910 = phi i32 [ %66, %750 ], [ %899, %893 ], !dbg !3174
  %911 = phi i32 [ %67, %750 ], [ %900, %893 ], !dbg !3175
  %912 = phi i32 [ %755, %750 ], [ %902, %893 ], !dbg !3497
  call void @llvm.dbg.value(metadata i32 %912, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %911, metadata !3084, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %910, metadata !3085, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %909, metadata !3086, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %908, metadata !3087, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i16* %907, metadata !3100, metadata !DIExpression()), !dbg !3177
  call void @llvm.dbg.value(metadata i32 %906, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %905, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %904, metadata !3097, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i16* %907, metadata !3121, metadata !DIExpression()), !dbg !3498
  %913 = load i16, i16* %907, align 2, !dbg !3499
  %914 = zext i16 %913 to i32, !dbg !3499
  call void @llvm.dbg.value(metadata i32 %914, metadata !3103, metadata !DIExpression()), !dbg !3177
  %915 = icmp ult i32 %905, 16777216, !dbg !3500
  br i1 %915, label %916, label %923, !dbg !3499

916:                                              ; preds = %903
  %917 = shl nuw i32 %905, 8, !dbg !3502
  call void @llvm.dbg.value(metadata i32 %917, metadata !3098, metadata !DIExpression()), !dbg !3150
  %918 = shl i32 %906, 8, !dbg !3502
  %919 = getelementptr inbounds i8, i8* %904, i32 1, !dbg !3502
  call void @llvm.dbg.value(metadata i8* %919, metadata !3097, metadata !DIExpression()), !dbg !3150
  %920 = load i8, i8* %904, align 1, !dbg !3502
  %921 = zext i8 %920 to i32, !dbg !3502
  %922 = or i32 %918, %921, !dbg !3502
  call void @llvm.dbg.value(metadata i32 %922, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %923, !dbg !3502

923:                                              ; preds = %916, %903
  %924 = phi i8* [ %919, %916 ], [ %904, %903 ], !dbg !3420
  %925 = phi i32 [ %917, %916 ], [ %905, %903 ], !dbg !3420
  %926 = phi i32 [ %922, %916 ], [ %906, %903 ], !dbg !3420
  call void @llvm.dbg.value(metadata i32 %926, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %925, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %924, metadata !3097, metadata !DIExpression()), !dbg !3150
  %927 = lshr i32 %925, 11, !dbg !3499
  %928 = mul i32 %927, %914, !dbg !3499
  call void @llvm.dbg.value(metadata i32 %928, metadata !3102, metadata !DIExpression()), !dbg !3177
  %929 = icmp ult i32 %926, %928, !dbg !3504
  br i1 %929, label %930, label %1042, !dbg !3499

930:                                              ; preds = %923
  call void @llvm.dbg.value(metadata i32 %928, metadata !3098, metadata !DIExpression()), !dbg !3150
  %931 = sub nsw i32 2048, %914, !dbg !3506
  %932 = lshr i32 %931, 5, !dbg !3506
  %933 = trunc i32 %932 to i16, !dbg !3506
  %934 = add i16 %913, %933, !dbg !3506
  store i16 %934, i16* %907, align 2, !dbg !3506
  %935 = getelementptr inbounds i16, i16* %907, i32 2, !dbg !3508
  %936 = shl i32 %69, 3, !dbg !3509
  %937 = getelementptr inbounds i16, i16* %935, i32 %936, !dbg !3510
  call void @llvm.dbg.value(metadata i16* %937, metadata !3121, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i32 1, metadata !3096, metadata !DIExpression()), !dbg !3150
  %938 = getelementptr inbounds i16, i16* %937, i32 1, !dbg !3511
  %939 = load i16, i16* %938, align 2, !dbg !3511
  %940 = zext i16 %939 to i32, !dbg !3511
  call void @llvm.dbg.value(metadata i32 %940, metadata !3103, metadata !DIExpression()), !dbg !3177
  %941 = icmp ult i32 %928, 16777216, !dbg !3513
  br i1 %941, label %942, label %949, !dbg !3511

942:                                              ; preds = %930
  %943 = shl nuw i32 %928, 8, !dbg !3515
  call void @llvm.dbg.value(metadata i32 %943, metadata !3098, metadata !DIExpression()), !dbg !3150
  %944 = shl i32 %926, 8, !dbg !3515
  %945 = getelementptr inbounds i8, i8* %924, i32 1, !dbg !3515
  call void @llvm.dbg.value(metadata i8* %945, metadata !3097, metadata !DIExpression()), !dbg !3150
  %946 = load i8, i8* %924, align 1, !dbg !3515
  %947 = zext i8 %946 to i32, !dbg !3515
  %948 = or i32 %944, %947, !dbg !3515
  call void @llvm.dbg.value(metadata i32 %948, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %949, !dbg !3515

949:                                              ; preds = %942, %930
  %950 = phi i8* [ %945, %942 ], [ %924, %930 ], !dbg !3498
  %951 = phi i32 [ %943, %942 ], [ %928, %930 ], !dbg !3517
  %952 = phi i32 [ %948, %942 ], [ %926, %930 ], !dbg !3498
  call void @llvm.dbg.value(metadata i32 %952, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %951, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %950, metadata !3097, metadata !DIExpression()), !dbg !3150
  %953 = lshr i32 %951, 11, !dbg !3511
  %954 = mul i32 %953, %940, !dbg !3511
  call void @llvm.dbg.value(metadata i32 %954, metadata !3102, metadata !DIExpression()), !dbg !3177
  %955 = icmp ult i32 %952, %954, !dbg !3518
  br i1 %955, label %956, label %961, !dbg !3511

956:                                              ; preds = %949
  call void @llvm.dbg.value(metadata i32 %954, metadata !3098, metadata !DIExpression()), !dbg !3150
  %957 = sub nsw i32 2048, %940, !dbg !3520
  %958 = lshr i32 %957, 5, !dbg !3520
  %959 = trunc i32 %958 to i16, !dbg !3520
  %960 = add i16 %939, %959, !dbg !3520
  call void @llvm.dbg.value(metadata i32 2, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %966, !dbg !3520

961:                                              ; preds = %949
  %962 = sub i32 %951, %954, !dbg !3522
  call void @llvm.dbg.value(metadata i32 %962, metadata !3098, metadata !DIExpression()), !dbg !3150
  %963 = sub i32 %952, %954, !dbg !3522
  call void @llvm.dbg.value(metadata i32 %963, metadata !3099, metadata !DIExpression()), !dbg !3150
  %964 = lshr i16 %939, 5, !dbg !3522
  %965 = sub i16 %939, %964, !dbg !3522
  call void @llvm.dbg.value(metadata i32 3, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %966

966:                                              ; preds = %961, %956
  %967 = phi i16 [ %965, %961 ], [ %960, %956 ], !dbg !3524
  %968 = phi i32 [ 3, %961 ], [ 2, %956 ], !dbg !3524
  %969 = phi i32 [ %962, %961 ], [ %954, %956 ], !dbg !3524
  %970 = phi i32 [ %963, %961 ], [ %952, %956 ], !dbg !3525
  store i16 %967, i16* %938, align 2, !dbg !3524
  call void @llvm.dbg.value(metadata i32 %970, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %969, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %968, metadata !3096, metadata !DIExpression()), !dbg !3150
  %971 = getelementptr inbounds i16, i16* %937, i32 %968, !dbg !3526
  %972 = load i16, i16* %971, align 2, !dbg !3526
  %973 = zext i16 %972 to i32, !dbg !3526
  call void @llvm.dbg.value(metadata i32 %973, metadata !3103, metadata !DIExpression()), !dbg !3177
  %974 = icmp ult i32 %969, 16777216, !dbg !3528
  br i1 %974, label %975, label %982, !dbg !3526

975:                                              ; preds = %966
  %976 = shl nuw i32 %969, 8, !dbg !3530
  call void @llvm.dbg.value(metadata i32 %976, metadata !3098, metadata !DIExpression()), !dbg !3150
  %977 = shl i32 %970, 8, !dbg !3530
  %978 = getelementptr inbounds i8, i8* %950, i32 1, !dbg !3530
  call void @llvm.dbg.value(metadata i8* %978, metadata !3097, metadata !DIExpression()), !dbg !3150
  %979 = load i8, i8* %950, align 1, !dbg !3530
  %980 = zext i8 %979 to i32, !dbg !3530
  %981 = or i32 %977, %980, !dbg !3530
  call void @llvm.dbg.value(metadata i32 %981, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %982, !dbg !3530

982:                                              ; preds = %975, %966
  %983 = phi i8* [ %978, %975 ], [ %950, %966 ], !dbg !3517
  %984 = phi i32 [ %976, %975 ], [ %969, %966 ], !dbg !3517
  %985 = phi i32 [ %981, %975 ], [ %970, %966 ], !dbg !3517
  call void @llvm.dbg.value(metadata i32 %985, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %984, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %983, metadata !3097, metadata !DIExpression()), !dbg !3150
  %986 = lshr i32 %984, 11, !dbg !3526
  %987 = mul i32 %986, %973, !dbg !3526
  call void @llvm.dbg.value(metadata i32 %987, metadata !3102, metadata !DIExpression()), !dbg !3177
  %988 = icmp ult i32 %985, %987, !dbg !3532
  br i1 %988, label %989, label %995, !dbg !3526

989:                                              ; preds = %982
  call void @llvm.dbg.value(metadata i32 %987, metadata !3098, metadata !DIExpression()), !dbg !3150
  %990 = sub nsw i32 2048, %973, !dbg !3534
  %991 = lshr i32 %990, 5, !dbg !3534
  %992 = trunc i32 %991 to i16, !dbg !3534
  %993 = add i16 %972, %992, !dbg !3534
  store i16 %993, i16* %971, align 2, !dbg !3534
  %994 = shl nuw nsw i32 %968, 1, !dbg !3534
  call void @llvm.dbg.value(metadata i32 %994, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1002, !dbg !3534

995:                                              ; preds = %982
  %996 = sub i32 %984, %987, !dbg !3536
  call void @llvm.dbg.value(metadata i32 %996, metadata !3098, metadata !DIExpression()), !dbg !3150
  %997 = sub i32 %985, %987, !dbg !3536
  call void @llvm.dbg.value(metadata i32 %997, metadata !3099, metadata !DIExpression()), !dbg !3150
  %998 = lshr i16 %972, 5, !dbg !3536
  %999 = sub i16 %972, %998, !dbg !3536
  store i16 %999, i16* %971, align 2, !dbg !3536
  %1000 = shl nuw nsw i32 %968, 1, !dbg !3536
  %1001 = or i32 %1000, 1, !dbg !3536
  call void @llvm.dbg.value(metadata i32 %1001, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1002

1002:                                             ; preds = %995, %989
  %1003 = phi i32 [ %994, %989 ], [ %1001, %995 ], !dbg !3538
  %1004 = phi i32 [ %987, %989 ], [ %996, %995 ], !dbg !3538
  %1005 = phi i32 [ %985, %989 ], [ %997, %995 ], !dbg !3539
  call void @llvm.dbg.value(metadata i32 %1005, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1004, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1003, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1006 = getelementptr inbounds i16, i16* %937, i32 %1003, !dbg !3540
  %1007 = load i16, i16* %1006, align 2, !dbg !3540
  %1008 = zext i16 %1007 to i32, !dbg !3540
  call void @llvm.dbg.value(metadata i32 %1008, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1009 = icmp ult i32 %1004, 16777216, !dbg !3542
  br i1 %1009, label %1010, label %1017, !dbg !3540

1010:                                             ; preds = %1002
  %1011 = shl nuw i32 %1004, 8, !dbg !3544
  call void @llvm.dbg.value(metadata i32 %1011, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1012 = shl i32 %1005, 8, !dbg !3544
  %1013 = getelementptr inbounds i8, i8* %983, i32 1, !dbg !3544
  call void @llvm.dbg.value(metadata i8* %1013, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1014 = load i8, i8* %983, align 1, !dbg !3544
  %1015 = zext i8 %1014 to i32, !dbg !3544
  %1016 = or i32 %1012, %1015, !dbg !3544
  call void @llvm.dbg.value(metadata i32 %1016, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1017, !dbg !3544

1017:                                             ; preds = %1010, %1002
  %1018 = phi i8* [ %1013, %1010 ], [ %983, %1002 ], !dbg !3517
  %1019 = phi i32 [ %1011, %1010 ], [ %1004, %1002 ], !dbg !3517
  %1020 = phi i32 [ %1016, %1010 ], [ %1005, %1002 ], !dbg !3517
  call void @llvm.dbg.value(metadata i32 %1020, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1019, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1018, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1021 = lshr i32 %1019, 11, !dbg !3540
  %1022 = mul i32 %1021, %1008, !dbg !3540
  call void @llvm.dbg.value(metadata i32 %1022, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1023 = icmp ult i32 %1020, %1022, !dbg !3546
  br i1 %1023, label %1024, label %1030, !dbg !3540

1024:                                             ; preds = %1017
  call void @llvm.dbg.value(metadata i32 %1022, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1025 = sub nsw i32 2048, %1008, !dbg !3548
  %1026 = lshr i32 %1025, 5, !dbg !3548
  %1027 = trunc i32 %1026 to i16, !dbg !3548
  %1028 = add i16 %1007, %1027, !dbg !3548
  store i16 %1028, i16* %1006, align 2, !dbg !3548
  %1029 = shl nsw i32 %1003, 1, !dbg !3548
  call void @llvm.dbg.value(metadata i32 %1029, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1037, !dbg !3548

1030:                                             ; preds = %1017
  %1031 = sub i32 %1019, %1022, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %1031, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1032 = sub i32 %1020, %1022, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %1032, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1033 = lshr i16 %1007, 5, !dbg !3550
  %1034 = sub i16 %1007, %1033, !dbg !3550
  store i16 %1034, i16* %1006, align 2, !dbg !3550
  %1035 = shl nsw i32 %1003, 1, !dbg !3550
  %1036 = or i32 %1035, 1, !dbg !3550
  call void @llvm.dbg.value(metadata i32 %1036, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1037

1037:                                             ; preds = %1030, %1024
  %1038 = phi i32 [ %1029, %1024 ], [ %1036, %1030 ], !dbg !3552
  %1039 = phi i32 [ %1022, %1024 ], [ %1031, %1030 ], !dbg !3552
  %1040 = phi i32 [ %1020, %1024 ], [ %1032, %1030 ], !dbg !3553
  call void @llvm.dbg.value(metadata i32 %1040, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1039, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1038, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1041 = add i32 %1038, -8, !dbg !3554
  call void @llvm.dbg.value(metadata i32 %1041, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1221, !dbg !3555

1042:                                             ; preds = %923
  %1043 = sub i32 %925, %928, !dbg !3556
  call void @llvm.dbg.value(metadata i32 %1043, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1044 = sub i32 %926, %928, !dbg !3556
  call void @llvm.dbg.value(metadata i32 %1044, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1045 = lshr i16 %913, 5, !dbg !3556
  %1046 = sub i16 %913, %1045, !dbg !3556
  store i16 %1046, i16* %907, align 2, !dbg !3556
  %1047 = getelementptr inbounds i16, i16* %907, i32 1, !dbg !3558
  call void @llvm.dbg.value(metadata i16* %1047, metadata !3121, metadata !DIExpression()), !dbg !3498
  %1048 = load i16, i16* %1047, align 2, !dbg !3559
  %1049 = zext i16 %1048 to i32, !dbg !3559
  call void @llvm.dbg.value(metadata i32 %1049, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1050 = icmp ult i32 %1043, 16777216, !dbg !3560
  br i1 %1050, label %1051, label %1058, !dbg !3559

1051:                                             ; preds = %1042
  %1052 = shl nuw i32 %1043, 8, !dbg !3562
  call void @llvm.dbg.value(metadata i32 %1052, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1053 = shl i32 %1044, 8, !dbg !3562
  %1054 = getelementptr inbounds i8, i8* %924, i32 1, !dbg !3562
  call void @llvm.dbg.value(metadata i8* %1054, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1055 = load i8, i8* %924, align 1, !dbg !3562
  %1056 = zext i8 %1055 to i32, !dbg !3562
  %1057 = or i32 %1053, %1056, !dbg !3562
  call void @llvm.dbg.value(metadata i32 %1057, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1058, !dbg !3562

1058:                                             ; preds = %1051, %1042
  %1059 = phi i8* [ %1054, %1051 ], [ %924, %1042 ], !dbg !3498
  %1060 = phi i32 [ %1052, %1051 ], [ %1043, %1042 ], !dbg !3564
  %1061 = phi i32 [ %1057, %1051 ], [ %1044, %1042 ], !dbg !3564
  call void @llvm.dbg.value(metadata i32 %1061, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1060, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1059, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1062 = lshr i32 %1060, 11, !dbg !3559
  %1063 = mul i32 %1062, %1049, !dbg !3559
  call void @llvm.dbg.value(metadata i32 %1063, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1064 = icmp ult i32 %1061, %1063, !dbg !3565
  br i1 %1064, label %1065, label %1172, !dbg !3559

1065:                                             ; preds = %1058
  call void @llvm.dbg.value(metadata i32 %1063, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1066 = sub nsw i32 2048, %1049, !dbg !3567
  %1067 = lshr i32 %1066, 5, !dbg !3567
  %1068 = trunc i32 %1067 to i16, !dbg !3567
  %1069 = add i16 %1048, %1068, !dbg !3567
  store i16 %1069, i16* %1047, align 2, !dbg !3567
  %1070 = getelementptr inbounds i16, i16* %907, i32 130, !dbg !3569
  %1071 = shl i32 %69, 3, !dbg !3570
  %1072 = getelementptr inbounds i16, i16* %1070, i32 %1071, !dbg !3571
  call void @llvm.dbg.value(metadata i16* %1072, metadata !3121, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i32 1, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1073 = getelementptr inbounds i16, i16* %1072, i32 1, !dbg !3572
  %1074 = load i16, i16* %1073, align 2, !dbg !3572
  %1075 = zext i16 %1074 to i32, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %1075, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1076 = icmp ult i32 %1063, 16777216, !dbg !3574
  br i1 %1076, label %1077, label %1084, !dbg !3572

1077:                                             ; preds = %1065
  %1078 = shl nuw i32 %1063, 8, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %1078, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1079 = shl i32 %1061, 8, !dbg !3576
  %1080 = getelementptr inbounds i8, i8* %1059, i32 1, !dbg !3576
  call void @llvm.dbg.value(metadata i8* %1080, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1081 = load i8, i8* %1059, align 1, !dbg !3576
  %1082 = zext i8 %1081 to i32, !dbg !3576
  %1083 = or i32 %1079, %1082, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %1083, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1084, !dbg !3576

1084:                                             ; preds = %1077, %1065
  %1085 = phi i8* [ %1080, %1077 ], [ %1059, %1065 ], !dbg !3564
  %1086 = phi i32 [ %1078, %1077 ], [ %1063, %1065 ], !dbg !3578
  %1087 = phi i32 [ %1083, %1077 ], [ %1061, %1065 ], !dbg !3564
  call void @llvm.dbg.value(metadata i32 %1087, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1086, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1085, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1088 = lshr i32 %1086, 11, !dbg !3572
  %1089 = mul i32 %1088, %1075, !dbg !3572
  call void @llvm.dbg.value(metadata i32 %1089, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1090 = icmp ult i32 %1087, %1089, !dbg !3579
  br i1 %1090, label %1091, label %1096, !dbg !3572

1091:                                             ; preds = %1084
  call void @llvm.dbg.value(metadata i32 %1089, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1092 = sub nsw i32 2048, %1075, !dbg !3581
  %1093 = lshr i32 %1092, 5, !dbg !3581
  %1094 = trunc i32 %1093 to i16, !dbg !3581
  %1095 = add i16 %1074, %1094, !dbg !3581
  call void @llvm.dbg.value(metadata i32 2, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1101, !dbg !3581

1096:                                             ; preds = %1084
  %1097 = sub i32 %1086, %1089, !dbg !3583
  call void @llvm.dbg.value(metadata i32 %1097, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1098 = sub i32 %1087, %1089, !dbg !3583
  call void @llvm.dbg.value(metadata i32 %1098, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1099 = lshr i16 %1074, 5, !dbg !3583
  %1100 = sub i16 %1074, %1099, !dbg !3583
  call void @llvm.dbg.value(metadata i32 3, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1101

1101:                                             ; preds = %1096, %1091
  %1102 = phi i16 [ %1100, %1096 ], [ %1095, %1091 ], !dbg !3585
  %1103 = phi i32 [ 3, %1096 ], [ 2, %1091 ], !dbg !3585
  %1104 = phi i32 [ %1097, %1096 ], [ %1089, %1091 ], !dbg !3585
  %1105 = phi i32 [ %1098, %1096 ], [ %1087, %1091 ], !dbg !3586
  store i16 %1102, i16* %1073, align 2, !dbg !3585
  call void @llvm.dbg.value(metadata i32 %1105, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1104, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1103, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1106 = getelementptr inbounds i16, i16* %1072, i32 %1103, !dbg !3587
  %1107 = load i16, i16* %1106, align 2, !dbg !3587
  %1108 = zext i16 %1107 to i32, !dbg !3587
  call void @llvm.dbg.value(metadata i32 %1108, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1109 = icmp ult i32 %1104, 16777216, !dbg !3589
  br i1 %1109, label %1110, label %1117, !dbg !3587

1110:                                             ; preds = %1101
  %1111 = shl nuw i32 %1104, 8, !dbg !3591
  call void @llvm.dbg.value(metadata i32 %1111, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1112 = shl i32 %1105, 8, !dbg !3591
  %1113 = getelementptr inbounds i8, i8* %1085, i32 1, !dbg !3591
  call void @llvm.dbg.value(metadata i8* %1113, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1114 = load i8, i8* %1085, align 1, !dbg !3591
  %1115 = zext i8 %1114 to i32, !dbg !3591
  %1116 = or i32 %1112, %1115, !dbg !3591
  call void @llvm.dbg.value(metadata i32 %1116, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1117, !dbg !3591

1117:                                             ; preds = %1110, %1101
  %1118 = phi i8* [ %1113, %1110 ], [ %1085, %1101 ], !dbg !3578
  %1119 = phi i32 [ %1111, %1110 ], [ %1104, %1101 ], !dbg !3578
  %1120 = phi i32 [ %1116, %1110 ], [ %1105, %1101 ], !dbg !3578
  call void @llvm.dbg.value(metadata i32 %1120, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1119, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1118, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1121 = lshr i32 %1119, 11, !dbg !3587
  %1122 = mul i32 %1121, %1108, !dbg !3587
  call void @llvm.dbg.value(metadata i32 %1122, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1123 = icmp ult i32 %1120, %1122, !dbg !3593
  br i1 %1123, label %1124, label %1130, !dbg !3587

1124:                                             ; preds = %1117
  call void @llvm.dbg.value(metadata i32 %1122, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1125 = sub nsw i32 2048, %1108, !dbg !3595
  %1126 = lshr i32 %1125, 5, !dbg !3595
  %1127 = trunc i32 %1126 to i16, !dbg !3595
  %1128 = add i16 %1107, %1127, !dbg !3595
  store i16 %1128, i16* %1106, align 2, !dbg !3595
  %1129 = shl nuw nsw i32 %1103, 1, !dbg !3595
  call void @llvm.dbg.value(metadata i32 %1129, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1137, !dbg !3595

1130:                                             ; preds = %1117
  %1131 = sub i32 %1119, %1122, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %1131, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1132 = sub i32 %1120, %1122, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %1132, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1133 = lshr i16 %1107, 5, !dbg !3597
  %1134 = sub i16 %1107, %1133, !dbg !3597
  store i16 %1134, i16* %1106, align 2, !dbg !3597
  %1135 = shl nuw nsw i32 %1103, 1, !dbg !3597
  %1136 = or i32 %1135, 1, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %1136, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1137

1137:                                             ; preds = %1130, %1124
  %1138 = phi i32 [ %1129, %1124 ], [ %1136, %1130 ], !dbg !3599
  %1139 = phi i32 [ %1122, %1124 ], [ %1131, %1130 ], !dbg !3599
  %1140 = phi i32 [ %1120, %1124 ], [ %1132, %1130 ], !dbg !3600
  call void @llvm.dbg.value(metadata i32 %1140, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1139, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1138, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1141 = getelementptr inbounds i16, i16* %1072, i32 %1138, !dbg !3601
  %1142 = load i16, i16* %1141, align 2, !dbg !3601
  %1143 = zext i16 %1142 to i32, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %1143, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1144 = icmp ult i32 %1139, 16777216, !dbg !3603
  br i1 %1144, label %1145, label %1152, !dbg !3601

1145:                                             ; preds = %1137
  %1146 = shl nuw i32 %1139, 8, !dbg !3605
  call void @llvm.dbg.value(metadata i32 %1146, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1147 = shl i32 %1140, 8, !dbg !3605
  %1148 = getelementptr inbounds i8, i8* %1118, i32 1, !dbg !3605
  call void @llvm.dbg.value(metadata i8* %1148, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1149 = load i8, i8* %1118, align 1, !dbg !3605
  %1150 = zext i8 %1149 to i32, !dbg !3605
  %1151 = or i32 %1147, %1150, !dbg !3605
  call void @llvm.dbg.value(metadata i32 %1151, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1152, !dbg !3605

1152:                                             ; preds = %1145, %1137
  %1153 = phi i8* [ %1148, %1145 ], [ %1118, %1137 ], !dbg !3578
  %1154 = phi i32 [ %1146, %1145 ], [ %1139, %1137 ], !dbg !3578
  %1155 = phi i32 [ %1151, %1145 ], [ %1140, %1137 ], !dbg !3578
  call void @llvm.dbg.value(metadata i32 %1155, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1154, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1153, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1156 = lshr i32 %1154, 11, !dbg !3601
  %1157 = mul i32 %1156, %1143, !dbg !3601
  call void @llvm.dbg.value(metadata i32 %1157, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1158 = icmp ult i32 %1155, %1157, !dbg !3607
  br i1 %1158, label %1159, label %1165, !dbg !3601

1159:                                             ; preds = %1152
  call void @llvm.dbg.value(metadata i32 %1157, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1160 = sub nsw i32 2048, %1143, !dbg !3609
  %1161 = lshr i32 %1160, 5, !dbg !3609
  %1162 = trunc i32 %1161 to i16, !dbg !3609
  %1163 = add i16 %1142, %1162, !dbg !3609
  store i16 %1163, i16* %1141, align 2, !dbg !3609
  %1164 = shl nsw i32 %1138, 1, !dbg !3609
  call void @llvm.dbg.value(metadata i32 %1164, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1221, !dbg !3609

1165:                                             ; preds = %1152
  %1166 = sub i32 %1154, %1157, !dbg !3611
  call void @llvm.dbg.value(metadata i32 %1166, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1167 = sub i32 %1155, %1157, !dbg !3611
  call void @llvm.dbg.value(metadata i32 %1167, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1168 = lshr i16 %1142, 5, !dbg !3611
  %1169 = sub i16 %1142, %1168, !dbg !3611
  store i16 %1169, i16* %1141, align 2, !dbg !3611
  %1170 = shl nsw i32 %1138, 1, !dbg !3611
  %1171 = or i32 %1170, 1, !dbg !3611
  call void @llvm.dbg.value(metadata i32 %1171, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1221

1172:                                             ; preds = %1058
  %1173 = sub i32 %1060, %1063, !dbg !3613
  call void @llvm.dbg.value(metadata i32 %1173, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1174 = sub i32 %1061, %1063, !dbg !3613
  call void @llvm.dbg.value(metadata i32 %1174, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1175 = lshr i16 %1048, 5, !dbg !3613
  %1176 = sub i16 %1048, %1175, !dbg !3613
  store i16 %1176, i16* %1047, align 2, !dbg !3613
  %1177 = getelementptr inbounds i16, i16* %907, i32 258, !dbg !3615
  call void @llvm.dbg.value(metadata i16* %1177, metadata !3121, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata i32 1, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1178, !dbg !3616

1178:                                             ; preds = %1214, %1172
  %1179 = phi i32 [ 1, %1172 ], [ %1215, %1214 ], !dbg !3618
  %1180 = phi i8* [ %1059, %1172 ], [ %1195, %1214 ], !dbg !3564
  %1181 = phi i32 [ %1173, %1172 ], [ %1216, %1214 ], !dbg !3619
  %1182 = phi i32 [ %1174, %1172 ], [ %1217, %1214 ], !dbg !3619
  call void @llvm.dbg.value(metadata i32 %1182, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1181, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1180, metadata !3097, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1179, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1183 = getelementptr inbounds i16, i16* %1177, i32 %1179, !dbg !3620
  %1184 = load i16, i16* %1183, align 2, !dbg !3620
  %1185 = zext i16 %1184 to i32, !dbg !3620
  call void @llvm.dbg.value(metadata i32 %1185, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1186 = icmp ult i32 %1181, 16777216, !dbg !3623
  br i1 %1186, label %1187, label %1194, !dbg !3620

1187:                                             ; preds = %1178
  %1188 = shl nuw i32 %1181, 8, !dbg !3625
  call void @llvm.dbg.value(metadata i32 %1188, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1189 = shl i32 %1182, 8, !dbg !3625
  %1190 = getelementptr inbounds i8, i8* %1180, i32 1, !dbg !3625
  call void @llvm.dbg.value(metadata i8* %1190, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1191 = load i8, i8* %1180, align 1, !dbg !3625
  %1192 = zext i8 %1191 to i32, !dbg !3625
  %1193 = or i32 %1189, %1192, !dbg !3625
  call void @llvm.dbg.value(metadata i32 %1193, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1194, !dbg !3625

1194:                                             ; preds = %1187, %1178
  %1195 = phi i8* [ %1190, %1187 ], [ %1180, %1178 ], !dbg !3564
  %1196 = phi i32 [ %1188, %1187 ], [ %1181, %1178 ], !dbg !3619
  %1197 = phi i32 [ %1193, %1187 ], [ %1182, %1178 ], !dbg !3619
  call void @llvm.dbg.value(metadata i32 %1197, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1196, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1195, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1198 = lshr i32 %1196, 11, !dbg !3620
  %1199 = mul i32 %1198, %1185, !dbg !3620
  call void @llvm.dbg.value(metadata i32 %1199, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1200 = icmp ult i32 %1197, %1199, !dbg !3627
  br i1 %1200, label %1201, label %1207, !dbg !3620

1201:                                             ; preds = %1194
  call void @llvm.dbg.value(metadata i32 %1199, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1202 = sub nsw i32 2048, %1185, !dbg !3629
  %1203 = lshr i32 %1202, 5, !dbg !3629
  %1204 = trunc i32 %1203 to i16, !dbg !3629
  %1205 = add i16 %1184, %1204, !dbg !3629
  store i16 %1205, i16* %1183, align 2, !dbg !3629
  %1206 = shl nuw nsw i32 %1179, 1, !dbg !3629
  call void @llvm.dbg.value(metadata i32 %1206, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1214, !dbg !3629

1207:                                             ; preds = %1194
  %1208 = sub i32 %1196, %1199, !dbg !3631
  call void @llvm.dbg.value(metadata i32 %1208, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1209 = sub i32 %1197, %1199, !dbg !3631
  call void @llvm.dbg.value(metadata i32 %1209, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1210 = lshr i16 %1184, 5, !dbg !3631
  %1211 = sub i16 %1184, %1210, !dbg !3631
  store i16 %1211, i16* %1183, align 2, !dbg !3631
  %1212 = shl nuw nsw i32 %1179, 1, !dbg !3631
  %1213 = or i32 %1212, 1, !dbg !3631
  call void @llvm.dbg.value(metadata i32 %1213, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1214

1214:                                             ; preds = %1201, %1207
  %1215 = phi i32 [ %1206, %1201 ], [ %1213, %1207 ], !dbg !3633
  %1216 = phi i32 [ %1199, %1201 ], [ %1208, %1207 ], !dbg !3633
  %1217 = phi i32 [ %1197, %1201 ], [ %1209, %1207 ], !dbg !3634
  call void @llvm.dbg.value(metadata i32 %1217, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1216, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1215, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1218 = icmp ult i32 %1215, 256, !dbg !3616
  br i1 %1218, label %1178, label %1219, !dbg !3635, !llvm.loop !3636

1219:                                             ; preds = %1214
  call void @llvm.dbg.value(metadata i32 %1215, metadata !3096, metadata !DIExpression(DW_OP_constu, 256, DW_OP_minus, DW_OP_stack_value)), !dbg !3150
  %1220 = add i32 %1215, -240, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %1220, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1221

1221:                                             ; preds = %1219, %1165, %1159, %1037
  %1222 = phi i32 [ %1041, %1037 ], [ %1164, %1159 ], [ %1171, %1165 ], [ %1220, %1219 ], !dbg !3638
  %1223 = phi i8* [ %1018, %1037 ], [ %1153, %1159 ], [ %1153, %1165 ], [ %1195, %1219 ], !dbg !3638
  %1224 = phi i32 [ %1039, %1037 ], [ %1157, %1159 ], [ %1166, %1165 ], [ %1216, %1219 ], !dbg !3638
  %1225 = phi i32 [ %1040, %1037 ], [ %1155, %1159 ], [ %1167, %1165 ], [ %1217, %1219 ], !dbg !3638
  call void @llvm.dbg.value(metadata i32 %1225, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1224, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1223, metadata !3097, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1222, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1226 = icmp ugt i32 %912, 11, !dbg !3639
  br i1 %1226, label %1227, label %1689, !dbg !3640

1227:                                             ; preds = %1221
  %1228 = icmp ult i32 %1222, 3, !dbg !3641
  %1229 = select i1 %1228, i32 %1222, i32 3, !dbg !3641
  %1230 = shl nuw nsw i32 %1229, 6, !dbg !3642
  %1231 = getelementptr inbounds i16, i16* %50, i32 %1230, !dbg !3643
  call void @llvm.dbg.value(metadata i16* %1231, metadata !3100, metadata !DIExpression()), !dbg !3177
  call void @llvm.dbg.value(metadata i32 1, metadata !3123, metadata !DIExpression()), !dbg !3644
  %1232 = getelementptr inbounds i16, i16* %1231, i32 1, !dbg !3645
  %1233 = load i16, i16* %1232, align 2, !dbg !3645
  %1234 = zext i16 %1233 to i32, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %1234, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1235 = icmp ult i32 %1224, 16777216, !dbg !3648
  br i1 %1235, label %1236, label %1243, !dbg !3645

1236:                                             ; preds = %1227
  %1237 = shl nuw i32 %1224, 8, !dbg !3650
  call void @llvm.dbg.value(metadata i32 %1237, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1238 = shl i32 %1225, 8, !dbg !3650
  %1239 = getelementptr inbounds i8, i8* %1223, i32 1, !dbg !3650
  call void @llvm.dbg.value(metadata i8* %1239, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1240 = load i8, i8* %1223, align 1, !dbg !3650
  %1241 = zext i8 %1240 to i32, !dbg !3650
  %1242 = or i32 %1238, %1241, !dbg !3650
  call void @llvm.dbg.value(metadata i32 %1242, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1243, !dbg !3650

1243:                                             ; preds = %1236, %1227
  %1244 = phi i8* [ %1239, %1236 ], [ %1223, %1227 ], !dbg !3420
  %1245 = phi i32 [ %1237, %1236 ], [ %1224, %1227 ], !dbg !3420
  %1246 = phi i32 [ %1242, %1236 ], [ %1225, %1227 ], !dbg !3420
  call void @llvm.dbg.value(metadata i32 %1246, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1245, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1244, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1247 = lshr i32 %1245, 11, !dbg !3645
  %1248 = mul i32 %1247, %1234, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %1248, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1249 = icmp ult i32 %1246, %1248, !dbg !3652
  br i1 %1249, label %1250, label %1255, !dbg !3645

1250:                                             ; preds = %1243
  call void @llvm.dbg.value(metadata i32 %1248, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1251 = sub nsw i32 2048, %1234, !dbg !3654
  %1252 = lshr i32 %1251, 5, !dbg !3654
  %1253 = trunc i32 %1252 to i16, !dbg !3654
  %1254 = add i16 %1233, %1253, !dbg !3654
  call void @llvm.dbg.value(metadata i32 2, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1260, !dbg !3654

1255:                                             ; preds = %1243
  %1256 = sub i32 %1245, %1248, !dbg !3656
  call void @llvm.dbg.value(metadata i32 %1256, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1257 = sub i32 %1246, %1248, !dbg !3656
  call void @llvm.dbg.value(metadata i32 %1257, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1258 = lshr i16 %1233, 5, !dbg !3656
  %1259 = sub i16 %1233, %1258, !dbg !3656
  call void @llvm.dbg.value(metadata i32 3, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1260

1260:                                             ; preds = %1255, %1250
  %1261 = phi i16 [ %1259, %1255 ], [ %1254, %1250 ], !dbg !3658
  %1262 = phi i32 [ %1256, %1255 ], [ %1248, %1250 ], !dbg !3658
  %1263 = phi i32 [ %1257, %1255 ], [ %1246, %1250 ], !dbg !3659
  %1264 = phi i32 [ 3, %1255 ], [ 2, %1250 ], !dbg !3658
  store i16 %1261, i16* %1232, align 2, !dbg !3658
  call void @llvm.dbg.value(metadata i32 %1264, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1263, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1262, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1265 = getelementptr inbounds i16, i16* %1231, i32 %1264, !dbg !3660
  %1266 = load i16, i16* %1265, align 2, !dbg !3660
  %1267 = zext i16 %1266 to i32, !dbg !3660
  call void @llvm.dbg.value(metadata i32 %1267, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1268 = icmp ult i32 %1262, 16777216, !dbg !3662
  br i1 %1268, label %1269, label %1276, !dbg !3660

1269:                                             ; preds = %1260
  %1270 = shl nuw i32 %1262, 8, !dbg !3664
  call void @llvm.dbg.value(metadata i32 %1270, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1271 = shl i32 %1263, 8, !dbg !3664
  %1272 = getelementptr inbounds i8, i8* %1244, i32 1, !dbg !3664
  call void @llvm.dbg.value(metadata i8* %1272, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1273 = load i8, i8* %1244, align 1, !dbg !3664
  %1274 = zext i8 %1273 to i32, !dbg !3664
  %1275 = or i32 %1271, %1274, !dbg !3664
  call void @llvm.dbg.value(metadata i32 %1275, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1276, !dbg !3664

1276:                                             ; preds = %1269, %1260
  %1277 = phi i8* [ %1272, %1269 ], [ %1244, %1260 ], !dbg !3666
  %1278 = phi i32 [ %1270, %1269 ], [ %1262, %1260 ], !dbg !3666
  %1279 = phi i32 [ %1275, %1269 ], [ %1263, %1260 ], !dbg !3666
  call void @llvm.dbg.value(metadata i32 %1279, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1278, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1277, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1280 = lshr i32 %1278, 11, !dbg !3660
  %1281 = mul i32 %1280, %1267, !dbg !3660
  call void @llvm.dbg.value(metadata i32 %1281, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1282 = icmp ult i32 %1279, %1281, !dbg !3667
  br i1 %1282, label %1283, label %1289, !dbg !3660

1283:                                             ; preds = %1276
  call void @llvm.dbg.value(metadata i32 %1281, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1284 = sub nsw i32 2048, %1267, !dbg !3669
  %1285 = lshr i32 %1284, 5, !dbg !3669
  %1286 = trunc i32 %1285 to i16, !dbg !3669
  %1287 = add i16 %1266, %1286, !dbg !3669
  store i16 %1287, i16* %1265, align 2, !dbg !3669
  %1288 = shl nuw nsw i32 %1264, 1, !dbg !3669
  call void @llvm.dbg.value(metadata i32 %1288, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1296, !dbg !3669

1289:                                             ; preds = %1276
  %1290 = sub i32 %1278, %1281, !dbg !3671
  call void @llvm.dbg.value(metadata i32 %1290, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1291 = sub i32 %1279, %1281, !dbg !3671
  call void @llvm.dbg.value(metadata i32 %1291, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1292 = lshr i16 %1266, 5, !dbg !3671
  %1293 = sub i16 %1266, %1292, !dbg !3671
  store i16 %1293, i16* %1265, align 2, !dbg !3671
  %1294 = shl nuw nsw i32 %1264, 1, !dbg !3671
  %1295 = or i32 %1294, 1, !dbg !3671
  call void @llvm.dbg.value(metadata i32 %1295, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1296

1296:                                             ; preds = %1289, %1283
  %1297 = phi i32 [ %1281, %1283 ], [ %1290, %1289 ], !dbg !3673
  %1298 = phi i32 [ %1279, %1283 ], [ %1291, %1289 ], !dbg !3674
  %1299 = phi i32 [ %1288, %1283 ], [ %1295, %1289 ], !dbg !3673
  call void @llvm.dbg.value(metadata i32 %1299, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1298, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1297, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1300 = getelementptr inbounds i16, i16* %1231, i32 %1299, !dbg !3675
  %1301 = load i16, i16* %1300, align 2, !dbg !3675
  %1302 = zext i16 %1301 to i32, !dbg !3675
  call void @llvm.dbg.value(metadata i32 %1302, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1303 = icmp ult i32 %1297, 16777216, !dbg !3677
  br i1 %1303, label %1304, label %1311, !dbg !3675

1304:                                             ; preds = %1296
  %1305 = shl nuw i32 %1297, 8, !dbg !3679
  call void @llvm.dbg.value(metadata i32 %1305, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1306 = shl i32 %1298, 8, !dbg !3679
  %1307 = getelementptr inbounds i8, i8* %1277, i32 1, !dbg !3679
  call void @llvm.dbg.value(metadata i8* %1307, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1308 = load i8, i8* %1277, align 1, !dbg !3679
  %1309 = zext i8 %1308 to i32, !dbg !3679
  %1310 = or i32 %1306, %1309, !dbg !3679
  call void @llvm.dbg.value(metadata i32 %1310, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1311, !dbg !3679

1311:                                             ; preds = %1304, %1296
  %1312 = phi i8* [ %1307, %1304 ], [ %1277, %1296 ], !dbg !3666
  %1313 = phi i32 [ %1305, %1304 ], [ %1297, %1296 ], !dbg !3666
  %1314 = phi i32 [ %1310, %1304 ], [ %1298, %1296 ], !dbg !3666
  call void @llvm.dbg.value(metadata i32 %1314, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1313, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1312, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1315 = lshr i32 %1313, 11, !dbg !3675
  %1316 = mul i32 %1315, %1302, !dbg !3675
  call void @llvm.dbg.value(metadata i32 %1316, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1317 = icmp ult i32 %1314, %1316, !dbg !3681
  br i1 %1317, label %1318, label %1324, !dbg !3675

1318:                                             ; preds = %1311
  call void @llvm.dbg.value(metadata i32 %1316, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1319 = sub nsw i32 2048, %1302, !dbg !3683
  %1320 = lshr i32 %1319, 5, !dbg !3683
  %1321 = trunc i32 %1320 to i16, !dbg !3683
  %1322 = add i16 %1301, %1321, !dbg !3683
  store i16 %1322, i16* %1300, align 2, !dbg !3683
  %1323 = shl nsw i32 %1299, 1, !dbg !3683
  call void @llvm.dbg.value(metadata i32 %1323, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1331, !dbg !3683

1324:                                             ; preds = %1311
  %1325 = sub i32 %1313, %1316, !dbg !3685
  call void @llvm.dbg.value(metadata i32 %1325, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1326 = sub i32 %1314, %1316, !dbg !3685
  call void @llvm.dbg.value(metadata i32 %1326, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1327 = lshr i16 %1301, 5, !dbg !3685
  %1328 = sub i16 %1301, %1327, !dbg !3685
  store i16 %1328, i16* %1300, align 2, !dbg !3685
  %1329 = shl nsw i32 %1299, 1, !dbg !3685
  %1330 = or i32 %1329, 1, !dbg !3685
  call void @llvm.dbg.value(metadata i32 %1330, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1331

1331:                                             ; preds = %1324, %1318
  %1332 = phi i32 [ %1316, %1318 ], [ %1325, %1324 ], !dbg !3687
  %1333 = phi i32 [ %1314, %1318 ], [ %1326, %1324 ], !dbg !3688
  %1334 = phi i32 [ %1323, %1318 ], [ %1330, %1324 ], !dbg !3687
  call void @llvm.dbg.value(metadata i32 %1334, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1333, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1332, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1335 = getelementptr inbounds i16, i16* %1231, i32 %1334, !dbg !3689
  %1336 = load i16, i16* %1335, align 2, !dbg !3689
  %1337 = zext i16 %1336 to i32, !dbg !3689
  call void @llvm.dbg.value(metadata i32 %1337, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1338 = icmp ult i32 %1332, 16777216, !dbg !3691
  br i1 %1338, label %1339, label %1346, !dbg !3689

1339:                                             ; preds = %1331
  %1340 = shl nuw i32 %1332, 8, !dbg !3693
  call void @llvm.dbg.value(metadata i32 %1340, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1341 = shl i32 %1333, 8, !dbg !3693
  %1342 = getelementptr inbounds i8, i8* %1312, i32 1, !dbg !3693
  call void @llvm.dbg.value(metadata i8* %1342, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1343 = load i8, i8* %1312, align 1, !dbg !3693
  %1344 = zext i8 %1343 to i32, !dbg !3693
  %1345 = or i32 %1341, %1344, !dbg !3693
  call void @llvm.dbg.value(metadata i32 %1345, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1346, !dbg !3693

1346:                                             ; preds = %1339, %1331
  %1347 = phi i8* [ %1342, %1339 ], [ %1312, %1331 ], !dbg !3666
  %1348 = phi i32 [ %1340, %1339 ], [ %1332, %1331 ], !dbg !3666
  %1349 = phi i32 [ %1345, %1339 ], [ %1333, %1331 ], !dbg !3666
  call void @llvm.dbg.value(metadata i32 %1349, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1348, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1347, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1350 = lshr i32 %1348, 11, !dbg !3689
  %1351 = mul i32 %1350, %1337, !dbg !3689
  call void @llvm.dbg.value(metadata i32 %1351, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1352 = icmp ult i32 %1349, %1351, !dbg !3695
  br i1 %1352, label %1353, label %1359, !dbg !3689

1353:                                             ; preds = %1346
  call void @llvm.dbg.value(metadata i32 %1351, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1354 = sub nsw i32 2048, %1337, !dbg !3697
  %1355 = lshr i32 %1354, 5, !dbg !3697
  %1356 = trunc i32 %1355 to i16, !dbg !3697
  %1357 = add i16 %1336, %1356, !dbg !3697
  store i16 %1357, i16* %1335, align 2, !dbg !3697
  %1358 = shl i32 %1334, 1, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %1358, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1366, !dbg !3697

1359:                                             ; preds = %1346
  %1360 = sub i32 %1348, %1351, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %1360, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1361 = sub i32 %1349, %1351, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %1361, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1362 = lshr i16 %1336, 5, !dbg !3699
  %1363 = sub i16 %1336, %1362, !dbg !3699
  store i16 %1363, i16* %1335, align 2, !dbg !3699
  %1364 = shl i32 %1334, 1, !dbg !3699
  %1365 = or i32 %1364, 1, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %1365, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1366

1366:                                             ; preds = %1359, %1353
  %1367 = phi i32 [ %1351, %1353 ], [ %1360, %1359 ], !dbg !3701
  %1368 = phi i32 [ %1349, %1353 ], [ %1361, %1359 ], !dbg !3702
  %1369 = phi i32 [ %1358, %1353 ], [ %1365, %1359 ], !dbg !3701
  call void @llvm.dbg.value(metadata i32 %1369, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1368, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1367, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1370 = getelementptr inbounds i16, i16* %1231, i32 %1369, !dbg !3703
  %1371 = load i16, i16* %1370, align 2, !dbg !3703
  %1372 = zext i16 %1371 to i32, !dbg !3703
  call void @llvm.dbg.value(metadata i32 %1372, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1373 = icmp ult i32 %1367, 16777216, !dbg !3705
  br i1 %1373, label %1374, label %1381, !dbg !3703

1374:                                             ; preds = %1366
  %1375 = shl nuw i32 %1367, 8, !dbg !3707
  call void @llvm.dbg.value(metadata i32 %1375, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1376 = shl i32 %1368, 8, !dbg !3707
  %1377 = getelementptr inbounds i8, i8* %1347, i32 1, !dbg !3707
  call void @llvm.dbg.value(metadata i8* %1377, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1378 = load i8, i8* %1347, align 1, !dbg !3707
  %1379 = zext i8 %1378 to i32, !dbg !3707
  %1380 = or i32 %1376, %1379, !dbg !3707
  call void @llvm.dbg.value(metadata i32 %1380, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1381, !dbg !3707

1381:                                             ; preds = %1374, %1366
  %1382 = phi i8* [ %1377, %1374 ], [ %1347, %1366 ], !dbg !3666
  %1383 = phi i32 [ %1375, %1374 ], [ %1367, %1366 ], !dbg !3666
  %1384 = phi i32 [ %1380, %1374 ], [ %1368, %1366 ], !dbg !3666
  call void @llvm.dbg.value(metadata i32 %1384, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1383, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1382, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1385 = lshr i32 %1383, 11, !dbg !3703
  %1386 = mul i32 %1385, %1372, !dbg !3703
  call void @llvm.dbg.value(metadata i32 %1386, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1387 = icmp ult i32 %1384, %1386, !dbg !3709
  br i1 %1387, label %1388, label %1394, !dbg !3703

1388:                                             ; preds = %1381
  call void @llvm.dbg.value(metadata i32 %1386, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1389 = sub nsw i32 2048, %1372, !dbg !3711
  %1390 = lshr i32 %1389, 5, !dbg !3711
  %1391 = trunc i32 %1390 to i16, !dbg !3711
  %1392 = add i16 %1371, %1391, !dbg !3711
  store i16 %1392, i16* %1370, align 2, !dbg !3711
  %1393 = shl i32 %1369, 1, !dbg !3711
  call void @llvm.dbg.value(metadata i32 %1393, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1401, !dbg !3711

1394:                                             ; preds = %1381
  %1395 = sub i32 %1383, %1386, !dbg !3713
  call void @llvm.dbg.value(metadata i32 %1395, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1396 = sub i32 %1384, %1386, !dbg !3713
  call void @llvm.dbg.value(metadata i32 %1396, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1397 = lshr i16 %1371, 5, !dbg !3713
  %1398 = sub i16 %1371, %1397, !dbg !3713
  store i16 %1398, i16* %1370, align 2, !dbg !3713
  %1399 = shl i32 %1369, 1, !dbg !3713
  %1400 = or i32 %1399, 1, !dbg !3713
  call void @llvm.dbg.value(metadata i32 %1400, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1401

1401:                                             ; preds = %1394, %1388
  %1402 = phi i32 [ %1386, %1388 ], [ %1395, %1394 ], !dbg !3715
  %1403 = phi i32 [ %1384, %1388 ], [ %1396, %1394 ], !dbg !3716
  %1404 = phi i32 [ %1393, %1388 ], [ %1400, %1394 ], !dbg !3715
  call void @llvm.dbg.value(metadata i32 %1404, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1403, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1402, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1405 = getelementptr inbounds i16, i16* %1231, i32 %1404, !dbg !3717
  %1406 = load i16, i16* %1405, align 2, !dbg !3717
  %1407 = zext i16 %1406 to i32, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %1407, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1408 = icmp ult i32 %1402, 16777216, !dbg !3719
  br i1 %1408, label %1409, label %1416, !dbg !3717

1409:                                             ; preds = %1401
  %1410 = shl nuw i32 %1402, 8, !dbg !3721
  call void @llvm.dbg.value(metadata i32 %1410, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1411 = shl i32 %1403, 8, !dbg !3721
  %1412 = getelementptr inbounds i8, i8* %1382, i32 1, !dbg !3721
  call void @llvm.dbg.value(metadata i8* %1412, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1413 = load i8, i8* %1382, align 1, !dbg !3721
  %1414 = zext i8 %1413 to i32, !dbg !3721
  %1415 = or i32 %1411, %1414, !dbg !3721
  call void @llvm.dbg.value(metadata i32 %1415, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1416, !dbg !3721

1416:                                             ; preds = %1409, %1401
  %1417 = phi i8* [ %1412, %1409 ], [ %1382, %1401 ], !dbg !3666
  %1418 = phi i32 [ %1410, %1409 ], [ %1402, %1401 ], !dbg !3666
  %1419 = phi i32 [ %1415, %1409 ], [ %1403, %1401 ], !dbg !3666
  call void @llvm.dbg.value(metadata i32 %1419, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1418, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1417, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1420 = lshr i32 %1418, 11, !dbg !3717
  %1421 = mul i32 %1420, %1407, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %1421, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1422 = icmp ult i32 %1419, %1421, !dbg !3723
  br i1 %1422, label %1423, label %1429, !dbg !3717

1423:                                             ; preds = %1416
  call void @llvm.dbg.value(metadata i32 %1421, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1424 = sub nsw i32 2048, %1407, !dbg !3725
  %1425 = lshr i32 %1424, 5, !dbg !3725
  %1426 = trunc i32 %1425 to i16, !dbg !3725
  %1427 = add i16 %1406, %1426, !dbg !3725
  store i16 %1427, i16* %1405, align 2, !dbg !3725
  %1428 = shl i32 %1404, 1, !dbg !3725
  call void @llvm.dbg.value(metadata i32 %1428, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1436, !dbg !3725

1429:                                             ; preds = %1416
  %1430 = sub i32 %1418, %1421, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %1430, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1431 = sub i32 %1419, %1421, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %1431, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1432 = lshr i16 %1406, 5, !dbg !3727
  %1433 = sub i16 %1406, %1432, !dbg !3727
  store i16 %1433, i16* %1405, align 2, !dbg !3727
  %1434 = shl i32 %1404, 1, !dbg !3727
  %1435 = or i32 %1434, 1, !dbg !3727
  call void @llvm.dbg.value(metadata i32 %1435, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1436

1436:                                             ; preds = %1429, %1423
  %1437 = phi i32 [ %1421, %1423 ], [ %1430, %1429 ], !dbg !3729
  %1438 = phi i32 [ %1419, %1423 ], [ %1431, %1429 ], !dbg !3730
  %1439 = phi i32 [ %1428, %1423 ], [ %1435, %1429 ], !dbg !3729
  call void @llvm.dbg.value(metadata i32 %1439, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1438, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1437, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1440 = add i32 %1439, -64, !dbg !3731
  call void @llvm.dbg.value(metadata i32 %1440, metadata !3123, metadata !DIExpression()), !dbg !3644
  %1441 = icmp ugt i32 %1440, 3, !dbg !3732
  br i1 %1441, label %1442, label %1674, !dbg !3733

1442:                                             ; preds = %1436
  call void @llvm.dbg.value(metadata i32 %1440, metadata !3126, metadata !DIExpression()), !dbg !3734
  %1443 = lshr i32 %1440, 1, !dbg !3735
  %1444 = add nsw i32 %1443, -1, !dbg !3736
  call void @llvm.dbg.value(metadata i32 %1444, metadata !3129, metadata !DIExpression()), !dbg !3734
  %1445 = and i32 %1439, 1, !dbg !3737
  %1446 = or i32 %1445, 2, !dbg !3738
  call void @llvm.dbg.value(metadata i32 %1446, metadata !3123, metadata !DIExpression()), !dbg !3644
  %1447 = icmp ult i32 %1440, 14, !dbg !3739
  br i1 %1447, label %1448, label %1501, !dbg !3740

1448:                                             ; preds = %1442
  %1449 = shl i32 %1446, %1444, !dbg !3741
  call void @llvm.dbg.value(metadata i32 %1449, metadata !3123, metadata !DIExpression()), !dbg !3644
  %1450 = sub nsw i32 64, %1439, !dbg !3742
  %1451 = getelementptr inbounds i16, i16* %56, i32 %1449, !dbg !3742
  %1452 = getelementptr inbounds i16, i16* %1451, i32 %1450, !dbg !3743
  call void @llvm.dbg.value(metadata i16* %1452, metadata !3100, metadata !DIExpression()), !dbg !3177
  call void @llvm.dbg.value(metadata i32 1, metadata !3130, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 1, metadata !3134, metadata !DIExpression()), !dbg !3744
  br label %1453, !dbg !3745

1453:                                             ; preds = %1493, %1448
  %1454 = phi i8* [ %1417, %1448 ], [ %1473, %1493 ], !dbg !3644
  %1455 = phi i32 [ %1437, %1448 ], [ %1494, %1493 ], !dbg !3644
  %1456 = phi i32 [ %1438, %1448 ], [ %1495, %1493 ], !dbg !3644
  %1457 = phi i32 [ %1449, %1448 ], [ %1496, %1493 ], !dbg !3741
  %1458 = phi i32 [ %1444, %1448 ], [ %1499, %1493 ], !dbg !3734
  %1459 = phi i32 [ 1, %1448 ], [ %1498, %1493 ], !dbg !3744
  %1460 = phi i32 [ 1, %1448 ], [ %1497, %1493 ], !dbg !3744
  call void @llvm.dbg.value(metadata i32 %1460, metadata !3134, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 %1459, metadata !3130, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 %1458, metadata !3129, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata i32 %1457, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1456, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1455, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1454, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1461 = getelementptr inbounds i16, i16* %1452, i32 %1460, !dbg !3746
  %1462 = load i16, i16* %1461, align 2, !dbg !3746
  %1463 = zext i16 %1462 to i32, !dbg !3746
  call void @llvm.dbg.value(metadata i32 %1463, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1464 = icmp ult i32 %1455, 16777216, !dbg !3748
  br i1 %1464, label %1465, label %1472, !dbg !3746

1465:                                             ; preds = %1453
  %1466 = shl nuw i32 %1455, 8, !dbg !3750
  call void @llvm.dbg.value(metadata i32 %1466, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1467 = shl i32 %1456, 8, !dbg !3750
  %1468 = getelementptr inbounds i8, i8* %1454, i32 1, !dbg !3750
  call void @llvm.dbg.value(metadata i8* %1468, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1469 = load i8, i8* %1454, align 1, !dbg !3750
  %1470 = zext i8 %1469 to i32, !dbg !3750
  %1471 = or i32 %1467, %1470, !dbg !3750
  call void @llvm.dbg.value(metadata i32 %1471, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1472, !dbg !3750

1472:                                             ; preds = %1465, %1453
  %1473 = phi i8* [ %1468, %1465 ], [ %1454, %1453 ], !dbg !3644
  %1474 = phi i32 [ %1466, %1465 ], [ %1455, %1453 ], !dbg !3644
  %1475 = phi i32 [ %1471, %1465 ], [ %1456, %1453 ], !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1475, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1474, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1473, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1476 = lshr i32 %1474, 11, !dbg !3746
  %1477 = mul i32 %1476, %1463, !dbg !3746
  call void @llvm.dbg.value(metadata i32 %1477, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1478 = icmp ult i32 %1475, %1477, !dbg !3752
  br i1 %1478, label %1479, label %1485, !dbg !3746

1479:                                             ; preds = %1472
  call void @llvm.dbg.value(metadata i32 %1477, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1480 = sub nsw i32 2048, %1463, !dbg !3754
  %1481 = lshr i32 %1480, 5, !dbg !3754
  %1482 = trunc i32 %1481 to i16, !dbg !3754
  %1483 = add i16 %1462, %1482, !dbg !3754
  store i16 %1483, i16* %1461, align 2, !dbg !3754
  %1484 = shl i32 %1460, 1, !dbg !3754
  call void @llvm.dbg.value(metadata i32 %1484, metadata !3134, metadata !DIExpression()), !dbg !3744
  br label %1493, !dbg !3754

1485:                                             ; preds = %1472
  %1486 = sub i32 %1474, %1477, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %1486, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1487 = sub i32 %1475, %1477, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %1487, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1488 = lshr i16 %1462, 5, !dbg !3756
  %1489 = sub i16 %1462, %1488, !dbg !3756
  store i16 %1489, i16* %1461, align 2, !dbg !3756
  %1490 = shl i32 %1460, 1, !dbg !3756
  %1491 = or i32 %1490, 1, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %1491, metadata !3134, metadata !DIExpression()), !dbg !3744
  %1492 = or i32 %1459, %1457, !dbg !3756
  call void @llvm.dbg.value(metadata i32 %1492, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1493

1493:                                             ; preds = %1485, %1479
  %1494 = phi i32 [ %1477, %1479 ], [ %1486, %1485 ], !dbg !3758
  %1495 = phi i32 [ %1475, %1479 ], [ %1487, %1485 ], !dbg !3759
  %1496 = phi i32 [ %1457, %1479 ], [ %1492, %1485 ], !dbg !3760
  %1497 = phi i32 [ %1484, %1479 ], [ %1491, %1485 ], !dbg !3758
  call void @llvm.dbg.value(metadata i32 %1497, metadata !3134, metadata !DIExpression()), !dbg !3744
  call void @llvm.dbg.value(metadata i32 %1496, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1495, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1494, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1498 = shl i32 %1459, 1, !dbg !3761
  call void @llvm.dbg.value(metadata i32 %1498, metadata !3130, metadata !DIExpression()), !dbg !3744
  %1499 = add i32 %1458, -1, !dbg !3762
  call void @llvm.dbg.value(metadata i32 %1499, metadata !3129, metadata !DIExpression()), !dbg !3734
  %1500 = icmp eq i32 %1499, 0, !dbg !3763
  br i1 %1500, label %1674, label %1453, !dbg !3764, !llvm.loop !3765

1501:                                             ; preds = %1442
  %1502 = add nsw i32 %1443, -5, !dbg !3767
  call void @llvm.dbg.value(metadata i32 %1502, metadata !3129, metadata !DIExpression()), !dbg !3734
  br label %1503, !dbg !3768

1503:                                             ; preds = %1517, %1501
  %1504 = phi i8* [ %1417, %1501 ], [ %1518, %1517 ], !dbg !3644
  %1505 = phi i32 [ %1437, %1501 ], [ %1521, %1517 ], !dbg !3644
  %1506 = phi i32 [ %1438, %1501 ], [ %1528, %1517 ], !dbg !3644
  %1507 = phi i32 [ %1446, %1501 ], [ %1526, %1517 ], !dbg !3734
  %1508 = phi i32 [ %1502, %1501 ], [ %1529, %1517 ], !dbg !3769
  call void @llvm.dbg.value(metadata i32 %1508, metadata !3129, metadata !DIExpression()), !dbg !3734
  call void @llvm.dbg.value(metadata i32 %1507, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1506, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1505, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1504, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1509 = icmp ult i32 %1505, 16777216, !dbg !3770
  br i1 %1509, label %1510, label %1517, !dbg !3772

1510:                                             ; preds = %1503
  %1511 = shl nuw i32 %1505, 8, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %1511, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1512 = shl i32 %1506, 8, !dbg !3773
  %1513 = getelementptr inbounds i8, i8* %1504, i32 1, !dbg !3773
  call void @llvm.dbg.value(metadata i8* %1513, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1514 = load i8, i8* %1504, align 1, !dbg !3773
  %1515 = zext i8 %1514 to i32, !dbg !3773
  %1516 = or i32 %1512, %1515, !dbg !3773
  call void @llvm.dbg.value(metadata i32 %1516, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1517, !dbg !3773

1517:                                             ; preds = %1510, %1503
  %1518 = phi i8* [ %1513, %1510 ], [ %1504, %1503 ], !dbg !3644
  %1519 = phi i32 [ %1511, %1510 ], [ %1505, %1503 ], !dbg !3644
  %1520 = phi i32 [ %1516, %1510 ], [ %1506, %1503 ], !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1520, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1519, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1518, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1521 = lshr i32 %1519, 1, !dbg !3775
  call void @llvm.dbg.value(metadata i32 %1521, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1522 = sub i32 %1520, %1521, !dbg !3776
  call void @llvm.dbg.value(metadata i32 %1522, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1523 = ashr i32 %1522, 31, !dbg !3777
  call void @llvm.dbg.value(metadata i32 %1523, metadata !3135, metadata !DIExpression()), !dbg !3778
  %1524 = shl i32 %1507, 1, !dbg !3779
  %1525 = or i32 %1524, 1, !dbg !3780
  %1526 = add nsw i32 %1525, %1523, !dbg !3781
  call void @llvm.dbg.value(metadata i32 %1526, metadata !3123, metadata !DIExpression()), !dbg !3644
  %1527 = and i32 %1523, %1521, !dbg !3782
  %1528 = add i32 %1527, %1522, !dbg !3783
  call void @llvm.dbg.value(metadata i32 %1528, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1529 = add i32 %1508, -1, !dbg !3784
  call void @llvm.dbg.value(metadata i32 %1529, metadata !3129, metadata !DIExpression()), !dbg !3734
  %1530 = icmp eq i32 %1529, 0, !dbg !3785
  br i1 %1530, label %1531, label %1503, !dbg !3786, !llvm.loop !3787

1531:                                             ; preds = %1517
  call void @llvm.dbg.value(metadata i16* %51, metadata !3100, metadata !DIExpression()), !dbg !3177
  %1532 = shl i32 %1526, 4, !dbg !3789
  call void @llvm.dbg.value(metadata i32 %1532, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 1, metadata !3139, metadata !DIExpression()), !dbg !3790
  %1533 = load i16, i16* %52, align 2, !dbg !3791
  %1534 = zext i16 %1533 to i32, !dbg !3791
  call void @llvm.dbg.value(metadata i32 %1534, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1535 = icmp ult i32 %1519, 33554432, !dbg !3792
  br i1 %1535, label %1536, label %1543, !dbg !3791

1536:                                             ; preds = %1531
  %1537 = shl i32 %1521, 8, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %1537, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1538 = shl i32 %1528, 8, !dbg !3794
  %1539 = getelementptr inbounds i8, i8* %1518, i32 1, !dbg !3794
  call void @llvm.dbg.value(metadata i8* %1539, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1540 = load i8, i8* %1518, align 1, !dbg !3794
  %1541 = zext i8 %1540 to i32, !dbg !3794
  %1542 = or i32 %1538, %1541, !dbg !3794
  call void @llvm.dbg.value(metadata i32 %1542, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1543, !dbg !3794

1543:                                             ; preds = %1536, %1531
  %1544 = phi i8* [ %1539, %1536 ], [ %1518, %1531 ], !dbg !3769
  %1545 = phi i32 [ %1537, %1536 ], [ %1521, %1531 ], !dbg !3769
  %1546 = phi i32 [ %1542, %1536 ], [ %1528, %1531 ], !dbg !3769
  call void @llvm.dbg.value(metadata i32 %1546, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1545, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1544, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1547 = lshr i32 %1545, 11, !dbg !3791
  %1548 = mul i32 %1547, %1534, !dbg !3791
  call void @llvm.dbg.value(metadata i32 %1548, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1549 = icmp ult i32 %1546, %1548, !dbg !3796
  br i1 %1549, label %1550, label %1555, !dbg !3791

1550:                                             ; preds = %1543
  call void @llvm.dbg.value(metadata i32 %1548, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1551 = sub nsw i32 2048, %1534, !dbg !3798
  %1552 = lshr i32 %1551, 5, !dbg !3798
  %1553 = trunc i32 %1552 to i16, !dbg !3798
  %1554 = add i16 %1533, %1553, !dbg !3798
  store i16 %1554, i16* %52, align 2, !dbg !3798
  call void @llvm.dbg.value(metadata i32 2, metadata !3139, metadata !DIExpression()), !dbg !3790
  br label %1561, !dbg !3798

1555:                                             ; preds = %1543
  %1556 = sub i32 %1545, %1548, !dbg !3800
  call void @llvm.dbg.value(metadata i32 %1556, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1557 = sub i32 %1546, %1548, !dbg !3800
  call void @llvm.dbg.value(metadata i32 %1557, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1558 = lshr i16 %1533, 5, !dbg !3800
  %1559 = sub i16 %1533, %1558, !dbg !3800
  store i16 %1559, i16* %52, align 2, !dbg !3800
  call void @llvm.dbg.value(metadata i32 3, metadata !3139, metadata !DIExpression()), !dbg !3790
  %1560 = or i32 %1532, 1, !dbg !3800
  call void @llvm.dbg.value(metadata i32 %1560, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1561

1561:                                             ; preds = %1555, %1550
  %1562 = phi i32 [ %1548, %1550 ], [ %1556, %1555 ], !dbg !3802
  %1563 = phi i32 [ %1546, %1550 ], [ %1557, %1555 ], !dbg !3790
  %1564 = phi i32 [ %1532, %1550 ], [ %1560, %1555 ], !dbg !3769
  %1565 = phi i32 [ 2, %1550 ], [ 3, %1555 ], !dbg !3802
  call void @llvm.dbg.value(metadata i32 %1565, metadata !3139, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i32 %1564, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1563, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1562, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1566 = getelementptr inbounds i16, i16* %51, i32 %1565, !dbg !3803
  %1567 = load i16, i16* %1566, align 2, !dbg !3803
  %1568 = zext i16 %1567 to i32, !dbg !3803
  call void @llvm.dbg.value(metadata i32 %1568, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1569 = icmp ult i32 %1562, 16777216, !dbg !3804
  br i1 %1569, label %1570, label %1577, !dbg !3803

1570:                                             ; preds = %1561
  %1571 = shl nuw i32 %1562, 8, !dbg !3806
  call void @llvm.dbg.value(metadata i32 %1571, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1572 = shl i32 %1563, 8, !dbg !3806
  %1573 = getelementptr inbounds i8, i8* %1544, i32 1, !dbg !3806
  call void @llvm.dbg.value(metadata i8* %1573, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1574 = load i8, i8* %1544, align 1, !dbg !3806
  %1575 = zext i8 %1574 to i32, !dbg !3806
  %1576 = or i32 %1572, %1575, !dbg !3806
  call void @llvm.dbg.value(metadata i32 %1576, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1577, !dbg !3806

1577:                                             ; preds = %1570, %1561
  %1578 = phi i8* [ %1573, %1570 ], [ %1544, %1561 ], !dbg !3790
  %1579 = phi i32 [ %1571, %1570 ], [ %1562, %1561 ], !dbg !3790
  %1580 = phi i32 [ %1576, %1570 ], [ %1563, %1561 ], !dbg !3790
  call void @llvm.dbg.value(metadata i32 %1580, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1579, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1578, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1581 = lshr i32 %1579, 11, !dbg !3803
  %1582 = mul i32 %1581, %1568, !dbg !3803
  call void @llvm.dbg.value(metadata i32 %1582, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1583 = icmp ult i32 %1580, %1582, !dbg !3808
  br i1 %1583, label %1584, label %1590, !dbg !3803

1584:                                             ; preds = %1577
  call void @llvm.dbg.value(metadata i32 %1582, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1585 = sub nsw i32 2048, %1568, !dbg !3810
  %1586 = lshr i32 %1585, 5, !dbg !3810
  %1587 = trunc i32 %1586 to i16, !dbg !3810
  %1588 = add i16 %1567, %1587, !dbg !3810
  store i16 %1588, i16* %1566, align 2, !dbg !3810
  %1589 = shl nuw nsw i32 %1565, 1, !dbg !3810
  call void @llvm.dbg.value(metadata i32 %1589, metadata !3139, metadata !DIExpression()), !dbg !3790
  br label %1598, !dbg !3810

1590:                                             ; preds = %1577
  %1591 = sub i32 %1579, %1582, !dbg !3812
  call void @llvm.dbg.value(metadata i32 %1591, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1592 = sub i32 %1580, %1582, !dbg !3812
  call void @llvm.dbg.value(metadata i32 %1592, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1593 = lshr i16 %1567, 5, !dbg !3812
  %1594 = sub i16 %1567, %1593, !dbg !3812
  store i16 %1594, i16* %1566, align 2, !dbg !3812
  %1595 = shl nuw nsw i32 %1565, 1, !dbg !3812
  %1596 = or i32 %1595, 1, !dbg !3812
  call void @llvm.dbg.value(metadata i32 %1596, metadata !3139, metadata !DIExpression()), !dbg !3790
  %1597 = or i32 %1564, 2, !dbg !3812
  call void @llvm.dbg.value(metadata i32 %1597, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1598

1598:                                             ; preds = %1590, %1584
  %1599 = phi i32 [ %1582, %1584 ], [ %1591, %1590 ], !dbg !3814
  %1600 = phi i32 [ %1580, %1584 ], [ %1592, %1590 ], !dbg !3790
  %1601 = phi i32 [ %1564, %1584 ], [ %1597, %1590 ], !dbg !3769
  %1602 = phi i32 [ %1589, %1584 ], [ %1596, %1590 ], !dbg !3814
  call void @llvm.dbg.value(metadata i32 %1602, metadata !3139, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i32 %1601, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1600, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1599, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1603 = getelementptr inbounds i16, i16* %51, i32 %1602, !dbg !3815
  %1604 = load i16, i16* %1603, align 2, !dbg !3815
  %1605 = zext i16 %1604 to i32, !dbg !3815
  call void @llvm.dbg.value(metadata i32 %1605, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1606 = icmp ult i32 %1599, 16777216, !dbg !3816
  br i1 %1606, label %1607, label %1614, !dbg !3815

1607:                                             ; preds = %1598
  %1608 = shl nuw i32 %1599, 8, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %1608, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1609 = shl i32 %1600, 8, !dbg !3818
  %1610 = getelementptr inbounds i8, i8* %1578, i32 1, !dbg !3818
  call void @llvm.dbg.value(metadata i8* %1610, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1611 = load i8, i8* %1578, align 1, !dbg !3818
  %1612 = zext i8 %1611 to i32, !dbg !3818
  %1613 = or i32 %1609, %1612, !dbg !3818
  call void @llvm.dbg.value(metadata i32 %1613, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1614, !dbg !3818

1614:                                             ; preds = %1607, %1598
  %1615 = phi i8* [ %1610, %1607 ], [ %1578, %1598 ], !dbg !3790
  %1616 = phi i32 [ %1608, %1607 ], [ %1599, %1598 ], !dbg !3790
  %1617 = phi i32 [ %1613, %1607 ], [ %1600, %1598 ], !dbg !3790
  call void @llvm.dbg.value(metadata i32 %1617, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1616, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1615, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1618 = lshr i32 %1616, 11, !dbg !3815
  %1619 = mul i32 %1618, %1605, !dbg !3815
  call void @llvm.dbg.value(metadata i32 %1619, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1620 = icmp ult i32 %1617, %1619, !dbg !3820
  br i1 %1620, label %1621, label %1627, !dbg !3815

1621:                                             ; preds = %1614
  call void @llvm.dbg.value(metadata i32 %1619, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1622 = sub nsw i32 2048, %1605, !dbg !3822
  %1623 = lshr i32 %1622, 5, !dbg !3822
  %1624 = trunc i32 %1623 to i16, !dbg !3822
  %1625 = add i16 %1604, %1624, !dbg !3822
  store i16 %1625, i16* %1603, align 2, !dbg !3822
  %1626 = shl nsw i32 %1602, 1, !dbg !3822
  call void @llvm.dbg.value(metadata i32 %1626, metadata !3139, metadata !DIExpression()), !dbg !3790
  br label %1635, !dbg !3822

1627:                                             ; preds = %1614
  %1628 = sub i32 %1616, %1619, !dbg !3824
  call void @llvm.dbg.value(metadata i32 %1628, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1629 = sub i32 %1617, %1619, !dbg !3824
  call void @llvm.dbg.value(metadata i32 %1629, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1630 = lshr i16 %1604, 5, !dbg !3824
  %1631 = sub i16 %1604, %1630, !dbg !3824
  store i16 %1631, i16* %1603, align 2, !dbg !3824
  %1632 = shl nsw i32 %1602, 1, !dbg !3824
  %1633 = or i32 %1632, 1, !dbg !3824
  call void @llvm.dbg.value(metadata i32 %1633, metadata !3139, metadata !DIExpression()), !dbg !3790
  %1634 = or i32 %1601, 4, !dbg !3824
  call void @llvm.dbg.value(metadata i32 %1634, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1635

1635:                                             ; preds = %1627, %1621
  %1636 = phi i32 [ %1619, %1621 ], [ %1628, %1627 ], !dbg !3826
  %1637 = phi i32 [ %1617, %1621 ], [ %1629, %1627 ], !dbg !3790
  %1638 = phi i32 [ %1601, %1621 ], [ %1634, %1627 ], !dbg !3769
  %1639 = phi i32 [ %1626, %1621 ], [ %1633, %1627 ], !dbg !3826
  call void @llvm.dbg.value(metadata i32 %1639, metadata !3139, metadata !DIExpression()), !dbg !3790
  call void @llvm.dbg.value(metadata i32 %1638, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1637, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1636, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1640 = getelementptr inbounds i16, i16* %51, i32 %1639, !dbg !3827
  %1641 = load i16, i16* %1640, align 2, !dbg !3827
  %1642 = zext i16 %1641 to i32, !dbg !3827
  call void @llvm.dbg.value(metadata i32 %1642, metadata !3103, metadata !DIExpression()), !dbg !3177
  %1643 = icmp ult i32 %1636, 16777216, !dbg !3828
  br i1 %1643, label %1644, label %1651, !dbg !3827

1644:                                             ; preds = %1635
  %1645 = shl nuw i32 %1636, 8, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %1645, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1646 = shl i32 %1637, 8, !dbg !3830
  %1647 = getelementptr inbounds i8, i8* %1615, i32 1, !dbg !3830
  call void @llvm.dbg.value(metadata i8* %1647, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1648 = load i8, i8* %1615, align 1, !dbg !3830
  %1649 = zext i8 %1648 to i32, !dbg !3830
  %1650 = or i32 %1646, %1649, !dbg !3830
  call void @llvm.dbg.value(metadata i32 %1650, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1651, !dbg !3830

1651:                                             ; preds = %1644, %1635
  %1652 = phi i8* [ %1647, %1644 ], [ %1615, %1635 ], !dbg !3790
  %1653 = phi i32 [ %1645, %1644 ], [ %1636, %1635 ], !dbg !3790
  %1654 = phi i32 [ %1650, %1644 ], [ %1637, %1635 ], !dbg !3790
  call void @llvm.dbg.value(metadata i32 %1654, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1653, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1652, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1655 = lshr i32 %1653, 11, !dbg !3827
  %1656 = mul i32 %1655, %1642, !dbg !3827
  call void @llvm.dbg.value(metadata i32 %1656, metadata !3102, metadata !DIExpression()), !dbg !3177
  %1657 = icmp ult i32 %1654, %1656, !dbg !3832
  br i1 %1657, label %1658, label %1663, !dbg !3827

1658:                                             ; preds = %1651
  call void @llvm.dbg.value(metadata i32 %1656, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1659 = sub nsw i32 2048, %1642, !dbg !3834
  %1660 = lshr i32 %1659, 5, !dbg !3834
  %1661 = trunc i32 %1660 to i16, !dbg !3834
  %1662 = add i16 %1641, %1661, !dbg !3834
  store i16 %1662, i16* %1640, align 2, !dbg !3834
  call void @llvm.dbg.value(metadata !DIArgList(i32 %1639, i32 %1639), metadata !3139, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3790
  br label %1669, !dbg !3834

1663:                                             ; preds = %1651
  %1664 = sub i32 %1653, %1656, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %1664, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1665 = sub i32 %1654, %1656, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %1665, metadata !3099, metadata !DIExpression()), !dbg !3150
  %1666 = lshr i16 %1641, 5, !dbg !3836
  %1667 = sub i16 %1641, %1666, !dbg !3836
  store i16 %1667, i16* %1640, align 2, !dbg !3836
  call void @llvm.dbg.value(metadata !DIArgList(i32 %1639, i32 %1639), metadata !3139, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3790
  %1668 = or i32 %1638, 8, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %1668, metadata !3123, metadata !DIExpression()), !dbg !3644
  br label %1669

1669:                                             ; preds = %1663, %1658
  %1670 = phi i32 [ %1656, %1658 ], [ %1664, %1663 ], !dbg !3838
  %1671 = phi i32 [ %1654, %1658 ], [ %1665, %1663 ], !dbg !3790
  %1672 = phi i32 [ %1638, %1658 ], [ %1668, %1663 ], !dbg !3769
  call void @llvm.dbg.value(metadata i32 %1672, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1671, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1670, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1673 = icmp eq i32 %1672, -1, !dbg !3839
  br i1 %1673, label %1735, label %1674, !dbg !3841

1674:                                             ; preds = %1493, %1669, %1436
  %1675 = phi i8* [ %1417, %1436 ], [ %1652, %1669 ], [ %1473, %1493 ], !dbg !3644
  %1676 = phi i32 [ %1437, %1436 ], [ %1670, %1669 ], [ %1494, %1493 ], !dbg !3644
  %1677 = phi i32 [ %1438, %1436 ], [ %1671, %1669 ], [ %1495, %1493 ], !dbg !3644
  %1678 = phi i32 [ %1440, %1436 ], [ %1672, %1669 ], [ %1496, %1493 ], !dbg !3644
  call void @llvm.dbg.value(metadata i32 %912, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1678, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1677, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1676, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1675, metadata !3097, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1222, metadata !3096, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %909, metadata !3087, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %910, metadata !3086, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %911, metadata !3085, metadata !DIExpression()), !dbg !3150
  %1679 = add i32 %1678, 1, !dbg !3842
  call void @llvm.dbg.value(metadata i32 %1679, metadata !3084, metadata !DIExpression()), !dbg !3150
  br i1 %43, label %1680, label %1683, !dbg !3843

1680:                                             ; preds = %1674
  %1681 = icmp ult i32 %1678, %58, !dbg !3844
  br i1 %1681, label %1686, label %1682, !dbg !3848

1682:                                             ; preds = %1680
  store i32 %59, i32* %30, align 4, !dbg !3849
  br label %1781, !dbg !3851

1683:                                             ; preds = %1674
  %1684 = icmp ult i32 %1678, %35, !dbg !3852
  br i1 %1684, label %1686, label %1685, !dbg !3854

1685:                                             ; preds = %1683
  store i32 %59, i32* %30, align 4, !dbg !3855
  br label %1781, !dbg !3857

1686:                                             ; preds = %1680, %1683
  %1687 = icmp ult i32 %912, 19, !dbg !3858
  %1688 = select i1 %1687, i32 7, i32 10, !dbg !3859
  call void @llvm.dbg.value(metadata i32 %1688, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1679, metadata !3084, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %911, metadata !3085, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %910, metadata !3086, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %909, metadata !3087, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1677, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1676, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1675, metadata !3097, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1222, metadata !3096, metadata !DIExpression()), !dbg !3150
  br label %1689

1689:                                             ; preds = %1686, %1221
  %1690 = phi i8* [ %1675, %1686 ], [ %1223, %1221 ], !dbg !3420
  %1691 = phi i32 [ %1676, %1686 ], [ %1224, %1221 ], !dbg !3420
  %1692 = phi i32 [ %1677, %1686 ], [ %1225, %1221 ], !dbg !3420
  %1693 = phi i32 [ %909, %1686 ], [ %908, %1221 ], !dbg !3150
  %1694 = phi i32 [ %910, %1686 ], [ %909, %1221 ], !dbg !3150
  %1695 = phi i32 [ %911, %1686 ], [ %910, %1221 ], !dbg !3150
  %1696 = phi i32 [ %1679, %1686 ], [ %911, %1221 ], !dbg !3150
  %1697 = phi i32 [ %1688, %1686 ], [ %912, %1221 ], !dbg !3424
  call void @llvm.dbg.value(metadata i32 %1697, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1696, metadata !3084, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1695, metadata !3085, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1694, metadata !3086, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1693, metadata !3087, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1692, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1691, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1690, metadata !3097, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1222, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1698 = add i32 %1222, 2, !dbg !3860
  call void @llvm.dbg.value(metadata i32 %1698, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1699 = sub i32 %1, %59, !dbg !3861
  call void @llvm.dbg.value(metadata i32 %1699, metadata !3141, metadata !DIExpression()), !dbg !3863
  %1700 = icmp eq i32 %1699, 0, !dbg !3864
  br i1 %1700, label %1701, label %1702, !dbg !3865

1701:                                             ; preds = %1689
  store i32 %59, i32* %30, align 4, !dbg !3866
  br label %1781, !dbg !3868

1702:                                             ; preds = %1689
  %1703 = icmp ult i32 %1699, %1698, !dbg !3869
  %1704 = select i1 %1703, i32 %1699, i32 %1698, !dbg !3870
  call void @llvm.dbg.value(metadata i32 %1704, metadata !3143, metadata !DIExpression()), !dbg !3863
  %1705 = sub i32 %59, %1696, !dbg !3871
  %1706 = icmp ult i32 %59, %1696, !dbg !3872
  %1707 = select i1 %1706, i32 %29, i32 0, !dbg !3873
  %1708 = add i32 %1707, %1705, !dbg !3874
  call void @llvm.dbg.value(metadata i32 %1708, metadata !3144, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata !DIArgList(i32 %58, i32 %1704), metadata !3094, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !3150
  %1709 = sub i32 %1698, %1704, !dbg !3875
  call void @llvm.dbg.value(metadata i32 %1709, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1710 = sub i32 %29, %1708, !dbg !3876
  %1711 = icmp ugt i32 %1704, %1710, !dbg !3877
  br i1 %1711, label %1722, label %1712, !dbg !3878

1712:                                             ; preds = %1702
  %1713 = getelementptr inbounds i8, i8* %27, i32 %59, !dbg !3879
  call void @llvm.dbg.value(metadata i8* %1713, metadata !3145, metadata !DIExpression()), !dbg !3880
  %1714 = sub nsw i32 %1708, %59, !dbg !3881
  call void @llvm.dbg.value(metadata i32 %1714, metadata !3148, metadata !DIExpression()), !dbg !3880
  %1715 = getelementptr inbounds i8, i8* %1713, i32 %1704, !dbg !3882
  call void @llvm.dbg.value(metadata i8* %1715, metadata !3149, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i32 %1739, metadata !3093, metadata !DIExpression()), !dbg !3150
  br label %1716, !dbg !3883

1716:                                             ; preds = %1716, %1712
  %1717 = phi i8* [ %1713, %1712 ], [ %1720, %1716 ], !dbg !3880
  call void @llvm.dbg.value(metadata i8* %1717, metadata !3145, metadata !DIExpression()), !dbg !3880
  %1718 = getelementptr inbounds i8, i8* %1717, i32 %1714, !dbg !3884
  %1719 = load i8, i8* %1718, align 1, !dbg !3885
  store i8 %1719, i8* %1717, align 1, !dbg !3886
  %1720 = getelementptr inbounds i8, i8* %1717, i32 1, !dbg !3887
  call void @llvm.dbg.value(metadata i8* %1720, metadata !3145, metadata !DIExpression()), !dbg !3880
  %1721 = icmp eq i8* %1720, %1715, !dbg !3888
  br i1 %1721, label %1738, label %1716, !dbg !3889, !llvm.loop !3890

1722:                                             ; preds = %1702, %1722
  %1723 = phi i32 [ %1728, %1722 ], [ %59, %1702 ], !dbg !3150
  %1724 = phi i32 [ %1733, %1722 ], [ %1704, %1702 ], !dbg !3863
  %1725 = phi i32 [ %1732, %1722 ], [ %1708, %1702 ], !dbg !3863
  call void @llvm.dbg.value(metadata i32 %1725, metadata !3144, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i32 %1724, metadata !3143, metadata !DIExpression()), !dbg !3863
  call void @llvm.dbg.value(metadata i32 %1723, metadata !3093, metadata !DIExpression()), !dbg !3150
  %1726 = getelementptr inbounds i8, i8* %27, i32 %1725, !dbg !3892
  %1727 = load i8, i8* %1726, align 1, !dbg !3892
  %1728 = add i32 %1723, 1, !dbg !3895
  call void @llvm.dbg.value(metadata i32 %1728, metadata !3093, metadata !DIExpression()), !dbg !3150
  %1729 = getelementptr inbounds i8, i8* %27, i32 %1723, !dbg !3896
  store i8 %1727, i8* %1729, align 1, !dbg !3897
  %1730 = add i32 %1725, 1, !dbg !3898
  call void @llvm.dbg.value(metadata i32 %1730, metadata !3144, metadata !DIExpression()), !dbg !3863
  %1731 = icmp eq i32 %1730, %29, !dbg !3900
  %1732 = select i1 %1731, i32 0, i32 %1730, !dbg !3901
  call void @llvm.dbg.value(metadata i32 %1732, metadata !3144, metadata !DIExpression()), !dbg !3863
  %1733 = add i32 %1724, -1, !dbg !3902
  call void @llvm.dbg.value(metadata i32 %1733, metadata !3143, metadata !DIExpression()), !dbg !3863
  %1734 = icmp eq i32 %1733, 0, !dbg !3903
  br i1 %1734, label %1740, label %1722, !dbg !3904, !llvm.loop !3905

1735:                                             ; preds = %1669
  %1736 = add i32 %1222, 274, !dbg !3908
  call void @llvm.dbg.value(metadata i32 %1736, metadata !3096, metadata !DIExpression()), !dbg !3150
  %1737 = add i32 %912, -12, !dbg !3910
  call void @llvm.dbg.value(metadata i32 -1, metadata !3123, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.value(metadata i32 %1737, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %911, metadata !3084, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %910, metadata !3085, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %909, metadata !3086, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %908, metadata !3087, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1671, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1670, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1652, metadata !3097, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %59, metadata !3093, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %58, metadata !3094, metadata !DIExpression()), !dbg !3150
  br label %1756

1738:                                             ; preds = %1716
  %1739 = add i32 %1704, %59, !dbg !3911
  br label %1740, !dbg !3177

1740:                                             ; preds = %1722, %1738, %718, %806
  %1741 = phi i32 [ 1, %806 ], [ 1, %718 ], [ %1704, %1738 ], [ %1704, %1722 ]
  %1742 = phi i32 [ %818, %806 ], [ %725, %718 ], [ %1739, %1738 ], [ %1728, %1722 ]
  %1743 = phi i32 [ %60, %806 ], [ %60, %718 ], [ %1709, %1738 ], [ %1709, %1722 ]
  %1744 = phi i8* [ %800, %806 ], [ %719, %718 ], [ %1690, %1738 ], [ %1690, %1722 ]
  %1745 = phi i32 [ %804, %806 ], [ %720, %718 ], [ %1691, %1738 ], [ %1691, %1722 ]
  %1746 = phi i32 [ %802, %806 ], [ %721, %718 ], [ %1692, %1738 ], [ %1692, %1722 ]
  %1747 = phi i32 [ %64, %806 ], [ %64, %718 ], [ %1693, %1738 ], [ %1693, %1722 ]
  %1748 = phi i32 [ %65, %806 ], [ %65, %718 ], [ %1694, %1738 ], [ %1694, %1722 ]
  %1749 = phi i32 [ %66, %806 ], [ %66, %718 ], [ %1695, %1738 ], [ %1695, %1722 ]
  %1750 = phi i32 [ %67, %806 ], [ %67, %718 ], [ %1696, %1738 ], [ %1696, %1722 ]
  %1751 = phi i32 [ %820, %806 ], [ %723, %718 ], [ %1697, %1738 ], [ %1697, %1722 ]
  %1752 = add i32 %1741, %58, !dbg !3177
  call void @llvm.dbg.value(metadata i32 %1737, metadata !3083, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %911, metadata !3084, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %910, metadata !3085, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %909, metadata !3086, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %908, metadata !3087, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1671, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1670, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1652, metadata !3097, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1736, metadata !3096, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %59, metadata !3093, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %58, metadata !3094, metadata !DIExpression()), !dbg !3150
  %1753 = icmp ult i32 %1742, %1, !dbg !3912
  %1754 = icmp ult i8* %1744, %2, !dbg !3913
  %1755 = select i1 %1753, i1 %1754, i1 false, !dbg !3913
  br i1 %1755, label %57, label %1756, !dbg !3914, !llvm.loop !3915

1756:                                             ; preds = %1740, %1735
  %1757 = phi i32 [ %1737, %1735 ], [ %1751, %1740 ]
  %1758 = phi i32 [ %911, %1735 ], [ %1750, %1740 ]
  %1759 = phi i32 [ %910, %1735 ], [ %1749, %1740 ]
  %1760 = phi i32 [ %909, %1735 ], [ %1748, %1740 ]
  %1761 = phi i32 [ %908, %1735 ], [ %1747, %1740 ]
  %1762 = phi i32 [ %1671, %1735 ], [ %1746, %1740 ]
  %1763 = phi i32 [ %1670, %1735 ], [ %1745, %1740 ]
  %1764 = phi i8* [ %1652, %1735 ], [ %1744, %1740 ]
  %1765 = phi i32 [ %1736, %1735 ], [ %1743, %1740 ]
  %1766 = phi i32 [ %59, %1735 ], [ %1742, %1740 ]
  %1767 = phi i32 [ %58, %1735 ], [ %1752, %1740 ]
  %1768 = icmp ult i32 %1763, 16777216, !dbg !3917
  br i1 %1768, label %1769, label %1776, !dbg !3919

1769:                                             ; preds = %1756
  %1770 = shl nuw i32 %1763, 8, !dbg !3920
  call void @llvm.dbg.value(metadata i32 %1770, metadata !3098, metadata !DIExpression()), !dbg !3150
  %1771 = shl i32 %1762, 8, !dbg !3920
  %1772 = getelementptr inbounds i8, i8* %1764, i32 1, !dbg !3920
  call void @llvm.dbg.value(metadata i8* %1772, metadata !3097, metadata !DIExpression()), !dbg !3150
  %1773 = load i8, i8* %1764, align 1, !dbg !3920
  %1774 = zext i8 %1773 to i32, !dbg !3920
  %1775 = or i32 %1771, %1774, !dbg !3920
  call void @llvm.dbg.value(metadata i32 %1775, metadata !3099, metadata !DIExpression()), !dbg !3150
  br label %1776, !dbg !3920

1776:                                             ; preds = %1769, %1756
  %1777 = phi i8* [ %1772, %1769 ], [ %1764, %1756 ], !dbg !3150
  %1778 = phi i32 [ %1770, %1769 ], [ %1763, %1756 ], !dbg !3150
  %1779 = phi i32 [ %1775, %1769 ], [ %1762, %1756 ], !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1779, metadata !3099, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i32 %1778, metadata !3098, metadata !DIExpression()), !dbg !3150
  call void @llvm.dbg.value(metadata i8* %1777, metadata !3097, metadata !DIExpression()), !dbg !3150
  store i8* %1777, i8** %36, align 4, !dbg !3922
  store i32 %1778, i32* %38, align 4, !dbg !3923
  store i32 %1779, i32* %40, align 4, !dbg !3924
  %1780 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 12, !dbg !3925
  store i32 %1765, i32* %1780, align 4, !dbg !3926
  store i32 %1766, i32* %30, align 4, !dbg !3927
  store i32 %1767, i32* %32, align 4, !dbg !3928
  store i32 %1758, i32* %8, align 4, !dbg !3929
  store i32 %1759, i32* %10, align 4, !dbg !3930
  store i32 %1760, i32* %12, align 4, !dbg !3931
  store i32 %1761, i32* %14, align 4, !dbg !3932
  store i32 %1757, i32* %6, align 4, !dbg !3933
  br label %1781, !dbg !3934

1781:                                             ; preds = %756, %1682, %1685, %1701, %1776
  %1782 = phi i32 [ 0, %1776 ], [ 1, %1701 ], [ 1, %1685 ], [ 1, %1682 ], [ 1, %756 ]
  ret i32 %1782, !dbg !3935
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.umax.i32(i32, i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @LzmaDec_DecodeToBuf(%struct.CLzmaDec* noundef %0, i8* noundef %1, i32* nocapture noundef %2, i8* noundef %3, i32* nocapture noundef %4, i32 noundef %5, i32* nocapture noundef writeonly %6) local_unnamed_addr #0 !dbg !3936 {
  %8 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !3940, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i8* %1, metadata !3941, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32* %2, metadata !3942, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i8* %3, metadata !3943, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32* %4, metadata !3944, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32 %5, metadata !3945, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32* %6, metadata !3946, metadata !DIExpression()), !dbg !3957
  %9 = load i32, i32* %2, align 4, !dbg !3958
  call void @llvm.dbg.value(metadata i32 %9, metadata !3947, metadata !DIExpression()), !dbg !3957
  %10 = load i32, i32* %4, align 4, !dbg !3959
  call void @llvm.dbg.value(metadata i32 %10, metadata !3948, metadata !DIExpression()), !dbg !3957
  store i32 0, i32* %2, align 4, !dbg !3960
  store i32 0, i32* %4, align 4, !dbg !3961
  %11 = bitcast i32* %8 to i8*
  %12 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 6
  %13 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 7
  %14 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 2
  br label %15, !dbg !3962

15:                                               ; preds = %45, %7
  %16 = phi i8* [ %3, %7 ], [ %48, %45 ]
  %17 = phi i32 [ %9, %7 ], [ %40, %45 ], !dbg !3957
  %18 = phi i32 [ %10, %7 ], [ %47, %45 ], !dbg !3957
  %19 = phi i8* [ %1, %7 ], [ %46, %45 ]
  call void @llvm.dbg.value(metadata i8* %19, metadata !3941, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32 %18, metadata !3948, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32 %17, metadata !3947, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i8* %16, metadata !3943, metadata !DIExpression()), !dbg !3957
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #23, !dbg !3963
  call void @llvm.dbg.value(metadata i32 %18, metadata !3949, metadata !DIExpression()), !dbg !3964
  store i32 %18, i32* %8, align 4, !dbg !3965
  %20 = load i32, i32* %12, align 4, !dbg !3966
  %21 = load i32, i32* %13, align 4, !dbg !3968
  %22 = icmp eq i32 %20, %21, !dbg !3969
  br i1 %22, label %23, label %24, !dbg !3970

23:                                               ; preds = %15
  store i32 0, i32* %12, align 4, !dbg !3971
  br label %24, !dbg !3972

24:                                               ; preds = %23, %15
  %25 = phi i32 [ 0, %23 ], [ %20, %15 ], !dbg !3973
  call void @llvm.dbg.value(metadata i32 %25, metadata !3954, metadata !DIExpression()), !dbg !3964
  %26 = sub i32 %21, %25, !dbg !3974
  %27 = icmp ugt i32 %17, %26, !dbg !3976
  %28 = add i32 %25, %17, !dbg !3977
  %29 = select i1 %27, i32 %21, i32 %28, !dbg !3977
  %30 = select i1 %27, i32 0, i32 %5, !dbg !3977
  call void @llvm.dbg.value(metadata i32 %30, metadata !3955, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32 %29, metadata !3953, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata i32* %8, metadata !3949, metadata !DIExpression(DW_OP_deref)), !dbg !3964
  %31 = call i32 @LzmaDec_DecodeToDic(%struct.CLzmaDec* noundef nonnull %0, i32 noundef %29, i8* noundef %16, i32* noundef nonnull %8, i32 noundef %30, i32* noundef %6) #25, !dbg !3978
  call void @llvm.dbg.value(metadata i32 %31, metadata !3956, metadata !DIExpression()), !dbg !3964
  %32 = load i32, i32* %8, align 4, !dbg !3979
  call void @llvm.dbg.value(metadata i32 %32, metadata !3949, metadata !DIExpression()), !dbg !3964
  call void @llvm.dbg.value(metadata !DIArgList(i8* %16, i32 %32), metadata !3943, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3957
  call void @llvm.dbg.value(metadata !DIArgList(i32 %18, i32 %32), metadata !3948, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3957
  %33 = load i32, i32* %4, align 4, !dbg !3980
  %34 = add i32 %33, %32, !dbg !3980
  store i32 %34, i32* %4, align 4, !dbg !3980
  %35 = load i32, i32* %12, align 4, !dbg !3981
  %36 = sub i32 %35, %25, !dbg !3982
  call void @llvm.dbg.value(metadata i32 %36, metadata !3953, metadata !DIExpression()), !dbg !3964
  %37 = load i8*, i8** %14, align 4, !dbg !3983
  %38 = getelementptr inbounds i8, i8* %37, i32 %25, !dbg !3984
  %39 = tail call i8* @memcpy(i8* noundef %19, i8* noundef %38, i32 noundef %36) #24, !dbg !3985
  call void @llvm.dbg.value(metadata !DIArgList(i8* %19, i32 %36), metadata !3941, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !3957
  %40 = sub i32 %17, %36, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %40, metadata !3947, metadata !DIExpression()), !dbg !3957
  %41 = load i32, i32* %2, align 4, !dbg !3987
  %42 = add i32 %41, %36, !dbg !3987
  store i32 %42, i32* %2, align 4, !dbg !3987
  %43 = icmp eq i32 %31, 0, !dbg !3988
  br i1 %43, label %45, label %44, !dbg !3990

44:                                               ; preds = %24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #23, !dbg !3991
  br label %52

45:                                               ; preds = %24
  %46 = getelementptr inbounds i8, i8* %19, i32 %36, !dbg !3992
  call void @llvm.dbg.value(metadata i8* %46, metadata !3941, metadata !DIExpression()), !dbg !3957
  %47 = sub i32 %18, %32, !dbg !3993
  call void @llvm.dbg.value(metadata i32 %47, metadata !3948, metadata !DIExpression()), !dbg !3957
  %48 = getelementptr inbounds i8, i8* %16, i32 %32, !dbg !3994
  call void @llvm.dbg.value(metadata i8* %48, metadata !3943, metadata !DIExpression()), !dbg !3957
  %49 = icmp eq i32 %36, 0, !dbg !3995
  %50 = icmp eq i32 %40, 0
  %51 = select i1 %49, i1 true, i1 %50, !dbg !3997
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #23, !dbg !3991
  br i1 %51, label %52, label %15, !llvm.loop !3998

52:                                               ; preds = %45, %44
  ret i32 %31, !dbg !4001
}

; Function Attrs: noinline nounwind optsize
define dso_local void @LzmaDec_FreeProbs(%struct.CLzmaDec* nocapture noundef %0, %struct.lzma_alloc_t* noundef %1) local_unnamed_addr #0 !dbg !4002 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !4012, metadata !DIExpression()), !dbg !4014
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %1, metadata !4013, metadata !DIExpression()), !dbg !4014
  %3 = getelementptr inbounds %struct.lzma_alloc_t, %struct.lzma_alloc_t* %1, i32 0, i32 1, !dbg !4015
  %4 = load void (i8*, i8*)*, void (i8*, i8*)** %3, align 4, !dbg !4015
  %5 = bitcast %struct.lzma_alloc_t* %1 to i8*, !dbg !4016
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 1, !dbg !4017
  %7 = bitcast i16** %6 to i8**, !dbg !4017
  %8 = load i8*, i8** %7, align 4, !dbg !4017
  tail call void %4(i8* noundef %5, i8* noundef %8) #24, !dbg !4018
  store i16* null, i16** %6, align 4, !dbg !4019
  ret void, !dbg !4020
}

; Function Attrs: noinline nounwind optsize
define dso_local void @LzmaDec_Free(%struct.CLzmaDec* nocapture noundef %0, %struct.lzma_alloc_t* noundef %1) local_unnamed_addr #0 !dbg !4021 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !4023, metadata !DIExpression()), !dbg !4025
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %1, metadata !4024, metadata !DIExpression()), !dbg !4025
  tail call void @LzmaDec_FreeProbs(%struct.CLzmaDec* noundef %0, %struct.lzma_alloc_t* noundef %1) #25, !dbg !4026
  tail call fastcc void @LzmaDec_FreeDict(%struct.CLzmaDec* noundef %0, %struct.lzma_alloc_t* noundef %1) #25, !dbg !4027
  ret void, !dbg !4028
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @LzmaDec_FreeDict(%struct.CLzmaDec* nocapture noundef %0, %struct.lzma_alloc_t* noundef %1) unnamed_addr #0 !dbg !4029 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !4031, metadata !DIExpression()), !dbg !4033
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %1, metadata !4032, metadata !DIExpression()), !dbg !4033
  %3 = getelementptr inbounds %struct.lzma_alloc_t, %struct.lzma_alloc_t* %1, i32 0, i32 1, !dbg !4034
  %4 = load void (i8*, i8*)*, void (i8*, i8*)** %3, align 4, !dbg !4034
  %5 = bitcast %struct.lzma_alloc_t* %1 to i8*, !dbg !4035
  %6 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 2, !dbg !4036
  %7 = load i8*, i8** %6, align 4, !dbg !4036
  tail call void %4(i8* noundef %5, i8* noundef %7) #24, !dbg !4037
  store i8* null, i8** %6, align 4, !dbg !4038
  ret void, !dbg !4039
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @LzmaProps_Decode(%struct._CLzmaProps* nocapture noundef writeonly %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 !dbg !4040 {
  call void @llvm.dbg.value(metadata %struct._CLzmaProps* %0, metadata !4045, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata i8* %1, metadata !4046, metadata !DIExpression()), !dbg !4050
  call void @llvm.dbg.value(metadata i32 %2, metadata !4047, metadata !DIExpression()), !dbg !4050
  %4 = icmp ult i32 %2, 5, !dbg !4051
  br i1 %4, label %42, label %5, !dbg !4053

5:                                                ; preds = %3
  %6 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !4054
  %7 = load i8, i8* %6, align 1, !dbg !4054
  %8 = zext i8 %7 to i32, !dbg !4054
  %9 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !4055
  %10 = load i8, i8* %9, align 1, !dbg !4055
  %11 = zext i8 %10 to i32, !dbg !4056
  %12 = shl nuw nsw i32 %11, 8, !dbg !4057
  %13 = or i32 %12, %8, !dbg !4058
  %14 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !4059
  %15 = load i8, i8* %14, align 1, !dbg !4059
  %16 = zext i8 %15 to i32, !dbg !4060
  %17 = shl nuw nsw i32 %16, 16, !dbg !4061
  %18 = or i32 %13, %17, !dbg !4062
  %19 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !4063
  %20 = load i8, i8* %19, align 1, !dbg !4063
  %21 = zext i8 %20 to i32, !dbg !4064
  %22 = shl nuw i32 %21, 24, !dbg !4065
  %23 = or i32 %18, %22, !dbg !4066
  call void @llvm.dbg.value(metadata i32 %23, metadata !4048, metadata !DIExpression()), !dbg !4050
  %24 = icmp ugt i32 %23, 4096, !dbg !4067
  %25 = select i1 %24, i32 %23, i32 4096, !dbg !4067
  call void @llvm.dbg.value(metadata i32 %25, metadata !4048, metadata !DIExpression()), !dbg !4050
  %26 = getelementptr inbounds %struct._CLzmaProps, %struct._CLzmaProps* %0, i32 0, i32 3, !dbg !4068
  store i32 %25, i32* %26, align 4, !dbg !4069
  %27 = load i8, i8* %1, align 1, !dbg !4070
  call void @llvm.dbg.value(metadata i8 %27, metadata !4049, metadata !DIExpression()), !dbg !4050
  %28 = icmp ugt i8 %27, -32, !dbg !4071
  br i1 %28, label %42, label %29, !dbg !4073

29:                                               ; preds = %5
  %30 = freeze i8 %27
  %31 = udiv i8 %30, 9, !dbg !4074
  %32 = mul i8 %31, 9
  %33 = sub i8 %30, %32
  %34 = zext i8 %33 to i32, !dbg !4075
  %35 = getelementptr inbounds %struct._CLzmaProps, %struct._CLzmaProps* %0, i32 0, i32 0, !dbg !4076
  store i32 %34, i32* %35, align 4, !dbg !4077
  call void @llvm.dbg.value(metadata i8 %31, metadata !4049, metadata !DIExpression()), !dbg !4050
  %36 = udiv i8 %27, 45, !dbg !4078
  %37 = zext i8 %36 to i32, !dbg !4078
  %38 = getelementptr inbounds %struct._CLzmaProps, %struct._CLzmaProps* %0, i32 0, i32 2, !dbg !4079
  store i32 %37, i32* %38, align 4, !dbg !4080
  %39 = urem i8 %31, 5, !dbg !4081
  %40 = zext i8 %39 to i32, !dbg !4081
  %41 = getelementptr inbounds %struct._CLzmaProps, %struct._CLzmaProps* %0, i32 0, i32 1, !dbg !4082
  store i32 %40, i32* %41, align 4, !dbg !4083
  br label %42, !dbg !4084

42:                                               ; preds = %5, %3, %29
  %43 = phi i32 [ 0, %29 ], [ 4, %3 ], [ 4, %5 ], !dbg !4050
  ret i32 %43, !dbg !4085
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @LzmaDec_AllocateProbs(%struct.CLzmaDec* nocapture noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, %struct.lzma_alloc_t* noundef %3) local_unnamed_addr #0 !dbg !4086 {
  %5 = alloca %struct._CLzmaProps, align 4
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !4090, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i8* %1, metadata !4091, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata i32 %2, metadata !4092, metadata !DIExpression()), !dbg !4099
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %3, metadata !4093, metadata !DIExpression()), !dbg !4099
  %6 = bitcast %struct._CLzmaProps* %5 to i8*, !dbg !4100
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #23, !dbg !4100
  call void @llvm.dbg.declare(metadata %struct._CLzmaProps* %5, metadata !4094, metadata !DIExpression()), !dbg !4101
  %7 = call i32 @LzmaProps_Decode(%struct._CLzmaProps* noundef nonnull %5, i8* noundef %1, i32 noundef %2) #25, !dbg !4102
  call void @llvm.dbg.value(metadata i32 %7, metadata !4095, metadata !DIExpression()), !dbg !4103
  %8 = icmp eq i32 %7, 0, !dbg !4104
  br i1 %8, label %9, label %14

9:                                                ; preds = %4
  %10 = call fastcc i32 @LzmaDec_AllocateProbs2(%struct.CLzmaDec* noundef %0, %struct._CLzmaProps* noundef nonnull %5, %struct.lzma_alloc_t* noundef %3) #25, !dbg !4106
  call void @llvm.dbg.value(metadata i32 %10, metadata !4097, metadata !DIExpression()), !dbg !4107
  %11 = icmp eq i32 %10, 0, !dbg !4108
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = bitcast %struct.CLzmaDec* %0 to i8*, !dbg !4110
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %13, i8* noundef nonnull align 4 dereferenceable(16) %6, i32 16, i1 false), !dbg !4110
  br label %14, !dbg !4111

14:                                               ; preds = %9, %4, %12
  %15 = phi i32 [ 0, %12 ], [ %10, %9 ], [ %7, %4 ], !dbg !4099
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #23, !dbg !4112
  ret i32 %15, !dbg !4112
}

; Function Attrs: noinline nounwind optsize
define internal fastcc i32 @LzmaDec_AllocateProbs2(%struct.CLzmaDec* nocapture noundef %0, %struct._CLzmaProps* nocapture noundef readonly %1, %struct.lzma_alloc_t* noundef %2) unnamed_addr #0 !dbg !4113 {
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !4119, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata %struct._CLzmaProps* %1, metadata !4120, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %2, metadata !4121, metadata !DIExpression()), !dbg !4123
  %4 = getelementptr inbounds %struct._CLzmaProps, %struct._CLzmaProps* %1, i32 0, i32 0, !dbg !4124
  %5 = load i32, i32* %4, align 4, !dbg !4124
  %6 = getelementptr inbounds %struct._CLzmaProps, %struct._CLzmaProps* %1, i32 0, i32 1, !dbg !4124
  %7 = load i32, i32* %6, align 4, !dbg !4124
  %8 = add i32 %7, %5, !dbg !4124
  %9 = shl i32 768, %8, !dbg !4124
  %10 = add i32 %9, 1846, !dbg !4124
  call void @llvm.dbg.value(metadata i32 %10, metadata !4122, metadata !DIExpression()), !dbg !4123
  %11 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 1, !dbg !4125
  %12 = load i16*, i16** %11, align 4, !dbg !4125
  %13 = icmp eq i16* %12, null, !dbg !4127
  br i1 %13, label %18, label %14, !dbg !4128

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 15, !dbg !4129
  %16 = load i32, i32* %15, align 4, !dbg !4129
  %17 = icmp eq i32 %10, %16, !dbg !4130
  br i1 %17, label %27, label %18, !dbg !4131

18:                                               ; preds = %14, %3
  tail call void @LzmaDec_FreeProbs(%struct.CLzmaDec* noundef nonnull %0, %struct.lzma_alloc_t* noundef %2) #25, !dbg !4132
  %19 = getelementptr inbounds %struct.lzma_alloc_t, %struct.lzma_alloc_t* %2, i32 0, i32 0, !dbg !4134
  %20 = load i8* (i8*, i32)*, i8* (i8*, i32)** %19, align 4, !dbg !4134
  %21 = bitcast %struct.lzma_alloc_t* %2 to i8*, !dbg !4135
  %22 = shl i32 %10, 1, !dbg !4136
  %23 = tail call i8* %20(i8* noundef %21, i32 noundef %22) #24, !dbg !4137
  %24 = bitcast i16** %11 to i8**, !dbg !4138
  store i8* %23, i8** %24, align 4, !dbg !4138
  %25 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 15, !dbg !4139
  store i32 %10, i32* %25, align 4, !dbg !4140
  %26 = icmp eq i8* %23, null, !dbg !4141
  br i1 %26, label %28, label %27, !dbg !4143

27:                                               ; preds = %18, %14
  br label %28, !dbg !4144

28:                                               ; preds = %18, %27
  %29 = phi i32 [ 0, %27 ], [ 2, %18 ], !dbg !4123
  ret i32 %29, !dbg !4145
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #9

; Function Attrs: noinline nounwind optsize
define dso_local i32 @LzmaDec_Allocate(%struct.CLzmaDec* nocapture noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2, %struct.lzma_alloc_t* noundef %3) local_unnamed_addr #0 !dbg !4146 {
  %5 = alloca %struct._CLzmaProps, align 4
  call void @llvm.dbg.value(metadata %struct.CLzmaDec* %0, metadata !4148, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata i8* %1, metadata !4149, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata i32 %2, metadata !4150, metadata !DIExpression()), !dbg !4161
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %3, metadata !4151, metadata !DIExpression()), !dbg !4161
  %6 = bitcast %struct._CLzmaProps* %5 to i8*, !dbg !4162
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #23, !dbg !4162
  call void @llvm.dbg.declare(metadata %struct._CLzmaProps* %5, metadata !4152, metadata !DIExpression()), !dbg !4163
  %7 = call i32 @LzmaProps_Decode(%struct._CLzmaProps* noundef nonnull %5, i8* noundef %1, i32 noundef %2) #25, !dbg !4164
  call void @llvm.dbg.value(metadata i32 %7, metadata !4154, metadata !DIExpression()), !dbg !4165
  %8 = icmp eq i32 %7, 0, !dbg !4166
  br i1 %8, label %9, label %41

9:                                                ; preds = %4
  %10 = call fastcc i32 @LzmaDec_AllocateProbs2(%struct.CLzmaDec* noundef %0, %struct._CLzmaProps* noundef nonnull %5, %struct.lzma_alloc_t* noundef %3) #25, !dbg !4168
  call void @llvm.dbg.value(metadata i32 %10, metadata !4156, metadata !DIExpression()), !dbg !4169
  %11 = icmp eq i32 %10, 0, !dbg !4170
  br i1 %11, label %12, label %41

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct._CLzmaProps, %struct._CLzmaProps* %5, i32 0, i32 3, !dbg !4172
  %14 = load i32, i32* %13, align 4, !dbg !4172
  call void @llvm.dbg.value(metadata i32 %14, metadata !4158, metadata !DIExpression()), !dbg !4173
  call void @llvm.dbg.value(metadata i32 4095, metadata !4160, metadata !DIExpression()), !dbg !4173
  %15 = icmp ugt i32 %14, 1073741823, !dbg !4174
  %16 = icmp ugt i32 %14, 4194303, !dbg !4176
  %17 = select i1 %16, i32 1048575, i32 4095, !dbg !4176
  %18 = select i1 %15, i32 4194303, i32 %17, !dbg !4176
  call void @llvm.dbg.value(metadata i32 %18, metadata !4160, metadata !DIExpression()), !dbg !4173
  %19 = add i32 %18, %14, !dbg !4177
  %20 = xor i32 %18, -1, !dbg !4178
  %21 = and i32 %19, %20, !dbg !4179
  call void @llvm.dbg.value(metadata i32 %21, metadata !4153, metadata !DIExpression()), !dbg !4161
  %22 = icmp ult i32 %21, %14, !dbg !4180
  %23 = select i1 %22, i32 %14, i32 %21, !dbg !4182
  call void @llvm.dbg.value(metadata i32 %23, metadata !4153, metadata !DIExpression()), !dbg !4161
  %24 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 2, !dbg !4183
  %25 = load i8*, i8** %24, align 4, !dbg !4183
  %26 = icmp eq i8* %25, null, !dbg !4185
  br i1 %26, label %31, label %27, !dbg !4186

27:                                               ; preds = %12
  %28 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 7, !dbg !4187
  %29 = load i32, i32* %28, align 4, !dbg !4187
  %30 = icmp eq i32 %23, %29, !dbg !4188
  br i1 %30, label %38, label %31, !dbg !4189

31:                                               ; preds = %27, %12
  tail call fastcc void @LzmaDec_FreeDict(%struct.CLzmaDec* noundef nonnull %0, %struct.lzma_alloc_t* noundef %3) #25, !dbg !4190
  %32 = getelementptr inbounds %struct.lzma_alloc_t, %struct.lzma_alloc_t* %3, i32 0, i32 0, !dbg !4192
  %33 = load i8* (i8*, i32)*, i8* (i8*, i32)** %32, align 4, !dbg !4192
  %34 = bitcast %struct.lzma_alloc_t* %3 to i8*, !dbg !4193
  %35 = tail call i8* %33(i8* noundef %34, i32 noundef %23) #24, !dbg !4194
  store i8* %35, i8** %24, align 4, !dbg !4195
  %36 = icmp eq i8* %35, null, !dbg !4196
  br i1 %36, label %37, label %38, !dbg !4198

37:                                               ; preds = %31
  tail call void @LzmaDec_FreeProbs(%struct.CLzmaDec* noundef nonnull %0, %struct.lzma_alloc_t* noundef nonnull %3) #25, !dbg !4199
  br label %41, !dbg !4201

38:                                               ; preds = %31, %27
  %39 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %0, i32 0, i32 7, !dbg !4202
  store i32 %23, i32* %39, align 4, !dbg !4203
  %40 = bitcast %struct.CLzmaDec* %0 to i8*, !dbg !4204
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(16) %40, i8* noundef nonnull align 4 dereferenceable(16) %6, i32 16, i1 false), !dbg !4204
  br label %41, !dbg !4205

41:                                               ; preds = %9, %4, %38, %37
  %42 = phi i32 [ 0, %38 ], [ 2, %37 ], [ %10, %9 ], [ %7, %4 ], !dbg !4161
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #23, !dbg !4206
  ret i32 %42, !dbg !4206
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @LzmaDecode(i8* noundef %0, i32* nocapture noundef %1, i8* noundef %2, i32* nocapture noundef %3, i8* nocapture noundef readonly %4, i32 noundef %5, i32 noundef %6, i32* nocapture noundef %7, %struct.lzma_alloc_t* noundef %8) local_unnamed_addr #0 !dbg !4207 {
  %10 = alloca %struct.CLzmaDec, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4211, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32* %1, metadata !4212, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i8* %2, metadata !4213, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32* %3, metadata !4214, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i8* %4, metadata !4215, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32 %5, metadata !4216, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32 %6, metadata !4217, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32* %7, metadata !4218, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata %struct.lzma_alloc_t* %8, metadata !4219, metadata !DIExpression()), !dbg !4226
  %11 = bitcast %struct.CLzmaDec* %10 to i8*, !dbg !4227
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %11) #23, !dbg !4227
  call void @llvm.dbg.declare(metadata %struct.CLzmaDec* %10, metadata !4220, metadata !DIExpression()), !dbg !4228
  %12 = load i32, i32* %1, align 4, !dbg !4229
  call void @llvm.dbg.value(metadata i32 %12, metadata !4222, metadata !DIExpression()), !dbg !4226
  %13 = load i32, i32* %3, align 4, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %13, metadata !4223, metadata !DIExpression()), !dbg !4226
  store i32 0, i32* %3, align 4, !dbg !4231
  store i32 0, i32* %1, align 4, !dbg !4232
  store i32 0, i32* %7, align 4, !dbg !4233
  %14 = icmp ult i32 %13, 5, !dbg !4234
  br i1 %14, label %32, label %15, !dbg !4236

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i32 0, i32 2, !dbg !4237
  store i8* null, i8** %16, align 4, !dbg !4237
  %17 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i32 0, i32 1, !dbg !4237
  store i16* null, i16** %17, align 4, !dbg !4237
  %18 = call i32 @LzmaDec_AllocateProbs(%struct.CLzmaDec* noundef nonnull %10, i8* noundef %4, i32 noundef %5, %struct.lzma_alloc_t* noundef %8) #25, !dbg !4239
  call void @llvm.dbg.value(metadata i32 %18, metadata !4224, metadata !DIExpression()), !dbg !4240
  %19 = icmp eq i32 %18, 0, !dbg !4241
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  store i8* %0, i8** %16, align 4, !dbg !4243
  %21 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i32 0, i32 7, !dbg !4244
  store i32 %12, i32* %21, align 4, !dbg !4245
  call void @LzmaDec_Init(%struct.CLzmaDec* noundef nonnull %10) #25, !dbg !4246
  store i32 %13, i32* %3, align 4, !dbg !4247
  %22 = call i32 @LzmaDec_DecodeToDic(%struct.CLzmaDec* noundef nonnull %10, i32 noundef %12, i8* noundef %2, i32* noundef nonnull %3, i32 noundef %6, i32* noundef nonnull %7) #25, !dbg !4248
  call void @llvm.dbg.value(metadata i32 %22, metadata !4221, metadata !DIExpression()), !dbg !4226
  %23 = getelementptr inbounds %struct.CLzmaDec, %struct.CLzmaDec* %10, i32 0, i32 6, !dbg !4249
  %24 = load i32, i32* %23, align 4, !dbg !4249
  store i32 %24, i32* %1, align 4, !dbg !4250
  %25 = icmp eq i32 %22, 0, !dbg !4251
  br i1 %25, label %26, label %30, !dbg !4253

26:                                               ; preds = %20
  %27 = load i32, i32* %7, align 4, !dbg !4254
  %28 = icmp eq i32 %27, 3, !dbg !4255
  %29 = select i1 %28, i32 6, i32 0, !dbg !4256
  br label %30, !dbg !4256

30:                                               ; preds = %26, %20
  %31 = phi i32 [ %22, %20 ], [ %29, %26 ], !dbg !4226
  call void @llvm.dbg.value(metadata i32 %31, metadata !4221, metadata !DIExpression()), !dbg !4226
  call void @LzmaDec_FreeProbs(%struct.CLzmaDec* noundef nonnull %10, %struct.lzma_alloc_t* noundef %8) #25, !dbg !4257
  br label %32, !dbg !4258

32:                                               ; preds = %9, %15, %30
  %33 = phi i32 [ %31, %30 ], [ %18, %15 ], [ 6, %9 ], !dbg !4226
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %11) #23, !dbg !4259
  ret i32 %33, !dbg !4259
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_hardware_init() local_unnamed_addr #0 !dbg !4260 {
  %1 = alloca %struct.hal_wdt_config_t, align 4
  tail call void @bl_uart_init(i32 noundef 26000000) #24, !dbg !4273
  %2 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4274
  %3 = or i32 %2, 15728640, !dbg !4274
  store volatile i32 %3, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !4274
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i32 0, i32 0)) #24, !dbg !4275
  tail call void @bl_set_debug_level(i32 noundef 0) #24, !dbg !4276
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.14, i32 0, i32 0)) #24, !dbg !4277
  tail call void @bl_dcxo_capid_init() #24, !dbg !4278
  tail call void @bl_dcxo_load_calibration() #24, !dbg !4279
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.15, i32 0, i32 0)) #24, !dbg !4280
  store volatile i32 64, i32* inttoptr (i32 -1576991964 to i32*), align 4, !dbg !4281
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3.16, i32 0, i32 0)) #24, !dbg !4282
  tail call void @bl_pmic_init() #24, !dbg !4283
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4.17, i32 0, i32 0)) #24, !dbg !4284
  %4 = tail call signext i8 @custom_setEMI() #24, !dbg !4285
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.18, i32 0, i32 0)) #24, !dbg !4286
  tail call void @clock_set_pll_dcm_init() #24, !dbg !4287
  %5 = tail call i32 @bl_clock_freq_monitor(i16 noundef zeroext 19, i16 noundef zeroext 0, i1 noundef zeroext true) #24, !dbg !4288
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6.19, i32 0, i32 0), i32 noundef %5) #24, !dbg !4289
  %6 = tail call i32 @bl_clock_freq_monitor(i16 noundef zeroext 4, i16 noundef zeroext 0, i1 noundef zeroext true) #24, !dbg !4290
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7.20, i32 0, i32 0), i32 noundef %6) #24, !dbg !4291
  %7 = tail call i32 @bl_clock_freq_monitor(i16 noundef zeroext 8, i16 noundef zeroext 0, i1 noundef zeroext false) #24, !dbg !4292
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8.21, i32 0, i32 0), i32 noundef %7) #24, !dbg !4293
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9.22, i32 0, i32 0)) #24, !dbg !4294
  %8 = tail call signext i8 @custom_setAdvEMI() #24, !dbg !4295
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10.23, i32 0, i32 0)) #24, !dbg !4296
  %9 = tail call i32 @custom_setSFIExt() #24, !dbg !4297
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11.24, i32 0, i32 0)) #24, !dbg !4298
  %10 = tail call i32 @hal_flash_init() #24, !dbg !4299
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12.25, i32 0, i32 0)) #24, !dbg !4300
  %11 = tail call i32 @hal_flash_init() #24, !dbg !4301
  %12 = bitcast %struct.hal_wdt_config_t* %1 to i8*, !dbg !4302
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #23, !dbg !4302
  call void @llvm.dbg.declare(metadata %struct.hal_wdt_config_t* %1, metadata !4264, metadata !DIExpression()), !dbg !4303
  %13 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %1, i32 0, i32 0, !dbg !4304
  store i32 0, i32* %13, align 4, !dbg !4305
  %14 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %1, i32 0, i32 1, !dbg !4306
  store i32 30, i32* %14, align 4, !dbg !4307
  %15 = call i32 @hal_wdt_init(%struct.hal_wdt_config_t* noundef nonnull %1) #24, !dbg !4308
  call void @llvm.dbg.value(metadata i32 %15, metadata !4271, metadata !DIExpression()), !dbg !4309
  %16 = icmp slt i32 %15, 0, !dbg !4310
  br i1 %16, label %17, label %18, !dbg !4312

17:                                               ; preds = %0
  call void (i32, i8*, ...) @bl_print(i32 noundef 3, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13.26, i32 0, i32 0), i32 noundef %15) #24, !dbg !4313
  br label %18, !dbg !4315

18:                                               ; preds = %17, %0
  %19 = call i32 @hal_wdt_enable(i32 noundef -889275714) #24, !dbg !4316
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i32 0, i32 0)) #24, !dbg !4317
  store volatile i32 6, i32* inttoptr (i32 -1575288752 to i32*), align 16, !dbg !4318
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i32 0, i32 0)) #24, !dbg !4319
  call void @bl_bonding_io_reg() #24, !dbg !4320
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i32 0, i32 0)) #24, !dbg !4321
  call void @bl_d2d_io_pull_down() #24, !dbg !4322
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #23, !dbg !4323
  ret void, !dbg !4323
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_set_usb_sleep() local_unnamed_addr #0 !dbg !4324 {
  %1 = alloca %struct.pmic_i2c_config_t, align 4
  %2 = bitcast %struct.pmic_i2c_config_t* %1 to i8*, !dbg !4331
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #23, !dbg !4331
  call void @llvm.dbg.declare(metadata %struct.pmic_i2c_config_t* %1, metadata !4326, metadata !DIExpression()), !dbg !4332
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2.15, i32 0, i32 0)) #24, !dbg !4333
  store volatile i32 64, i32* inttoptr (i32 -1576991964 to i32*), align 4, !dbg !4334
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i32 0, i32 0)) #24, !dbg !4335
  %3 = getelementptr inbounds %struct.pmic_i2c_config_t, %struct.pmic_i2c_config_t* %1, i32 0, i32 0, !dbg !4336
  store i32 100, i32* %3, align 4, !dbg !4337
  %4 = call i32 @pmic_i2c_init(i32 noundef 0, %struct.pmic_i2c_config_t* noundef nonnull %1) #24, !dbg !4338
  call void @bl_usb_low_power_setting() #24, !dbg !4339
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i32 0, i32 0)) #24, !dbg !4340
  store volatile i32 64, i32* inttoptr (i32 -1576991980 to i32*), align 4, !dbg !4341
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #23, !dbg !4342
  ret void, !dbg !4342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_start_user_code() local_unnamed_addr #0 !dbg !4343 {
  %1 = tail call i32 @bl_custom_cm4_start_address() #24, !dbg !4346
  call void @llvm.dbg.value(metadata i32 %1, metadata !4345, metadata !DIExpression()), !dbg !4347
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i32 0, i32 0), i32 noundef %1) #24, !dbg !4348
  tail call void @JumpCmd(i32 noundef %1) #24, !dbg !4349
  ret void, !dbg !4350
}

; Function Attrs: optsize
declare dso_local void @JumpCmd(i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @main() local_unnamed_addr #0 !dbg !4351 {
  tail call void @bl_hardware_init() #25, !dbg !4355
  tail call void @bl_fota_process() #24, !dbg !4356
  tail call void @bl_set_usb_sleep() #25, !dbg !4357
  tail call void @bl_start_user_code() #25, !dbg !4358
  ret i32 0, !dbg !4359
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_print_internal(i32 noundef %0, i8* nocapture noundef readonly %1, [1 x i32] %2) local_unnamed_addr #0 !dbg !4360 {
  %4 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !4372, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i32 %0, metadata !4370, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i8* %1, metadata !4371, metadata !DIExpression()), !dbg !4386
  %5 = bitcast i8** %4 to i8*, !dbg !4387
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4387
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([512 x i8], [512 x i8]* @buf, i32 0, i32 0), metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* getelementptr inbounds ([512 x i8], [512 x i8]* @buf, i32 0, i32 0), i8** %4, align 4, !dbg !4388
  store i8 0, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @buf, i32 0, i32 0), align 1, !dbg !4389
  %6 = load i32, i32* @debug_level, align 4, !dbg !4390
  %7 = icmp ugt i32 %6, %0, !dbg !4392
  br i1 %7, label %197, label %8, !dbg !4393

8:                                                ; preds = %3
  %9 = extractvalue [1 x i32] %2, 0
  call void @llvm.dbg.value(metadata i32 %9, metadata !4372, metadata !DIExpression()), !dbg !4386
  %10 = inttoptr i32 %9 to i8*
  call void @llvm.dbg.value(metadata i8* %10, metadata !4372, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i8* %1, metadata !4374, metadata !DIExpression()), !dbg !4386
  br label %11, !dbg !4394

11:                                               ; preds = %183, %8
  %12 = phi i8* [ %1, %8 ], [ %186, %183 ], !dbg !4396
  %13 = phi i8* [ %10, %8 ], [ %185, %183 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !4372, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i8* %12, metadata !4374, metadata !DIExpression()), !dbg !4386
  %14 = load i8, i8* %12, align 1, !dbg !4397
  switch i8 %14, label %15 [
    i8 0, label %187
    i8 37, label %18
  ], !dbg !4399

15:                                               ; preds = %11
  %16 = load i8*, i8** %4, align 4, !dbg !4400
  call void @llvm.dbg.value(metadata i8* %16, metadata !4376, metadata !DIExpression()), !dbg !4386
  %17 = getelementptr inbounds i8, i8* %16, i32 1, !dbg !4400
  call void @llvm.dbg.value(metadata i8* %17, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %17, i8** %4, align 4, !dbg !4400
  store i8 %14, i8* %16, align 1, !dbg !4404
  br label %183, !dbg !4405

18:                                               ; preds = %11
  %19 = getelementptr inbounds i8, i8* %12, i32 1, !dbg !4406
  call void @llvm.dbg.value(metadata i8* %19, metadata !4374, metadata !DIExpression()), !dbg !4386
  %20 = load i8, i8* %19, align 1, !dbg !4407
  switch i8 %20, label %183 [
    i8 100, label %21
    i8 111, label %32
    i8 120, label %45
    i8 117, label %60
    i8 112, label %129
    i8 99, label %137
    i8 102, label %144
    i8 115, label %169
  ], !dbg !4408

21:                                               ; preds = %18
  %22 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !4409
  call void @llvm.dbg.value(metadata i8* %22, metadata !4372, metadata !DIExpression()), !dbg !4386
  %23 = bitcast i8* %13 to i32*, !dbg !4409
  %24 = load i32, i32* %23, align 4, !dbg !4409
  call void @llvm.dbg.value(metadata i32 %24, metadata !4373, metadata !DIExpression()), !dbg !4386
  %25 = icmp slt i32 %24, 0, !dbg !4411
  br i1 %25, label %26, label %30, !dbg !4413

26:                                               ; preds = %21
  %27 = load i8*, i8** %4, align 4, !dbg !4414
  call void @llvm.dbg.value(metadata i8* %27, metadata !4376, metadata !DIExpression()), !dbg !4386
  %28 = getelementptr inbounds i8, i8* %27, i32 1, !dbg !4414
  call void @llvm.dbg.value(metadata i8* %28, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %28, i8** %4, align 4, !dbg !4414
  store i8 45, i8* %27, align 1, !dbg !4416
  %29 = sub nsw i32 0, %24, !dbg !4417
  call void @llvm.dbg.value(metadata i32 %29, metadata !4373, metadata !DIExpression()), !dbg !4386
  br label %30, !dbg !4418

30:                                               ; preds = %26, %21
  %31 = phi i32 [ %29, %26 ], [ %24, %21 ], !dbg !4419
  call void @llvm.dbg.value(metadata i32 %31, metadata !4373, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i8** %4, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4386
  call fastcc void @bl_itoa(i8** noundef nonnull %4, i32 noundef %31, i32 noundef 10) #25, !dbg !4420
  br label %183, !dbg !4421

32:                                               ; preds = %18
  %33 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !4422
  call void @llvm.dbg.value(metadata i8* %33, metadata !4372, metadata !DIExpression()), !dbg !4386
  %34 = bitcast i8* %13 to i32*, !dbg !4422
  %35 = load i32, i32* %34, align 4, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %35, metadata !4373, metadata !DIExpression()), !dbg !4386
  %36 = icmp slt i32 %35, 0, !dbg !4423
  br i1 %36, label %37, label %41, !dbg !4425

37:                                               ; preds = %32
  %38 = load i8*, i8** %4, align 4, !dbg !4426
  call void @llvm.dbg.value(metadata i8* %38, metadata !4376, metadata !DIExpression()), !dbg !4386
  %39 = getelementptr inbounds i8, i8* %38, i32 1, !dbg !4426
  call void @llvm.dbg.value(metadata i8* %39, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %39, i8** %4, align 4, !dbg !4426
  store i8 45, i8* %38, align 1, !dbg !4428
  %40 = sub nsw i32 0, %35, !dbg !4429
  call void @llvm.dbg.value(metadata i32 %40, metadata !4373, metadata !DIExpression()), !dbg !4386
  br label %41, !dbg !4430

41:                                               ; preds = %37, %32
  %42 = phi i32 [ %40, %37 ], [ %35, %32 ], !dbg !4419
  call void @llvm.dbg.value(metadata i32 %42, metadata !4373, metadata !DIExpression()), !dbg !4386
  %43 = load i8*, i8** %4, align 4, !dbg !4431
  call void @llvm.dbg.value(metadata i8* %43, metadata !4376, metadata !DIExpression()), !dbg !4386
  %44 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !4431
  call void @llvm.dbg.value(metadata i8* %44, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %44, i8** %4, align 4, !dbg !4431
  store i8 48, i8* %43, align 1, !dbg !4432
  call void @llvm.dbg.value(metadata i8** %4, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4386
  call fastcc void @bl_itoa(i8** noundef nonnull %4, i32 noundef %42, i32 noundef 8) #25, !dbg !4433
  br label %183, !dbg !4434

45:                                               ; preds = %18
  %46 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !4435
  call void @llvm.dbg.value(metadata i8* %46, metadata !4372, metadata !DIExpression()), !dbg !4386
  %47 = bitcast i8* %13 to i32*, !dbg !4435
  %48 = load i32, i32* %47, align 4, !dbg !4435
  call void @llvm.dbg.value(metadata i32 %48, metadata !4373, metadata !DIExpression()), !dbg !4386
  %49 = icmp slt i32 %48, 0, !dbg !4436
  br i1 %49, label %50, label %54, !dbg !4438

50:                                               ; preds = %45
  %51 = load i8*, i8** %4, align 4, !dbg !4439
  call void @llvm.dbg.value(metadata i8* %51, metadata !4376, metadata !DIExpression()), !dbg !4386
  %52 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !4439
  call void @llvm.dbg.value(metadata i8* %52, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %52, i8** %4, align 4, !dbg !4439
  store i8 45, i8* %51, align 1, !dbg !4441
  %53 = sub nsw i32 0, %48, !dbg !4442
  call void @llvm.dbg.value(metadata i32 %53, metadata !4373, metadata !DIExpression()), !dbg !4386
  br label %54, !dbg !4443

54:                                               ; preds = %50, %45
  %55 = phi i32 [ %53, %50 ], [ %48, %45 ], !dbg !4419
  call void @llvm.dbg.value(metadata i32 %55, metadata !4373, metadata !DIExpression()), !dbg !4386
  %56 = load i8*, i8** %4, align 4, !dbg !4444
  call void @llvm.dbg.value(metadata i8* %56, metadata !4376, metadata !DIExpression()), !dbg !4386
  %57 = getelementptr inbounds i8, i8* %56, i32 1, !dbg !4444
  call void @llvm.dbg.value(metadata i8* %57, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %57, i8** %4, align 4, !dbg !4444
  store i8 48, i8* %56, align 1, !dbg !4445
  %58 = load i8*, i8** %4, align 4, !dbg !4446
  call void @llvm.dbg.value(metadata i8* %58, metadata !4376, metadata !DIExpression()), !dbg !4386
  %59 = getelementptr inbounds i8, i8* %58, i32 1, !dbg !4446
  call void @llvm.dbg.value(metadata i8* %59, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %59, i8** %4, align 4, !dbg !4446
  store i8 120, i8* %58, align 1, !dbg !4447
  call void @llvm.dbg.value(metadata i8** %4, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4386
  call fastcc void @bl_itoa(i8** noundef nonnull %4, i32 noundef %55, i32 noundef 16) #25, !dbg !4448
  br label %183, !dbg !4449

60:                                               ; preds = %18
  %61 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !4450
  call void @llvm.dbg.value(metadata i8* %61, metadata !4372, metadata !DIExpression()), !dbg !4386
  %62 = bitcast i8* %13 to i32*, !dbg !4450
  %63 = load i32, i32* %62, align 4, !dbg !4450
  call void @llvm.dbg.value(metadata i32 %63, metadata !4380, metadata !DIExpression()), !dbg !4386
  %64 = load i8*, i8** %4, align 4, !dbg !4451
  call void @llvm.dbg.value(metadata i8* %64, metadata !4376, metadata !DIExpression()), !dbg !4386
  %65 = getelementptr inbounds i8, i8* %64, i32 1, !dbg !4451
  call void @llvm.dbg.value(metadata i8* %65, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %65, i8** %4, align 4, !dbg !4451
  store i8 48, i8* %64, align 1, !dbg !4452
  %66 = load i8*, i8** %4, align 4, !dbg !4453
  call void @llvm.dbg.value(metadata i8* %66, metadata !4376, metadata !DIExpression()), !dbg !4386
  %67 = getelementptr inbounds i8, i8* %66, i32 1, !dbg !4453
  call void @llvm.dbg.value(metadata i8* %67, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %67, i8** %4, align 4, !dbg !4453
  store i8 120, i8* %66, align 1, !dbg !4454
  %68 = load i8*, i8** %4, align 4, !dbg !4455
  call void @llvm.dbg.value(metadata i8* %68, metadata !4376, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i8* %68, metadata !4383, metadata !DIExpression()), !dbg !4386
  %69 = lshr i32 %63, 16, !dbg !4456
  call void @llvm.dbg.value(metadata i32 %69, metadata !4381, metadata !DIExpression()), !dbg !4386
  %70 = and i32 %63, 65535, !dbg !4457
  call void @llvm.dbg.value(metadata i32 %70, metadata !4382, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i8** %4, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4386
  call fastcc void @bl_itoa(i8** noundef nonnull %4, i32 noundef %69, i32 noundef 16) #25, !dbg !4458
  %71 = load i8*, i8** %4, align 4, !dbg !4459
  call void @llvm.dbg.value(metadata i8* %71, metadata !4376, metadata !DIExpression()), !dbg !4386
  %72 = ptrtoint i8* %71 to i32, !dbg !4460
  %73 = ptrtoint i8* %68 to i32, !dbg !4461
  %74 = sub i32 %72, %73, !dbg !4462
  call void @llvm.dbg.value(metadata i32 %74, metadata !4384, metadata !DIExpression()), !dbg !4386
  %75 = icmp slt i32 %74, 4, !dbg !4463
  br i1 %75, label %76, label %98, !dbg !4465

76:                                               ; preds = %60
  %77 = sub i32 3, %74
  call void @llvm.dbg.value(metadata i32 3, metadata !4385, metadata !DIExpression()), !dbg !4386
  %78 = icmp sgt i32 %74, 0, !dbg !4466
  br i1 %78, label %79, label %83, !dbg !4470

79:                                               ; preds = %76
  %80 = add nuw nsw i32 %74, -4
  br label %85, !dbg !4470

81:                                               ; preds = %85
  call void @llvm.dbg.value(metadata i32 0, metadata !4385, metadata !DIExpression()), !dbg !4386
  %82 = icmp sgt i32 %74, 3, !dbg !4471
  br i1 %82, label %98, label %83, !dbg !4474

83:                                               ; preds = %76, %81
  %84 = call i32 @llvm.smax.i32(i32 %77, i32 0), !dbg !4474
  br label %93, !dbg !4474

85:                                               ; preds = %79, %85
  %86 = phi i32 [ 3, %79 ], [ %91, %85 ]
  call void @llvm.dbg.value(metadata i32 %86, metadata !4385, metadata !DIExpression()), !dbg !4386
  %87 = add i32 %80, %86, !dbg !4475
  %88 = getelementptr inbounds i8, i8* %68, i32 %87, !dbg !4477
  %89 = load i8, i8* %88, align 1, !dbg !4477
  %90 = getelementptr inbounds i8, i8* %68, i32 %86, !dbg !4478
  store i8 %89, i8* %90, align 1, !dbg !4479
  %91 = add nsw i32 %86, -1, !dbg !4480
  call void @llvm.dbg.value(metadata i32 %91, metadata !4385, metadata !DIExpression()), !dbg !4386
  %92 = icmp sgt i32 %91, %77, !dbg !4466
  br i1 %92, label %85, label %81, !dbg !4470, !llvm.loop !4481

93:                                               ; preds = %83, %93
  %94 = phi i32 [ %96, %93 ], [ 0, %83 ]
  call void @llvm.dbg.value(metadata i32 %94, metadata !4385, metadata !DIExpression()), !dbg !4386
  %95 = getelementptr inbounds i8, i8* %68, i32 %94, !dbg !4483
  store i8 48, i8* %95, align 1, !dbg !4484
  %96 = add nuw i32 %94, 1, !dbg !4485
  call void @llvm.dbg.value(metadata i32 %96, metadata !4385, metadata !DIExpression()), !dbg !4386
  %97 = icmp eq i32 %94, %84, !dbg !4471
  br i1 %97, label %98, label %93, !dbg !4474, !llvm.loop !4486

98:                                               ; preds = %93, %81, %60
  %99 = getelementptr inbounds i8, i8* %68, i32 4, !dbg !4488
  call void @llvm.dbg.value(metadata i8* %99, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %99, i8** %4, align 4, !dbg !4489
  call void @llvm.dbg.value(metadata i8* %99, metadata !4383, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i8** %4, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4386
  call fastcc void @bl_itoa(i8** noundef nonnull %4, i32 noundef %70, i32 noundef 16) #25, !dbg !4490
  %100 = load i8*, i8** %4, align 4, !dbg !4491
  call void @llvm.dbg.value(metadata i8* %100, metadata !4376, metadata !DIExpression()), !dbg !4386
  %101 = ptrtoint i8* %100 to i32, !dbg !4492
  %102 = ptrtoint i8* %99 to i32, !dbg !4493
  %103 = sub i32 %101, %102, !dbg !4494
  call void @llvm.dbg.value(metadata i32 %103, metadata !4384, metadata !DIExpression()), !dbg !4386
  %104 = icmp slt i32 %103, 4, !dbg !4495
  br i1 %104, label %105, label %127, !dbg !4497

105:                                              ; preds = %98
  %106 = sub i32 3, %103
  call void @llvm.dbg.value(metadata i32 3, metadata !4385, metadata !DIExpression()), !dbg !4386
  %107 = icmp sgt i32 %103, 0, !dbg !4498
  br i1 %107, label %108, label %112, !dbg !4502

108:                                              ; preds = %105
  %109 = add nuw nsw i32 %103, -4
  br label %114, !dbg !4502

110:                                              ; preds = %114
  call void @llvm.dbg.value(metadata i32 0, metadata !4385, metadata !DIExpression()), !dbg !4386
  %111 = icmp sgt i32 %103, 3, !dbg !4503
  br i1 %111, label %127, label %112, !dbg !4506

112:                                              ; preds = %105, %110
  %113 = call i32 @llvm.smax.i32(i32 %106, i32 0), !dbg !4506
  br label %122, !dbg !4506

114:                                              ; preds = %108, %114
  %115 = phi i32 [ 3, %108 ], [ %120, %114 ]
  call void @llvm.dbg.value(metadata i32 %115, metadata !4385, metadata !DIExpression()), !dbg !4386
  %116 = add i32 %109, %115, !dbg !4507
  %117 = getelementptr inbounds i8, i8* %99, i32 %116, !dbg !4509
  %118 = load i8, i8* %117, align 1, !dbg !4509
  %119 = getelementptr inbounds i8, i8* %99, i32 %115, !dbg !4510
  store i8 %118, i8* %119, align 1, !dbg !4511
  %120 = add nsw i32 %115, -1, !dbg !4512
  call void @llvm.dbg.value(metadata i32 %120, metadata !4385, metadata !DIExpression()), !dbg !4386
  %121 = icmp sgt i32 %120, %106, !dbg !4498
  br i1 %121, label %114, label %110, !dbg !4502, !llvm.loop !4513

122:                                              ; preds = %112, %122
  %123 = phi i32 [ %125, %122 ], [ 0, %112 ]
  call void @llvm.dbg.value(metadata i32 %123, metadata !4385, metadata !DIExpression()), !dbg !4386
  %124 = getelementptr inbounds i8, i8* %99, i32 %123, !dbg !4515
  store i8 48, i8* %124, align 1, !dbg !4516
  %125 = add nuw i32 %123, 1, !dbg !4517
  call void @llvm.dbg.value(metadata i32 %125, metadata !4385, metadata !DIExpression()), !dbg !4386
  %126 = icmp eq i32 %123, %113, !dbg !4503
  br i1 %126, label %127, label %122, !dbg !4506, !llvm.loop !4518

127:                                              ; preds = %122, %110, %98
  %128 = getelementptr inbounds i8, i8* %68, i32 8, !dbg !4520
  call void @llvm.dbg.value(metadata i8* %128, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %128, i8** %4, align 4, !dbg !4521
  br label %183, !dbg !4522

129:                                              ; preds = %18
  %130 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !4523
  call void @llvm.dbg.value(metadata i8* %130, metadata !4372, metadata !DIExpression()), !dbg !4386
  %131 = bitcast i8* %13 to i32*, !dbg !4523
  %132 = load i32, i32* %131, align 4, !dbg !4523
  call void @llvm.dbg.value(metadata i32 %132, metadata !4373, metadata !DIExpression()), !dbg !4386
  %133 = load i8*, i8** %4, align 4, !dbg !4524
  call void @llvm.dbg.value(metadata i8* %133, metadata !4376, metadata !DIExpression()), !dbg !4386
  %134 = getelementptr inbounds i8, i8* %133, i32 1, !dbg !4524
  call void @llvm.dbg.value(metadata i8* %134, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %134, i8** %4, align 4, !dbg !4524
  store i8 48, i8* %133, align 1, !dbg !4525
  %135 = load i8*, i8** %4, align 4, !dbg !4526
  call void @llvm.dbg.value(metadata i8* %135, metadata !4376, metadata !DIExpression()), !dbg !4386
  %136 = getelementptr inbounds i8, i8* %135, i32 1, !dbg !4526
  call void @llvm.dbg.value(metadata i8* %136, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %136, i8** %4, align 4, !dbg !4526
  store i8 120, i8* %135, align 1, !dbg !4527
  call void @llvm.dbg.value(metadata i8** %4, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4386
  call fastcc void @bl_itoa(i8** noundef nonnull %4, i32 noundef %132, i32 noundef 16) #25, !dbg !4528
  br label %183, !dbg !4529

137:                                              ; preds = %18
  %138 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !4530
  call void @llvm.dbg.value(metadata i8* %138, metadata !4372, metadata !DIExpression()), !dbg !4386
  %139 = bitcast i8* %13 to i32*, !dbg !4530
  %140 = load i32, i32* %139, align 4, !dbg !4530
  %141 = trunc i32 %140 to i8, !dbg !4530
  call void @llvm.dbg.value(metadata i8 %141, metadata !4377, metadata !DIExpression()), !dbg !4386
  %142 = load i8*, i8** %4, align 4, !dbg !4531
  call void @llvm.dbg.value(metadata i8* %142, metadata !4376, metadata !DIExpression()), !dbg !4386
  %143 = getelementptr inbounds i8, i8* %142, i32 1, !dbg !4531
  call void @llvm.dbg.value(metadata i8* %143, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %143, i8** %4, align 4, !dbg !4531
  store i8 %141, i8* %142, align 1, !dbg !4532
  br label %183, !dbg !4533

144:                                              ; preds = %18
  %145 = ptrtoint i8* %13 to i32, !dbg !4534
  %146 = add i32 %145, 7, !dbg !4534
  %147 = and i32 %146, -8, !dbg !4534
  %148 = inttoptr i32 %147 to i8*, !dbg !4534
  %149 = getelementptr inbounds i8, i8* %148, i32 8, !dbg !4534
  call void @llvm.dbg.value(metadata i8* %149, metadata !4372, metadata !DIExpression()), !dbg !4386
  %150 = inttoptr i32 %147 to i64*, !dbg !4534
  %151 = load i64, i64* %150, align 8, !dbg !4534
  call void @llvm.dbg.value(metadata i64 %151, metadata !4378, metadata !DIExpression()), !dbg !4386
  %152 = icmp slt i64 %151, 0, !dbg !4535
  br i1 %152, label %153, label %158, !dbg !4537

153:                                              ; preds = %144
  %154 = load i8*, i8** %4, align 4, !dbg !4538
  call void @llvm.dbg.value(metadata i8* %154, metadata !4376, metadata !DIExpression()), !dbg !4386
  %155 = getelementptr inbounds i8, i8* %154, i32 1, !dbg !4538
  call void @llvm.dbg.value(metadata i8* %155, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %155, i8** %4, align 4, !dbg !4538
  store i8 45, i8* %154, align 1, !dbg !4540
  call void @llvm.dbg.value(metadata i64 %151, metadata !4378, metadata !DIExpression()), !dbg !4386
  %156 = trunc i64 %151 to i32, !dbg !4541
  %157 = sub i32 0, %156, !dbg !4541
  br label %161, !dbg !4541

158:                                              ; preds = %144
  call void @llvm.dbg.value(metadata i64 %151, metadata !4378, metadata !DIExpression()), !dbg !4386
  %159 = icmp eq i64 %151, 0, !dbg !4542
  %160 = trunc i64 %151 to i32, !dbg !4541
  br i1 %159, label %163, label %161, !dbg !4541

161:                                              ; preds = %153, %158
  %162 = phi i32 [ %157, %153 ], [ %160, %158 ]
  call void @llvm.dbg.value(metadata i8** %4, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4386
  call fastcc void @bl_itoa(i8** noundef nonnull %4, i32 noundef %162, i32 noundef 10) #25, !dbg !4544
  br label %166, !dbg !4546

163:                                              ; preds = %158
  %164 = load i8*, i8** %4, align 4, !dbg !4547
  call void @llvm.dbg.value(metadata i8* %164, metadata !4376, metadata !DIExpression()), !dbg !4386
  %165 = getelementptr inbounds i8, i8* %164, i32 1, !dbg !4547
  call void @llvm.dbg.value(metadata i8* %165, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %165, i8** %4, align 4, !dbg !4547
  store i8 48, i8* %164, align 1, !dbg !4549
  br label %166

166:                                              ; preds = %163, %161
  %167 = load i8*, i8** %4, align 4, !dbg !4550
  call void @llvm.dbg.value(metadata i8* %167, metadata !4376, metadata !DIExpression()), !dbg !4386
  %168 = getelementptr inbounds i8, i8* %167, i32 1, !dbg !4550
  call void @llvm.dbg.value(metadata i8* %168, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %168, i8** %4, align 4, !dbg !4550
  store i8 46, i8* %167, align 1, !dbg !4551
  call void @llvm.dbg.value(metadata i32 0, metadata !4379, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i8** %4, metadata !4376, metadata !DIExpression(DW_OP_deref)), !dbg !4386
  call fastcc void @bl_itof(i8** noundef nonnull %4, i32 noundef 0) #25, !dbg !4552
  br label %183, !dbg !4553

169:                                              ; preds = %18
  %170 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !4554
  call void @llvm.dbg.value(metadata i8* %170, metadata !4372, metadata !DIExpression()), !dbg !4386
  %171 = bitcast i8* %13 to i8**, !dbg !4554
  %172 = load i8*, i8** %171, align 4, !dbg !4554
  call void @llvm.dbg.value(metadata i8* %172, metadata !4375, metadata !DIExpression()), !dbg !4386
  %173 = load i8, i8* %172, align 1, !dbg !4556
  %174 = icmp eq i8 %173, 0, !dbg !4558
  br i1 %174, label %183, label %175, !dbg !4558

175:                                              ; preds = %169, %175
  %176 = phi i8 [ %181, %175 ], [ %173, %169 ]
  %177 = phi i8* [ %180, %175 ], [ %172, %169 ]
  call void @llvm.dbg.value(metadata i8* %177, metadata !4375, metadata !DIExpression()), !dbg !4386
  %178 = load i8*, i8** %4, align 4, !dbg !4559
  call void @llvm.dbg.value(metadata i8* %178, metadata !4376, metadata !DIExpression()), !dbg !4386
  %179 = getelementptr inbounds i8, i8* %178, i32 1, !dbg !4559
  call void @llvm.dbg.value(metadata i8* %179, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8* %179, i8** %4, align 4, !dbg !4559
  store i8 %176, i8* %178, align 1, !dbg !4561
  %180 = getelementptr inbounds i8, i8* %177, i32 1, !dbg !4562
  call void @llvm.dbg.value(metadata i8* %180, metadata !4375, metadata !DIExpression()), !dbg !4386
  %181 = load i8, i8* %180, align 1, !dbg !4556
  %182 = icmp eq i8 %181, 0, !dbg !4558
  br i1 %182, label %183, label %175, !dbg !4558, !llvm.loop !4563

183:                                              ; preds = %175, %169, %30, %41, %54, %127, %129, %137, %166, %18, %15
  %184 = phi i8* [ %12, %15 ], [ %19, %18 ], [ %19, %166 ], [ %19, %137 ], [ %19, %129 ], [ %19, %127 ], [ %19, %54 ], [ %19, %41 ], [ %19, %30 ], [ %19, %169 ], [ %19, %175 ], !dbg !4396
  %185 = phi i8* [ %13, %15 ], [ %13, %18 ], [ %149, %166 ], [ %138, %137 ], [ %130, %129 ], [ %61, %127 ], [ %46, %54 ], [ %33, %41 ], [ %22, %30 ], [ %170, %169 ], [ %170, %175 ]
  call void @llvm.dbg.value(metadata i8* %185, metadata !4372, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.value(metadata i8* %184, metadata !4374, metadata !DIExpression()), !dbg !4386
  %186 = getelementptr inbounds i8, i8* %184, i32 1, !dbg !4565
  call void @llvm.dbg.value(metadata i8* %186, metadata !4374, metadata !DIExpression()), !dbg !4386
  br label %11, !dbg !4566, !llvm.loop !4567

187:                                              ; preds = %11
  %188 = load i8*, i8** %4, align 4, !dbg !4569
  call void @llvm.dbg.value(metadata i8* %188, metadata !4376, metadata !DIExpression()), !dbg !4386
  store i8 0, i8* %188, align 1, !dbg !4570
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([512 x i8], [512 x i8]* @buf, i32 0, i32 0), metadata !4376, metadata !DIExpression()), !dbg !4386
  %189 = load i8, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @buf, i32 0, i32 0), align 1, !dbg !4571
  %190 = icmp eq i8 %189, 0, !dbg !4574
  br i1 %190, label %197, label %191, !dbg !4574

191:                                              ; preds = %187, %191
  %192 = phi i8* [ %194, %191 ], [ getelementptr inbounds ([512 x i8], [512 x i8]* @buf, i32 0, i32 0), %187 ], !dbg !4575
  %193 = phi i8 [ %195, %191 ], [ %189, %187 ]
  tail call void @bl_uart_put_byte(i8 noundef zeroext %193) #24, !dbg !4576
  call void @llvm.dbg.value(metadata i8* %192, metadata !4376, metadata !DIExpression()), !dbg !4386
  %194 = getelementptr inbounds i8, i8* %192, i32 1, !dbg !4575
  call void @llvm.dbg.value(metadata i8* %194, metadata !4376, metadata !DIExpression()), !dbg !4386
  %195 = load i8, i8* %194, align 1, !dbg !4571
  %196 = icmp eq i8 %195, 0, !dbg !4574
  br i1 %196, label %197, label %191, !dbg !4574, !llvm.loop !4578

197:                                              ; preds = %191, %187, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4580
  ret void, !dbg !4580
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @bl_itoa(i8** nocapture noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #4 !dbg !30 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !39, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i32 %1, metadata !40, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i32 %2, metadata !41, metadata !DIExpression()), !dbg !4581
  store i8 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @bl_itoa.rev, i32 0, i32 20), align 1, !dbg !4582
  %4 = icmp eq i32 %1, 0, !dbg !4583
  br i1 %4, label %7, label %5, !dbg !4585

5:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 %1, metadata !40, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([21 x i8], [21 x i8]* @bl_itoa.rev, i32 0, i32 20), metadata !42, metadata !DIExpression()), !dbg !4581
  %6 = icmp eq i32 %2, 16
  br label %15, !dbg !4586

7:                                                ; preds = %3
  %8 = load i8*, i8** %0, align 4, !dbg !4587
  store i8 48, i8* %8, align 1, !dbg !4589
  %9 = load i8*, i8** %0, align 4, !dbg !4590
  %10 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !4590
  store i8* %10, i8** %0, align 4, !dbg !4590
  br label %47, !dbg !4591

11:                                               ; preds = %34
  call void @llvm.dbg.value(metadata i8* %36, metadata !42, metadata !DIExpression()), !dbg !4581
  %12 = icmp eq i8 %35, 0, !dbg !4592
  br i1 %12, label %47, label %13, !dbg !4592

13:                                               ; preds = %11
  %14 = load i8*, i8** %0, align 4, !dbg !4593
  br label %38, !dbg !4592

15:                                               ; preds = %5, %34
  %16 = phi i8 [ 0, %5 ], [ %35, %34 ]
  %17 = phi i32 [ %1, %5 ], [ %20, %34 ]
  %18 = phi i8* [ getelementptr inbounds ([21 x i8], [21 x i8]* @bl_itoa.rev, i32 0, i32 20), %5 ], [ %36, %34 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !40, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i8* %18, metadata !42, metadata !DIExpression()), !dbg !4581
  %19 = freeze i32 %17
  %20 = udiv i32 %19, %2, !dbg !4595
  %21 = mul i32 %20, %2
  %22 = sub i32 %19, %21
  call void @llvm.dbg.value(metadata i32 %22, metadata !43, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i32 %20, metadata !40, metadata !DIExpression()), !dbg !4581
  %23 = icmp ult i32 %22, 10, !dbg !4597
  br i1 %23, label %24, label %28, !dbg !4599

24:                                               ; preds = %15
  %25 = trunc i32 %22 to i8, !dbg !4600
  %26 = add nuw nsw i8 %25, 48, !dbg !4600
  %27 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4602
  call void @llvm.dbg.value(metadata i8* %27, metadata !42, metadata !DIExpression()), !dbg !4581
  store i8 %26, i8* %27, align 1, !dbg !4603
  br label %34, !dbg !4604

28:                                               ; preds = %15
  br i1 %6, label %29, label %34, !dbg !4605

29:                                               ; preds = %28
  %30 = add i32 %22, -10, !dbg !4606
  %31 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.27, i32 0, i32 %30, !dbg !4609
  %32 = load i8, i8* %31, align 1, !dbg !4609
  %33 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !4610
  call void @llvm.dbg.value(metadata i8* %33, metadata !42, metadata !DIExpression()), !dbg !4581
  store i8 %32, i8* %33, align 1, !dbg !4611
  br label %34, !dbg !4612

34:                                               ; preds = %28, %29, %24
  %35 = phi i8 [ %26, %24 ], [ %32, %29 ], [ %16, %28 ]
  %36 = phi i8* [ %27, %24 ], [ %33, %29 ], [ %18, %28 ], !dbg !4581
  call void @llvm.dbg.value(metadata i32 %20, metadata !40, metadata !DIExpression()), !dbg !4581
  call void @llvm.dbg.value(metadata i8* %36, metadata !42, metadata !DIExpression()), !dbg !4581
  %37 = icmp ult i32 %17, %2, !dbg !4586
  br i1 %37, label %11, label %15, !dbg !4586, !llvm.loop !4613

38:                                               ; preds = %13, %38
  %39 = phi i8* [ %44, %38 ], [ %14, %13 ], !dbg !4593
  %40 = phi i8 [ %45, %38 ], [ %35, %13 ]
  %41 = phi i8* [ %42, %38 ], [ %36, %13 ]
  call void @llvm.dbg.value(metadata i8* %41, metadata !42, metadata !DIExpression()), !dbg !4581
  %42 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !4615
  call void @llvm.dbg.value(metadata i8* %42, metadata !42, metadata !DIExpression()), !dbg !4581
  store i8 %40, i8* %39, align 1, !dbg !4616
  %43 = load i8*, i8** %0, align 4, !dbg !4617
  %44 = getelementptr inbounds i8, i8* %43, i32 1, !dbg !4617
  store i8* %44, i8** %0, align 4, !dbg !4617
  %45 = load i8, i8* %42, align 1, !dbg !4618
  %46 = icmp eq i8 %45, 0, !dbg !4592
  br i1 %46, label %47, label %38, !dbg !4592, !llvm.loop !4619

47:                                               ; preds = %38, %11, %7
  ret void, !dbg !4621
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.smax.i32(i32, i32) #1

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc void @bl_itof(i8** nocapture noundef %0, i32 noundef %1) unnamed_addr #4 !dbg !49 {
  call void @llvm.dbg.value(metadata i8** %0, metadata !53, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %1, metadata !54, metadata !DIExpression()), !dbg !4622
  store i8 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @bl_itof.rev, i32 0, i32 20), align 1, !dbg !4623
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([21 x i8], [21 x i8]* @bl_itof.rev, i32 0, i32 20), metadata !55, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 0, metadata !57, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %1, metadata !54, metadata !DIExpression()), !dbg !4622
  br label %5, !dbg !4624

3:                                                ; preds = %5
  call void @llvm.dbg.value(metadata i8* %15, metadata !55, metadata !DIExpression()), !dbg !4622
  %4 = load i8*, i8** %0, align 4, !dbg !4626
  br label %18, !dbg !4628

5:                                                ; preds = %2, %5
  %6 = phi i32 [ 0, %2 ], [ %16, %5 ]
  %7 = phi i32 [ %1, %2 ], [ %10, %5 ]
  %8 = phi i8* [ getelementptr inbounds ([21 x i8], [21 x i8]* @bl_itof.rev, i32 0, i32 20), %2 ], [ %15, %5 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !57, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %7, metadata !54, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i8* %8, metadata !55, metadata !DIExpression()), !dbg !4622
  %9 = freeze i32 %7
  %10 = sdiv i32 %9, 10, !dbg !4629
  %11 = mul i32 %10, 10
  %12 = sub i32 %9, %11
  call void @llvm.dbg.value(metadata i32 %12, metadata !56, metadata !DIExpression()), !dbg !4622
  call void @llvm.dbg.value(metadata i32 %10, metadata !54, metadata !DIExpression()), !dbg !4622
  %13 = trunc i32 %12 to i8, !dbg !4632
  %14 = add nsw i8 %13, 48, !dbg !4632
  %15 = getelementptr inbounds i8, i8* %8, i32 -1, !dbg !4633
  call void @llvm.dbg.value(metadata i8* %15, metadata !55, metadata !DIExpression()), !dbg !4622
  store i8 %14, i8* %15, align 1, !dbg !4634
  %16 = add nuw nsw i32 %6, 1, !dbg !4635
  call void @llvm.dbg.value(metadata i32 %16, metadata !57, metadata !DIExpression()), !dbg !4622
  %17 = icmp eq i32 %16, 4, !dbg !4636
  br i1 %17, label %3, label %5, !dbg !4624, !llvm.loop !4637

18:                                               ; preds = %3, %18
  %19 = phi i8* [ %24, %18 ], [ %4, %3 ], !dbg !4626
  %20 = phi i8 [ %25, %18 ], [ %14, %3 ]
  %21 = phi i8* [ %22, %18 ], [ %15, %3 ]
  call void @llvm.dbg.value(metadata i8* %21, metadata !55, metadata !DIExpression()), !dbg !4622
  %22 = getelementptr inbounds i8, i8* %21, i32 1, !dbg !4639
  call void @llvm.dbg.value(metadata i8* %22, metadata !55, metadata !DIExpression()), !dbg !4622
  store i8 %20, i8* %19, align 1, !dbg !4640
  %23 = load i8*, i8** %0, align 4, !dbg !4641
  %24 = getelementptr inbounds i8, i8* %23, i32 1, !dbg !4641
  store i8* %24, i8** %0, align 4, !dbg !4641
  %25 = load i8, i8* %22, align 1, !dbg !4642
  %26 = icmp eq i8 %25, 0, !dbg !4628
  br i1 %26, label %27, label %18, !dbg !4628, !llvm.loop !4643

27:                                               ; preds = %18
  ret void, !dbg !4645
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_print(i32 noundef %0, i8* nocapture noundef readonly %1, ...) local_unnamed_addr #0 !dbg !4646 {
  %3 = alloca %struct.__va_list, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4650, metadata !DIExpression()), !dbg !4653
  call void @llvm.dbg.value(metadata i8* %1, metadata !4651, metadata !DIExpression()), !dbg !4653
  %4 = bitcast %struct.__va_list* %3 to i8*, !dbg !4654
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4654
  call void @llvm.dbg.declare(metadata %struct.__va_list* %3, metadata !4652, metadata !DIExpression()), !dbg !4655
  call void @llvm.va_start(i8* nonnull %4), !dbg !4656
  %5 = bitcast %struct.__va_list* %3 to i32*, !dbg !4657
  %6 = load i32, i32* %5, align 4, !dbg !4657
  %7 = insertvalue [1 x i32] poison, i32 %6, 0, !dbg !4657
  call void @bl_print_internal(i32 noundef %0, i8* noundef %1, [1 x i32] %7) #25, !dbg !4657
  call void @llvm.va_end(i8* nonnull %4), !dbg !4658
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4659
  ret void, !dbg !4659
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #10

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #10

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @bl_set_debug_level(i32 noundef %0) local_unnamed_addr #3 !dbg !4660 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4664, metadata !DIExpression()), !dbg !4665
  store i32 %0, i32* @debug_level, align 4, !dbg !4666
  ret void, !dbg !4667
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @bl_uart_put_byte(i8 noundef zeroext %0) local_unnamed_addr #11 !dbg !4668 {
  %2 = alloca i16, align 2
  call void @llvm.dbg.value(metadata i8 %0, metadata !4672, metadata !DIExpression()), !dbg !4674
  %3 = bitcast i16* %2 to i8*, !dbg !4675
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %3), !dbg !4675
  call void @llvm.dbg.declare(metadata i16* %2, metadata !4673, metadata !DIExpression()), !dbg !4676
  br label %4, !dbg !4677

4:                                                ; preds = %4, %1
  %5 = tail call fastcc zeroext i16 @bl_uart_read_reg(i32 noundef -1609629676) #25, !dbg !4678
  store volatile i16 %5, i16* %2, align 2, !dbg !4680
  %6 = load volatile i16, i16* %2, align 2, !dbg !4681
  %7 = and i16 %6, 32, !dbg !4683
  %8 = icmp eq i16 %7, 0, !dbg !4683
  br i1 %8, label %4, label %9, !dbg !4684, !llvm.loop !4685

9:                                                ; preds = %4
  %10 = zext i8 %0 to i16, !dbg !4687
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629696, i16 noundef zeroext %10) #25, !dbg !4689
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %3), !dbg !4690
  ret void, !dbg !4690
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc zeroext i16 @bl_uart_read_reg(i32 noundef %0) unnamed_addr #11 !dbg !4691 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %0, metadata !4695, metadata !DIExpression()), !dbg !4697
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2), !dbg !4698
  call void @llvm.dbg.declare(metadata i8* %2, metadata !4696, metadata !DIExpression()), !dbg !4699
  %3 = inttoptr i32 %0 to i8*, !dbg !4700
  %4 = load volatile i8, i8* %3, align 1, !dbg !4701
  store volatile i8 %4, i8* %2, align 1, !dbg !4702
  %5 = load volatile i8, i8* %2, align 1, !dbg !4703
  %6 = zext i8 %5 to i16, !dbg !4704
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2), !dbg !4705
  ret i16 %6, !dbg !4706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bl_uart_write_reg(i32 noundef %0, i16 noundef zeroext %1) unnamed_addr #12 !dbg !4707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4711, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i16 %1, metadata !4712, metadata !DIExpression()), !dbg !4713
  %3 = trunc i16 %1 to i8, !dbg !4714
  %4 = inttoptr i32 %0 to i8*, !dbg !4715
  store volatile i8 %3, i8* %4, align 1, !dbg !4716
  ret void, !dbg !4717
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @bl_uart_check_send_end() local_unnamed_addr #11 !dbg !4718 {
  call void @llvm.dbg.value(metadata i16 -1, metadata !4721, metadata !DIExpression()), !dbg !4722
  br label %1, !dbg !4723

1:                                                ; preds = %4, %0
  %2 = phi i16 [ -1, %0 ], [ %5, %4 ], !dbg !4722
  call void @llvm.dbg.value(metadata i16 %2, metadata !4721, metadata !DIExpression()), !dbg !4722
  call void @llvm.dbg.value(metadata i16 %2, metadata !4721, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4722
  %3 = icmp eq i16 %2, 0, !dbg !4723
  br i1 %3, label %9, label %4, !dbg !4723

4:                                                ; preds = %1
  %5 = add i16 %2, -1, !dbg !4724
  call void @llvm.dbg.value(metadata i16 %5, metadata !4721, metadata !DIExpression()), !dbg !4722
  %6 = tail call fastcc zeroext i16 @bl_uart_read_reg(i32 noundef -1609629676) #25, !dbg !4725
  call void @llvm.dbg.value(metadata i16 %6, metadata !4720, metadata !DIExpression()), !dbg !4722
  %7 = and i16 %6, 64, !dbg !4727
  %8 = icmp eq i16 %7, 0, !dbg !4727
  br i1 %8, label %1, label %9, !dbg !4729, !llvm.loop !4730

9:                                                ; preds = %4, %1
  ret void, !dbg !4732
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @bl_uart_init(i32 noundef %0) local_unnamed_addr #11 !dbg !4733 {
  %2 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4737, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.bl_uart_init.fraction_L_mapping, metadata !4745, metadata !DIExpression()), !dbg !4748
  %3 = bitcast [10 x i32]* %2 to i8*, !dbg !4749
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #23, !dbg !4749
  call void @llvm.dbg.declare(metadata [10 x i32]* %2, metadata !4746, metadata !DIExpression()), !dbg !4750
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %3, i8 0, i32 20, i1 false), !dbg !4750
  %4 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i32 0, i32 5, !dbg !4750
  store i32 1, i32* %4, align 4, !dbg !4750
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i32 0, i32 6, !dbg !4750
  store i32 1, i32* %5, align 4, !dbg !4750
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i32 0, i32 7, !dbg !4750
  store i32 1, i32* %6, align 4, !dbg !4750
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i32 0, i32 8, !dbg !4750
  store i32 1, i32* %7, align 4, !dbg !4750
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i32 0, i32 9, !dbg !4750
  store i32 1, i32* %8, align 4, !dbg !4750
  store volatile i32 255, i32* inttoptr (i32 -1576924152 to i32*), align 8, !dbg !4751
  store volatile i32 51, i32* inttoptr (i32 -1576924156 to i32*), align 4, !dbg !4752
  %9 = load volatile i32, i32* inttoptr (i32 -1576991964 to i32*), align 4, !dbg !4753
  %10 = or i32 %9, 32768, !dbg !4753
  store volatile i32 %10, i32* inttoptr (i32 -1576991964 to i32*), align 4, !dbg !4753
  %11 = udiv i32 %0, 29491200, !dbg !4754
  call void @llvm.dbg.value(metadata i32 %11, metadata !4738, metadata !DIExpression()), !dbg !4747
  %12 = mul i32 %0, 10, !dbg !4755
  %13 = udiv i32 %12, 29491200, !dbg !4756
  %14 = trunc i32 %13 to i8, !dbg !4757
  %15 = urem i8 %14, 10, !dbg !4757
  call void @llvm.dbg.value(metadata i8 %15, metadata !4739, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4747
  %16 = icmp ne i8 %15, 0, !dbg !4758
  %17 = icmp ult i32 %0, 29491200
  %18 = or i1 %17, %16, !dbg !4760
  %19 = zext i1 %18 to i32, !dbg !4760
  %20 = add nuw nsw i32 %11, %19, !dbg !4760
  call void @llvm.dbg.value(metadata i32 %20, metadata !4738, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i32 %20, metadata !4741, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i32 undef, metadata !4742, metadata !DIExpression()), !dbg !4747
  br label %21, !dbg !4761

21:                                               ; preds = %21, %1
  %22 = phi i32 [ %20, %1 ], [ %26, %21 ], !dbg !4747
  %23 = mul i32 %22, 115200, !dbg !4747
  %24 = udiv i32 %0, %23, !dbg !4747
  call void @llvm.dbg.value(metadata i32 %22, metadata !4741, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i32 %24, metadata !4742, metadata !DIExpression()), !dbg !4747
  %25 = icmp ugt i32 %24, 256, !dbg !4762
  %26 = add i32 %22, 1, !dbg !4763
  call void @llvm.dbg.value(metadata i32 %26, metadata !4741, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i32 undef, metadata !4742, metadata !DIExpression()), !dbg !4747
  br i1 %25, label %21, label %27, !dbg !4761, !llvm.loop !4765

27:                                               ; preds = %21
  %28 = udiv i32 %12, %23, !dbg !4767
  %29 = urem i32 %28, 10, !dbg !4768
  call void @llvm.dbg.value(metadata i32 %29, metadata !4740, metadata !DIExpression()), !dbg !4747
  call void @llvm.dbg.value(metadata i32 %24, metadata !4742, metadata !DIExpression(DW_OP_plus_uconst, 65535, DW_OP_stack_value)), !dbg !4747
  %30 = add nuw nsw i32 %24, 131070, !dbg !4769
  %31 = lshr i32 %30, 1, !dbg !4770
  call void @llvm.dbg.value(metadata i32 %30, metadata !4743, metadata !DIExpression(DW_OP_constu, 1, DW_OP_shr, DW_OP_stack_value)), !dbg !4747
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629660, i16 noundef zeroext 3) #25, !dbg !4771
  %32 = tail call fastcc zeroext i16 @bl_uart_read_reg(i32 noundef -1609629684) #25, !dbg !4772
  call void @llvm.dbg.value(metadata i16 %32, metadata !4744, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4747
  %33 = or i16 %32, 128, !dbg !4773
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629684, i16 noundef zeroext %33) #25, !dbg !4774
  %34 = trunc i32 %22 to i16, !dbg !4775
  %35 = and i16 %34, 255, !dbg !4775
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629696, i16 noundef zeroext %35) #25, !dbg !4776
  %36 = lshr i16 %34, 8, !dbg !4777
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629692, i16 noundef zeroext %36) #25, !dbg !4778
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629684, i16 noundef zeroext %32) #25, !dbg !4779
  %37 = trunc i32 %24 to i16, !dbg !4780
  %38 = add nsw i16 %37, -1, !dbg !4780
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629656, i16 noundef zeroext %38) #25, !dbg !4781
  %39 = trunc i32 %31 to i16, !dbg !4782
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629652, i16 noundef zeroext %39) #25, !dbg !4783
  %40 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.bl_uart_init.fraction_L_mapping, i32 0, i32 %29, !dbg !4784
  %41 = load i32, i32* %40, align 4, !dbg !4784
  %42 = trunc i32 %41 to i16, !dbg !4784
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629612, i16 noundef zeroext %42) #25, !dbg !4785
  %43 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i32 0, i32 %29, !dbg !4786
  %44 = load i32, i32* %43, align 4, !dbg !4786
  %45 = trunc i32 %44 to i16, !dbg !4786
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629608, i16 noundef zeroext %45) #25, !dbg !4787
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629684, i16 noundef zeroext 3) #25, !dbg !4788
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629688, i16 noundef zeroext 151) #25, !dbg !4789
  tail call fastcc void @bl_uart_write_reg(i32 noundef -1609629692, i16 noundef zeroext 0) #25, !dbg !4790
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #23, !dbg !4791
  ret void, !dbg !4791
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #13

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_clock_freq_monitor(i16 noundef zeroext %0, i16 noundef zeroext %1, i1 noundef zeroext %2) local_unnamed_addr #0 !dbg !4792 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !4796, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.value(metadata i16 %1, metadata !4797, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.value(metadata i1 %2, metadata !4798, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4803
  call void @llvm.dbg.value(metadata i32 0, metadata !4799, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.value(metadata i32 0, metadata !4800, metadata !DIExpression()), !dbg !4803
  %4 = shl i16 %1, 8, !dbg !4804
  %5 = or i16 %4, %0, !dbg !4805
  store volatile i16 %5, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !4806
  %6 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !4807
  %7 = zext i16 %6 to i32, !dbg !4807
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.bl_clock_freq_monitor, i32 0, i32 0), i32 noundef %7) #24, !dbg !4808
  store volatile i16 -12289, i16* inttoptr (i32 -1576795136 to i16*), align 1024, !dbg !4809
  %8 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 2) #24, !dbg !4810
  store volatile i16 -28673, i16* inttoptr (i32 -1576795136 to i16*), align 1024, !dbg !4811
  br i1 %2, label %9, label %10, !dbg !4812

9:                                                ; preds = %3
  store volatile i16 1, i16* inttoptr (i32 -1576795128 to i16*), align 8, !dbg !4813
  br label %10, !dbg !4816

10:                                               ; preds = %3, %9
  %11 = phi i16 [ 17, %9 ], [ 0, %3 ]
  store volatile i16 %11, i16* inttoptr (i32 -1576795128 to i16*), align 8, !dbg !4817
  store volatile i16 513, i16* inttoptr (i32 -1576795100 to i16*), align 4, !dbg !4818
  %12 = load volatile i32, i32* inttoptr (i32 -1576924112 to i32*), align 16, !dbg !4819
  call void @llvm.dbg.value(metadata i32 %12, metadata !4801, metadata !DIExpression(DW_OP_constu, 251658240, DW_OP_and, DW_OP_stack_value)), !dbg !4803
  %13 = load volatile i32, i32* inttoptr (i32 -1576927232 to i32*), align 131072, !dbg !4820
  call void @llvm.dbg.value(metadata i32 %13, metadata !4802, metadata !DIExpression(DW_OP_constu, 1073741824, DW_OP_and, DW_OP_stack_value)), !dbg !4803
  store volatile i32 14, i32* inttoptr (i32 -1576992200 to i32*), align 8, !dbg !4821
  store volatile i32 251658240, i32* inttoptr (i32 -1576924104 to i32*), align 8, !dbg !4822
  store volatile i32 117440512, i32* inttoptr (i32 -1576924108 to i32*), align 4, !dbg !4823
  store volatile i32 1073741824, i32* inttoptr (i32 -1576927228 to i32*), align 4, !dbg !4824
  %14 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !4825
  call void @llvm.dbg.value(metadata i16 %14, metadata !4800, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4803
  call void @llvm.dbg.value(metadata i16 undef, metadata !4800, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4803
  br label %15, !dbg !4826

15:                                               ; preds = %15, %10
  %16 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !4803
  call void @llvm.dbg.value(metadata i16 %16, metadata !4800, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4803
  %17 = icmp sgt i16 %16, -1, !dbg !4826
  br i1 %17, label %18, label %15, !dbg !4826, !llvm.loop !4827

18:                                               ; preds = %15
  %19 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 240) #24, !dbg !4829
  %20 = load volatile i16, i16* inttoptr (i32 -1576795124 to i16*), align 4, !dbg !4830
  %21 = zext i16 %20 to i32, !dbg !4830
  %22 = mul nuw nsw i32 %21, 26, !dbg !4831
  %23 = lshr i32 %22, 12, !dbg !4832
  call void @llvm.dbg.value(metadata i32 %23, metadata !4799, metadata !DIExpression()), !dbg !4803
  %24 = shl nuw nsw i32 %23, 2
  %25 = select i1 %2, i32 %24, i32 %23, !dbg !4833
  %26 = and i32 %13, 1073741824, !dbg !4834
  call void @llvm.dbg.value(metadata i32 %26, metadata !4802, metadata !DIExpression()), !dbg !4803
  %27 = and i32 %12, 251658240, !dbg !4835
  call void @llvm.dbg.value(metadata i32 %27, metadata !4801, metadata !DIExpression()), !dbg !4803
  call void @llvm.dbg.value(metadata i32 %25, metadata !4799, metadata !DIExpression()), !dbg !4803
  %28 = load volatile i16, i16* inttoptr (i32 -1576795128 to i16*), align 8, !dbg !4836
  %29 = zext i16 %28 to i32, !dbg !4836
  %30 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !4837
  %31 = zext i16 %30 to i32, !dbg !4837
  %32 = load volatile i16, i16* inttoptr (i32 -1576795124 to i16*), align 4, !dbg !4838
  %33 = zext i16 %32 to i32, !dbg !4838
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1.39, i32 0, i32 0), i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.bl_clock_freq_monitor, i32 0, i32 0), i32 noundef %29, i32 noundef %31, i32 noundef %33) #24, !dbg !4839
  store volatile i32 251658240, i32* inttoptr (i32 -1576924104 to i32*), align 8, !dbg !4840
  store volatile i32 1073741824, i32* inttoptr (i32 -1576927224 to i32*), align 8, !dbg !4841
  store volatile i32 %27, i32* inttoptr (i32 -1576924108 to i32*), align 4, !dbg !4842
  store volatile i32 %26, i32* inttoptr (i32 -1576927228 to i32*), align 4, !dbg !4843
  ret i32 %25, !dbg !4844
}

; Function Attrs: noinline nounwind optsize
define dso_local void @clock_set_pll_dcm_init() local_unnamed_addr #0 !dbg !4845 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %1 to i8*, !dbg !4863
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !4863
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4847, metadata !DIExpression()), !dbg !4864
  store volatile i32 0, i32* %1, align 4, !dbg !4864
  %7 = bitcast i32* %2 to i8*, !dbg !4863
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !4863
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4848, metadata !DIExpression()), !dbg !4865
  store volatile i32 0, i32* %2, align 4, !dbg !4865
  %8 = bitcast i32* %3 to i8*, !dbg !4863
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8), !dbg !4863
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4849, metadata !DIExpression()), !dbg !4866
  store volatile i32 0, i32* %3, align 4, !dbg !4866
  call void @llvm.dbg.value(metadata i32 0, metadata !4850, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 0, metadata !4851, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 280000, metadata !4852, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 0, metadata !4853, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 249600, metadata !4854, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 247500, metadata !4855, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 197017, metadata !4856, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 197017, metadata !4857, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 3932, metadata !4858, metadata !DIExpression()), !dbg !4867
  %9 = bitcast i32* %4 to i8*, !dbg !4868
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #23, !dbg !4868
  call void @llvm.dbg.value(metadata i32 0, metadata !4859, metadata !DIExpression()), !dbg !4867
  store i32 0, i32* %4, align 4, !dbg !4869
  %10 = bitcast i32* %5 to i8*, !dbg !4868
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !4868
  call void @llvm.dbg.value(metadata i32 0, metadata !4860, metadata !DIExpression()), !dbg !4867
  store i32 0, i32* %5, align 4, !dbg !4870
  call void @llvm.dbg.value(metadata i32 0, metadata !4861, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 0, metadata !4862, metadata !DIExpression()), !dbg !4867
  store volatile i32 16777215, i32* inttoptr (i32 -1576992384 to i32*), align 128, !dbg !4871
  store volatile i16 15, i16* inttoptr (i32 -1576793852 to i16*), align 4, !dbg !4872
  store volatile i16 10241, i16* inttoptr (i32 -1576793856 to i16*), align 256, !dbg !4873
  store volatile i16 15, i16* inttoptr (i32 -1576793820 to i16*), align 4, !dbg !4874
  store volatile i16 10241, i16* inttoptr (i32 -1576793824 to i16*), align 32, !dbg !4875
  store volatile i16 1, i16* inttoptr (i32 -1576796128 to i16*), align 32, !dbg !4876
  %11 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 3) #24, !dbg !4877
  store volatile i16 16384, i16* inttoptr (i32 -1576795836 to i16*), align 4, !dbg !4878
  store volatile i16 6145, i16* inttoptr (i32 -1576795840 to i16*), align 64, !dbg !4879
  %12 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 20) #24, !dbg !4880
  %13 = tail call i32 @bl_clock_freq_monitor(i16 noundef zeroext 11, i16 noundef zeroext 0, i1 noundef zeroext false) #25, !dbg !4881, !range !4882
  call void @llvm.dbg.value(metadata i32 %13, metadata !4862, metadata !DIExpression()), !dbg !4867
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2.42, i32 0, i32 0), i32 noundef %13) #24, !dbg !4883
  br label %14, !dbg !4884

14:                                               ; preds = %112, %0
  %15 = phi i32 [ 0, %0 ], [ %131, %112 ], !dbg !4867
  %16 = phi i32 [ 0, %0 ], [ %41, %112 ], !dbg !4867
  %17 = phi i32 [ 280000, %0 ], [ %39, %112 ], !dbg !4867
  %18 = phi i32 [ 197017, %0 ], [ %74, %112 ], !dbg !4867
  %19 = phi i32 [ 0, %0 ], [ %130, %112 ], !dbg !4867
  call void @llvm.dbg.value(metadata i32 %19, metadata !4861, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %18, metadata !4857, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %18, metadata !4856, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %17, metadata !4852, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %16, metadata !4851, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %15, metadata !4850, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32* %4, metadata !4859, metadata !DIExpression(DW_OP_deref)), !dbg !4867
  %20 = call zeroext i1 @bl_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %4) #24, !dbg !4885
  store volatile i16 0, i16* inttoptr (i32 -1576795128 to i16*), align 8, !dbg !4887
  store volatile i16 11, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !4888
  store volatile i16 -12289, i16* inttoptr (i32 -1576795136 to i16*), align 1024, !dbg !4889
  store volatile i16 -28673, i16* inttoptr (i32 -1576795136 to i16*), align 1024, !dbg !4890
  %21 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !4891
  %22 = zext i16 %21 to i32, !dbg !4891
  store volatile i32 %22, i32* %1, align 4, !dbg !4892
  %23 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !4893
  %24 = zext i16 %23 to i32, !dbg !4893
  store volatile i32 %24, i32* %1, align 4, !dbg !4894
  %25 = load volatile i32, i32* %1, align 4, !dbg !4895
  %26 = and i32 %25, 32768, !dbg !4896
  %27 = icmp eq i32 %26, 0, !dbg !4897
  br i1 %27, label %34, label %28, !dbg !4897

28:                                               ; preds = %14, %28
  %29 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !4898
  %30 = zext i16 %29 to i32, !dbg !4898
  store volatile i32 %30, i32* %1, align 4, !dbg !4900
  %31 = load volatile i32, i32* %1, align 4, !dbg !4895
  %32 = and i32 %31, 32768, !dbg !4896
  %33 = icmp eq i32 %32, 0, !dbg !4897
  br i1 %33, label %34, label %28, !dbg !4897, !llvm.loop !4901

34:                                               ; preds = %28, %14
  %35 = load volatile i16, i16* inttoptr (i32 -1576795124 to i16*), align 4, !dbg !4903
  %36 = zext i16 %35 to i32, !dbg !4903
  store volatile i32 %36, i32* %1, align 4, !dbg !4904
  %37 = load volatile i32, i32* %1, align 4, !dbg !4905
  %38 = mul i32 %37, 260000, !dbg !4906
  %39 = lshr i32 %38, 12, !dbg !4907
  call void @llvm.dbg.value(metadata i32 %39, metadata !4853, metadata !DIExpression()), !dbg !4867
  %40 = icmp eq i32 %15, 0, !dbg !4908
  %41 = select i1 %40, i32 %39, i32 %16, !dbg !4910
  call void @llvm.dbg.value(metadata i32 %41, metadata !4851, metadata !DIExpression()), !dbg !4867
  %42 = icmp ugt i32 %38, 1013759999, !dbg !4911
  br i1 %42, label %43, label %47, !dbg !4913

43:                                               ; preds = %34
  %44 = icmp ult i32 %38, 1022365696, !dbg !4914
  %45 = icmp ugt i32 %15, 24
  %46 = select i1 %44, i1 true, i1 %45, !dbg !4915
  br i1 %46, label %49, label %63, !dbg !4915

47:                                               ; preds = %34
  %48 = icmp ugt i32 %15, 24, !dbg !4916
  br i1 %48, label %49, label %57, !dbg !4917

49:                                               ; preds = %47, %43
  call void @llvm.dbg.value(metadata i32* %5, metadata !4860, metadata !DIExpression(DW_OP_deref)), !dbg !4867
  %50 = call zeroext i1 @bl_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %5) #24, !dbg !4918
  %51 = load i32, i32* %5, align 4, !dbg !4920
  call void @llvm.dbg.value(metadata i32 %51, metadata !4860, metadata !DIExpression()), !dbg !4867
  %52 = add i32 %51, %19, !dbg !4921
  %53 = load i32, i32* %4, align 4, !dbg !4922
  call void @llvm.dbg.value(metadata i32 %53, metadata !4859, metadata !DIExpression()), !dbg !4867
  %54 = sub i32 %52, %53, !dbg !4923
  call void @llvm.dbg.value(metadata i32 %54, metadata !4861, metadata !DIExpression()), !dbg !4867
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.43, i32 0, i32 0), i32 noundef %41, i32 noundef %39) #24, !dbg !4924
  %55 = icmp ugt i32 %15, 24, !dbg !4925
  br i1 %55, label %56, label %132, !dbg !4927

56:                                               ; preds = %49
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4.44, i32 0, i32 0)) #24, !dbg !4928
  br label %132, !dbg !4928

57:                                               ; preds = %47
  %58 = icmp ugt i32 %17, 249600, !dbg !4929
  br i1 %58, label %59, label %69, !dbg !4931

59:                                               ; preds = %57
  %60 = and i32 %18, 2147483647, !dbg !4932
  %61 = load volatile i32, i32* %1, align 4, !dbg !4933
  %62 = sub i32 %60, %61, !dbg !4934
  call void @llvm.dbg.value(metadata i32 %62, metadata !4857, metadata !DIExpression()), !dbg !4867
  br label %73, !dbg !4935

63:                                               ; preds = %43
  %64 = icmp ult i32 %17, 247500, !dbg !4936
  br i1 %64, label %65, label %69, !dbg !4938

65:                                               ; preds = %63
  %66 = and i32 %18, 2147483647, !dbg !4939
  %67 = load volatile i32, i32* %1, align 4, !dbg !4940
  %68 = add i32 %67, %66, !dbg !4941
  call void @llvm.dbg.value(metadata i32 %68, metadata !4857, metadata !DIExpression()), !dbg !4867
  br label %73, !dbg !4942

69:                                               ; preds = %57, %63
  %70 = mul i32 %18, 3932, !dbg !4943
  %71 = load volatile i32, i32* %1, align 4, !dbg !4944
  %72 = udiv i32 %70, %71, !dbg !4945
  call void @llvm.dbg.value(metadata i32 %72, metadata !4857, metadata !DIExpression()), !dbg !4867
  br label %73

73:                                               ; preds = %59, %69, %65
  %74 = phi i32 [ %62, %59 ], [ %68, %65 ], [ %72, %69 ], !dbg !4946
  %75 = sub i32 0, %74, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %74, metadata !4857, metadata !DIExpression()), !dbg !4867
  %76 = load volatile i32, i32* %1, align 4, !dbg !4949
  %77 = mul i32 %76, -10, !dbg !4950
  %78 = icmp eq i32 %77, %75, !dbg !4947
  %79 = load volatile i32, i32* %1, align 4, !dbg !4951
  br i1 %78, label %96, label %80, !dbg !4952

80:                                               ; preds = %73
  %81 = mul i32 %79, -10, !dbg !4953
  %82 = add i32 %81, %74, !dbg !4955
  %83 = load volatile i32, i32* %1, align 4, !dbg !4956
  %84 = udiv i32 %82, %83, !dbg !4957
  store volatile i32 %84, i32* %2, align 4, !dbg !4958
  %85 = load volatile i32, i32* %1, align 4, !dbg !4959
  %86 = mul i32 %85, -10, !dbg !4960
  %87 = add i32 %86, %74, !dbg !4961
  %88 = load volatile i32, i32* %2, align 4, !dbg !4962
  %89 = load volatile i32, i32* %1, align 4, !dbg !4963
  %90 = mul i32 %89, %88, !dbg !4964
  %91 = sub i32 %87, %90, !dbg !4965
  %92 = load volatile i32, i32* %1, align 4, !dbg !4966
  %93 = mul i32 %92, 6, !dbg !4967
  %94 = udiv i32 %93, 100, !dbg !4968
  %95 = udiv i32 %91, %94, !dbg !4969
  store volatile i32 %95, i32* %3, align 4, !dbg !4970
  br label %112, !dbg !4971

96:                                               ; preds = %73
  %97 = mul i32 %79, 10, !dbg !4972
  %98 = sub i32 %97, %74, !dbg !4974
  %99 = load volatile i32, i32* %1, align 4, !dbg !4975
  %100 = udiv i32 %98, %99, !dbg !4976
  store volatile i32 %100, i32* %2, align 4, !dbg !4977
  %101 = load volatile i32, i32* %1, align 4, !dbg !4978
  %102 = mul i32 %101, 10, !dbg !4979
  %103 = load volatile i32, i32* %2, align 4, !dbg !4980
  %104 = load volatile i32, i32* %1, align 4, !dbg !4981
  %105 = mul i32 %104, %103, !dbg !4982
  %106 = add i32 %74, %105, !dbg !4983
  %107 = sub i32 %102, %106, !dbg !4983
  %108 = load volatile i32, i32* %1, align 4, !dbg !4984
  %109 = mul i32 %108, 6, !dbg !4985
  %110 = udiv i32 %109, 100, !dbg !4986
  %111 = udiv i32 %107, %110, !dbg !4987
  store volatile i32 %111, i32* %3, align 4, !dbg !4988
  br label %112

112:                                              ; preds = %96, %80
  %113 = load volatile i16, i16* inttoptr (i32 -1576793856 to i16*), align 256, !dbg !4989
  %114 = and i16 %113, -16129, !dbg !4990
  %115 = load volatile i32, i32* %2, align 4, !dbg !4991
  %116 = trunc i32 %115 to i16, !dbg !4992
  %117 = shl i16 %116, 8, !dbg !4992
  %118 = or i16 %117, %114, !dbg !4992
  store volatile i16 %118, i16* inttoptr (i32 -1576793856 to i16*), align 256, !dbg !4993
  %119 = load volatile i16, i16* inttoptr (i32 -1576793856 to i16*), align 256, !dbg !4994
  %120 = and i16 %119, -241, !dbg !4995
  %121 = load volatile i32, i32* %3, align 4, !dbg !4996
  %122 = trunc i32 %121 to i16, !dbg !4997
  %123 = shl i16 %122, 4, !dbg !4997
  %124 = or i16 %123, %120, !dbg !4997
  store volatile i16 %124, i16* inttoptr (i32 -1576793856 to i16*), align 256, !dbg !4998
  %125 = call zeroext i1 @bl_gpt_delay_us(i32 noundef 6) #24, !dbg !4999
  call void @llvm.dbg.value(metadata i32* %5, metadata !4860, metadata !DIExpression(DW_OP_deref)), !dbg !4867
  %126 = call zeroext i1 @bl_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %5) #24, !dbg !5000
  %127 = load i32, i32* %5, align 4, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %127, metadata !4860, metadata !DIExpression()), !dbg !4867
  %128 = add i32 %127, %19, !dbg !5002
  %129 = load i32, i32* %4, align 4, !dbg !5003
  call void @llvm.dbg.value(metadata i32 %129, metadata !4859, metadata !DIExpression()), !dbg !4867
  %130 = sub i32 %128, %129, !dbg !5004
  call void @llvm.dbg.value(metadata i32 %130, metadata !4861, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %74, metadata !4856, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %39, metadata !4852, metadata !DIExpression()), !dbg !4867
  %131 = add nuw nsw i32 %15, 1, !dbg !5005
  call void @llvm.dbg.value(metadata i32 %131, metadata !4850, metadata !DIExpression()), !dbg !4867
  br label %14, !dbg !4884, !llvm.loop !5006

132:                                              ; preds = %49, %56
  %133 = call i32 @bl_clock_freq_monitor(i16 noundef zeroext 4, i16 noundef zeroext 3, i1 noundef zeroext true) #25, !dbg !5008, !range !4882
  call void @llvm.dbg.value(metadata i32 %133, metadata !4862, metadata !DIExpression()), !dbg !4867
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5.45, i32 0, i32 0), i32 noundef %133) #24, !dbg !5009
  %134 = call i32 @bl_clock_freq_monitor(i16 noundef zeroext 11, i16 noundef zeroext 0, i1 noundef zeroext false) #25, !dbg !5010, !range !4882
  call void @llvm.dbg.value(metadata i32 %134, metadata !4862, metadata !DIExpression()), !dbg !4867
  %135 = add nuw i32 %15, 1, !dbg !5011
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6.46, i32 0, i32 0), i32 noundef %134, i32 noundef %135, i32 noundef %54) #24, !dbg !5012
  %136 = call i32 @bl_clock_freq_monitor(i16 noundef zeroext 12, i16 noundef zeroext 0, i1 noundef zeroext true) #25, !dbg !5013, !range !4882
  call void @llvm.dbg.value(metadata i32 %136, metadata !4862, metadata !DIExpression()), !dbg !4867
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7.47, i32 0, i32 0), i32 noundef %136) #24, !dbg !5014
  call void @llvm.dbg.value(metadata i32 0, metadata !4850, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 0, metadata !4851, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 340000, metadata !4852, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 0, metadata !4853, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 293280, metadata !4854, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 280800, metadata !4855, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 565248, metadata !4856, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 565248, metadata !4857, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 11304, metadata !4858, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 0, metadata !4859, metadata !DIExpression()), !dbg !4867
  store i32 0, i32* %4, align 4, !dbg !5015
  call void @llvm.dbg.value(metadata i32 0, metadata !4860, metadata !DIExpression()), !dbg !4867
  store i32 0, i32* %5, align 4, !dbg !5016
  call void @llvm.dbg.value(metadata i32 0, metadata !4861, metadata !DIExpression()), !dbg !4867
  br label %137, !dbg !5017

137:                                              ; preds = %236, %132
  %138 = phi i32 [ 0, %132 ], [ %255, %236 ], !dbg !4867
  %139 = phi i32 [ 0, %132 ], [ %165, %236 ], !dbg !4867
  %140 = phi i32 [ 340000, %132 ], [ %163, %236 ], !dbg !4867
  %141 = phi i32 [ 565248, %132 ], [ %198, %236 ], !dbg !4867
  %142 = phi i32 [ 0, %132 ], [ %254, %236 ], !dbg !4867
  call void @llvm.dbg.value(metadata i32 %142, metadata !4861, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %141, metadata !4857, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %141, metadata !4856, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %140, metadata !4852, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %139, metadata !4851, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %138, metadata !4850, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32* %4, metadata !4859, metadata !DIExpression(DW_OP_deref)), !dbg !4867
  %143 = call zeroext i1 @bl_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %4) #24, !dbg !5018
  store volatile i16 1, i16* inttoptr (i32 -1576795128 to i16*), align 8, !dbg !5020
  store volatile i16 17, i16* inttoptr (i32 -1576795128 to i16*), align 8, !dbg !5021
  store volatile i16 12, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !5022
  store volatile i16 -12289, i16* inttoptr (i32 -1576795136 to i16*), align 1024, !dbg !5023
  store volatile i16 -28673, i16* inttoptr (i32 -1576795136 to i16*), align 1024, !dbg !5024
  %144 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !5025
  %145 = zext i16 %144 to i32, !dbg !5025
  store volatile i32 %145, i32* %1, align 4, !dbg !5026
  %146 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !5027
  %147 = zext i16 %146 to i32, !dbg !5027
  store volatile i32 %147, i32* %1, align 4, !dbg !5028
  %148 = load volatile i32, i32* %1, align 4, !dbg !5029
  %149 = and i32 %148, 32768, !dbg !5030
  %150 = icmp eq i32 %149, 0, !dbg !5031
  br i1 %150, label %157, label %151, !dbg !5031

151:                                              ; preds = %137, %151
  %152 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !5032
  %153 = zext i16 %152 to i32, !dbg !5032
  store volatile i32 %153, i32* %1, align 4, !dbg !5034
  %154 = load volatile i32, i32* %1, align 4, !dbg !5029
  %155 = and i32 %154, 32768, !dbg !5030
  %156 = icmp eq i32 %155, 0, !dbg !5031
  br i1 %156, label %157, label %151, !dbg !5031, !llvm.loop !5035

157:                                              ; preds = %151, %137
  %158 = load volatile i16, i16* inttoptr (i32 -1576795124 to i16*), align 4, !dbg !5037
  %159 = zext i16 %158 to i32, !dbg !5037
  store volatile i32 %159, i32* %1, align 4, !dbg !5038
  %160 = call zeroext i1 @bl_gpt_delay_us(i32 noundef 6) #24, !dbg !5039
  %161 = load volatile i32, i32* %1, align 4, !dbg !5040
  %162 = mul i32 %161, 104000, !dbg !5041
  %163 = lshr i32 %162, 12, !dbg !5042
  call void @llvm.dbg.value(metadata i32 %163, metadata !4853, metadata !DIExpression()), !dbg !4867
  %164 = icmp eq i32 %138, 0, !dbg !5043
  %165 = select i1 %164, i32 %163, i32 %139, !dbg !5045
  call void @llvm.dbg.value(metadata i32 %165, metadata !4851, metadata !DIExpression()), !dbg !4867
  %166 = icmp ugt i32 %162, 1150156799, !dbg !5046
  br i1 %166, label %167, label %171, !dbg !5048

167:                                              ; preds = %157
  %168 = icmp ult i32 %162, 1201278976, !dbg !5049
  %169 = icmp ugt i32 %138, 24
  %170 = select i1 %168, i1 true, i1 %169, !dbg !5050
  br i1 %170, label %173, label %185, !dbg !5050

171:                                              ; preds = %157
  %172 = icmp ugt i32 %138, 24, !dbg !5051
  br i1 %172, label %173, label %179, !dbg !5052

173:                                              ; preds = %171, %167
  call void @llvm.dbg.value(metadata i32* %5, metadata !4860, metadata !DIExpression(DW_OP_deref)), !dbg !4867
  %174 = call zeroext i1 @bl_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %5) #24, !dbg !5053
  %175 = load i32, i32* %5, align 4, !dbg !5055
  call void @llvm.dbg.value(metadata i32 %175, metadata !4860, metadata !DIExpression()), !dbg !4867
  %176 = load i32, i32* %4, align 4, !dbg !5056
  call void @llvm.dbg.value(metadata i32 %176, metadata !4859, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata !DIArgList(i32 %142, i32 %176, i32 %175), metadata !4861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 2, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4867
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8.48, i32 0, i32 0), i32 noundef %165, i32 noundef %163) #24, !dbg !5057
  %177 = icmp ugt i32 %138, 24, !dbg !5058
  br i1 %177, label %178, label %256, !dbg !5060

178:                                              ; preds = %173
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9.49, i32 0, i32 0)) #24, !dbg !5061
  br label %256, !dbg !5061

179:                                              ; preds = %171
  %180 = icmp ugt i32 %140, 293280, !dbg !5062
  br i1 %180, label %181, label %191, !dbg !5064

181:                                              ; preds = %179
  %182 = and i32 %141, 2147483647, !dbg !5065
  %183 = load volatile i32, i32* %1, align 4, !dbg !5066
  %184 = sub i32 %182, %183, !dbg !5067
  call void @llvm.dbg.value(metadata i32 %184, metadata !4857, metadata !DIExpression()), !dbg !4867
  br label %197, !dbg !5068

185:                                              ; preds = %167
  %186 = icmp ult i32 %140, 280800, !dbg !5069
  br i1 %186, label %187, label %191, !dbg !5071

187:                                              ; preds = %185
  %188 = and i32 %141, 2147483647, !dbg !5072
  %189 = load volatile i32, i32* %1, align 4, !dbg !5073
  %190 = add i32 %189, %188, !dbg !5074
  call void @llvm.dbg.value(metadata i32 %190, metadata !4857, metadata !DIExpression()), !dbg !4867
  br label %197, !dbg !5075

191:                                              ; preds = %179, %185
  %192 = udiv i32 %141, 100, !dbg !5076
  %193 = mul i32 %192, 11304, !dbg !5077
  %194 = load volatile i32, i32* %1, align 4, !dbg !5078
  %195 = udiv i32 %193, %194, !dbg !5079
  %196 = mul i32 %195, 100, !dbg !5080
  call void @llvm.dbg.value(metadata i32 %196, metadata !4857, metadata !DIExpression()), !dbg !4867
  br label %197

197:                                              ; preds = %181, %191, %187
  %198 = phi i32 [ %184, %181 ], [ %190, %187 ], [ %196, %191 ], !dbg !5081
  %199 = sub i32 0, %198, !dbg !5082
  call void @llvm.dbg.value(metadata i32 %198, metadata !4857, metadata !DIExpression()), !dbg !4867
  %200 = load volatile i32, i32* %1, align 4, !dbg !5084
  %201 = mul i32 %200, -10, !dbg !5085
  %202 = icmp eq i32 %201, %199, !dbg !5082
  %203 = load volatile i32, i32* %1, align 4, !dbg !5086
  br i1 %202, label %220, label %204, !dbg !5087

204:                                              ; preds = %197
  %205 = mul i32 %203, -10, !dbg !5088
  %206 = add i32 %205, %198, !dbg !5090
  %207 = load volatile i32, i32* %1, align 4, !dbg !5091
  %208 = udiv i32 %206, %207, !dbg !5092
  store volatile i32 %208, i32* %2, align 4, !dbg !5093
  %209 = load volatile i32, i32* %1, align 4, !dbg !5094
  %210 = mul i32 %209, -10, !dbg !5095
  %211 = add i32 %210, %198, !dbg !5096
  %212 = load volatile i32, i32* %2, align 4, !dbg !5097
  %213 = load volatile i32, i32* %1, align 4, !dbg !5098
  %214 = mul i32 %213, %212, !dbg !5099
  %215 = sub i32 %211, %214, !dbg !5100
  %216 = load volatile i32, i32* %1, align 4, !dbg !5101
  %217 = mul i32 %216, 6, !dbg !5102
  %218 = udiv i32 %217, 100, !dbg !5103
  %219 = udiv i32 %215, %218, !dbg !5104
  store volatile i32 %219, i32* %3, align 4, !dbg !5105
  br label %236, !dbg !5106

220:                                              ; preds = %197
  %221 = mul i32 %203, 10, !dbg !5107
  %222 = sub i32 %221, %198, !dbg !5109
  %223 = load volatile i32, i32* %1, align 4, !dbg !5110
  %224 = udiv i32 %222, %223, !dbg !5111
  store volatile i32 %224, i32* %2, align 4, !dbg !5112
  %225 = load volatile i32, i32* %1, align 4, !dbg !5113
  %226 = mul i32 %225, 10, !dbg !5114
  %227 = load volatile i32, i32* %2, align 4, !dbg !5115
  %228 = load volatile i32, i32* %1, align 4, !dbg !5116
  %229 = mul i32 %228, %227, !dbg !5117
  %230 = add i32 %198, %229, !dbg !5118
  %231 = sub i32 %226, %230, !dbg !5118
  %232 = load volatile i32, i32* %1, align 4, !dbg !5119
  %233 = mul i32 %232, 6, !dbg !5120
  %234 = udiv i32 %233, 100, !dbg !5121
  %235 = udiv i32 %231, %234, !dbg !5122
  store volatile i32 %235, i32* %3, align 4, !dbg !5123
  br label %236

236:                                              ; preds = %220, %204
  %237 = load volatile i16, i16* inttoptr (i32 -1576793824 to i16*), align 32, !dbg !5124
  %238 = and i16 %237, -16129, !dbg !5125
  %239 = load volatile i32, i32* %2, align 4, !dbg !5126
  %240 = trunc i32 %239 to i16, !dbg !5127
  %241 = shl i16 %240, 8, !dbg !5127
  %242 = or i16 %241, %238, !dbg !5127
  store volatile i16 %242, i16* inttoptr (i32 -1576793824 to i16*), align 32, !dbg !5128
  %243 = load volatile i16, i16* inttoptr (i32 -1576793824 to i16*), align 32, !dbg !5129
  %244 = and i16 %243, -241, !dbg !5130
  %245 = load volatile i32, i32* %3, align 4, !dbg !5131
  %246 = trunc i32 %245 to i16, !dbg !5132
  %247 = shl i16 %246, 4, !dbg !5132
  %248 = or i16 %247, %244, !dbg !5132
  store volatile i16 %248, i16* inttoptr (i32 -1576793824 to i16*), align 32, !dbg !5133
  %249 = call zeroext i1 @bl_gpt_delay_us(i32 noundef 6) #24, !dbg !5134
  call void @llvm.dbg.value(metadata i32* %5, metadata !4860, metadata !DIExpression(DW_OP_deref)), !dbg !4867
  %250 = call zeroext i1 @bl_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %5) #24, !dbg !5135
  %251 = load i32, i32* %5, align 4, !dbg !5136
  call void @llvm.dbg.value(metadata i32 %251, metadata !4860, metadata !DIExpression()), !dbg !4867
  %252 = add i32 %251, %142, !dbg !5137
  %253 = load i32, i32* %4, align 4, !dbg !5138
  call void @llvm.dbg.value(metadata i32 %253, metadata !4859, metadata !DIExpression()), !dbg !4867
  %254 = sub i32 %252, %253, !dbg !5139
  call void @llvm.dbg.value(metadata i32 %254, metadata !4861, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %198, metadata !4856, metadata !DIExpression()), !dbg !4867
  call void @llvm.dbg.value(metadata i32 %163, metadata !4852, metadata !DIExpression()), !dbg !4867
  %255 = add nuw nsw i32 %138, 1, !dbg !5140
  call void @llvm.dbg.value(metadata i32 %255, metadata !4850, metadata !DIExpression()), !dbg !4867
  br label %137, !dbg !5017, !llvm.loop !5141

256:                                              ; preds = %173, %178
  %257 = add i32 %175, %142, !dbg !5143
  call void @llvm.dbg.value(metadata !DIArgList(i32 %257, i32 %176), metadata !4861, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !4867
  %258 = sub i32 %257, %176, !dbg !5144
  call void @llvm.dbg.value(metadata i32 %258, metadata !4861, metadata !DIExpression()), !dbg !4867
  %259 = call i32 @bl_clock_freq_monitor(i16 noundef zeroext 12, i16 noundef zeroext 0, i1 noundef zeroext true) #25, !dbg !5145, !range !4882
  call void @llvm.dbg.value(metadata i32 %259, metadata !4862, metadata !DIExpression()), !dbg !4867
  %260 = add nuw i32 %138, 1, !dbg !5146
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10.50, i32 0, i32 0), i32 noundef %259, i32 noundef %260, i32 noundef %258) #24, !dbg !5147
  store volatile i32 16777215, i32* inttoptr (i32 -1576992384 to i32*), align 128, !dbg !5148
  store volatile i16 0, i16* inttoptr (i32 -1576796088 to i16*), align 8, !dbg !5149
  store volatile i16 0, i16* inttoptr (i32 -1576796084 to i16*), align 4, !dbg !5150
  store volatile i16 0, i16* inttoptr (i32 -1576794368 to i16*), align 256, !dbg !5151
  %261 = call zeroext i1 @bl_gpt_delay_us(i32 noundef 1) #24, !dbg !5152
  store volatile i16 0, i16* inttoptr (i32 -1576795900 to i16*), align 4, !dbg !5153
  store volatile i16 4612, i16* inttoptr (i32 -1576796080 to i16*), align 16, !dbg !5154
  store volatile i16 1, i16* inttoptr (i32 -1576794560 to i16*), align 64, !dbg !5155
  store volatile i16 6145, i16* inttoptr (i32 -1576795904 to i16*), align 256, !dbg !5156
  %262 = call zeroext i1 @bl_gpt_delay_us(i32 noundef 50) #24, !dbg !5157
  %263 = load volatile i32, i32* inttoptr (i32 -1576402608 to i32*), align 16, !dbg !5158
  %264 = or i32 %263, 29360642, !dbg !5158
  store volatile i32 %264, i32* inttoptr (i32 -1576402608 to i32*), align 16, !dbg !5158
  %265 = load volatile i32, i32* inttoptr (i32 -1576402604 to i32*), align 4, !dbg !5159
  %266 = or i32 %265, 29361667, !dbg !5159
  store volatile i32 %266, i32* inttoptr (i32 -1576402604 to i32*), align 4, !dbg !5159
  %267 = load volatile i32, i32* inttoptr (i32 -1576992492 to i32*), align 4, !dbg !5160
  %268 = and i32 %267, -65028, !dbg !5161
  %269 = or i32 %268, 1539, !dbg !5162
  store volatile i32 %269, i32* inttoptr (i32 -1576992492 to i32*), align 4, !dbg !5163
  %270 = load volatile i32, i32* inttoptr (i32 -1576992488 to i32*), align 8, !dbg !5164
  %271 = and i32 %270, -65028, !dbg !5165
  %272 = or i32 %271, 1539, !dbg !5166
  store volatile i32 %272, i32* inttoptr (i32 -1576992488 to i32*), align 8, !dbg !5167
  store volatile i16 1, i16* inttoptr (i32 -1575157420 to i16*), align 4, !dbg !5168
  store volatile i32 -1, i32* inttoptr (i32 -1576992512 to i32*), align 256, !dbg !5169
  store volatile i32 -2088763392, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !5170
  %273 = call zeroext i1 @bl_gpt_delay_us(i32 noundef 1) #24, !dbg !5171
  store volatile i32 268439551, i32* inttoptr (i32 -1576992500 to i32*), align 4, !dbg !5172
  store volatile i32 -1014726613, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !5173
  store volatile i16 3711, i16* inttoptr (i32 -1575157424 to i16*), align 16, !dbg !5174
  %274 = call zeroext i1 @bl_gpt_delay_us(i32 noundef 2) #24, !dbg !5175
  store volatile i32 268435456, i32* inttoptr (i32 -1576992500 to i32*), align 4, !dbg !5176
  store volatile i32 12, i32* inttoptr (i32 -1576992256 to i32*), align 512, !dbg !5177
  store volatile i32 3145728, i32* inttoptr (i32 -1576991984 to i32*), align 16, !dbg !5178
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !5179
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #23, !dbg !5179
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8), !dbg !5179
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !5179
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !5179
  ret void, !dbg !5179
}

; Function Attrs: noinline nounwind optsize
define dso_local void @clock_set_pll_init4flash_tool() local_unnamed_addr #0 !dbg !5180 {
  store volatile i16 0, i16* inttoptr (i32 -1576796088 to i16*), align 8, !dbg !5181
  store volatile i16 0, i16* inttoptr (i32 -1576796084 to i16*), align 4, !dbg !5182
  store volatile i16 0, i16* inttoptr (i32 -1576794368 to i16*), align 256, !dbg !5183
  %1 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 1) #24, !dbg !5184
  store volatile i16 1, i16* inttoptr (i32 -1576796128 to i16*), align 32, !dbg !5185
  store volatile i16 6145, i16* inttoptr (i32 -1576795840 to i16*), align 64, !dbg !5186
  store volatile i32 16777215, i32* inttoptr (i32 -1576992384 to i32*), align 128, !dbg !5187
  store volatile i16 4612, i16* inttoptr (i32 -1576796080 to i16*), align 16, !dbg !5188
  store volatile i16 1, i16* inttoptr (i32 -1576794560 to i16*), align 64, !dbg !5189
  store volatile i16 6145, i16* inttoptr (i32 -1576795904 to i16*), align 256, !dbg !5190
  %2 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 50) #24, !dbg !5191
  store volatile i16 1, i16* inttoptr (i32 -1575157420 to i16*), align 4, !dbg !5192
  store volatile i32 -1, i32* inttoptr (i32 -1576992512 to i32*), align 256, !dbg !5193
  store volatile i32 -2088763392, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !5194
  %3 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 1) #24, !dbg !5195
  store volatile i32 268439551, i32* inttoptr (i32 -1576992500 to i32*), align 4, !dbg !5196
  store volatile i32 -1014726613, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !5197
  store volatile i16 3711, i16* inttoptr (i32 -1575157424 to i16*), align 16, !dbg !5198
  %4 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 2) #24, !dbg !5199
  store volatile i32 268435456, i32* inttoptr (i32 -1576992500 to i32*), align 4, !dbg !5200
  ret void, !dbg !5201
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @bl_custom_ram_baseaddr() local_unnamed_addr #14 !dbg !5202 {
  ret i32 0, !dbg !5205
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @bl_custom_rom_baseaddr() local_unnamed_addr #14 !dbg !5206 {
  ret i32 134217728, !dbg !5207
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @bl_custom_cm4_start_address() local_unnamed_addr #14 !dbg !5208 {
  ret i32 134283264, !dbg !5209
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @bl_custom_fota_start_address() local_unnamed_addr #14 !dbg !5210 {
  ret i32 136708096, !dbg !5211
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @bl_custom_fota_size() local_unnamed_addr #14 !dbg !5212 {
  ret i32 1572864, !dbg !5213
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local zeroext i1 @bl_gpt_delay_us(i32 noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !5214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5218, metadata !DIExpression()), !dbg !5219
  %2 = load i8, i8* @us_init_falg, align 1, !dbg !5220, !range !5222
  %3 = icmp eq i8 %2, 1, !dbg !5223
  br i1 %3, label %6, label %4, !dbg !5224

4:                                                ; preds = %1
  %5 = load %struct.BL_GPT_REGISTER_T*, %struct.BL_GPT_REGISTER_T** @gpt_us, align 4, !dbg !5225
  tail call fastcc void @bl_gpt_start_free_run_timer(%struct.BL_GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #25, !dbg !5227
  store i8 1, i8* @us_init_falg, align 1, !dbg !5228
  br label %6, !dbg !5229

6:                                                ; preds = %4, %1
  %7 = load %struct.BL_GPT_REGISTER_T*, %struct.BL_GPT_REGISTER_T** @gpt_us, align 4, !dbg !5230
  tail call fastcc void @bl_gpt_delay_time(%struct.BL_GPT_REGISTER_T* noundef %7, i32 noundef %0) #25, !dbg !5231
  ret i1 true, !dbg !5232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @bl_gpt_start_free_run_timer(%struct.BL_GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) unnamed_addr #12 section ".tcm_code" !dbg !5233 {
  call void @llvm.dbg.value(metadata %struct.BL_GPT_REGISTER_T* %0, metadata !5237, metadata !DIExpression()), !dbg !5240
  call void @llvm.dbg.value(metadata i32 %1, metadata !5238, metadata !DIExpression()), !dbg !5240
  call void @llvm.dbg.value(metadata i32 %2, metadata !5239, metadata !DIExpression()), !dbg !5240
  %4 = load volatile i32, i32* inttoptr (i32 -1576991992 to i32*), align 8, !dbg !5241
  %5 = and i32 %4, 4, !dbg !5243
  %6 = icmp eq i32 %5, 0, !dbg !5244
  br i1 %6, label %8, label %7, !dbg !5245

7:                                                ; preds = %3
  store volatile i32 4, i32* inttoptr (i32 -1576991960 to i32*), align 8, !dbg !5246
  br label %8, !dbg !5248

8:                                                ; preds = %7, %3
  %9 = or i32 %2, %1, !dbg !5249
  %10 = getelementptr inbounds %struct.BL_GPT_REGISTER_T, %struct.BL_GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !5250
  store volatile i32 %9, i32* %10, align 4, !dbg !5251
  %11 = getelementptr inbounds %struct.BL_GPT_REGISTER_T, %struct.BL_GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !5252
  store volatile i32 49, i32* %11, align 4, !dbg !5253
  ret void, !dbg !5254
}

; Function Attrs: nofree noinline nounwind optsize
define internal fastcc void @bl_gpt_delay_time(%struct.BL_GPT_REGISTER_T* noundef %0, i32 noundef %1) unnamed_addr #11 section ".tcm_code" !dbg !5255 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.BL_GPT_REGISTER_T* %0, metadata !5259, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.value(metadata i32 %1, metadata !5260, metadata !DIExpression()), !dbg !5263
  %5 = bitcast i32* %3 to i8*, !dbg !5264
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !5264
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5261, metadata !DIExpression()), !dbg !5265
  store volatile i32 0, i32* %3, align 4, !dbg !5265
  %6 = bitcast i32* %4 to i8*, !dbg !5264
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !5264
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5262, metadata !DIExpression()), !dbg !5266
  store volatile i32 0, i32* %4, align 4, !dbg !5266
  %7 = getelementptr inbounds %struct.BL_GPT_REGISTER_T, %struct.BL_GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !5267
  %8 = load volatile i32, i32* %7, align 4, !dbg !5267
  store volatile i32 %8, i32* %4, align 4, !dbg !5268
  %9 = load volatile i32, i32* %4, align 4, !dbg !5269
  %10 = add i32 %1, 1, !dbg !5270
  %11 = add i32 %10, %9, !dbg !5271
  store volatile i32 %11, i32* %3, align 4, !dbg !5272
  %12 = load volatile i32, i32* %3, align 4, !dbg !5273
  %13 = load volatile i32, i32* %4, align 4, !dbg !5275
  %14 = icmp ugt i32 %12, %13, !dbg !5276
  br i1 %14, label %15, label %19, !dbg !5277

15:                                               ; preds = %2, %15
  %16 = load volatile i32, i32* %7, align 4, !dbg !5278
  %17 = load volatile i32, i32* %3, align 4, !dbg !5280
  %18 = icmp ult i32 %16, %17, !dbg !5281
  br i1 %18, label %15, label %27, !dbg !5282, !llvm.loop !5283

19:                                               ; preds = %2, %19
  %20 = load volatile i32, i32* %7, align 4, !dbg !5285
  %21 = load volatile i32, i32* %4, align 4, !dbg !5287
  %22 = icmp ult i32 %20, %21, !dbg !5288
  br i1 %22, label %23, label %19, !dbg !5289, !llvm.loop !5290

23:                                               ; preds = %19, %23
  %24 = load volatile i32, i32* %7, align 4, !dbg !5292
  %25 = load volatile i32, i32* %3, align 4, !dbg !5293
  %26 = icmp ult i32 %24, %25, !dbg !5294
  br i1 %26, label %23, label %27, !dbg !5295, !llvm.loop !5296

27:                                               ; preds = %23, %15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !5298
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !5298
  ret void, !dbg !5298
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local zeroext i1 @bl_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !5299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5301, metadata !DIExpression()), !dbg !5302
  %2 = load i8, i8* @ms_init_falg, align 1, !dbg !5303, !range !5222
  %3 = icmp eq i8 %2, 1, !dbg !5305
  br i1 %3, label %6, label %4, !dbg !5306

4:                                                ; preds = %1
  %5 = load %struct.BL_GPT_REGISTER_T*, %struct.BL_GPT_REGISTER_T** @gpt_ms, align 4, !dbg !5307
  tail call fastcc void @bl_gpt_start_free_run_timer(%struct.BL_GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #25, !dbg !5309
  store i8 1, i8* @ms_init_falg, align 1, !dbg !5310
  br label %6, !dbg !5311

6:                                                ; preds = %4, %1
  %7 = load %struct.BL_GPT_REGISTER_T*, %struct.BL_GPT_REGISTER_T** @gpt_ms, align 4, !dbg !5312
  %8 = shl i32 %0, 15, !dbg !5313
  %9 = udiv i32 %8, 1000, !dbg !5314
  tail call fastcc void @bl_gpt_delay_time(%struct.BL_GPT_REGISTER_T* noundef %7, i32 noundef %9) #25, !dbg !5315
  ret i1 true, !dbg !5316
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @bl_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #12 section ".tcm_code" !dbg !5317 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5322, metadata !DIExpression()), !dbg !5324
  call void @llvm.dbg.value(metadata i32* %1, metadata !5323, metadata !DIExpression()), !dbg !5324
  switch i32 %0, label %21 [
    i32 0, label %3
    i32 1, label %8
  ], !dbg !5325

3:                                                ; preds = %2
  %4 = load i8, i8* @ms_init_falg, align 1, !dbg !5326, !range !5222
  %5 = icmp eq i8 %4, 1, !dbg !5330
  br i1 %5, label %16, label %6, !dbg !5331

6:                                                ; preds = %3
  %7 = load %struct.BL_GPT_REGISTER_T*, %struct.BL_GPT_REGISTER_T** @gpt_ms, align 4, !dbg !5332
  tail call fastcc void @bl_gpt_start_free_run_timer(%struct.BL_GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #25, !dbg !5334
  br label %13, !dbg !5335

8:                                                ; preds = %2
  %9 = load i8, i8* @us_init_falg, align 1, !dbg !5336, !range !5222
  %10 = icmp eq i8 %9, 1, !dbg !5340
  br i1 %10, label %16, label %11, !dbg !5341

11:                                               ; preds = %8
  %12 = load %struct.BL_GPT_REGISTER_T*, %struct.BL_GPT_REGISTER_T** @gpt_us, align 4, !dbg !5342
  tail call fastcc void @bl_gpt_start_free_run_timer(%struct.BL_GPT_REGISTER_T* noundef %12, i32 noundef 0, i32 noundef 12) #25, !dbg !5344
  br label %13, !dbg !5345

13:                                               ; preds = %6, %11
  %14 = phi i8* [ @us_init_falg, %11 ], [ @ms_init_falg, %6 ]
  %15 = phi %struct.BL_GPT_REGISTER_T** [ @gpt_us, %11 ], [ @gpt_ms, %6 ]
  store i8 1, i8* %14, align 1, !dbg !5346
  br label %16, !dbg !5346

16:                                               ; preds = %13, %8, %3
  %17 = phi %struct.BL_GPT_REGISTER_T** [ @gpt_ms, %3 ], [ @gpt_us, %8 ], [ %15, %13 ]
  %18 = load %struct.BL_GPT_REGISTER_T*, %struct.BL_GPT_REGISTER_T** %17, align 4, !dbg !5346
  %19 = getelementptr inbounds %struct.BL_GPT_REGISTER_T, %struct.BL_GPT_REGISTER_T* %18, i32 0, i32 5, !dbg !5346
  %20 = load volatile i32, i32* %19, align 4, !dbg !5346
  store i32 %20, i32* %1, align 4, !dbg !5346
  br label %21, !dbg !5347

21:                                               ; preds = %2, %16
  %22 = phi i1 [ true, %16 ], [ false, %2 ], !dbg !5324
  ret i1 %22, !dbg !5348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bl_bonding_io_reg() local_unnamed_addr #12 !dbg !5349 {
  call void @llvm.dbg.value(metadata i32 15, metadata !5357, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata i32 0, metadata !5358, metadata !DIExpression()), !dbg !5359
  %1 = load volatile i32, i32* inttoptr (i32 -1576992220 to i32*), align 4, !dbg !5360
  call void @llvm.dbg.value(metadata i32 %1, metadata !5351, metadata !DIExpression()), !dbg !5359
  %2 = load volatile i32, i32* inttoptr (i32 -1576992204 to i32*), align 4, !dbg !5361
  call void @llvm.dbg.value(metadata i32 %2, metadata !5352, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata i32 %1, metadata !5353, metadata !DIExpression(DW_OP_constu, 10, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !5359
  call void @llvm.dbg.value(metadata i32 %1, metadata !5354, metadata !DIExpression(DW_OP_constu, 7, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !5359
  call void @llvm.dbg.value(metadata i32 %1, metadata !5355, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !5359
  call void @llvm.dbg.value(metadata i32 %1, metadata !5356, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !5359
  %3 = and i32 %1, 128, !dbg !5362
  %4 = icmp eq i32 %3, 0, !dbg !5362
  %5 = select i1 %4, i32 28672, i32 61440, !dbg !5364
  %6 = lshr exact i32 %3, 4, !dbg !5364
  %7 = xor i32 %6, 8, !dbg !5364
  call void @llvm.dbg.value(metadata i32 %7, metadata !5358, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata i32 %5, metadata !5357, metadata !DIExpression()), !dbg !5359
  %8 = and i32 %1, 1024, !dbg !5365
  %9 = icmp eq i32 %8, 0, !dbg !5365
  %10 = or i32 %7, 4, !dbg !5367
  %11 = select i1 %9, i32 %10, i32 %7, !dbg !5367
  call void @llvm.dbg.value(metadata i32 %11, metadata !5358, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata i32 undef, metadata !5357, metadata !DIExpression()), !dbg !5359
  %12 = and i32 %1, 8, !dbg !5368
  %13 = icmp eq i32 %12, 0, !dbg !5368
  %14 = or i32 %11, 2, !dbg !5370
  %15 = select i1 %13, i32 %14, i32 %11, !dbg !5370
  call void @llvm.dbg.value(metadata i32 %15, metadata !5358, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata i32 undef, metadata !5357, metadata !DIExpression()), !dbg !5359
  %16 = and i32 %1, 4, !dbg !5371
  %17 = icmp eq i32 %16, 0, !dbg !5371
  %18 = lshr exact i32 %16, 2, !dbg !5373
  %19 = xor i32 %18, 1, !dbg !5373
  %20 = or i32 %15, %19, !dbg !5373
  call void @llvm.dbg.value(metadata i32 %20, metadata !5358, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.value(metadata i32 undef, metadata !5357, metadata !DIExpression()), !dbg !5359
  %21 = and i32 %5, 45056, !dbg !5374
  %22 = select i1 %9, i32 %21, i32 %5, !dbg !5374
  %23 = and i32 %22, 53248, !dbg !5374
  %24 = select i1 %13, i32 %23, i32 %22, !dbg !5374
  %25 = and i32 %24, 57344, !dbg !5374
  %26 = select i1 %17, i32 %25, i32 %24, !dbg !5374
  %27 = shl i32 %20, 8, !dbg !5375
  %28 = and i32 %2, 1, !dbg !5376
  %29 = or i32 %27, %28, !dbg !5377
  %30 = or i32 %29, %26, !dbg !5378
  store volatile i32 %30, i32* inttoptr (i32 -1576992204 to i32*), align 4, !dbg !5379
  ret void, !dbg !5380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @bl_d2d_io_pull_down() local_unnamed_addr #12 !dbg !5381 {
  store volatile i32 17, i32* inttoptr (i32 -1576795296 to i32*), align 32, !dbg !5382
  ret void, !dbg !5383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @f32k_measure_clock(i16 noundef zeroext %0, i16 noundef zeroext %1, i16 noundef zeroext %2) local_unnamed_addr #0 !dbg !5384 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !5388, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i16 %1, metadata !5389, metadata !DIExpression()), !dbg !5392
  call void @llvm.dbg.value(metadata i16 %2, metadata !5390, metadata !DIExpression()), !dbg !5392
  %4 = load volatile i16, i16* inttoptr (i32 -1576795136 to i16*), align 1024, !dbg !5393
  %5 = or i16 %4, -16384, !dbg !5393
  store volatile i16 %5, i16* inttoptr (i32 -1576795136 to i16*), align 1024, !dbg !5393
  %6 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 1000) #24, !dbg !5394
  br label %7, !dbg !5395

7:                                                ; preds = %7, %3
  %8 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !5396
  %9 = icmp sgt i16 %8, -1, !dbg !5397
  br i1 %9, label %10, label %7, !dbg !5395, !llvm.loop !5398

10:                                               ; preds = %7
  store volatile i16 0, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !5400
  %11 = shl i16 %0, 8, !dbg !5401
  %12 = or i16 %11, %1, !dbg !5402
  store volatile i16 %12, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !5403
  store volatile i16 0, i16* inttoptr (i32 -1576795128 to i16*), align 8, !dbg !5404
  %13 = add i16 %2, 32767, !dbg !5405
  %14 = or i16 %13, -32768, !dbg !5406
  store volatile i16 %14, i16* inttoptr (i32 -1576795136 to i16*), align 1024, !dbg !5407
  %15 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 1000) #24, !dbg !5408
  br label %16, !dbg !5409

16:                                               ; preds = %16, %10
  %17 = load volatile i16, i16* inttoptr (i32 -1576795132 to i16*), align 4, !dbg !5410
  %18 = icmp sgt i16 %17, -1, !dbg !5411
  br i1 %18, label %19, label %16, !dbg !5409, !llvm.loop !5412

19:                                               ; preds = %16
  %20 = load volatile i16, i16* inttoptr (i32 -1576795120 to i16*), align 16, !dbg !5414
  %21 = zext i16 %20 to i32, !dbg !5415
  %22 = shl nuw i32 %21, 16, !dbg !5416
  %23 = load volatile i16, i16* inttoptr (i32 -1576795124 to i16*), align 4, !dbg !5417
  %24 = zext i16 %23 to i32, !dbg !5418
  %25 = or i32 %22, %24, !dbg !5419
  call void @llvm.dbg.value(metadata i32 %25, metadata !5391, metadata !DIExpression()), !dbg !5392
  ret i32 %25, !dbg !5420
}

; Function Attrs: noinline nounwind optsize
define dso_local void @set_capid(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5421 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5425, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i32 %1, metadata !5426, metadata !DIExpression()), !dbg !5430
  %3 = load volatile i32, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5431
  call void @llvm.dbg.value(metadata i32 %3, metadata !5427, metadata !DIExpression()), !dbg !5430
  %4 = sub i32 %0, %1, !dbg !5432
  call void @llvm.dbg.value(metadata i32 %4, metadata !5428, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i32 %1, metadata !5429, metadata !DIExpression()), !dbg !5430
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.61, i32 0, i32 0), i32 noundef %1) #24, !dbg !5433
  %5 = icmp sgt i32 %4, 0, !dbg !5434
  br i1 %5, label %6, label %21, !dbg !5436

6:                                                ; preds = %2
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.62, i32 0, i32 0), i32 noundef %1, i32 noundef %0) #24, !dbg !5437
  call void @llvm.dbg.value(metadata i32 %1, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i32 %4, metadata !5428, metadata !DIExpression()), !dbg !5430
  br label %7, !dbg !5439

7:                                                ; preds = %6, %7
  %8 = phi i32 [ %1, %6 ], [ %13, %7 ]
  %9 = phi i32 [ %4, %6 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i32 %9, metadata !5428, metadata !DIExpression()), !dbg !5430
  %10 = add nsw i32 %9, -4, !dbg !5440
  call void @llvm.dbg.value(metadata i32 %10, metadata !5428, metadata !DIExpression()), !dbg !5430
  %11 = add nsw i32 %8, 4, !dbg !5442
  call void @llvm.dbg.value(metadata i32 %11, metadata !5429, metadata !DIExpression()), !dbg !5430
  %12 = icmp ugt i32 %11, %0, !dbg !5443
  %13 = select i1 %12, i32 %0, i32 %11, !dbg !5445
  call void @llvm.dbg.value(metadata i32 %13, metadata !5429, metadata !DIExpression()), !dbg !5430
  %14 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 4) #24, !dbg !5446
  %15 = load volatile i32, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5447
  %16 = and i32 %15, -2045, !dbg !5448
  call void @llvm.dbg.value(metadata i32 %16, metadata !5427, metadata !DIExpression()), !dbg !5430
  %17 = shl i32 %13, 2, !dbg !5449
  %18 = or i32 %16, %17, !dbg !5450
  store volatile i32 %18, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5451
  %19 = load volatile i32, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5452
  call void @llvm.dbg.value(metadata i32 %19, metadata !5427, metadata !DIExpression()), !dbg !5430
  %20 = icmp ugt i32 %9, 4, !dbg !5453
  br i1 %20, label %7, label %39, !dbg !5439, !llvm.loop !5454

21:                                               ; preds = %2
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2.63, i32 0, i32 0), i32 noundef %1, i32 noundef %0) #24, !dbg !5456
  call void @llvm.dbg.value(metadata i32 %1, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i32 %4, metadata !5428, metadata !DIExpression()), !dbg !5430
  %22 = icmp slt i32 %4, 0, !dbg !5458
  br i1 %22, label %23, label %39, !dbg !5459

23:                                               ; preds = %21, %23
  %24 = phi i32 [ %31, %23 ], [ %1, %21 ]
  %25 = phi i32 [ %26, %23 ], [ %4, %21 ]
  call void @llvm.dbg.value(metadata i32 %24, metadata !5429, metadata !DIExpression()), !dbg !5430
  call void @llvm.dbg.value(metadata i32 %25, metadata !5428, metadata !DIExpression()), !dbg !5430
  %26 = add nsw i32 %25, 4, !dbg !5460
  call void @llvm.dbg.value(metadata i32 %26, metadata !5428, metadata !DIExpression()), !dbg !5430
  %27 = add nsw i32 %24, -4, !dbg !5462
  call void @llvm.dbg.value(metadata i32 %27, metadata !5429, metadata !DIExpression()), !dbg !5430
  %28 = icmp ult i32 %27, %0, !dbg !5463
  %29 = select i1 %28, i32 %0, i32 %27, !dbg !5465
  call void @llvm.dbg.value(metadata i32 %29, metadata !5429, metadata !DIExpression()), !dbg !5430
  %30 = icmp slt i32 %29, 0, !dbg !5466
  %31 = select i1 %30, i32 %0, i32 %29, !dbg !5468
  call void @llvm.dbg.value(metadata i32 %31, metadata !5429, metadata !DIExpression()), !dbg !5430
  %32 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 4) #24, !dbg !5469
  %33 = load volatile i32, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5470
  %34 = and i32 %33, -2045, !dbg !5471
  call void @llvm.dbg.value(metadata i32 %34, metadata !5427, metadata !DIExpression()), !dbg !5430
  %35 = shl i32 %31, 2, !dbg !5472
  %36 = or i32 %34, %35, !dbg !5473
  store volatile i32 %36, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5474
  %37 = load volatile i32, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5475
  call void @llvm.dbg.value(metadata i32 %37, metadata !5427, metadata !DIExpression()), !dbg !5430
  %38 = icmp ult i32 %25, -4, !dbg !5458
  br i1 %38, label %23, label %39, !dbg !5459, !llvm.loop !5476

39:                                               ; preds = %23, %7, %21
  %40 = load volatile i32, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5478
  call void @llvm.dbg.value(metadata i32 %40, metadata !5427, metadata !DIExpression()), !dbg !5430
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3.64, i32 0, i32 0), i32 noundef %40) #24, !dbg !5479
  store i32 %0, i32* @g_current_capid, align 4, !dbg !5480
  ret void, !dbg !5481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @write_efuse_capid(i32 noundef %0) local_unnamed_addr #0 !dbg !5482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5484, metadata !DIExpression()), !dbg !5491
  %2 = load volatile i32, i32* inttoptr (i32 -1576664704 to i32*), align 128, !dbg !5492
  call void @llvm.dbg.value(metadata i32 %2, metadata !5485, metadata !DIExpression()), !dbg !5491
  %3 = and i32 %2, 511, !dbg !5493
  call void @llvm.dbg.value(metadata i32 %3, metadata !5486, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.value(metadata i32 %2, metadata !5487, metadata !DIExpression(DW_OP_constu, 261632, DW_OP_and, DW_OP_stack_value)), !dbg !5491
  call void @llvm.dbg.value(metadata i32 %2, metadata !5488, metadata !DIExpression(DW_OP_constu, 133955584, DW_OP_and, DW_OP_stack_value)), !dbg !5491
  call void @llvm.dbg.value(metadata i32 0, metadata !5489, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.value(metadata i32 0, metadata !5490, metadata !DIExpression()), !dbg !5491
  %4 = lshr i32 %2, 9, !dbg !5494
  %5 = and i32 %4, 511, !dbg !5494
  call void @llvm.dbg.value(metadata i32 %5, metadata !5487, metadata !DIExpression()), !dbg !5491
  %6 = lshr i32 %2, 18, !dbg !5495
  %7 = and i32 %6, 511, !dbg !5495
  call void @llvm.dbg.value(metadata i32 %7, metadata !5488, metadata !DIExpression()), !dbg !5491
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.65, i32 0, i32 0), i32 noundef %2) #24, !dbg !5496
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5.66, i32 0, i32 0), i32 noundef %3) #24, !dbg !5497
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6.67, i32 0, i32 0), i32 noundef %5) #24, !dbg !5498
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7.68, i32 0, i32 0), i32 noundef %7) #24, !dbg !5499
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8.69, i32 0, i32 0), i32 noundef %0) #24, !dbg !5500
  ret void, !dbg !5501
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @read_efuse_capid() local_unnamed_addr #0 !dbg !5502 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576664704 to i32*), align 128, !dbg !5508
  call void @llvm.dbg.value(metadata i32 %1, metadata !5504, metadata !DIExpression()), !dbg !5509
  %2 = and i32 %1, 511, !dbg !5510
  call void @llvm.dbg.value(metadata i32 %2, metadata !5505, metadata !DIExpression()), !dbg !5509
  call void @llvm.dbg.value(metadata i32 %1, metadata !5506, metadata !DIExpression(DW_OP_constu, 261632, DW_OP_and, DW_OP_stack_value)), !dbg !5509
  call void @llvm.dbg.value(metadata i32 %1, metadata !5507, metadata !DIExpression(DW_OP_constu, 133955584, DW_OP_and, DW_OP_stack_value)), !dbg !5509
  %3 = lshr i32 %1, 9, !dbg !5511
  %4 = and i32 %3, 511, !dbg !5511
  call void @llvm.dbg.value(metadata i32 %4, metadata !5506, metadata !DIExpression()), !dbg !5509
  %5 = lshr i32 %1, 18, !dbg !5512
  %6 = and i32 %5, 511, !dbg !5512
  call void @llvm.dbg.value(metadata i32 %6, metadata !5507, metadata !DIExpression()), !dbg !5509
  %7 = icmp eq i32 %6, 0, !dbg !5513
  br i1 %7, label %9, label %8, !dbg !5515

8:                                                ; preds = %0
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9.70, i32 0, i32 0), i32 noundef %6) #24, !dbg !5516
  br label %16, !dbg !5518

9:                                                ; preds = %0
  %10 = icmp eq i32 %4, 0, !dbg !5519
  br i1 %10, label %12, label %11, !dbg !5521

11:                                               ; preds = %9
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10.71, i32 0, i32 0), i32 noundef %4) #24, !dbg !5522
  br label %16, !dbg !5524

12:                                               ; preds = %9
  %13 = icmp eq i32 %2, 0, !dbg !5525
  br i1 %13, label %15, label %14, !dbg !5527

14:                                               ; preds = %12
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11.72, i32 0, i32 0), i32 noundef %2) #24, !dbg !5528
  br label %16, !dbg !5530

15:                                               ; preds = %12
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12.73, i32 0, i32 0)) #24, !dbg !5531
  br label %16, !dbg !5533

16:                                               ; preds = %15, %14, %11, %8
  %17 = phi i32 [ %6, %8 ], [ %4, %11 ], [ %2, %14 ], [ 408, %15 ], !dbg !5534
  ret i32 %17, !dbg !5535
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local void @bl_dcxo_factory_calibration() local_unnamed_addr #15 !dbg !5536 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5538, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.value(metadata i32 8, metadata !5539, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.value(metadata i32 8, metadata !5539, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.value(metadata i32 undef, metadata !5540, metadata !DIExpression()), !dbg !5541
  br label %1, !dbg !5542

1:                                                ; preds = %0, %10
  %2 = phi i32 [ 8, %0 ], [ %14, %10 ]
  %3 = phi i32 [ 0, %0 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5539, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.value(metadata i32 %3, metadata !5538, metadata !DIExpression()), !dbg !5541
  %4 = shl nuw i32 1, %2, !dbg !5544
  %5 = add i32 %4, %3, !dbg !5547
  call void @llvm.dbg.value(metadata i32 %5, metadata !5538, metadata !DIExpression()), !dbg !5541
  %6 = load i32, i32* @g_current_capid, align 4, !dbg !5548
  tail call void @set_capid(i32 noundef %5, i32 noundef %6) #25, !dbg !5549
  %7 = tail call i32 @f32k_measure_clock(i16 noundef zeroext 6, i16 noundef zeroext 7, i16 noundef zeroext 1200) #25, !dbg !5550
  call void @llvm.dbg.value(metadata i32 %7, metadata !5540, metadata !DIExpression()), !dbg !5541
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13.74, i32 0, i32 0), i32 noundef %5, i32 noundef %5, i32 noundef %7) #24, !dbg !5551
  %8 = icmp eq i32 %7, 952148, !dbg !5552
  br i1 %8, label %9, label %10, !dbg !5554

9:                                                ; preds = %1
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14.75, i32 0, i32 0)) #24, !dbg !5555
  br label %16, !dbg !5557

10:                                               ; preds = %1
  %11 = icmp ugt i32 %7, 952148, !dbg !5558
  %12 = select i1 %11, i32 %3, i32 %5, !dbg !5560
  call void @llvm.dbg.value(metadata i32 %12, metadata !5538, metadata !DIExpression()), !dbg !5541
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15.76, i32 0, i32 0), i32 noundef %12, i32 noundef %12) #24, !dbg !5561
  %13 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 1000) #24, !dbg !5562
  %14 = add nsw i32 %2, -1, !dbg !5563
  call void @llvm.dbg.value(metadata i32 %7, metadata !5540, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.value(metadata i32 %14, metadata !5539, metadata !DIExpression()), !dbg !5541
  %15 = icmp eq i32 %2, 0, !dbg !5564
  br i1 %15, label %16, label %1, !dbg !5542, !llvm.loop !5565

16:                                               ; preds = %10, %9
  %17 = phi i32 [ %5, %9 ], [ %12, %10 ], !dbg !5541
  call void @llvm.dbg.value(metadata i32 %7, metadata !5540, metadata !DIExpression()), !dbg !5541
  call void @llvm.dbg.value(metadata i32 %17, metadata !5538, metadata !DIExpression()), !dbg !5541
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16.77, i32 0, i32 0), i32 noundef %17, i32 noundef %7) #24, !dbg !5567
  %18 = icmp eq i32 %17, 0, !dbg !5568
  br i1 %18, label %19, label %20, !dbg !5570

19:                                               ; preds = %16
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17.78, i32 0, i32 0)) #24, !dbg !5571
  call void @llvm.dbg.value(metadata i32 1, metadata !5538, metadata !DIExpression()), !dbg !5541
  br label %20, !dbg !5573

20:                                               ; preds = %19, %16
  %21 = phi i32 [ 1, %19 ], [ %17, %16 ], !dbg !5541
  call void @llvm.dbg.value(metadata i32 %21, metadata !5538, metadata !DIExpression()), !dbg !5541
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([98 x i8], [98 x i8]* @.str.18.79, i32 0, i32 0), i32 noundef %21) #24, !dbg !5574
  br label %22, !dbg !5575

22:                                               ; preds = %22, %20
  br label %22, !dbg !5575, !llvm.loop !5576
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_dcxo_load_calibration() local_unnamed_addr #0 !dbg !5578 {
  %1 = load volatile i32, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5582
  call void @llvm.dbg.value(metadata i32 %1, metadata !5580, metadata !DIExpression()), !dbg !5583
  call void @llvm.dbg.value(metadata i32 408, metadata !5581, metadata !DIExpression()), !dbg !5583
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.19.82, i32 0, i32 0), i32 noundef %1, i32 noundef 408) #24, !dbg !5584
  %2 = load i32, i32* @g_current_capid, align 4, !dbg !5585
  tail call void @set_capid(i32 noundef 408, i32 noundef %2) #25, !dbg !5586
  ret void, !dbg !5587
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_dcxo_capid_init() local_unnamed_addr #0 !dbg !5588 {
  %1 = load volatile i32, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5592
  call void @llvm.dbg.value(metadata i32 %1, metadata !5590, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.value(metadata i32 431, metadata !5591, metadata !DIExpression()), !dbg !5593
  %2 = or i32 %1, 1, !dbg !5594
  store volatile i32 %2, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5595
  %3 = load volatile i32, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5596
  %4 = and i32 %3, -2045, !dbg !5597
  call void @llvm.dbg.value(metadata i32 %4, metadata !5590, metadata !DIExpression()), !dbg !5593
  %5 = or i32 %4, 1724, !dbg !5598
  store volatile i32 %5, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5599
  %6 = load volatile i32, i32* inttoptr (i32 -1575944064 to i32*), align 128, !dbg !5600
  call void @llvm.dbg.value(metadata i32 %6, metadata !5590, metadata !DIExpression()), !dbg !5593
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21, i32 0, i32 0), i32 noundef %6) #24, !dbg !5601
  store i32 431, i32* @g_current_capid, align 4, !dbg !5602
  ret void, !dbg !5603
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_pmic_init() local_unnamed_addr #0 !dbg !5604 {
  %1 = alloca %struct.pmic_i2c_config_t, align 4
  %2 = alloca i32, align 4
  %3 = bitcast %struct.pmic_i2c_config_t* %1 to i8*, !dbg !5612
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5612
  call void @llvm.dbg.declare(metadata %struct.pmic_i2c_config_t* %1, metadata !5606, metadata !DIExpression()), !dbg !5613
  %4 = bitcast i32* %2 to i8*, !dbg !5614
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !5614
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5611, metadata !DIExpression()), !dbg !5615
  store volatile i32 0, i32* %2, align 4, !dbg !5615
  %5 = getelementptr inbounds %struct.pmic_i2c_config_t, %struct.pmic_i2c_config_t* %1, i32 0, i32 0, !dbg !5616
  store i32 100, i32* %5, align 4, !dbg !5617
  %6 = call i32 @pmic_i2c_init(i32 noundef 0, %struct.pmic_i2c_config_t* noundef nonnull %1) #24, !dbg !5618
  %7 = call i32 @bl_mt6385_init() #24, !dbg !5619
  %8 = icmp eq i32 %7, 0, !dbg !5621
  br i1 %8, label %9, label %10, !dbg !5622

9:                                                ; preds = %0
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.87, i32 0, i32 0)) #24, !dbg !5623
  store void (i8)* @bl_mt6385_vusb_vr_control, void (i8)** @bl_pmic_vusb_vr_control, align 4, !dbg !5625
  store void (i8)* @bl_mt6385_vmc_vr_control, void (i8)** @bl_pmic_vmc_vr_control, align 4, !dbg !5626
  br label %21, !dbg !5627

10:                                               ; preds = %0
  %11 = call i32 @bl_max14745_init() #24, !dbg !5628
  %12 = icmp eq i32 %11, 0, !dbg !5630
  br i1 %12, label %13, label %20, !dbg !5631

13:                                               ; preds = %10
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.88, i32 0, i32 0)) #24, !dbg !5632
  store void (i8)* @bl_max14745_vusb_vr_control, void (i8)** @bl_pmic_vusb_vr_control, align 4, !dbg !5634
  store void (i8)* @bl_max14745_vmc_vr_control, void (i8)** @bl_pmic_vmc_vr_control, align 4, !dbg !5635
  %14 = load volatile i32, i32* inttoptr (i32 -1576730612 to i32*), align 4, !dbg !5636
  store volatile i32 %14, i32* %2, align 4, !dbg !5637
  %15 = load volatile i32, i32* %2, align 4, !dbg !5638
  %16 = icmp eq i32 %15, 0, !dbg !5640
  br i1 %16, label %19, label %17, !dbg !5641

17:                                               ; preds = %13
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2.89, i32 0, i32 0)) #24, !dbg !5642
  %18 = call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 40, i8 noundef zeroext 1, i16 noundef zeroext 31, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext -61) #25, !dbg !5644
  br label %21, !dbg !5645

19:                                               ; preds = %13
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3.90, i32 0, i32 0)) #24, !dbg !5646
  br label %21

20:                                               ; preds = %10
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4.91, i32 0, i32 0)) #24, !dbg !5648
  store void (i8)* @bl_null_vusb_vr_control, void (i8)** @bl_pmic_vusb_vr_control, align 4, !dbg !5650
  br label %21, !dbg !5651

21:                                               ; preds = %17, %19, %20, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !5652
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !5652
  ret void, !dbg !5652
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext %0, i8 noundef zeroext %1, i16 noundef zeroext %2, i8 noundef zeroext %3, i8 noundef zeroext %4, i8 noundef zeroext %5) local_unnamed_addr #0 !dbg !5653 {
  %7 = alloca [3 x i8], align 1
  %8 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !5657, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.value(metadata i8 %1, metadata !5658, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.value(metadata i16 %2, metadata !5659, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.value(metadata i8 %3, metadata !5660, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.value(metadata i8 %4, metadata !5661, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.value(metadata i8 %5, metadata !5662, metadata !DIExpression()), !dbg !5667
  %9 = getelementptr inbounds [3 x i8], [3 x i8]* %7, i32 0, i32 0, !dbg !5668
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %9) #23, !dbg !5668
  call void @llvm.dbg.declare(metadata [3 x i8]* %7, metadata !5663, metadata !DIExpression()), !dbg !5669
  %10 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i32 0, i32 0, !dbg !5668
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #23, !dbg !5668
  call void @llvm.dbg.declare(metadata [1 x i8]* %8, metadata !5665, metadata !DIExpression()), !dbg !5670
  switch i8 %1, label %19 [
    i8 1, label %11
    i8 2, label %13
  ], !dbg !5671

11:                                               ; preds = %6
  %12 = trunc i16 %2 to i8, !dbg !5672
  store i8 %12, i8* %9, align 1, !dbg !5675
  br label %19, !dbg !5676

13:                                               ; preds = %6
  %14 = trunc i16 %2 to i8, !dbg !5677
  %15 = getelementptr inbounds [3 x i8], [3 x i8]* %7, i32 0, i32 1, !dbg !5680
  store i8 %14, i8* %15, align 1, !dbg !5681
  %16 = lshr i16 %2, 8, !dbg !5682
  %17 = trunc i16 %16 to i8, !dbg !5683
  %18 = or i8 %17, 64, !dbg !5683
  store i8 %18, i8* %9, align 1, !dbg !5684
  br label %19, !dbg !5685

19:                                               ; preds = %11, %6, %13
  %20 = zext i8 %1 to i32, !dbg !5686
  %21 = call zeroext i8 @bl_pmic_i2c_read(i8 noundef zeroext %0, i8 noundef zeroext %1, i8* noundef nonnull %9, i8* noundef nonnull %10) #25, !dbg !5687
  %22 = zext i8 %3 to i32, !dbg !5688
  %23 = zext i8 %4 to i32, !dbg !5689
  %24 = shl i32 %22, %23, !dbg !5690
  %25 = load i8, i8* %10, align 1, !dbg !5691
  %26 = trunc i32 %24 to i8, !dbg !5691
  %27 = xor i8 %26, -1, !dbg !5691
  %28 = and i8 %25, %27, !dbg !5691
  store i8 %28, i8* %10, align 1, !dbg !5691
  %29 = zext i8 %5 to i32, !dbg !5692
  %30 = shl i32 %29, %23, !dbg !5693
  %31 = trunc i32 %30 to i8, !dbg !5694
  %32 = or i8 %28, %31, !dbg !5694
  %33 = getelementptr inbounds [3 x i8], [3 x i8]* %7, i32 0, i32 %20, !dbg !5695
  store i8 %32, i8* %33, align 1, !dbg !5696
  %34 = call zeroext i8 @bl_pmic_i2c_write(i8 noundef zeroext %0, i8 noundef zeroext %1, i8* noundef nonnull %9) #25, !dbg !5697
  %35 = icmp eq i8 %34, 0, !dbg !5699
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #23, !dbg !5700
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %9) #23, !dbg !5700
  ret i1 %35, !dbg !5700
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @bl_null_vusb_vr_control(i8 zeroext %0) #14 !dbg !5701 {
  call void @llvm.dbg.value(metadata i8 undef, metadata !5703, metadata !DIExpression()), !dbg !5704
  ret void, !dbg !5705
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @bl_pmic_i2c_read(i8 noundef zeroext %0, i8 noundef zeroext %1, i8* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !5706 {
  %5 = alloca %struct.pmic_i2c_send_to_receive_config_t, align 4
  call void @llvm.dbg.value(metadata i8 %0, metadata !5710, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.value(metadata i8 %1, metadata !5711, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.value(metadata i8* %2, metadata !5712, metadata !DIExpression()), !dbg !5725
  call void @llvm.dbg.value(metadata i8* %3, metadata !5713, metadata !DIExpression()), !dbg !5725
  %6 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %5, i32 0, i32 0, !dbg !5726
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !5726
  call void @llvm.dbg.declare(metadata %struct.pmic_i2c_send_to_receive_config_t* %5, metadata !5714, metadata !DIExpression()), !dbg !5727
  call void @llvm.dbg.value(metadata i8 0, metadata !5723, metadata !DIExpression()), !dbg !5725
  store i8 %0, i8* %6, align 4, !dbg !5728
  %7 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %5, i32 0, i32 1, !dbg !5729
  store i8* %2, i8** %7, align 4, !dbg !5730
  %8 = zext i8 %1 to i32, !dbg !5731
  %9 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %5, i32 0, i32 2, !dbg !5732
  store i32 %8, i32* %9, align 4, !dbg !5733
  %10 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %5, i32 0, i32 3, !dbg !5734
  store i8* %3, i8** %10, align 4, !dbg !5735
  %11 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %5, i32 0, i32 4, !dbg !5736
  store i32 1, i32* %11, align 4, !dbg !5737
  br label %12, !dbg !5738

12:                                               ; preds = %12, %4
  %13 = phi i8 [ 0, %4 ], [ %15, %12 ], !dbg !5725
  call void @llvm.dbg.value(metadata i8 %13, metadata !5723, metadata !DIExpression()), !dbg !5725
  %14 = call i32 @pmic_i2c_send_to_receive_polling(i32 noundef 0, %struct.pmic_i2c_send_to_receive_config_t* noundef nonnull %5) #24, !dbg !5739
  call void @llvm.dbg.value(metadata i32 %14, metadata !5724, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5725
  %15 = add nuw nsw i8 %13, 1, !dbg !5741
  call void @llvm.dbg.value(metadata i8 %15, metadata !5723, metadata !DIExpression()), !dbg !5725
  %16 = and i32 %14, 255, !dbg !5742
  %17 = icmp ne i32 %16, 0, !dbg !5743
  %18 = icmp ult i8 %13, 10, !dbg !5744
  %19 = select i1 %17, i1 %18, i1 false, !dbg !5744
  br i1 %19, label %12, label %20, !dbg !5745, !llvm.loop !5746

20:                                               ; preds = %12
  call void @llvm.dbg.value(metadata i8 %13, metadata !5723, metadata !DIExpression()), !dbg !5725
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !5748
  ret i8 %13, !dbg !5749
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @bl_pmic_i2c_write(i8 noundef zeroext %0, i8 noundef zeroext %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5750 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5754, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i8 %1, metadata !5755, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i8* %2, metadata !5756, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.value(metadata i8 0, metadata !5757, metadata !DIExpression()), !dbg !5759
  %4 = zext i8 %1 to i32
  %5 = add nuw nsw i32 %4, 1
  br label %6, !dbg !5760

6:                                                ; preds = %6, %3
  %7 = phi i8 [ 0, %3 ], [ %9, %6 ], !dbg !5759
  call void @llvm.dbg.value(metadata i8 %7, metadata !5757, metadata !DIExpression()), !dbg !5759
  %8 = tail call i32 @pmic_i2c_send_polling(i32 noundef 0, i8 noundef zeroext %0, i8* noundef %2, i32 noundef %5) #24, !dbg !5761
  call void @llvm.dbg.value(metadata i32 %8, metadata !5758, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5759
  %9 = add nuw nsw i8 %7, 1, !dbg !5763
  call void @llvm.dbg.value(metadata i8 %9, metadata !5757, metadata !DIExpression()), !dbg !5759
  %10 = and i32 %8, 255, !dbg !5764
  %11 = icmp ne i32 %10, 0, !dbg !5765
  %12 = icmp ult i8 %7, 10, !dbg !5766
  %13 = select i1 %11, i1 %12, i1 false, !dbg !5766
  br i1 %13, label %6, label %14, !dbg !5767, !llvm.loop !5768

14:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i8 %7, metadata !5757, metadata !DIExpression()), !dbg !5759
  ret i8 %7, !dbg !5770
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @bl_pmic_get_register_value(i8 noundef zeroext %0, i8 noundef zeroext %1, i16 noundef zeroext %2, i8 noundef zeroext %3, i8 noundef zeroext %4) local_unnamed_addr #0 !dbg !5771 {
  %6 = alloca [2 x i8], align 1
  %7 = alloca [1 x i8], align 1
  call void @llvm.dbg.value(metadata i8 %0, metadata !5775, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata i8 %1, metadata !5776, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata i16 %2, metadata !5777, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata i8 %3, metadata !5778, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata i8 %4, metadata !5779, metadata !DIExpression()), !dbg !5783
  %8 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i32 0, i32 0, !dbg !5784
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8) #23, !dbg !5784
  call void @llvm.dbg.declare(metadata [2 x i8]* %6, metadata !5780, metadata !DIExpression()), !dbg !5785
  %9 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i32 0, i32 0, !dbg !5784
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #23, !dbg !5784
  call void @llvm.dbg.declare(metadata [1 x i8]* %7, metadata !5782, metadata !DIExpression()), !dbg !5786
  switch i8 %1, label %18 [
    i8 1, label %10
    i8 2, label %12
  ], !dbg !5787

10:                                               ; preds = %5
  %11 = trunc i16 %2 to i8, !dbg !5788
  store i8 %11, i8* %8, align 1, !dbg !5791
  br label %18, !dbg !5792

12:                                               ; preds = %5
  %13 = trunc i16 %2 to i8, !dbg !5793
  %14 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i32 0, i32 1, !dbg !5796
  store i8 %13, i8* %14, align 1, !dbg !5797
  %15 = lshr i16 %2, 8, !dbg !5798
  %16 = trunc i16 %15 to i8, !dbg !5799
  %17 = or i8 %16, 64, !dbg !5799
  store i8 %17, i8* %8, align 1, !dbg !5800
  br label %18, !dbg !5801

18:                                               ; preds = %10, %5, %12
  %19 = call zeroext i8 @bl_pmic_i2c_read(i8 noundef zeroext %0, i8 noundef zeroext %1, i8* noundef nonnull %8, i8* noundef nonnull %9) #25, !dbg !5802
  %20 = load i8, i8* %9, align 1, !dbg !5803
  %21 = zext i8 %20 to i32, !dbg !5803
  %22 = zext i8 %4 to i32, !dbg !5804
  %23 = lshr i32 %21, %22, !dbg !5805
  %24 = trunc i32 %23 to i8, !dbg !5806
  %25 = and i8 %24, %3, !dbg !5806
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #23, !dbg !5807
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8) #23, !dbg !5807
  ret i8 %25, !dbg !5808
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_usbphy_poweron_initialize() local_unnamed_addr #0 !dbg !5809 {
  %1 = load volatile i32, i32* inttoptr (i32 -1601107968 to i32*), align 2048, !dbg !5831
  call void @llvm.dbg.value(metadata i32 %1, metadata !5811, metadata !DIExpression()), !dbg !5832
  %2 = or i32 %1, -2147483648, !dbg !5831
  call void @llvm.dbg.value(metadata i32 %2, metadata !5811, metadata !DIExpression()), !dbg !5832
  store volatile i32 %2, i32* inttoptr (i32 -1601107968 to i32*), align 2048, !dbg !5831
  %3 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5833
  call void @llvm.dbg.value(metadata i32 %3, metadata !5813, metadata !DIExpression()), !dbg !5834
  %4 = and i32 %3, -67108865, !dbg !5833
  call void @llvm.dbg.value(metadata i32 %4, metadata !5813, metadata !DIExpression()), !dbg !5834
  store volatile i32 %4, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5833
  %5 = load volatile i32, i32* inttoptr (i32 -1601107860 to i32*), align 4, !dbg !5835
  call void @llvm.dbg.value(metadata i32 %5, metadata !5815, metadata !DIExpression()), !dbg !5836
  %6 = and i32 %5, -65537, !dbg !5835
  call void @llvm.dbg.value(metadata i32 %6, metadata !5815, metadata !DIExpression()), !dbg !5836
  store volatile i32 %6, i32* inttoptr (i32 -1601107860 to i32*), align 4, !dbg !5835
  %7 = load volatile i32, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %7, metadata !5817, metadata !DIExpression()), !dbg !5838
  %8 = and i32 %7, -513, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %8, metadata !5817, metadata !DIExpression()), !dbg !5838
  store volatile i32 %8, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5837
  %9 = load volatile i32, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5839
  call void @llvm.dbg.value(metadata i32 %9, metadata !5819, metadata !DIExpression()), !dbg !5840
  %10 = and i32 %9, -257, !dbg !5839
  call void @llvm.dbg.value(metadata i32 %10, metadata !5819, metadata !DIExpression()), !dbg !5840
  store volatile i32 %10, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5839
  %11 = load volatile i32, i32* inttoptr (i32 -1601107940 to i32*), align 4, !dbg !5841
  call void @llvm.dbg.value(metadata i32 %11, metadata !5821, metadata !DIExpression()), !dbg !5842
  %12 = and i32 %11, -129, !dbg !5841
  call void @llvm.dbg.value(metadata i32 %12, metadata !5821, metadata !DIExpression()), !dbg !5842
  store volatile i32 %12, i32* inttoptr (i32 -1601107940 to i32*), align 4, !dbg !5841
  %13 = load volatile i32, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5843
  call void @llvm.dbg.value(metadata i32 %13, metadata !5823, metadata !DIExpression()), !dbg !5844
  %14 = and i32 %13, -65537, !dbg !5843
  call void @llvm.dbg.value(metadata i32 %14, metadata !5823, metadata !DIExpression()), !dbg !5844
  store volatile i32 %14, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5843
  %15 = load volatile i32, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5845
  call void @llvm.dbg.value(metadata i32 %15, metadata !5825, metadata !DIExpression()), !dbg !5846
  %16 = and i32 %15, -131073, !dbg !5845
  call void @llvm.dbg.value(metadata i32 %16, metadata !5825, metadata !DIExpression()), !dbg !5846
  store volatile i32 %16, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5845
  %17 = load volatile i32, i32* inttoptr (i32 -1601107944 to i32*), align 8, !dbg !5847
  call void @llvm.dbg.value(metadata i32 %17, metadata !5827, metadata !DIExpression()), !dbg !5848
  %18 = or i32 %17, 134217728, !dbg !5847
  call void @llvm.dbg.value(metadata i32 %18, metadata !5827, metadata !DIExpression()), !dbg !5848
  store volatile i32 %18, i32* inttoptr (i32 -1601107944 to i32*), align 8, !dbg !5847
  %19 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5849
  call void @llvm.dbg.value(metadata i32 %19, metadata !5829, metadata !DIExpression()), !dbg !5850
  %20 = and i32 %19, -262145, !dbg !5849
  call void @llvm.dbg.value(metadata i32 %20, metadata !5829, metadata !DIExpression()), !dbg !5850
  store volatile i32 %20, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5849
  %21 = tail call zeroext i1 @bl_gpt_delay_ms(i32 noundef 1) #24, !dbg !5851
  ret void, !dbg !5852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_usbphy_save_current() local_unnamed_addr #0 !dbg !5853 {
  %1 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5891
  call void @llvm.dbg.value(metadata i32 %1, metadata !5855, metadata !DIExpression()), !dbg !5892
  %2 = and i32 %1, -67108865, !dbg !5891
  call void @llvm.dbg.value(metadata i32 %2, metadata !5855, metadata !DIExpression()), !dbg !5892
  store volatile i32 %2, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5891
  %3 = load volatile i32, i32* inttoptr (i32 -1601107860 to i32*), align 4, !dbg !5893
  call void @llvm.dbg.value(metadata i32 %3, metadata !5857, metadata !DIExpression()), !dbg !5894
  %4 = and i32 %3, -65537, !dbg !5893
  call void @llvm.dbg.value(metadata i32 %4, metadata !5857, metadata !DIExpression()), !dbg !5894
  store volatile i32 %4, i32* inttoptr (i32 -1601107860 to i32*), align 4, !dbg !5893
  %5 = load volatile i32, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5895
  call void @llvm.dbg.value(metadata i32 %5, metadata !5859, metadata !DIExpression()), !dbg !5896
  %6 = and i32 %5, -513, !dbg !5895
  call void @llvm.dbg.value(metadata i32 %6, metadata !5859, metadata !DIExpression()), !dbg !5896
  store volatile i32 %6, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5895
  %7 = load volatile i32, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5897
  call void @llvm.dbg.value(metadata i32 %7, metadata !5861, metadata !DIExpression()), !dbg !5898
  %8 = and i32 %7, -257, !dbg !5897
  call void @llvm.dbg.value(metadata i32 %8, metadata !5861, metadata !DIExpression()), !dbg !5898
  store volatile i32 %8, i32* inttoptr (i32 -1601107936 to i32*), align 32, !dbg !5897
  %9 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5899
  call void @llvm.dbg.value(metadata i32 %9, metadata !5863, metadata !DIExpression()), !dbg !5900
  %10 = or i32 %9, 8, !dbg !5899
  call void @llvm.dbg.value(metadata i32 %10, metadata !5863, metadata !DIExpression()), !dbg !5900
  store volatile i32 %10, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5899
  %11 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5901
  call void @llvm.dbg.value(metadata i32 %11, metadata !5865, metadata !DIExpression()), !dbg !5902
  %12 = or i32 %11, 262144, !dbg !5901
  call void @llvm.dbg.value(metadata i32 %12, metadata !5865, metadata !DIExpression()), !dbg !5902
  store volatile i32 %12, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5901
  %13 = tail call zeroext i1 @bl_gpt_delay_ms(i32 noundef 2) #24, !dbg !5903
  %14 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5904
  call void @llvm.dbg.value(metadata i32 %14, metadata !5867, metadata !DIExpression()), !dbg !5905
  %15 = or i32 %14, 64, !dbg !5904
  call void @llvm.dbg.value(metadata i32 %15, metadata !5867, metadata !DIExpression()), !dbg !5905
  store volatile i32 %15, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5904
  %16 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5906
  call void @llvm.dbg.value(metadata i32 %16, metadata !5869, metadata !DIExpression()), !dbg !5907
  %17 = or i32 %16, 128, !dbg !5906
  call void @llvm.dbg.value(metadata i32 %17, metadata !5869, metadata !DIExpression()), !dbg !5907
  store volatile i32 %17, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5906
  %18 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5908
  %19 = and i32 %18, -49, !dbg !5908
  %20 = or i32 %19, 16, !dbg !5908
  store volatile i32 %20, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5908
  %21 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5909
  call void @llvm.dbg.value(metadata i32 %21, metadata !5871, metadata !DIExpression()), !dbg !5910
  %22 = or i32 %21, 4, !dbg !5909
  call void @llvm.dbg.value(metadata i32 %22, metadata !5871, metadata !DIExpression()), !dbg !5910
  store volatile i32 %22, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5909
  %23 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5911
  %24 = and i32 %23, -15361, !dbg !5911
  store volatile i32 %24, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5911
  %25 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5912
  call void @llvm.dbg.value(metadata i32 %25, metadata !5873, metadata !DIExpression()), !dbg !5913
  %26 = or i32 %25, 1048576, !dbg !5912
  call void @llvm.dbg.value(metadata i32 %26, metadata !5873, metadata !DIExpression()), !dbg !5913
  store volatile i32 %26, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5912
  %27 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5914
  call void @llvm.dbg.value(metadata i32 %27, metadata !5875, metadata !DIExpression()), !dbg !5915
  %28 = or i32 %27, 2097152, !dbg !5914
  call void @llvm.dbg.value(metadata i32 %28, metadata !5875, metadata !DIExpression()), !dbg !5915
  store volatile i32 %28, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5914
  %29 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5916
  call void @llvm.dbg.value(metadata i32 %29, metadata !5877, metadata !DIExpression()), !dbg !5917
  %30 = or i32 %29, 524288, !dbg !5916
  call void @llvm.dbg.value(metadata i32 %30, metadata !5877, metadata !DIExpression()), !dbg !5917
  store volatile i32 %30, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5916
  %31 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5918
  call void @llvm.dbg.value(metadata i32 %31, metadata !5879, metadata !DIExpression()), !dbg !5919
  %32 = or i32 %31, 131072, !dbg !5918
  call void @llvm.dbg.value(metadata i32 %32, metadata !5879, metadata !DIExpression()), !dbg !5919
  store volatile i32 %32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5918
  %33 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5920
  call void @llvm.dbg.value(metadata i32 %33, metadata !5881, metadata !DIExpression()), !dbg !5921
  %34 = or i32 %33, 8388608, !dbg !5920
  call void @llvm.dbg.value(metadata i32 %34, metadata !5881, metadata !DIExpression()), !dbg !5921
  store volatile i32 %34, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5920
  %35 = load volatile i32, i32* inttoptr (i32 -1601107940 to i32*), align 4, !dbg !5922
  call void @llvm.dbg.value(metadata i32 %35, metadata !5883, metadata !DIExpression()), !dbg !5923
  %36 = or i32 %35, 128, !dbg !5922
  call void @llvm.dbg.value(metadata i32 %36, metadata !5883, metadata !DIExpression()), !dbg !5923
  store volatile i32 %36, i32* inttoptr (i32 -1601107940 to i32*), align 4, !dbg !5922
  %37 = load volatile i32, i32* inttoptr (i32 -1601107944 to i32*), align 8, !dbg !5924
  call void @llvm.dbg.value(metadata i32 %37, metadata !5885, metadata !DIExpression()), !dbg !5925
  %38 = and i32 %37, -134217729, !dbg !5924
  call void @llvm.dbg.value(metadata i32 %38, metadata !5885, metadata !DIExpression()), !dbg !5925
  store volatile i32 %38, i32* inttoptr (i32 -1601107944 to i32*), align 8, !dbg !5924
  %39 = tail call zeroext i1 @bl_gpt_delay_ms(i32 noundef 1) #24, !dbg !5926
  %40 = load volatile i32, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %40, metadata !5887, metadata !DIExpression()), !dbg !5928
  %41 = and i32 %40, -9, !dbg !5927
  call void @llvm.dbg.value(metadata i32 %41, metadata !5887, metadata !DIExpression()), !dbg !5928
  store volatile i32 %41, i32* inttoptr (i32 -1601107864 to i32*), align 8, !dbg !5927
  %42 = tail call zeroext i1 @bl_gpt_delay_ms(i32 noundef 1) #24, !dbg !5929
  %43 = load volatile i32, i32* inttoptr (i32 -1601107968 to i32*), align 2048, !dbg !5930
  call void @llvm.dbg.value(metadata i32 %43, metadata !5889, metadata !DIExpression()), !dbg !5931
  %44 = and i32 %43, 2147483647, !dbg !5930
  call void @llvm.dbg.value(metadata i32 %44, metadata !5889, metadata !DIExpression()), !dbg !5931
  store volatile i32 %44, i32* inttoptr (i32 -1601107968 to i32*), align 2048, !dbg !5930
  ret void, !dbg !5932
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_usb_low_power_setting() local_unnamed_addr #0 !dbg !5933 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !5940
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2), !dbg !5940
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5935, metadata !DIExpression()), !dbg !5941
  %3 = load volatile i32, i32* inttoptr (i32 -1576992500 to i32*), align 4, !dbg !5942
  store volatile i32 %3, i32* %1, align 4, !dbg !5941
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.94, i32 0, i32 0)) #24, !dbg !5943
  %4 = load volatile i16, i16* inttoptr (i32 -1576990816 to i16*), align 32, !dbg !5944
  call void @llvm.dbg.value(metadata i16 %4, metadata !5936, metadata !DIExpression()), !dbg !5945
  %5 = or i16 %4, 1, !dbg !5944
  call void @llvm.dbg.value(metadata i16 %5, metadata !5936, metadata !DIExpression()), !dbg !5945
  store volatile i16 %5, i16* inttoptr (i32 -1576990816 to i16*), align 32, !dbg !5944
  store volatile i32 268439551, i32* inttoptr (i32 -1576992500 to i32*), align 4, !dbg !5946
  store volatile i32 4, i32* inttoptr (i32 -1576991964 to i32*), align 4, !dbg !5947
  store volatile i32 12288, i32* inttoptr (i32 -1576991960 to i32*), align 8, !dbg !5948
  tail call void @hal_usbphy_poweron_initialize() #25, !dbg !5949
  tail call void @hal_usbphy_save_current() #25, !dbg !5950
  %6 = load volatile i16, i16* inttoptr (i32 -1576990816 to i16*), align 32, !dbg !5951
  call void @llvm.dbg.value(metadata i16 %6, metadata !5938, metadata !DIExpression()), !dbg !5952
  %7 = and i16 %6, -2, !dbg !5951
  call void @llvm.dbg.value(metadata i16 %7, metadata !5938, metadata !DIExpression()), !dbg !5952
  store volatile i16 %7, i16* inttoptr (i32 -1576990816 to i16*), align 32, !dbg !5951
  %8 = load volatile i32, i32* %1, align 4, !dbg !5953
  store volatile i32 %8, i32* inttoptr (i32 -1576992500 to i32*), align 4, !dbg !5954
  store volatile i32 4, i32* inttoptr (i32 -1576991980 to i32*), align 4, !dbg !5955
  store volatile i32 12288, i32* inttoptr (i32 -1576991980 to i32*), align 4, !dbg !5956
  %9 = load void (i8)*, void (i8)** @bl_pmic_vusb_vr_control, align 4, !dbg !5957
  tail call void %9(i8 noundef zeroext 0) #24, !dbg !5957
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2), !dbg !5958
  ret void, !dbg !5958
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_mt6385_init() local_unnamed_addr #0 !dbg !5959 {
  %1 = tail call zeroext i8 @bl_pmic_get_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 1, i8 noundef zeroext -1, i8 noundef zeroext 0) #24, !dbg !5964
  call void @llvm.dbg.value(metadata i8 %1, metadata !5963, metadata !DIExpression()), !dbg !5965
  %2 = icmp eq i8 %1, -123, !dbg !5966
  br i1 %2, label %3, label %5, !dbg !5968

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 75, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext 1) #24, !dbg !5969
  tail call void @bl_mt6385_vcore_set_1p3v() #25, !dbg !5971
  br label %5, !dbg !5972

5:                                                ; preds = %0, %3
  %6 = phi i32 [ 0, %3 ], [ 1, %0 ], !dbg !5973
  ret i32 %6, !dbg !5974
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_mt6385_vcore_set_1p3v() local_unnamed_addr #0 !dbg !5975 {
  call void @llvm.dbg.value(metadata i32 14, metadata !5977, metadata !DIExpression(DW_OP_LLVM_fragment, 192, 32)), !dbg !5982
  call void @llvm.dbg.value(metadata i32 12, metadata !5981, metadata !DIExpression(DW_OP_LLVM_fragment, 192, 32)), !dbg !5982
  %1 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 62, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext -4) #24, !dbg !5983
  %2 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 63, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext -38) #24, !dbg !5984
  %3 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 64, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext 1) #24, !dbg !5985
  %4 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 318, i8 noundef zeroext 15, i8 noundef zeroext 4, i8 noundef zeroext 14) #24, !dbg !5986
  %5 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 259, i8 noundef zeroext 15, i8 noundef zeroext 4, i8 noundef zeroext 12) #24, !dbg !5987
  %6 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 319, i8 noundef zeroext 15, i8 noundef zeroext 4, i8 noundef zeroext 14) #24, !dbg !5988
  %7 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 261, i8 noundef zeroext 15, i8 noundef zeroext 4, i8 noundef zeroext 12) #24, !dbg !5989
  %8 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 64, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext 0) #24, !dbg !5990
  %9 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 62, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext 0) #24, !dbg !5991
  %10 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 63, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext 0) #24, !dbg !5992
  ret void, !dbg !5993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_mt6385_vusb_vr_control(i8 noundef zeroext %0) #0 !dbg !5994 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !5996, metadata !DIExpression()), !dbg !5998
  call void @llvm.dbg.value(metadata i32 1, metadata !5997, metadata !DIExpression()), !dbg !5998
  %2 = icmp eq i8 %0, 0, !dbg !5999
  call void @llvm.dbg.value(metadata i1 %2, metadata !5997, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5998
  %3 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 62, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext -4) #24, !dbg !6001
  %4 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 63, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext -38) #24, !dbg !6002
  %5 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 237, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext %0) #24, !dbg !6003
  call void @llvm.dbg.value(metadata i1 %2, metadata !5997, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5998
  br i1 %2, label %9, label %6, !dbg !6004

6:                                                ; preds = %1, %6
  %7 = tail call zeroext i8 @bl_pmic_get_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 237, i8 noundef zeroext 1, i8 noundef zeroext 6) #24, !dbg !6005
  call void @llvm.dbg.value(metadata i8 %7, metadata !5997, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5998
  %8 = icmp eq i8 %7, 0, !dbg !6007
  br i1 %8, label %6, label %9, !dbg !6004, !llvm.loop !6008

9:                                                ; preds = %6, %1
  %10 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 62, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext 0) #24, !dbg !6010
  %11 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 63, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext 0) #24, !dbg !6011
  ret void, !dbg !6012
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_mt6385_vmc_vr_control(i8 noundef zeroext %0) #0 !dbg !6013 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6015, metadata !DIExpression()), !dbg !6017
  call void @llvm.dbg.value(metadata i32 1, metadata !6016, metadata !DIExpression()), !dbg !6017
  %2 = icmp eq i8 %0, 0, !dbg !6018
  call void @llvm.dbg.value(metadata i1 %2, metadata !6016, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6017
  %3 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 62, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext -4) #24, !dbg !6020
  %4 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 63, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext -38) #24, !dbg !6021
  %5 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 236, i8 noundef zeroext 1, i8 noundef zeroext 0, i8 noundef zeroext %0) #24, !dbg !6022
  call void @llvm.dbg.value(metadata i1 %2, metadata !6016, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6017
  br i1 %2, label %9, label %6, !dbg !6023

6:                                                ; preds = %1, %6
  %7 = tail call zeroext i8 @bl_pmic_get_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 236, i8 noundef zeroext 1, i8 noundef zeroext 6) #24, !dbg !6024
  call void @llvm.dbg.value(metadata i8 %7, metadata !6016, metadata !DIExpression(DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6017
  %8 = icmp eq i8 %7, 0, !dbg !6026
  br i1 %8, label %6, label %9, !dbg !6023, !llvm.loop !6027

9:                                                ; preds = %6, %1
  %10 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 62, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext 0) #24, !dbg !6029
  %11 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 107, i8 noundef zeroext 2, i16 noundef zeroext 63, i8 noundef zeroext -1, i8 noundef zeroext 0, i8 noundef zeroext 0) #24, !dbg !6030
  ret void, !dbg !6031
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_max14745_init() local_unnamed_addr #0 !dbg !6032 {
  %1 = tail call zeroext i8 @bl_pmic_get_register_value(i8 noundef zeroext 40, i8 noundef zeroext 1, i16 noundef zeroext 0, i8 noundef zeroext -1, i8 noundef zeroext 0) #24, !dbg !6035
  call void @llvm.dbg.value(metadata i8 %1, metadata !6034, metadata !DIExpression()), !dbg !6036
  %2 = icmp eq i8 %1, 2, !dbg !6037
  br i1 %2, label %3, label %4, !dbg !6039

3:                                                ; preds = %0
  tail call void @bl_max14745_vcore_set_1p3v() #25, !dbg !6040
  br label %4, !dbg !6042

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ 1, %0 ], !dbg !6043
  ret i32 %5, !dbg !6044
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_max14745_vcore_set_1p3v() local_unnamed_addr #0 !dbg !6045 {
  %1 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 40, i8 noundef zeroext 1, i16 noundef zeroext 14, i8 noundef zeroext 63, i8 noundef zeroext 0, i8 noundef zeroext 20) #24, !dbg !6046
  ret void, !dbg !6047
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_max14745_vusb_vr_control(i8 noundef zeroext %0) #0 !dbg !6048 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6050, metadata !DIExpression()), !dbg !6051
  %2 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 40, i8 noundef zeroext 1, i16 noundef zeroext 22, i8 noundef zeroext 3, i8 noundef zeroext 1, i8 noundef zeroext %0) #24, !dbg !6052
  ret void, !dbg !6053
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_max14745_vmc_vr_control(i8 noundef zeroext %0) #0 !dbg !6054 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !6056, metadata !DIExpression()), !dbg !6057
  %2 = tail call zeroext i1 @bl_pmic_set_register_value(i8 noundef zeroext 40, i8 noundef zeroext 1, i16 noundef zeroext 20, i8 noundef zeroext 3, i8 noundef zeroext 1, i8 noundef zeroext %0) #24, !dbg !6058
  ret void, !dbg !6059
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @wdt_set_length(i32 noundef %0) local_unnamed_addr #12 !dbg !6060 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6062, metadata !DIExpression()), !dbg !6064
  call void @llvm.dbg.value(metadata i32 0, metadata !6063, metadata !DIExpression()), !dbg !6064
  %2 = mul i32 %0, 10000, !dbg !6065
  %3 = udiv i32 %2, 156, !dbg !6066
  call void @llvm.dbg.value(metadata i32 %3, metadata !6063, metadata !DIExpression()), !dbg !6064
  %4 = shl nuw nsw i32 %3, 5, !dbg !6067
  call void @llvm.dbg.value(metadata i32 %4, metadata !6063, metadata !DIExpression()), !dbg !6064
  %5 = or i32 %4, 8, !dbg !6068
  call void @llvm.dbg.value(metadata i32 %5, metadata !6063, metadata !DIExpression()), !dbg !6064
  store volatile i32 %5, i32* inttoptr (i32 -1576730620 to i32*), align 4, !dbg !6069
  store volatile i32 6513, i32* inttoptr (i32 -1576730616 to i32*), align 8, !dbg !6070
  ret void, !dbg !6071
}

; Function Attrs: noinline nounwind optsize
define dso_local void @wdt_set_mode_register_by_bit(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6072 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6074, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.value(metadata i32 %1, metadata !6075, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.value(metadata i32 0, metadata !6076, metadata !DIExpression()), !dbg !6077
  %3 = load volatile i32, i32* inttoptr (i32 -1576730624 to i32*), align 65536, !dbg !6078
  call void @llvm.dbg.value(metadata i32 %3, metadata !6076, metadata !DIExpression()), !dbg !6077
  %4 = icmp eq i32 %1, 0, !dbg !6079
  %5 = shl nuw i32 1, %0, !dbg !6081
  %6 = xor i32 %5, -1, !dbg !6082
  %7 = and i32 %3, %6, !dbg !6082
  %8 = or i32 %3, %5, !dbg !6082
  %9 = select i1 %4, i32 %7, i32 %8, !dbg !6082
  call void @llvm.dbg.value(metadata i32 %9, metadata !6076, metadata !DIExpression()), !dbg !6077
  %10 = and i32 %9, 56831, !dbg !6083
  call void @llvm.dbg.value(metadata i32 %9, metadata !6076, metadata !DIExpression(DW_OP_constu, 56831, DW_OP_and, DW_OP_stack_value)), !dbg !6077
  %11 = or i32 %10, 8704, !dbg !6084
  call void @llvm.dbg.value(metadata i32 %11, metadata !6076, metadata !DIExpression()), !dbg !6077
  store volatile i32 %11, i32* inttoptr (i32 -1576730624 to i32*), align 65536, !dbg !6085
  %12 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 35) #24, !dbg !6086
  ret void, !dbg !6087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_wdt_init(%struct.hal_wdt_config_t* noundef readonly %0) local_unnamed_addr #0 !dbg !6088 {
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %0, metadata !6098, metadata !DIExpression()), !dbg !6099
  %2 = icmp eq %struct.hal_wdt_config_t* %0, null, !dbg !6100
  br i1 %2, label %13, label %3, !dbg !6102

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %0, i32 0, i32 0, !dbg !6103
  %5 = load i32, i32* %4, align 4, !dbg !6103
  %6 = icmp eq i32 %5, 0, !dbg !6104
  br i1 %6, label %7, label %13, !dbg !6105

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %0, i32 0, i32 1, !dbg !6106
  %9 = load i32, i32* %8, align 4, !dbg !6106
  %10 = icmp ugt i32 %9, 30, !dbg !6108
  br i1 %10, label %13, label %11, !dbg !6109

11:                                               ; preds = %7
  tail call void @wdt_set_length(i32 noundef %9) #25, !dbg !6110
  %12 = load i32, i32* %4, align 4, !dbg !6111
  tail call void @wdt_set_mode_register_by_bit(i32 noundef 3, i32 noundef %12) #25, !dbg !6112
  br label %13, !dbg !6113

13:                                               ; preds = %7, %1, %3, %11
  %14 = phi i32 [ 0, %11 ], [ -2, %3 ], [ -2, %1 ], [ -2, %7 ], !dbg !6099
  ret i32 %14, !dbg !6114
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_wdt_enable(i32 noundef %0) local_unnamed_addr #0 !dbg !6115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6119, metadata !DIExpression()), !dbg !6120
  %2 = icmp eq i32 %0, -889275714, !dbg !6121
  br i1 %2, label %3, label %4, !dbg !6123

3:                                                ; preds = %1
  tail call void @wdt_set_mode_register_by_bit(i32 noundef 0, i32 noundef 1) #25, !dbg !6124
  tail call void @wdt_set_mode_register_by_bit(i32 noundef 5, i32 noundef 1) #25, !dbg !6125
  store volatile i32 6513, i32* inttoptr (i32 -1576730616 to i32*), align 8, !dbg !6126
  br label %4, !dbg !6127

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -1, %1 ], !dbg !6120
  ret i32 %5, !dbg !6128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_wdt_feed(i32 noundef %0) local_unnamed_addr #0 !dbg !6129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6131, metadata !DIExpression()), !dbg !6132
  store volatile i32 6513, i32* inttoptr (i32 -1576730616 to i32*), align 8, !dbg !6133
  %2 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef 123) #24, !dbg !6134
  ret i32 0, !dbg !6135
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_wdt_software_reset() local_unnamed_addr #12 !dbg !6136 {
  store volatile i32 4617, i32* inttoptr (i32 -1576730596 to i32*), align 4, !dbg !6139
  ret i32 0, !dbg !6140
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @bl_alloc(i8* nocapture readnone %0, i32 noundef %1) #0 !dbg !6141 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !6143, metadata !DIExpression()), !dbg !6145
  call void @llvm.dbg.value(metadata i32 %1, metadata !6144, metadata !DIExpression()), !dbg !6145
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.114, i32 0, i32 0), i32 noundef %1) #24, !dbg !6146
  %3 = load i32, i32* @lzma_alloc_count, align 4, !dbg !6147
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1.115, i32 0, i32 0), i32 noundef %3) #24, !dbg !6148
  %4 = load i32, i32* @lzma_alloc_count, align 4, !dbg !6149
  switch i32 %4, label %9 [
    i32 0, label %5
    i32 1, label %6
    i32 2, label %7
    i32 3, label %8
  ], !dbg !6150

5:                                                ; preds = %2
  store i32 1, i32* @lzma_alloc_count, align 4, !dbg !6151
  br label %10, !dbg !6153

6:                                                ; preds = %2
  store i32 2, i32* @lzma_alloc_count, align 4, !dbg !6154
  br label %10, !dbg !6155

7:                                                ; preds = %2
  store i32 3, i32* @lzma_alloc_count, align 4, !dbg !6156
  br label %10, !dbg !6157

8:                                                ; preds = %2
  store i32 0, i32* @lzma_alloc_count, align 4, !dbg !6158
  br label %10, !dbg !6159

9:                                                ; preds = %2
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([9 x i8], [9 x i8]* @__FUNCTION__.bl_alloc, i32 0, i32 0), i32 noundef 112) #24, !dbg !6160
  br label %10, !dbg !6161

10:                                               ; preds = %9, %8, %7, %6, %5
  %11 = phi i8* [ null, %9 ], [ getelementptr inbounds ([4096 x i8], [4096 x i8]* @lzma_buf_3, i32 0, i32 0), %8 ], [ getelementptr inbounds ([4096 x i8], [4096 x i8]* @lzma_buf_2, i32 0, i32 0), %7 ], [ getelementptr inbounds ([16384 x i8], [16384 x i8]* @lzma_buf_1, i32 0, i32 0), %6 ], [ getelementptr inbounds ([16384 x i8], [16384 x i8]* @lzma_buf_0, i32 0, i32 0), %5 ], !dbg !6162
  ret i8* %11, !dbg !6163
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_free(i8* nocapture readnone %0, i8* nocapture readnone %1) #0 !dbg !6164 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !6166, metadata !DIExpression()), !dbg !6168
  call void @llvm.dbg.value(metadata i8* undef, metadata !6167, metadata !DIExpression()), !dbg !6168
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3.113, i32 0, i32 0)) #24, !dbg !6169
  ret void, !dbg !6170
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_fota_compress_update(i32 noundef %0) local_unnamed_addr #0 !dbg !6171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6176, metadata !DIExpression()), !dbg !6181
  call void @llvm.dbg.value(metadata i32 0, metadata !6177, metadata !DIExpression()), !dbg !6181
  %2 = tail call i32 @bl_custom_fota_start_address() #24, !dbg !6182
  %3 = getelementptr inbounds %struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 %0, i32 0, !dbg !6183
  %4 = load i32, i32* %3, align 4, !dbg !6183
  %5 = add i32 %4, %2, !dbg !6184
  call void @llvm.dbg.value(metadata i32 %5, metadata !6178, metadata !DIExpression()), !dbg !6181
  %6 = getelementptr inbounds %struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 %0, i32 1, !dbg !6185
  %7 = load i32, i32* %6, align 4, !dbg !6185
  call void @llvm.dbg.value(metadata i32 %7, metadata !6179, metadata !DIExpression()), !dbg !6181
  %8 = getelementptr inbounds %struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 %0, i32 3, !dbg !6186
  %9 = load i32, i32* %8, align 4, !dbg !6186
  call void @llvm.dbg.value(metadata i32 %9, metadata !6180, metadata !DIExpression()), !dbg !6181
  %10 = tail call i32 @bl_custom_fota_start_address() #24, !dbg !6187
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4.117, i32 0, i32 0), i32 noundef %10) #24, !dbg !6188
  %11 = getelementptr inbounds %struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 %0, i32 2, !dbg !6189
  %12 = load i32, i32* %11, align 4, !dbg !6189
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5.118, i32 0, i32 0), i32 noundef %0, i32 noundef %12) #24, !dbg !6190
  %13 = load i32, i32* %3, align 4, !dbg !6191
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6.119, i32 0, i32 0), i32 noundef %0, i32 noundef %13) #24, !dbg !6192
  %14 = load i32, i32* %6, align 4, !dbg !6193
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7.120, i32 0, i32 0), i32 noundef %0, i32 noundef %14) #24, !dbg !6194
  %15 = load i32, i32* %8, align 4, !dbg !6195
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8.121, i32 0, i32 0), i32 noundef %0, i32 noundef %15) #24, !dbg !6196
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9.122, i32 0, i32 0), i32 noundef %5) #24, !dbg !6197
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10.123, i32 0, i32 0), i32 noundef %9) #24, !dbg !6198
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.124, i32 0, i32 0), i32 noundef %7) #24, !dbg !6199
  %16 = tail call i32 @bl_custom_rom_baseaddr() #24, !dbg !6200
  %17 = sub i32 %7, %16, !dbg !6201
  %18 = inttoptr i32 %17 to i8*, !dbg !6202
  %19 = tail call i32 @bl_custom_rom_baseaddr() #24, !dbg !6203
  %20 = sub i32 %5, %19, !dbg !6204
  %21 = inttoptr i32 %20 to i8*, !dbg !6205
  %22 = tail call i32 @lzma_decode2flash(i8* noundef %18, i32 noundef %9, i8* noundef %21, %struct.lzma_alloc_t* noundef nonnull @lzma_alloc) #24, !dbg !6206
  call void @llvm.dbg.value(metadata i32 %22, metadata !6177, metadata !DIExpression()), !dbg !6181
  %23 = icmp eq i32 %22, 0, !dbg !6207
  br i1 %23, label %25, label %24, !dbg !6209

24:                                               ; preds = %1
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12.125, i32 0, i32 0), i32 noundef %22) #24, !dbg !6210
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.bl_fota_compress_update, i32 0, i32 0), i32 noundef 150) #24, !dbg !6212
  br label %25, !dbg !6213

25:                                               ; preds = %1, %24
  %26 = phi i32 [ 4, %24 ], [ 0, %1 ], !dbg !6181
  ret i32 %26, !dbg !6214
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_fota_get_block_size_length(i32 noundef %0) local_unnamed_addr #0 !dbg !6215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6219, metadata !DIExpression()), !dbg !6222
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #24, !dbg !6223
  call void @llvm.dbg.value(metadata i32 %2, metadata !6221, metadata !DIExpression()), !dbg !6222
  %3 = icmp eq i32 %2, -1, !dbg !6224
  br i1 %3, label %4, label %5, !dbg !6226

4:                                                ; preds = %1
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @__FUNCTION__.bl_fota_get_block_size_length, i32 0, i32 0), i32 noundef 165) #24, !dbg !6227
  br label %7, !dbg !6229

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #24, !dbg !6230
  call void @llvm.dbg.value(metadata i32 %6, metadata !6220, metadata !DIExpression()), !dbg !6222
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13.126, i32 0, i32 0), i32 noundef %6) #24, !dbg !6231
  br label %7, !dbg !6232

7:                                                ; preds = %5, %4
  %8 = phi i32 [ 4096, %4 ], [ %6, %5 ], !dbg !6222
  ret i32 %8, !dbg !6233
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_fota_write_update_info(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6234 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6238, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i32 %1, metadata !6239, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.value(metadata i32 0, metadata !6240, metadata !DIExpression()), !dbg !6246
  %3 = tail call i32 @bl_custom_fota_start_address() #24, !dbg !6247
  %4 = tail call i32 @bl_custom_fota_size() #24, !dbg !6248
  call void @llvm.dbg.value(metadata i32 undef, metadata !6241, metadata !DIExpression()), !dbg !6246
  %5 = tail call i32 @bl_custom_rom_baseaddr() #24, !dbg !6249
  %6 = add i32 %3, -512, !dbg !6250
  %7 = add i32 %6, %4, !dbg !6251
  %8 = sub i32 %7, %5, !dbg !6252
  call void @llvm.dbg.value(metadata i32 %8, metadata !6241, metadata !DIExpression()), !dbg !6246
  %9 = tail call i32 @get_block_size_from_address(i32 noundef %8) #24, !dbg !6253
  call void @llvm.dbg.value(metadata i32 %9, metadata !6242, metadata !DIExpression()), !dbg !6246
  %10 = icmp eq i32 %9, 1, !dbg !6254
  %11 = select i1 %10, i32 -32768, i32 -4096, !dbg !6254
  %12 = icmp eq i32 %9, 2, !dbg !6254
  %13 = select i1 %12, i32 -65536, i32 %11, !dbg !6254
  call void @llvm.dbg.value(metadata i32 undef, metadata !6244, metadata !DIExpression()), !dbg !6246
  %14 = and i32 %13, %8, !dbg !6255
  call void @llvm.dbg.value(metadata i32 %14, metadata !6245, metadata !DIExpression()), !dbg !6246
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14.127, i32 0, i32 0), i32 noundef %14, i32 noundef %8) #24, !dbg !6256
  %15 = tail call i32 @hal_flash_erase(i32 noundef %14, i32 noundef %9) #24, !dbg !6257
  call void @llvm.dbg.value(metadata i32 %15, metadata !6240, metadata !DIExpression()), !dbg !6246
  %16 = icmp eq i32 %15, 0, !dbg !6258
  br i1 %16, label %18, label %17, !dbg !6260

17:                                               ; preds = %2
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15.128, i32 0, i32 0), i32 noundef %15) #24, !dbg !6261
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.bl_fota_write_update_info, i32 0, i32 0), i32 noundef 246) #24, !dbg !6263
  br label %23, !dbg !6264

18:                                               ; preds = %2
  %19 = tail call i32 @hal_flash_write(i32 noundef %8, i8* noundef %0, i32 noundef %1) #24, !dbg !6265
  call void @llvm.dbg.value(metadata i32 %19, metadata !6240, metadata !DIExpression()), !dbg !6246
  %20 = icmp eq i32 %19, 0, !dbg !6266
  br i1 %20, label %22, label %21, !dbg !6268

21:                                               ; preds = %18
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16.129, i32 0, i32 0), i32 noundef %19) #24, !dbg !6269
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @__FUNCTION__.bl_fota_write_update_info, i32 0, i32 0), i32 noundef 252) #24, !dbg !6271
  br label %23, !dbg !6272

22:                                               ; preds = %18
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17.130, i32 0, i32 0), i32 noundef %8) #24, !dbg !6273
  br label %23, !dbg !6274

23:                                               ; preds = %22, %21, %17
  %24 = phi i32 [ 8, %17 ], [ 4, %21 ], [ 0, %22 ], !dbg !6246
  ret i32 %24, !dbg !6275
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_fota_write_marker() local_unnamed_addr #0 !dbg !6276 {
  %1 = alloca %struct.bl_fota_update_info_t, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !6280, metadata !DIExpression()), !dbg !6293
  %2 = bitcast %struct.bl_fota_update_info_t* %1 to i8*, !dbg !6294
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #23, !dbg !6294
  call void @llvm.dbg.declare(metadata %struct.bl_fota_update_info_t* %1, metadata !6281, metadata !DIExpression()), !dbg !6295
  %3 = call i8* @memset(i8* noundef nonnull %2, i32 noundef 0, i32 noundef 64) #24, !dbg !6296
  %4 = getelementptr inbounds %struct.bl_fota_update_info_t, %struct.bl_fota_update_info_t* %1, i32 0, i32 0, !dbg !6297
  store i32 1, i32* %4, align 4, !dbg !6298
  %5 = getelementptr inbounds %struct.bl_fota_update_info_t, %struct.bl_fota_update_info_t* %1, i32 0, i32 1, !dbg !6299
  store i32 0, i32* %5, align 4, !dbg !6300
  %6 = getelementptr inbounds %struct.bl_fota_update_info_t, %struct.bl_fota_update_info_t* %1, i32 0, i32 3, !dbg !6301
  store i32 0, i32* %6, align 4, !dbg !6302
  call void @llvm.dbg.value(metadata i32 0, metadata !6292, metadata !DIExpression()), !dbg !6293
  %7 = getelementptr inbounds %struct.bl_fota_update_info_t, %struct.bl_fota_update_info_t* %1, i32 0, i32 4, i32 0
  %8 = bitcast i8* %7 to i32*
  call void @llvm.dbg.value(metadata i32 0, metadata !6292, metadata !DIExpression()), !dbg !6293
  br label %9, !dbg !6303

9:                                                ; preds = %0, %9
  %10 = phi i32 [ 0, %0 ], [ %12, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !6292, metadata !DIExpression()), !dbg !6293
  %11 = getelementptr inbounds i32, i32* %8, i32 %10, !dbg !6305
  store i32 1414419782, i32* %11, align 4, !dbg !6308
  %12 = add nuw nsw i32 %10, 1, !dbg !6309
  call void @llvm.dbg.value(metadata i32 %12, metadata !6292, metadata !DIExpression()), !dbg !6293
  %13 = icmp eq i32 %12, 8, !dbg !6310
  br i1 %13, label %14, label %9, !dbg !6303, !llvm.loop !6311

14:                                               ; preds = %9
  %15 = call i32 @bl_fota_write_update_info(i8* noundef nonnull %2, i32 noundef 64) #25, !dbg !6313
  call void @llvm.dbg.value(metadata i32 %15, metadata !6280, metadata !DIExpression()), !dbg !6293
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #23, !dbg !6314
  ret i32 %15, !dbg !6315
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_fota_write_update_status(i32 noundef %0) local_unnamed_addr #0 !dbg !6316 {
  %2 = alloca %struct.bl_fota_update_info_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6320, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.value(metadata i32 0, metadata !6321, metadata !DIExpression()), !dbg !6324
  %3 = bitcast %struct.bl_fota_update_info_t* %2 to i8*, !dbg !6325
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #23, !dbg !6325
  call void @llvm.dbg.declare(metadata %struct.bl_fota_update_info_t* %2, metadata !6322, metadata !DIExpression()), !dbg !6326
  %4 = call i8* @memset(i8* noundef nonnull %3, i32 noundef 0, i32 noundef 64) #24, !dbg !6327
  call void @llvm.dbg.value(metadata i32 0, metadata !6323, metadata !DIExpression()), !dbg !6324
  %5 = getelementptr inbounds %struct.bl_fota_update_info_t, %struct.bl_fota_update_info_t* %2, i32 0, i32 4, i32 0
  %6 = bitcast i8* %5 to i32*
  call void @llvm.dbg.value(metadata i32 0, metadata !6323, metadata !DIExpression()), !dbg !6324
  br label %7, !dbg !6328

7:                                                ; preds = %1, %7
  %8 = phi i32 [ 0, %1 ], [ %10, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !6323, metadata !DIExpression()), !dbg !6324
  %9 = getelementptr inbounds i32, i32* %6, i32 %8, !dbg !6330
  store i32 0, i32* %9, align 4, !dbg !6333
  %10 = add nuw nsw i32 %8, 1, !dbg !6334
  call void @llvm.dbg.value(metadata i32 %10, metadata !6323, metadata !DIExpression()), !dbg !6324
  %11 = icmp eq i32 %10, 8, !dbg !6335
  br i1 %11, label %12, label %7, !dbg !6328, !llvm.loop !6336

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.bl_fota_update_info_t, %struct.bl_fota_update_info_t* %2, i32 0, i32 1, !dbg !6338
  store i32 %0, i32* %13, align 4, !dbg !6339
  %14 = call i32 @bl_fota_write_update_info(i8* noundef nonnull %3, i32 noundef 64) #25, !dbg !6340
  call void @llvm.dbg.value(metadata i32 %14, metadata !6321, metadata !DIExpression()), !dbg !6324
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #23, !dbg !6341
  ret i32 %14, !dbg !6342
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_fota_update_progress(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !210 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !215, metadata !DIExpression()), !dbg !6343
  call void @llvm.dbg.value(metadata i32 %1, metadata !216, metadata !DIExpression()), !dbg !6343
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.bl_fota_update_progress.phase_portion, metadata !217, metadata !DIExpression()), !dbg !6344
  call void @llvm.dbg.value(metadata i32 1, metadata !222, metadata !DIExpression()), !dbg !6343
  call void @llvm.dbg.value(metadata i32 0, metadata !223, metadata !DIExpression()), !dbg !6343
  call void @llvm.dbg.value(metadata i32 0, metadata !224, metadata !DIExpression()), !dbg !6343
  %3 = icmp eq i32 %0, 0, !dbg !6345
  br i1 %3, label %12, label %4, !dbg !6348

4:                                                ; preds = %2, %4
  %5 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %9, %4 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !224, metadata !DIExpression()), !dbg !6343
  call void @llvm.dbg.value(metadata i32 %6, metadata !223, metadata !DIExpression()), !dbg !6343
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.bl_fota_update_progress.phase_portion, i32 0, i32 %5, !dbg !6349
  %8 = load i32, i32* %7, align 4, !dbg !6349
  %9 = add i32 %8, %6, !dbg !6351
  call void @llvm.dbg.value(metadata i32 %9, metadata !223, metadata !DIExpression()), !dbg !6343
  %10 = add nuw i32 %5, 1, !dbg !6352
  call void @llvm.dbg.value(metadata i32 %10, metadata !224, metadata !DIExpression()), !dbg !6343
  %11 = icmp eq i32 %10, %0, !dbg !6345
  br i1 %11, label %12, label %4, !dbg !6348, !llvm.loop !6353

12:                                               ; preds = %4, %2
  %13 = phi i32 [ 0, %2 ], [ %9, %4 ], !dbg !6343
  %14 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.bl_fota_update_progress.phase_portion, i32 0, i32 %0, !dbg !6355
  %15 = load i32, i32* %14, align 4, !dbg !6355
  %16 = mul i32 %15, %1, !dbg !6356
  %17 = udiv i32 %16, 100, !dbg !6357
  %18 = add i32 %17, %13, !dbg !6358
  call void @llvm.dbg.value(metadata i32 %18, metadata !223, metadata !DIExpression()), !dbg !6343
  %19 = tail call i32 @hal_wdt_feed(i32 noundef -559035650) #24, !dbg !6359
  %20 = load i32, i32* @bl_fota_update_progress.last_progress, align 4, !dbg !6360
  %21 = add i32 %20, 1, !dbg !6362
  %22 = icmp ult i32 %18, %21, !dbg !6363
  br i1 %22, label %24, label %23, !dbg !6364

23:                                               ; preds = %12
  store i32 %18, i32* @bl_fota_update_progress.last_progress, align 4, !dbg !6365
  br label %24, !dbg !6367

24:                                               ; preds = %23, %12
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([75 x i8], [75 x i8]* @.str.18.131, i32 0, i32 0), i32 noundef %18, i32 noundef %0, i32 noundef %1) #24, !dbg !6368
  ret void, !dbg !6369
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_fota_do_update() local_unnamed_addr #0 !dbg !6370 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6372, metadata !DIExpression()), !dbg !6386
  %1 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 1), align 4, !dbg !6387
  call void @llvm.dbg.value(metadata i32 %1, metadata !6373, metadata !DIExpression()), !dbg !6386
  %2 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 2), align 4, !dbg !6388
  call void @llvm.dbg.value(metadata i32 %2, metadata !6374, metadata !DIExpression()), !dbg !6386
  %3 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 0), align 4, !dbg !6389
  call void @llvm.dbg.value(metadata i32 %3, metadata !6375, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %1, metadata !6376, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i8* bitcast ([512 x i32]* @page_buffer to i8*), metadata !6384, metadata !DIExpression()), !dbg !6386
  %4 = tail call i32 @bl_custom_rom_baseaddr() #24, !dbg !6390
  %5 = sub i32 %1, %4, !dbg !6391
  call void @llvm.dbg.value(metadata i32 %5, metadata !6382, metadata !DIExpression()), !dbg !6386
  %6 = add i32 %2, %1, !dbg !6392
  %7 = tail call i32 @bl_custom_rom_baseaddr() #24, !dbg !6393
  %8 = xor i32 %7, -1, !dbg !6394
  %9 = add i32 %6, %8, !dbg !6394
  call void @llvm.dbg.value(metadata i32 %9, metadata !6383, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 512, metadata !6379, metadata !DIExpression()), !dbg !6386
  %10 = tail call i32 @get_block_size_from_address(i32 noundef %5) #24, !dbg !6395
  call void @llvm.dbg.value(metadata i32 %10, metadata !6378, metadata !DIExpression()), !dbg !6386
  %11 = tail call i32 @bl_fota_get_block_size_length(i32 noundef %5) #25, !dbg !6396
  call void @llvm.dbg.value(metadata i32 %11, metadata !6377, metadata !DIExpression()), !dbg !6386
  %12 = tail call i32 @bl_custom_fota_start_address() #24, !dbg !6397
  %13 = tail call i32 @bl_custom_rom_baseaddr() #24, !dbg !6398
  call void @llvm.dbg.value(metadata !DIArgList(i32 %12, i32 0, i32 %13, i32 %3), metadata !6385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 3, DW_OP_plus, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_plus, DW_OP_stack_value)), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %5, metadata !6382, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %3, metadata !6375, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 poison, metadata !6376, metadata !DIExpression()), !dbg !6386
  %14 = icmp ugt i32 %5, %9, !dbg !6399
  br i1 %14, label %55, label %15, !dbg !6402

15:                                               ; preds = %0
  %16 = add i32 %12, %3, !dbg !6403
  call void @llvm.dbg.value(metadata !DIArgList(i32 %16, i32 0, i32 %13), metadata !6385, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_arg, 2, DW_OP_minus, DW_OP_plus, DW_OP_stack_value)), !dbg !6386
  %17 = sub i32 %16, %13, !dbg !6404
  call void @llvm.dbg.value(metadata i32 %17, metadata !6385, metadata !DIExpression()), !dbg !6386
  %18 = lshr i32 %11, 9
  %19 = icmp ugt i32 %11, 511
  %20 = call i32 @llvm.umax.i32(i32 %18, i32 1), !dbg !6402
  br label %21, !dbg !6402

21:                                               ; preds = %15, %48
  %22 = phi i32 [ %17, %15 ], [ %50, %48 ]
  %23 = phi i32 [ %5, %15 ], [ %49, %48 ]
  %24 = phi i32 [ %3, %15 ], [ %51, %48 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !6385, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %23, metadata !6382, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %24, metadata !6375, metadata !DIExpression()), !dbg !6386
  %25 = tail call i32 @hal_flash_erase(i32 noundef %23, i32 noundef %10) #24, !dbg !6405
  call void @llvm.dbg.value(metadata i32 %25, metadata !6372, metadata !DIExpression()), !dbg !6386
  %26 = icmp eq i32 %25, 0, !dbg !6407
  br i1 %26, label %27, label %44, !dbg !6409

27:                                               ; preds = %21
  call void @llvm.dbg.value(metadata i32 %18, metadata !6380, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 0, metadata !6381, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %22, metadata !6385, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %25, metadata !6372, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %23, metadata !6382, metadata !DIExpression()), !dbg !6386
  br i1 %19, label %28, label %48, !dbg !6410

28:                                               ; preds = %27, %39
  %29 = phi i32 [ %40, %39 ], [ %22, %27 ]
  %30 = phi i32 [ %41, %39 ], [ %23, %27 ]
  %31 = phi i32 [ %42, %39 ], [ 0, %27 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !6385, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %30, metadata !6382, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %31, metadata !6381, metadata !DIExpression()), !dbg !6386
  %32 = tail call i32 @hal_flash_read(i32 noundef %29, i8* noundef bitcast ([512 x i32]* @page_buffer to i8*), i32 noundef 512) #24, !dbg !6412
  call void @llvm.dbg.value(metadata i32 %32, metadata !6372, metadata !DIExpression()), !dbg !6386
  %33 = icmp eq i32 %32, 0, !dbg !6415
  br i1 %33, label %35, label %34, !dbg !6417

34:                                               ; preds = %28
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.bl_fota_do_update, i32 0, i32 0), i32 noundef 412) #24, !dbg !6418
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20, i32 0, i32 0), i32 noundef %32) #24, !dbg !6420
  br label %45, !dbg !6421

35:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %29, metadata !6385, metadata !DIExpression(DW_OP_plus_uconst, 512, DW_OP_stack_value)), !dbg !6386
  %36 = tail call i32 @hal_flash_write(i32 noundef %30, i8* noundef bitcast ([512 x i32]* @page_buffer to i8*), i32 noundef 512) #24, !dbg !6422
  call void @llvm.dbg.value(metadata i32 %36, metadata !6372, metadata !DIExpression()), !dbg !6386
  %37 = icmp eq i32 %36, 0, !dbg !6423
  br i1 %37, label %39, label %38, !dbg !6425

38:                                               ; preds = %35
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.bl_fota_do_update, i32 0, i32 0), i32 noundef 422) #24, !dbg !6426
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21.132, i32 0, i32 0), i32 noundef %36) #24, !dbg !6428
  br label %45, !dbg !6429

39:                                               ; preds = %35
  %40 = add i32 %29, 512, !dbg !6430
  call void @llvm.dbg.value(metadata i32 %40, metadata !6385, metadata !DIExpression()), !dbg !6386
  %41 = add i32 %30, 512, !dbg !6431
  call void @llvm.dbg.value(metadata i32 %41, metadata !6382, metadata !DIExpression()), !dbg !6386
  %42 = add nuw nsw i32 %31, 1, !dbg !6432
  call void @llvm.dbg.value(metadata i32 0, metadata !6372, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %42, metadata !6381, metadata !DIExpression()), !dbg !6386
  %43 = icmp eq i32 %42, %20, !dbg !6433
  br i1 %43, label %48, label %28, !dbg !6410, !llvm.loop !6434

44:                                               ; preds = %21
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.bl_fota_do_update, i32 0, i32 0), i32 noundef 383) #24, !dbg !6436
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19.133, i32 0, i32 0), i32 noundef %25) #24, !dbg !6438
  call void @llvm.dbg.value(metadata i32 %18, metadata !6380, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 0, metadata !6381, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %23, metadata !6382, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %22, metadata !6385, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %25, metadata !6372, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata !DIArgList(i32 %24, i32 %11), metadata !6375, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6386
  call void @llvm.dbg.value(metadata !DIArgList(i32 poison, i32 %11), metadata !6376, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6386
  br label %45, !dbg !6439

45:                                               ; preds = %44, %38, %34
  %46 = phi i32 [ %30, %38 ], [ %30, %34 ], [ %23, %44 ]
  %47 = phi i32 [ %36, %38 ], [ %32, %34 ], [ %25, %44 ]
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.bl_fota_do_update, i32 0, i32 0), i32 noundef 435) #24, !dbg !6439
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 3, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.22, i32 0, i32 0), i32 noundef %46, i32 noundef %47) #24, !dbg !6442
  br label %55, !dbg !6443

48:                                               ; preds = %39, %27
  %49 = phi i32 [ %23, %27 ], [ %41, %39 ]
  %50 = phi i32 [ %22, %27 ], [ %40, %39 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !6385, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 %25, metadata !6372, metadata !DIExpression()), !dbg !6386
  %51 = add i32 %24, %11, !dbg !6444
  call void @llvm.dbg.value(metadata !DIArgList(i32 %24, i32 %11), metadata !6375, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6386
  call void @llvm.dbg.value(metadata !DIArgList(i32 poison, i32 %11), metadata !6376, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_plus, DW_OP_stack_value)), !dbg !6386
  %52 = mul i32 %51, 100, !dbg !6445
  %53 = udiv i32 %52, %2, !dbg !6446
  tail call void @bl_fota_update_progress(i32 noundef 3, i32 noundef %53) #25, !dbg !6447
  call void @llvm.dbg.value(metadata i32 %23, metadata !6382, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.value(metadata i32 poison, metadata !6376, metadata !DIExpression()), !dbg !6386
  %54 = icmp ugt i32 %49, %9, !dbg !6399
  br i1 %54, label %55, label %21, !dbg !6402, !llvm.loop !6448

55:                                               ; preds = %48, %0, %45
  %56 = phi i32 [ 4, %45 ], [ 0, %0 ], [ 0, %48 ], !dbg !6386
  ret i32 %56, !dbg !6450
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_fota_integrity_check() local_unnamed_addr #0 !dbg !6451 {
  %1 = alloca [20 x i8], align 1
  %2 = alloca %struct.mbedtls_sha1_context, align 4
  %3 = alloca [20 x i8], align 1
  %4 = getelementptr inbounds [20 x i8], [20 x i8]* %1, i32 0, i32 0, !dbg !6476
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #23, !dbg !6476
  call void @llvm.dbg.declare(metadata [20 x i8]* %1, metadata !6453, metadata !DIExpression()), !dbg !6477
  %5 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 5), align 4, !dbg !6478
  call void @llvm.dbg.value(metadata i32 %5, metadata !6455, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i32 %5, metadata !6456, metadata !DIExpression()), !dbg !6479
  %6 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 2), align 4, !dbg !6480
  call void @llvm.dbg.value(metadata i32 %6, metadata !6457, metadata !DIExpression()), !dbg !6479
  %7 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 0), align 4, !dbg !6481
  call void @llvm.dbg.value(metadata i32 %7, metadata !6458, metadata !DIExpression()), !dbg !6479
  %8 = bitcast %struct.mbedtls_sha1_context* %2 to i8*, !dbg !6482
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %8) #23, !dbg !6482
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha1_context* %2, metadata !6460, metadata !DIExpression()), !dbg !6483
  %9 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i32 0, i32 0, !dbg !6484
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %9) #23, !dbg !6484
  call void @llvm.dbg.declare(metadata [20 x i8]* %3, metadata !6469, metadata !DIExpression()), !dbg !6485
  call void @llvm.dbg.value(metadata i32 0, metadata !6474, metadata !DIExpression()), !dbg !6479
  %10 = tail call i32 @bl_custom_fota_start_address() #24, !dbg !6486
  %11 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 4), align 4, !dbg !6487
  %12 = add i32 %11, %10, !dbg !6488
  %13 = tail call i32 @bl_custom_rom_baseaddr() #24, !dbg !6489
  %14 = sub i32 %12, %13, !dbg !6490
  call void @llvm.dbg.value(metadata i32 %14, metadata !6475, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i8* bitcast ([512 x i32]* @page_buffer to i8*), metadata !6473, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i8* %4, metadata !6472, metadata !DIExpression()), !dbg !6479
  call void @mbedtls_sha1_init(%struct.mbedtls_sha1_context* noundef nonnull %2) #24, !dbg !6491
  %15 = call i32 @bl_custom_fota_start_address() #24, !dbg !6492
  %16 = add i32 %15, %7, !dbg !6493
  %17 = call i32 @bl_custom_rom_baseaddr() #24, !dbg !6494
  %18 = sub i32 %16, %17, !dbg !6495
  call void @llvm.dbg.value(metadata i32 %18, metadata !6459, metadata !DIExpression()), !dbg !6479
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i32 0, i32 0)) #24, !dbg !6496
  call void @mbedtls_sha1_starts(%struct.mbedtls_sha1_context* noundef nonnull %2) #24, !dbg !6497
  br label %19, !dbg !6498

19:                                               ; preds = %37, %0
  %20 = phi i32 [ %18, %0 ], [ %38, %37 ], !dbg !6479
  %21 = phi i32 [ %6, %0 ], [ %39, %37 ], !dbg !6479
  call void @llvm.dbg.value(metadata i32 0, metadata !6474, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i32 %21, metadata !6457, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i32 %20, metadata !6459, metadata !DIExpression()), !dbg !6479
  %22 = icmp eq i32 %21, 0, !dbg !6499
  br i1 %22, label %43, label %23, !dbg !6498

23:                                               ; preds = %19
  %24 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 2), align 4, !dbg !6500
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i32 noundef %20, i32 noundef %21, i32 noundef %24) #24, !dbg !6502
  %25 = icmp ugt i32 %21, 511, !dbg !6503
  br i1 %25, label %26, label %33, !dbg !6505

26:                                               ; preds = %23
  %27 = call i32 @hal_flash_read(i32 noundef %20, i8* noundef bitcast ([512 x i32]* @page_buffer to i8*), i32 noundef 512) #24, !dbg !6506
  call void @llvm.dbg.value(metadata i32 %27, metadata !6474, metadata !DIExpression()), !dbg !6479
  %28 = icmp eq i32 %27, 0, !dbg !6508
  br i1 %28, label %29, label %30, !dbg !6510

29:                                               ; preds = %26
  call void @mbedtls_sha1_update(%struct.mbedtls_sha1_context* noundef nonnull %2, i8* noundef bitcast ([512 x i32]* @page_buffer to i8*), i32 noundef 512) #24, !dbg !6511
  br label %30, !dbg !6513

30:                                               ; preds = %29, %26
  %31 = add i32 %21, -512, !dbg !6514
  call void @llvm.dbg.value(metadata i32 %31, metadata !6457, metadata !DIExpression()), !dbg !6479
  %32 = add i32 %20, 512, !dbg !6515
  call void @llvm.dbg.value(metadata i32 %32, metadata !6459, metadata !DIExpression()), !dbg !6479
  br label %37, !dbg !6516

33:                                               ; preds = %23
  %34 = call i32 @hal_flash_read(i32 noundef %20, i8* noundef bitcast ([512 x i32]* @page_buffer to i8*), i32 noundef %21) #24, !dbg !6517
  call void @llvm.dbg.value(metadata i32 %34, metadata !6474, metadata !DIExpression()), !dbg !6479
  %35 = icmp eq i32 %34, 0, !dbg !6519
  br i1 %35, label %36, label %42, !dbg !6521

36:                                               ; preds = %33
  call void @mbedtls_sha1_update(%struct.mbedtls_sha1_context* noundef nonnull %2, i8* noundef bitcast ([512 x i32]* @page_buffer to i8*), i32 noundef %21) #24, !dbg !6522
  br label %37, !dbg !6524

37:                                               ; preds = %36, %30
  %38 = phi i32 [ %32, %30 ], [ %20, %36 ], !dbg !6479
  %39 = phi i32 [ %31, %30 ], [ 0, %36 ], !dbg !6525
  %40 = phi i32 [ %27, %30 ], [ 0, %36 ], !dbg !6525
  call void @llvm.dbg.value(metadata i32 %40, metadata !6474, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i32 %39, metadata !6457, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i32 %38, metadata !6459, metadata !DIExpression()), !dbg !6479
  %41 = icmp eq i32 %40, 0, !dbg !6526
  br i1 %41, label %19, label %42, !dbg !6528, !llvm.loop !6529

42:                                               ; preds = %33, %37
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.bl_fota_integrity_check, i32 0, i32 0), i32 noundef 530) #24, !dbg !6531
  call void @llvm.dbg.value(metadata i32 undef, metadata !6474, metadata !DIExpression()), !dbg !6479
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i32 0, i32 0)) #24, !dbg !6533
  call void @mbedtls_sha1_finish(%struct.mbedtls_sha1_context* noundef nonnull %2, i8* noundef nonnull %9) #24, !dbg !6534
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.bl_fota_integrity_check, i32 0, i32 0), i32 noundef 546) #24, !dbg !6535
  br label %79, !dbg !6538

43:                                               ; preds = %19
  call void @llvm.dbg.value(metadata i32 undef, metadata !6474, metadata !DIExpression()), !dbg !6479
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i32 0, i32 0)) #24, !dbg !6533
  call void @mbedtls_sha1_finish(%struct.mbedtls_sha1_context* noundef nonnull %2, i8* noundef nonnull %9) #24, !dbg !6534
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0)) #24, !dbg !6539
  call void @llvm.dbg.value(metadata i32 0, metadata !6471, metadata !DIExpression()), !dbg !6479
  br label %44, !dbg !6540

44:                                               ; preds = %43, %44
  %45 = phi i32 [ 0, %43 ], [ %49, %44 ]
  call void @llvm.dbg.value(metadata i32 %45, metadata !6471, metadata !DIExpression()), !dbg !6479
  %46 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i32 0, i32 %45, !dbg !6542
  %47 = load i8, i8* %46, align 1, !dbg !6542
  %48 = zext i8 %47 to i32, !dbg !6542
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27.134, i32 0, i32 0), i32 noundef %48) #24, !dbg !6545
  %49 = add nuw nsw i32 %45, 1, !dbg !6546
  call void @llvm.dbg.value(metadata i32 %49, metadata !6471, metadata !DIExpression()), !dbg !6479
  %50 = icmp eq i32 %49, 20, !dbg !6547
  br i1 %50, label %51, label %44, !dbg !6540, !llvm.loop !6548

51:                                               ; preds = %44
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0)) #24, !dbg !6550
  %52 = icmp eq i32 %5, 20, !dbg !6551
  br i1 %52, label %54, label %53, !dbg !6553

53:                                               ; preds = %51
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i32 noundef %5) #24, !dbg !6554
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.bl_fota_integrity_check, i32 0, i32 0), i32 noundef 561) #24, !dbg !6556
  br label %79, !dbg !6557

54:                                               ; preds = %51
  %55 = call i32 @hal_flash_read(i32 noundef %14, i8* noundef nonnull %4, i32 noundef 20) #24, !dbg !6558
  call void @llvm.dbg.value(metadata i32 %55, metadata !6474, metadata !DIExpression()), !dbg !6479
  %56 = icmp eq i32 %55, 0, !dbg !6559
  br i1 %56, label %58, label %57, !dbg !6561

57:                                               ; preds = %54
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.30, i32 0, i32 0), i32 noundef %55) #24, !dbg !6562
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.bl_fota_integrity_check, i32 0, i32 0), i32 noundef 583) #24, !dbg !6564
  br label %79, !dbg !6565

58:                                               ; preds = %54
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i32 0, i32 0)) #24, !dbg !6566
  call void @llvm.dbg.value(metadata i32 0, metadata !6471, metadata !DIExpression()), !dbg !6479
  br label %59, !dbg !6567

59:                                               ; preds = %58, %59
  %60 = phi i32 [ 0, %58 ], [ %64, %59 ]
  call void @llvm.dbg.value(metadata i32 %60, metadata !6471, metadata !DIExpression()), !dbg !6479
  %61 = getelementptr inbounds [20 x i8], [20 x i8]* %1, i32 0, i32 %60, !dbg !6569
  %62 = load i8, i8* %61, align 1, !dbg !6569
  %63 = zext i8 %62 to i32, !dbg !6569
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27.134, i32 0, i32 0), i32 noundef %63) #24, !dbg !6572
  %64 = add nuw nsw i32 %60, 1, !dbg !6573
  call void @llvm.dbg.value(metadata i32 %64, metadata !6471, metadata !DIExpression()), !dbg !6479
  %65 = icmp eq i32 %64, 20, !dbg !6574
  br i1 %65, label %66, label %59, !dbg !6567, !llvm.loop !6575

66:                                               ; preds = %59
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i32 0, i32 0)) #24, !dbg !6577
  call void @llvm.dbg.value(metadata i32 0, metadata !6471, metadata !DIExpression()), !dbg !6479
  br label %70, !dbg !6578

67:                                               ; preds = %70
  %68 = add nuw nsw i32 %71, 1, !dbg !6580
  call void @llvm.dbg.value(metadata i32 %68, metadata !6471, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.value(metadata i32 %71, metadata !6471, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6479
  %69 = icmp eq i32 %68, 20, !dbg !6582
  br i1 %69, label %78, label %70, !dbg !6578, !llvm.loop !6583

70:                                               ; preds = %66, %67
  %71 = phi i32 [ 0, %66 ], [ %68, %67 ]
  call void @llvm.dbg.value(metadata i32 %71, metadata !6471, metadata !DIExpression()), !dbg !6479
  %72 = getelementptr inbounds [20 x i8], [20 x i8]* %1, i32 0, i32 %71, !dbg !6585
  %73 = load i8, i8* %72, align 1, !dbg !6585
  %74 = getelementptr inbounds [20 x i8], [20 x i8]* %3, i32 0, i32 %71, !dbg !6588
  %75 = load i8, i8* %74, align 1, !dbg !6588
  %76 = icmp eq i8 %73, %75, !dbg !6589
  call void @llvm.dbg.value(metadata i32 %71, metadata !6471, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6479
  br i1 %76, label %67, label %77, !dbg !6590

77:                                               ; preds = %70
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i32 0, i32 0)) #24, !dbg !6591
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__FUNCTION__.bl_fota_integrity_check, i32 0, i32 0), i32 noundef 598) #24, !dbg !6593
  br label %79, !dbg !6594

78:                                               ; preds = %67
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i32 0, i32 0)) #24, !dbg !6595
  br label %79, !dbg !6596

79:                                               ; preds = %78, %77, %57, %53, %42
  %80 = phi i32 [ 5, %42 ], [ 5, %53 ], [ 5, %57 ], [ 6, %77 ], [ 0, %78 ], !dbg !6479
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %9) #23, !dbg !6597
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %8) #23, !dbg !6597
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #23, !dbg !6597
  ret i32 %80, !dbg !6597
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_fota_load_and_check_fota_header() local_unnamed_addr #0 !dbg !6598 {
  call void @llvm.dbg.value(metadata i32 40, metadata !6600, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.value(metadata i32 0, metadata !6602, metadata !DIExpression()), !dbg !6604
  %1 = tail call i32 @bl_custom_fota_start_address() #24, !dbg !6605
  %2 = tail call i32 @bl_custom_rom_baseaddr() #24, !dbg !6606
  %3 = sub i32 %1, %2, !dbg !6607
  call void @llvm.dbg.value(metadata i32 %3, metadata !6603, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.value(metadata i8* bitcast (%struct.bl_fota_header_t* @fota_head_buf to i8*), metadata !6601, metadata !DIExpression()), !dbg !6604
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i32 0, i32 0)) #24, !dbg !6608
  %4 = tail call i32 @hal_flash_read(i32 noundef %3, i8* noundef bitcast (%struct.bl_fota_header_t* @fota_head_buf to i8*), i32 noundef 40) #24, !dbg !6609
  call void @llvm.dbg.value(metadata i32 %4, metadata !6602, metadata !DIExpression()), !dbg !6604
  %5 = icmp eq i32 %4, 0, !dbg !6610
  br i1 %5, label %7, label %6, !dbg !6612

6:                                                ; preds = %0
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.34, i32 0, i32 0), i32 noundef %4) #24, !dbg !6613
  br label %19, !dbg !6615

7:                                                ; preds = %0
  %8 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 0), align 4, !dbg !6616
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.35, i32 0, i32 0), i32 noundef %8) #24, !dbg !6617
  %9 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 2), align 4, !dbg !6618
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.36, i32 0, i32 0), i32 noundef %9) #24, !dbg !6619
  %10 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 0), align 4, !dbg !6620
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.37, i32 0, i32 0), i32 noundef %10) #24, !dbg !6621
  %11 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 1), align 4, !dbg !6622
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([53 x i8], [53 x i8]* @.str.38.135, i32 0, i32 0), i32 noundef %11) #24, !dbg !6623
  %12 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 5), align 4, !dbg !6624
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef %12) #24, !dbg !6625
  %13 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 4), align 4, !dbg !6626
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.40, i32 0, i32 0), i32 noundef %13) #24, !dbg !6627
  %14 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 6), align 4, !dbg !6628
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.41, i32 0, i32 0), i32 noundef %14) #24, !dbg !6629
  %15 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 0), align 4, !dbg !6630
  %16 = and i32 %15, 16777215, !dbg !6630
  %17 = icmp eq i32 %16, 5066061, !dbg !6632
  br i1 %17, label %22, label %18, !dbg !6633

18:                                               ; preds = %7
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i32 0, i32 0)) #24, !dbg !6634
  br label %19, !dbg !6636

19:                                               ; preds = %6, %18
  %20 = phi i32 [ 665, %18 ], [ 648, %6 ]
  %21 = phi i32 [ 2, %18 ], [ 1, %6 ]
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @__FUNCTION__.bl_fota_load_and_check_fota_header, i32 0, i32 0), i32 noundef %20) #24, !dbg !6604
  br label %22, !dbg !6637

22:                                               ; preds = %19, %7
  %23 = phi i32 [ 0, %7 ], [ %21, %19 ], !dbg !6604
  ret i32 %23, !dbg !6637
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_fota_update_main() local_unnamed_addr #0 !dbg !6638 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6640, metadata !DIExpression()), !dbg !6641
  store i32 0, i32* @lzma_alloc_count, align 4, !dbg !6642
  %1 = tail call zeroext i1 @bl_fota_is_updating() #25, !dbg !6643
  br i1 %1, label %2, label %3, !dbg !6647

2:                                                ; preds = %0
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i32 0, i32 0)) #24, !dbg !6648
  call void @llvm.dbg.value(metadata i32 %4, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %6, !dbg !6650

3:                                                ; preds = %0
  %4 = tail call i32 @bl_fota_write_marker() #25, !dbg !6651
  call void @llvm.dbg.value(metadata i32 %4, metadata !6640, metadata !DIExpression()), !dbg !6641
  %5 = icmp eq i32 %4, 0, !dbg !6653
  br i1 %5, label %6, label %12, !dbg !6650

6:                                                ; preds = %3, %2
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.44, i32 0, i32 0)) #24, !dbg !6655
  %7 = tail call i32 @bl_fota_load_and_check_fota_header() #25, !dbg !6657
  call void @llvm.dbg.value(metadata i32 %7, metadata !6640, metadata !DIExpression()), !dbg !6641
  %8 = icmp eq i32 %7, 0, !dbg !6658
  br i1 %8, label %9, label %12, !dbg !6660

9:                                                ; preds = %6
  tail call void @bl_fota_update_progress(i32 noundef 2, i32 noundef 0) #25, !dbg !6661
  %10 = tail call i32 @bl_fota_integrity_check() #25, !dbg !6663
  call void @llvm.dbg.value(metadata i32 %10, metadata !6640, metadata !DIExpression()), !dbg !6641
  %11 = icmp eq i32 %10, 0, !dbg !6664
  br i1 %11, label %15, label %12, !dbg !6664

12:                                               ; preds = %3, %6, %9
  %13 = phi i32 [ %10, %9 ], [ %7, %6 ], [ %4, %3 ]
  %14 = tail call i32 @bl_fota_write_update_status(i32 noundef %13) #25, !dbg !6665
  br label %29, !dbg !6668

15:                                               ; preds = %9
  tail call void @bl_fota_update_progress(i32 noundef 3, i32 noundef 0) #25, !dbg !6669
  %16 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 6), align 4, !dbg !6672
  %17 = icmp eq i32 %16, 1, !dbg !6674
  br i1 %17, label %18, label %20, !dbg !6675

18:                                               ; preds = %15
  %19 = tail call i32 @bl_fota_compress_update(i32 noundef 0) #25, !dbg !6676
  call void @llvm.dbg.value(metadata i32 %19, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %22, !dbg !6678

20:                                               ; preds = %15
  %21 = tail call i32 @bl_fota_do_update() #25, !dbg !6679
  call void @llvm.dbg.value(metadata i32 %21, metadata !6640, metadata !DIExpression()), !dbg !6641
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi i32 [ %19, %18 ], [ %21, %20 ], !dbg !6681
  call void @llvm.dbg.value(metadata i32 %23, metadata !6640, metadata !DIExpression()), !dbg !6641
  %24 = icmp eq i32 %23, 0, !dbg !6682
  br i1 %24, label %27, label %25, !dbg !6684

25:                                               ; preds = %22
  %26 = load i32, i32* getelementptr inbounds (%struct.bl_fota_header_t, %struct.bl_fota_header_t* @fota_head_buf, i32 0, i32 2, i32 0, i32 6), align 4, !dbg !6685
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.45, i32 0, i32 0), i32 noundef %26) #24, !dbg !6687
  br label %29, !dbg !6688

27:                                               ; preds = %22
  call void @llvm.dbg.value(metadata i32 0, metadata !6640, metadata !DIExpression()), !dbg !6641
  tail call void @bl_fota_update_progress(i32 noundef 4, i32 noundef 50) #25, !dbg !6689
  %28 = tail call i32 @bl_fota_write_update_status(i32 noundef 0) #25, !dbg !6692
  tail call void @bl_fota_update_progress(i32 noundef 4, i32 noundef 100) #25, !dbg !6693
  br label %32, !dbg !6696

29:                                               ; preds = %25, %12
  %30 = phi i32 [ %13, %12 ], [ %23, %25 ]
  call void @llvm.dbg.value(metadata i32 0, metadata !6640, metadata !DIExpression()), !dbg !6641
  %31 = tail call i32 @bl_fota_write_update_status(i32 noundef %30) #25, !dbg !6692
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.46, i32 0, i32 0)) #24, !dbg !6697
  br label %32

32:                                               ; preds = %29, %27
  %33 = phi i32 [ %30, %29 ], [ 0, %27 ]
  %34 = tail call i32 @hal_wdt_software_reset() #24, !dbg !6699
  ret i32 %33, !dbg !6700
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @bl_fota_is_updating() local_unnamed_addr #0 !dbg !6701 {
  %1 = tail call fastcc zeroext i1 @bl_fota_check_updating_marker() #25, !dbg !6704
  br i1 %1, label %2, label %3, !dbg !6706

2:                                                ; preds = %0
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.48, i32 0, i32 0)) #24, !dbg !6707
  br label %3, !dbg !6709

3:                                                ; preds = %0, %2
  ret i1 %1, !dbg !6710
}

; Function Attrs: noinline nounwind optsize
define internal fastcc zeroext i1 @bl_fota_check_updating_marker() unnamed_addr #0 !dbg !6711 {
  %1 = alloca %struct.bl_fota_update_info_t, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !6713, metadata !DIExpression()), !dbg !6717
  call void @llvm.dbg.value(metadata i8 1, metadata !6715, metadata !DIExpression()), !dbg !6717
  %2 = bitcast %struct.bl_fota_update_info_t* %1 to i8*, !dbg !6718
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %2) #23, !dbg !6718
  call void @llvm.dbg.declare(metadata %struct.bl_fota_update_info_t* %1, metadata !6716, metadata !DIExpression()), !dbg !6719
  %3 = call i32 @bl_fota_read_update_info(i8* noundef nonnull %2, i32 noundef 64) #25, !dbg !6720
  call void @llvm.dbg.value(metadata i32 %3, metadata !6713, metadata !DIExpression()), !dbg !6717
  %4 = icmp eq i32 %3, 0, !dbg !6721
  br i1 %4, label %5, label %8, !dbg !6723

5:                                                ; preds = %0
  %6 = getelementptr inbounds %struct.bl_fota_update_info_t, %struct.bl_fota_update_info_t* %1, i32 0, i32 4, i32 0
  %7 = bitcast i8* %6 to i32*
  call void @llvm.dbg.value(metadata i8 poison, metadata !6715, metadata !DIExpression()), !dbg !6717
  call void @llvm.dbg.value(metadata i32 0, metadata !6714, metadata !DIExpression()), !dbg !6717
  br label %9, !dbg !6724

8:                                                ; preds = %0
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @__FUNCTION__.bl_fota_check_updating_marker, i32 0, i32 0), i32 noundef 810) #24, !dbg !6726
  br label %18, !dbg !6728

9:                                                ; preds = %5, %9
  %10 = phi i1 [ true, %5 ], [ %15, %9 ]
  %11 = phi i32 [ 0, %5 ], [ %16, %9 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !6714, metadata !DIExpression()), !dbg !6717
  %12 = getelementptr inbounds i32, i32* %7, i32 %11, !dbg !6729
  %13 = load i32, i32* %12, align 4, !dbg !6733
  %14 = icmp eq i32 %13, 1414419782, !dbg !6734
  %15 = select i1 %14, i1 %10, i1 false, !dbg !6735
  call void @llvm.dbg.value(metadata i8 poison, metadata !6715, metadata !DIExpression()), !dbg !6717
  %16 = add nuw nsw i32 %11, 1, !dbg !6736
  call void @llvm.dbg.value(metadata i32 %16, metadata !6714, metadata !DIExpression()), !dbg !6717
  %17 = icmp eq i32 %16, 8, !dbg !6737
  br i1 %17, label %18, label %9, !dbg !6724, !llvm.loop !6738

18:                                               ; preds = %9, %8
  %19 = phi i1 [ false, %8 ], [ %15, %9 ], !dbg !6717
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %2) #23, !dbg !6740
  ret i1 %19, !dbg !6740
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @bl_fota_read_update_info(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6741 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6743, metadata !DIExpression()), !dbg !6747
  call void @llvm.dbg.value(metadata i32 %1, metadata !6744, metadata !DIExpression()), !dbg !6747
  call void @llvm.dbg.value(metadata i32 0, metadata !6745, metadata !DIExpression()), !dbg !6747
  %3 = tail call i32 @bl_custom_fota_start_address() #24, !dbg !6748
  %4 = tail call i32 @bl_custom_fota_size() #24, !dbg !6749
  call void @llvm.dbg.value(metadata i32 undef, metadata !6746, metadata !DIExpression()), !dbg !6747
  %5 = tail call i32 @bl_custom_rom_baseaddr() #24, !dbg !6750
  %6 = add i32 %3, -512, !dbg !6751
  %7 = add i32 %6, %4, !dbg !6752
  %8 = sub i32 %7, %5, !dbg !6753
  call void @llvm.dbg.value(metadata i32 %8, metadata !6746, metadata !DIExpression()), !dbg !6747
  %9 = tail call i32 @hal_flash_read(i32 noundef %8, i8* noundef %0, i32 noundef %1) #24, !dbg !6754
  call void @llvm.dbg.value(metadata i32 %9, metadata !6745, metadata !DIExpression()), !dbg !6747
  %10 = icmp eq i32 %9, 0, !dbg !6755
  br i1 %10, label %12, label %11, !dbg !6757

11:                                               ; preds = %2
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__FUNCTION__.bl_fota_read_update_info, i32 0, i32 0), i32 noundef 789) #24, !dbg !6758
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20, i32 0, i32 0), i32 noundef %9) #24, !dbg !6760
  br label %13, !dbg !6761

12:                                               ; preds = %2
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.47, i32 0, i32 0), i32 noundef %8) #24, !dbg !6762
  br label %13, !dbg !6763

13:                                               ; preds = %12, %11
  %14 = phi i32 [ 7, %11 ], [ 0, %12 ], !dbg !6747
  ret i32 %14, !dbg !6764
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @bl_fota_is_triggered() local_unnamed_addr #0 !dbg !6765 {
  %1 = alloca %struct.hal_wdt_config_t, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !6767, metadata !DIExpression()), !dbg !6774
  %2 = bitcast %struct.hal_wdt_config_t* %1 to i8*, !dbg !6775
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #23, !dbg !6775
  call void @llvm.dbg.declare(metadata %struct.hal_wdt_config_t* %1, metadata !6768, metadata !DIExpression()), !dbg !6776
  %3 = call i32 @bl_fota_read_update_info(i8* noundef nonnull %2, i32 noundef 8) #25, !dbg !6777
  call void @llvm.dbg.value(metadata i32 %3, metadata !6767, metadata !DIExpression()), !dbg !6774
  %4 = icmp eq i32 %3, 0, !dbg !6778
  br i1 %4, label %6, label %5, !dbg !6780

5:                                                ; preds = %0
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2.116, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.bl_fota_is_triggered, i32 0, i32 0), i32 noundef 857) #24, !dbg !6781
  br label %12, !dbg !6783

6:                                                ; preds = %0
  %7 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %1, i32 0, i32 0, !dbg !6784
  %8 = load i32, i32* %7, align 4, !dbg !6784
  %9 = and i32 %8, 16777215, !dbg !6786
  %10 = icmp eq i32 %9, 5066061, !dbg !6787
  br i1 %10, label %12, label %11, !dbg !6788

11:                                               ; preds = %6
  call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i32 0, i32 0), i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__FUNCTION__.bl_fota_is_triggered, i32 0, i32 0), i32 noundef 862) #24, !dbg !6789
  br label %12, !dbg !6791

12:                                               ; preds = %6, %11, %5
  %13 = phi i1 [ false, %5 ], [ false, %11 ], [ true, %6 ], !dbg !6774
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #23, !dbg !6792
  ret i1 %13, !dbg !6792
}

; Function Attrs: noinline nounwind optsize
define dso_local void @bl_fota_process() local_unnamed_addr #0 !dbg !6793 {
  %1 = tail call zeroext i1 @bl_fota_is_triggered() #25, !dbg !6798
  br i1 %1, label %4, label %2, !dbg !6799

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @bl_fota_is_updating() #25, !dbg !6800
  br i1 %3, label %4, label %11, !dbg !6801

4:                                                ; preds = %2, %0
  %5 = tail call i32 @hal_wdt_feed(i32 noundef -559035650) #24, !dbg !6802
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.50, i32 0, i32 0)) #24, !dbg !6803
  %6 = tail call i32 @bl_fota_update_main() #25, !dbg !6804
  call void @llvm.dbg.value(metadata i32 %6, metadata !6795, metadata !DIExpression()), !dbg !6805
  %7 = icmp eq i32 %6, 0, !dbg !6806
  br i1 %7, label %8, label %9, !dbg !6808

8:                                                ; preds = %4
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i32 0, i32 0)) #24, !dbg !6809
  br label %11, !dbg !6811

9:                                                ; preds = %4
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i32 0, i32 0), i32 noundef %6) #24, !dbg !6812
  br label %10, !dbg !6814

10:                                               ; preds = %10, %9
  br label %10, !dbg !6814, !llvm.loop !6815

11:                                               ; preds = %8, %2
  ret void, !dbg !6817
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #12 !dbg !6818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6820, metadata !DIExpression()), !dbg !6822
  %2 = shl i32 %0, 20, !dbg !6823
  store volatile i32 %2, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6824
  %3 = load volatile i32, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6825
  %4 = or i32 %3, 65536, !dbg !6826
  store volatile i32 %4, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6827
  br label %5, !dbg !6828

5:                                                ; preds = %5, %1
  %6 = load volatile i32, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6829
  %7 = and i32 %6, 1, !dbg !6830
  %8 = icmp eq i32 %7, 0, !dbg !6831
  br i1 %8, label %5, label %9, !dbg !6828, !llvm.loop !6832

9:                                                ; preds = %5
  %10 = load volatile i32, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6834
  %11 = lshr i32 %10, 8, !dbg !6835
  %12 = and i32 %11, 255, !dbg !6835
  call void @llvm.dbg.value(metadata i32 %12, metadata !6821, metadata !DIExpression()), !dbg !6822
  ret i32 %12, !dbg !6836
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !6837 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6839, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i32 %1, metadata !6840, metadata !DIExpression()), !dbg !6841
  call void @llvm.dbg.value(metadata i32 %1, metadata !6840, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !6841
  %3 = shl i32 %1, 24, !dbg !6842
  %4 = shl i32 %0, 20, !dbg !6843
  %5 = or i32 %4, %3, !dbg !6844
  %6 = or i32 %5, 131072, !dbg !6844
  store volatile i32 %6, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6845
  %7 = load volatile i32, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6846
  %8 = or i32 %7, 65536, !dbg !6847
  store volatile i32 %8, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6848
  br label %9, !dbg !6849

9:                                                ; preds = %9, %2
  %10 = load volatile i32, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6850
  %11 = and i32 %10, 1, !dbg !6851
  %12 = icmp eq i32 %11, 0, !dbg !6852
  br i1 %12, label %9, label %13, !dbg !6849, !llvm.loop !6853

13:                                               ; preds = %9
  ret void, !dbg !6855
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #8 !dbg !6856 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !6857
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !6858
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !6859
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !6860
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !6861
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !6862
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !6863
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !6864
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !6865
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !6866
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !6867
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !6868
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !6869
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !6870
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !6871
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !6872
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !6873
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !6874
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !6875
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !6876
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !6877
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !6878
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !6879
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !6880
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !6881
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !6882
  ret void, !dbg !6883
}

; Function Attrs: noinline nounwind optsize
define dso_local void @dump_EMI_Setting() local_unnamed_addr #0 !dbg !6884 {
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.138, i32 0, i32 0)) #24, !dbg !6885
  %1 = load volatile i32, i32* inttoptr (i32 -1610284960 to i32*), align 32, !dbg !6886
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1.139, i32 0, i32 0), i32 noundef %1) #24, !dbg !6887
  %2 = load volatile i32, i32* inttoptr (i32 -1610284944 to i32*), align 16, !dbg !6888
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2.140, i32 0, i32 0), i32 noundef %2) #24, !dbg !6889
  %3 = load volatile i32, i32* inttoptr (i32 -1610284920 to i32*), align 8, !dbg !6890
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3.141, i32 0, i32 0), i32 noundef %3) #24, !dbg !6891
  %4 = load volatile i32, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !6892
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4.142, i32 0, i32 0), i32 noundef %4) #24, !dbg !6893
  %5 = load volatile i32, i32* inttoptr (i32 -1610284848 to i32*), align 16, !dbg !6894
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5.143, i32 0, i32 0), i32 noundef %5) #24, !dbg !6895
  %6 = load volatile i32, i32* inttoptr (i32 -1610284840 to i32*), align 8, !dbg !6896
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6.144, i32 0, i32 0), i32 noundef %6) #24, !dbg !6897
  %7 = load volatile i32, i32* inttoptr (i32 -1610284832 to i32*), align 32, !dbg !6898
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7.145, i32 0, i32 0), i32 noundef %7) #24, !dbg !6899
  %8 = load volatile i32, i32* inttoptr (i32 -1610284808 to i32*), align 8, !dbg !6900
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8.146, i32 0, i32 0), i32 noundef %8) #24, !dbg !6901
  %9 = load volatile i32, i32* inttoptr (i32 -1610284800 to i32*), align 256, !dbg !6902
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9.147, i32 0, i32 0), i32 noundef %9) #24, !dbg !6903
  %10 = load volatile i32, i32* inttoptr (i32 -1610284792 to i32*), align 8, !dbg !6904
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10.148, i32 0, i32 0), i32 noundef %10) #24, !dbg !6905
  %11 = load volatile i32, i32* inttoptr (i32 -1610284784 to i32*), align 16, !dbg !6906
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11.149, i32 0, i32 0), i32 noundef %11) #24, !dbg !6907
  %12 = load volatile i32, i32* inttoptr (i32 -1610284752 to i32*), align 16, !dbg !6908
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12.150, i32 0, i32 0), i32 noundef %12) #24, !dbg !6909
  %13 = load volatile i32, i32* inttoptr (i32 -1610284744 to i32*), align 8, !dbg !6910
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13.151, i32 0, i32 0), i32 noundef %13) #24, !dbg !6911
  %14 = load volatile i32, i32* inttoptr (i32 -1610284720 to i32*), align 16, !dbg !6912
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14.152, i32 0, i32 0), i32 noundef %14) #24, !dbg !6913
  %15 = load volatile i32, i32* inttoptr (i32 -1610284712 to i32*), align 8, !dbg !6914
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15.153, i32 0, i32 0), i32 noundef %15) #24, !dbg !6915
  %16 = load volatile i32, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6916
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16.154, i32 0, i32 0), i32 noundef %16) #24, !dbg !6917
  %17 = tail call i32 @__EMI_GetSR(i32 noundef 0) #25, !dbg !6918, !range !6919
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17.155, i32 0, i32 0), i32 noundef %17) #24, !dbg !6920
  %18 = tail call i32 @__EMI_GetSR(i32 noundef 1) #25, !dbg !6921, !range !6919
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18.156, i32 0, i32 0), i32 noundef %18) #24, !dbg !6922
  %19 = tail call i32 @__EMI_GetSR(i32 noundef 2) #25, !dbg !6923, !range !6919
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19.157, i32 0, i32 0), i32 noundef %19) #24, !dbg !6924
  %20 = tail call i32 @__EMI_GetSR(i32 noundef 4) #25, !dbg !6925, !range !6919
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20.158, i32 0, i32 0), i32 noundef %20) #24, !dbg !6926
  %21 = tail call i32 @__EMI_GetSR(i32 noundef 6) #25, !dbg !6927, !range !6919
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21.159, i32 0, i32 0), i32 noundef %21) #24, !dbg !6928
  ret void, !dbg !6929
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #12 !dbg !6930 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !6931
  store volatile i32 1, i32* inttoptr (i32 -1610284728 to i32*), align 8, !dbg !6932
  br label %1, !dbg !6933

1:                                                ; preds = %1, %0
  %2 = load volatile i32, i32* inttoptr (i32 -1610284728 to i32*), align 8, !dbg !6934
  %3 = and i32 %2, 2, !dbg !6935
  %4 = icmp eq i32 %3, 0, !dbg !6935
  br i1 %4, label %1, label %5, !dbg !6933, !llvm.loop !6936

5:                                                ; preds = %1
  store volatile i32 0, i32* inttoptr (i32 -1610284728 to i32*), align 8, !dbg !6938
  br label %6, !dbg !6939

6:                                                ; preds = %6, %5
  %7 = load volatile i32, i32* inttoptr (i32 -1610284728 to i32*), align 8, !dbg !6940
  %8 = and i32 %7, 2, !dbg !6941
  %9 = icmp eq i32 %8, 0, !dbg !6941
  br i1 %9, label %10, label %6, !dbg !6939, !llvm.loop !6942

10:                                               ; preds = %6
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !6944
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !6945
  br label %11, !dbg !6946

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6947
  %13 = and i32 %12, 1, !dbg !6948
  %14 = icmp eq i32 %13, 0, !dbg !6949
  br i1 %14, label %11, label %15, !dbg !6946, !llvm.loop !6950

15:                                               ; preds = %11
  store volatile i32 251854848, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6952
  store volatile i32 138608640, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6953
  br label %16, !dbg !6954

16:                                               ; preds = %16, %15
  %17 = load volatile i32, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !6955
  %18 = and i32 %17, 1, !dbg !6956
  %19 = icmp eq i32 %18, 0, !dbg !6957
  br i1 %19, label %16, label %20, !dbg !6954, !llvm.loop !6958

20:                                               ; preds = %16
  %21 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !6960
  %22 = icmp eq i32 %21, 9507, !dbg !6962
  br i1 %22, label %23, label %31, !dbg !6963

23:                                               ; preds = %20
  %24 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !6964
  %25 = and i32 %24, 15, !dbg !6967
  %26 = icmp eq i32 %25, 2, !dbg !6968
  %27 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !6969
  %28 = and i32 %27, -128, !dbg !6969
  %29 = select i1 %26, i32 1, i32 7
  %30 = or i32 %28, %29, !dbg !6969
  store volatile i32 %30, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !6969
  br label %31, !dbg !6970

31:                                               ; preds = %23, %20
  ret void, !dbg !6970
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #12 !dbg !6971 {
  store volatile i32 21553, i32* inttoptr (i32 -1610284688 to i32*), align 16, !dbg !6972
  store volatile i32 20489, i32* inttoptr (i32 -1610284680 to i32*), align 8, !dbg !6973
  store volatile i32 20550, i32* inttoptr (i32 -1610284672 to i32*), align 128, !dbg !6974
  ret i32 0, !dbg !6975
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #12 !dbg !6976 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !6982, metadata !DIExpression()), !dbg !6986
  call void @llvm.dbg.value(metadata i32 0, metadata !6980, metadata !DIExpression()), !dbg !6987
  call void @llvm.dbg.value(metadata i32 16384, metadata !6981, metadata !DIExpression()), !dbg !6987
  store volatile i32 0, i32* inttoptr (i32 -1610284288 to i32*), align 256, !dbg !6988
  call void @llvm.dbg.value(metadata i32 0, metadata !6984, metadata !DIExpression()), !dbg !6987
  br label %1, !dbg !6989

1:                                                ; preds = %0, %30
  %2 = phi i32 [ 0, %0 ], [ %31, %30 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6984, metadata !DIExpression()), !dbg !6987
  %3 = shl i32 %2, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !6983, metadata !DIExpression()), !dbg !6987
  br label %4, !dbg !6991

4:                                                ; preds = %1, %27
  %5 = phi i32 [ 0, %1 ], [ %28, %27 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !6983, metadata !DIExpression()), !dbg !6987
  call void @llvm.dbg.value(metadata i32 0, metadata !6985, metadata !DIExpression()), !dbg !6987
  %6 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %5
  br label %9, !dbg !6995

7:                                                ; preds = %22
  call void @llvm.dbg.value(metadata i32 undef, metadata !6985, metadata !DIExpression()), !dbg !6987
  %8 = icmp eq i32 %26, 2, !dbg !6999
  br i1 %8, label %27, label %9, !dbg !6995, !llvm.loop !7001

9:                                                ; preds = %4, %7
  %10 = phi i32 [ 0, %4 ], [ %26, %7 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !6985, metadata !DIExpression()), !dbg !6987
  store volatile i32 0, i32* inttoptr (i32 -1610284288 to i32*), align 256, !dbg !7003
  store volatile i32 63, i32* inttoptr (i32 -1610284280 to i32*), align 8, !dbg !7005
  %11 = load i32, i32* %6, align 4, !dbg !7006
  %12 = shl i32 %11, 16, !dbg !7007
  %13 = shl nuw nsw i32 %10, 13, !dbg !7008
  %14 = or i32 %13, %3, !dbg !7009
  %15 = or i32 %14, %12, !dbg !7010
  store volatile i32 %15, i32* inttoptr (i32 -1610284288 to i32*), align 256, !dbg !7011
  %16 = load volatile i32, i32* inttoptr (i32 -1610284288 to i32*), align 256, !dbg !7012
  %17 = or i32 %16, 805, !dbg !7012
  store volatile i32 %17, i32* inttoptr (i32 -1610284288 to i32*), align 256, !dbg !7012
  br label %18, !dbg !7013

18:                                               ; preds = %18, %9
  %19 = load volatile i32, i32* inttoptr (i32 -1610284264 to i32*), align 8, !dbg !7014
  %20 = and i32 %19, 2, !dbg !7015
  %21 = icmp eq i32 %20, 0, !dbg !7016
  br i1 %21, label %18, label %22, !dbg !7013, !llvm.loop !7017

22:                                               ; preds = %18
  %23 = load volatile i32, i32* inttoptr (i32 -1610284264 to i32*), align 8, !dbg !7019
  %24 = and i32 %23, 1, !dbg !7021
  %25 = icmp eq i32 %24, 0, !dbg !7022
  %26 = add nuw nsw i32 %10, 1, !dbg !7023
  call void @llvm.dbg.value(metadata i32 %26, metadata !6985, metadata !DIExpression()), !dbg !6987
  br i1 %25, label %7, label %33, !dbg !7024

27:                                               ; preds = %7
  %28 = add nuw nsw i32 %5, 1, !dbg !7025
  call void @llvm.dbg.value(metadata i32 %28, metadata !6983, metadata !DIExpression()), !dbg !6987
  %29 = icmp eq i32 %28, 2, !dbg !7026
  br i1 %29, label %30, label %4, !dbg !6991, !llvm.loop !7027

30:                                               ; preds = %27
  %31 = add nuw nsw i32 %2, 1, !dbg !7029
  call void @llvm.dbg.value(metadata i32 %31, metadata !6984, metadata !DIExpression()), !dbg !6987
  %32 = icmp eq i32 %31, 2, !dbg !7030
  br i1 %32, label %33, label %1, !dbg !6989, !llvm.loop !7031

33:                                               ; preds = %30, %22
  %34 = phi i32 [ -1, %22 ], [ 0, %30 ], !dbg !6987
  store volatile i32 0, i32* inttoptr (i32 -1610284288 to i32*), align 256, !dbg !6987
  ret i32 %34, !dbg !7033
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #12 !dbg !7034 {
  %1 = tail call i32 @TestCase_MBIST() #25, !dbg !7035
  %2 = icmp ne i32 %1, 0, !dbg !7037
  %3 = sext i1 %2 to i32, !dbg !7038
  ret i32 %3, !dbg !7039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #12 !dbg !7040 {
  call void @llvm.dbg.value(metadata i32 31, metadata !7042, metadata !DIExpression()), !dbg !7044
  call void @llvm.dbg.value(metadata i32 0, metadata !7043, metadata !DIExpression()), !dbg !7044
  store volatile i32 0, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7045
  store volatile i32 0, i32* inttoptr (i32 -1610284848 to i32*), align 16, !dbg !7046
  store volatile i32 0, i32* inttoptr (i32 -1610284840 to i32*), align 8, !dbg !7047
  store volatile i32 0, i32* inttoptr (i32 -1610284832 to i32*), align 32, !dbg !7048
  call void @llvm.dbg.value(metadata i32 31, metadata !7042, metadata !DIExpression()), !dbg !7044
  br label %4, !dbg !7049

1:                                                ; preds = %4
  %2 = add nsw i32 %5, -1, !dbg !7051
  call void @llvm.dbg.value(metadata i32 %2, metadata !7042, metadata !DIExpression()), !dbg !7044
  call void @llvm.dbg.value(metadata i32 %5, metadata !7042, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7044
  %3 = icmp eq i32 %5, 0, !dbg !7053
  br i1 %3, label %14, label %4, !dbg !7049, !llvm.loop !7054

4:                                                ; preds = %0, %1
  %5 = phi i32 [ 31, %0 ], [ %2, %1 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !7042, metadata !DIExpression()), !dbg !7044
  %6 = shl i32 %5, 24, !dbg !7056
  %7 = shl i32 %5, 16, !dbg !7058
  %8 = shl i32 %5, 8, !dbg !7059
  %9 = or i32 %7, %5, !dbg !7060
  %10 = or i32 %9, %6, !dbg !7061
  %11 = or i32 %10, %8, !dbg !7062
  store volatile i32 %11, i32* inttoptr (i32 -1610284840 to i32*), align 8, !dbg !7063
  store volatile i32 %11, i32* inttoptr (i32 -1610284848 to i32*), align 16, !dbg !7064
  %12 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #25, !dbg !7065
  %13 = icmp eq i32 %12, 0, !dbg !7067
  call void @llvm.dbg.value(metadata i32 %5, metadata !7042, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7044
  br i1 %13, label %22, label %1, !dbg !7068

14:                                               ; preds = %1, %14
  %15 = phi i32 [ %19, %14 ], [ 1, %1 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7043, metadata !DIExpression()), !dbg !7044
  %16 = shl nuw nsw i32 %15, 16, !dbg !7069
  store volatile i32 %16, i32* inttoptr (i32 -1610284832 to i32*), align 32, !dbg !7075
  %17 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #25, !dbg !7076
  %18 = icmp eq i32 %17, 0, !dbg !7078
  call void @llvm.dbg.value(metadata i32 %15, metadata !7043, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7044
  %19 = add nuw nsw i32 %15, 1
  %20 = icmp eq i32 %19, 32
  %21 = select i1 %18, i1 true, i1 %20, !dbg !7079
  call void @llvm.dbg.value(metadata i32 %19, metadata !7043, metadata !DIExpression()), !dbg !7044
  call void @llvm.dbg.value(metadata i32 %15, metadata !7043, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7044
  br i1 %21, label %22, label %14, !dbg !7079, !llvm.loop !7080

22:                                               ; preds = %4, %14
  ret void, !dbg !7083
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #12 !dbg !7084 {
  tail call void @EMI_PowerOn_Init() #25, !dbg !7087
  tail call void @__EMI_SetRegValfromCMCP() #25, !dbg !7088
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #25, !dbg !7089
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !7090
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #25, !dbg !7091
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !7092
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #25, !dbg !7093
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !7094
  ret i8 0, !dbg !7095
}

; Function Attrs: noinline nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #0 !dbg !7096 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !7099
  store volatile i32 %1, i32* inttoptr (i32 -1610284752 to i32*), align 16, !dbg !7100
  %2 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !7101
  store volatile i32 %2, i32* inttoptr (i32 -1610284744 to i32*), align 8, !dbg !7102
  %3 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !7103
  store volatile i32 %3, i32* inttoptr (i32 -1610284944 to i32*), align 16, !dbg !7104
  %4 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !7105
  store volatile i32 %4, i32* inttoptr (i32 -1610284920 to i32*), align 8, !dbg !7106
  %5 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !7107
  store volatile i32 %5, i32* inttoptr (i32 -1610284720 to i32*), align 16, !dbg !7108
  %6 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !7109
  store volatile i32 %6, i32* inttoptr (i32 -1610284712 to i32*), align 8, !dbg !7110
  %7 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !7111
  store volatile i32 %7, i32* inttoptr (i32 -1610284848 to i32*), align 16, !dbg !7112
  %8 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !7113
  store volatile i32 %8, i32* inttoptr (i32 -1610284840 to i32*), align 8, !dbg !7114
  %9 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !7115
  store volatile i32 %9, i32* inttoptr (i32 -1610284832 to i32*), align 32, !dbg !7116
  %10 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !7117
  store volatile i32 %10, i32* inttoptr (i32 -1610284808 to i32*), align 8, !dbg !7118
  %11 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !7119
  store volatile i32 %11, i32* inttoptr (i32 -1610284800 to i32*), align 256, !dbg !7120
  %12 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !7121
  store volatile i32 %12, i32* inttoptr (i32 -1610284792 to i32*), align 8, !dbg !7122
  %13 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !7123
  store volatile i32 %13, i32* inttoptr (i32 -1610284784 to i32*), align 16, !dbg !7124
  tail call void @__EMI_EnableDataAutoTracking() #25, !dbg !7125
  store volatile i32 806289408, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7126
  br label %14, !dbg !7127

14:                                               ; preds = %14, %0
  %15 = load volatile i32, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7128
  %16 = and i32 %15, 128, !dbg !7129
  %17 = icmp eq i32 %16, 0, !dbg !7129
  br i1 %17, label %14, label %18, !dbg !7127, !llvm.loop !7130

18:                                               ; preds = %14
  store volatile i32 1880031232, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7132
  br label %19, !dbg !7133

19:                                               ; preds = %19, %18
  %20 = load volatile i32, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7134
  %21 = and i32 %20, 128, !dbg !7135
  %22 = icmp eq i32 %21, 0, !dbg !7135
  br i1 %22, label %23, label %19, !dbg !7133, !llvm.loop !7136

23:                                               ; preds = %19
  store volatile i32 269418496, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7138
  %24 = tail call i32 @__EMI_EnableBandwidthLimiter() #25, !dbg !7139
  tail call void @dump_EMI_Setting() #25, !dbg !7140
  %25 = tail call zeroext i1 @memory_btmt_test() #24, !dbg !7141
  call void @llvm.dbg.value(metadata i1 %25, metadata !7098, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7142
  %26 = select i1 %25, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22.164, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23.165, i32 0, i32 0), !dbg !7143
  %27 = sext i1 %25 to i8, !dbg !7143
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef %26) #24, !dbg !7143
  ret i8 %27, !dbg !7145
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #11 !dbg !7146 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7151, metadata !DIExpression()), !dbg !7153
  %3 = bitcast i32* %2 to i8*, !dbg !7154
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !7154
  call void @llvm.dbg.declare(metadata i32* %2, metadata !7152, metadata !DIExpression()), !dbg !7155
  switch i32 %0, label %31 [
    i32 0, label %4
    i32 1, label %32
  ], !dbg !7156

4:                                                ; preds = %1, %4
  %5 = load volatile i32, i32* inttoptr (i32 -1610284960 to i32*), align 32, !dbg !7157
  %6 = and i32 %5, 1, !dbg !7160
  %7 = icmp eq i32 %6, 0, !dbg !7161
  br i1 %7, label %4, label %8, !dbg !7162, !llvm.loop !7163

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610284960 to i32*), align 32, !dbg !7165
  %10 = or i32 %9, 1792, !dbg !7166
  store volatile i32 %10, i32* inttoptr (i32 -1610284960 to i32*), align 32, !dbg !7167
  store volatile i32 0, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7168
  store volatile i32 806289408, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7169
  br label %11, !dbg !7170

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7171
  %13 = and i32 %12, 128, !dbg !7172
  %14 = icmp eq i32 %13, 0, !dbg !7172
  br i1 %14, label %11, label %15, !dbg !7170, !llvm.loop !7173

15:                                               ; preds = %11
  store volatile i32 1880031232, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7175
  br label %16, !dbg !7176

16:                                               ; preds = %16, %15
  %17 = load volatile i32, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7177
  %18 = and i32 %17, 128, !dbg !7178
  %19 = icmp eq i32 %18, 0, !dbg !7178
  br i1 %19, label %20, label %16, !dbg !7176, !llvm.loop !7179

20:                                               ; preds = %16
  store volatile i32 269418496, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7181
  store volatile i32 0, i32* %2, align 4, !dbg !7182
  %21 = load volatile i32, i32* %2, align 4, !dbg !7184
  %22 = icmp ult i32 %21, 255, !dbg !7186
  br i1 %22, label %23, label %28, !dbg !7187

23:                                               ; preds = %20, %23
  %24 = load volatile i32, i32* %2, align 4, !dbg !7188
  %25 = add i32 %24, 1, !dbg !7188
  store volatile i32 %25, i32* %2, align 4, !dbg !7188
  %26 = load volatile i32, i32* %2, align 4, !dbg !7184
  %27 = icmp ult i32 %26, 255, !dbg !7186
  br i1 %27, label %23, label %28, !dbg !7187, !llvm.loop !7189

28:                                               ; preds = %23, %20
  %29 = load volatile i32, i32* inttoptr (i32 -1610284960 to i32*), align 32, !dbg !7191
  %30 = and i32 %29, -1793, !dbg !7192
  store volatile i32 %30, i32* inttoptr (i32 -1610284960 to i32*), align 32, !dbg !7193
  br label %32, !dbg !7194

31:                                               ; preds = %1
  br label %32, !dbg !7195

32:                                               ; preds = %1, %28, %31
  %33 = phi i32 [ 0, %28 ], [ -1, %31 ], [ 0, %1 ], !dbg !7153
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !7198
  ret i32 %33, !dbg !7198
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #12 !dbg !7199 {
  store volatile i32 1, i32* inttoptr (i32 -1610284728 to i32*), align 8, !dbg !7200
  br label %1, !dbg !7201

1:                                                ; preds = %1, %0
  %2 = load volatile i32, i32* inttoptr (i32 -1610284728 to i32*), align 8, !dbg !7202
  %3 = and i32 %2, 2, !dbg !7203
  %4 = icmp eq i32 %3, 0, !dbg !7203
  br i1 %4, label %1, label %5, !dbg !7201, !llvm.loop !7204

5:                                                ; preds = %1
  store volatile i32 0, i32* inttoptr (i32 -1610284728 to i32*), align 8, !dbg !7206
  br label %6, !dbg !7207

6:                                                ; preds = %6, %5
  %7 = load volatile i32, i32* inttoptr (i32 -1610284728 to i32*), align 8, !dbg !7208
  %8 = and i32 %7, 2, !dbg !7209
  %9 = icmp eq i32 %8, 0, !dbg !7209
  br i1 %9, label %10, label %6, !dbg !7207, !llvm.loop !7210

10:                                               ; preds = %6
  store volatile i32 806289408, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7212
  br label %11, !dbg !7213

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7214
  %13 = and i32 %12, 128, !dbg !7215
  %14 = icmp eq i32 %13, 0, !dbg !7215
  br i1 %14, label %11, label %15, !dbg !7213, !llvm.loop !7216

15:                                               ; preds = %11
  store volatile i32 1880031232, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7218
  br label %16, !dbg !7219

16:                                               ; preds = %16, %15
  %17 = load volatile i32, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7220
  %18 = and i32 %17, 128, !dbg !7221
  %19 = icmp eq i32 %18, 0, !dbg !7221
  br i1 %19, label %20, label %16, !dbg !7219, !llvm.loop !7222

20:                                               ; preds = %16
  store volatile i32 269418496, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7224
  %21 = load volatile i32, i32* inttoptr (i32 -1610284960 to i32*), align 32, !dbg !7225
  %22 = and i32 %21, -3841, !dbg !7226
  store volatile i32 %22, i32* inttoptr (i32 -1610284960 to i32*), align 32, !dbg !7227
  ret void, !dbg !7228
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #12 !dbg !7229 {
  br label %1, !dbg !7230

1:                                                ; preds = %1, %0
  %2 = load volatile i32, i32* inttoptr (i32 -1610284960 to i32*), align 32, !dbg !7231
  %3 = and i32 %2, 17, !dbg !7232
  %4 = icmp eq i32 %3, 17, !dbg !7233
  br i1 %4, label %5, label %1, !dbg !7230, !llvm.loop !7234

5:                                                ; preds = %1
  %6 = load volatile i32, i32* inttoptr (i32 -1610284960 to i32*), align 32, !dbg !7236
  %7 = or i32 %6, 1792, !dbg !7237
  store volatile i32 %7, i32* inttoptr (i32 -1610284960 to i32*), align 32, !dbg !7238
  store volatile i32 -261685248, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !7239
  br label %8, !dbg !7240

8:                                                ; preds = %8, %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610284704 to i32*), align 32, !dbg !7241
  %10 = and i32 %9, 1, !dbg !7242
  %11 = icmp eq i32 %10, 0, !dbg !7243
  br i1 %11, label %8, label %12, !dbg !7240, !llvm.loop !7244

12:                                               ; preds = %8
  store volatile i32 0, i32* inttoptr (i32 -1610284912 to i32*), align 16, !dbg !7246
  br label %13, !dbg !7247

13:                                               ; preds = %13, %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610284728 to i32*), align 8, !dbg !7248
  %15 = and i32 %14, 16, !dbg !7249
  %16 = icmp eq i32 %15, 0, !dbg !7249
  br i1 %16, label %13, label %17, !dbg !7247, !llvm.loop !7250

17:                                               ; preds = %13
  ret void, !dbg !7252
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local void @reset_debug_buffer() local_unnamed_addr #16 !dbg !7253 {
  store i32 0, i32* @debug_node_counter, align 4, !dbg !7256
  call void @llvm.dbg.value(metadata i32 0, metadata !7255, metadata !DIExpression()), !dbg !7257
  br label %1, !dbg !7258

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %8, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7255, metadata !DIExpression()), !dbg !7257
  %3 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %2, i32 0, !dbg !7260
  store i32 -1, i32* %3, align 4, !dbg !7263
  %4 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %2, i32 1, !dbg !7264
  store i32 -1, i32* %4, align 4, !dbg !7265
  %5 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %2, i32 2, !dbg !7266
  store i32 -1, i32* %5, align 4, !dbg !7267
  %6 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %2, i32 3, !dbg !7268
  store i32 -1, i32* %6, align 4, !dbg !7269
  %7 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %2, i32 4, !dbg !7270
  store i32 -1, i32* %7, align 4, !dbg !7271
  %8 = add nuw nsw i32 %2, 1, !dbg !7272
  call void @llvm.dbg.value(metadata i32 %8, metadata !7255, metadata !DIExpression()), !dbg !7257
  %9 = icmp eq i32 %8, 20, !dbg !7273
  br i1 %9, label %10, label %1, !dbg !7258, !llvm.loop !7274

10:                                               ; preds = %1
  ret void, !dbg !7276
}

; Function Attrs: noinline nounwind optsize
define dso_local void @flush_debug_buffer() local_unnamed_addr #0 !dbg !7277 {
  tail call void @debug_node_print() #25, !dbg !7278
  tail call void @reset_debug_buffer() #25, !dbg !7279
  ret void, !dbg !7280
}

; Function Attrs: noinline nounwind optsize
define dso_local void @debug_node_print() local_unnamed_addr #0 !dbg !7281 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7283, metadata !DIExpression()), !dbg !7284
  call void @llvm.dbg.value(metadata i32 0, metadata !7283, metadata !DIExpression()), !dbg !7284
  br label %1, !dbg !7285

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %15, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7283, metadata !DIExpression()), !dbg !7284
  %3 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %2, i32 1, !dbg !7287
  %4 = load i32, i32* %3, align 4, !dbg !7287
  %5 = icmp eq i32 %4, -1, !dbg !7291
  br i1 %5, label %17, label %6, !dbg !7292

6:                                                ; preds = %1
  %7 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %2, i32 0, !dbg !7293
  %8 = load i32, i32* %7, align 4, !dbg !7293
  %9 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %2, i32 2, !dbg !7294
  %10 = load i32, i32* %9, align 4, !dbg !7294
  %11 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %2, i32 3, !dbg !7295
  %12 = load i32, i32* %11, align 4, !dbg !7295
  %13 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %2, i32 4, !dbg !7296
  %14 = load i32, i32* %13, align 4, !dbg !7296
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([109 x i8], [109 x i8]* @.str.6.166, i32 0, i32 0), i32 noundef %8, i32 noundef %4, i32 noundef %10, i32 noundef %12, i32 noundef %14) #24, !dbg !7297
  %15 = add nuw nsw i32 %2, 1, !dbg !7298
  call void @llvm.dbg.value(metadata i32 %15, metadata !7283, metadata !DIExpression()), !dbg !7284
  %16 = icmp eq i32 %15, 20, !dbg !7299
  br i1 %16, label %17, label %1, !dbg !7285, !llvm.loop !7300

17:                                               ; preds = %1, %6
  ret void, !dbg !7302
}

; Function Attrs: noinline nounwind optsize
define dso_local void @drain_debug_buffer() local_unnamed_addr #0 !dbg !7303 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7306, metadata !DIExpression()), !dbg !7307
  tail call void @debug_node_print() #25, !dbg !7308
  tail call void @reset_debug_buffer() #25, !dbg !7309
  call void @llvm.dbg.value(metadata i32 0, metadata !7305, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata i32 0, metadata !7306, metadata !DIExpression()), !dbg !7307
  br label %1, !dbg !7310

1:                                                ; preds = %0, %10
  %2 = phi i32 [ 0, %0 ], [ %11, %10 ]
  %3 = phi i32 [ 0, %0 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7306, metadata !DIExpression()), !dbg !7307
  call void @llvm.dbg.value(metadata i32 %3, metadata !7305, metadata !DIExpression()), !dbg !7307
  %4 = getelementptr inbounds [20 x i32], [20 x i32]* @counter, i32 0, i32 %3, !dbg !7312
  %5 = load i32, i32* %4, align 4, !dbg !7312
  %6 = icmp eq i32 %5, 0, !dbg !7316
  br i1 %6, label %10, label %7, !dbg !7317

7:                                                ; preds = %1
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.167, i32 0, i32 0), i32 noundef %3, i32 noundef %5) #24, !dbg !7318
  %8 = load i32, i32* %4, align 4, !dbg !7320
  %9 = add i32 %8, %2, !dbg !7321
  call void @llvm.dbg.value(metadata i32 %9, metadata !7306, metadata !DIExpression()), !dbg !7307
  br label %10, !dbg !7322

10:                                               ; preds = %1, %7
  %11 = phi i32 [ %9, %7 ], [ %2, %1 ], !dbg !7307
  call void @llvm.dbg.value(metadata i32 %11, metadata !7306, metadata !DIExpression()), !dbg !7307
  %12 = add nuw nsw i32 %3, 1, !dbg !7323
  call void @llvm.dbg.value(metadata i32 %12, metadata !7305, metadata !DIExpression()), !dbg !7307
  %13 = icmp eq i32 %12, 20, !dbg !7324
  br i1 %13, label %14, label %1, !dbg !7310, !llvm.loop !7325

14:                                               ; preds = %10
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1.168, i32 0, i32 0), i32 noundef %11) #24, !dbg !7327
  %15 = icmp eq i32 %11, 0, !dbg !7328
  %16 = select i1 %15, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2.169, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.170, i32 0, i32 0)
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef %16) #24, !dbg !7330
  ret void, !dbg !7331
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @add_node(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32* noundef %3, i32 noundef %4) local_unnamed_addr #0 !dbg !7332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7336, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.value(metadata i32 %1, metadata !7337, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.value(metadata i32 %2, metadata !7338, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.value(metadata i32* %3, metadata !7339, metadata !DIExpression()), !dbg !7341
  call void @llvm.dbg.value(metadata i32 %4, metadata !7340, metadata !DIExpression()), !dbg !7341
  %6 = load i32, i32* @debug_node_counter, align 4, !dbg !7342
  %7 = icmp ugt i32 %6, 19, !dbg !7344
  br i1 %7, label %8, label %10, !dbg !7345

8:                                                ; preds = %5
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4.171, i32 0, i32 0)) #24, !dbg !7346
  tail call void @flush_debug_buffer() #25, !dbg !7348
  %9 = load i32, i32* @debug_node_counter, align 4, !dbg !7349
  br label %10, !dbg !7351

10:                                               ; preds = %8, %5
  %11 = phi i32 [ %9, %8 ], [ %6, %5 ], !dbg !7349
  %12 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %11, i32 0, !dbg !7352
  store i32 %0, i32* %12, align 4, !dbg !7353
  %13 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %11, i32 1, !dbg !7354
  store i32 %1, i32* %13, align 4, !dbg !7355
  %14 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %11, i32 2, !dbg !7356
  store i32 %2, i32* %14, align 4, !dbg !7357
  %15 = ptrtoint i32* %3 to i32, !dbg !7358
  %16 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %11, i32 3, !dbg !7359
  store i32 %15, i32* %16, align 4, !dbg !7360
  %17 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %11, i32 4, !dbg !7361
  store i32 %4, i32* %17, align 4, !dbg !7362
  %18 = add i32 %11, 1, !dbg !7363
  store i32 %18, i32* @debug_node_counter, align 4, !dbg !7363
  %19 = getelementptr inbounds [20 x i32], [20 x i32]* @counter, i32 0, i32 %0, !dbg !7364
  %20 = load i32, i32* %19, align 4, !dbg !7365
  %21 = add i32 %20, 1, !dbg !7365
  store i32 %21, i32* %19, align 4, !dbg !7365
  ret i32 1, !dbg !7366
}

; Function Attrs: noinline nounwind optsize
define dso_local void @init_node() local_unnamed_addr #0 !dbg !7367 {
  store i32 0, i32* @debug_node_counter, align 4, !dbg !7370
  tail call void (i32, i8*, ...) @bl_print(i32 noundef 0, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.172, i32 0, i32 0)) #24, !dbg !7371
  call void @llvm.dbg.value(metadata i32 0, metadata !7369, metadata !DIExpression()), !dbg !7372
  br label %1, !dbg !7373

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %4, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7369, metadata !DIExpression()), !dbg !7372
  %3 = getelementptr inbounds [20 x i32], [20 x i32]* @counter, i32 0, i32 %2, !dbg !7375
  store i32 0, i32* %3, align 4, !dbg !7378
  %4 = add nuw nsw i32 %2, 1, !dbg !7379
  call void @llvm.dbg.value(metadata i32 %4, metadata !7369, metadata !DIExpression()), !dbg !7372
  %5 = icmp eq i32 %4, 20, !dbg !7380
  br i1 %5, label %6, label %1, !dbg !7373, !llvm.loop !7381

6:                                                ; preds = %1, %6
  %7 = phi i32 [ %13, %6 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !7369, metadata !DIExpression()), !dbg !7372
  %8 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %7, i32 0, !dbg !7383
  store i32 -1, i32* %8, align 4, !dbg !7387
  %9 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %7, i32 1, !dbg !7388
  store i32 -1, i32* %9, align 4, !dbg !7389
  %10 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %7, i32 2, !dbg !7390
  store i32 -1, i32* %10, align 4, !dbg !7391
  %11 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %7, i32 3, !dbg !7392
  store i32 -1, i32* %11, align 4, !dbg !7393
  %12 = getelementptr inbounds [20 x %struct.debug_array], [20 x %struct.debug_array]* @debug_info, i32 0, i32 %7, i32 4, !dbg !7394
  store i32 -1, i32* %12, align 4, !dbg !7395
  %13 = add nuw nsw i32 %7, 1, !dbg !7396
  call void @llvm.dbg.value(metadata i32 %13, metadata !7369, metadata !DIExpression()), !dbg !7372
  %14 = icmp eq i32 %13, 20, !dbg !7397
  br i1 %14, label %15, label %6, !dbg !7398, !llvm.loop !7399

15:                                               ; preds = %6
  ret void, !dbg !7401
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @memory_btmt_test() local_unnamed_addr #0 !dbg !7402 {
  call void @llvm.dbg.value(metadata i8 1, metadata !7404, metadata !DIExpression()), !dbg !7405
  tail call void @init_node() #25, !dbg !7406
  tail call void @drain_debug_buffer() #25, !dbg !7407
  ret i1 true, !dbg !7408
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ram_basic_test(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7409 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7413, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 %1, metadata !7414, metadata !DIExpression()), !dbg !7425
  %3 = inttoptr i32 %0 to i8*, !dbg !7426
  call void @llvm.dbg.value(metadata i8* %3, metadata !7415, metadata !DIExpression()), !dbg !7425
  %4 = inttoptr i32 %0 to i16*, !dbg !7427
  call void @llvm.dbg.value(metadata i16* %4, metadata !7416, metadata !DIExpression()), !dbg !7425
  %5 = inttoptr i32 %0 to i32*, !dbg !7428
  call void @llvm.dbg.value(metadata i32* %5, metadata !7417, metadata !DIExpression()), !dbg !7425
  %6 = lshr i32 %1, 2, !dbg !7429
  call void @llvm.dbg.value(metadata i32 %6, metadata !7421, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  %7 = icmp ult i32 %1, 4, !dbg !7430
  br i1 %7, label %33, label %8, !dbg !7433

8:                                                ; preds = %2
  %9 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7433
  br label %13, !dbg !7433

10:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %33, label %11, !dbg !7434

11:                                               ; preds = %10
  %12 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7434
  br label %21, !dbg !7434

13:                                               ; preds = %8, %13
  %14 = phi i32 [ %16, %13 ], [ 0, %8 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !7423, metadata !DIExpression()), !dbg !7425
  %15 = getelementptr inbounds i32, i32* %5, i32 %14, !dbg !7436
  store volatile i32 0, i32* %15, align 4, !dbg !7438
  %16 = add nuw nsw i32 %14, 1, !dbg !7439
  call void @llvm.dbg.value(metadata i32 %16, metadata !7423, metadata !DIExpression()), !dbg !7425
  %17 = icmp eq i32 %16, %9, !dbg !7430
  br i1 %17, label %10, label %13, !dbg !7433, !llvm.loop !7440

18:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %33, label %19, !dbg !7442

19:                                               ; preds = %18
  %20 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7442
  br label %35, !dbg !7442

21:                                               ; preds = %11, %30
  %22 = phi i32 [ %31, %30 ], [ 0, %11 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !7423, metadata !DIExpression()), !dbg !7425
  %23 = getelementptr inbounds i32, i32* %5, i32 %22, !dbg !7444
  %24 = load volatile i32, i32* %23, align 4, !dbg !7444
  %25 = icmp eq i32 %24, 0, !dbg !7448
  br i1 %25, label %29, label %26, !dbg !7449

26:                                               ; preds = %21
  %27 = load volatile i32, i32* %23, align 4, !dbg !7450
  %28 = tail call i32 @add_node(i32 noundef 1, i32 noundef 32, i32 noundef 0, i32* noundef nonnull %23, i32 noundef %27) #25, !dbg !7452
  br label %30, !dbg !7453

29:                                               ; preds = %21
  store volatile i32 -1, i32* %23, align 4, !dbg !7454
  br label %30

30:                                               ; preds = %26, %29
  %31 = add nuw nsw i32 %22, 1, !dbg !7456
  call void @llvm.dbg.value(metadata i32 %31, metadata !7423, metadata !DIExpression()), !dbg !7425
  %32 = icmp eq i32 %31, %12, !dbg !7457
  br i1 %32, label %18, label %21, !dbg !7434, !llvm.loop !7458

33:                                               ; preds = %44, %2, %10, %18
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8 0, metadata !7418, metadata !DIExpression()), !dbg !7425
  %34 = icmp eq i32 %1, 0, !dbg !7460
  br i1 %34, label %117, label %48, !dbg !7463

35:                                               ; preds = %19, %44
  %36 = phi i32 [ %45, %44 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %36, metadata !7423, metadata !DIExpression()), !dbg !7425
  %37 = getelementptr inbounds i32, i32* %5, i32 %36, !dbg !7464
  %38 = load volatile i32, i32* %37, align 4, !dbg !7464
  %39 = icmp eq i32 %38, -1, !dbg !7468
  br i1 %39, label %40, label %41, !dbg !7469

40:                                               ; preds = %35
  store volatile i32 0, i32* %37, align 4, !dbg !7470
  br label %44, !dbg !7472

41:                                               ; preds = %35
  %42 = load volatile i32, i32* %37, align 4, !dbg !7473
  %43 = tail call i32 @add_node(i32 noundef 2, i32 noundef 32, i32 noundef -1, i32* noundef nonnull %37, i32 noundef %42) #25, !dbg !7475
  br label %44

44:                                               ; preds = %40, %41
  %45 = add nuw nsw i32 %36, 1, !dbg !7476
  call void @llvm.dbg.value(metadata i32 %45, metadata !7423, metadata !DIExpression()), !dbg !7425
  %46 = icmp eq i32 %45, %20, !dbg !7477
  br i1 %46, label %33, label %35, !dbg !7442, !llvm.loop !7478

47:                                               ; preds = %48
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8 0, metadata !7418, metadata !DIExpression()), !dbg !7425
  br i1 %34, label %117, label %59, !dbg !7480

48:                                               ; preds = %33, %48
  %49 = phi i32 [ %53, %48 ], [ 0, %33 ]
  %50 = phi i8 [ %51, %48 ], [ 0, %33 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8 %50, metadata !7418, metadata !DIExpression()), !dbg !7425
  %51 = add i8 %50, 1, !dbg !7482
  call void @llvm.dbg.value(metadata i8 %51, metadata !7418, metadata !DIExpression()), !dbg !7425
  %52 = getelementptr inbounds i8, i8* %3, i32 %49, !dbg !7484
  store volatile i8 %50, i8* %52, align 1, !dbg !7485
  %53 = add nuw i32 %49, 1, !dbg !7486
  call void @llvm.dbg.value(metadata i32 %53, metadata !7423, metadata !DIExpression()), !dbg !7425
  %54 = icmp eq i32 %53, %1, !dbg !7460
  br i1 %54, label %47, label %48, !dbg !7463, !llvm.loop !7487

55:                                               ; preds = %73
  call void @llvm.dbg.value(metadata i32 0, metadata !7424, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8 0, metadata !7418, metadata !DIExpression()), !dbg !7425
  br i1 %34, label %117, label %56, !dbg !7489

56:                                               ; preds = %55
  %57 = add i32 %1, -1, !dbg !7489
  %58 = lshr i32 %57, 1, !dbg !7489
  br label %81, !dbg !7489

59:                                               ; preds = %47, %73
  %60 = phi i32 [ %74, %73 ], [ 0, %47 ]
  %61 = phi i8 [ %64, %73 ], [ 0, %47 ]
  call void @llvm.dbg.value(metadata i32 %60, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8 %61, metadata !7418, metadata !DIExpression()), !dbg !7425
  %62 = getelementptr inbounds i8, i8* %3, i32 %60, !dbg !7491
  %63 = load volatile i8, i8* %62, align 1, !dbg !7491
  %64 = add i8 %61, 1, !dbg !7495
  call void @llvm.dbg.value(metadata i8 %64, metadata !7418, metadata !DIExpression()), !dbg !7425
  %65 = icmp eq i8 %63, %61, !dbg !7496
  br i1 %65, label %73, label %66, !dbg !7497

66:                                               ; preds = %59
  %67 = zext i8 %64 to i32, !dbg !7498
  %68 = add nsw i32 %67, -1, !dbg !7500
  %69 = bitcast i8* %62 to i32*, !dbg !7501
  %70 = load volatile i8, i8* %62, align 1, !dbg !7502
  %71 = zext i8 %70 to i32, !dbg !7502
  %72 = tail call i32 @add_node(i32 noundef 3, i32 noundef 8, i32 noundef %68, i32* noundef nonnull %69, i32 noundef %71) #25, !dbg !7503
  br label %73, !dbg !7504

73:                                               ; preds = %59, %66
  %74 = add nuw i32 %60, 1, !dbg !7505
  call void @llvm.dbg.value(metadata i32 %74, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8 %64, metadata !7418, metadata !DIExpression()), !dbg !7425
  %75 = icmp eq i32 %74, %1, !dbg !7506
  br i1 %75, label %55, label %59, !dbg !7480, !llvm.loop !7507

76:                                               ; preds = %102
  %77 = lshr i32 %1, 1
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i16 0, metadata !7419, metadata !DIExpression()), !dbg !7425
  %78 = icmp ult i32 %1, 2, !dbg !7509
  br i1 %78, label %117, label %79, !dbg !7512

79:                                               ; preds = %76
  %80 = call i32 @llvm.umax.i32(i32 %77, i32 1), !dbg !7512
  br label %110, !dbg !7512

81:                                               ; preds = %56, %102
  %82 = phi i32 [ %105, %102 ], [ 0, %56 ]
  %83 = phi i32 [ %104, %102 ], [ 0, %56 ]
  %84 = phi i8 [ %103, %102 ], [ 0, %56 ]
  call void @llvm.dbg.value(metadata i32 %82, metadata !7424, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 %83, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i8 %84, metadata !7418, metadata !DIExpression()), !dbg !7425
  %85 = getelementptr inbounds i8, i8* %3, i32 %83, !dbg !7513
  %86 = load volatile i8, i8* %85, align 1, !dbg !7513
  %87 = zext i8 %84 to i32, !dbg !7517
  %88 = icmp eq i8 %86, %84, !dbg !7518
  %89 = zext i8 %84 to i16, !dbg !7519
  br i1 %88, label %90, label %92, !dbg !7520

90:                                               ; preds = %81
  %91 = getelementptr inbounds i16, i16* %4, i32 %82, !dbg !7521
  store volatile i16 %89, i16* %91, align 2, !dbg !7523
  br label %92, !dbg !7524

92:                                               ; preds = %81, %90
  %93 = getelementptr inbounds i16, i16* %4, i32 %82, !dbg !7525
  %94 = load volatile i16, i16* %93, align 2, !dbg !7525
  %95 = icmp eq i16 %94, %89, !dbg !7527
  br i1 %95, label %102, label %96, !dbg !7528

96:                                               ; preds = %92
  %97 = getelementptr inbounds i16, i16* %4, i32 %83, !dbg !7529
  %98 = bitcast i16* %97 to i32*, !dbg !7531
  %99 = load volatile i16, i16* %97, align 2, !dbg !7532
  %100 = zext i16 %99 to i32, !dbg !7532
  %101 = tail call i32 @add_node(i32 noundef 4, i32 noundef 16, i32 noundef %87, i32* noundef nonnull %98, i32 noundef %100) #25, !dbg !7533
  br label %102, !dbg !7534

102:                                              ; preds = %96, %92
  %103 = add i8 %84, 2, !dbg !7535
  call void @llvm.dbg.value(metadata i8 %103, metadata !7418, metadata !DIExpression()), !dbg !7425
  %104 = add nuw nsw i32 %83, 2, !dbg !7536
  call void @llvm.dbg.value(metadata i32 %104, metadata !7423, metadata !DIExpression()), !dbg !7425
  %105 = add nuw nsw i32 %82, 1, !dbg !7537
  call void @llvm.dbg.value(metadata i32 %105, metadata !7424, metadata !DIExpression()), !dbg !7425
  %106 = icmp eq i32 %82, %58, !dbg !7538
  br i1 %106, label %76, label %81, !dbg !7489, !llvm.loop !7539

107:                                              ; preds = %110
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i16 0, metadata !7419, metadata !DIExpression()), !dbg !7425
  br i1 %78, label %117, label %108, !dbg !7541

108:                                              ; preds = %107
  %109 = call i32 @llvm.umax.i32(i32 %77, i32 1), !dbg !7541
  br label %120, !dbg !7541

110:                                              ; preds = %79, %110
  %111 = phi i32 [ %115, %110 ], [ 0, %79 ]
  %112 = phi i16 [ %113, %110 ], [ 0, %79 ]
  call void @llvm.dbg.value(metadata i32 %111, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i16 %112, metadata !7419, metadata !DIExpression()), !dbg !7425
  %113 = add i16 %112, 1, !dbg !7543
  call void @llvm.dbg.value(metadata i16 %113, metadata !7419, metadata !DIExpression()), !dbg !7425
  %114 = getelementptr inbounds i16, i16* %4, i32 %111, !dbg !7545
  store volatile i16 %112, i16* %114, align 2, !dbg !7546
  %115 = add nuw nsw i32 %111, 1, !dbg !7547
  call void @llvm.dbg.value(metadata i32 %115, metadata !7423, metadata !DIExpression()), !dbg !7425
  %116 = icmp eq i32 %115, %80, !dbg !7509
  br i1 %116, label %107, label %110, !dbg !7512, !llvm.loop !7548

117:                                              ; preds = %134, %33, %47, %55, %76, %107
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 0, metadata !7420, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %118, !dbg !7550

118:                                              ; preds = %117
  %119 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7550
  br label %140, !dbg !7550

120:                                              ; preds = %108, %134
  %121 = phi i32 [ %135, %134 ], [ 0, %108 ]
  %122 = phi i16 [ %125, %134 ], [ 0, %108 ]
  call void @llvm.dbg.value(metadata i32 %121, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i16 %122, metadata !7419, metadata !DIExpression()), !dbg !7425
  %123 = getelementptr inbounds i16, i16* %4, i32 %121, !dbg !7552
  %124 = load volatile i16, i16* %123, align 2, !dbg !7552
  %125 = add i16 %122, 1, !dbg !7556
  call void @llvm.dbg.value(metadata i16 %125, metadata !7419, metadata !DIExpression()), !dbg !7425
  %126 = icmp eq i16 %124, %122, !dbg !7557
  br i1 %126, label %134, label %127, !dbg !7558

127:                                              ; preds = %120
  %128 = zext i16 %125 to i32, !dbg !7559
  %129 = add nsw i32 %128, -1, !dbg !7561
  %130 = bitcast i16* %123 to i32*, !dbg !7562
  %131 = load volatile i16, i16* %123, align 2, !dbg !7563
  %132 = zext i16 %131 to i32, !dbg !7563
  %133 = tail call i32 @add_node(i32 noundef 5, i32 noundef 16, i32 noundef %129, i32* noundef nonnull %130, i32 noundef %132) #25, !dbg !7564
  br label %134, !dbg !7565

134:                                              ; preds = %120, %127
  %135 = add nuw nsw i32 %121, 1, !dbg !7566
  call void @llvm.dbg.value(metadata i32 %135, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i16 %125, metadata !7419, metadata !DIExpression()), !dbg !7425
  %136 = icmp eq i32 %135, %109, !dbg !7567
  br i1 %136, label %117, label %120, !dbg !7541, !llvm.loop !7568

137:                                              ; preds = %140
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 0, metadata !7420, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %138, !dbg !7570

138:                                              ; preds = %137
  %139 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7570
  br label %148, !dbg !7570

140:                                              ; preds = %118, %140
  %141 = phi i32 [ %142, %140 ], [ 0, %118 ]
  call void @llvm.dbg.value(metadata i32 %141, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 %141, metadata !7420, metadata !DIExpression()), !dbg !7425
  %142 = add nuw nsw i32 %141, 1, !dbg !7572
  call void @llvm.dbg.value(metadata i32 %142, metadata !7420, metadata !DIExpression()), !dbg !7425
  %143 = getelementptr inbounds i32, i32* %5, i32 %141, !dbg !7574
  store volatile i32 %141, i32* %143, align 4, !dbg !7576
  call void @llvm.dbg.value(metadata i32 %142, metadata !7423, metadata !DIExpression()), !dbg !7425
  %144 = icmp eq i32 %142, %119, !dbg !7577
  br i1 %144, label %137, label %140, !dbg !7550, !llvm.loop !7578

145:                                              ; preds = %157
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %146, !dbg !7580

146:                                              ; preds = %145
  %147 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7580
  br label %162, !dbg !7580

148:                                              ; preds = %138, %157
  %149 = phi i32 [ %152, %157 ], [ 0, %138 ]
  call void @llvm.dbg.value(metadata i32 %149, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 %149, metadata !7420, metadata !DIExpression()), !dbg !7425
  %150 = getelementptr inbounds i32, i32* %5, i32 %149, !dbg !7582
  %151 = load volatile i32, i32* %150, align 4, !dbg !7582
  %152 = add nuw nsw i32 %149, 1, !dbg !7586
  call void @llvm.dbg.value(metadata i32 %152, metadata !7420, metadata !DIExpression()), !dbg !7425
  %153 = icmp eq i32 %151, %149, !dbg !7587
  br i1 %153, label %157, label %154, !dbg !7588

154:                                              ; preds = %148
  %155 = load volatile i32, i32* %150, align 4, !dbg !7589
  %156 = tail call i32 @add_node(i32 noundef 6, i32 noundef 32, i32 noundef %149, i32* noundef nonnull %150, i32 noundef %155) #25, !dbg !7591
  br label %157, !dbg !7592

157:                                              ; preds = %148, %154
  call void @llvm.dbg.value(metadata i32 %152, metadata !7423, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.value(metadata i32 %152, metadata !7420, metadata !DIExpression()), !dbg !7425
  %158 = icmp eq i32 %152, %139, !dbg !7593
  br i1 %158, label %145, label %148, !dbg !7570, !llvm.loop !7594

159:                                              ; preds = %162
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %160, !dbg !7596

160:                                              ; preds = %159
  %161 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7596
  br label %170, !dbg !7596

162:                                              ; preds = %146, %162
  %163 = phi i32 [ %165, %162 ], [ 0, %146 ]
  call void @llvm.dbg.value(metadata i32 %163, metadata !7423, metadata !DIExpression()), !dbg !7425
  %164 = getelementptr inbounds i32, i32* %5, i32 %163, !dbg !7598
  store volatile i32 1144201745, i32* %164, align 4, !dbg !7601
  %165 = add nuw nsw i32 %163, 1, !dbg !7602
  call void @llvm.dbg.value(metadata i32 %165, metadata !7423, metadata !DIExpression()), !dbg !7425
  %166 = icmp eq i32 %165, %147, !dbg !7603
  br i1 %166, label %159, label %162, !dbg !7580, !llvm.loop !7604

167:                                              ; preds = %179
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %168, !dbg !7606

168:                                              ; preds = %167
  %169 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7606
  br label %185, !dbg !7606

170:                                              ; preds = %160, %179
  %171 = phi i32 [ %180, %179 ], [ 0, %160 ]
  call void @llvm.dbg.value(metadata i32 %171, metadata !7423, metadata !DIExpression()), !dbg !7425
  %172 = getelementptr inbounds i32, i32* %5, i32 %171, !dbg !7608
  %173 = load volatile i32, i32* %172, align 4, !dbg !7608
  %174 = icmp eq i32 %173, 1144201745, !dbg !7612
  br i1 %174, label %175, label %176, !dbg !7613

175:                                              ; preds = %170
  store volatile i32 -1515870811, i32* %172, align 4, !dbg !7614
  br label %179, !dbg !7616

176:                                              ; preds = %170
  %177 = load volatile i32, i32* %172, align 4, !dbg !7617
  %178 = tail call i32 @add_node(i32 noundef 7, i32 noundef 32, i32 noundef 1144201745, i32* noundef nonnull %172, i32 noundef %177) #25, !dbg !7619
  br label %179

179:                                              ; preds = %175, %176
  %180 = add nuw nsw i32 %171, 1, !dbg !7620
  call void @llvm.dbg.value(metadata i32 %180, metadata !7423, metadata !DIExpression()), !dbg !7425
  %181 = icmp eq i32 %180, %161, !dbg !7621
  br i1 %181, label %167, label %170, !dbg !7596, !llvm.loop !7622

182:                                              ; preds = %196
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %183, !dbg !7624

183:                                              ; preds = %182
  %184 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7624
  br label %202, !dbg !7624

185:                                              ; preds = %168, %196
  %186 = phi i32 [ %197, %196 ], [ 0, %168 ]
  call void @llvm.dbg.value(metadata i32 %186, metadata !7423, metadata !DIExpression()), !dbg !7425
  %187 = getelementptr inbounds i32, i32* %5, i32 %186, !dbg !7626
  %188 = load volatile i32, i32* %187, align 4, !dbg !7626
  %189 = icmp eq i32 %188, -1515870811, !dbg !7630
  br i1 %189, label %190, label %193, !dbg !7631

190:                                              ; preds = %185
  %191 = shl nsw i32 %186, 2, !dbg !7632
  %192 = getelementptr inbounds i8, i8* %3, i32 %191, !dbg !7634
  store volatile i8 0, i8* %192, align 1, !dbg !7635
  br label %196, !dbg !7636

193:                                              ; preds = %185
  %194 = load volatile i32, i32* %187, align 4, !dbg !7637
  %195 = tail call i32 @add_node(i32 noundef 8, i32 noundef 32, i32 noundef -1515870811, i32* noundef nonnull %187, i32 noundef %194) #25, !dbg !7639
  br label %196

196:                                              ; preds = %190, %193
  %197 = add nuw nsw i32 %186, 1, !dbg !7640
  call void @llvm.dbg.value(metadata i32 %197, metadata !7423, metadata !DIExpression()), !dbg !7425
  %198 = icmp eq i32 %197, %169, !dbg !7641
  br i1 %198, label %182, label %185, !dbg !7606, !llvm.loop !7642

199:                                              ; preds = %214
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %200, !dbg !7644

200:                                              ; preds = %199
  %201 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7644
  br label %220, !dbg !7644

202:                                              ; preds = %183, %214
  %203 = phi i32 [ %215, %214 ], [ 0, %183 ]
  call void @llvm.dbg.value(metadata i32 %203, metadata !7423, metadata !DIExpression()), !dbg !7425
  %204 = getelementptr inbounds i32, i32* %5, i32 %203, !dbg !7646
  %205 = load volatile i32, i32* %204, align 4, !dbg !7646
  %206 = icmp eq i32 %205, -1515870976, !dbg !7650
  br i1 %206, label %207, label %211, !dbg !7651

207:                                              ; preds = %202
  %208 = shl nsw i32 %203, 2, !dbg !7652
  %209 = or i32 %208, 2, !dbg !7654
  %210 = getelementptr inbounds i8, i8* %3, i32 %209, !dbg !7655
  store volatile i8 0, i8* %210, align 1, !dbg !7656
  br label %214, !dbg !7657

211:                                              ; preds = %202
  %212 = load volatile i32, i32* %204, align 4, !dbg !7658
  %213 = tail call i32 @add_node(i32 noundef 9, i32 noundef 32, i32 noundef -1515870976, i32* noundef nonnull %204, i32 noundef %212) #25, !dbg !7660
  br label %214

214:                                              ; preds = %207, %211
  %215 = add nuw nsw i32 %203, 1, !dbg !7661
  call void @llvm.dbg.value(metadata i32 %215, metadata !7423, metadata !DIExpression()), !dbg !7425
  %216 = icmp eq i32 %215, %184, !dbg !7662
  br i1 %216, label %199, label %202, !dbg !7624, !llvm.loop !7663

217:                                              ; preds = %232
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %218, !dbg !7665

218:                                              ; preds = %217
  %219 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7665
  br label %238, !dbg !7665

220:                                              ; preds = %200, %232
  %221 = phi i32 [ %233, %232 ], [ 0, %200 ]
  call void @llvm.dbg.value(metadata i32 %221, metadata !7423, metadata !DIExpression()), !dbg !7425
  %222 = getelementptr inbounds i32, i32* %5, i32 %221, !dbg !7667
  %223 = load volatile i32, i32* %222, align 4, !dbg !7667
  %224 = icmp eq i32 %223, -1526684416, !dbg !7671
  br i1 %224, label %225, label %229, !dbg !7672

225:                                              ; preds = %220
  %226 = shl nsw i32 %221, 2, !dbg !7673
  %227 = or i32 %226, 1, !dbg !7675
  %228 = getelementptr inbounds i8, i8* %3, i32 %227, !dbg !7676
  store volatile i8 0, i8* %228, align 1, !dbg !7677
  br label %232, !dbg !7678

229:                                              ; preds = %220
  %230 = load volatile i32, i32* %222, align 4, !dbg !7679
  %231 = tail call i32 @add_node(i32 noundef 10, i32 noundef 32, i32 noundef -1526684416, i32* noundef nonnull %222, i32 noundef %230) #25, !dbg !7681
  br label %232

232:                                              ; preds = %225, %229
  %233 = add nuw nsw i32 %221, 1, !dbg !7682
  call void @llvm.dbg.value(metadata i32 %233, metadata !7423, metadata !DIExpression()), !dbg !7425
  %234 = icmp eq i32 %233, %201, !dbg !7683
  br i1 %234, label %217, label %220, !dbg !7644, !llvm.loop !7684

235:                                              ; preds = %250
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %236, !dbg !7686

236:                                              ; preds = %235
  %237 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7686
  br label %256, !dbg !7686

238:                                              ; preds = %218, %250
  %239 = phi i32 [ %251, %250 ], [ 0, %218 ]
  call void @llvm.dbg.value(metadata i32 %239, metadata !7423, metadata !DIExpression()), !dbg !7425
  %240 = getelementptr inbounds i32, i32* %5, i32 %239, !dbg !7688
  %241 = load volatile i32, i32* %240, align 4, !dbg !7688
  %242 = icmp eq i32 %241, -1526726656, !dbg !7692
  br i1 %242, label %243, label %247, !dbg !7693

243:                                              ; preds = %238
  %244 = shl nsw i32 %239, 2, !dbg !7694
  %245 = or i32 %244, 3, !dbg !7696
  %246 = getelementptr inbounds i8, i8* %3, i32 %245, !dbg !7697
  store volatile i8 0, i8* %246, align 1, !dbg !7698
  br label %250, !dbg !7699

247:                                              ; preds = %238
  %248 = load volatile i32, i32* %240, align 4, !dbg !7700
  %249 = tail call i32 @add_node(i32 noundef 11, i32 noundef 8, i32 noundef -1526726656, i32* noundef nonnull %240, i32 noundef %248) #25, !dbg !7702
  br label %250

250:                                              ; preds = %243, %247
  %251 = add nuw nsw i32 %239, 1, !dbg !7703
  call void @llvm.dbg.value(metadata i32 %251, metadata !7423, metadata !DIExpression()), !dbg !7425
  %252 = icmp eq i32 %251, %219, !dbg !7704
  br i1 %252, label %235, label %238, !dbg !7665, !llvm.loop !7705

253:                                              ; preds = %268
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %254, !dbg !7707

254:                                              ; preds = %253
  %255 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7707
  br label %274, !dbg !7707

256:                                              ; preds = %236, %268
  %257 = phi i32 [ %269, %268 ], [ 0, %236 ]
  call void @llvm.dbg.value(metadata i32 %257, metadata !7423, metadata !DIExpression()), !dbg !7425
  %258 = getelementptr inbounds i32, i32* %5, i32 %257, !dbg !7709
  %259 = load volatile i32, i32* %258, align 4, !dbg !7709
  %260 = icmp eq i32 %259, 0, !dbg !7713
  br i1 %260, label %261, label %265, !dbg !7714

261:                                              ; preds = %256
  %262 = shl nuw nsw i32 %257, 1, !dbg !7715
  %263 = or i32 %262, 1, !dbg !7717
  %264 = getelementptr inbounds i16, i16* %4, i32 %263, !dbg !7718
  store volatile i16 -1, i16* %264, align 2, !dbg !7719
  br label %268, !dbg !7720

265:                                              ; preds = %256
  %266 = load volatile i32, i32* %258, align 4, !dbg !7721
  %267 = tail call i32 @add_node(i32 noundef 12, i32 noundef 8, i32 noundef 0, i32* noundef nonnull %258, i32 noundef %266) #25, !dbg !7723
  br label %268

268:                                              ; preds = %261, %265
  %269 = add nuw nsw i32 %257, 1, !dbg !7724
  call void @llvm.dbg.value(metadata i32 %269, metadata !7423, metadata !DIExpression()), !dbg !7425
  %270 = icmp eq i32 %269, %237, !dbg !7725
  br i1 %270, label %253, label %256, !dbg !7686, !llvm.loop !7726

271:                                              ; preds = %285
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %272, !dbg !7728

272:                                              ; preds = %271
  %273 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7728
  br label %291, !dbg !7728

274:                                              ; preds = %254, %285
  %275 = phi i32 [ %286, %285 ], [ 0, %254 ]
  call void @llvm.dbg.value(metadata i32 %275, metadata !7423, metadata !DIExpression()), !dbg !7425
  %276 = getelementptr inbounds i32, i32* %5, i32 %275, !dbg !7730
  %277 = load volatile i32, i32* %276, align 4, !dbg !7730
  %278 = icmp eq i32 %277, -65536, !dbg !7734
  br i1 %278, label %279, label %282, !dbg !7735

279:                                              ; preds = %274
  %280 = shl nuw nsw i32 %275, 1, !dbg !7736
  %281 = getelementptr inbounds i16, i16* %4, i32 %280, !dbg !7738
  store volatile i16 -1, i16* %281, align 2, !dbg !7739
  br label %285, !dbg !7740

282:                                              ; preds = %274
  %283 = load volatile i32, i32* %276, align 4, !dbg !7741
  %284 = tail call i32 @add_node(i32 noundef 13, i32 noundef 16, i32 noundef -65536, i32* noundef nonnull %276, i32 noundef %283) #25, !dbg !7743
  br label %285

285:                                              ; preds = %279, %282
  %286 = add nuw nsw i32 %275, 1, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %286, metadata !7423, metadata !DIExpression()), !dbg !7425
  %287 = icmp eq i32 %286, %255, !dbg !7745
  br i1 %287, label %271, label %274, !dbg !7707, !llvm.loop !7746

288:                                              ; preds = %299
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %289, !dbg !7748

289:                                              ; preds = %288
  %290 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7748
  br label %305, !dbg !7748

291:                                              ; preds = %272, %299
  %292 = phi i32 [ %300, %299 ], [ 0, %272 ]
  call void @llvm.dbg.value(metadata i32 %292, metadata !7423, metadata !DIExpression()), !dbg !7425
  %293 = getelementptr inbounds i32, i32* %5, i32 %292, !dbg !7750
  %294 = load volatile i32, i32* %293, align 4, !dbg !7750
  %295 = icmp eq i32 %294, -1, !dbg !7754
  br i1 %295, label %299, label %296, !dbg !7755

296:                                              ; preds = %291
  %297 = load volatile i32, i32* %293, align 4, !dbg !7756
  %298 = tail call i32 @add_node(i32 noundef 14, i32 noundef 16, i32 noundef -1, i32* noundef nonnull %293, i32 noundef %297) #25, !dbg !7758
  br label %299, !dbg !7759

299:                                              ; preds = %291, %296
  %300 = add nuw nsw i32 %292, 1, !dbg !7760
  call void @llvm.dbg.value(metadata i32 %300, metadata !7423, metadata !DIExpression()), !dbg !7425
  %301 = icmp eq i32 %300, %273, !dbg !7761
  br i1 %301, label %288, label %291, !dbg !7728, !llvm.loop !7762

302:                                              ; preds = %305
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %303, !dbg !7764

303:                                              ; preds = %302
  %304 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7764
  br label %313, !dbg !7764

305:                                              ; preds = %289, %305
  %306 = phi i32 [ %308, %305 ], [ 0, %289 ]
  call void @llvm.dbg.value(metadata i32 %306, metadata !7423, metadata !DIExpression()), !dbg !7425
  %307 = getelementptr inbounds i32, i32* %5, i32 %306, !dbg !7766
  store volatile i32 0, i32* %307, align 4, !dbg !7769
  %308 = add nuw nsw i32 %306, 1, !dbg !7770
  call void @llvm.dbg.value(metadata i32 %308, metadata !7423, metadata !DIExpression()), !dbg !7425
  %309 = icmp eq i32 %308, %290, !dbg !7771
  br i1 %309, label %302, label %305, !dbg !7748, !llvm.loop !7772

310:                                              ; preds = %321
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %311, !dbg !7774

311:                                              ; preds = %310
  %312 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7774
  br label %327, !dbg !7774

313:                                              ; preds = %303, %321
  %314 = phi i32 [ %322, %321 ], [ 0, %303 ]
  call void @llvm.dbg.value(metadata i32 %314, metadata !7423, metadata !DIExpression()), !dbg !7425
  %315 = getelementptr inbounds i32, i32* %5, i32 %314, !dbg !7776
  %316 = load volatile i32, i32* %315, align 4, !dbg !7776
  call void @llvm.dbg.value(metadata i32 %316, metadata !7422, metadata !DIExpression()), !dbg !7425
  %317 = icmp eq i32 %316, 0, !dbg !7779
  br i1 %317, label %321, label %318, !dbg !7781

318:                                              ; preds = %313
  %319 = load volatile i32, i32* %315, align 4, !dbg !7782
  %320 = tail call i32 @add_node(i32 noundef 15, i32 noundef 32, i32 noundef 0, i32* noundef nonnull %315, i32 noundef %319) #25, !dbg !7784
  br label %321, !dbg !7785

321:                                              ; preds = %318, %313
  store volatile i32 -1, i32* %315, align 4, !dbg !7786
  %322 = add nuw nsw i32 %314, 1, !dbg !7787
  call void @llvm.dbg.value(metadata i32 %322, metadata !7423, metadata !DIExpression()), !dbg !7425
  %323 = icmp eq i32 %322, %304, !dbg !7788
  br i1 %323, label %310, label %313, !dbg !7764, !llvm.loop !7789

324:                                              ; preds = %335
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %325, !dbg !7791

325:                                              ; preds = %324
  %326 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7791
  br label %341, !dbg !7791

327:                                              ; preds = %311, %335
  %328 = phi i32 [ %336, %335 ], [ 0, %311 ]
  call void @llvm.dbg.value(metadata i32 %328, metadata !7423, metadata !DIExpression()), !dbg !7425
  %329 = getelementptr inbounds i32, i32* %5, i32 %328, !dbg !7793
  %330 = load volatile i32, i32* %329, align 4, !dbg !7793
  call void @llvm.dbg.value(metadata i32 %330, metadata !7422, metadata !DIExpression()), !dbg !7425
  %331 = icmp eq i32 %330, -1, !dbg !7796
  br i1 %331, label %335, label %332, !dbg !7798

332:                                              ; preds = %327
  %333 = load volatile i32, i32* %329, align 4, !dbg !7799
  %334 = tail call i32 @add_node(i32 noundef 16, i32 noundef 32, i32 noundef -1, i32* noundef nonnull %329, i32 noundef %333) #25, !dbg !7801
  br label %335, !dbg !7802

335:                                              ; preds = %332, %327
  store volatile i32 0, i32* %329, align 4, !dbg !7803
  %336 = add nuw nsw i32 %328, 1, !dbg !7804
  call void @llvm.dbg.value(metadata i32 %336, metadata !7423, metadata !DIExpression()), !dbg !7425
  %337 = icmp eq i32 %336, %312, !dbg !7805
  br i1 %337, label %324, label %327, !dbg !7774, !llvm.loop !7806

338:                                              ; preds = %349
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %339, !dbg !7808

339:                                              ; preds = %338
  %340 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7808
  br label %355, !dbg !7808

341:                                              ; preds = %325, %349
  %342 = phi i32 [ %350, %349 ], [ 0, %325 ]
  call void @llvm.dbg.value(metadata i32 %342, metadata !7423, metadata !DIExpression()), !dbg !7425
  %343 = getelementptr inbounds i32, i32* %5, i32 %342, !dbg !7810
  %344 = load volatile i32, i32* %343, align 4, !dbg !7810
  call void @llvm.dbg.value(metadata i32 %344, metadata !7422, metadata !DIExpression()), !dbg !7425
  %345 = icmp eq i32 %344, 0, !dbg !7813
  br i1 %345, label %349, label %346, !dbg !7815

346:                                              ; preds = %341
  %347 = load volatile i32, i32* %343, align 4, !dbg !7816
  %348 = tail call i32 @add_node(i32 noundef 17, i32 noundef 32, i32 noundef 0, i32* noundef nonnull %343, i32 noundef %347) #25, !dbg !7818
  br label %349, !dbg !7819

349:                                              ; preds = %346, %341
  store volatile i32 -1, i32* %343, align 4, !dbg !7820
  %350 = add nuw nsw i32 %342, 1, !dbg !7821
  call void @llvm.dbg.value(metadata i32 %350, metadata !7423, metadata !DIExpression()), !dbg !7425
  %351 = icmp eq i32 %350, %326, !dbg !7822
  br i1 %351, label %338, label %341, !dbg !7791, !llvm.loop !7823

352:                                              ; preds = %363
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %353, !dbg !7825

353:                                              ; preds = %352
  %354 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7825
  br label %369, !dbg !7825

355:                                              ; preds = %339, %363
  %356 = phi i32 [ %364, %363 ], [ 0, %339 ]
  call void @llvm.dbg.value(metadata i32 %356, metadata !7423, metadata !DIExpression()), !dbg !7425
  %357 = getelementptr inbounds i32, i32* %5, i32 %356, !dbg !7827
  %358 = load volatile i32, i32* %357, align 4, !dbg !7827
  call void @llvm.dbg.value(metadata i32 %358, metadata !7422, metadata !DIExpression()), !dbg !7425
  %359 = icmp eq i32 %358, -1, !dbg !7830
  br i1 %359, label %363, label %360, !dbg !7832

360:                                              ; preds = %355
  %361 = load volatile i32, i32* %357, align 4, !dbg !7833
  %362 = tail call i32 @add_node(i32 noundef 18, i32 noundef 32, i32 noundef -1, i32* noundef nonnull %357, i32 noundef %361) #25, !dbg !7835
  br label %363, !dbg !7836

363:                                              ; preds = %360, %355
  store volatile i32 0, i32* %357, align 4, !dbg !7837
  %364 = add nuw nsw i32 %356, 1, !dbg !7838
  call void @llvm.dbg.value(metadata i32 %364, metadata !7423, metadata !DIExpression()), !dbg !7425
  %365 = icmp eq i32 %364, %340, !dbg !7839
  br i1 %365, label %352, label %355, !dbg !7808, !llvm.loop !7840

366:                                              ; preds = %377
  call void @llvm.dbg.value(metadata i32 0, metadata !7423, metadata !DIExpression()), !dbg !7425
  br i1 %7, label %391, label %367, !dbg !7842

367:                                              ; preds = %366
  %368 = call i32 @llvm.umax.i32(i32 %6, i32 1), !dbg !7842
  br label %380, !dbg !7842

369:                                              ; preds = %353, %377
  %370 = phi i32 [ %378, %377 ], [ 0, %353 ]
  call void @llvm.dbg.value(metadata i32 %370, metadata !7423, metadata !DIExpression()), !dbg !7425
  %371 = getelementptr inbounds i32, i32* %5, i32 %370, !dbg !7844
  %372 = load volatile i32, i32* %371, align 4, !dbg !7844
  call void @llvm.dbg.value(metadata i32 %372, metadata !7422, metadata !DIExpression()), !dbg !7425
  %373 = icmp eq i32 %372, 0, !dbg !7847
  br i1 %373, label %377, label %374, !dbg !7849

374:                                              ; preds = %369
  %375 = load volatile i32, i32* %371, align 4, !dbg !7850
  %376 = tail call i32 @add_node(i32 noundef 19, i32 noundef 32, i32 noundef 0, i32* noundef nonnull %371, i32 noundef %375) #25, !dbg !7852
  br label %377, !dbg !7853

377:                                              ; preds = %369, %374
  %378 = add nuw nsw i32 %370, 1, !dbg !7854
  call void @llvm.dbg.value(metadata i32 %378, metadata !7423, metadata !DIExpression()), !dbg !7425
  %379 = icmp eq i32 %378, %354, !dbg !7855
  br i1 %379, label %366, label %369, !dbg !7825, !llvm.loop !7856

380:                                              ; preds = %367, %388
  %381 = phi i32 [ %389, %388 ], [ 0, %367 ]
  call void @llvm.dbg.value(metadata i32 %381, metadata !7423, metadata !DIExpression()), !dbg !7425
  %382 = getelementptr inbounds i32, i32* %5, i32 %381, !dbg !7858
  store volatile i32 0, i32* %382, align 4, !dbg !7861
  store volatile i32 1642143305, i32* %382, align 4, !dbg !7862
  %383 = load volatile i32, i32* %382, align 4, !dbg !7863
  call void @llvm.dbg.value(metadata i32 %383, metadata !7422, metadata !DIExpression()), !dbg !7425
  %384 = icmp eq i32 %383, 1642143305, !dbg !7864
  br i1 %384, label %388, label %385, !dbg !7866

385:                                              ; preds = %380
  %386 = load volatile i32, i32* %382, align 4, !dbg !7867
  %387 = tail call i32 @add_node(i32 noundef 20, i32 noundef 32, i32 noundef 1642143305, i32* noundef nonnull %382, i32 noundef %386) #25, !dbg !7869
  br label %388, !dbg !7870

388:                                              ; preds = %380, %385
  %389 = add nuw nsw i32 %381, 1, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %389, metadata !7423, metadata !DIExpression()), !dbg !7425
  %390 = icmp eq i32 %389, %368, !dbg !7872
  br i1 %390, label %391, label %380, !dbg !7842, !llvm.loop !7873

391:                                              ; preds = %388, %117, %137, %145, %159, %167, %182, %199, %217, %235, %253, %271, %288, %302, %310, %324, %338, %352, %366
  ret i32 0, !dbg !7875
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_init(i32 noundef %0, %struct.pmic_i2c_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7887, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.value(metadata %struct.pmic_i2c_config_t* %1, metadata !7888, metadata !DIExpression()), !dbg !7889
  %3 = icmp eq i32 %0, 0, !dbg !7890
  br i1 %3, label %4, label %7, !dbg !7892

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.pmic_i2c_config_t, %struct.pmic_i2c_config_t* %1, i32 0, i32 0, !dbg !7893
  %6 = load i32, i32* %5, align 4, !dbg !7893
  tail call void @i2c_set_frequency(i32 noundef 3, i32 noundef %6) #24, !dbg !7894
  br label %7, !dbg !7895

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -102, %2 ], !dbg !7889
  ret i32 %8, !dbg !7896
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_send_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !7897 {
  %5 = alloca %struct.debug_array, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7901, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i8 %1, metadata !7902, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i8* %2, metadata !7903, metadata !DIExpression()), !dbg !7916
  call void @llvm.dbg.value(metadata i32 %3, metadata !7904, metadata !DIExpression()), !dbg !7916
  %6 = bitcast %struct.debug_array* %5 to i8*, !dbg !7917
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !7917
  call void @llvm.dbg.declare(metadata %struct.debug_array* %5, metadata !7907, metadata !DIExpression()), !dbg !7918
  %7 = icmp eq i32 %0, 0, !dbg !7919
  br i1 %7, label %8, label %28, !dbg !7921

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !7922
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !7924
  br i1 %11, label %28, label %12, !dbg !7924

12:                                               ; preds = %8
  %13 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7925
  %14 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %13, i32 0, i32 4, !dbg !7925
  store volatile i16 0, i16* %14, align 2, !dbg !7925
  %15 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %5, i32 0, i32 0, !dbg !7926
  store i32 %3, i32* %15, align 4, !dbg !7927
  %16 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %5, i32 0, i32 1, !dbg !7928
  store i32 0, i32* %16, align 4, !dbg !7929
  %17 = shl i8 %1, 1, !dbg !7930
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 0, i8 noundef zeroext %17, %struct.debug_array* noundef nonnull %5) #24, !dbg !7931
  call void @i2c_write_fifo(i32 noundef 3, i8* noundef nonnull %2, i32 noundef %3) #24, !dbg !7932
  %18 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7933
  %19 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %18, i32 0, i32 18, !dbg !7933
  store volatile i16 1, i16* %19, align 2, !dbg !7933
  %20 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %18, i32 0, i32 6
  br label %21, !dbg !7934

21:                                               ; preds = %21, %12
  %22 = load volatile i16, i16* %20, align 2, !dbg !7935
  %23 = icmp eq i16 %22, 0, !dbg !7936
  br i1 %23, label %21, label %24, !dbg !7934, !llvm.loop !7937

24:                                               ; preds = %21
  %25 = call i32 @i2c_get_transaction_status(i32 noundef 3) #24, !dbg !7939
  call void @llvm.dbg.value(metadata i32 %25, metadata !7905, metadata !DIExpression()), !dbg !7916
  %26 = icmp eq i32 %25, 0, !dbg !7940
  br i1 %26, label %28, label %27, !dbg !7942

27:                                               ; preds = %24
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__FUNCTION__.pmic_i2c_send_polling, i32 0, i32 0), i32 noundef 126, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.179, i32 0, i32 0), i32 noundef %25) #24, !dbg !7943
  br label %28, !dbg !7945

28:                                               ; preds = %24, %8, %4, %27
  %29 = phi i32 [ %25, %27 ], [ -102, %4 ], [ -101, %8 ], [ 0, %24 ], !dbg !7916
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !7946
  ret i32 %29, !dbg !7946
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_receive_polling(i32 noundef %0, i8 noundef zeroext %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !7947 {
  %5 = alloca %struct.debug_array, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7951, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i8 %1, metadata !7952, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i8* %2, metadata !7953, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.value(metadata i32 %3, metadata !7954, metadata !DIExpression()), !dbg !7957
  %6 = bitcast %struct.debug_array* %5 to i8*, !dbg !7958
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %6) #23, !dbg !7958
  call void @llvm.dbg.declare(metadata %struct.debug_array* %5, metadata !7956, metadata !DIExpression()), !dbg !7959
  %7 = icmp eq i32 %0, 0, !dbg !7960
  br i1 %7, label %8, label %29, !dbg !7962

8:                                                ; preds = %4
  %9 = icmp eq i8* %2, null, !dbg !7963
  %10 = icmp ugt i32 %3, 8
  %11 = or i1 %9, %10, !dbg !7965
  br i1 %11, label %29, label %12, !dbg !7965

12:                                               ; preds = %8
  %13 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7966
  %14 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %13, i32 0, i32 4, !dbg !7966
  store volatile i16 0, i16* %14, align 2, !dbg !7966
  %15 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %5, i32 0, i32 0, !dbg !7967
  store i32 0, i32* %15, align 4, !dbg !7968
  %16 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %5, i32 0, i32 1, !dbg !7969
  store i32 %3, i32* %16, align 4, !dbg !7970
  %17 = shl i8 %1, 1, !dbg !7971
  %18 = or i8 %17, 1, !dbg !7971
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 2, i8 noundef zeroext %18, %struct.debug_array* noundef nonnull %5) #24, !dbg !7972
  %19 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !7973
  %20 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %19, i32 0, i32 18, !dbg !7973
  store volatile i16 1, i16* %20, align 2, !dbg !7973
  %21 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %19, i32 0, i32 6
  br label %22, !dbg !7974

22:                                               ; preds = %22, %12
  %23 = load volatile i16, i16* %21, align 2, !dbg !7975
  %24 = icmp eq i16 %23, 0, !dbg !7976
  br i1 %24, label %22, label %25, !dbg !7974, !llvm.loop !7977

25:                                               ; preds = %22
  %26 = call i32 @i2c_get_transaction_status(i32 noundef 3) #24, !dbg !7979
  call void @llvm.dbg.value(metadata i32 %26, metadata !7955, metadata !DIExpression()), !dbg !7957
  %27 = icmp eq i32 %26, 0, !dbg !7980
  br i1 %27, label %28, label %29, !dbg !7982

28:                                               ; preds = %25
  call void @i2c_read_fifo(i32 noundef 3, i8* noundef %2, i32 noundef %3) #24, !dbg !7983
  br label %29, !dbg !7985

29:                                               ; preds = %25, %8, %4, %28
  %30 = phi i32 [ 0, %28 ], [ -102, %4 ], [ -101, %8 ], [ %26, %25 ], !dbg !7957
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %6) #23, !dbg !7986
  ret i32 %30, !dbg !7986
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pmic_i2c_send_to_receive_polling(i32 noundef %0, %struct.pmic_i2c_send_to_receive_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !7987 {
  %3 = alloca %struct.debug_array, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8000, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.value(metadata %struct.pmic_i2c_send_to_receive_config_t* %1, metadata !8001, metadata !DIExpression()), !dbg !8004
  %4 = bitcast %struct.debug_array* %3 to i8*, !dbg !8005
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %4) #23, !dbg !8005
  call void @llvm.dbg.declare(metadata %struct.debug_array* %3, metadata !8003, metadata !DIExpression()), !dbg !8006
  %5 = icmp eq i32 %0, 0, !dbg !8007
  br i1 %5, label %6, label %47, !dbg !8009

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 1, !dbg !8010
  %8 = load i8*, i8** %7, align 4, !dbg !8010
  %9 = icmp eq i8* %8, null, !dbg !8012
  br i1 %9, label %47, label %10, !dbg !8013

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 3, !dbg !8014
  %12 = load i8*, i8** %11, align 4, !dbg !8014
  %13 = icmp eq i8* %12, null, !dbg !8015
  br i1 %13, label %47, label %14, !dbg !8016

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 2, !dbg !8017
  %16 = load i32, i32* %15, align 4, !dbg !8017
  %17 = icmp ugt i32 %16, 8, !dbg !8019
  br i1 %17, label %47, label %18, !dbg !8020

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 4, !dbg !8021
  %20 = load i32, i32* %19, align 4, !dbg !8021
  %21 = icmp ugt i32 %20, 8, !dbg !8022
  br i1 %21, label %47, label %22, !dbg !8023

22:                                               ; preds = %18
  %23 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !8024
  %24 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %23, i32 0, i32 4, !dbg !8024
  store volatile i16 0, i16* %24, align 2, !dbg !8024
  %25 = load i32, i32* %15, align 4, !dbg !8025
  %26 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 0, !dbg !8026
  store i32 %25, i32* %26, align 4, !dbg !8027
  %27 = load i32, i32* %19, align 4, !dbg !8028
  %28 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 1, !dbg !8029
  store i32 %27, i32* %28, align 4, !dbg !8030
  %29 = getelementptr inbounds %struct.pmic_i2c_send_to_receive_config_t, %struct.pmic_i2c_send_to_receive_config_t* %1, i32 0, i32 0, !dbg !8031
  %30 = load i8, i8* %29, align 4, !dbg !8031
  %31 = shl i8 %30, 1, !dbg !8031
  call void @i2c_config_hardware(i32 noundef 3, i32 noundef 4, i8 noundef zeroext %31, %struct.debug_array* noundef nonnull %3) #24, !dbg !8032
  %32 = load i8*, i8** %7, align 4, !dbg !8033
  %33 = load i32, i32* %15, align 4, !dbg !8034
  call void @i2c_write_fifo(i32 noundef 3, i8* noundef %32, i32 noundef %33) #24, !dbg !8035
  %34 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** getelementptr inbounds ([4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 3), align 4, !dbg !8036
  %35 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %34, i32 0, i32 18, !dbg !8036
  store volatile i16 1, i16* %35, align 2, !dbg !8036
  %36 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %34, i32 0, i32 6
  br label %37, !dbg !8037

37:                                               ; preds = %37, %22
  %38 = load volatile i16, i16* %36, align 2, !dbg !8038
  %39 = icmp eq i16 %38, 0, !dbg !8039
  br i1 %39, label %37, label %40, !dbg !8037, !llvm.loop !8040

40:                                               ; preds = %37
  %41 = call i32 @i2c_get_transaction_status(i32 noundef 3) #24, !dbg !8042
  call void @llvm.dbg.value(metadata i32 %41, metadata !8002, metadata !DIExpression()), !dbg !8004
  %42 = icmp eq i32 %41, 0, !dbg !8043
  br i1 %42, label %44, label %43, !dbg !8045

43:                                               ; preds = %40
  call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @__FUNCTION__.pmic_i2c_send_to_receive_polling, i32 0, i32 0), i32 noundef 227, i8* noundef getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.182, i32 0, i32 0), i32 noundef %41) #24, !dbg !8046
  br label %47, !dbg !8048

44:                                               ; preds = %40
  %45 = load i8*, i8** %11, align 4, !dbg !8049
  %46 = load i32, i32* %19, align 4, !dbg !8051
  call void @i2c_read_fifo(i32 noundef 3, i8* noundef %45, i32 noundef %46) #24, !dbg !8052
  br label %47, !dbg !8053

47:                                               ; preds = %14, %18, %6, %10, %2, %44, %43
  %48 = phi i32 [ %41, %43 ], [ 0, %44 ], [ -102, %2 ], [ -101, %10 ], [ -101, %6 ], [ -101, %18 ], [ -101, %14 ], !dbg !8004
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %4) #23, !dbg !8054
  ret i32 %48, !dbg !8054
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_error_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, ...) local_unnamed_addr #14 !dbg !8055 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8060, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.value(metadata i32 %1, metadata !8061, metadata !DIExpression()), !dbg !8063
  call void @llvm.dbg.value(metadata i8* %2, metadata !8062, metadata !DIExpression()), !dbg !8063
  ret void, !dbg !8064
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_warning_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, ...) local_unnamed_addr #14 !dbg !8065 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8067, metadata !DIExpression()), !dbg !8070
  call void @llvm.dbg.value(metadata i32 %1, metadata !8068, metadata !DIExpression()), !dbg !8070
  call void @llvm.dbg.value(metadata i8* %2, metadata !8069, metadata !DIExpression()), !dbg !8070
  ret void, !dbg !8071
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_info_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, ...) local_unnamed_addr #14 !dbg !8072 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8074, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i32 %1, metadata !8075, metadata !DIExpression()), !dbg !8077
  call void @llvm.dbg.value(metadata i8* %2, metadata !8076, metadata !DIExpression()), !dbg !8077
  ret void, !dbg !8078
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #14 !dbg !8079 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8085, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i32 %1, metadata !8086, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i8* %2, metadata !8087, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i8* %3, metadata !8088, metadata !DIExpression()), !dbg !8090
  call void @llvm.dbg.value(metadata i32 %4, metadata !8089, metadata !DIExpression()), !dbg !8090
  ret void, !dbg !8091
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_set_frequency(i32 noundef %0, i32 noundef %1) local_unnamed_addr #12 !dbg !8092 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8094, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i32 %1, metadata !8095, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i32 0, metadata !8096, metadata !DIExpression()), !dbg !8102
  %3 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !8103
  %4 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %3, align 4, !dbg !8103
  %5 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 21, !dbg !8104
  store volatile i16 0, i16* %5, align 2, !dbg !8105
  switch i32 %1, label %11 [
    i32 0, label %6
    i32 1, label %13
    i32 2, label %7
    i32 3, label %8
    i32 4, label %9
    i32 5, label %10
  ], !dbg !8106

6:                                                ; preds = %2
  store volatile i16 1, i16* %5, align 2, !dbg !8107
  call void @llvm.dbg.value(metadata i32 100, metadata !8096, metadata !DIExpression()), !dbg !8102
  br label %13, !dbg !8109

7:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 200, metadata !8096, metadata !DIExpression()), !dbg !8102
  br label %13, !dbg !8110

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 300, metadata !8096, metadata !DIExpression()), !dbg !8102
  br label %13, !dbg !8111

9:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i32 400, metadata !8096, metadata !DIExpression()), !dbg !8102
  br label %13, !dbg !8112

10:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 1000, metadata !8096, metadata !DIExpression()), !dbg !8102
  br label %13, !dbg !8113

11:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 %1, metadata !8096, metadata !DIExpression()), !dbg !8102
  %12 = shl i32 %1, 1, !dbg !8114
  br label %13, !dbg !8114

13:                                               ; preds = %2, %11, %10, %9, %8, %7, %6
  %14 = phi i32 [ %12, %11 ], [ 2000, %10 ], [ 800, %9 ], [ 600, %8 ], [ 400, %7 ], [ 200, %6 ], [ 200, %2 ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !8096, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i32 1, metadata !8098, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i32 undef, metadata !8097, metadata !DIExpression()), !dbg !8102
  %15 = getelementptr inbounds [4 x i32], [4 x i32]* @g_i2c_source_clock_table, i32 0, i32 %0
  %16 = load i32, i32* %15, align 4
  br label %17, !dbg !8115

17:                                               ; preds = %13, %24
  %18 = phi i32 [ 1, %13 ], [ %25, %24 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !8098, metadata !DIExpression()), !dbg !8102
  %19 = mul i32 %18, %14, !dbg !8117
  call void @llvm.dbg.value(metadata i32 %19, metadata !8101, metadata !DIExpression()), !dbg !8102
  %20 = add i32 %19, -1, !dbg !8120
  %21 = add i32 %20, %16, !dbg !8121
  %22 = udiv i32 %21, %19, !dbg !8122
  call void @llvm.dbg.value(metadata i32 %22, metadata !8097, metadata !DIExpression()), !dbg !8102
  %23 = icmp ult i32 %22, 65, !dbg !8123
  br i1 %23, label %27, label %24, !dbg !8125

24:                                               ; preds = %17
  %25 = add nuw nsw i32 %18, 1, !dbg !8126
  call void @llvm.dbg.value(metadata i32 %22, metadata !8097, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i32 %25, metadata !8098, metadata !DIExpression()), !dbg !8102
  %26 = icmp eq i32 %25, 9, !dbg !8127
  br i1 %26, label %27, label %17, !dbg !8115, !llvm.loop !8128

27:                                               ; preds = %17, %24
  %28 = phi i32 [ %18, %17 ], [ 9, %24 ], !dbg !8130
  call void @llvm.dbg.value(metadata i32 %22, metadata !8097, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.value(metadata i32 %28, metadata !8098, metadata !DIExpression(DW_OP_plus_uconst, 16777215, DW_OP_stack_value)), !dbg !8102
  %29 = add i32 %22, 63, !dbg !8131
  call void @llvm.dbg.value(metadata i32 %22, metadata !8097, metadata !DIExpression(DW_OP_plus_uconst, 63, DW_OP_stack_value)), !dbg !8102
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %4, i32 0, i32 16, !dbg !8132
  %31 = load volatile i16, i16* %30, align 2, !dbg !8132
  %32 = and i16 %31, -1856, !dbg !8133
  call void @llvm.dbg.value(metadata i16 %32, metadata !8099, metadata !DIExpression(DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8102
  %33 = shl i32 %28, 8, !dbg !8134
  %34 = add i32 %33, 1792, !dbg !8134
  %35 = and i32 %34, 1792, !dbg !8135
  %36 = and i32 %29, 63, !dbg !8136
  %37 = or i32 %36, %35, !dbg !8137
  call void @llvm.dbg.value(metadata !DIArgList(i32 %37, i16 %32), metadata !8100, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_or, DW_OP_stack_value)), !dbg !8102
  %38 = trunc i32 %37 to i16, !dbg !8138
  %39 = or i16 %32, %38, !dbg !8138
  store volatile i16 %39, i16* %30, align 2, !dbg !8139
  ret void, !dbg !8140
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_config_hardware(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2, %struct.debug_array* nocapture noundef readonly %3) local_unnamed_addr #12 !dbg !8141 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8155, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata i32 %1, metadata !8156, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata i8 %2, metadata !8157, metadata !DIExpression()), !dbg !8159
  call void @llvm.dbg.value(metadata %struct.debug_array* %3, metadata !8158, metadata !DIExpression()), !dbg !8159
  %5 = zext i8 %2 to i16, !dbg !8160
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !8161
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4, !dbg !8161
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 2, !dbg !8162
  store volatile i16 %5, i16* %8, align 2, !dbg !8163
  %9 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 27, !dbg !8164
  store volatile i16 1, i16* %9, align 2, !dbg !8164
  %10 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 6, !dbg !8165
  store volatile i16 31, i16* %10, align 2, !dbg !8165
  switch i32 %1, label %117 [
    i32 14, label %100
    i32 13, label %89
    i32 6, label %11
    i32 0, label %12
    i32 7, label %21
    i32 1, label %22
    i32 8, label %31
    i32 2, label %32
    i32 9, label %41
    i32 3, label %42
    i32 10, label %51
    i32 4, label %52
    i32 12, label %78
    i32 5, label %65
    i32 11, label %64
  ], !dbg !8166

11:                                               ; preds = %4
  br label %12

12:                                               ; preds = %4, %11
  %13 = phi i16 [ 3, %11 ], [ 0, %4 ]
  %14 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8167
  store volatile i16 %13, i16* %14, align 2, !dbg !8167
  %15 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8167
  store volatile i16 32, i16* %15, align 2, !dbg !8167
  %16 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 0, !dbg !8170
  %17 = load i32, i32* %16, align 4, !dbg !8170
  %18 = trunc i32 %17 to i16, !dbg !8171
  %19 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8172
  store volatile i16 %18, i16* %19, align 2, !dbg !8173
  %20 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8174
  store volatile i16 1, i16* %20, align 2, !dbg !8175
  br label %114, !dbg !8176

21:                                               ; preds = %4
  br label %22

22:                                               ; preds = %4, %21
  %23 = phi i16 [ 3, %21 ], [ 0, %4 ]
  %24 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8177
  store volatile i16 %23, i16* %24, align 2, !dbg !8177
  %25 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8177
  store volatile i16 36, i16* %25, align 2, !dbg !8177
  %26 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 0, !dbg !8179
  %27 = load i32, i32* %26, align 4, !dbg !8179
  %28 = trunc i32 %27 to i16, !dbg !8180
  %29 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8181
  store volatile i16 %28, i16* %29, align 2, !dbg !8182
  %30 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8183
  store volatile i16 1, i16* %30, align 2, !dbg !8184
  br label %114, !dbg !8185

31:                                               ; preds = %4
  br label %32

32:                                               ; preds = %4, %31
  %33 = phi i16 [ 3, %31 ], [ 0, %4 ]
  %34 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8186
  store volatile i16 %33, i16* %34, align 2, !dbg !8186
  %35 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8186
  store volatile i16 32, i16* %35, align 2, !dbg !8186
  %36 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 1, !dbg !8188
  %37 = load i32, i32* %36, align 4, !dbg !8188
  %38 = trunc i32 %37 to i16, !dbg !8189
  %39 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8190
  store volatile i16 %38, i16* %39, align 2, !dbg !8191
  %40 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8192
  store volatile i16 1, i16* %40, align 2, !dbg !8193
  br label %114, !dbg !8194

41:                                               ; preds = %4
  br label %42

42:                                               ; preds = %4, %41
  %43 = phi i16 [ 3, %41 ], [ 0, %4 ]
  %44 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8195
  store volatile i16 %43, i16* %44, align 2, !dbg !8195
  %45 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8195
  store volatile i16 36, i16* %45, align 2, !dbg !8195
  %46 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8197
  store volatile i16 1, i16* %46, align 2, !dbg !8198
  %47 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 1, !dbg !8199
  %48 = load i32, i32* %47, align 4, !dbg !8199
  %49 = trunc i32 %48 to i16, !dbg !8200
  %50 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8201
  store volatile i16 %49, i16* %50, align 2, !dbg !8202
  br label %114, !dbg !8203

51:                                               ; preds = %4
  br label %52

52:                                               ; preds = %4, %51
  %53 = phi i16 [ 3, %51 ], [ 0, %4 ]
  %54 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8204
  store volatile i16 %53, i16* %54, align 2, !dbg !8204
  %55 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8204
  store volatile i16 114, i16* %55, align 2, !dbg !8204
  %56 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 0, !dbg !8206
  %57 = load i32, i32* %56, align 4, !dbg !8206
  %58 = trunc i32 %57 to i16, !dbg !8207
  %59 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8208
  store volatile i16 %58, i16* %59, align 2, !dbg !8209
  %60 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8210
  store volatile i16 2, i16* %60, align 2, !dbg !8211
  %61 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 1, !dbg !8212
  %62 = load i32, i32* %61, align 4, !dbg !8212
  %63 = trunc i32 %62 to i16, !dbg !8213
  br label %114, !dbg !8214

64:                                               ; preds = %4
  br label %65

65:                                               ; preds = %4, %64
  %66 = phi i16 [ 3, %64 ], [ 0, %4 ]
  %67 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8215
  store volatile i16 %66, i16* %67, align 2, !dbg !8215
  %68 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8215
  store volatile i16 118, i16* %68, align 2, !dbg !8215
  %69 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 0, !dbg !8217
  %70 = load i32, i32* %69, align 4, !dbg !8217
  %71 = trunc i32 %70 to i16, !dbg !8218
  %72 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8219
  store volatile i16 %71, i16* %72, align 2, !dbg !8220
  %73 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 1, !dbg !8221
  %74 = load i32, i32* %73, align 4, !dbg !8221
  %75 = trunc i32 %74 to i16, !dbg !8222
  %76 = add i16 %75, 1, !dbg !8222
  %77 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8223
  store volatile i16 %76, i16* %77, align 2, !dbg !8224
  br label %114, !dbg !8225

78:                                               ; preds = %4
  %79 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8226
  store volatile i16 3, i16* %79, align 2, !dbg !8227
  %80 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8228
  store volatile i16 38, i16* %80, align 2, !dbg !8229
  %81 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 2, !dbg !8230
  %82 = load i32, i32* %81, align 4, !dbg !8230
  %83 = trunc i32 %82 to i16, !dbg !8231
  %84 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8232
  store volatile i16 %83, i16* %84, align 2, !dbg !8233
  %85 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 4, !dbg !8234
  %86 = load i32, i32* %85, align 4, !dbg !8234
  %87 = trunc i32 %86 to i16, !dbg !8235
  %88 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8236
  store volatile i16 %87, i16* %88, align 2, !dbg !8237
  br label %114, !dbg !8238

89:                                               ; preds = %4
  %90 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8239
  store volatile i16 3, i16* %90, align 2, !dbg !8240
  %91 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8241
  store volatile i16 38, i16* %91, align 2, !dbg !8242
  %92 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 2, !dbg !8243
  %93 = load i32, i32* %92, align 4, !dbg !8243
  %94 = trunc i32 %93 to i16, !dbg !8244
  %95 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8245
  store volatile i16 %94, i16* %95, align 2, !dbg !8246
  %96 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 4, !dbg !8247
  %97 = load i32, i32* %96, align 4, !dbg !8247
  %98 = trunc i32 %97 to i16, !dbg !8248
  %99 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8249
  store volatile i16 %98, i16* %99, align 2, !dbg !8250
  br label %114, !dbg !8251

100:                                              ; preds = %4
  %101 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 30, !dbg !8252
  store volatile i16 3, i16* %101, align 2, !dbg !8253
  %102 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 8, !dbg !8254
  store volatile i16 118, i16* %102, align 2, !dbg !8255
  %103 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 2, !dbg !8256
  %104 = load i32, i32* %103, align 4, !dbg !8256
  %105 = trunc i32 %104 to i16, !dbg !8257
  %106 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 10, !dbg !8258
  store volatile i16 %105, i16* %106, align 2, !dbg !8259
  %107 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 4, !dbg !8260
  %108 = load i32, i32* %107, align 4, !dbg !8260
  %109 = trunc i32 %108 to i16, !dbg !8261
  %110 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 12, !dbg !8262
  store volatile i16 %109, i16* %110, align 2, !dbg !8263
  %111 = getelementptr inbounds %struct.debug_array, %struct.debug_array* %3, i32 0, i32 3, !dbg !8264
  %112 = load i32, i32* %111, align 4, !dbg !8264
  %113 = trunc i32 %112 to i16, !dbg !8265
  br label %114, !dbg !8266

114:                                              ; preds = %12, %22, %32, %42, %52, %65, %78, %89, %100
  %115 = phi i16 [ %113, %100 ], [ 1, %89 ], [ 1, %78 ], [ 1, %65 ], [ %63, %52 ], [ 1, %42 ], [ 1, %32 ], [ 1, %22 ], [ 1, %12 ]
  %116 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 45, !dbg !8267
  store volatile i16 %115, i16* %116, align 2, !dbg !8267
  br label %117, !dbg !8268

117:                                              ; preds = %114, %4
  ret void, !dbg !8268
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_write_fifo(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !8269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8273, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.value(metadata i8* %1, metadata !8274, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.value(metadata i32 %2, metadata !8275, metadata !DIExpression()), !dbg !8277
  call void @llvm.dbg.value(metadata i32 0, metadata !8276, metadata !DIExpression()), !dbg !8277
  %4 = icmp eq i32 %2, 0, !dbg !8278
  br i1 %4, label %16, label %5, !dbg !8281

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !8281

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !8276, metadata !DIExpression()), !dbg !8277
  %11 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !8282
  %12 = load i8, i8* %11, align 1, !dbg !8284
  %13 = zext i8 %12 to i16, !dbg !8284
  store volatile i16 %13, i16* %8, align 2, !dbg !8285
  %14 = add nuw i32 %10, 1, !dbg !8286
  call void @llvm.dbg.value(metadata i32 %14, metadata !8276, metadata !DIExpression()), !dbg !8277
  %15 = icmp eq i32 %14, %2, !dbg !8278
  br i1 %15, label %16, label %9, !dbg !8281, !llvm.loop !8287

16:                                               ; preds = %9, %3
  ret void, !dbg !8289
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @i2c_read_fifo(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef %2) local_unnamed_addr #12 !dbg !8290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8294, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.value(metadata i8* %1, metadata !8295, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.value(metadata i32 %2, metadata !8296, metadata !DIExpression()), !dbg !8298
  call void @llvm.dbg.value(metadata i32 0, metadata !8297, metadata !DIExpression()), !dbg !8298
  %4 = icmp eq i32 %2, 0, !dbg !8299
  br i1 %4, label %16, label %5, !dbg !8302

5:                                                ; preds = %3
  %6 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0
  %7 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %6, align 4
  %8 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %7, i32 0, i32 0
  br label %9, !dbg !8302

9:                                                ; preds = %5, %9
  %10 = phi i32 [ 0, %5 ], [ %14, %9 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !8297, metadata !DIExpression()), !dbg !8298
  %11 = load volatile i16, i16* %8, align 2, !dbg !8303
  %12 = trunc i16 %11 to i8, !dbg !8305
  %13 = getelementptr inbounds i8, i8* %1, i32 %10, !dbg !8306
  store i8 %12, i8* %13, align 1, !dbg !8307
  %14 = add nuw i32 %10, 1, !dbg !8308
  call void @llvm.dbg.value(metadata i32 %14, metadata !8297, metadata !DIExpression()), !dbg !8298
  %15 = icmp eq i32 %14, %2, !dbg !8299
  br i1 %15, label %16, label %9, !dbg !8302, !llvm.loop !8309

16:                                               ; preds = %9, %3
  ret void, !dbg !8311
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @i2c_get_transaction_status(i32 noundef %0) local_unnamed_addr #12 !dbg !8312 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8316, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata i32 -4, metadata !8318, metadata !DIExpression()), !dbg !8319
  %2 = getelementptr inbounds [4 x %struct.I2C_REGISTER_T*], [4 x %struct.I2C_REGISTER_T*]* @i2c_master_register, i32 0, i32 %0, !dbg !8320
  %3 = load %struct.I2C_REGISTER_T*, %struct.I2C_REGISTER_T** %2, align 4, !dbg !8320
  %4 = getelementptr inbounds %struct.I2C_REGISTER_T, %struct.I2C_REGISTER_T* %3, i32 0, i32 6, !dbg !8321
  %5 = load volatile i16, i16* %4, align 2, !dbg !8321
  call void @llvm.dbg.value(metadata i16 %5, metadata !8317, metadata !DIExpression()), !dbg !8319
  %6 = zext i16 %5 to i32, !dbg !8322
  %7 = and i32 %6, 2, !dbg !8324
  %8 = icmp eq i32 %7, 0, !dbg !8325
  br i1 %8, label %9, label %18, !dbg !8326

9:                                                ; preds = %1
  %10 = and i32 %6, 4, !dbg !8327
  %11 = icmp eq i32 %10, 0, !dbg !8329
  br i1 %11, label %12, label %18, !dbg !8330

12:                                               ; preds = %9
  %13 = and i32 %6, 16, !dbg !8331
  %14 = icmp eq i32 %13, 0, !dbg !8333
  br i1 %14, label %15, label %18, !dbg !8334

15:                                               ; preds = %12
  %16 = icmp eq i16 %5, 1, !dbg !8335
  %17 = select i1 %16, i32 0, i32 -4, !dbg !8337
  br label %18, !dbg !8337

18:                                               ; preds = %15, %12, %9, %1
  %19 = phi i32 [ -3, %1 ], [ -2, %9 ], [ -1, %12 ], [ %17, %15 ], !dbg !8319
  call void @llvm.dbg.value(metadata i32 %19, metadata !8318, metadata !DIExpression()), !dbg !8319
  store volatile i16 31, i16* %4, align 2, !dbg !8338
  ret i32 %19, !dbg !8339
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #17 section ".ram_code" !dbg !8340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8342, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata i32 0, metadata !8343, metadata !DIExpression()), !dbg !8344
  call void @llvm.dbg.value(metadata i32 %0, metadata !8343, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !8344
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !8343, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8344
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !8343, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8344
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !8345
  call void @llvm.dbg.value(metadata i32 %2, metadata !8343, metadata !DIExpression()), !dbg !8344
  ret i32 %2, !dbg !8346
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #12 section ".tcm_code" !dbg !8347 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8352, metadata !DIExpression()), !dbg !8354
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8355
  call void @llvm.dbg.value(metadata i32 %2, metadata !8353, metadata !DIExpression()), !dbg !8354
  switch i16 %0, label %4 [
    i16 0, label %5
    i16 1, label %3
  ], !dbg !8356

3:                                                ; preds = %1
  br label %5, !dbg !8357

4:                                                ; preds = %1, %4
  br label %4, !dbg !8361, !llvm.loop !8365

5:                                                ; preds = %1, %3
  %6 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %3 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %7 = load volatile i32, i32* %6, align 4, !dbg !8366
  %8 = shl i32 %7, 4, !dbg !8366
  %9 = and i32 %8, 16, !dbg !8366
  call void @llvm.dbg.value(metadata i32 undef, metadata !8353, metadata !DIExpression()), !dbg !8354
  %10 = or i32 %2, %9, !dbg !8367
  %11 = or i32 %10, 8, !dbg !8367
  call void @llvm.dbg.value(metadata i32 %11, metadata !8353, metadata !DIExpression()), !dbg !8354
  store volatile i32 %11, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8368
  ret void, !dbg !8369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #12 section ".tcm_code" !dbg !8370 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !8372, metadata !DIExpression()), !dbg !8374
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8375
  call void @llvm.dbg.value(metadata i32 %2, metadata !8373, metadata !DIExpression()), !dbg !8374
  %3 = and i32 %2, -268435477, !dbg !8376
  call void @llvm.dbg.value(metadata i32 %3, metadata !8373, metadata !DIExpression()), !dbg !8374
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8377
  br label %4, !dbg !8378

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8379
  %6 = and i32 %5, 2, !dbg !8380
  %7 = icmp eq i32 %6, 0, !dbg !8378
  br i1 %7, label %8, label %4, !dbg !8378, !llvm.loop !8381

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8383
  call void @llvm.dbg.value(metadata i32 %9, metadata !8373, metadata !DIExpression()), !dbg !8374
  %10 = and i32 %9, -9, !dbg !8384
  call void @llvm.dbg.value(metadata i32 %10, metadata !8373, metadata !DIExpression()), !dbg !8374
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8385
  br label %11, !dbg !8386

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8387
  %13 = and i32 %12, 8, !dbg !8388
  %14 = icmp eq i32 %13, 0, !dbg !8386
  br i1 %14, label %15, label %11, !dbg !8386, !llvm.loop !8389

15:                                               ; preds = %11
  ret void, !dbg !8391
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #12 section ".tcm_code" !dbg !8392 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8396, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 0, metadata !8397, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 0, metadata !8398, metadata !DIExpression()), !dbg !8399
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8400
  call void @llvm.dbg.value(metadata i32 %2, metadata !8397, metadata !DIExpression()), !dbg !8399
  call void @llvm.dbg.value(metadata i32 %2, metadata !8397, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !8399
  %3 = icmp eq i16 %0, 1, !dbg !8401
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !8403
  %5 = or i32 %2, %4, !dbg !8403
  call void @llvm.dbg.value(metadata i32 %5, metadata !8397, metadata !DIExpression()), !dbg !8399
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8404
  br label %6, !dbg !8405

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8406
  %8 = and i32 %7, 2, !dbg !8407
  %9 = icmp eq i32 %8, 0, !dbg !8408
  br i1 %9, label %6, label %10, !dbg !8405, !llvm.loop !8409

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8411
  %12 = and i32 %11, 1, !dbg !8412
  %13 = icmp eq i32 %12, 0, !dbg !8413
  br i1 %13, label %14, label %10, !dbg !8413, !llvm.loop !8414

14:                                               ; preds = %10
  ret i32 0, !dbg !8416
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #12 section ".tcm_code" !dbg !8417 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8419, metadata !DIExpression()), !dbg !8420
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #25, !dbg !8421
  tail call void @SFI_MacLeave(i16 zeroext undef) #25, !dbg !8422
  ret void, !dbg !8423
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #12 section ".tcm_code" !dbg !8424 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8428, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 %1, metadata !8429, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 %1, metadata !8430, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i8 0, metadata !8432, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 0, metadata !8431, metadata !DIExpression()), !dbg !8433
  %3 = icmp eq i32 %1, 0, !dbg !8434
  br i1 %3, label %16, label %4, !dbg !8437

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !8432, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 %6, metadata !8431, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 %7, metadata !8430, metadata !DIExpression()), !dbg !8433
  %8 = shl i32 %6, 8, !dbg !8438
  %9 = and i32 %7, 255, !dbg !8440
  %10 = or i32 %8, %9, !dbg !8441
  call void @llvm.dbg.value(metadata i32 %10, metadata !8431, metadata !DIExpression()), !dbg !8433
  %11 = lshr i32 %7, 8, !dbg !8442
  call void @llvm.dbg.value(metadata i32 %11, metadata !8430, metadata !DIExpression()), !dbg !8433
  %12 = add nuw nsw i8 %5, 1, !dbg !8443
  call void @llvm.dbg.value(metadata i8 %12, metadata !8432, metadata !DIExpression()), !dbg !8433
  %13 = icmp ult i32 %7, 256, !dbg !8434
  br i1 %13, label %14, label %4, !dbg !8437, !llvm.loop !8444

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !8446
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #25, !dbg !8448
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8449
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8450
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8451
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #25, !dbg !8452
  br label %16, !dbg !8453

16:                                               ; preds = %2, %14
  ret void, !dbg !8454
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #11 section ".ram_code" !dbg !8455 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8459, metadata !DIExpression()), !dbg !8465
  call void @llvm.dbg.value(metadata i8 %1, metadata !8460, metadata !DIExpression()), !dbg !8465
  call void @llvm.dbg.value(metadata i32 %2, metadata !8461, metadata !DIExpression()), !dbg !8465
  call void @llvm.dbg.value(metadata i32 %3, metadata !8462, metadata !DIExpression()), !dbg !8465
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #25, !dbg !8466
  call void @llvm.dbg.value(metadata i32 %5, metadata !8464, metadata !DIExpression()), !dbg !8465
  %6 = icmp eq i32 %3, 3, !dbg !8467
  br i1 %6, label %7, label %11, !dbg !8469

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !8470
  %9 = zext i8 %1 to i32, !dbg !8472
  %10 = or i32 %8, %9, !dbg !8473
  call void @llvm.dbg.value(metadata i32 %10, metadata !8463, metadata !DIExpression()), !dbg !8465
  br label %16, !dbg !8474

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !8475
  %13 = zext i8 %1 to i32, !dbg !8477
  %14 = or i32 %12, %13, !dbg !8478
  call void @llvm.dbg.value(metadata i32 %14, metadata !8463, metadata !DIExpression()), !dbg !8465
  %15 = lshr i32 %5, 24, !dbg !8479
  call void @llvm.dbg.value(metadata i32 %15, metadata !8464, metadata !DIExpression()), !dbg !8465
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !8480
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !8465
  call void @llvm.dbg.value(metadata i32 %18, metadata !8464, metadata !DIExpression()), !dbg !8465
  call void @llvm.dbg.value(metadata i32 %17, metadata !8463, metadata !DIExpression()), !dbg !8465
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8481
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8482
  %19 = add i32 %3, 1, !dbg !8483
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8484
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8485
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #25, !dbg !8486
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #25, !dbg !8487
  ret void, !dbg !8488
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #17 section ".ram_code" !dbg !8489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8493, metadata !DIExpression()), !dbg !8495
  call void @llvm.dbg.value(metadata i32 %1, metadata !8494, metadata !DIExpression()), !dbg !8495
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #25, !dbg !8496
  %4 = and i32 %3, -256, !dbg !8497
  %5 = and i32 %0, 255, !dbg !8498
  %6 = or i32 %4, %5, !dbg !8499
  ret i32 %6, !dbg !8500
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #11 section ".ram_code" !dbg !8501 {
  %5 = alloca %struct.pmic_i2c_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8506, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata i32 %1, metadata !8507, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata i8** %2, metadata !8508, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata i32* %3, metadata !8509, metadata !DIExpression()), !dbg !8521
  %6 = bitcast %struct.pmic_i2c_config_t* %5 to i8*, !dbg !8522
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !8522
  call void @llvm.dbg.declare(metadata %struct.pmic_i2c_config_t* %5, metadata !8510, metadata !DIExpression()), !dbg !8523
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #25, !dbg !8524
  call void @llvm.dbg.value(metadata i32 %7, metadata !8519, metadata !DIExpression()), !dbg !8521
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !8518, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8521
  %8 = lshr i32 %7, 24, !dbg !8525
  call void @llvm.dbg.value(metadata i32 %8, metadata !8519, metadata !DIExpression()), !dbg !8521
  %9 = trunc i32 %8 to i8, !dbg !8526
  %10 = bitcast %struct.pmic_i2c_config_t* %5 to [4 x i8]*, !dbg !8527
  store i8 %9, i8* %6, align 4, !dbg !8528
  call void @llvm.dbg.value(metadata i32 1, metadata !8520, metadata !DIExpression()), !dbg !8521
  %11 = load i8*, i8** %2, align 4, !dbg !8529
  br label %12, !dbg !8533

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !8529
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8520, metadata !DIExpression()), !dbg !8521
  %15 = load i8, i8* %13, align 1, !dbg !8534
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !8535
  store i8 %15, i8* %16, align 1, !dbg !8536
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8537
  store i8* %17, i8** %2, align 4, !dbg !8537
  %18 = add nuw nsw i32 %14, 1, !dbg !8538
  call void @llvm.dbg.value(metadata i32 %18, metadata !8520, metadata !DIExpression()), !dbg !8521
  %19 = icmp eq i32 %18, 4, !dbg !8539
  br i1 %19, label %20, label %12, !dbg !8533, !llvm.loop !8540

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.pmic_i2c_config_t, %struct.pmic_i2c_config_t* %5, i32 0, i32 0, !dbg !8542
  %22 = load i32, i32* %21, align 4, !dbg !8542
  call void @llvm.dbg.value(metadata i32 %22, metadata !8519, metadata !DIExpression()), !dbg !8521
  %23 = load i32, i32* %3, align 4, !dbg !8543
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !8544
  %25 = shl i32 %7, 8, !dbg !8545
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !8518, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8521
  %26 = and i32 %0, 255, !dbg !8546
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !8518, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8521
  %27 = or i32 %25, %26, !dbg !8547
  call void @llvm.dbg.value(metadata i32 %27, metadata !8518, metadata !DIExpression()), !dbg !8521
  store i32 %24, i32* %3, align 4, !dbg !8548
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8549
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !8550
  ret i32 %27, !dbg !8551
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 section ".ram_code" !dbg !8552 {
  %4 = alloca %struct.pmic_i2c_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8556, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i8* %1, metadata !8557, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %2, metadata !8558, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i8* %1, metadata !8560, metadata !DIExpression()), !dbg !8562
  %5 = bitcast %struct.pmic_i2c_config_t* %4 to i8*, !dbg !8563
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8563
  call void @llvm.dbg.declare(metadata %struct.pmic_i2c_config_t* %4, metadata !8561, metadata !DIExpression()), !dbg !8564
  %6 = add i32 %0, -1610348544, !dbg !8565
  call void @llvm.dbg.value(metadata i32 %6, metadata !8556, metadata !DIExpression()), !dbg !8562
  %7 = ptrtoint i8* %1 to i32, !dbg !8566
  %8 = and i32 %7, 3, !dbg !8568
  %9 = icmp eq i32 %8, 0, !dbg !8569
  br i1 %9, label %10, label %23, !dbg !8570

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %2, metadata !8558, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %6, metadata !8556, metadata !DIExpression()), !dbg !8562
  %11 = icmp sgt i32 %2, 0, !dbg !8571
  br i1 %11, label %12, label %72, !dbg !8575

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %14, metadata !8558, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %15, metadata !8556, metadata !DIExpression()), !dbg !8562
  %16 = bitcast i8* %13 to i32*, !dbg !8576
  %17 = load i32, i32* %16, align 4, !dbg !8576
  %18 = inttoptr i32 %15 to i32*, !dbg !8576
  store volatile i32 %17, i32* %18, align 4, !dbg !8576
  %19 = add i32 %15, 4, !dbg !8578
  call void @llvm.dbg.value(metadata i32 %19, metadata !8556, metadata !DIExpression()), !dbg !8562
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !8579
  call void @llvm.dbg.value(metadata i8* %20, metadata !8560, metadata !DIExpression()), !dbg !8562
  %21 = add nsw i32 %14, -4, !dbg !8580
  call void @llvm.dbg.value(metadata i32 %21, metadata !8558, metadata !DIExpression()), !dbg !8562
  %22 = icmp ugt i32 %14, 4, !dbg !8571
  br i1 %22, label %12, label %72, !dbg !8575, !llvm.loop !8581

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !8583
  %25 = icmp eq i32 %24, 0, !dbg !8585
  call void @llvm.dbg.value(metadata i8* %1, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i8* %1, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %2, metadata !8558, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %2, metadata !8558, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %6, metadata !8556, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %6, metadata !8556, metadata !DIExpression()), !dbg !8562
  %26 = icmp sgt i32 %2, 0, !dbg !8586
  br i1 %25, label %31, label %27, !dbg !8587

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !8588

28:                                               ; preds = %27
  %29 = bitcast %struct.pmic_i2c_config_t* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.pmic_i2c_config_t, %struct.pmic_i2c_config_t* %4, i32 0, i32 0
  br label %52, !dbg !8588

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !8591

32:                                               ; preds = %31
  %33 = bitcast %struct.pmic_i2c_config_t* %4 to [2 x i16]*
  %34 = bitcast %struct.pmic_i2c_config_t* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.pmic_i2c_config_t, %struct.pmic_i2c_config_t* %4, i32 0, i32 0
  br label %37, !dbg !8591

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %39, metadata !8558, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %40, metadata !8556, metadata !DIExpression()), !dbg !8562
  %41 = bitcast i8* %38 to i16*, !dbg !8594
  %42 = load i16, i16* %41, align 2, !dbg !8594
  store i16 %42, i16* %34, align 4, !dbg !8597
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !8598
  %44 = bitcast i8* %43 to i16*, !dbg !8598
  %45 = load i16, i16* %44, align 2, !dbg !8599
  store i16 %45, i16* %35, align 2, !dbg !8600
  %46 = load i32, i32* %36, align 4, !dbg !8601
  %47 = inttoptr i32 %40 to i32*, !dbg !8601
  store volatile i32 %46, i32* %47, align 4, !dbg !8601
  %48 = add i32 %40, 4, !dbg !8602
  call void @llvm.dbg.value(metadata i32 %48, metadata !8556, metadata !DIExpression()), !dbg !8562
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !8603
  call void @llvm.dbg.value(metadata i8* %49, metadata !8560, metadata !DIExpression()), !dbg !8562
  %50 = add nsw i32 %39, -4, !dbg !8604
  call void @llvm.dbg.value(metadata i32 %50, metadata !8558, metadata !DIExpression()), !dbg !8562
  %51 = icmp ugt i32 %39, 4, !dbg !8605
  br i1 %51, label %37, label %72, !dbg !8591, !llvm.loop !8606

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %54, metadata !8558, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %55, metadata !8556, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i8* %53, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 0, metadata !8559, metadata !DIExpression()), !dbg !8562
  br label %56, !dbg !8608

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %58, metadata !8559, metadata !DIExpression()), !dbg !8562
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !8612
  call void @llvm.dbg.value(metadata i8* %59, metadata !8560, metadata !DIExpression()), !dbg !8562
  %60 = load i8, i8* %57, align 1, !dbg !8615
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !8616
  store i8 %60, i8* %61, align 1, !dbg !8617
  %62 = add nuw nsw i32 %58, 1, !dbg !8618
  call void @llvm.dbg.value(metadata i32 %62, metadata !8559, metadata !DIExpression()), !dbg !8562
  %63 = icmp ult i32 %58, 3, !dbg !8619
  %64 = icmp ult i32 %62, %54, !dbg !8620
  %65 = select i1 %63, i1 %64, i1 false, !dbg !8620
  br i1 %65, label %56, label %66, !dbg !8608, !llvm.loop !8621

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !8623
  %68 = inttoptr i32 %55 to i32*, !dbg !8623
  store volatile i32 %67, i32* %68, align 4, !dbg !8623
  %69 = add i32 %55, 4, !dbg !8624
  call void @llvm.dbg.value(metadata i32 %69, metadata !8556, metadata !DIExpression()), !dbg !8562
  %70 = add nsw i32 %54, -4, !dbg !8625
  call void @llvm.dbg.value(metadata i8* %59, metadata !8560, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.value(metadata i32 %70, metadata !8558, metadata !DIExpression()), !dbg !8562
  %71 = icmp sgt i32 %54, 4, !dbg !8626
  br i1 %71, label %52, label %72, !dbg !8588, !llvm.loop !8627

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !8629
  ret void, !dbg !8629
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #11 section ".ram_code" !dbg !8630 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !8634, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i8* %1, metadata !8635, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i8* %2, metadata !8636, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i16 %3, metadata !8637, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i16 %4, metadata !8638, metadata !DIExpression()), !dbg !8644
  %7 = bitcast i32* %6 to i8*, !dbg !8645
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8645
  call void @llvm.dbg.value(metadata i8* %7, metadata !8643, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 0, metadata !8640, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8642, metadata !DIExpression()), !dbg !8644
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8642, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 0, metadata !8640, metadata !DIExpression()), !dbg !8644
  %9 = icmp eq i16 %3, 0, !dbg !8646
  br i1 %9, label %33, label %10, !dbg !8649

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !8642, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 %12, metadata !8640, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 0, metadata !8641, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 0, metadata !8639, metadata !DIExpression()), !dbg !8644
  store i32 0, i32* %6, align 4, !dbg !8650
  call void @llvm.dbg.value(metadata i32 0, metadata !8641, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 %12, metadata !8640, metadata !DIExpression()), !dbg !8644
  %13 = icmp ult i32 %12, %8, !dbg !8653
  br i1 %13, label %14, label %27, !dbg !8655

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8641, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 %16, metadata !8640, metadata !DIExpression()), !dbg !8644
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !8656
  %18 = load i8, i8* %17, align 1, !dbg !8656
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !8658
  store i8 %18, i8* %19, align 1, !dbg !8659
  %20 = add nuw nsw i32 %16, 1, !dbg !8660
  call void @llvm.dbg.value(metadata i32 %20, metadata !8640, metadata !DIExpression()), !dbg !8644
  %21 = add nuw nsw i32 %15, 1, !dbg !8661
  call void @llvm.dbg.value(metadata i32 %21, metadata !8641, metadata !DIExpression()), !dbg !8644
  %22 = icmp ult i32 %20, %8, !dbg !8653
  %23 = icmp ult i32 %15, 3, !dbg !8662
  %24 = select i1 %22, i1 %23, i1 false, !dbg !8662
  br i1 %24, label %14, label %25, !dbg !8655, !llvm.loop !8663

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !8665
  br label %27, !dbg !8665

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !8665
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !8666
  call void @llvm.dbg.value(metadata i32 %28, metadata !8639, metadata !DIExpression()), !dbg !8644
  %30 = bitcast i8* %11 to i32*, !dbg !8665
  store volatile i32 %28, i32* %30, align 4, !dbg !8665
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !8667
  call void @llvm.dbg.value(metadata i8* %31, metadata !8642, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 %29, metadata !8640, metadata !DIExpression()), !dbg !8644
  %32 = icmp ult i32 %29, %8, !dbg !8646
  br i1 %32, label %10, label %33, !dbg !8649, !llvm.loop !8668

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8670
  %34 = zext i16 %4 to i32, !dbg !8671
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8672
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #25, !dbg !8673
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #25, !dbg !8674
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !8642, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !8644
  call void @llvm.dbg.value(metadata i8* %2, metadata !8636, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 0, metadata !8640, metadata !DIExpression()), !dbg !8644
  %35 = icmp eq i16 %4, 0, !dbg !8675
  br i1 %35, label %47, label %36, !dbg !8678

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !8679
  call void @llvm.dbg.value(metadata i8* %37, metadata !8642, metadata !DIExpression()), !dbg !8644
  br label %38, !dbg !8678

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !8636, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i8* %40, metadata !8642, metadata !DIExpression()), !dbg !8644
  call void @llvm.dbg.value(metadata i32 %41, metadata !8640, metadata !DIExpression()), !dbg !8644
  %42 = load volatile i8, i8* %40, align 1, !dbg !8680
  store i8 %42, i8* %39, align 1, !dbg !8682
  %43 = add nuw nsw i32 %41, 1, !dbg !8683
  call void @llvm.dbg.value(metadata i32 %43, metadata !8640, metadata !DIExpression()), !dbg !8644
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !8684
  call void @llvm.dbg.value(metadata i8* %44, metadata !8636, metadata !DIExpression()), !dbg !8644
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !8685
  call void @llvm.dbg.value(metadata i8* %45, metadata !8642, metadata !DIExpression()), !dbg !8644
  %46 = icmp eq i32 %43, %34, !dbg !8675
  br i1 %46, label %47, label %38, !dbg !8678, !llvm.loop !8686

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !8688
  ret void, !dbg !8688
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #11 section ".ram_code" !dbg !8689 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8693, metadata !DIExpression()), !dbg !8701
  call void @llvm.dbg.value(metadata i8* %1, metadata !8694, metadata !DIExpression()), !dbg !8701
  call void @llvm.dbg.value(metadata i32 0, metadata !8695, metadata !DIExpression()), !dbg !8701
  %4 = icmp eq i8* %1, null, !dbg !8702
  br i1 %4, label %67, label %5, !dbg !8704

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8705
  call void @llvm.dbg.value(metadata i32 %27, metadata !8696, metadata !DIExpression()), !dbg !8701
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !8706

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !8701
  call void @llvm.dbg.value(metadata i32 %9, metadata !8695, metadata !DIExpression()), !dbg !8701
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !8707
  %11 = load i8, i8* %10, align 1, !dbg !8707
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !8708

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !8709

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8712
  %15 = and i32 %14, -2, !dbg !8712
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8712
  br label %41, !dbg !8716

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8717
  %18 = and i32 %17, -2, !dbg !8717
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8717
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !8720

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8722
  %22 = or i32 %21, 1, !dbg !8722
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8722
  br label %41, !dbg !8726

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8727
  %25 = or i32 %24, 1, !dbg !8727
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8727
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !8705
  %28 = icmp eq i32 %27, 0, !dbg !8730
  br i1 %7, label %29, label %35, !dbg !8733

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8734
  br i1 %28, label %33, label %31, !dbg !8737

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !8734
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8734
  br label %67, !dbg !8734

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !8734
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8734
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8738
  br i1 %28, label %39, label %37, !dbg !8741

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !8738
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8738
  br label %67, !dbg !8738

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !8738
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8738
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !8742
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !8743
  %44 = load i8, i8* %43, align 1, !dbg !8743
  %45 = icmp eq i8 %44, 5, !dbg !8744
  br i1 %45, label %46, label %56, !dbg !8745

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #23, !dbg !8746
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !8747

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !8697, metadata !DIExpression(DW_OP_deref)), !dbg !8748
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #25, !dbg !8749
  %50 = load i8, i8* %3, align 1, !dbg !8751
  call void @llvm.dbg.value(metadata i8 %50, metadata !8697, metadata !DIExpression()), !dbg !8748
  %51 = load i8, i8* %48, align 1, !dbg !8752
  %52 = and i8 %51, %50, !dbg !8753
  %53 = icmp eq i8 %52, 0, !dbg !8754
  br i1 %53, label %54, label %49, !dbg !8754, !llvm.loop !8755

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #23, !dbg !8757
  %55 = add i32 %9, 1, !dbg !8758
  br label %61, !dbg !8759

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !8760
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !8762
  %59 = load i8, i8* %58, align 1, !dbg !8762
  %60 = zext i8 %59 to i16, !dbg !8762
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #25, !dbg !8763
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !8758
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !8764
  %64 = load i8, i8* %63, align 1, !dbg !8764
  %65 = zext i8 %64 to i32, !dbg !8764
  %66 = add i32 %42, %65, !dbg !8765
  call void @llvm.dbg.value(metadata i32 %66, metadata !8695, metadata !DIExpression()), !dbg !8701
  br label %8, !dbg !8706, !llvm.loop !8766

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !8768
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #11 section ".ram_code" !dbg !8769 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8773, metadata !DIExpression()), !dbg !8776
  call void @llvm.dbg.value(metadata i8* %1, metadata !8774, metadata !DIExpression()), !dbg !8776
  call void @llvm.dbg.value(metadata i8 %2, metadata !8775, metadata !DIExpression()), !dbg !8776
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !8775, metadata !DIExpression(DW_OP_deref)), !dbg !8776
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #25, !dbg !8777
  ret void, !dbg !8778
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #11 section ".ram_code" !dbg !8779 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8783, metadata !DIExpression()), !dbg !8785
  call void @llvm.dbg.value(metadata i8* %1, metadata !8784, metadata !DIExpression()), !dbg !8785
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #25, !dbg !8786
  ret void, !dbg !8787
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #14 section ".ram_code" !dbg !8788 {
  ret i32 78, !dbg !8792
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #18 section ".ram_code" !dbg !8793 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8797
  %2 = and i32 %1, 7340032, !dbg !8799
  %3 = icmp ult i32 %2, 2097153, !dbg !8800
  %4 = select i1 %3, i32 30, i32 18, !dbg !8801
  ret i32 %4, !dbg !8802
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #16 section ".ram_code" !dbg !8803 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8807, metadata !DIExpression()), !dbg !8809
  call void @llvm.dbg.value(metadata i32 0, metadata !8808, metadata !DIExpression()), !dbg !8809
  call void @llvm.dbg.value(metadata i32 0, metadata !8808, metadata !DIExpression()), !dbg !8809
  br label %2, !dbg !8810

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8808, metadata !DIExpression()), !dbg !8809
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8812
  store i8 -1, i8* %4, align 1, !dbg !8815
  %5 = add nuw nsw i32 %3, 1, !dbg !8816
  call void @llvm.dbg.value(metadata i32 %5, metadata !8808, metadata !DIExpression()), !dbg !8809
  %6 = icmp eq i32 %5, 8, !dbg !8817
  br i1 %6, label %7, label %2, !dbg !8810, !llvm.loop !8818

7:                                                ; preds = %2
  ret i1 true, !dbg !8820
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ust_get_current_time() local_unnamed_addr #0 section ".tcm_code" !dbg !8821 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !8825
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #23, !dbg !8825
  call void @llvm.dbg.value(metadata i32 0, metadata !8823, metadata !DIExpression()), !dbg !8826
  store i32 0, i32* %1, align 4, !dbg !8827
  call void @llvm.dbg.value(metadata i32* %1, metadata !8823, metadata !DIExpression(DW_OP_deref)), !dbg !8826
  %3 = call zeroext i1 @bl_gpt_get_free_run_count(i32 noundef 1, i32* noundef nonnull %1) #24, !dbg !8828
  call void @llvm.dbg.value(metadata i1 %3, metadata !8824, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8826
  br i1 %3, label %5, label %4, !dbg !8829

4:                                                ; preds = %0, %4
  br label %4, !dbg !8830, !llvm.loop !8835

5:                                                ; preds = %0
  %6 = load i32, i32* %1, align 4, !dbg !8836
  call void @llvm.dbg.value(metadata i32 %6, metadata !8823, metadata !DIExpression()), !dbg !8826
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #23, !dbg !8837
  ret i32 %6, !dbg !8838
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #0 section ".ram_code" !dbg !8839 {
  %1 = alloca i32, align 4
  %2 = bitcast i32* %1 to i8*, !dbg !8843
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #23, !dbg !8843
  call void @llvm.dbg.value(metadata i32 0, metadata !8841, metadata !DIExpression()), !dbg !8844
  store i32 0, i32* %1, align 4, !dbg !8845
  call void @llvm.dbg.value(metadata i32* %1, metadata !8841, metadata !DIExpression(DW_OP_deref)), !dbg !8844
  %3 = call zeroext i1 @bl_gpt_get_free_run_count(i32 noundef 0, i32* noundef nonnull %1) #24, !dbg !8846
  call void @llvm.dbg.value(metadata i1 %3, metadata !8842, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8844
  br i1 %3, label %5, label %4, !dbg !8847

4:                                                ; preds = %0, %4
  br label %4, !dbg !8848, !llvm.loop !8853

5:                                                ; preds = %0
  %6 = load i32, i32* %1, align 4, !dbg !8854
  call void @llvm.dbg.value(metadata i32 %6, metadata !8841, metadata !DIExpression()), !dbg !8844
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #23, !dbg !8855
  ret i32 %6, !dbg !8856
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8857 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8859, metadata !DIExpression()), !dbg !8860
  %2 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef %0) #24, !dbg !8861
  ret void, !dbg !8862
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #14 section ".ram_code" !dbg !8863 {
  ret i32 0, !dbg !8864
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @RestoreIRQMask(i32 %0) local_unnamed_addr #14 section ".ram_code" !dbg !8865 {
  call void @llvm.dbg.value(metadata i32 undef, metadata !8867, metadata !DIExpression()), !dbg !8868
  ret void, !dbg !8869
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #14 section ".ram_code" !dbg !8870 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8872, metadata !DIExpression()), !dbg !8873
  ret i32 0, !dbg !8874
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #14 section ".ram_code" !dbg !8875 {
  ret i32 0, !dbg !8876
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @Flash_ReturnReady() local_unnamed_addr #14 section ".ram_code" !dbg !8877 {
  ret void, !dbg !8878
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #8 !dbg !8879 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8902, metadata !DIExpression()), !dbg !8905
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8903, metadata !DIExpression()), !dbg !8905
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8906
  %4 = load i8*, i8** %3, align 4, !dbg !8906
  call void @llvm.dbg.value(metadata i8* %4, metadata !8904, metadata !DIExpression()), !dbg !8905
  store i8 1, i8* %4, align 1, !dbg !8907
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8908
  store i8 2, i8* %5, align 1, !dbg !8909
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8910
  store i8 8, i8* %6, align 1, !dbg !8911
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !8912
  store i8 4, i8* %7, align 1, !dbg !8913
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !8914
  store i8 60, i8* %8, align 1, !dbg !8915
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !8916
  store i8 -128, i8* %9, align 1, !dbg !8917
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !8918
  store i8 96, i8* %10, align 1, !dbg !8919
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8920
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8920
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !8921
  store i8 43, i8* %13, align 1, !dbg !8922
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8923
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !8924
  store i8 43, i8* %15, align 1, !dbg !8925
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8926
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !8927
  store i8 47, i8* %17, align 1, !dbg !8928
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8929
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !8930
  store i8 5, i8* %19, align 1, !dbg !8931
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8932
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !8933
  store i8 1, i8* %21, align 1, !dbg !8934
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8935
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !8936
  store i8 43, i8* %23, align 1, !dbg !8937
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8938
  store i8 22, i8* %24, align 4, !dbg !8939
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !8940
  %26 = load i8, i8* %25, align 1, !dbg !8940
  %27 = icmp eq i8 %26, 32, !dbg !8942
  br i1 %27, label %28, label %49, !dbg !8943

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !8944
  %30 = load i8, i8* %29, align 1, !dbg !8944
  %31 = icmp eq i8 %30, 24, !dbg !8945
  br i1 %31, label %32, label %41, !dbg !8946

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8947
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !8949
  store i8 117, i8* %34, align 1, !dbg !8950
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8951
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !8952
  store i8 122, i8* %36, align 1, !dbg !8953
  %37 = load i8, i8* %25, align 1, !dbg !8954
  %38 = icmp eq i8 %37, 32, !dbg !8956
  br i1 %38, label %39, label %49, !dbg !8957

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !8959
  br label %41, !dbg !8959

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !8959
  %43 = icmp eq i8 %42, 22, !dbg !8960
  br i1 %43, label %44, label %49, !dbg !8961

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8962
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !8964
  store i8 117, i8* %46, align 1, !dbg !8965
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8966
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !8967
  store i8 122, i8* %48, align 1, !dbg !8968
  br label %49, !dbg !8969

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8970
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !8971
  ret i32 0, !dbg !8972
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !8973 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8975, metadata !DIExpression()), !dbg !8979
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8980
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8976, metadata !DIExpression()), !dbg !8979
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !8981
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8982
  %5 = load i8, i8* %4, align 1, !dbg !8984
  %6 = icmp eq i8 %5, -62, !dbg !8985
  br i1 %6, label %7, label %15, !dbg !8986

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !8987
  %9 = load i8, i8* %8, align 1, !dbg !8987
  %10 = icmp eq i8 %9, 32, !dbg !8988
  br i1 %10, label %11, label %15, !dbg !8989

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !8990
  %13 = load i8, i8* %12, align 1, !dbg !8990
  %14 = icmp eq i8 %13, 22, !dbg !8991
  br i1 %14, label %48, label %15, !dbg !8992

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8993
  %17 = bitcast i8* %16 to i16*, !dbg !8993
  %18 = load i16, i16* %17, align 2, !dbg !8993
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8994
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !8994
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8994
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !8995
  %23 = load i8, i8* %22, align 1, !dbg !8995
  %24 = zext i8 %23 to i32, !dbg !8996
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #24, !dbg !8997
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #25, !dbg !8998
  %25 = load i16, i16* %17, align 2, !dbg !8999
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9000
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !9001
  call void @llvm.dbg.value(metadata i8* %2, metadata !8978, metadata !DIExpression(DW_OP_deref)), !dbg !8979
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #24, !dbg !9002
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9003
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !9004
  %30 = load i8, i8* %29, align 1, !dbg !9004
  %31 = zext i8 %30 to i32, !dbg !9005
  call void @llvm.dbg.value(metadata i32 %31, metadata !8977, metadata !DIExpression()), !dbg !8979
  %32 = shl nuw nsw i32 %31, 8, !dbg !9006
  %33 = load i8, i8* %2, align 1, !dbg !9007
  call void @llvm.dbg.value(metadata i8 %33, metadata !8978, metadata !DIExpression()), !dbg !8979
  %34 = zext i8 %33 to i32, !dbg !9007
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9008
  %36 = bitcast i8* %35 to i8**, !dbg !9008
  %37 = load i8*, i8** %36, align 4, !dbg !9008
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !9009
  %39 = load i8, i8* %38, align 1, !dbg !9009
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !9010
  %41 = load i8, i8* %40, align 1, !dbg !9010
  %42 = or i8 %41, %39, !dbg !9011
  %43 = zext i8 %42 to i32, !dbg !9011
  %44 = xor i32 %43, -1, !dbg !9012
  %45 = and i32 %44, %34, !dbg !9013
  %46 = or i32 %45, %32, !dbg !9014
  call void @llvm.dbg.value(metadata i32 %46, metadata !8977, metadata !DIExpression()), !dbg !8979
  %47 = load i16, i16* %17, align 2, !dbg !9015
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #24, !dbg !9016
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #25, !dbg !9017
  br label %48, !dbg !9018

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #23, !dbg !9019
  ret i32 0, !dbg !9019
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9020 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9024, metadata !DIExpression()), !dbg !9026
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !9027
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !9028

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !9029
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9031
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !9032
  call void @llvm.dbg.value(metadata i8* %2, metadata !9025, metadata !DIExpression(DW_OP_deref)), !dbg !9026
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #24, !dbg !9033
  %10 = load i8, i8* %2, align 1, !dbg !9034
  call void @llvm.dbg.value(metadata i8 %10, metadata !9025, metadata !DIExpression()), !dbg !9026
  %11 = load i8*, i8** %5, align 4, !dbg !9035
  %12 = load i8, i8* %11, align 1, !dbg !9036
  %13 = and i8 %12, %10, !dbg !9037
  %14 = icmp eq i8 %13, 0, !dbg !9038
  br i1 %14, label %15, label %6, !dbg !9039, !llvm.loop !9040

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #23, !dbg !9042
  ret void, !dbg !9042
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #8 !dbg !9043 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9045, metadata !DIExpression()), !dbg !9048
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9046, metadata !DIExpression()), !dbg !9048
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9049
  %4 = load i8*, i8** %3, align 4, !dbg !9049
  call void @llvm.dbg.value(metadata i8* %4, metadata !9047, metadata !DIExpression()), !dbg !9048
  store i8 1, i8* %4, align 1, !dbg !9050
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !9051
  store i8 2, i8* %5, align 1, !dbg !9052
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !9053
  store i8 -128, i8* %6, align 1, !dbg !9054
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9055
  store i8 -128, i8* %7, align 1, !dbg !9056
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9057
  store i8 60, i8* %8, align 1, !dbg !9058
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9059
  store i8 -128, i8* %9, align 1, !dbg !9060
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9061
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9061
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !9062
  store i8 -97, i8* %12, align 1, !dbg !9063
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9064
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !9065
  store i8 53, i8* %14, align 1, !dbg !9066
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9067
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !9068
  store i8 53, i8* %16, align 1, !dbg !9069
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9070
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !9071
  store i8 5, i8* %18, align 1, !dbg !9072
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9073
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !9074
  store i8 1, i8* %20, align 1, !dbg !9075
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9076
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !9077
  store i8 117, i8* %22, align 1, !dbg !9078
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9079
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !9080
  store i8 122, i8* %24, align 1, !dbg !9081
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9082
  store i8 22, i8* %25, align 4, !dbg !9083
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !9084
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !9085
  ret i32 0, !dbg !9086
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #14 !dbg !9087 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9089, metadata !DIExpression()), !dbg !9091
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9090, metadata !DIExpression()), !dbg !9091
  ret i32 0, !dbg !9092
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !9093 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !9095, metadata !DIExpression()), !dbg !9097
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9096, metadata !DIExpression()), !dbg !9097
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !9098
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !9099
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !9100
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !9101
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !9102
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !9103
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !9104
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !9105
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !9106
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !9107
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !9108
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !9109
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !9110
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !9111
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !9112
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !9113
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !9114
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !9115
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !9116
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !9117
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !9118
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !9119
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !9120
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !9121
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !9122
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !9123
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !9124
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !9125
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !9126
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !9127
  %18 = tail call i32 @custom_get_NORFLASH_Size() #24, !dbg !9128
  %19 = icmp ugt i32 %18, 16777216, !dbg !9130
  %20 = select i1 %19, i8 4, i8 3, !dbg !9131
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !9132
  store i8 %20, i8* %21, align 1, !dbg !9134
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9135
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9135
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !9136
  store i8 0, i8* %24, align 1, !dbg !9137
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9138
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !9139
  store i8 -81, i8* %26, align 1, !dbg !9140
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9141
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !9142
  store i8 -97, i8* %28, align 1, !dbg !9143
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9144
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !9145
  store i8 2, i8* %30, align 1, !dbg !9146
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9147
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !9148
  store i8 32, i8* %32, align 1, !dbg !9149
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9150
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !9151
  store i8 82, i8* %34, align 1, !dbg !9152
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9153
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !9154
  store i8 -40, i8* %36, align 1, !dbg !9155
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9156
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !9157
  store i8 -80, i8* %38, align 1, !dbg !9158
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9159
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !9160
  store i8 48, i8* %40, align 1, !dbg !9161
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9162
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !9163
  store i8 6, i8* %42, align 1, !dbg !9164
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9165
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !9166
  store i8 -71, i8* %44, align 1, !dbg !9167
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9168
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !9169
  store i8 -85, i8* %46, align 1, !dbg !9170
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9171
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !9172
  store i8 5, i8* %48, align 1, !dbg !9173
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !9174
  store i16 0, i16* %49, align 4, !dbg !9175
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !9176
  store %struct.anon* null, %struct.anon** %50, align 4, !dbg !9177
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !9178
  store %struct.anon* null, %struct.anon** %51, align 4, !dbg !9179
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !9180
  store i8 0, i8* %52, align 4, !dbg !9181
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9182
  store i8 5, i8* %53, align 4, !dbg !9183
  ret i32 0, !dbg !9184
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* noundef %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !9185 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9187, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i8* %1, metadata !9188, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i8* %1, metadata !9189, metadata !DIExpression()), !dbg !9205
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9206
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9202, metadata !DIExpression()), !dbg !9205
  call void @llvm.dbg.value(metadata i32 0, metadata !9203, metadata !DIExpression()), !dbg !9205
  %4 = bitcast i8* %1 to i32*, !dbg !9207
  store i32 0, i32* %4, align 4, !dbg !9208
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_wdt_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !9203, metadata !DIExpression()), !dbg !9205
  %7 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** %6, align 4, !dbg !9209
  %8 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %7, i32 0, i32 0, !dbg !9210
  %9 = load i32, i32* %8, align 4, !dbg !9210
  %10 = icmp eq i32 %9, 0, !dbg !9211
  br i1 %10, label %34, label %11, !dbg !9212

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !9212

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !9203, metadata !DIExpression()), !dbg !9205
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !9213
  store i32 %17, i32* %19, align 4, !dbg !9215
  %20 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** %6, align 4, !dbg !9216
  %21 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %20, i32 %18, i32 1, !dbg !9217
  %22 = load i32, i32* %21, align 4, !dbg !9217
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !9218
  store i32 %22, i32* %23, align 4, !dbg !9219
  %24 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** %6, align 4, !dbg !9220
  %25 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %24, i32 %18, i32 1, !dbg !9221
  %26 = load i32, i32* %25, align 4, !dbg !9221
  %27 = load i32, i32* %4, align 4, !dbg !9222
  %28 = add i32 %27, %26, !dbg !9222
  store i32 %28, i32* %4, align 4, !dbg !9222
  %29 = add i32 %18, 1, !dbg !9223
  call void @llvm.dbg.value(metadata i32 %29, metadata !9203, metadata !DIExpression()), !dbg !9205
  %30 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** %6, align 4, !dbg !9209
  %31 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %30, i32 %29, i32 0, !dbg !9210
  %32 = load i32, i32* %31, align 4, !dbg !9210
  %33 = icmp eq i32 %32, 0, !dbg !9211
  br i1 %33, label %34, label %16, !dbg !9212, !llvm.loop !9224

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !9205
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !9226
  %37 = bitcast i8* %36 to i32*, !dbg !9226
  store i32 %35, i32* %37, align 4, !dbg !9227
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !9228
  %39 = bitcast i8* %38 to i16*, !dbg !9228
  store i16 512, i16* %39, align 4, !dbg !9229
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #25, !dbg !9230
  br label %40, !dbg !9231

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #25, !dbg !9232
  call void @llvm.dbg.value(metadata i32 %41, metadata !9204, metadata !DIExpression()), !dbg !9205
  %42 = icmp eq i32 %41, -121, !dbg !9234
  br i1 %42, label %40, label %43, !dbg !9235, !llvm.loop !9236

43:                                               ; preds = %40
  %44 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !9238
  %45 = bitcast i8* %44 to i32 (i8*)**, !dbg !9238
  %46 = load i32 (i8*)*, i32 (i8*)** %45, align 4, !dbg !9238
  %47 = tail call i32 %46(i8* noundef %0) #24, !dbg !9239
  ret i32 0, !dbg !9240
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !9241 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9243, metadata !DIExpression()), !dbg !9247
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9248
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !9244, metadata !DIExpression()), !dbg !9247
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !9249

7:                                                ; preds = %11, %1
  call void @llvm.dbg.value(metadata i32 0, metadata !9246, metadata !DIExpression()), !dbg !9247
  %8 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9250, !range !5222
  %9 = icmp eq i8 %8, 0, !dbg !9250
  br i1 %9, label %11, label %10, !dbg !9253

10:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #25, !dbg !9254
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9256
  br label %11, !dbg !9257

11:                                               ; preds = %10, %7
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9258
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !9259
  %14 = load i8, i8* %13, align 1, !dbg !9259
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %14) #25, !dbg !9260
  call void @llvm.dbg.value(metadata i32 %15, metadata !9245, metadata !DIExpression()), !dbg !9247
  %16 = load i8*, i8** %6, align 4, !dbg !9261
  %17 = load i8, i8* %16, align 1, !dbg !9263
  %18 = zext i8 %17 to i32, !dbg !9263
  %19 = and i32 %15, %18, !dbg !9264
  %20 = icmp eq i32 %19, 0, !dbg !9265
  br i1 %20, label %21, label %7, !dbg !9266, !llvm.loop !9267

21:                                               ; preds = %11
  tail call void @SF_DAL_FLAG_BUSY_CLR() #25, !dbg !9269
  %22 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9271
  %23 = bitcast i8* %22 to i8**, !dbg !9271
  store i8* null, i8** %23, align 4, !dbg !9272
  ret i32 0, !dbg !9273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !9274 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9276, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %1, metadata !9277, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 0, metadata !9278, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 1, metadata !9282, metadata !DIExpression()), !dbg !9290
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9291
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9283, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 0, metadata !9284, metadata !DIExpression()), !dbg !9290
  %4 = bitcast i8* %0 to i32*, !dbg !9292
  %5 = load i32, i32* %4, align 4, !dbg !9292
  %6 = xor i32 %5, -1, !dbg !9292
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9292
  %8 = bitcast i8* %7 to %struct.hal_wdt_config_t**, !dbg !9292
  %9 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** %8, align 4, !dbg !9292
  %10 = ptrtoint %struct.hal_wdt_config_t* %9 to i32, !dbg !9292
  %11 = icmp eq i32 %6, %10, !dbg !9292
  br i1 %11, label %13, label %12, !dbg !9295

12:                                               ; preds = %2, %12
  br label %12, !dbg !9292, !llvm.loop !9296

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9297
  store i8 2, i8* %14, align 4, !dbg !9298
  call void @llvm.dbg.value(metadata i32 %19, metadata !9284, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %1, metadata !9277, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !9290
  br label %15, !dbg !9299

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #25, !dbg !9300
  call void @llvm.dbg.value(metadata i32 %16, metadata !9278, metadata !DIExpression()), !dbg !9290
  %17 = icmp eq i32 %16, -121, !dbg !9302
  br i1 %17, label %15, label %18, !dbg !9303, !llvm.loop !9304

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !9306
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9307
  %21 = bitcast i8* %20 to i8**, !dbg !9307
  %22 = load i8*, i8** %21, align 4, !dbg !9307
  %23 = ptrtoint i8* %22 to i32, !dbg !9308
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #24, !dbg !9309
  call void @llvm.dbg.value(metadata i32 %24, metadata !9279, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %24, metadata !9280, metadata !DIExpression()), !dbg !9290
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !9310
  %26 = bitcast i8* %25 to i16*, !dbg !9310
  %27 = load i16, i16* %26, align 2, !dbg !9310
  %28 = zext i16 %27 to i32, !dbg !9311
  call void @llvm.dbg.value(metadata i32 %28, metadata !9285, metadata !DIExpression()), !dbg !9312
  %29 = lshr i32 %24, 10, !dbg !9313
  call void @llvm.dbg.value(metadata i32 %29, metadata !9288, metadata !DIExpression()), !dbg !9312
  %30 = and i32 %29, %28, !dbg !9314
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !9316
  %33 = icmp eq i32 %32, 0, !dbg !9316
  call void @llvm.dbg.value(metadata i32 0, metadata !9289, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %29, metadata !9288, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %28, metadata !9285, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 1, metadata !9282, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %24, metadata !9280, metadata !DIExpression()), !dbg !9290
  br i1 %33, label %34, label %51, !dbg !9316

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !9289, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %36, metadata !9288, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %37, metadata !9285, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.value(metadata i32 %38, metadata !9282, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %39, metadata !9280, metadata !DIExpression()), !dbg !9290
  %40 = and i32 %37, 1, !dbg !9317
  %41 = icmp eq i32 %40, 0, !dbg !9317
  %42 = add i32 %35, 10, !dbg !9323
  %43 = shl nuw i32 1, %42, !dbg !9323
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !9323
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !9323
  call void @llvm.dbg.value(metadata i32 %45, metadata !9282, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %44, metadata !9280, metadata !DIExpression()), !dbg !9290
  %46 = lshr i32 %37, 1, !dbg !9324
  call void @llvm.dbg.value(metadata i32 %46, metadata !9285, metadata !DIExpression()), !dbg !9312
  %47 = lshr i32 %36, 1, !dbg !9325
  call void @llvm.dbg.value(metadata i32 %47, metadata !9288, metadata !DIExpression()), !dbg !9312
  %48 = add i32 %35, 1, !dbg !9326
  call void @llvm.dbg.value(metadata i32 %48, metadata !9289, metadata !DIExpression()), !dbg !9312
  %49 = and i32 %36, 2, !dbg !9327
  %50 = icmp eq i32 %49, 0, !dbg !9327
  br i1 %50, label %34, label %51, !dbg !9328, !llvm.loop !9329

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !9331
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !9332
  call void @llvm.dbg.value(metadata i32 %53, metadata !9282, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %52, metadata !9280, metadata !DIExpression()), !dbg !9290
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !9333

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9334
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !9334
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !9334
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !9336
  br label %70, !dbg !9337

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9338
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !9338
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !9338
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !9339
  br label %70, !dbg !9340

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9341
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !9341
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !9341
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !9342
  br label %70, !dbg !9343

69:                                               ; preds = %51, %69
  br label %69, !dbg !9344, !llvm.loop !9347

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !9348
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !9348
  store i8 %73, i8* %74, align 1, !dbg !9348
  call void @llvm.dbg.value(metadata i32 %53, metadata !9282, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %52, metadata !9280, metadata !DIExpression()), !dbg !9290
  %75 = trunc i32 %19 to i8, !dbg !9349
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !9349

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9350
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !9350
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !9350
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !9352
  br label %91, !dbg !9353

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9354
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !9354
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !9354
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !9355
  br label %91, !dbg !9356

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9357
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !9357
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !9357
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !9358
  br label %91, !dbg !9359

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !9360
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !9360
  store i8 %94, i8* %95, align 1, !dbg !9360
  br label %96, !dbg !9361

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !9281, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %53, metadata !9282, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %16, metadata !9278, metadata !DIExpression()), !dbg !9290
  %97 = icmp eq i32 %53, 0, !dbg !9361
  br i1 %97, label %111, label %98, !dbg !9364

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !9365
  call void @llvm.dbg.value(metadata i8* %99, metadata !9281, metadata !DIExpression()), !dbg !9290
  %100 = ptrtoint i8* %99 to i32, !dbg !9366
  call void @llvm.dbg.value(metadata i32 %100, metadata !9281, metadata !DIExpression()), !dbg !9290
  br label %101, !dbg !9364

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !9282, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %103, metadata !9281, metadata !DIExpression()), !dbg !9290
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #25, !dbg !9367
  br label %104, !dbg !9369

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #25, !dbg !9370
  call void @llvm.dbg.value(metadata i32 %105, metadata !9278, metadata !DIExpression()), !dbg !9290
  %106 = icmp eq i32 %105, -121, !dbg !9372
  br i1 %106, label %104, label %107, !dbg !9374, !llvm.loop !9375

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !9377
  call void @llvm.dbg.value(metadata i32 %108, metadata !9282, metadata !DIExpression()), !dbg !9290
  %109 = add i32 %103, %52, !dbg !9378
  call void @llvm.dbg.value(metadata i32 %109, metadata !9281, metadata !DIExpression()), !dbg !9290
  call void @llvm.dbg.value(metadata i32 %105, metadata !9278, metadata !DIExpression()), !dbg !9290
  %110 = icmp eq i32 %108, 0, !dbg !9361
  br i1 %110, label %111, label %101, !dbg !9364, !llvm.loop !9379

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !9290
  store i8 0, i8* %14, align 4, !dbg !9381
  ret i32 %112, !dbg !9382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !9383 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9385, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i8* %1, metadata !9386, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i8* %2, metadata !9387, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 %3, metadata !9388, metadata !DIExpression()), !dbg !9402
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9403
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !9389, metadata !DIExpression()), !dbg !9402
  %8 = ptrtoint i8* %1 to i32, !dbg !9404
  call void @llvm.dbg.value(metadata i32 %8, metadata !9391, metadata !DIExpression()), !dbg !9402
  %9 = bitcast i8** %5 to i8*, !dbg !9405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #23, !dbg !9405
  call void @llvm.dbg.value(metadata i8* %2, metadata !9392, metadata !DIExpression()), !dbg !9402
  store i8* %2, i8** %5, align 4, !dbg !9406
  call void @llvm.dbg.value(metadata i32 0, metadata !9394, metadata !DIExpression()), !dbg !9402
  %10 = bitcast i32* %6 to i8*, !dbg !9407
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9407
  %11 = bitcast i8* %0 to i32*, !dbg !9408
  %12 = load i32, i32* %11, align 4, !dbg !9408
  %13 = xor i32 %12, -1, !dbg !9408
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9408
  %15 = bitcast i8* %14 to %struct.hal_wdt_config_t**, !dbg !9408
  %16 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** %15, align 4, !dbg !9408
  %17 = ptrtoint %struct.hal_wdt_config_t* %16 to i32, !dbg !9408
  %18 = icmp eq i32 %13, %17, !dbg !9408
  br i1 %18, label %20, label %19, !dbg !9411

19:                                               ; preds = %4, %19
  br label %19, !dbg !9408, !llvm.loop !9412

20:                                               ; preds = %4
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9413
  store i8 1, i8* %21, align 4, !dbg !9414
  br label %22, !dbg !9415

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #25, !dbg !9416
  call void @llvm.dbg.value(metadata i32 %23, metadata !9394, metadata !DIExpression()), !dbg !9402
  %24 = icmp eq i32 %23, -121, !dbg !9418
  br i1 %24, label %22, label %25, !dbg !9419, !llvm.loop !9420

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !9422
  br i1 %26, label %103, label %27, !dbg !9423

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !9423

35:                                               ; preds = %27, %95
  %36 = phi i8* [ %98, %95 ], [ %2, %27 ], !dbg !9424
  %37 = phi i32 [ %99, %95 ], [ %3, %27 ]
  %38 = phi i32 [ %87, %95 ], [ %8, %27 ], !dbg !9402
  call void @llvm.dbg.value(metadata i32 %38, metadata !9391, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 %37, metadata !9388, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i8* %36, metadata !9392, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i8* %36, metadata !9393, metadata !DIExpression()), !dbg !9402
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9425
  %40 = shl i32 %39, 1, !dbg !9426
  %41 = add i32 %40, -1, !dbg !9427
  %42 = and i32 %41, %38, !dbg !9428
  %43 = sub i32 %40, %42, !dbg !9429
  %44 = icmp ugt i32 %37, %43, !dbg !9430
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !9431
  call void @llvm.dbg.value(metadata i32 %45, metadata !9395, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 %45, metadata !9396, metadata !DIExpression()), !dbg !9402
  store i32 %45, i32* %6, align 4, !dbg !9432
  call void @llvm.dbg.value(metadata i8* %36, metadata !9392, metadata !DIExpression()), !dbg !9402
  %46 = ptrtoint i8* %36 to i32, !dbg !9433
  %47 = and i32 %46, 134217728, !dbg !9434
  %48 = icmp eq i32 %47, 0, !dbg !9434
  br i1 %48, label %58, label %49, !dbg !9435

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !9398, metadata !DIExpression()), !dbg !9436
  call void @llvm.dbg.value(metadata i32 %45, metadata !9396, metadata !DIExpression()), !dbg !9402
  %50 = icmp eq i32 %45, 0, !dbg !9437
  br i1 %50, label %58, label %51, !dbg !9440

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !9398, metadata !DIExpression()), !dbg !9436
  call void @llvm.dbg.value(metadata i8* %36, metadata !9392, metadata !DIExpression()), !dbg !9402
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !9441
  %54 = load i8, i8* %53, align 1, !dbg !9441
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !9443
  store i8 %54, i8* %55, align 1, !dbg !9444
  %56 = add nuw i32 %52, 1, !dbg !9445
  call void @llvm.dbg.value(metadata i32 %56, metadata !9398, metadata !DIExpression()), !dbg !9436
  call void @llvm.dbg.value(metadata i32 %45, metadata !9396, metadata !DIExpression()), !dbg !9402
  %57 = icmp eq i32 %56, %45, !dbg !9437
  br i1 %57, label %58, label %51, !dbg !9440, !llvm.loop !9446

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !9448
  call void @llvm.dbg.value(metadata i8* %59, metadata !9393, metadata !DIExpression()), !dbg !9402
  %60 = load i32, i32* %29, align 4, !dbg !9449
  %61 = and i32 %60, 16, !dbg !9451
  %62 = icmp eq i32 %61, 0, !dbg !9451
  br i1 %62, label %63, label %64, !dbg !9452

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #25, !dbg !9453
  br label %64, !dbg !9455

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !9456
  %66 = icmp eq i8 %65, 4, !dbg !9458
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !9459
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !9459
  %69 = load i8, i8* %68, align 1, !dbg !9459
  %70 = zext i8 %69 to i32, !dbg !9459
  br i1 %66, label %71, label %75, !dbg !9460

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !9392, metadata !DIExpression(DW_OP_deref)), !dbg !9402
  call void @llvm.dbg.value(metadata i32* %6, metadata !9396, metadata !DIExpression(DW_OP_deref)), !dbg !9402
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #24, !dbg !9461
  call void @llvm.dbg.value(metadata i32 %72, metadata !9397, metadata !DIExpression()), !dbg !9402
  %73 = load i8*, i8** %5, align 4, !dbg !9463
  call void @llvm.dbg.value(metadata i8* %73, metadata !9392, metadata !DIExpression()), !dbg !9402
  %74 = load i32, i32* %6, align 4, !dbg !9464
  call void @llvm.dbg.value(metadata i32 %74, metadata !9396, metadata !DIExpression()), !dbg !9402
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #24, !dbg !9465
  br label %79, !dbg !9466

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #24, !dbg !9467
  call void @llvm.dbg.value(metadata i32 %76, metadata !9397, metadata !DIExpression()), !dbg !9402
  %77 = load i8*, i8** %5, align 4, !dbg !9469
  call void @llvm.dbg.value(metadata i8* %77, metadata !9392, metadata !DIExpression()), !dbg !9402
  %78 = load i32, i32* %6, align 4, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %78, metadata !9396, metadata !DIExpression()), !dbg !9402
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #24, !dbg !9471
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !9459
  call void @llvm.dbg.value(metadata i32 %80, metadata !9397, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 0, metadata !9390, metadata !DIExpression()), !dbg !9402
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9472
  %81 = load i8, i8* %30, align 1, !dbg !9473
  %82 = zext i8 %81 to i32, !dbg !9474
  %83 = add i32 %45, 1, !dbg !9475
  %84 = add i32 %83, %82, !dbg !9476
  store volatile i32 %84, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9477
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9478
  call void @SF_DAL_FLAG_BUSY_SET() #25, !dbg !9479
  %85 = load i16, i16* %34, align 2, !dbg !9480
  call void @SFI_MacEnable(i16 noundef zeroext %85) #24, !dbg !9481
  %86 = load i16, i16* %34, align 2, !dbg !9482
  call void @SFI_MacWaitReady(i16 noundef zeroext %86) #24, !dbg !9483
  %87 = add i32 %45, %38
  %88 = add i32 %87, -1
  %89 = getelementptr inbounds i8, i8* %59, i32 -1
  %90 = getelementptr inbounds i8, i8* %89, i32 %45
  br label %91, !dbg !9484

91:                                               ; preds = %91, %79
  %92 = load i8, i8* %90, align 1, !dbg !9485
  %93 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %88, i8 noundef zeroext %92) #25, !dbg !9487
  call void @llvm.dbg.value(metadata i32 %93, metadata !9394, metadata !DIExpression()), !dbg !9402
  %94 = icmp eq i32 %93, 0, !dbg !9488
  br i1 %94, label %91, label %95, !dbg !9489, !llvm.loop !9490

95:                                               ; preds = %91
  %96 = load i32, i32* %6, align 4, !dbg !9492
  call void @llvm.dbg.value(metadata i32 %96, metadata !9396, metadata !DIExpression()), !dbg !9402
  %97 = load i8*, i8** %5, align 4, !dbg !9493
  call void @llvm.dbg.value(metadata i8* %97, metadata !9392, metadata !DIExpression()), !dbg !9402
  %98 = getelementptr inbounds i8, i8* %97, i32 %96, !dbg !9493
  call void @llvm.dbg.value(metadata i8* %98, metadata !9392, metadata !DIExpression()), !dbg !9402
  store i8* %98, i8** %5, align 4, !dbg !9493
  %99 = sub i32 %37, %45, !dbg !9494
  call void @llvm.dbg.value(metadata i32 %99, metadata !9388, metadata !DIExpression()), !dbg !9402
  call void @llvm.dbg.value(metadata i32 undef, metadata !9391, metadata !DIExpression()), !dbg !9402
  %100 = icmp eq i32 %93, 1, !dbg !9495
  %101 = icmp ne i32 %99, 0
  %102 = select i1 %100, i1 %101, i1 false, !dbg !9497
  br i1 %102, label %35, label %103, !dbg !9497, !llvm.loop !9498

103:                                              ; preds = %95, %25
  %104 = phi i32 [ %23, %25 ], [ %93, %95 ], !dbg !9402
  call void @llvm.dbg.value(metadata i32 %104, metadata !9394, metadata !DIExpression()), !dbg !9402
  store i8 0, i8* %21, align 4, !dbg !9500
  %105 = icmp eq i32 %104, 1, !dbg !9501
  %106 = select i1 %105, i32 0, i32 %104, !dbg !9402
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !9503
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #23, !dbg !9503
  ret i32 %106, !dbg !9503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #14 section ".ram_code" !dbg !9504 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9506, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata i32 undef, metadata !9507, metadata !DIExpression()), !dbg !9508
  ret i32 -12, !dbg !9509
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9510 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9512, metadata !DIExpression()), !dbg !9522
  call void @llvm.dbg.value(metadata i32 undef, metadata !9513, metadata !DIExpression()), !dbg !9522
  call void @llvm.dbg.value(metadata i32 0, metadata !9515, metadata !DIExpression()), !dbg !9522
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9523
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9516, metadata !DIExpression()), !dbg !9522
  %4 = bitcast i8* %0 to i32*, !dbg !9524
  %5 = load i32, i32* %4, align 4, !dbg !9524
  %6 = xor i32 %5, -1, !dbg !9524
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9524
  %8 = bitcast i8* %7 to %struct.hal_wdt_config_t**, !dbg !9524
  %9 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** %8, align 4, !dbg !9524
  %10 = ptrtoint %struct.hal_wdt_config_t* %9 to i32, !dbg !9524
  %11 = icmp eq i32 %6, %10, !dbg !9524
  br i1 %11, label %13, label %12, !dbg !9527

12:                                               ; preds = %2, %12
  br label %12, !dbg !9524, !llvm.loop !9528

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9529
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !9529
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9529
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !9530
  %18 = load i8, i8* %17, align 1, !dbg !9530
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #25, !dbg !9531
  call void @llvm.dbg.value(metadata i32 %19, metadata !9517, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9522
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9532
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !9533
  %22 = load i8, i8* %21, align 1, !dbg !9533
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #25, !dbg !9534
  call void @llvm.dbg.value(metadata i32 %23, metadata !9518, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9522
  call void @llvm.dbg.value(metadata i32 0, metadata !9515, metadata !DIExpression()), !dbg !9522
  %24 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9535
  %25 = bitcast i8* %24 to i8**, !dbg !9535
  %26 = load i8*, i8** %25, align 4, !dbg !9535
  %27 = load i8, i8* %26, align 1, !dbg !9536
  %28 = zext i8 %27 to i32, !dbg !9536
  %29 = and i32 %19, %28, !dbg !9537
  %30 = icmp eq i32 %29, 0, !dbg !9538
  br i1 %30, label %31, label %63, !dbg !9539

31:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !9518, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9522
  %32 = getelementptr inbounds i8, i8* %26, i32 2, !dbg !9540
  %33 = load i8, i8* %32, align 1, !dbg !9540
  %34 = getelementptr inbounds i8, i8* %26, i32 3, !dbg !9541
  %35 = load i8, i8* %34, align 1, !dbg !9541
  %36 = or i8 %35, %33, !dbg !9542
  call void @llvm.dbg.value(metadata i8 %36, metadata !9519, metadata !DIExpression()), !dbg !9543
  %37 = zext i8 %36 to i32, !dbg !9544
  %38 = and i32 %23, %37, !dbg !9546
  %39 = icmp eq i32 %38, 0, !dbg !9547
  br i1 %39, label %40, label %45, !dbg !9548

40:                                               ; preds = %31
  %41 = icmp ne i8 %36, 0, !dbg !9549
  %42 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %43 = icmp eq i8 %42, 0
  %44 = select i1 %41, i1 true, i1 %43, !dbg !9550
  br i1 %44, label %50, label %45, !dbg !9550

45:                                               ; preds = %40, %31
  %46 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9551, !range !5222
  %47 = icmp eq i8 %46, 0, !dbg !9551
  br i1 %47, label %48, label %49, !dbg !9555

48:                                               ; preds = %45, %48
  br label %48, !dbg !9551, !llvm.loop !9556

49:                                               ; preds = %45
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #25, !dbg !9557
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9558
  call void @llvm.dbg.value(metadata i32 -121, metadata !9514, metadata !DIExpression()), !dbg !9522
  br label %63, !dbg !9559

50:                                               ; preds = %40
  %51 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !9560
  %52 = bitcast i8* %51 to i32*, !dbg !9560
  %53 = load i32, i32* %52, align 4, !dbg !9560
  %54 = and i32 %53, 2, !dbg !9563
  %55 = icmp eq i32 %54, 0, !dbg !9563
  br i1 %55, label %61, label %56, !dbg !9564

56:                                               ; preds = %50
  %57 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9565
  %58 = bitcast i8* %57 to i16*, !dbg !9565
  %59 = load i16, i16* %58, align 2, !dbg !9565
  tail call void @SFI_Dev_Command(i16 noundef zeroext %59, i32 noundef 122) #24, !dbg !9567
  %60 = load i16, i16* %58, align 2, !dbg !9568
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #24, !dbg !9569
  br label %61, !dbg !9570

61:                                               ; preds = %56, %50
  tail call void @SF_DAL_FLAG_BUSY_CLR() #25, !dbg !9571
  tail call void @SF_DAL_FLAG_SUS_CLR() #25, !dbg !9572
  call void @llvm.dbg.value(metadata i32 0, metadata !9514, metadata !DIExpression()), !dbg !9522
  %62 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #25, !dbg !9573
  call void @llvm.dbg.value(metadata i32 %62, metadata !9514, metadata !DIExpression()), !dbg !9522
  br label %63, !dbg !9576

63:                                               ; preds = %13, %49, %61
  %64 = phi i32 [ %62, %61 ], [ -121, %49 ], [ -121, %13 ], !dbg !9522
  call void @llvm.dbg.value(metadata i32 %64, metadata !9514, metadata !DIExpression()), !dbg !9522
  ret i32 %64, !dbg !9577
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9578 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9580, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 undef, metadata !9581, metadata !DIExpression()), !dbg !9585
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9586
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9582, metadata !DIExpression()), !dbg !9585
  call void @llvm.dbg.value(metadata i32 0, metadata !9584, metadata !DIExpression()), !dbg !9585
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #25, !dbg !9587
  %4 = getelementptr inbounds i8, i8* %0, i32 176
  %5 = bitcast i8* %4 to %struct.SF_MTD_CMD**
  %6 = getelementptr inbounds i8, i8* %0, i32 172
  %7 = bitcast i8* %6 to i8**
  br label %8, !dbg !9588

8:                                                ; preds = %8, %2
  %9 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !9589
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %9, i32 0, i32 16, !dbg !9591
  %11 = load i8, i8* %10, align 1, !dbg !9591
  %12 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %11) #25, !dbg !9592
  call void @llvm.dbg.value(metadata i32 %12, metadata !9583, metadata !DIExpression()), !dbg !9585
  %13 = load i8*, i8** %7, align 4, !dbg !9593
  %14 = load i8, i8* %13, align 1, !dbg !9595
  %15 = zext i8 %14 to i32, !dbg !9595
  %16 = and i32 %12, %15, !dbg !9596
  %17 = icmp eq i32 %16, 0, !dbg !9597
  br i1 %17, label %18, label %8, !dbg !9598, !llvm.loop !9599

18:                                               ; preds = %8
  tail call void @SF_DAL_FLAG_SUS_SET() #25, !dbg !9601
  ret i32 0, !dbg !9602
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9603 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9605, metadata !DIExpression()), !dbg !9608
  call void @llvm.dbg.value(metadata i32 undef, metadata !9606, metadata !DIExpression()), !dbg !9608
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9609
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9607, metadata !DIExpression()), !dbg !9608
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #25, !dbg !9610
  ret i32 0, !dbg !9611
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #14 section ".ram_code" !dbg !9612 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9614, metadata !DIExpression()), !dbg !9617
  call void @llvm.dbg.value(metadata i8* undef, metadata !9615, metadata !DIExpression()), !dbg !9617
  call void @llvm.dbg.value(metadata i32 undef, metadata !9616, metadata !DIExpression()), !dbg !9617
  ret i32 0, !dbg !9618
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !9619 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9621, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.value(metadata i32 %1, metadata !9622, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.value(metadata i8* undef, metadata !9623, metadata !DIExpression()), !dbg !9625
  call void @llvm.dbg.value(metadata i8* %0, metadata !9624, metadata !DIExpression()), !dbg !9625
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !9626

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !9624, metadata !DIExpression()), !dbg !9625
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !9627
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !9627
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !9627
  %8 = tail call i32 %7(i8* noundef %0) #24, !dbg !9630
  br label %21, !dbg !9631

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !9632
  %11 = load i8, i8* %10, align 1, !dbg !9636
  %12 = icmp eq i8 %11, -62, !dbg !9637
  br i1 %12, label %13, label %21, !dbg !9638

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9639
  %15 = bitcast i8* %14 to %struct.hal_wdt_config_t**, !dbg !9639
  %16 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** %15, align 4, !dbg !9639
  %17 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %16, i32 0, i32 0, !dbg !9640
  %18 = load i32, i32* %17, align 4, !dbg !9640
  %19 = icmp eq i32 %18, 262144, !dbg !9641
  br i1 %19, label %22, label %21, !dbg !9642

20:                                               ; preds = %3, %20
  br label %20, !dbg !9643, !llvm.loop !9647

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !9648

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !9625
  ret i32 %23, !dbg !9649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9650 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9652, metadata !DIExpression()), !dbg !9654
  call void @llvm.dbg.value(metadata i32 0, metadata !9653, metadata !DIExpression()), !dbg !9654
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9655
  %3 = load i16, i16* %2, align 2, !dbg !9655
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9656
  %5 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9656
  %6 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %5, i32 0, i32 3, !dbg !9657
  %7 = load i8, i8* %6, align 1, !dbg !9657
  %8 = zext i8 %7 to i32, !dbg !9658
  tail call void @SFI_Dev_Command(i16 noundef zeroext %3, i32 noundef %8) #24, !dbg !9659
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9660
  %10 = load i8, i8* %9, align 4, !dbg !9660
  %11 = icmp eq i8 %10, 0, !dbg !9662
  br i1 %11, label %14, label %12, !dbg !9663

12:                                               ; preds = %1
  %13 = tail call i32 @ust_get_current_time() #25, !dbg !9664
  store i32 %13, i32* @sf_dal_resume_time, align 4, !dbg !9666
  br label %14, !dbg !9667

14:                                               ; preds = %12, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #25, !dbg !9668
  ret void, !dbg !9669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #3 section ".ram_code" !dbg !9670 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9672, metadata !DIExpression()), !dbg !9673
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9674
  ret void, !dbg !9675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9676 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9678, metadata !DIExpression()), !dbg !9682
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !9683
  %3 = icmp eq i32 %2, -1, !dbg !9685
  br i1 %3, label %14, label %4, !dbg !9686

4:                                                ; preds = %1
  %5 = tail call i32 @ust_get_current_time() #25, !dbg !9687
  call void @llvm.dbg.value(metadata i32 %5, metadata !9680, metadata !DIExpression()), !dbg !9682
  %6 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !9689
  %7 = sub i32 %5, %6, !dbg !9689
  call void @llvm.dbg.value(metadata i32 %7, metadata !9681, metadata !DIExpression()), !dbg !9682
  %8 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9690
  %9 = load i8, i8* %8, align 4, !dbg !9690
  %10 = zext i8 %9 to i32, !dbg !9692
  %11 = icmp ult i32 %7, %10, !dbg !9693
  br i1 %11, label %12, label %14, !dbg !9694

12:                                               ; preds = %4
  %13 = sub i32 %10, %7, !dbg !9695
  tail call void @DelayAWhile_UST(i32 noundef %13) #24, !dbg !9697
  br label %14, !dbg !9698

14:                                               ; preds = %4, %12, %1
  call void @llvm.dbg.value(metadata i32 0, metadata !9679, metadata !DIExpression()), !dbg !9682
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9699
  %16 = load i16, i16* %15, align 2, !dbg !9699
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9700
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %17, align 4, !dbg !9700
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 2, !dbg !9701
  %20 = load i8, i8* %19, align 1, !dbg !9701
  %21 = zext i8 %20 to i32, !dbg !9702
  tail call void @SFI_Dev_Command(i16 noundef zeroext %16, i32 noundef %21) #24, !dbg !9703
  ret void, !dbg !9704
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !9705 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9709, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.value(metadata i8 %1, metadata !9710, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.value(metadata i32 0, metadata !9711, metadata !DIExpression()), !dbg !9713
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9714
  %4 = load i16, i16* %3, align 2, !dbg !9714
  tail call void @SFI_MacEnable(i16 noundef zeroext %4) #24, !dbg !9715
  %5 = zext i8 %1 to i32, !dbg !9716
  store volatile i32 %5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9717
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9718
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9719
  %6 = load i16, i16* %3, align 2, !dbg !9720
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %6) #24, !dbg !9721
  %7 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9722
  %8 = lshr i32 %7, 8, !dbg !9723
  %9 = and i32 %8, 255, !dbg !9724
  call void @llvm.dbg.value(metadata i32 %9, metadata !9712, metadata !DIExpression()), !dbg !9713
  ret i32 %9, !dbg !9725
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #3 section ".ram_code" !dbg !9726 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9728, metadata !DIExpression()), !dbg !9729
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9730
  ret void, !dbg !9731
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #3 section ".ram_code" !dbg !9732 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9734, metadata !DIExpression()), !dbg !9735
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !9736
  ret void, !dbg !9737
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9738 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9740, metadata !DIExpression()), !dbg !9743
  call void @llvm.dbg.value(metadata i8* %0, metadata !9741, metadata !DIExpression()), !dbg !9743
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9744
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !9744
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !9744
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !9746
  %6 = load i8, i8* %5, align 1, !dbg !9746
  %7 = icmp eq i8 %6, 0, !dbg !9747
  br i1 %7, label %19, label %8, !dbg !9748

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9749
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !9741, metadata !DIExpression()), !dbg !9743
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #25, !dbg !9750
  call void @llvm.dbg.value(metadata i32 %10, metadata !9742, metadata !DIExpression()), !dbg !9743
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9752
  %12 = bitcast i8* %11 to i8**, !dbg !9752
  %13 = load i8*, i8** %12, align 4, !dbg !9752
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !9754
  %15 = load i8, i8* %14, align 1, !dbg !9754
  %16 = zext i8 %15 to i32, !dbg !9754
  %17 = and i32 %10, %16, !dbg !9755
  %18 = icmp eq i32 %17, 0, !dbg !9755
  br i1 %18, label %19, label %20, !dbg !9756

19:                                               ; preds = %8, %1
  br label %20, !dbg !9757

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !9743
  ret i32 %21, !dbg !9758
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9759 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9761, metadata !DIExpression()), !dbg !9762
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9763
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !9763
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !9764
  %5 = load i8, i8* %4, align 1, !dbg !9764
  %6 = zext i8 %5 to i32, !dbg !9765
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #25, !dbg !9766
  ret void, !dbg !9767
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #3 section ".ram_code" !dbg !9768 {
  call void @llvm.dbg.value(metadata i32 0, metadata !9770, metadata !DIExpression()), !dbg !9771
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !9772
  ret void, !dbg !9773
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9774 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9778, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i32 %1, metadata !9779, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i8 %2, metadata !9780, metadata !DIExpression()), !dbg !9786
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9787
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !9782, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.value(metadata i32 0, metadata !9783, metadata !DIExpression()), !dbg !9786
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9788
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !9788
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !9788
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !9789
  %9 = load i8, i8* %8, align 1, !dbg !9789
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #25, !dbg !9790
  call void @llvm.dbg.value(metadata i32 %10, metadata !9785, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9786
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9791, !range !5222
  %12 = icmp eq i8 %11, 0, !dbg !9791
  br i1 %12, label %18, label %13, !dbg !9793

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9794, !range !5222
  %15 = icmp eq i8 %14, 0, !dbg !9794
  br i1 %15, label %16, label %17, !dbg !9798

16:                                               ; preds = %13, %16
  br label %16, !dbg !9794, !llvm.loop !9799

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #25, !dbg !9800
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9801
  br label %40, !dbg !9802

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !9785, metadata !DIExpression()), !dbg !9786
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9803
  %20 = bitcast i8* %19 to i8**, !dbg !9803
  %21 = load i8*, i8** %20, align 4, !dbg !9803
  %22 = load i8, i8* %21, align 1, !dbg !9805
  %23 = zext i8 %22 to i32, !dbg !9805
  %24 = and i32 %10, %23, !dbg !9806
  %25 = icmp eq i32 %24, 0, !dbg !9807
  br i1 %25, label %26, label %40, !dbg !9808

26:                                               ; preds = %18
  call void @llvm.dbg.value(metadata i32 0, metadata !9781, metadata !DIExpression()), !dbg !9786
  tail call void @SF_DAL_FLAG_BUSY_CLR() #25, !dbg !9809
  %27 = inttoptr i32 %1 to i8*, !dbg !9811
  %28 = load volatile i8, i8* %27, align 1, !dbg !9812
  call void @llvm.dbg.value(metadata i8 %28, metadata !9784, metadata !DIExpression()), !dbg !9786
  %29 = icmp eq i8 %28, %2, !dbg !9813
  br i1 %29, label %37, label %30, !dbg !9815

30:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !9783, metadata !DIExpression()), !dbg !9786
  %31 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #24, !dbg !9816
  br i1 %31, label %32, label %40, !dbg !9819

32:                                               ; preds = %30
  %33 = and i32 %1, -32, !dbg !9820
  %34 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %33) #24, !dbg !9822
  %35 = load volatile i8, i8* %27, align 1, !dbg !9823
  %36 = icmp eq i8 %35, %2, !dbg !9825
  br i1 %36, label %37, label %40, !dbg !9826

37:                                               ; preds = %32, %26
  call void @llvm.dbg.value(metadata i32 1, metadata !9783, metadata !DIExpression()), !dbg !9786
  %38 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #25, !dbg !9827
  %39 = icmp eq i32 %38, 0, !dbg !9830
  br i1 %39, label %40, label %42, !dbg !9831

40:                                               ; preds = %32, %30, %18, %17, %37
  %41 = phi i32 [ 1, %37 ], [ -1, %32 ], [ -1, %30 ], [ 0, %18 ], [ 0, %17 ]
  br label %42, !dbg !9832

42:                                               ; preds = %37, %40
  %43 = phi i32 [ %41, %40 ], [ -1, %37 ], !dbg !9786
  ret i32 %43, !dbg !9833
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9834 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9838, metadata !DIExpression()), !dbg !9842
  call void @llvm.dbg.value(metadata i32 %1, metadata !9839, metadata !DIExpression()), !dbg !9842
  call void @llvm.dbg.value(metadata i8 %2, metadata !9840, metadata !DIExpression()), !dbg !9842
  call void @llvm.dbg.value(metadata i32 0, metadata !9841, metadata !DIExpression()), !dbg !9842
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9843
  %5 = load i16, i16* %4, align 2, !dbg !9843
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #24, !dbg !9844
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9845
  %6 = zext i8 %2 to i32, !dbg !9846
  store volatile i32 %6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9847
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9848
  %7 = load i16, i16* %4, align 2, !dbg !9849
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #24, !dbg !9850
  ret void, !dbg !9851
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !9852 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9856, metadata !DIExpression()), !dbg !9859
  call void @llvm.dbg.value(metadata i32 %1, metadata !9857, metadata !DIExpression()), !dbg !9859
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !9860
  %4 = load i32, i32* %3, align 4, !dbg !9860
  %5 = and i32 %4, 16, !dbg !9862
  %6 = icmp eq i32 %5, 0, !dbg !9862
  br i1 %6, label %7, label %8, !dbg !9863

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #25, !dbg !9864
  br label %8, !dbg !9866

8:                                                ; preds = %7, %2
  call void @llvm.dbg.value(metadata i32 0, metadata !9858, metadata !DIExpression()), !dbg !9859
  tail call void @SF_DAL_FLAG_BUSY_SET() #25, !dbg !9867
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9868
  %10 = load i16, i16* %9, align 2, !dbg !9868
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9869
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9869
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 5, !dbg !9870
  %14 = load i8, i8* %13, align 1, !dbg !9870
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !9871
  %16 = load i8, i8* %15, align 1, !dbg !9871
  %17 = zext i8 %16 to i32, !dbg !9872
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %10, i8 noundef zeroext %14, i32 noundef %1, i32 noundef %17) #24, !dbg !9873
  ret void, !dbg !9874
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #4 !dbg !9875 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9877, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9878, metadata !DIExpression()), !dbg !9880
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !9881
  %4 = load i8, i8* %3, align 1, !dbg !9881
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !9882

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !9883
  %7 = load i32, i32* %6, align 4, !dbg !9885
  %8 = or i32 %7, 4, !dbg !9885
  store i32 %8, i32* %6, align 4, !dbg !9885
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #25, !dbg !9886
  call void @llvm.dbg.value(metadata i32 0, metadata !9879, metadata !DIExpression()), !dbg !9880
  br label %18, !dbg !9887

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !9888
  %12 = load i32, i32* %11, align 4, !dbg !9889
  %13 = or i32 %12, 2, !dbg !9889
  store i32 %13, i32* %11, align 4, !dbg !9889
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #25, !dbg !9890
  call void @llvm.dbg.value(metadata i32 0, metadata !9879, metadata !DIExpression()), !dbg !9880
  call void @llvm.dbg.value(metadata i32 0, metadata !9879, metadata !DIExpression()), !dbg !9880
  br label %18, !dbg !9891

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #25, !dbg !9892
  call void @llvm.dbg.value(metadata i32 0, metadata !9879, metadata !DIExpression()), !dbg !9880
  br label %18, !dbg !9893

17:                                               ; preds = %2, %17
  br label %17, !dbg !9894, !llvm.loop !9897

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !9879, metadata !DIExpression()), !dbg !9880
  ret i32 0, !dbg !9898
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9899 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !9903, metadata !DIExpression()), !dbg !9908
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9904, metadata !DIExpression()), !dbg !9908
  call void @llvm.dbg.value(metadata i32 %2, metadata !9905, metadata !DIExpression()), !dbg !9908
  call void @llvm.dbg.value(metadata i32 %3, metadata !9906, metadata !DIExpression()), !dbg !9908
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !9909
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !9911
  br i1 %7, label %33, label %8, !dbg !9911

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9912
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9912
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !9914
  br i1 %11, label %33, label %12, !dbg !9915

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9916
  %14 = load i8*, i8** %13, align 4, !dbg !9916
  %15 = icmp eq i8* %14, null, !dbg !9917
  br i1 %15, label %33, label %16, !dbg !9918

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !9919
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !9920
  store i8* %17, i8** %18, align 4, !dbg !9921
  %19 = trunc i32 %3 to i16, !dbg !9922
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !9923
  store i16 %19, i16* %20, align 2, !dbg !9924
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #25, !dbg !9925
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9926
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !9927
  store i8 -81, i8* %23, align 1, !dbg !9928
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !9929
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #25, !dbg !9930
  %25 = load i8, i8* %24, align 1, !dbg !9931
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !9933

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #24, !dbg !9934
  br i1 %27, label %31, label %28, !dbg !9935

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9936
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !9938
  store i8 -97, i8* %30, align 1, !dbg !9939
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #25, !dbg !9940
  br label %31, !dbg !9941

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #25, !dbg !9942
  call void @llvm.dbg.value(metadata i32 0, metadata !9907, metadata !DIExpression()), !dbg !9908
  br label %33, !dbg !9943

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !9908
  ret i32 %34, !dbg !9944
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !9945 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9949, metadata !DIExpression()), !dbg !9952
  call void @llvm.dbg.value(metadata i8* %1, metadata !9950, metadata !DIExpression()), !dbg !9952
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #23, !dbg !9953
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9954
  %5 = and i32 %4, 1, !dbg !9954
  %6 = icmp eq i32 %5, 0, !dbg !9956
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9957
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !9957
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !9958
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !9958
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !9958
  %12 = load i8, i8* %11, align 1, !dbg !9957
  store i8 %12, i8* %3, align 1, !dbg !9957
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9959
  %14 = load i16, i16* %13, align 2, !dbg !9959
  call void @llvm.dbg.value(metadata i8* %3, metadata !9951, metadata !DIExpression(DW_OP_deref)), !dbg !9952
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #25, !dbg !9960
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #23, !dbg !9961
  ret void, !dbg !9961
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !9962 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9966, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.value(metadata i8* %1, metadata !9967, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.value(metadata i8* %2, metadata !9968, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.value(metadata i16 %3, metadata !9969, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.value(metadata i16 %4, metadata !9970, metadata !DIExpression()), !dbg !9972
  call void @llvm.dbg.value(metadata i32 0, metadata !9971, metadata !DIExpression()), !dbg !9972
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #24, !dbg !9973
  ret void, !dbg !9974
}

; Function Attrs: noinline nounwind optsize
define dso_local signext i8 @custom_setSFI() local_unnamed_addr #0 section ".ram_code" !dbg !9975 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576991232 to i32*), align 512, !dbg !9983
  %2 = and i32 %1, -3145777, !dbg !9983
  store volatile i32 %2, i32* inttoptr (i32 -1576991232 to i32*), align 512, !dbg !9983
  %3 = load volatile i32, i32* inttoptr (i32 -1576991228 to i32*), align 4, !dbg !9984
  %4 = and i32 %3, -3145777, !dbg !9984
  store volatile i32 %4, i32* inttoptr (i32 -1576991228 to i32*), align 4, !dbg !9984
  %5 = load volatile i32, i32* inttoptr (i32 -1576991224 to i32*), align 8, !dbg !9985
  %6 = and i32 %5, -3145777, !dbg !9985
  store volatile i32 %6, i32* inttoptr (i32 -1576991224 to i32*), align 8, !dbg !9985
  %7 = load volatile i32, i32* inttoptr (i32 -1576992220 to i32*), align 4, !dbg !9986
  %8 = and i32 %7, 1048576, !dbg !9988
  %9 = icmp eq i32 %8, 0, !dbg !9988
  br i1 %9, label %16, label %10, !dbg !9989

10:                                               ; preds = %0
  %11 = load volatile i32, i32* inttoptr (i32 -1576924400 to i32*), align 16, !dbg !9990
  %12 = and i32 %11, -4033, !dbg !9990
  store volatile i32 %12, i32* inttoptr (i32 -1576924400 to i32*), align 16, !dbg !9990
  %13 = load volatile i32, i32* inttoptr (i32 -1576924368 to i32*), align 16, !dbg !9992
  %14 = and i32 %13, -4033, !dbg !9992
  store volatile i32 %14, i32* inttoptr (i32 -1576924368 to i32*), align 16, !dbg !9992
  %15 = load volatile i32, i32* inttoptr (i32 -1576925152 to i32*), align 32, !dbg !9993
  store volatile i32 -5591041, i32* inttoptr (i32 -1576925152 to i32*), align 32, !dbg !9993
  br label %16, !dbg !9994

16:                                               ; preds = %10, %0
  %17 = tail call i32 @CMEM_EMIINIT_Index() #24, !dbg !9995
  store i32 %17, i32* @sfi_index, align 4, !dbg !9996
  %18 = icmp slt i32 %17, 0, !dbg !9997
  br i1 %18, label %19, label %20, !dbg !9999

19:                                               ; preds = %16, %19
  br label %19, !dbg !10000, !llvm.loop !10002

20:                                               ; preds = %16
  call void @llvm.dbg.value(metadata !DIArgList([5 x %struct.CMEMEntrySFI]* bitcast (i32* getelementptr inbounds ({ [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }, { [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }* @combo_mem_hw_list, i32 0, i32 3, i32 0, i32 0, i32 0) to [5 x %struct.CMEMEntrySFI]*), i32 %17), metadata !9979, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 104, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !10004
  %21 = getelementptr inbounds [5 x %struct.CMEMEntrySFI], [5 x %struct.CMEMEntrySFI]* bitcast (i32* getelementptr inbounds ({ [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }, { [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }* @combo_mem_hw_list, i32 0, i32 3, i32 0, i32 0, i32 0) to [5 x %struct.CMEMEntrySFI]*), i32 0, i32 %17, i32 1, i32 0, !dbg !10005
  tail call void @SFI_Dev_Command_List(i16 noundef zeroext 0, i8* noundef nonnull %21) #24, !dbg !10006
  %22 = getelementptr inbounds [5 x %struct.CMEMEntrySFI], [5 x %struct.CMEMEntrySFI]* bitcast (i32* getelementptr inbounds ({ [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }, { [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }* @combo_mem_hw_list, i32 0, i32 3, i32 0, i32 0, i32 0) to [5 x %struct.CMEMEntrySFI]*), i32 0, i32 %17, i32 0, i32 0, !dbg !10007
  %23 = load i32, i32* %22, align 4, !dbg !10007
  store volatile i32 %23, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !10008
  %24 = getelementptr inbounds [5 x %struct.CMEMEntrySFI], [5 x %struct.CMEMEntrySFI]* bitcast (i32* getelementptr inbounds ({ [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }, { [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }* @combo_mem_hw_list, i32 0, i32 3, i32 0, i32 0, i32 0) to [5 x %struct.CMEMEntrySFI]*), i32 0, i32 %17, i32 0, i32 1, !dbg !10009
  %25 = load i32, i32* %24, align 4, !dbg !10009
  store volatile i32 %25, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10010
  %26 = getelementptr inbounds [5 x %struct.CMEMEntrySFI], [5 x %struct.CMEMEntrySFI]* bitcast (i32* getelementptr inbounds ({ [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }, { [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }* @combo_mem_hw_list, i32 0, i32 3, i32 0, i32 0, i32 0) to [5 x %struct.CMEMEntrySFI]*), i32 0, i32 %17, i32 0, i32 2, !dbg !10011
  %27 = load i32, i32* %26, align 4, !dbg !10011
  store volatile i32 %27, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !10012
  %28 = getelementptr inbounds [5 x %struct.CMEMEntrySFI], [5 x %struct.CMEMEntrySFI]* bitcast (i32* getelementptr inbounds ({ [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }, { [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }* @combo_mem_hw_list, i32 0, i32 3, i32 0, i32 0, i32 0) to [5 x %struct.CMEMEntrySFI]*), i32 0, i32 %17, i32 0, i32 3, !dbg !10013
  %29 = load i32, i32* %28, align 4, !dbg !10013
  store volatile i32 %29, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !10014
  %30 = getelementptr inbounds [5 x %struct.CMEMEntrySFI], [5 x %struct.CMEMEntrySFI]* bitcast (i32* getelementptr inbounds ({ [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }, { [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }* @combo_mem_hw_list, i32 0, i32 3, i32 0, i32 0, i32 0) to [5 x %struct.CMEMEntrySFI]*), i32 0, i32 %17, i32 0, i32 4, !dbg !10015
  %31 = load i32, i32* %30, align 4, !dbg !10015
  store volatile i32 %31, i32* inttoptr (i32 -1610350556 to i32*), align 4, !dbg !10016
  %32 = getelementptr inbounds [5 x %struct.CMEMEntrySFI], [5 x %struct.CMEMEntrySFI]* bitcast (i32* getelementptr inbounds ({ [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }, { [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }* @combo_mem_hw_list, i32 0, i32 3, i32 0, i32 0, i32 0) to [5 x %struct.CMEMEntrySFI]*), i32 0, i32 %17, i32 0, i32 5, !dbg !10017
  %33 = load i32, i32* %32, align 4, !dbg !10017
  store volatile i32 %33, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !10018
  %34 = load volatile i32, i32* inttoptr (i32 -1576991232 to i32*), align 512, !dbg !10019
  %35 = and i32 %34, -458760, !dbg !10020
  call void @llvm.dbg.value(metadata i32 %35, metadata !9982, metadata !DIExpression()), !dbg !10004
  %36 = getelementptr inbounds [5 x %struct.CMEMEntrySFI], [5 x %struct.CMEMEntrySFI]* bitcast (i32* getelementptr inbounds ({ [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }, { [16 x i8], i32, i32, <{ { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [15 x i8], [17 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] }, { [10 x i32], <{ i8, i8, i8, i8, i8, i8, i8, [25 x i8] }>, [8 x i32] }, { [10 x i32], <{ [18 x i8], [14 x i8] }>, [8 x i32] } }> }* @combo_mem_hw_list, i32 0, i32 3, i32 0, i32 0, i32 0) to [5 x %struct.CMEMEntrySFI]*), i32 0, i32 %17, i32 0, i32 6, !dbg !10021
  %37 = load i32, i32* %36, align 4, !dbg !10021
  %38 = or i32 %35, %37, !dbg !10022
  store volatile i32 %38, i32* inttoptr (i32 -1576991232 to i32*), align 512, !dbg !10023
  %39 = load volatile i32, i32* inttoptr (i32 -1576991228 to i32*), align 4, !dbg !10024
  %40 = and i32 %39, -458760, !dbg !10025
  call void @llvm.dbg.value(metadata i32 %40, metadata !9982, metadata !DIExpression()), !dbg !10004
  %41 = or i32 %40, %37, !dbg !10026
  store volatile i32 %41, i32* inttoptr (i32 -1576991228 to i32*), align 4, !dbg !10027
  %42 = load volatile i32, i32* inttoptr (i32 -1576991224 to i32*), align 8, !dbg !10028
  %43 = and i32 %42, -458760, !dbg !10029
  call void @llvm.dbg.value(metadata i32 %43, metadata !9982, metadata !DIExpression()), !dbg !10004
  %44 = or i32 %43, %37, !dbg !10030
  store volatile i32 %44, i32* inttoptr (i32 -1576991224 to i32*), align 8, !dbg !10031
  ret i8 0, !dbg !10032
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @custom_setSFIExt() local_unnamed_addr #0 section ".ram_code" !dbg !10033 {
  %1 = tail call signext i8 @custom_setSFI() #25, !dbg !10034
  %2 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !10035
  %3 = and i32 %2, -15361, !dbg !10035
  store volatile i32 %3, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !10035
  %4 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !10036
  %5 = or i32 %4, 7168, !dbg !10036
  store volatile i32 %5, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !10036
  %6 = load volatile i16, i16* inttoptr (i32 -1575157424 to i16*), align 16, !dbg !10037
  %7 = or i16 %6, 8, !dbg !10037
  store volatile i16 %7, i16* inttoptr (i32 -1575157424 to i16*), align 16, !dbg !10037
  br label %8, !dbg !10038

8:                                                ; preds = %8, %0
  %9 = load volatile i16, i16* inttoptr (i32 -1575157424 to i16*), align 16, !dbg !10039
  %10 = and i16 %9, 8, !dbg !10040
  %11 = icmp eq i16 %10, 0, !dbg !10038
  br i1 %11, label %12, label %8, !dbg !10038, !llvm.loop !10041

12:                                               ; preds = %8
  ret i32 0, !dbg !10043
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !10044 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10046, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10049, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32 0, metadata !10047, metadata !DIExpression()), !dbg !10052
  br label %6, !dbg !10053

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10055
  call void @llvm.dbg.value(metadata i32 %3, metadata !10047, metadata !DIExpression()), !dbg !10052
  call void @llvm.dbg.value(metadata i32 %8, metadata !10047, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10052
  %4 = icmp ult i32 %8, 4, !dbg !10057
  %5 = icmp eq i32 %3, 5, !dbg !10057
  br i1 %5, label %26, label %6, !dbg !10053, !llvm.loop !10058

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10047, metadata !DIExpression()), !dbg !10052
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10048, metadata !DIExpression()), !dbg !10052
  %12 = icmp eq i8 %10, 0, !dbg !10060
  br i1 %12, label %23, label %13, !dbg !10064

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10048, metadata !DIExpression()), !dbg !10052
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10065
  %16 = load i8, i8* %15, align 1, !dbg !10065
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10068
  %18 = load i8, i8* %17, align 1, !dbg !10068
  %19 = icmp eq i8 %16, %18, !dbg !10069
  br i1 %19, label %20, label %23, !dbg !10070

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10071
  call void @llvm.dbg.value(metadata i32 %21, metadata !10048, metadata !DIExpression()), !dbg !10052
  %22 = icmp eq i32 %21, %11, !dbg !10060
  br i1 %22, label %26, label %13, !dbg !10064, !llvm.loop !10072

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10074
  %25 = icmp eq i32 %24, %11, !dbg !10075
  call void @llvm.dbg.value(metadata i32 %8, metadata !10047, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10052
  br i1 %25, label %26, label %2, !dbg !10077

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10057
  ret i1 %27, !dbg !10078
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !10079 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10091
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #23, !dbg !10091
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10083, metadata !DIExpression()), !dbg !10092
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10090, metadata !DIExpression()), !dbg !10093
  %3 = load i16, i16* @cmem_index, align 2, !dbg !10094
  %4 = icmp sgt i16 %3, -1, !dbg !10096
  br i1 %4, label %34, label %5, !dbg !10097

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10098
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #24, !dbg !10099
  call void @llvm.dbg.value(metadata i32 0, metadata !10081, metadata !DIExpression()), !dbg !10093
  br label %7, !dbg !10100

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10081, metadata !DIExpression()), !dbg !10093
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10082, metadata !DIExpression()), !dbg !10093
  %12 = icmp eq i8 %10, 0, !dbg !10102
  br i1 %12, label %24, label %13, !dbg !10107

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10082, metadata !DIExpression()), !dbg !10093
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10108
  %16 = load i8, i8* %15, align 1, !dbg !10108
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10111
  %18 = load i16, i16* %17, align 2, !dbg !10111
  %19 = zext i8 %16 to i16, !dbg !10112
  %20 = icmp eq i16 %18, %19, !dbg !10112
  br i1 %20, label %21, label %24, !dbg !10113

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10114
  call void @llvm.dbg.value(metadata i32 %22, metadata !10082, metadata !DIExpression()), !dbg !10093
  %23 = icmp eq i32 %22, %11, !dbg !10102
  br i1 %23, label %27, label %13, !dbg !10107, !llvm.loop !10115

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10117
  %26 = icmp eq i32 %25, %11, !dbg !10118
  br i1 %26, label %27, label %29, !dbg !10120

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10121
  store i16 %28, i16* @cmem_index, align 2, !dbg !10123
  br label %34, !dbg !10124

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10125
  call void @llvm.dbg.value(metadata i32 %30, metadata !10081, metadata !DIExpression()), !dbg !10093
  %31 = icmp eq i32 %30, 5, !dbg !10126
  br i1 %31, label %32, label %7, !dbg !10100, !llvm.loop !10127

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !10129
  br label %34, !dbg !10129

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10093
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #23, !dbg !10130
  ret i32 %36, !dbg !10130
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #14 !dbg !10131 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10135, metadata !DIExpression()), !dbg !10136
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !10137
  ret %struct.CMEMEntryID* %2, !dbg !10138
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10139 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10143, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i8* undef, metadata !10144, metadata !DIExpression()), !dbg !10150
  call void @llvm.dbg.value(metadata i16* %2, metadata !10145, metadata !DIExpression()), !dbg !10150
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #23, !dbg !10151
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10151
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #23, !dbg !10151
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10148, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.value(metadata i8 -81, metadata !10146, metadata !DIExpression()), !dbg !10153
  store i8 -81, i8* %4, align 1, !dbg !10154
  call void @llvm.dbg.value(metadata i8* %4, metadata !10146, metadata !DIExpression(DW_OP_deref)), !dbg !10153
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #24, !dbg !10155
  %7 = load i8, i8* %6, align 1, !dbg !10156
  %8 = add i8 %7, 1, !dbg !10158
  %9 = icmp ult i8 %8, 2, !dbg !10158
  br i1 %9, label %12, label %10, !dbg !10158

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #25, !dbg !10159
  br i1 %11, label %13, label %12, !dbg !10160

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10146, metadata !DIExpression()), !dbg !10153
  store i8 -97, i8* %4, align 1, !dbg !10161
  call void @llvm.dbg.value(metadata i8* %4, metadata !10146, metadata !DIExpression(DW_OP_deref)), !dbg !10153
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #24, !dbg !10163
  br label %13, !dbg !10164

13:                                               ; preds = %12, %10
  br label %14, !dbg !10165

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10149, metadata !DIExpression()), !dbg !10153
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !10167
  %17 = load i8, i8* %16, align 1, !dbg !10167
  %18 = zext i8 %17 to i16, !dbg !10167
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !10170
  store i16 %18, i16* %19, align 2, !dbg !10171
  %20 = add nuw nsw i32 %15, 1, !dbg !10172
  call void @llvm.dbg.value(metadata i32 %20, metadata !10149, metadata !DIExpression()), !dbg !10153
  %21 = icmp eq i32 %20, 3, !dbg !10173
  br i1 %21, label %22, label %14, !dbg !10165, !llvm.loop !10174

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #23, !dbg !10176
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #23, !dbg !10176
  ret void, !dbg !10177
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #5 section ".ram_code" !dbg !10178 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10180, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10183, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata i32 0, metadata !10181, metadata !DIExpression()), !dbg !10184
  br label %6, !dbg !10185

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10187
  call void @llvm.dbg.value(metadata i32 %3, metadata !10181, metadata !DIExpression()), !dbg !10184
  call void @llvm.dbg.value(metadata i32 %8, metadata !10181, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10184
  %4 = icmp ult i32 %8, 4, !dbg !10189
  %5 = icmp eq i32 %3, 5, !dbg !10189
  br i1 %5, label %26, label %6, !dbg !10185, !llvm.loop !10190

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10181, metadata !DIExpression()), !dbg !10184
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10182, metadata !DIExpression()), !dbg !10184
  %12 = icmp eq i8 %10, 0, !dbg !10192
  br i1 %12, label %23, label %13, !dbg !10196

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10182, metadata !DIExpression()), !dbg !10184
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10197
  %16 = load i8, i8* %15, align 1, !dbg !10197
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10200
  %18 = load i8, i8* %17, align 1, !dbg !10200
  %19 = icmp eq i8 %16, %18, !dbg !10201
  br i1 %19, label %20, label %23, !dbg !10202

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10203
  call void @llvm.dbg.value(metadata i32 %21, metadata !10182, metadata !DIExpression()), !dbg !10184
  %22 = icmp eq i32 %21, %11, !dbg !10192
  br i1 %22, label %26, label %13, !dbg !10196, !llvm.loop !10204

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10206
  %25 = icmp eq i32 %24, %11, !dbg !10207
  call void @llvm.dbg.value(metadata i32 %8, metadata !10181, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10184
  br i1 %25, label %26, label %2, !dbg !10209

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10189
  ret i1 %27, !dbg !10210
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !10211 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10217
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #23, !dbg !10217
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10215, metadata !DIExpression()), !dbg !10218
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10216, metadata !DIExpression()), !dbg !10219
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10220
  %4 = icmp sgt i16 %3, -1, !dbg !10222
  br i1 %4, label %34, label %5, !dbg !10223

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10224
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #25, !dbg !10225
  call void @llvm.dbg.value(metadata i32 0, metadata !10213, metadata !DIExpression()), !dbg !10219
  br label %7, !dbg !10226

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10213, metadata !DIExpression()), !dbg !10219
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10214, metadata !DIExpression()), !dbg !10219
  %12 = icmp eq i8 %10, 0, !dbg !10228
  br i1 %12, label %24, label %13, !dbg !10233

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10214, metadata !DIExpression()), !dbg !10219
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10234
  %16 = load i8, i8* %15, align 1, !dbg !10234
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10237
  %18 = load i16, i16* %17, align 2, !dbg !10237
  %19 = zext i8 %16 to i16, !dbg !10238
  %20 = icmp eq i16 %18, %19, !dbg !10238
  br i1 %20, label %21, label %24, !dbg !10239

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10240
  call void @llvm.dbg.value(metadata i32 %22, metadata !10214, metadata !DIExpression()), !dbg !10219
  %23 = icmp eq i32 %22, %11, !dbg !10228
  br i1 %23, label %27, label %13, !dbg !10233, !llvm.loop !10241

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10243
  %26 = icmp eq i32 %25, %11, !dbg !10244
  br i1 %26, label %27, label %29, !dbg !10246

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10247
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !10249
  br label %34, !dbg !10250

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10251
  call void @llvm.dbg.value(metadata i32 %30, metadata !10213, metadata !DIExpression()), !dbg !10219
  %31 = icmp eq i32 %30, 5, !dbg !10252
  br i1 %31, label %32, label %7, !dbg !10226, !llvm.loop !10253

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10255
  br label %34, !dbg !10255

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #23, !dbg !10256
  ret i32 %36, !dbg !10256
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10257 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10265, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i16* %1, metadata !10266, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i16* %2, metadata !10267, metadata !DIExpression()), !dbg !10273
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #23, !dbg !10274
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10274
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #23, !dbg !10274
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10271, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.value(metadata i8 -81, metadata !10269, metadata !DIExpression()), !dbg !10276
  store i8 -81, i8* %4, align 1, !dbg !10277
  %7 = tail call i32 @SaveAndSetIRQMask() #24, !dbg !10278
  call void @llvm.dbg.value(metadata i32 %7, metadata !10268, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i8* %4, metadata !10269, metadata !DIExpression(DW_OP_deref)), !dbg !10276
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #24, !dbg !10279
  call void @RestoreIRQMask(i32 noundef %7) #24, !dbg !10280
  %8 = load i8, i8* %6, align 1, !dbg !10281
  %9 = add i8 %8, 1, !dbg !10283
  %10 = icmp ult i8 %9, 2, !dbg !10283
  br i1 %10, label %13, label %11, !dbg !10283

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #24, !dbg !10284
  br i1 %12, label %15, label %13, !dbg !10285

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10269, metadata !DIExpression()), !dbg !10276
  store i8 -97, i8* %4, align 1, !dbg !10286
  %14 = call i32 @SaveAndSetIRQMask() #24, !dbg !10288
  call void @llvm.dbg.value(metadata i32 %14, metadata !10268, metadata !DIExpression()), !dbg !10273
  call void @llvm.dbg.value(metadata i8* %4, metadata !10269, metadata !DIExpression(DW_OP_deref)), !dbg !10276
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #24, !dbg !10289
  call void @RestoreIRQMask(i32 noundef %14) #24, !dbg !10290
  br label %15, !dbg !10291

15:                                               ; preds = %13, %11
  br label %16, !dbg !10292

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10272, metadata !DIExpression()), !dbg !10276
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !10294
  %19 = load i8, i8* %18, align 1, !dbg !10294
  %20 = zext i8 %19 to i16, !dbg !10294
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !10297
  store i16 %20, i16* %21, align 2, !dbg !10298
  %22 = add nuw nsw i32 %17, 1, !dbg !10299
  call void @llvm.dbg.value(metadata i32 %22, metadata !10272, metadata !DIExpression()), !dbg !10276
  %23 = icmp eq i32 %22, 3, !dbg !10300
  br i1 %23, label %24, label %16, !dbg !10292, !llvm.loop !10301

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #23, !dbg !10303
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #23, !dbg !10303
  ret void, !dbg !10304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #14 !dbg !10305 {
  ret i32 3932160, !dbg !10306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #14 !dbg !10307 {
  ret i32 4194304, !dbg !10308
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !10309 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #24, !dbg !10310
  ret void, !dbg !10311
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #14 !dbg !10312 {
  ret i32 134217728, !dbg !10313
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #14 !dbg !10314 {
  ret i32 4194304, !dbg !10315
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #3 !dbg !10316 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10317
  ret i32 134217728, !dbg !10318
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #14 !dbg !10319 {
  ret i8 1, !dbg !10322
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !10323 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !10327, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10329, metadata !DIExpression()), !dbg !10330
  %2 = tail call i32 @CMEM_EMIINIT_Index() #24, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %2, metadata !10328, metadata !DIExpression()), !dbg !10330
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10329, metadata !DIExpression()), !dbg !10330
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !10332
  %4 = load i32, i32* %3, align 4, !dbg !10332
  ret i32 %4, !dbg !10333
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_wdt_config_t* nocapture noundef readonly %1) local_unnamed_addr #5 !dbg !10334 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10338, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %1, metadata !10339, metadata !DIExpression()), !dbg !10341
  %3 = and i32 %0, 134217727, !dbg !10342
  call void @llvm.dbg.value(metadata i32 %3, metadata !10338, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i16 0, metadata !10340, metadata !DIExpression()), !dbg !10341
  %4 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %1, i32 1, i32 1, !dbg !10343
  %5 = load i32, i32* %4, align 4, !dbg !10343
  %6 = icmp eq i32 %5, 0, !dbg !10346
  br i1 %6, label %25, label %7, !dbg !10347

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !10340, metadata !DIExpression()), !dbg !10341
  %11 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %1, i32 %9, i32 0, !dbg !10348
  %12 = load i32, i32* %11, align 4, !dbg !10348
  %13 = icmp ult i32 %3, %12, !dbg !10351
  br i1 %13, label %18, label %14, !dbg !10352

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %1, i32 %8, i32 0, !dbg !10353
  %16 = load i32, i32* %15, align 4, !dbg !10353
  %17 = icmp ult i32 %3, %16, !dbg !10354
  br i1 %17, label %25, label %18, !dbg !10355

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !10356
  call void @llvm.dbg.value(metadata i16 %19, metadata !10340, metadata !DIExpression()), !dbg !10341
  %20 = zext i16 %19 to i32, !dbg !10357
  %21 = add nuw nsw i32 %20, 1, !dbg !10358
  %22 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %1, i32 %21, i32 1, !dbg !10343
  %23 = load i32, i32* %22, align 4, !dbg !10343
  %24 = icmp eq i32 %23, 0, !dbg !10346
  br i1 %24, label %25, label %7, !dbg !10347, !llvm.loop !10359

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !10357
  %27 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %1, i32 %26, i32 1, !dbg !10361
  %28 = load i32, i32* %27, align 4, !dbg !10361
  ret i32 %28, !dbg !10362
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #5 !dbg !10363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10365, metadata !DIExpression()), !dbg !10366
  %2 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** @BlockLayout, align 4, !dbg !10367
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_wdt_config_t* noundef %2) #25, !dbg !10368
  ret i32 %3, !dbg !10369
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10372, metadata !DIExpression()), !dbg !10375
  %2 = tail call i32 @CMEM_EMIINIT_Index() #24, !dbg !10376
  call void @llvm.dbg.value(metadata i32 %2, metadata !10373, metadata !DIExpression()), !dbg !10375
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10374, metadata !DIExpression()), !dbg !10375
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10374, metadata !DIExpression()), !dbg !10375
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !10377
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_wdt_config_t* noundef nonnull %3) #25, !dbg !10378
  ret i32 %4, !dbg !10379
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_wdt_config_t* nocapture noundef readonly %0) local_unnamed_addr #5 !dbg !10380 {
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %0, metadata !10386, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.value(metadata i32 0, metadata !10387, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.value(metadata i32 0, metadata !10388, metadata !DIExpression()), !dbg !10389
  %2 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %0, i32 0, i32 0, !dbg !10390
  %3 = load i32, i32* %2, align 4, !dbg !10390
  %4 = icmp eq i32 %3, 0, !dbg !10393
  br i1 %4, label %17, label %5, !dbg !10394

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10388, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.value(metadata i32 %8, metadata !10387, metadata !DIExpression()), !dbg !10389
  %9 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %0, i32 %7, i32 1, !dbg !10395
  %10 = load i32, i32* %9, align 4, !dbg !10395
  %11 = mul i32 %10, %6, !dbg !10397
  %12 = add i32 %11, %8, !dbg !10398
  call void @llvm.dbg.value(metadata i32 %12, metadata !10387, metadata !DIExpression()), !dbg !10389
  %13 = add i32 %7, 1, !dbg !10399
  call void @llvm.dbg.value(metadata i32 %13, metadata !10388, metadata !DIExpression()), !dbg !10389
  %14 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %0, i32 %13, i32 0, !dbg !10390
  %15 = load i32, i32* %14, align 4, !dbg !10390
  %16 = icmp eq i32 %15, 0, !dbg !10393
  br i1 %16, label %17, label %5, !dbg !10394, !llvm.loop !10400

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !10389
  ret i32 %18, !dbg !10402
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_wdt_config_t* nocapture noundef %2, %struct.hal_wdt_config_t* nocapture noundef readonly %3) local_unnamed_addr #4 !dbg !10403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10407, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata i32 %1, metadata !10408, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %2, metadata !10409, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %3, metadata !10410, metadata !DIExpression()), !dbg !10416
  %5 = add i32 %1, %0, !dbg !10417
  call void @llvm.dbg.value(metadata i32 %5, metadata !10415, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata i32 %0, metadata !10411, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata i32 0, metadata !10412, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata i32 0, metadata !10414, metadata !DIExpression()), !dbg !10416
  %6 = icmp ugt i32 %5, %0, !dbg !10418
  br i1 %6, label %7, label %34, !dbg !10421

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10414, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata i32 %9, metadata !10411, metadata !DIExpression()), !dbg !10416
  call void @llvm.dbg.value(metadata i32 %10, metadata !10412, metadata !DIExpression()), !dbg !10416
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_wdt_config_t* noundef %3) #25, !dbg !10422
  call void @llvm.dbg.value(metadata i32 %11, metadata !10413, metadata !DIExpression()), !dbg !10416
  %12 = icmp eq i32 %8, 0, !dbg !10424
  %13 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %2, i32 %10, i32 0, !dbg !10426
  br i1 %12, label %14, label %16, !dbg !10427

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !10428
  %15 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %2, i32 %10, i32 1, !dbg !10430
  store i32 1, i32* %15, align 4, !dbg !10431
  br label %29, !dbg !10432

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !10433
  %18 = icmp eq i32 %11, %17, !dbg !10435
  br i1 %18, label %19, label %23, !dbg !10436

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %2, i32 %10, i32 1, !dbg !10437
  %21 = load i32, i32* %20, align 4, !dbg !10439
  %22 = add i32 %21, 1, !dbg !10439
  store i32 %22, i32* %20, align 4, !dbg !10439
  br label %29, !dbg !10440

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !10441
  call void @llvm.dbg.value(metadata i32 %24, metadata !10412, metadata !DIExpression()), !dbg !10416
  %25 = icmp eq i32 %24, 9, !dbg !10443
  br i1 %25, label %34, label %26, !dbg !10445

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %2, i32 %24, i32 0, !dbg !10446
  store i32 %11, i32* %27, align 4, !dbg !10447
  %28 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %2, i32 %24, i32 1, !dbg !10448
  store i32 1, i32* %28, align 4, !dbg !10449
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !10450
  call void @llvm.dbg.value(metadata i32 %30, metadata !10412, metadata !DIExpression()), !dbg !10416
  %31 = add i32 %11, %9, !dbg !10451
  call void @llvm.dbg.value(metadata i32 %31, metadata !10411, metadata !DIExpression()), !dbg !10416
  %32 = add i32 %8, 1, !dbg !10452
  call void @llvm.dbg.value(metadata i32 %32, metadata !10414, metadata !DIExpression()), !dbg !10416
  %33 = icmp ult i32 %31, %5, !dbg !10418
  br i1 %33, label %7, label %34, !dbg !10421, !llvm.loop !10453

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !10416
  ret i32 %35, !dbg !10455
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_wdt_config_t* noundef %2) local_unnamed_addr #0 !dbg !10456 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10460, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata i32 %1, metadata !10461, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %2, metadata !10462, metadata !DIExpression()), !dbg !10463
  %4 = bitcast %struct.hal_wdt_config_t* %2 to i8*, !dbg !10464
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #24, !dbg !10465
  %6 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** @BlockLayout, align 4, !dbg !10466
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_wdt_config_t* noundef %2, %struct.hal_wdt_config_t* noundef %6) #25, !dbg !10467
  ret i32 %7, !dbg !10468
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_wdt_config_t* nocapture noundef readnone %2) local_unnamed_addr #14 !dbg !10469 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10471, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.value(metadata i32 %1, metadata !10472, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %2, metadata !10473, metadata !DIExpression()), !dbg !10474
  ret i32 0, !dbg !10475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_wdt_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !10476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10478, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.value(metadata i32 %1, metadata !10479, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %2, metadata !10480, metadata !DIExpression()), !dbg !10483
  %4 = tail call i32 @CMEM_EMIINIT_Index() #24, !dbg !10484
  call void @llvm.dbg.value(metadata i32 %4, metadata !10481, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10482, metadata !DIExpression()), !dbg !10483
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10482, metadata !DIExpression()), !dbg !10483
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !10485
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_wdt_config_t* noundef %2, %struct.hal_wdt_config_t* noundef nonnull %5) #25, !dbg !10486
  ret i32 %6, !dbg !10487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_wdt_config_t* nocapture noundef readnone %2) local_unnamed_addr #14 !dbg !10488 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10490, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata i32 %1, metadata !10491, metadata !DIExpression()), !dbg !10493
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %2, metadata !10492, metadata !DIExpression()), !dbg !10493
  ret i32 0, !dbg !10494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !10495 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10497, metadata !DIExpression()), !dbg !10500
  %2 = tail call i32 @CMEM_EMIINIT_Index() #24, !dbg !10501
  call void @llvm.dbg.value(metadata i32 %2, metadata !10498, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10499, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10499, metadata !DIExpression()), !dbg !10500
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !10502
  %4 = load i32, i32* %3, align 4, !dbg !10502
  ret i32 %4, !dbg !10503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_wdt_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10504 {
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %0, metadata !10508, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.value(metadata i32* %1, metadata !10509, metadata !DIExpression()), !dbg !10511
  call void @llvm.dbg.value(metadata i32 %2, metadata !10510, metadata !DIExpression()), !dbg !10511
  %4 = load i32, i32* %1, align 4, !dbg !10512
  %5 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %0, i32 %4, i32 0, !dbg !10514
  %6 = load i32, i32* %5, align 4, !dbg !10514
  %7 = icmp eq i32 %6, %2, !dbg !10515
  br i1 %7, label %8, label %12, !dbg !10516

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %0, i32 %4, i32 1, !dbg !10517
  %10 = load i32, i32* %9, align 4, !dbg !10519
  %11 = add i32 %10, 1, !dbg !10519
  store i32 %11, i32* %9, align 4, !dbg !10519
  br label %17, !dbg !10520

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !10521
  store i32 %13, i32* %1, align 4, !dbg !10521
  %14 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %0, i32 %13, i32 1, !dbg !10523
  store i32 1, i32* %14, align 4, !dbg !10524
  %15 = load i32, i32* %1, align 4, !dbg !10525
  %16 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %0, i32 %15, i32 0, !dbg !10526
  store i32 %2, i32* %16, align 4, !dbg !10527
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_wdt_config_t* noundef %2, %struct.hal_wdt_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !10529 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10533, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %1, metadata !10534, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %2, metadata !10535, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %3, metadata !10536, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 0, metadata !10537, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 0, metadata !10538, metadata !DIExpression()), !dbg !10542
  %5 = bitcast %struct.hal_wdt_config_t* %2 to i8*, !dbg !10543
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #24, !dbg !10544
  call void @llvm.dbg.value(metadata i32 0, metadata !10541, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 0, metadata !10540, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 0, metadata !10538, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 0, metadata !10537, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %0, metadata !10533, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %1, metadata !10534, metadata !DIExpression()), !dbg !10542
  %7 = icmp eq i32 %1, 0, !dbg !10545
  br i1 %7, label %53, label %8, !dbg !10548

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10541, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %10, metadata !10540, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %11, metadata !10538, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %12, metadata !10537, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %13, metadata !10533, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %14, metadata !10534, metadata !DIExpression()), !dbg !10542
  %15 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %3, i32 %12, i32 1, !dbg !10549
  %16 = load i32, i32* %15, align 4, !dbg !10549
  %17 = icmp ult i32 %9, %16, !dbg !10552
  %18 = xor i1 %17, true, !dbg !10553
  %19 = zext i1 %18 to i32, !dbg !10553
  %20 = add i32 %12, %19, !dbg !10553
  call void @llvm.dbg.value(metadata i32 undef, metadata !10541, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %20, metadata !10537, metadata !DIExpression()), !dbg !10542
  %21 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %3, i32 %20, i32 0, !dbg !10554
  %22 = load i32, i32* %21, align 4, !dbg !10554
  %23 = add i32 %22, %10, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %23, metadata !10540, metadata !DIExpression()), !dbg !10542
  %24 = icmp ult i32 %23, %13, !dbg !10556
  br i1 %24, label %46, label %25, !dbg !10558

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !10559
  call void @llvm.dbg.value(metadata i32 %26, metadata !10539, metadata !DIExpression()), !dbg !10542
  %27 = icmp ult i32 %14, %26, !dbg !10561
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !10563
  call void @llvm.dbg.value(metadata i32 %28, metadata !10539, metadata !DIExpression()), !dbg !10542
  %29 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %2, i32 %11, i32 0, !dbg !10564
  %30 = load i32, i32* %29, align 4, !dbg !10564
  %31 = icmp eq i32 %30, %28, !dbg !10566
  br i1 %31, label %32, label %36, !dbg !10567

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %2, i32 %11, i32 1, !dbg !10568
  %34 = load i32, i32* %33, align 4, !dbg !10570
  %35 = add i32 %34, 1, !dbg !10570
  store i32 %35, i32* %33, align 4, !dbg !10570
  br label %42, !dbg !10571

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !10572
  %38 = zext i1 %37 to i32, !dbg !10575
  %39 = add nsw i32 %11, %38, !dbg !10575
  call void @llvm.dbg.value(metadata i32 %39, metadata !10538, metadata !DIExpression()), !dbg !10542
  %40 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %2, i32 %39, i32 1, !dbg !10576
  store i32 1, i32* %40, align 4, !dbg !10577
  %41 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %2, i32 %39, i32 0, !dbg !10578
  store i32 %28, i32* %41, align 4, !dbg !10579
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !10542
  call void @llvm.dbg.value(metadata i32 %43, metadata !10538, metadata !DIExpression()), !dbg !10542
  %44 = add i32 %28, %13, !dbg !10580
  call void @llvm.dbg.value(metadata i32 %44, metadata !10533, metadata !DIExpression()), !dbg !10542
  %45 = sub i32 %14, %28, !dbg !10581
  call void @llvm.dbg.value(metadata i32 %45, metadata !10534, metadata !DIExpression()), !dbg !10542
  br label %46, !dbg !10582

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !10583
  call void @llvm.dbg.value(metadata i32 %49, metadata !10538, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %48, metadata !10533, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %47, metadata !10534, metadata !DIExpression()), !dbg !10542
  %50 = add nuw i32 %9, 1, !dbg !10584
  %51 = select i1 %17, i32 %50, i32 1, !dbg !10584
  call void @llvm.dbg.value(metadata i32 %51, metadata !10541, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %23, metadata !10540, metadata !DIExpression()), !dbg !10542
  call void @llvm.dbg.value(metadata i32 %20, metadata !10537, metadata !DIExpression()), !dbg !10542
  %52 = icmp eq i32 %47, 0, !dbg !10545
  br i1 %52, label %53, label %8, !dbg !10548, !llvm.loop !10585

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !10587
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !10588 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10592, metadata !DIExpression()), !dbg !10593
  %2 = icmp eq i32 %0, 0, !dbg !10594
  br i1 %2, label %3, label %9, !dbg !10596

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #24, !dbg !10597
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !10599
  %5 = icmp slt i32 %4, 0, !dbg !10600
  br i1 %5, label %6, label %7, !dbg !10602

6:                                                ; preds = %3, %6
  br label %6, !dbg !10603, !llvm.loop !10607

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #24, !dbg !10608
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10609
  br label %9, !dbg !10610

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10611
  ret void, !dbg !10612
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !10613 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #25, !dbg !10616
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10617
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10618
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10619
  %4 = load i16, i16* %3, align 2, !dbg !10619
  %5 = zext i16 %4 to i32, !dbg !10617
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10620
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10621
  store %struct.hal_wdt_config_t* %6, %struct.hal_wdt_config_t** @BlockLayout, align 4, !dbg !10622
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !10623
  %8 = bitcast %struct.hal_wdt_config_t* %7 to i8*, !dbg !10623
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_wdt_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #24, !dbg !10624
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !10625
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !10626
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !10627
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_wdt_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !10628
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10629
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10630
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !10631
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !10632
  %13 = load i32, i32* %12, align 4, !dbg !10632
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #24, !dbg !10633
  call void @llvm.dbg.value(metadata i32 %14, metadata !10615, metadata !DIExpression()), !dbg !10634
  %15 = icmp eq i32 %14, -120, !dbg !10635
  br i1 %15, label %16, label %17, !dbg !10638

16:                                               ; preds = %0, %16
  br label %16, !dbg !10635, !llvm.loop !10639

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_wdt_config_t* noundef getelementptr inbounds ([8 x %struct.hal_wdt_config_t], [8 x %struct.hal_wdt_config_t]* @BankInfo, i32 0, i32 0)) #25, !dbg !10640
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !10641
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_wdt_config_t* noundef getelementptr inbounds ([8 x %struct.hal_wdt_config_t], [8 x %struct.hal_wdt_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #25, !dbg !10642
  store %struct.hal_wdt_config_t* getelementptr inbounds ([8 x %struct.hal_wdt_config_t], [8 x %struct.hal_wdt_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_wdt_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !10643
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !10644
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10645
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !10646
  ret i32 0, !dbg !10647
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10648 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10691, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i32 %1, metadata !10692, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i8* %2, metadata !10693, metadata !DIExpression()), !dbg !10697
  call void @llvm.dbg.value(metadata i32 %3, metadata !10694, metadata !DIExpression()), !dbg !10697
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !10698
  %6 = load i32, i32* %5, align 4, !dbg !10698
  call void @llvm.dbg.value(metadata i32 %6, metadata !10696, metadata !DIExpression()), !dbg !10697
  %7 = icmp ule i32 %6, %1, !dbg !10699
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !10701
  br i1 %10, label %26, label %11, !dbg !10701

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10702
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !10702
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !10702
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !10703
  %16 = load i8*, i8** %15, align 4, !dbg !10703
  %17 = ptrtoint i8* %16 to i32, !dbg !10704
  %18 = add i32 %17, %1, !dbg !10705
  call void @llvm.dbg.value(metadata i32 %18, metadata !10695, metadata !DIExpression()), !dbg !10697
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10706
  %20 = load i8, i8* %19, align 4, !dbg !10706, !range !5222
  %21 = icmp eq i8 %20, 0, !dbg !10706
  br i1 %21, label %22, label %23, !dbg !10708

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #25, !dbg !10709
  br label %23, !dbg !10711

23:                                               ; preds = %22, %11
  %24 = inttoptr i32 %18 to i8*, !dbg !10712
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #24, !dbg !10713
  br label %26, !dbg !10714

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !10697
  ret i32 %27, !dbg !10715
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !10716 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10720, metadata !DIExpression()), !dbg !10722
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10723
  %3 = load i8, i8* %2, align 4, !dbg !10723, !range !5222
  %4 = icmp eq i8 %3, 0, !dbg !10723
  br i1 %4, label %5, label %18, !dbg !10725

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !10726
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !10726
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !10727
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !10727
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10728
  %11 = load i8*, i8** %10, align 4, !dbg !10728
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !10729
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !10730
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #24, !dbg !10731
  call void @llvm.dbg.value(metadata i32 %14, metadata !10721, metadata !DIExpression()), !dbg !10722
  %15 = icmp slt i32 %14, 0, !dbg !10732
  br i1 %15, label %16, label %17, !dbg !10734

16:                                               ; preds = %5, %16
  br label %16, !dbg !10735, !llvm.loop !10739

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !10740
  br label %18, !dbg !10741

18:                                               ; preds = %1, %17
  ret void, !dbg !10741
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10742 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10744, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %1, metadata !10745, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i8* %2, metadata !10746, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %3, metadata !10747, metadata !DIExpression()), !dbg !10765
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !10766
  %7 = load i32, i32* %6, align 4, !dbg !10766
  call void @llvm.dbg.value(metadata i32 %7, metadata !10750, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 0, metadata !10751, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 0, metadata !10752, metadata !DIExpression()), !dbg !10765
  %8 = icmp ugt i32 %7, %1, !dbg !10767
  br i1 %8, label %9, label %99, !dbg !10769

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !10770
  %11 = icmp ugt i32 %10, %7, !dbg !10772
  br i1 %11, label %99, label %12, !dbg !10773

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10774
  %14 = load i8, i8* %13, align 4, !dbg !10774, !range !5222
  %15 = icmp eq i8 %14, 0, !dbg !10774
  br i1 %15, label %16, label %17, !dbg !10776

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #25, !dbg !10777
  br label %17, !dbg !10779

17:                                               ; preds = %16, %12
  %18 = bitcast i16* %5 to i8*, !dbg !10780
  call void @llvm.dbg.value(metadata i32 0, metadata !10751, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 0, metadata !10752, metadata !DIExpression()), !dbg !10765
  %19 = icmp eq i32 %3, 0, !dbg !10781
  br i1 %19, label %99, label %20, !dbg !10782

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !10782

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !10752, metadata !DIExpression()), !dbg !10765
  %27 = load i8*, i8** %21, align 4, !dbg !10783
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !10784
  %29 = bitcast i8* %28 to i8**, !dbg !10784
  %30 = load i8*, i8** %29, align 4, !dbg !10784
  %31 = ptrtoint i8* %30 to i32, !dbg !10785
  %32 = add i32 %31, %1, !dbg !10786
  %33 = add i32 %32, %26, !dbg !10787
  call void @llvm.dbg.value(metadata i32 %33, metadata !10748, metadata !DIExpression()), !dbg !10765
  %34 = add i32 %26, %22, !dbg !10788
  call void @llvm.dbg.value(metadata i32 %34, metadata !10749, metadata !DIExpression()), !dbg !10765
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10789
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !10790
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !10790
  %38 = add i32 %26, %1, !dbg !10791
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #24, !dbg !10792
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #24, !dbg !10793
  %41 = and i32 %33, 1, !dbg !10794
  %42 = icmp eq i32 %41, 0, !dbg !10794
  br i1 %42, label %43, label %46, !dbg !10795

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !10796
  %45 = icmp eq i32 %44, 1, !dbg !10797
  br i1 %45, label %46, label %57, !dbg !10798

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10799
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !10801
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !10801
  %50 = load i8*, i8** %21, align 4, !dbg !10802
  %51 = inttoptr i32 %33 to i8*, !dbg !10803
  %52 = inttoptr i32 %34 to i8*, !dbg !10804
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #24, !dbg !10805
  call void @llvm.dbg.value(metadata i32 %53, metadata !10751, metadata !DIExpression()), !dbg !10765
  %54 = icmp eq i32 %53, 0, !dbg !10806
  br i1 %54, label %55, label %99, !dbg !10808

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !10809
  call void @llvm.dbg.value(metadata i32 %56, metadata !10752, metadata !DIExpression()), !dbg !10765
  br label %96, !dbg !10810

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !10811
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #24, !dbg !10812
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #24, !dbg !10813
  call void @llvm.dbg.value(metadata i32 %60, metadata !10753, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.value(metadata i32 %44, metadata !10757, metadata !DIExpression()), !dbg !10814
  %61 = add i32 %60, %33, !dbg !10815
  %62 = sub i32 0, %60, !dbg !10816
  %63 = and i32 %61, %62, !dbg !10817
  call void @llvm.dbg.value(metadata i32 %63, metadata !10758, metadata !DIExpression()), !dbg !10814
  %64 = add i32 %32, %3, !dbg !10818
  %65 = icmp ugt i32 %64, %63, !dbg !10820
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !10821
  call void @llvm.dbg.value(metadata i32 %67, metadata !10757, metadata !DIExpression()), !dbg !10814
  %68 = and i32 %67, -2, !dbg !10822
  call void @llvm.dbg.value(metadata i32 %68, metadata !10757, metadata !DIExpression()), !dbg !10814
  %69 = icmp ne i32 %68, 2, !dbg !10823
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !10824
  br i1 %72, label %85, label %73, !dbg !10824

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #23, !dbg !10780
  call void @llvm.dbg.value(metadata i8* %18, metadata !10764, metadata !DIExpression()), !dbg !10825
  %74 = inttoptr i32 %34 to i8*, !dbg !10826
  %75 = load i8, i8* %74, align 1, !dbg !10827
  call void @llvm.dbg.value(metadata i8 undef, metadata !10759, metadata !DIExpression()), !dbg !10825
  store i8 %75, i8* %18, align 2, !dbg !10828
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !10829
  %77 = load i8, i8* %76, align 1, !dbg !10830
  store i8 %77, i8* %24, align 1, !dbg !10831
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10832
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !10833
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !10833
  %81 = load i8*, i8** %21, align 4, !dbg !10834
  %82 = inttoptr i32 %33 to i8*, !dbg !10835
  call void @llvm.dbg.value(metadata i16* %5, metadata !10759, metadata !DIExpression(DW_OP_deref)), !dbg !10825
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #24, !dbg !10836
  call void @llvm.dbg.value(metadata i32 %83, metadata !10751, metadata !DIExpression()), !dbg !10765
  %84 = icmp eq i32 %83, 0, !dbg !10837
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #23, !dbg !10839
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10840
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !10844
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !10844
  %89 = load i8*, i8** %21, align 4, !dbg !10845
  %90 = inttoptr i32 %33 to i8*, !dbg !10846
  %91 = inttoptr i32 %34 to i8*, !dbg !10847
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #24, !dbg !10848
  call void @llvm.dbg.value(metadata i32 %92, metadata !10751, metadata !DIExpression()), !dbg !10765
  %93 = icmp eq i32 %92, 0, !dbg !10849
  br i1 %93, label %94, label %99, !dbg !10851

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !10751, metadata !DIExpression()), !dbg !10765
  %95 = add i32 %68, %26, !dbg !10852
  call void @llvm.dbg.value(metadata i32 %83, metadata !10751, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %26, metadata !10752, metadata !DIExpression()), !dbg !10765
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !10853
  call void @llvm.dbg.value(metadata i32 0, metadata !10751, metadata !DIExpression()), !dbg !10765
  call void @llvm.dbg.value(metadata i32 %97, metadata !10752, metadata !DIExpression()), !dbg !10765
  %98 = icmp ult i32 %97, %3, !dbg !10781
  br i1 %98, label %25, label %99, !dbg !10782, !llvm.loop !10854

99:                                               ; preds = %73, %85, %46, %96, %17, %9, %4
  %100 = phi i32 [ 2, %4 ], [ 3, %9 ], [ 0, %17 ], [ 5, %73 ], [ 5, %85 ], [ 5, %46 ], [ 0, %96 ], !dbg !10765
  ret i32 %100, !dbg !10856
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10857 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10861, metadata !DIExpression()), !dbg !10865
  call void @llvm.dbg.value(metadata i32 %1, metadata !10862, metadata !DIExpression()), !dbg !10865
  %3 = and i32 %1, 16777215, !dbg !10866
  call void @llvm.dbg.value(metadata i32 %3, metadata !10864, metadata !DIExpression()), !dbg !10865
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10867
  %5 = load i8, i8* %4, align 4, !dbg !10867, !range !5222
  %6 = icmp eq i8 %5, 0, !dbg !10867
  br i1 %6, label %7, label %8, !dbg !10869

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #25, !dbg !10870
  br label %8, !dbg !10872

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !10873
  %10 = load i32, i32* %9, align 4, !dbg !10873
  %11 = icmp ult i32 %3, %10, !dbg !10875
  br i1 %11, label %12, label %27, !dbg !10876

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !10877
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10877
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !10878
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !10878
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10879
  %18 = load i8*, i8** %17, align 4, !dbg !10879
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #24, !dbg !10880
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10881
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !10882
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !10882
  %23 = load i8*, i8** %17, align 4, !dbg !10883
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #24, !dbg !10884
  call void @llvm.dbg.value(metadata i32 %24, metadata !10863, metadata !DIExpression()), !dbg !10865
  %25 = icmp eq i32 %24, 0, !dbg !10885
  %26 = select i1 %25, i32 0, i32 6, !dbg !10865
  br label %27, !dbg !10865

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !10865
  ret i32 %28, !dbg !10887
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !10888 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10889
  br i1 %1, label %3, label %2, !dbg !10891

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #24, !dbg !10892
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #25, !dbg !10894
  store i1 true, i1* @flash_init_status, align 4, !dbg !10895
  br label %3, !dbg !10896

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !10897
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #19 section ".ram_code" !dbg !10898 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10901
  %2 = select i1 %1, i32 0, i32 -5, !dbg !10901
  ret i32 %2, !dbg !10902
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !10903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10907, metadata !DIExpression()), !dbg !10914
  call void @llvm.dbg.value(metadata i32 %1, metadata !10908, metadata !DIExpression()), !dbg !10914
  call void @llvm.dbg.value(metadata i8* %2, metadata !10909, metadata !DIExpression()), !dbg !10914
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10910, metadata !DIExpression()), !dbg !10914
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10915
  call void @llvm.dbg.value(metadata i8* %4, metadata !10911, metadata !DIExpression()), !dbg !10914
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #24, !dbg !10916
  %6 = ptrtoint i8* %5 to i32, !dbg !10917
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10918
  %8 = bitcast i8* %7 to i8**, !dbg !10918
  %9 = load i8*, i8** %8, align 4, !dbg !10918
  %10 = ptrtoint i8* %9 to i32, !dbg !10919
  %11 = shl i32 %1, 9, !dbg !10920
  %12 = add i32 %11, %6, !dbg !10921
  %13 = sub i32 %12, %10, !dbg !10922
  call void @llvm.dbg.value(metadata i32 %13, metadata !10913, metadata !DIExpression()), !dbg !10914
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #25, !dbg !10923
  call void @llvm.dbg.value(metadata i32 %14, metadata !10912, metadata !DIExpression()), !dbg !10914
  %15 = icmp eq i32 %14, 0, !dbg !10924
  %16 = select i1 %15, i32 0, i32 -13, !dbg !10914
  ret i32 %16, !dbg !10926
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !10927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10929, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.value(metadata i32 %1, metadata !10930, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.value(metadata i8* %2, metadata !10931, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10932, metadata !DIExpression()), !dbg !10936
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10937
  call void @llvm.dbg.value(metadata i8* %4, metadata !10933, metadata !DIExpression()), !dbg !10936
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #24, !dbg !10938
  %6 = ptrtoint i8* %5 to i32, !dbg !10939
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10940
  %8 = bitcast i8* %7 to i8**, !dbg !10940
  %9 = load i8*, i8** %8, align 4, !dbg !10940
  %10 = ptrtoint i8* %9 to i32, !dbg !10941
  %11 = shl i32 %1, 9, !dbg !10942
  %12 = add i32 %11, %6, !dbg !10943
  %13 = sub i32 %12, %10, !dbg !10944
  call void @llvm.dbg.value(metadata i32 %13, metadata !10935, metadata !DIExpression()), !dbg !10936
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #25, !dbg !10945
  call void @llvm.dbg.value(metadata i32 %14, metadata !10934, metadata !DIExpression()), !dbg !10936
  %15 = icmp eq i32 %14, 0, !dbg !10946
  %16 = select i1 %15, i32 0, i32 -14, !dbg !10936
  ret i32 %16, !dbg !10948
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !10949 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10953, metadata !DIExpression()), !dbg !10955
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #25, !dbg !10956
  call void @llvm.dbg.value(metadata i32 %2, metadata !10954, metadata !DIExpression()), !dbg !10955
  %3 = icmp eq i32 %2, 0, !dbg !10957
  %4 = select i1 %3, i32 0, i32 -15, !dbg !10955
  ret i32 %4, !dbg !10959
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10962, metadata !DIExpression()), !dbg !10965
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10963, metadata !DIExpression()), !dbg !10965
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10966
  call void @llvm.dbg.value(metadata i8* %2, metadata !10964, metadata !DIExpression()), !dbg !10965
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #24, !dbg !10967
  ret i32 %3, !dbg !10968
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !10969 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10971, metadata !DIExpression()), !dbg !10974
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10972, metadata !DIExpression()), !dbg !10974
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10975
  call void @llvm.dbg.value(metadata i8* %2, metadata !10973, metadata !DIExpression()), !dbg !10974
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #24, !dbg !10976
  ret i32 %3, !dbg !10977
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10978 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10982, metadata !DIExpression()), !dbg !10987
  call void @llvm.dbg.value(metadata i32* %1, metadata !10983, metadata !DIExpression()), !dbg !10987
  call void @llvm.dbg.value(metadata i32* %2, metadata !10984, metadata !DIExpression()), !dbg !10987
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10985, metadata !DIExpression()), !dbg !10987
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10988
  call void @llvm.dbg.value(metadata i8* %4, metadata !10986, metadata !DIExpression()), !dbg !10987
  %5 = and i32 %0, -134217729, !dbg !10989
  call void @llvm.dbg.value(metadata i32 %5, metadata !10982, metadata !DIExpression()), !dbg !10987
  %6 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %5) #24, !dbg !10990
  store i32 %6, i32* %1, align 4, !dbg !10991
  %7 = icmp eq i32 %6, -1, !dbg !10992
  br i1 %7, label %11, label %8, !dbg !10994

8:                                                ; preds = %3
  %9 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %6) #24, !dbg !10995
  %10 = urem i32 %5, %9, !dbg !10996
  store i32 %10, i32* %2, align 4, !dbg !10997
  br label %11, !dbg !10998

11:                                               ; preds = %3, %8
  %12 = phi i32 [ 0, %8 ], [ -1, %3 ], !dbg !10987
  ret i32 %12, !dbg !10999
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11000 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11004, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i32 %1, metadata !11005, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i32* %2, metadata !11006, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11007, metadata !DIExpression()), !dbg !11009
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11010
  call void @llvm.dbg.value(metadata i8* %4, metadata !11008, metadata !DIExpression()), !dbg !11009
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #24, !dbg !11011
  %6 = ptrtoint i8* %5 to i32, !dbg !11012
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11013
  %8 = bitcast i8* %7 to i8**, !dbg !11013
  %9 = load i8*, i8** %8, align 4, !dbg !11013
  %10 = ptrtoint i8* %9 to i32, !dbg !11014
  %11 = add i32 %6, %1, !dbg !11015
  %12 = sub i32 %11, %10, !dbg !11016
  store i32 %12, i32* %2, align 4, !dbg !11017
  ret i32 0, !dbg !11018
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #20 !dbg !11019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11023, metadata !DIExpression()), !dbg !11024
  %2 = add i32 %0, 2, !dbg !11025
  %3 = icmp ult i32 %2, 9, !dbg !11025
  br i1 %3, label %6, label %4, !dbg !11025

4:                                                ; preds = %6, %1
  br label %5, !dbg !11026

5:                                                ; preds = %4, %5
  br label %5, !dbg !11026, !llvm.loop !11035

6:                                                ; preds = %1
  %7 = trunc i32 %2 to i16, !dbg !11025
  %8 = lshr i16 433, %7, !dbg !11025
  %9 = and i16 %8, 1, !dbg !11025
  %10 = icmp eq i16 %9, 0, !dbg !11025
  br i1 %10, label %4, label %11, !dbg !11025

11:                                               ; preds = %6
  %12 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !11025
  %13 = load i32, i32* %12, align 4, !dbg !11025
  ret i32 %13, !dbg !11036
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !11037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11041, metadata !DIExpression()), !dbg !11044
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #25, !dbg !11045
  call void @llvm.dbg.value(metadata i32 %2, metadata !11043, metadata !DIExpression()), !dbg !11044
  %3 = icmp eq i32 %2, -1, !dbg !11046
  br i1 %3, label %4, label %5, !dbg !11048

4:                                                ; preds = %1, %4
  br label %4, !dbg !11049, !llvm.loop !11053

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #25, !dbg !11054
  call void @llvm.dbg.value(metadata i32 %6, metadata !11042, metadata !DIExpression()), !dbg !11044
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !11055

7:                                                ; preds = %5
  br label %10, !dbg !11056

8:                                                ; preds = %5
  br label %10, !dbg !11060

9:                                                ; preds = %5, %9
  br label %9, !dbg !11063, !llvm.loop !11067

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !11068
  ret i32 %11, !dbg !11069
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !11070 {
  %1 = tail call i32 @NOR_init() #25, !dbg !11071
  ret i32 0, !dbg !11072
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #14 !dbg !11073 {
  ret i32 0, !dbg !11074
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11079, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i32 %1, metadata !11080, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.value(metadata i32 0, metadata !11083, metadata !DIExpression()), !dbg !11084
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !11085

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !11086
  %5 = icmp eq i32 %4, 0, !dbg !11090
  br i1 %5, label %12, label %22, !dbg !11091

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !11092
  %8 = icmp eq i32 %7, 0, !dbg !11096
  br i1 %8, label %12, label %22, !dbg !11097

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !11098
  %11 = icmp eq i32 %10, 0, !dbg !11102
  br i1 %11, label %12, label %22, !dbg !11103

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !11104
  call void @llvm.dbg.value(metadata i32 %13, metadata !11083, metadata !DIExpression()), !dbg !11084
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #25, !dbg !11105
  call void @llvm.dbg.value(metadata i32 %14, metadata !11082, metadata !DIExpression()), !dbg !11084
  %15 = icmp eq i32 %14, -1, !dbg !11106
  br i1 %15, label %22, label %16, !dbg !11108

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !11109
  call void @llvm.dbg.value(metadata i32 %17, metadata !11082, metadata !DIExpression()), !dbg !11084
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #25, !dbg !11110
  call void @llvm.dbg.value(metadata i32 %18, metadata !11081, metadata !DIExpression()), !dbg !11084
  %19 = icmp eq i32 %18, 0, !dbg !11111
  br i1 %19, label %22, label %20, !dbg !11113

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #25, !dbg !11114
  br label %22, !dbg !11116

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !11084
  ret i32 %23, !dbg !11117
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11118 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11122, metadata !DIExpression()), !dbg !11127
  call void @llvm.dbg.value(metadata i8* %1, metadata !11123, metadata !DIExpression()), !dbg !11127
  call void @llvm.dbg.value(metadata i32 %2, metadata !11124, metadata !DIExpression()), !dbg !11127
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11125, metadata !DIExpression()), !dbg !11127
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !11128
  call void @llvm.dbg.value(metadata i32 %4, metadata !11126, metadata !DIExpression()), !dbg !11127
  %5 = icmp eq i32 %4, 0, !dbg !11129
  br i1 %5, label %8, label %6, !dbg !11131

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #25, !dbg !11132
  br label %8, !dbg !11134

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !11127
  ret i32 %9, !dbg !11135
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11140, metadata !DIExpression()), !dbg !11148
  call void @llvm.dbg.value(metadata i8* %1, metadata !11141, metadata !DIExpression()), !dbg !11148
  call void @llvm.dbg.value(metadata i32 %2, metadata !11142, metadata !DIExpression()), !dbg !11148
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11143, metadata !DIExpression()), !dbg !11148
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #25, !dbg !11149
  call void @llvm.dbg.value(metadata i32 %4, metadata !11144, metadata !DIExpression()), !dbg !11148
  %5 = icmp eq i32 %4, 0, !dbg !11150
  br i1 %5, label %8, label %6, !dbg !11152

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #25, !dbg !11153
  br label %21, !dbg !11155

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #24, !dbg !11156
  br i1 %9, label %10, label %21, !dbg !11157

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !11158
  call void @llvm.dbg.value(metadata i32 %11, metadata !11145, metadata !DIExpression()), !dbg !11160
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !11145, metadata !DIExpression()), !dbg !11160
  %15 = icmp ugt i32 %11, %14, !dbg !11161
  br i1 %15, label %21, label %16, !dbg !11163

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !11145, metadata !DIExpression()), !dbg !11160
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #24, !dbg !11164
  %19 = add i32 %17, 32, !dbg !11166
  call void @llvm.dbg.value(metadata i32 %19, metadata !11145, metadata !DIExpression()), !dbg !11160
  %20 = icmp ugt i32 %19, %14, !dbg !11161
  br i1 %20, label %21, label %16, !dbg !11163, !llvm.loop !11167

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !11148
  ret i32 %22, !dbg !11169
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #5 section ".ram_code" !dbg !11170 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11174, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i32 %1, metadata !11175, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i8* %0, metadata !11176, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i32 0, metadata !11177, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i32 0, metadata !11178, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i32 0, metadata !11179, metadata !DIExpression()), !dbg !11180
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11181
  %4 = bitcast i8* %3 to %struct.hal_wdt_config_t**, !dbg !11181
  %5 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** %4, align 4, !dbg !11181
  %6 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %5, i32 0, i32 1, !dbg !11182
  %7 = load i32, i32* %6, align 4, !dbg !11182
  call void @llvm.dbg.value(metadata i32 %7, metadata !11179, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i32 0, metadata !11178, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i32 0, metadata !11177, metadata !DIExpression()), !dbg !11180
  %8 = icmp ugt i32 %7, %1, !dbg !11183
  br i1 %8, label %23, label %9, !dbg !11184

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !11185
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11179, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i32 %12, metadata !11178, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.value(metadata i32 %13, metadata !11177, metadata !DIExpression()), !dbg !11180
  %14 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %5, i32 %12, i32 0, !dbg !11187
  %15 = load i32, i32* %14, align 4, !dbg !11187
  %16 = mul i32 %15, %10, !dbg !11188
  %17 = add i32 %16, %13, !dbg !11189
  call void @llvm.dbg.value(metadata i32 %17, metadata !11177, metadata !DIExpression()), !dbg !11180
  %18 = add i32 %12, 1, !dbg !11190
  call void @llvm.dbg.value(metadata i32 %18, metadata !11178, metadata !DIExpression()), !dbg !11180
  %19 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %5, i32 %18, i32 1, !dbg !11191
  %20 = load i32, i32* %19, align 4, !dbg !11191
  %21 = add i32 %20, %11, !dbg !11192
  call void @llvm.dbg.value(metadata i32 %21, metadata !11179, metadata !DIExpression()), !dbg !11180
  %22 = icmp ugt i32 %21, %1, !dbg !11183
  br i1 %22, label %23, label %9, !dbg !11184, !llvm.loop !11193

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !11195
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !11180
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !11180
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !11180
  call void @llvm.dbg.value(metadata i8* %0, metadata !11176, metadata !DIExpression()), !dbg !11180
  %28 = sub i32 %1, %27, !dbg !11196
  %29 = add i32 %28, %24, !dbg !11197
  %30 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %5, i32 %26, i32 0, !dbg !11198
  %31 = load i32, i32* %30, align 4, !dbg !11198
  %32 = mul i32 %29, %31, !dbg !11199
  %33 = add i32 %32, %25, !dbg !11200
  call void @llvm.dbg.value(metadata i32 %33, metadata !11177, metadata !DIExpression()), !dbg !11180
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !11201
  %35 = bitcast i8* %34 to i8**, !dbg !11201
  %36 = load i8*, i8** %35, align 4, !dbg !11201
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !11202
  ret i8* %37, !dbg !11203
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #4 section ".ram_code" !dbg !11204 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11206, metadata !DIExpression()), !dbg !11210
  call void @llvm.dbg.value(metadata i32 %1, metadata !11207, metadata !DIExpression()), !dbg !11210
  call void @llvm.dbg.value(metadata i32 %2, metadata !11208, metadata !DIExpression()), !dbg !11210
  call void @llvm.dbg.value(metadata i8* %0, metadata !11209, metadata !DIExpression()), !dbg !11210
  %4 = icmp eq i32 %2, 0, !dbg !11211
  br i1 %4, label %6, label %5, !dbg !11214

5:                                                ; preds = %3, %5
  br label %5, !dbg !11211, !llvm.loop !11215

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !11209, metadata !DIExpression()), !dbg !11210
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #25, !dbg !11216
  %8 = inttoptr i32 %7 to i8*, !dbg !11217
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !11218
  %10 = bitcast i8* %9 to i8**, !dbg !11218
  store i8* %8, i8** %10, align 4, !dbg !11219
  ret i8* %8, !dbg !11220
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #4 section ".ram_code" !dbg !1419 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1423, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.value(metadata i32 %1, metadata !1424, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.value(metadata i8* %0, metadata !1425, metadata !DIExpression()), !dbg !11221
  call void @llvm.dbg.value(metadata i32 0, metadata !1470, metadata !DIExpression()), !dbg !11221
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !11222
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_wdt_config_t]]*, !dbg !11222
  %5 = and i32 %1, 7, !dbg !11224
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_wdt_config_t]], [8 x [2 x %struct.hal_wdt_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !11225
  %7 = load i32, i32* %6, align 4, !dbg !11225
  %8 = icmp eq i32 %7, -1, !dbg !11226
  br i1 %8, label %62, label %9, !dbg !11227

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !11228
  br i1 %10, label %54, label %11, !dbg !11231

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_wdt_config_t]], [8 x [2 x %struct.hal_wdt_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !11232
  %13 = load i32, i32* %12, align 4, !dbg !11232
  %14 = icmp eq i32 %13, -1, !dbg !11235
  br i1 %14, label %44, label %15, !dbg !11236

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !11237
  br i1 %16, label %35, label %17, !dbg !11240

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11241
  %19 = add i32 %18, 1, !dbg !11241
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !11241
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11243
  %21 = shl nuw nsw i32 1, %5, !dbg !11245
  %22 = and i32 %20, %21, !dbg !11246
  %23 = icmp eq i32 %22, 0, !dbg !11246
  br i1 %23, label %30, label %24, !dbg !11247

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !11248
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #25, !dbg !11250
  %26 = ptrtoint i8* %25 to i32, !dbg !11251
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_wdt_config_t]], [8 x [2 x %struct.hal_wdt_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11252
  store i32 %26, i32* %27, align 4, !dbg !11253
  call void @llvm.dbg.value(metadata i32 %26, metadata !1470, metadata !DIExpression()), !dbg !11221
  %28 = xor i32 %21, -1, !dbg !11254
  %29 = and i32 %20, %28, !dbg !11255
  br label %71, !dbg !11256

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !11257
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #25, !dbg !11259
  %32 = ptrtoint i8* %31 to i32, !dbg !11260
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_wdt_config_t]], [8 x [2 x %struct.hal_wdt_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11261
  store i32 %32, i32* %33, align 4, !dbg !11262
  call void @llvm.dbg.value(metadata i32 %32, metadata !1470, metadata !DIExpression()), !dbg !11221
  %34 = or i32 %20, %21, !dbg !11263
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11264
  %37 = add i32 %36, 1, !dbg !11264
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !11264
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_wdt_config_t]], [8 x [2 x %struct.hal_wdt_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11266
  %39 = load i32, i32* %38, align 4, !dbg !11266
  call void @llvm.dbg.value(metadata i32 %39, metadata !1470, metadata !DIExpression()), !dbg !11221
  %40 = shl nuw nsw i32 1, %5, !dbg !11267
  %41 = xor i32 %40, -1, !dbg !11268
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11269
  %43 = and i32 %42, %41, !dbg !11269
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11270
  %46 = add i32 %45, 1, !dbg !11270
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !11270
  store i32 %1, i32* %12, align 4, !dbg !11272
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #25, !dbg !11273
  %48 = ptrtoint i8* %47 to i32, !dbg !11274
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_wdt_config_t]], [8 x [2 x %struct.hal_wdt_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11275
  store i32 %48, i32* %49, align 4, !dbg !11276
  call void @llvm.dbg.value(metadata i32 %48, metadata !1470, metadata !DIExpression()), !dbg !11221
  %50 = shl nuw nsw i32 1, %5, !dbg !11277
  %51 = xor i32 %50, -1, !dbg !11278
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11279
  %53 = and i32 %52, %51, !dbg !11279
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11280
  %56 = add i32 %55, 1, !dbg !11280
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !11280
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_wdt_config_t]], [8 x [2 x %struct.hal_wdt_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11282
  %58 = load i32, i32* %57, align 4, !dbg !11282
  call void @llvm.dbg.value(metadata i32 %58, metadata !1470, metadata !DIExpression()), !dbg !11221
  %59 = shl nuw nsw i32 1, %5, !dbg !11283
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11284
  %61 = or i32 %60, %59, !dbg !11284
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11285
  %64 = add i32 %63, 1, !dbg !11285
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !11285
  store i32 %1, i32* %6, align 4, !dbg !11287
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #25, !dbg !11288
  %66 = ptrtoint i8* %65 to i32, !dbg !11289
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_wdt_config_t]], [8 x [2 x %struct.hal_wdt_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11290
  store i32 %66, i32* %67, align 4, !dbg !11291
  call void @llvm.dbg.value(metadata i32 %66, metadata !1470, metadata !DIExpression()), !dbg !11221
  %68 = shl nuw nsw i32 1, %5, !dbg !11292
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11293
  %70 = or i32 %69, %68, !dbg !11293
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !11294
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !11294
  call void @llvm.dbg.value(metadata i32 %73, metadata !1470, metadata !DIExpression()), !dbg !11221
  ret i32 %73, !dbg !11295
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #5 section ".ram_code" !dbg !11296 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11298, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i32 %1, metadata !11299, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i8* %0, metadata !11300, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i32 0, metadata !11301, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i32 0, metadata !11302, metadata !DIExpression()), !dbg !11303
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11304
  %4 = bitcast i8* %3 to %struct.hal_wdt_config_t**, !dbg !11304
  %5 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** %4, align 4, !dbg !11304
  %6 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %5, i32 0, i32 1, !dbg !11305
  %7 = load i32, i32* %6, align 4, !dbg !11305
  call void @llvm.dbg.value(metadata i32 %7, metadata !11302, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i32 0, metadata !11301, metadata !DIExpression()), !dbg !11303
  %8 = icmp ugt i32 %7, %1, !dbg !11306
  br i1 %8, label %17, label %9, !dbg !11307

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11302, metadata !DIExpression()), !dbg !11303
  call void @llvm.dbg.value(metadata i32 %11, metadata !11301, metadata !DIExpression()), !dbg !11303
  %12 = add i32 %11, 1, !dbg !11308
  call void @llvm.dbg.value(metadata i32 %12, metadata !11301, metadata !DIExpression()), !dbg !11303
  %13 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %5, i32 %12, i32 1, !dbg !11310
  %14 = load i32, i32* %13, align 4, !dbg !11310
  %15 = add i32 %14, %10, !dbg !11311
  call void @llvm.dbg.value(metadata i32 %15, metadata !11302, metadata !DIExpression()), !dbg !11303
  %16 = icmp ugt i32 %15, %1, !dbg !11306
  br i1 %16, label %17, label %9, !dbg !11307, !llvm.loop !11312

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !11303
  %19 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %5, i32 %18, i32 0, !dbg !11314
  %20 = load i32, i32* %19, align 4, !dbg !11314
  ret i32 %20, !dbg !11315
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #5 section ".ram_code" !dbg !11316 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11318, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i32 %1, metadata !11319, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i8* %0, metadata !11320, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i32 0, metadata !11321, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i32 0, metadata !11322, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i32 0, metadata !11323, metadata !DIExpression()), !dbg !11324
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11325
  %4 = bitcast i8* %3 to %struct.hal_wdt_config_t**, !dbg !11325
  %5 = load %struct.hal_wdt_config_t*, %struct.hal_wdt_config_t** %4, align 4, !dbg !11325
  %6 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %5, i32 0, i32 1, !dbg !11326
  %7 = load i32, i32* %6, align 4, !dbg !11326
  %8 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %5, i32 0, i32 0, !dbg !11327
  %9 = load i32, i32* %8, align 4, !dbg !11327
  %10 = mul i32 %9, %7, !dbg !11328
  call void @llvm.dbg.value(metadata i32 %10, metadata !11322, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i32 0, metadata !11323, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i32 0, metadata !11321, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i32 %1, metadata !11319, metadata !DIExpression()), !dbg !11324
  %11 = icmp ult i32 %10, %1, !dbg !11329
  br i1 %11, label %12, label %30, !dbg !11330

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !11331
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !11323, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i32 %16, metadata !11322, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i32 %17, metadata !11321, metadata !DIExpression()), !dbg !11324
  call void @llvm.dbg.value(metadata i32 %18, metadata !11319, metadata !DIExpression()), !dbg !11324
  %19 = icmp eq i32 %14, 0, !dbg !11330
  br i1 %19, label %36, label %20, !dbg !11332

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !11333
  call void @llvm.dbg.value(metadata i32 %21, metadata !11323, metadata !DIExpression()), !dbg !11324
  %22 = sub i32 %18, %16, !dbg !11335
  call void @llvm.dbg.value(metadata i32 %22, metadata !11319, metadata !DIExpression()), !dbg !11324
  %23 = add i32 %17, 1, !dbg !11336
  call void @llvm.dbg.value(metadata i32 %23, metadata !11321, metadata !DIExpression()), !dbg !11324
  %24 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %5, i32 %23, i32 1, !dbg !11337
  %25 = load i32, i32* %24, align 4, !dbg !11337
  %26 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %5, i32 %23, i32 0, !dbg !11338
  %27 = load i32, i32* %26, align 4, !dbg !11338
  %28 = mul i32 %27, %25, !dbg !11339
  call void @llvm.dbg.value(metadata i32 %28, metadata !11322, metadata !DIExpression()), !dbg !11324
  %29 = icmp ugt i32 %22, %28, !dbg !11329
  br i1 %29, label %12, label %30, !dbg !11330, !llvm.loop !11340

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !11342
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !11324
  %34 = udiv i32 %32, %31, !dbg !11345
  %35 = add i32 %34, %33, !dbg !11346
  call void @llvm.dbg.value(metadata i32 %35, metadata !11323, metadata !DIExpression()), !dbg !11324
  br label %36, !dbg !11347

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !11348
  call void @llvm.dbg.value(metadata i32 %37, metadata !11323, metadata !DIExpression()), !dbg !11324
  ret i32 %37, !dbg !11349
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #14 !dbg !11350 {
  ret i32 0, !dbg !11351
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #14 !dbg !11352 {
  ret i32 3932160, !dbg !11353
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #14 !dbg !11354 {
  ret i32 0, !dbg !11355
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #14 !dbg !11356 {
  ret i32 262144, !dbg !11357
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !11358 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11360, metadata !DIExpression()), !dbg !11361
  %2 = tail call zeroext i1 @bl_gpt_delay_us(i32 noundef %0) #24, !dbg !11362
  ret void, !dbg !11363
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !11364 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #24, !dbg !11372
  call void @llvm.dbg.value(metadata i32 %1, metadata !11371, metadata !DIExpression()), !dbg !11373
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !11374, !range !5222
  %3 = icmp eq i8 %2, 0, !dbg !11374
  br i1 %3, label %5, label %4, !dbg !11376

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #24, !dbg !11377
  br label %15, !dbg !11379

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !11380
  tail call void @restore_interrupt_mask(i32 noundef %1) #24, !dbg !11382
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #25, !dbg !11383
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11384
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11385
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11386
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !11387
  call void @llvm.dbg.value(metadata i32 0, metadata !11369, metadata !DIExpression()), !dbg !11373
  br label %7, !dbg !11388

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !11369, metadata !DIExpression()), !dbg !11373
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !11390
  store volatile i32 0, i32* %9, align 4, !dbg !11393
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !11394
  store volatile i32 0, i32* %10, align 4, !dbg !11395
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !11396
  store i32 0, i32* %11, align 4, !dbg !11397
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !11398
  store i32 0, i32* %12, align 4, !dbg !11399
  %13 = add nuw nsw i32 %8, 1, !dbg !11400
  call void @llvm.dbg.value(metadata i32 %13, metadata !11369, metadata !DIExpression()), !dbg !11373
  %14 = icmp eq i32 %13, 16, !dbg !11401
  br i1 %14, label %15, label %7, !dbg !11388, !llvm.loop !11402

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !11373
  ret i32 %16, !dbg !11404
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !11405 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #24, !dbg !11408
  call void @llvm.dbg.value(metadata i32 %1, metadata !11407, metadata !DIExpression()), !dbg !11409
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11410
  %3 = and i32 %2, -31, !dbg !11410
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11410
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11411
  %5 = or i32 %4, 19, !dbg !11411
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11411
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11412
  %7 = and i32 %6, -31, !dbg !11412
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11412
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11413
  %9 = or i32 %8, 3, !dbg !11413
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11413
  tail call void asm sideeffect "isb", ""() #23, !dbg !11414, !srcloc !11418
  tail call void @restore_interrupt_mask(i32 noundef %1) #24, !dbg !11419
  ret i32 0, !dbg !11420
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !11421 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #25, !dbg !11424
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11425
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11426
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11427
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !11428
  call void @llvm.dbg.value(metadata i32 0, metadata !11423, metadata !DIExpression()), !dbg !11429
  br label %2, !dbg !11430

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11423, metadata !DIExpression()), !dbg !11429
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !11432
  store volatile i32 0, i32* %4, align 4, !dbg !11435
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !11436
  store volatile i32 0, i32* %5, align 4, !dbg !11437
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !11438
  store i32 0, i32* %6, align 4, !dbg !11439
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !11440
  store i32 0, i32* %7, align 4, !dbg !11441
  %8 = add nuw nsw i32 %3, 1, !dbg !11442
  call void @llvm.dbg.value(metadata i32 %8, metadata !11423, metadata !DIExpression()), !dbg !11429
  %9 = icmp eq i32 %8, 16, !dbg !11443
  br i1 %9, label %10, label %2, !dbg !11430, !llvm.loop !11444

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !11446
  ret i32 0, !dbg !11447
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #12 !dbg !11448 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11449
  %2 = and i32 %1, 768, !dbg !11451
  %3 = icmp eq i32 %2, 0, !dbg !11451
  br i1 %3, label %8, label %4, !dbg !11452

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11453
  %6 = or i32 %5, 13, !dbg !11453
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11453
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11454
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11455
  br label %8, !dbg !11456

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !11457
  ret i32 %9, !dbg !11458
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !11459 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #24, !dbg !11462
  call void @llvm.dbg.value(metadata i32 %1, metadata !11461, metadata !DIExpression()), !dbg !11463
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11464
  %3 = and i32 %2, 1, !dbg !11466
  %4 = icmp eq i32 %3, 0, !dbg !11466
  br i1 %4, label %7, label %5, !dbg !11467

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #25, !dbg !11468
  br label %7, !dbg !11470

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11471
  %9 = and i32 %8, -2, !dbg !11471
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11471
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11472
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11473
  tail call void @restore_interrupt_mask(i32 noundef %1) #24, !dbg !11474
  ret i32 0, !dbg !11475
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #12 !dbg !11476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11480, metadata !DIExpression()), !dbg !11481
  %2 = icmp ugt i32 %0, 15, !dbg !11482
  br i1 %2, label %13, label %3, !dbg !11484

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !11485
  %5 = load volatile i32, i32* %4, align 4, !dbg !11485
  %6 = and i32 %5, 256, !dbg !11487
  %7 = icmp eq i32 %6, 0, !dbg !11487
  br i1 %7, label %13, label %8, !dbg !11488

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !11489
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11491
  %11 = or i32 %10, %9, !dbg !11491
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11491
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11492
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !11493
  br label %13, !dbg !11494

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !11481
  ret i32 %14, !dbg !11495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #12 !dbg !11496 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11498, metadata !DIExpression()), !dbg !11499
  %2 = icmp ugt i32 %0, 15, !dbg !11500
  br i1 %2, label %11, label %3, !dbg !11502

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !11503
  %5 = xor i32 %4, -1, !dbg !11504
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11505
  %7 = and i32 %6, %5, !dbg !11505
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11505
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11506
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !11507
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !11508
  store i32 0, i32* %9, align 4, !dbg !11509
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !11510
  store i32 0, i32* %10, align 4, !dbg !11511
  br label %11, !dbg !11512

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !11499
  ret i32 %12, !dbg !11513
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #12 !dbg !11514 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11519, metadata !DIExpression()), !dbg !11520
  %2 = icmp ugt i32 %0, 3, !dbg !11521
  br i1 %2, label %13, label %3, !dbg !11523

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11524
  %5 = and i32 %4, -769, !dbg !11524
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11524
  %6 = shl nuw nsw i32 %0, 8, !dbg !11525
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11526
  %8 = or i32 %7, %6, !dbg !11526
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11526
  %9 = icmp eq i32 %0, 0, !dbg !11527
  br i1 %9, label %10, label %11, !dbg !11529

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11530
  br label %11, !dbg !11532

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11533
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !11534
  br label %13, !dbg !11535

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !11520
  ret i32 %14, !dbg !11536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_wdt_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !11537 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11548, metadata !DIExpression()), !dbg !11550
  call void @llvm.dbg.value(metadata %struct.hal_wdt_config_t* %1, metadata !11549, metadata !DIExpression()), !dbg !11550
  %3 = icmp ugt i32 %0, 15, !dbg !11551
  br i1 %3, label %30, label %4, !dbg !11553

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_wdt_config_t* %1, null, !dbg !11554
  br i1 %5, label %30, label %6, !dbg !11556

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %1, i32 0, i32 0, !dbg !11557
  %8 = load i32, i32* %7, align 4, !dbg !11557
  %9 = and i32 %8, 4095, !dbg !11559
  %10 = icmp eq i32 %9, 0, !dbg !11559
  br i1 %10, label %12, label %11, !dbg !11560

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.243, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.244, i32 0, i32 0)) #26, !dbg !11561
  unreachable, !dbg !11561

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_wdt_config_t, %struct.hal_wdt_config_t* %1, i32 0, i32 1, !dbg !11563
  %14 = load i32, i32* %13, align 4, !dbg !11563
  %15 = and i32 %14, 4095, !dbg !11565
  %16 = icmp eq i32 %15, 0, !dbg !11565
  br i1 %16, label %18, label %17, !dbg !11566

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.243, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.244, i32 0, i32 0)) #26, !dbg !11567
  unreachable, !dbg !11567

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !11569
  store volatile i32 %8, i32* %19, align 4, !dbg !11570
  %20 = load i32, i32* %7, align 4, !dbg !11571
  %21 = load i32, i32* %13, align 4, !dbg !11572
  %22 = add i32 %21, %20, !dbg !11573
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !11574
  store volatile i32 %22, i32* %23, align 4, !dbg !11575
  %24 = load volatile i32, i32* %19, align 4, !dbg !11576
  %25 = or i32 %24, 256, !dbg !11576
  store volatile i32 %25, i32* %19, align 4, !dbg !11576
  %26 = load volatile i32, i32* %19, align 4, !dbg !11577
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !11578
  store i32 %26, i32* %27, align 4, !dbg !11579
  %28 = load volatile i32, i32* %23, align 4, !dbg !11580
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !11581
  store i32 %28, i32* %29, align 4, !dbg !11582
  br label %30, !dbg !11583

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !11550
  ret i32 %31, !dbg !11584
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #21

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !11585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11589, metadata !DIExpression()), !dbg !11591
  %2 = and i32 %0, 31, !dbg !11592
  %3 = icmp eq i32 %2, 0, !dbg !11592
  br i1 %3, label %4, label %9, !dbg !11594

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #24, !dbg !11595
  call void @llvm.dbg.value(metadata i32 %5, metadata !11590, metadata !DIExpression()), !dbg !11591
  %6 = and i32 %0, -32, !dbg !11596
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11597
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11598
  %8 = or i32 %7, 5, !dbg !11598
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11598
  tail call void asm sideeffect "isb", ""() #23, !dbg !11599, !srcloc !11418
  tail call void @restore_interrupt_mask(i32 noundef %5) #24, !dbg !11601
  br label %9, !dbg !11602

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !11591
  ret i32 %10, !dbg !11603
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !11604 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11608, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata i32 %1, metadata !11609, metadata !DIExpression()), !dbg !11612
  %3 = add i32 %1, %0, !dbg !11613
  call void @llvm.dbg.value(metadata i32 %3, metadata !11611, metadata !DIExpression()), !dbg !11612
  %4 = or i32 %1, %0, !dbg !11614
  %5 = and i32 %4, 31, !dbg !11614
  %6 = icmp eq i32 %5, 0, !dbg !11614
  br i1 %6, label %7, label %16, !dbg !11614

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #24, !dbg !11616
  call void @llvm.dbg.value(metadata i32 %8, metadata !11610, metadata !DIExpression()), !dbg !11612
  call void @llvm.dbg.value(metadata i32 %0, metadata !11608, metadata !DIExpression()), !dbg !11612
  %9 = icmp ugt i32 %3, %0, !dbg !11617
  br i1 %9, label %10, label %15, !dbg !11618

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11608, metadata !DIExpression()), !dbg !11612
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #25, !dbg !11619
  %13 = add i32 %11, 32, !dbg !11621
  call void @llvm.dbg.value(metadata i32 %13, metadata !11608, metadata !DIExpression()), !dbg !11612
  %14 = icmp ult i32 %13, %3, !dbg !11617
  br i1 %14, label %10, label %15, !dbg !11618, !llvm.loop !11622

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #23, !dbg !11624, !srcloc !11418
  tail call void @restore_interrupt_mask(i32 noundef %8) #24, !dbg !11626
  br label %16, !dbg !11627

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !11612
  ret i32 %17, !dbg !11628
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !11629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11631, metadata !DIExpression()), !dbg !11633
  %2 = and i32 %0, 31, !dbg !11634
  %3 = icmp eq i32 %2, 0, !dbg !11634
  br i1 %3, label %4, label %9, !dbg !11636

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #24, !dbg !11637
  call void @llvm.dbg.value(metadata i32 %5, metadata !11632, metadata !DIExpression()), !dbg !11633
  %6 = and i32 %0, -32, !dbg !11638
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11639
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11640
  %8 = or i32 %7, 21, !dbg !11640
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11640
  tail call void asm sideeffect "isb", ""() #23, !dbg !11641, !srcloc !11418
  tail call void @restore_interrupt_mask(i32 noundef %5) #24, !dbg !11643
  br label %9, !dbg !11644

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !11633
  ret i32 %10, !dbg !11645
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !11646 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11648, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i32 %1, metadata !11649, metadata !DIExpression()), !dbg !11652
  %3 = add i32 %1, %0, !dbg !11653
  call void @llvm.dbg.value(metadata i32 %3, metadata !11651, metadata !DIExpression()), !dbg !11652
  %4 = or i32 %1, %0, !dbg !11654
  %5 = and i32 %4, 31, !dbg !11654
  %6 = icmp eq i32 %5, 0, !dbg !11654
  br i1 %6, label %7, label %16, !dbg !11654

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #24, !dbg !11656
  call void @llvm.dbg.value(metadata i32 %8, metadata !11650, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.value(metadata i32 %0, metadata !11648, metadata !DIExpression()), !dbg !11652
  %9 = icmp ugt i32 %3, %0, !dbg !11657
  br i1 %9, label %10, label %15, !dbg !11658

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11648, metadata !DIExpression()), !dbg !11652
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #25, !dbg !11659
  %13 = add i32 %11, 32, !dbg !11661
  call void @llvm.dbg.value(metadata i32 %13, metadata !11648, metadata !DIExpression()), !dbg !11652
  %14 = icmp ult i32 %13, %3, !dbg !11657
  br i1 %14, label %10, label %15, !dbg !11658, !llvm.loop !11662

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #23, !dbg !11664, !srcloc !11418
  tail call void @restore_interrupt_mask(i32 noundef %8) #24, !dbg !11666
  br label %16, !dbg !11667

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !11652
  ret i32 %17, !dbg !11668
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !11669 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #24, !dbg !11672
  call void @llvm.dbg.value(metadata i32 %1, metadata !11671, metadata !DIExpression()), !dbg !11673
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11674
  %3 = and i32 %2, -31, !dbg !11674
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11674
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11675
  %5 = or i32 %4, 19, !dbg !11675
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11675
  tail call void asm sideeffect "isb", ""() #23, !dbg !11676, !srcloc !11418
  tail call void @restore_interrupt_mask(i32 noundef %1) #24, !dbg !11678
  ret i32 0, !dbg !11679
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #12 !dbg !11680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11684, metadata !DIExpression()), !dbg !11686
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11687
  %3 = and i32 %2, 8, !dbg !11689
  %4 = icmp eq i32 %3, 0, !dbg !11689
  br i1 %4, label %23, label %5, !dbg !11690

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11685, metadata !DIExpression()), !dbg !11686
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11691
  %8 = shl nuw nsw i32 1, %6, !dbg !11696
  %9 = and i32 %7, %8, !dbg !11697
  %10 = icmp eq i32 %9, 0, !dbg !11697
  br i1 %10, label %20, label %11, !dbg !11698

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !11699
  %13 = load volatile i32, i32* %12, align 4, !dbg !11699
  %14 = and i32 %13, -257, !dbg !11702
  %15 = icmp ugt i32 %14, %0, !dbg !11703
  br i1 %15, label %20, label %16, !dbg !11704

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !11705
  %18 = load volatile i32, i32* %17, align 4, !dbg !11705
  %19 = icmp ugt i32 %18, %0, !dbg !11706
  br i1 %19, label %23, label %20, !dbg !11707

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !11708
  call void @llvm.dbg.value(metadata i32 %21, metadata !11685, metadata !DIExpression()), !dbg !11686
  %22 = icmp eq i32 %21, 16, !dbg !11709
  br i1 %22, label %23, label %5, !dbg !11710, !llvm.loop !11711

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !11686
  ret i1 %24, !dbg !11713
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !11714 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #23, !dbg !11718, !srcloc !11724
  call void @llvm.dbg.value(metadata i32 %1, metadata !11722, metadata !DIExpression()) #23, !dbg !11725
  call void @llvm.dbg.value(metadata i32 %1, metadata !11716, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.value(metadata i32 1, metadata !11717, metadata !DIExpression()), !dbg !11726
  call void @llvm.dbg.value(metadata i32 4, metadata !11727, metadata !DIExpression()) #23, !dbg !11730
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #23, !dbg !11732, !srcloc !11733
  tail call void asm sideeffect "dmb", ""() #23, !dbg !11734, !srcloc !11737
  tail call void asm sideeffect "isb", ""() #23, !dbg !11738, !srcloc !11741
  ret i32 %1, !dbg !11742
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !11743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11745, metadata !DIExpression()), !dbg !11746
  call void @llvm.dbg.value(metadata i32 %0, metadata !11727, metadata !DIExpression()) #23, !dbg !11747
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #23, !dbg !11749, !srcloc !11733
  tail call void asm sideeffect "dmb", ""() #23, !dbg !11750, !srcloc !11737
  tail call void asm sideeffect "isb", ""() #23, !dbg !11752, !srcloc !11741
  ret void, !dbg !11754
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !11755 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #25, !dbg !11759
  call void @llvm.dbg.value(metadata i32 %1, metadata !11758, metadata !DIExpression()), !dbg !11760
  call void @llvm.dbg.value(metadata i32 0, metadata !11757, metadata !DIExpression()), !dbg !11760
  br label %2, !dbg !11761

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11757, metadata !DIExpression()), !dbg !11760
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %3) #25, !dbg !11763
  %4 = add nuw nsw i32 %3, 1, !dbg !11766
  call void @llvm.dbg.value(metadata i32 %4, metadata !11757, metadata !DIExpression()), !dbg !11760
  %5 = icmp eq i32 %4, 64, !dbg !11767
  br i1 %5, label %6, label %2, !dbg !11761, !llvm.loop !11768

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #25, !dbg !11770
  ret void, !dbg !11771
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #12 !dbg !11772 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11776, metadata !DIExpression()), !dbg !11777
  %2 = and i32 %0, 31, !dbg !11778
  %3 = shl nuw i32 1, %2, !dbg !11779
  %4 = lshr i32 %0, 5, !dbg !11780
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !11781
  store volatile i32 %3, i32* %5, align 4, !dbg !11782
  ret void, !dbg !11783
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !11784 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #25, !dbg !11788
  call void @llvm.dbg.value(metadata i32 %1, metadata !11787, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.value(metadata i32 0, metadata !11786, metadata !DIExpression()), !dbg !11789
  br label %2, !dbg !11790

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !11786, metadata !DIExpression()), !dbg !11789
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %3) #25, !dbg !11792
  %4 = add nuw nsw i32 %3, 1, !dbg !11795
  call void @llvm.dbg.value(metadata i32 %4, metadata !11786, metadata !DIExpression()), !dbg !11789
  %5 = icmp eq i32 %4, 64, !dbg !11796
  br i1 %5, label %6, label %2, !dbg !11790, !llvm.loop !11797

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #25, !dbg !11799
  ret void, !dbg !11800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #12 !dbg !11801 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11803, metadata !DIExpression()), !dbg !11804
  %2 = and i32 %0, 31, !dbg !11805
  %3 = shl nuw i32 1, %2, !dbg !11806
  %4 = lshr i32 %0, 5, !dbg !11807
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !11808
  store volatile i32 %3, i32* %5, align 4, !dbg !11809
  ret void, !dbg !11810
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #12 !dbg !11811 {
  call void @llvm.dbg.value(metadata i32 0, metadata !11813, metadata !DIExpression()), !dbg !11814
  br label %1, !dbg !11815

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !11813, metadata !DIExpression()), !dbg !11814
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %2) #25, !dbg !11817
  %3 = add nuw nsw i32 %2, 1, !dbg !11820
  call void @llvm.dbg.value(metadata i32 %3, metadata !11813, metadata !DIExpression()), !dbg !11814
  %4 = icmp eq i32 %3, 64, !dbg !11821
  br i1 %4, label %5, label %1, !dbg !11815, !llvm.loop !11822

5:                                                ; preds = %1
  ret void, !dbg !11824
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #12 !dbg !11825 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11827, metadata !DIExpression()), !dbg !11828
  %2 = and i32 %0, 31, !dbg !11829
  %3 = shl nuw i32 1, %2, !dbg !11830
  %4 = lshr i32 %0, 5, !dbg !11831
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !11832
  store volatile i32 %3, i32* %5, align 4, !dbg !11833
  ret void, !dbg !11834
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !11835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11840, metadata !DIExpression()), !dbg !11841
  %2 = icmp ugt i32 %0, 63, !dbg !11842
  br i1 %2, label %4, label %3, !dbg !11842

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #25, !dbg !11844
  br label %4, !dbg !11845

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !11841
  ret i32 %5, !dbg !11846
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !11847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11851, metadata !DIExpression()), !dbg !11852
  %2 = and i32 %0, 511, !dbg !11853
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !11854
  tail call void asm sideeffect "dsb", ""() #23, !dbg !11855, !srcloc !11858
  ret void, !dbg !11859
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #18 !dbg !11860 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !11861
  %2 = and i32 %1, 511, !dbg !11862
  ret i32 %2, !dbg !11863
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mbedtls_sha1_init(%struct.mbedtls_sha1_context* noundef %0) local_unnamed_addr #0 !dbg !11864 {
  call void @llvm.dbg.value(metadata %struct.mbedtls_sha1_context* %0, metadata !11875, metadata !DIExpression()), !dbg !11876
  %2 = bitcast %struct.mbedtls_sha1_context* %0 to i8*, !dbg !11877
  %3 = tail call i8* @memset(i8* noundef %2, i32 noundef 0, i32 noundef 92) #24, !dbg !11878
  ret void, !dbg !11879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mbedtls_sha1_free(%struct.mbedtls_sha1_context* noundef %0) local_unnamed_addr #12 !dbg !11880 {
  call void @llvm.dbg.value(metadata %struct.mbedtls_sha1_context* %0, metadata !11882, metadata !DIExpression()), !dbg !11883
  %2 = icmp eq %struct.mbedtls_sha1_context* %0, null, !dbg !11884
  br i1 %2, label %5, label %3, !dbg !11886

3:                                                ; preds = %1
  %4 = bitcast %struct.mbedtls_sha1_context* %0 to i8*, !dbg !11887
  tail call fastcc void @mbedtls_zeroize(i8* noundef nonnull %4) #25, !dbg !11888
  br label %5, !dbg !11889

5:                                                ; preds = %1, %3
  ret void, !dbg !11889
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @mbedtls_zeroize(i8* noundef %0) unnamed_addr #12 !dbg !11890 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11894, metadata !DIExpression()), !dbg !11897
  call void @llvm.dbg.value(metadata i32 92, metadata !11895, metadata !DIExpression()), !dbg !11897
  call void @llvm.dbg.value(metadata i8* %0, metadata !11896, metadata !DIExpression()), !dbg !11897
  call void @llvm.dbg.value(metadata i32 92, metadata !11895, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11897
  br label %2, !dbg !11898

2:                                                ; preds = %1, %2
  %3 = phi i8* [ %0, %1 ], [ %6, %2 ]
  %4 = phi i32 [ 92, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i8* %3, metadata !11896, metadata !DIExpression()), !dbg !11897
  call void @llvm.dbg.value(metadata i32 %4, metadata !11895, metadata !DIExpression()), !dbg !11897
  %5 = add nsw i32 %4, -1, !dbg !11899
  call void @llvm.dbg.value(metadata i32 %5, metadata !11895, metadata !DIExpression()), !dbg !11897
  %6 = getelementptr inbounds i8, i8* %3, i32 1, !dbg !11900
  call void @llvm.dbg.value(metadata i8* %6, metadata !11896, metadata !DIExpression()), !dbg !11897
  store volatile i8 0, i8* %3, align 1, !dbg !11901
  call void @llvm.dbg.value(metadata i32 %5, metadata !11895, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11897
  %7 = icmp eq i32 %5, 0, !dbg !11898
  br i1 %7, label %8, label %2, !dbg !11898, !llvm.loop !11902

8:                                                ; preds = %2
  ret void, !dbg !11904
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @mbedtls_sha1_clone(%struct.mbedtls_sha1_context* nocapture noundef writeonly %0, %struct.mbedtls_sha1_context* nocapture noundef readonly %1) local_unnamed_addr #22 !dbg !11905 {
  call void @llvm.dbg.value(metadata %struct.mbedtls_sha1_context* %0, metadata !11911, metadata !DIExpression()), !dbg !11913
  call void @llvm.dbg.value(metadata %struct.mbedtls_sha1_context* %1, metadata !11912, metadata !DIExpression()), !dbg !11913
  %3 = bitcast %struct.mbedtls_sha1_context* %0 to i8*, !dbg !11914
  %4 = bitcast %struct.mbedtls_sha1_context* %1 to i8*, !dbg !11914
  tail call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(92) %3, i8* noundef nonnull align 4 dereferenceable(92) %4, i32 92, i1 false), !dbg !11914
  ret void, !dbg !11915
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @mbedtls_sha1_starts(%struct.mbedtls_sha1_context* nocapture noundef writeonly %0) local_unnamed_addr #3 !dbg !11916 {
  call void @llvm.dbg.value(metadata %struct.mbedtls_sha1_context* %0, metadata !11918, metadata !DIExpression()), !dbg !11919
  %2 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 0, i32 0, !dbg !11920
  store i32 0, i32* %2, align 4, !dbg !11921
  %3 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 0, i32 1, !dbg !11922
  store i32 0, i32* %3, align 4, !dbg !11923
  %4 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 0, !dbg !11924
  store i32 1732584193, i32* %4, align 4, !dbg !11925
  %5 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 1, !dbg !11926
  store i32 -271733879, i32* %5, align 4, !dbg !11927
  %6 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 2, !dbg !11928
  store i32 -1732584194, i32* %6, align 4, !dbg !11929
  %7 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 3, !dbg !11930
  store i32 271733878, i32* %7, align 4, !dbg !11931
  %8 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 4, !dbg !11932
  store i32 -1009589776, i32* %8, align 4, !dbg !11933
  ret void, !dbg !11934
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize willreturn
define dso_local void @mbedtls_sha1_process(%struct.mbedtls_sha1_context* nocapture noundef %0, i8* noundef readonly %1) local_unnamed_addr #22 !dbg !11935 {
  call void @llvm.dbg.value(metadata %struct.mbedtls_sha1_context* %0, metadata !11940, metadata !DIExpression()), !dbg !11950
  call void @llvm.dbg.value(metadata i8* %1, metadata !11941, metadata !DIExpression()), !dbg !11950
  %3 = load i8, i8* %1, align 1, !dbg !11951
  %4 = zext i8 %3 to i32, !dbg !11951
  %5 = shl nuw i32 %4, 24, !dbg !11951
  %6 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !11951
  %7 = load i8, i8* %6, align 1, !dbg !11951
  %8 = zext i8 %7 to i32, !dbg !11951
  %9 = shl nuw nsw i32 %8, 16, !dbg !11951
  %10 = or i32 %9, %5, !dbg !11951
  %11 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !11951
  %12 = load i8, i8* %11, align 1, !dbg !11951
  %13 = zext i8 %12 to i32, !dbg !11951
  %14 = shl nuw nsw i32 %13, 8, !dbg !11951
  %15 = or i32 %10, %14, !dbg !11951
  %16 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !11951
  %17 = load i8, i8* %16, align 1, !dbg !11951
  %18 = zext i8 %17 to i32, !dbg !11951
  %19 = or i32 %15, %18, !dbg !11951
  call void @llvm.dbg.value(metadata i32 %19, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !11950
  %20 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !11953
  %21 = load i8, i8* %20, align 1, !dbg !11953
  %22 = zext i8 %21 to i32, !dbg !11953
  %23 = shl nuw i32 %22, 24, !dbg !11953
  %24 = getelementptr inbounds i8, i8* %1, i32 5, !dbg !11953
  %25 = load i8, i8* %24, align 1, !dbg !11953
  %26 = zext i8 %25 to i32, !dbg !11953
  %27 = shl nuw nsw i32 %26, 16, !dbg !11953
  %28 = or i32 %27, %23, !dbg !11953
  %29 = getelementptr inbounds i8, i8* %1, i32 6, !dbg !11953
  %30 = load i8, i8* %29, align 1, !dbg !11953
  %31 = zext i8 %30 to i32, !dbg !11953
  %32 = shl nuw nsw i32 %31, 8, !dbg !11953
  %33 = or i32 %28, %32, !dbg !11953
  %34 = getelementptr inbounds i8, i8* %1, i32 7, !dbg !11953
  %35 = load i8, i8* %34, align 1, !dbg !11953
  %36 = zext i8 %35 to i32, !dbg !11953
  %37 = or i32 %33, %36, !dbg !11953
  call void @llvm.dbg.value(metadata i32 %37, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !11950
  %38 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !11955
  %39 = load i8, i8* %38, align 1, !dbg !11955
  %40 = zext i8 %39 to i32, !dbg !11955
  %41 = shl nuw i32 %40, 24, !dbg !11955
  %42 = getelementptr inbounds i8, i8* %1, i32 9, !dbg !11955
  %43 = load i8, i8* %42, align 1, !dbg !11955
  %44 = zext i8 %43 to i32, !dbg !11955
  %45 = shl nuw nsw i32 %44, 16, !dbg !11955
  %46 = or i32 %45, %41, !dbg !11955
  %47 = getelementptr inbounds i8, i8* %1, i32 10, !dbg !11955
  %48 = load i8, i8* %47, align 1, !dbg !11955
  %49 = zext i8 %48 to i32, !dbg !11955
  %50 = shl nuw nsw i32 %49, 8, !dbg !11955
  %51 = or i32 %46, %50, !dbg !11955
  %52 = getelementptr inbounds i8, i8* %1, i32 11, !dbg !11955
  %53 = load i8, i8* %52, align 1, !dbg !11955
  %54 = zext i8 %53 to i32, !dbg !11955
  %55 = or i32 %51, %54, !dbg !11955
  call void @llvm.dbg.value(metadata i32 %55, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !11950
  %56 = getelementptr inbounds i8, i8* %1, i32 12, !dbg !11957
  %57 = load i8, i8* %56, align 1, !dbg !11957
  %58 = zext i8 %57 to i32, !dbg !11957
  %59 = shl nuw i32 %58, 24, !dbg !11957
  %60 = getelementptr inbounds i8, i8* %1, i32 13, !dbg !11957
  %61 = load i8, i8* %60, align 1, !dbg !11957
  %62 = zext i8 %61 to i32, !dbg !11957
  %63 = shl nuw nsw i32 %62, 16, !dbg !11957
  %64 = or i32 %63, %59, !dbg !11957
  %65 = getelementptr inbounds i8, i8* %1, i32 14, !dbg !11957
  %66 = load i8, i8* %65, align 1, !dbg !11957
  %67 = zext i8 %66 to i32, !dbg !11957
  %68 = shl nuw nsw i32 %67, 8, !dbg !11957
  %69 = or i32 %64, %68, !dbg !11957
  %70 = getelementptr inbounds i8, i8* %1, i32 15, !dbg !11957
  %71 = load i8, i8* %70, align 1, !dbg !11957
  %72 = zext i8 %71 to i32, !dbg !11957
  %73 = or i32 %69, %72, !dbg !11957
  call void @llvm.dbg.value(metadata i32 %73, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !11950
  %74 = getelementptr inbounds i8, i8* %1, i32 16, !dbg !11959
  %75 = load i8, i8* %74, align 1, !dbg !11959
  %76 = zext i8 %75 to i32, !dbg !11959
  %77 = shl nuw i32 %76, 24, !dbg !11959
  %78 = getelementptr inbounds i8, i8* %1, i32 17, !dbg !11959
  %79 = load i8, i8* %78, align 1, !dbg !11959
  %80 = zext i8 %79 to i32, !dbg !11959
  %81 = shl nuw nsw i32 %80, 16, !dbg !11959
  %82 = or i32 %81, %77, !dbg !11959
  %83 = getelementptr inbounds i8, i8* %1, i32 18, !dbg !11959
  %84 = load i8, i8* %83, align 1, !dbg !11959
  %85 = zext i8 %84 to i32, !dbg !11959
  %86 = shl nuw nsw i32 %85, 8, !dbg !11959
  %87 = or i32 %82, %86, !dbg !11959
  %88 = getelementptr inbounds i8, i8* %1, i32 19, !dbg !11959
  %89 = load i8, i8* %88, align 1, !dbg !11959
  %90 = zext i8 %89 to i32, !dbg !11959
  %91 = or i32 %87, %90, !dbg !11959
  call void @llvm.dbg.value(metadata i32 %91, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 32)), !dbg !11950
  %92 = getelementptr inbounds i8, i8* %1, i32 20, !dbg !11961
  %93 = load i8, i8* %92, align 1, !dbg !11961
  %94 = zext i8 %93 to i32, !dbg !11961
  %95 = shl nuw i32 %94, 24, !dbg !11961
  %96 = getelementptr inbounds i8, i8* %1, i32 21, !dbg !11961
  %97 = load i8, i8* %96, align 1, !dbg !11961
  %98 = zext i8 %97 to i32, !dbg !11961
  %99 = shl nuw nsw i32 %98, 16, !dbg !11961
  %100 = or i32 %99, %95, !dbg !11961
  %101 = getelementptr inbounds i8, i8* %1, i32 22, !dbg !11961
  %102 = load i8, i8* %101, align 1, !dbg !11961
  %103 = zext i8 %102 to i32, !dbg !11961
  %104 = shl nuw nsw i32 %103, 8, !dbg !11961
  %105 = or i32 %100, %104, !dbg !11961
  %106 = getelementptr inbounds i8, i8* %1, i32 23, !dbg !11961
  %107 = load i8, i8* %106, align 1, !dbg !11961
  %108 = zext i8 %107 to i32, !dbg !11961
  %109 = or i32 %105, %108, !dbg !11961
  call void @llvm.dbg.value(metadata i32 %109, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 160, 32)), !dbg !11950
  %110 = getelementptr inbounds i8, i8* %1, i32 24, !dbg !11963
  %111 = load i8, i8* %110, align 1, !dbg !11963
  %112 = zext i8 %111 to i32, !dbg !11963
  %113 = shl nuw i32 %112, 24, !dbg !11963
  %114 = getelementptr inbounds i8, i8* %1, i32 25, !dbg !11963
  %115 = load i8, i8* %114, align 1, !dbg !11963
  %116 = zext i8 %115 to i32, !dbg !11963
  %117 = shl nuw nsw i32 %116, 16, !dbg !11963
  %118 = or i32 %117, %113, !dbg !11963
  %119 = getelementptr inbounds i8, i8* %1, i32 26, !dbg !11963
  %120 = load i8, i8* %119, align 1, !dbg !11963
  %121 = zext i8 %120 to i32, !dbg !11963
  %122 = shl nuw nsw i32 %121, 8, !dbg !11963
  %123 = or i32 %118, %122, !dbg !11963
  %124 = getelementptr inbounds i8, i8* %1, i32 27, !dbg !11963
  %125 = load i8, i8* %124, align 1, !dbg !11963
  %126 = zext i8 %125 to i32, !dbg !11963
  %127 = or i32 %123, %126, !dbg !11963
  call void @llvm.dbg.value(metadata i32 %127, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 192, 32)), !dbg !11950
  %128 = getelementptr inbounds i8, i8* %1, i32 28, !dbg !11965
  %129 = load i8, i8* %128, align 1, !dbg !11965
  %130 = zext i8 %129 to i32, !dbg !11965
  %131 = shl nuw i32 %130, 24, !dbg !11965
  %132 = getelementptr inbounds i8, i8* %1, i32 29, !dbg !11965
  %133 = load i8, i8* %132, align 1, !dbg !11965
  %134 = zext i8 %133 to i32, !dbg !11965
  %135 = shl nuw nsw i32 %134, 16, !dbg !11965
  %136 = or i32 %135, %131, !dbg !11965
  %137 = getelementptr inbounds i8, i8* %1, i32 30, !dbg !11965
  %138 = load i8, i8* %137, align 1, !dbg !11965
  %139 = zext i8 %138 to i32, !dbg !11965
  %140 = shl nuw nsw i32 %139, 8, !dbg !11965
  %141 = or i32 %136, %140, !dbg !11965
  %142 = getelementptr inbounds i8, i8* %1, i32 31, !dbg !11965
  %143 = load i8, i8* %142, align 1, !dbg !11965
  %144 = zext i8 %143 to i32, !dbg !11965
  %145 = or i32 %141, %144, !dbg !11965
  call void @llvm.dbg.value(metadata i32 %145, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 224, 32)), !dbg !11950
  %146 = getelementptr inbounds i8, i8* %1, i32 32, !dbg !11967
  %147 = load i8, i8* %146, align 1, !dbg !11967
  %148 = zext i8 %147 to i32, !dbg !11967
  %149 = shl nuw i32 %148, 24, !dbg !11967
  %150 = getelementptr inbounds i8, i8* %1, i32 33, !dbg !11967
  %151 = load i8, i8* %150, align 1, !dbg !11967
  %152 = zext i8 %151 to i32, !dbg !11967
  %153 = shl nuw nsw i32 %152, 16, !dbg !11967
  %154 = or i32 %153, %149, !dbg !11967
  %155 = getelementptr inbounds i8, i8* %1, i32 34, !dbg !11967
  %156 = load i8, i8* %155, align 1, !dbg !11967
  %157 = zext i8 %156 to i32, !dbg !11967
  %158 = shl nuw nsw i32 %157, 8, !dbg !11967
  %159 = or i32 %154, %158, !dbg !11967
  %160 = getelementptr inbounds i8, i8* %1, i32 35, !dbg !11967
  %161 = load i8, i8* %160, align 1, !dbg !11967
  %162 = zext i8 %161 to i32, !dbg !11967
  %163 = or i32 %159, %162, !dbg !11967
  call void @llvm.dbg.value(metadata i32 %163, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 32)), !dbg !11950
  %164 = getelementptr inbounds i8, i8* %1, i32 36, !dbg !11969
  %165 = load i8, i8* %164, align 1, !dbg !11969
  %166 = zext i8 %165 to i32, !dbg !11969
  %167 = shl nuw i32 %166, 24, !dbg !11969
  %168 = getelementptr inbounds i8, i8* %1, i32 37, !dbg !11969
  %169 = load i8, i8* %168, align 1, !dbg !11969
  %170 = zext i8 %169 to i32, !dbg !11969
  %171 = shl nuw nsw i32 %170, 16, !dbg !11969
  %172 = or i32 %171, %167, !dbg !11969
  %173 = getelementptr inbounds i8, i8* %1, i32 38, !dbg !11969
  %174 = load i8, i8* %173, align 1, !dbg !11969
  %175 = zext i8 %174 to i32, !dbg !11969
  %176 = shl nuw nsw i32 %175, 8, !dbg !11969
  %177 = or i32 %172, %176, !dbg !11969
  %178 = getelementptr inbounds i8, i8* %1, i32 39, !dbg !11969
  %179 = load i8, i8* %178, align 1, !dbg !11969
  %180 = zext i8 %179 to i32, !dbg !11969
  %181 = or i32 %177, %180, !dbg !11969
  call void @llvm.dbg.value(metadata i32 %181, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 288, 32)), !dbg !11950
  %182 = getelementptr inbounds i8, i8* %1, i32 40, !dbg !11971
  %183 = load i8, i8* %182, align 1, !dbg !11971
  %184 = zext i8 %183 to i32, !dbg !11971
  %185 = shl nuw i32 %184, 24, !dbg !11971
  %186 = getelementptr inbounds i8, i8* %1, i32 41, !dbg !11971
  %187 = load i8, i8* %186, align 1, !dbg !11971
  %188 = zext i8 %187 to i32, !dbg !11971
  %189 = shl nuw nsw i32 %188, 16, !dbg !11971
  %190 = or i32 %189, %185, !dbg !11971
  %191 = getelementptr inbounds i8, i8* %1, i32 42, !dbg !11971
  %192 = load i8, i8* %191, align 1, !dbg !11971
  %193 = zext i8 %192 to i32, !dbg !11971
  %194 = shl nuw nsw i32 %193, 8, !dbg !11971
  %195 = or i32 %190, %194, !dbg !11971
  %196 = getelementptr inbounds i8, i8* %1, i32 43, !dbg !11971
  %197 = load i8, i8* %196, align 1, !dbg !11971
  %198 = zext i8 %197 to i32, !dbg !11971
  %199 = or i32 %195, %198, !dbg !11971
  call void @llvm.dbg.value(metadata i32 %199, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 32)), !dbg !11950
  %200 = getelementptr inbounds i8, i8* %1, i32 44, !dbg !11973
  %201 = load i8, i8* %200, align 1, !dbg !11973
  %202 = zext i8 %201 to i32, !dbg !11973
  %203 = shl nuw i32 %202, 24, !dbg !11973
  %204 = getelementptr inbounds i8, i8* %1, i32 45, !dbg !11973
  %205 = load i8, i8* %204, align 1, !dbg !11973
  %206 = zext i8 %205 to i32, !dbg !11973
  %207 = shl nuw nsw i32 %206, 16, !dbg !11973
  %208 = or i32 %207, %203, !dbg !11973
  %209 = getelementptr inbounds i8, i8* %1, i32 46, !dbg !11973
  %210 = load i8, i8* %209, align 1, !dbg !11973
  %211 = zext i8 %210 to i32, !dbg !11973
  %212 = shl nuw nsw i32 %211, 8, !dbg !11973
  %213 = or i32 %208, %212, !dbg !11973
  %214 = getelementptr inbounds i8, i8* %1, i32 47, !dbg !11973
  %215 = load i8, i8* %214, align 1, !dbg !11973
  %216 = zext i8 %215 to i32, !dbg !11973
  %217 = or i32 %213, %216, !dbg !11973
  call void @llvm.dbg.value(metadata i32 %217, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 352, 32)), !dbg !11950
  %218 = getelementptr inbounds i8, i8* %1, i32 48, !dbg !11975
  %219 = load i8, i8* %218, align 1, !dbg !11975
  %220 = zext i8 %219 to i32, !dbg !11975
  %221 = shl nuw i32 %220, 24, !dbg !11975
  %222 = getelementptr inbounds i8, i8* %1, i32 49, !dbg !11975
  %223 = load i8, i8* %222, align 1, !dbg !11975
  %224 = zext i8 %223 to i32, !dbg !11975
  %225 = shl nuw nsw i32 %224, 16, !dbg !11975
  %226 = or i32 %225, %221, !dbg !11975
  %227 = getelementptr inbounds i8, i8* %1, i32 50, !dbg !11975
  %228 = load i8, i8* %227, align 1, !dbg !11975
  %229 = zext i8 %228 to i32, !dbg !11975
  %230 = shl nuw nsw i32 %229, 8, !dbg !11975
  %231 = or i32 %226, %230, !dbg !11975
  %232 = getelementptr inbounds i8, i8* %1, i32 51, !dbg !11975
  %233 = load i8, i8* %232, align 1, !dbg !11975
  %234 = zext i8 %233 to i32, !dbg !11975
  %235 = or i32 %231, %234, !dbg !11975
  call void @llvm.dbg.value(metadata i32 %235, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 384, 32)), !dbg !11950
  %236 = getelementptr inbounds i8, i8* %1, i32 52, !dbg !11977
  %237 = load i8, i8* %236, align 1, !dbg !11977
  %238 = zext i8 %237 to i32, !dbg !11977
  %239 = shl nuw i32 %238, 24, !dbg !11977
  %240 = getelementptr inbounds i8, i8* %1, i32 53, !dbg !11977
  %241 = load i8, i8* %240, align 1, !dbg !11977
  %242 = zext i8 %241 to i32, !dbg !11977
  %243 = shl nuw nsw i32 %242, 16, !dbg !11977
  %244 = or i32 %243, %239, !dbg !11977
  %245 = getelementptr inbounds i8, i8* %1, i32 54, !dbg !11977
  %246 = load i8, i8* %245, align 1, !dbg !11977
  %247 = zext i8 %246 to i32, !dbg !11977
  %248 = shl nuw nsw i32 %247, 8, !dbg !11977
  %249 = or i32 %244, %248, !dbg !11977
  %250 = getelementptr inbounds i8, i8* %1, i32 55, !dbg !11977
  %251 = load i8, i8* %250, align 1, !dbg !11977
  %252 = zext i8 %251 to i32, !dbg !11977
  %253 = or i32 %249, %252, !dbg !11977
  call void @llvm.dbg.value(metadata i32 %253, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 416, 32)), !dbg !11950
  %254 = getelementptr inbounds i8, i8* %1, i32 56, !dbg !11979
  %255 = load i8, i8* %254, align 1, !dbg !11979
  %256 = zext i8 %255 to i32, !dbg !11979
  %257 = shl nuw i32 %256, 24, !dbg !11979
  %258 = getelementptr inbounds i8, i8* %1, i32 57, !dbg !11979
  %259 = load i8, i8* %258, align 1, !dbg !11979
  %260 = zext i8 %259 to i32, !dbg !11979
  %261 = shl nuw nsw i32 %260, 16, !dbg !11979
  %262 = or i32 %261, %257, !dbg !11979
  %263 = getelementptr inbounds i8, i8* %1, i32 58, !dbg !11979
  %264 = load i8, i8* %263, align 1, !dbg !11979
  %265 = zext i8 %264 to i32, !dbg !11979
  %266 = shl nuw nsw i32 %265, 8, !dbg !11979
  %267 = or i32 %262, %266, !dbg !11979
  %268 = getelementptr inbounds i8, i8* %1, i32 59, !dbg !11979
  %269 = load i8, i8* %268, align 1, !dbg !11979
  %270 = zext i8 %269 to i32, !dbg !11979
  %271 = or i32 %267, %270, !dbg !11979
  call void @llvm.dbg.value(metadata i32 %271, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 448, 32)), !dbg !11950
  %272 = getelementptr inbounds i8, i8* %1, i32 60, !dbg !11981
  %273 = load i8, i8* %272, align 1, !dbg !11981
  %274 = zext i8 %273 to i32, !dbg !11981
  %275 = shl nuw i32 %274, 24, !dbg !11981
  %276 = getelementptr inbounds i8, i8* %1, i32 61, !dbg !11981
  %277 = load i8, i8* %276, align 1, !dbg !11981
  %278 = zext i8 %277 to i32, !dbg !11981
  %279 = shl nuw nsw i32 %278, 16, !dbg !11981
  %280 = or i32 %279, %275, !dbg !11981
  %281 = getelementptr inbounds i8, i8* %1, i32 62, !dbg !11981
  %282 = load i8, i8* %281, align 1, !dbg !11981
  %283 = zext i8 %282 to i32, !dbg !11981
  %284 = shl nuw nsw i32 %283, 8, !dbg !11981
  %285 = or i32 %280, %284, !dbg !11981
  %286 = getelementptr inbounds i8, i8* %1, i32 63, !dbg !11981
  %287 = load i8, i8* %286, align 1, !dbg !11981
  %288 = zext i8 %287 to i32, !dbg !11981
  %289 = or i32 %285, %288, !dbg !11981
  call void @llvm.dbg.value(metadata i32 %289, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 480, 32)), !dbg !11950
  %290 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 0, !dbg !11983
  %291 = load i32, i32* %290, align 4, !dbg !11983
  call void @llvm.dbg.value(metadata i32 %291, metadata !11945, metadata !DIExpression()), !dbg !11950
  %292 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 1, !dbg !11984
  %293 = load i32, i32* %292, align 4, !dbg !11984
  call void @llvm.dbg.value(metadata i32 %293, metadata !11946, metadata !DIExpression()), !dbg !11950
  %294 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 2, !dbg !11985
  %295 = load i32, i32* %294, align 4, !dbg !11985
  call void @llvm.dbg.value(metadata i32 %295, metadata !11947, metadata !DIExpression()), !dbg !11950
  %296 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 3, !dbg !11986
  %297 = load i32, i32* %296, align 4, !dbg !11986
  call void @llvm.dbg.value(metadata i32 %297, metadata !11948, metadata !DIExpression()), !dbg !11950
  %298 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 4, !dbg !11987
  %299 = load i32, i32* %298, align 4, !dbg !11987
  call void @llvm.dbg.value(metadata i32 %299, metadata !11949, metadata !DIExpression()), !dbg !11950
  %300 = tail call i32 @llvm.fshl.i32(i32 %291, i32 %291, i32 5), !dbg !11988
  %301 = xor i32 %297, %295, !dbg !11988
  %302 = and i32 %301, %293, !dbg !11988
  %303 = xor i32 %302, %297, !dbg !11988
  %304 = add i32 %19, 1518500249, !dbg !11988
  %305 = add i32 %304, %300, !dbg !11988
  %306 = add i32 %305, %299, !dbg !11988
  %307 = add i32 %306, %303, !dbg !11988
  call void @llvm.dbg.value(metadata i32 %307, metadata !11949, metadata !DIExpression()), !dbg !11950
  %308 = tail call i32 @llvm.fshl.i32(i32 %293, i32 %293, i32 30), !dbg !11988
  call void @llvm.dbg.value(metadata i32 %308, metadata !11946, metadata !DIExpression()), !dbg !11950
  %309 = tail call i32 @llvm.fshl.i32(i32 %307, i32 %307, i32 5), !dbg !11990
  %310 = xor i32 %308, %295, !dbg !11990
  %311 = and i32 %310, %291, !dbg !11990
  %312 = xor i32 %311, %295, !dbg !11990
  %313 = add i32 %37, 1518500249, !dbg !11990
  %314 = add i32 %313, %297, !dbg !11990
  %315 = add i32 %314, %312, !dbg !11990
  %316 = add i32 %315, %309, !dbg !11990
  call void @llvm.dbg.value(metadata i32 %316, metadata !11948, metadata !DIExpression()), !dbg !11950
  %317 = tail call i32 @llvm.fshl.i32(i32 %291, i32 %291, i32 30), !dbg !11990
  call void @llvm.dbg.value(metadata i32 %317, metadata !11945, metadata !DIExpression()), !dbg !11950
  %318 = tail call i32 @llvm.fshl.i32(i32 %316, i32 %316, i32 5), !dbg !11992
  %319 = xor i32 %308, %317, !dbg !11992
  %320 = and i32 %307, %319, !dbg !11992
  %321 = xor i32 %320, %308, !dbg !11992
  %322 = add i32 %55, 1518500249, !dbg !11992
  %323 = add i32 %322, %295, !dbg !11992
  %324 = add i32 %323, %321, !dbg !11992
  %325 = add i32 %324, %318, !dbg !11992
  call void @llvm.dbg.value(metadata i32 %325, metadata !11947, metadata !DIExpression()), !dbg !11950
  %326 = tail call i32 @llvm.fshl.i32(i32 %307, i32 %307, i32 30), !dbg !11992
  call void @llvm.dbg.value(metadata i32 %326, metadata !11949, metadata !DIExpression()), !dbg !11950
  %327 = tail call i32 @llvm.fshl.i32(i32 %325, i32 %325, i32 5), !dbg !11994
  %328 = xor i32 %326, %317, !dbg !11994
  %329 = and i32 %316, %328, !dbg !11994
  %330 = xor i32 %329, %317, !dbg !11994
  %331 = add i32 %73, 1518500249, !dbg !11994
  %332 = add i32 %331, %308, !dbg !11994
  %333 = add i32 %332, %330, !dbg !11994
  %334 = add i32 %333, %327, !dbg !11994
  call void @llvm.dbg.value(metadata i32 %334, metadata !11946, metadata !DIExpression()), !dbg !11950
  %335 = tail call i32 @llvm.fshl.i32(i32 %316, i32 %316, i32 30), !dbg !11994
  call void @llvm.dbg.value(metadata i32 %335, metadata !11948, metadata !DIExpression()), !dbg !11950
  %336 = tail call i32 @llvm.fshl.i32(i32 %334, i32 %334, i32 5), !dbg !11996
  %337 = xor i32 %335, %326, !dbg !11996
  %338 = and i32 %325, %337, !dbg !11996
  %339 = xor i32 %338, %326, !dbg !11996
  %340 = add i32 %91, 1518500249, !dbg !11996
  %341 = add i32 %340, %317, !dbg !11996
  %342 = add i32 %341, %339, !dbg !11996
  %343 = add i32 %342, %336, !dbg !11996
  call void @llvm.dbg.value(metadata i32 %343, metadata !11945, metadata !DIExpression()), !dbg !11950
  %344 = tail call i32 @llvm.fshl.i32(i32 %325, i32 %325, i32 30), !dbg !11996
  call void @llvm.dbg.value(metadata i32 %344, metadata !11947, metadata !DIExpression()), !dbg !11950
  %345 = tail call i32 @llvm.fshl.i32(i32 %343, i32 %343, i32 5), !dbg !11998
  %346 = xor i32 %344, %335, !dbg !11998
  %347 = and i32 %334, %346, !dbg !11998
  %348 = xor i32 %347, %335, !dbg !11998
  %349 = add i32 %109, 1518500249, !dbg !11998
  %350 = add i32 %349, %326, !dbg !11998
  %351 = add i32 %350, %348, !dbg !11998
  %352 = add i32 %351, %345, !dbg !11998
  call void @llvm.dbg.value(metadata i32 %352, metadata !11949, metadata !DIExpression()), !dbg !11950
  %353 = tail call i32 @llvm.fshl.i32(i32 %334, i32 %334, i32 30), !dbg !11998
  call void @llvm.dbg.value(metadata i32 %353, metadata !11946, metadata !DIExpression()), !dbg !11950
  %354 = tail call i32 @llvm.fshl.i32(i32 %352, i32 %352, i32 5), !dbg !12000
  %355 = xor i32 %353, %344, !dbg !12000
  %356 = and i32 %343, %355, !dbg !12000
  %357 = xor i32 %356, %344, !dbg !12000
  %358 = add i32 %127, 1518500249, !dbg !12000
  %359 = add i32 %358, %335, !dbg !12000
  %360 = add i32 %359, %357, !dbg !12000
  %361 = add i32 %360, %354, !dbg !12000
  call void @llvm.dbg.value(metadata i32 %361, metadata !11948, metadata !DIExpression()), !dbg !11950
  %362 = tail call i32 @llvm.fshl.i32(i32 %343, i32 %343, i32 30), !dbg !12000
  call void @llvm.dbg.value(metadata i32 %362, metadata !11945, metadata !DIExpression()), !dbg !11950
  %363 = tail call i32 @llvm.fshl.i32(i32 %361, i32 %361, i32 5), !dbg !12002
  %364 = xor i32 %362, %353, !dbg !12002
  %365 = and i32 %352, %364, !dbg !12002
  %366 = xor i32 %365, %353, !dbg !12002
  %367 = add i32 %145, 1518500249, !dbg !12002
  %368 = add i32 %367, %344, !dbg !12002
  %369 = add i32 %368, %366, !dbg !12002
  %370 = add i32 %369, %363, !dbg !12002
  call void @llvm.dbg.value(metadata i32 %370, metadata !11947, metadata !DIExpression()), !dbg !11950
  %371 = tail call i32 @llvm.fshl.i32(i32 %352, i32 %352, i32 30), !dbg !12002
  call void @llvm.dbg.value(metadata i32 %371, metadata !11949, metadata !DIExpression()), !dbg !11950
  %372 = tail call i32 @llvm.fshl.i32(i32 %370, i32 %370, i32 5), !dbg !12004
  %373 = xor i32 %371, %362, !dbg !12004
  %374 = and i32 %361, %373, !dbg !12004
  %375 = xor i32 %374, %362, !dbg !12004
  %376 = add i32 %163, 1518500249, !dbg !12004
  %377 = add i32 %376, %353, !dbg !12004
  %378 = add i32 %377, %375, !dbg !12004
  %379 = add i32 %378, %372, !dbg !12004
  call void @llvm.dbg.value(metadata i32 %379, metadata !11946, metadata !DIExpression()), !dbg !11950
  %380 = tail call i32 @llvm.fshl.i32(i32 %361, i32 %361, i32 30), !dbg !12004
  call void @llvm.dbg.value(metadata i32 %380, metadata !11948, metadata !DIExpression()), !dbg !11950
  %381 = tail call i32 @llvm.fshl.i32(i32 %379, i32 %379, i32 5), !dbg !12006
  %382 = xor i32 %380, %371, !dbg !12006
  %383 = and i32 %370, %382, !dbg !12006
  %384 = xor i32 %383, %371, !dbg !12006
  %385 = add i32 %181, 1518500249, !dbg !12006
  %386 = add i32 %385, %362, !dbg !12006
  %387 = add i32 %386, %384, !dbg !12006
  %388 = add i32 %387, %381, !dbg !12006
  call void @llvm.dbg.value(metadata i32 %388, metadata !11945, metadata !DIExpression()), !dbg !11950
  %389 = tail call i32 @llvm.fshl.i32(i32 %370, i32 %370, i32 30), !dbg !12006
  call void @llvm.dbg.value(metadata i32 %389, metadata !11947, metadata !DIExpression()), !dbg !11950
  %390 = tail call i32 @llvm.fshl.i32(i32 %388, i32 %388, i32 5), !dbg !12008
  %391 = xor i32 %389, %380, !dbg !12008
  %392 = and i32 %379, %391, !dbg !12008
  %393 = xor i32 %392, %380, !dbg !12008
  %394 = add i32 %199, 1518500249, !dbg !12008
  %395 = add i32 %394, %371, !dbg !12008
  %396 = add i32 %395, %393, !dbg !12008
  %397 = add i32 %396, %390, !dbg !12008
  call void @llvm.dbg.value(metadata i32 %397, metadata !11949, metadata !DIExpression()), !dbg !11950
  %398 = tail call i32 @llvm.fshl.i32(i32 %379, i32 %379, i32 30), !dbg !12008
  call void @llvm.dbg.value(metadata i32 %398, metadata !11946, metadata !DIExpression()), !dbg !11950
  %399 = tail call i32 @llvm.fshl.i32(i32 %397, i32 %397, i32 5), !dbg !12010
  %400 = xor i32 %398, %389, !dbg !12010
  %401 = and i32 %388, %400, !dbg !12010
  %402 = xor i32 %401, %389, !dbg !12010
  %403 = add i32 %217, 1518500249, !dbg !12010
  %404 = add i32 %403, %380, !dbg !12010
  %405 = add i32 %404, %402, !dbg !12010
  %406 = add i32 %405, %399, !dbg !12010
  call void @llvm.dbg.value(metadata i32 %406, metadata !11948, metadata !DIExpression()), !dbg !11950
  %407 = tail call i32 @llvm.fshl.i32(i32 %388, i32 %388, i32 30), !dbg !12010
  call void @llvm.dbg.value(metadata i32 %407, metadata !11945, metadata !DIExpression()), !dbg !11950
  %408 = tail call i32 @llvm.fshl.i32(i32 %406, i32 %406, i32 5), !dbg !12012
  %409 = xor i32 %407, %398, !dbg !12012
  %410 = and i32 %397, %409, !dbg !12012
  %411 = xor i32 %410, %398, !dbg !12012
  %412 = add i32 %235, 1518500249, !dbg !12012
  %413 = add i32 %412, %389, !dbg !12012
  %414 = add i32 %413, %411, !dbg !12012
  %415 = add i32 %414, %408, !dbg !12012
  call void @llvm.dbg.value(metadata i32 %415, metadata !11947, metadata !DIExpression()), !dbg !11950
  %416 = tail call i32 @llvm.fshl.i32(i32 %397, i32 %397, i32 30), !dbg !12012
  call void @llvm.dbg.value(metadata i32 %416, metadata !11949, metadata !DIExpression()), !dbg !11950
  %417 = tail call i32 @llvm.fshl.i32(i32 %415, i32 %415, i32 5), !dbg !12014
  %418 = xor i32 %416, %407, !dbg !12014
  %419 = and i32 %406, %418, !dbg !12014
  %420 = xor i32 %419, %407, !dbg !12014
  %421 = add i32 %253, 1518500249, !dbg !12014
  %422 = add i32 %421, %398, !dbg !12014
  %423 = add i32 %422, %420, !dbg !12014
  %424 = add i32 %423, %417, !dbg !12014
  call void @llvm.dbg.value(metadata i32 %424, metadata !11946, metadata !DIExpression()), !dbg !11950
  %425 = tail call i32 @llvm.fshl.i32(i32 %406, i32 %406, i32 30), !dbg !12014
  call void @llvm.dbg.value(metadata i32 %425, metadata !11948, metadata !DIExpression()), !dbg !11950
  %426 = tail call i32 @llvm.fshl.i32(i32 %424, i32 %424, i32 5), !dbg !12016
  %427 = xor i32 %425, %416, !dbg !12016
  %428 = and i32 %415, %427, !dbg !12016
  %429 = xor i32 %428, %416, !dbg !12016
  %430 = add i32 %271, 1518500249, !dbg !12016
  %431 = add i32 %430, %407, !dbg !12016
  %432 = add i32 %431, %429, !dbg !12016
  %433 = add i32 %432, %426, !dbg !12016
  call void @llvm.dbg.value(metadata i32 %433, metadata !11945, metadata !DIExpression()), !dbg !11950
  %434 = tail call i32 @llvm.fshl.i32(i32 %415, i32 %415, i32 30), !dbg !12016
  call void @llvm.dbg.value(metadata i32 %434, metadata !11947, metadata !DIExpression()), !dbg !11950
  %435 = tail call i32 @llvm.fshl.i32(i32 %433, i32 %433, i32 5), !dbg !12018
  %436 = xor i32 %434, %425, !dbg !12018
  %437 = and i32 %424, %436, !dbg !12018
  %438 = xor i32 %437, %425, !dbg !12018
  %439 = add i32 %289, 1518500249, !dbg !12018
  %440 = add i32 %439, %416, !dbg !12018
  %441 = add i32 %440, %438, !dbg !12018
  %442 = add i32 %441, %435, !dbg !12018
  call void @llvm.dbg.value(metadata i32 %442, metadata !11949, metadata !DIExpression()), !dbg !11950
  %443 = tail call i32 @llvm.fshl.i32(i32 %424, i32 %424, i32 30), !dbg !12018
  call void @llvm.dbg.value(metadata i32 %443, metadata !11946, metadata !DIExpression()), !dbg !11950
  %444 = tail call i32 @llvm.fshl.i32(i32 %442, i32 %442, i32 5), !dbg !12020
  %445 = xor i32 %443, %434, !dbg !12020
  %446 = and i32 %433, %445, !dbg !12020
  %447 = xor i32 %446, %434, !dbg !12020
  %448 = xor i32 %55, %19, !dbg !12020
  %449 = xor i32 %448, %163, !dbg !12020
  %450 = xor i32 %449, %253, !dbg !12020
  call void @llvm.dbg.value(metadata i32 %450, metadata !11942, metadata !DIExpression()), !dbg !11950
  %451 = tail call i32 @llvm.fshl.i32(i32 %450, i32 %450, i32 1), !dbg !12020
  call void @llvm.dbg.value(metadata i32 %451, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !11950
  %452 = add i32 %451, 1518500249, !dbg !12020
  %453 = add i32 %452, %425, !dbg !12020
  %454 = add i32 %453, %447, !dbg !12020
  %455 = add i32 %454, %444, !dbg !12020
  call void @llvm.dbg.value(metadata i32 %455, metadata !11948, metadata !DIExpression()), !dbg !11950
  %456 = tail call i32 @llvm.fshl.i32(i32 %433, i32 %433, i32 30), !dbg !12020
  call void @llvm.dbg.value(metadata i32 %456, metadata !11945, metadata !DIExpression()), !dbg !11950
  %457 = tail call i32 @llvm.fshl.i32(i32 %455, i32 %455, i32 5), !dbg !12022
  %458 = xor i32 %456, %443, !dbg !12022
  %459 = and i32 %442, %458, !dbg !12022
  %460 = xor i32 %459, %443, !dbg !12022
  %461 = xor i32 %73, %37, !dbg !12022
  %462 = xor i32 %461, %181, !dbg !12022
  %463 = xor i32 %462, %271, !dbg !12022
  call void @llvm.dbg.value(metadata i32 %463, metadata !11942, metadata !DIExpression()), !dbg !11950
  %464 = tail call i32 @llvm.fshl.i32(i32 %463, i32 %463, i32 1), !dbg !12022
  call void @llvm.dbg.value(metadata i32 %464, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !11950
  %465 = add i32 %464, 1518500249, !dbg !12022
  %466 = add i32 %465, %434, !dbg !12022
  %467 = add i32 %466, %460, !dbg !12022
  %468 = add i32 %467, %457, !dbg !12022
  call void @llvm.dbg.value(metadata i32 %468, metadata !11947, metadata !DIExpression()), !dbg !11950
  %469 = tail call i32 @llvm.fshl.i32(i32 %442, i32 %442, i32 30), !dbg !12022
  call void @llvm.dbg.value(metadata i32 %469, metadata !11949, metadata !DIExpression()), !dbg !11950
  %470 = tail call i32 @llvm.fshl.i32(i32 %468, i32 %468, i32 5), !dbg !12024
  %471 = xor i32 %469, %456, !dbg !12024
  %472 = and i32 %455, %471, !dbg !12024
  %473 = xor i32 %472, %456, !dbg !12024
  %474 = xor i32 %91, %55, !dbg !12024
  %475 = xor i32 %474, %199, !dbg !12024
  %476 = xor i32 %475, %289, !dbg !12024
  call void @llvm.dbg.value(metadata i32 %476, metadata !11942, metadata !DIExpression()), !dbg !11950
  %477 = tail call i32 @llvm.fshl.i32(i32 %476, i32 %476, i32 1), !dbg !12024
  call void @llvm.dbg.value(metadata i32 %477, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !11950
  %478 = add i32 %477, 1518500249, !dbg !12024
  %479 = add i32 %478, %443, !dbg !12024
  %480 = add i32 %479, %473, !dbg !12024
  %481 = add i32 %480, %470, !dbg !12024
  call void @llvm.dbg.value(metadata i32 %481, metadata !11946, metadata !DIExpression()), !dbg !11950
  %482 = tail call i32 @llvm.fshl.i32(i32 %455, i32 %455, i32 30), !dbg !12024
  call void @llvm.dbg.value(metadata i32 %482, metadata !11948, metadata !DIExpression()), !dbg !11950
  %483 = tail call i32 @llvm.fshl.i32(i32 %481, i32 %481, i32 5), !dbg !12026
  %484 = xor i32 %482, %469, !dbg !12026
  %485 = and i32 %468, %484, !dbg !12026
  %486 = xor i32 %485, %469, !dbg !12026
  %487 = xor i32 %109, %73, !dbg !12026
  %488 = xor i32 %487, %217, !dbg !12026
  %489 = xor i32 %488, %451, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %489, metadata !11942, metadata !DIExpression()), !dbg !11950
  %490 = tail call i32 @llvm.fshl.i32(i32 %489, i32 %489, i32 1), !dbg !12026
  call void @llvm.dbg.value(metadata i32 %490, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !11950
  %491 = add i32 %490, 1518500249, !dbg !12026
  %492 = add i32 %491, %456, !dbg !12026
  %493 = add i32 %492, %486, !dbg !12026
  %494 = add i32 %493, %483, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %494, metadata !11945, metadata !DIExpression()), !dbg !11950
  %495 = tail call i32 @llvm.fshl.i32(i32 %468, i32 %468, i32 30), !dbg !12026
  call void @llvm.dbg.value(metadata i32 %495, metadata !11947, metadata !DIExpression()), !dbg !11950
  %496 = tail call i32 @llvm.fshl.i32(i32 %494, i32 %494, i32 5), !dbg !12028
  %497 = xor i32 %495, %482, !dbg !12028
  %498 = xor i32 %497, %481, !dbg !12028
  %499 = xor i32 %127, %91, !dbg !12028
  %500 = xor i32 %499, %235, !dbg !12028
  %501 = xor i32 %500, %464, !dbg !12028
  call void @llvm.dbg.value(metadata i32 %501, metadata !11942, metadata !DIExpression()), !dbg !11950
  %502 = tail call i32 @llvm.fshl.i32(i32 %501, i32 %501, i32 1), !dbg !12028
  call void @llvm.dbg.value(metadata i32 %502, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 32)), !dbg !11950
  %503 = add i32 %502, 1859775393, !dbg !12028
  %504 = add i32 %503, %469, !dbg !12028
  %505 = add i32 %504, %498, !dbg !12028
  %506 = add i32 %505, %496, !dbg !12028
  call void @llvm.dbg.value(metadata i32 %506, metadata !11949, metadata !DIExpression()), !dbg !11950
  %507 = tail call i32 @llvm.fshl.i32(i32 %481, i32 %481, i32 30), !dbg !12028
  call void @llvm.dbg.value(metadata i32 %507, metadata !11946, metadata !DIExpression()), !dbg !11950
  %508 = tail call i32 @llvm.fshl.i32(i32 %506, i32 %506, i32 5), !dbg !12030
  %509 = xor i32 %507, %495, !dbg !12030
  %510 = xor i32 %509, %494, !dbg !12030
  %511 = xor i32 %145, %109, !dbg !12030
  %512 = xor i32 %511, %253, !dbg !12030
  %513 = xor i32 %512, %477, !dbg !12030
  call void @llvm.dbg.value(metadata i32 %513, metadata !11942, metadata !DIExpression()), !dbg !11950
  %514 = tail call i32 @llvm.fshl.i32(i32 %513, i32 %513, i32 1), !dbg !12030
  call void @llvm.dbg.value(metadata i32 %514, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 160, 32)), !dbg !11950
  %515 = add i32 %514, 1859775393, !dbg !12030
  %516 = add i32 %515, %482, !dbg !12030
  %517 = add i32 %516, %510, !dbg !12030
  %518 = add i32 %517, %508, !dbg !12030
  call void @llvm.dbg.value(metadata i32 %518, metadata !11948, metadata !DIExpression()), !dbg !11950
  %519 = tail call i32 @llvm.fshl.i32(i32 %494, i32 %494, i32 30), !dbg !12030
  call void @llvm.dbg.value(metadata i32 %519, metadata !11945, metadata !DIExpression()), !dbg !11950
  %520 = tail call i32 @llvm.fshl.i32(i32 %518, i32 %518, i32 5), !dbg !12032
  %521 = xor i32 %519, %507, !dbg !12032
  %522 = xor i32 %521, %506, !dbg !12032
  %523 = xor i32 %163, %127, !dbg !12032
  %524 = xor i32 %523, %271, !dbg !12032
  %525 = xor i32 %524, %490, !dbg !12032
  call void @llvm.dbg.value(metadata i32 %525, metadata !11942, metadata !DIExpression()), !dbg !11950
  %526 = tail call i32 @llvm.fshl.i32(i32 %525, i32 %525, i32 1), !dbg !12032
  call void @llvm.dbg.value(metadata i32 %526, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 192, 32)), !dbg !11950
  %527 = add i32 %526, 1859775393, !dbg !12032
  %528 = add i32 %527, %495, !dbg !12032
  %529 = add i32 %528, %522, !dbg !12032
  %530 = add i32 %529, %520, !dbg !12032
  call void @llvm.dbg.value(metadata i32 %530, metadata !11947, metadata !DIExpression()), !dbg !11950
  %531 = tail call i32 @llvm.fshl.i32(i32 %506, i32 %506, i32 30), !dbg !12032
  call void @llvm.dbg.value(metadata i32 %531, metadata !11949, metadata !DIExpression()), !dbg !11950
  %532 = tail call i32 @llvm.fshl.i32(i32 %530, i32 %530, i32 5), !dbg !12034
  %533 = xor i32 %531, %519, !dbg !12034
  %534 = xor i32 %533, %518, !dbg !12034
  %535 = xor i32 %181, %145, !dbg !12034
  %536 = xor i32 %535, %289, !dbg !12034
  %537 = xor i32 %536, %502, !dbg !12034
  call void @llvm.dbg.value(metadata i32 %537, metadata !11942, metadata !DIExpression()), !dbg !11950
  %538 = tail call i32 @llvm.fshl.i32(i32 %537, i32 %537, i32 1), !dbg !12034
  call void @llvm.dbg.value(metadata i32 %538, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 224, 32)), !dbg !11950
  %539 = add i32 %538, 1859775393, !dbg !12034
  %540 = add i32 %539, %507, !dbg !12034
  %541 = add i32 %540, %534, !dbg !12034
  %542 = add i32 %541, %532, !dbg !12034
  call void @llvm.dbg.value(metadata i32 %542, metadata !11946, metadata !DIExpression()), !dbg !11950
  %543 = tail call i32 @llvm.fshl.i32(i32 %518, i32 %518, i32 30), !dbg !12034
  call void @llvm.dbg.value(metadata i32 %543, metadata !11948, metadata !DIExpression()), !dbg !11950
  %544 = tail call i32 @llvm.fshl.i32(i32 %542, i32 %542, i32 5), !dbg !12036
  %545 = xor i32 %543, %531, !dbg !12036
  %546 = xor i32 %545, %530, !dbg !12036
  %547 = xor i32 %199, %163, !dbg !12036
  %548 = xor i32 %547, %451, !dbg !12036
  %549 = xor i32 %548, %514, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %549, metadata !11942, metadata !DIExpression()), !dbg !11950
  %550 = tail call i32 @llvm.fshl.i32(i32 %549, i32 %549, i32 1), !dbg !12036
  call void @llvm.dbg.value(metadata i32 %550, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 32)), !dbg !11950
  %551 = add i32 %550, 1859775393, !dbg !12036
  %552 = add i32 %551, %519, !dbg !12036
  %553 = add i32 %552, %546, !dbg !12036
  %554 = add i32 %553, %544, !dbg !12036
  call void @llvm.dbg.value(metadata i32 %554, metadata !11945, metadata !DIExpression()), !dbg !11950
  %555 = tail call i32 @llvm.fshl.i32(i32 %530, i32 %530, i32 30), !dbg !12036
  call void @llvm.dbg.value(metadata i32 %555, metadata !11947, metadata !DIExpression()), !dbg !11950
  %556 = tail call i32 @llvm.fshl.i32(i32 %554, i32 %554, i32 5), !dbg !12038
  %557 = xor i32 %555, %543, !dbg !12038
  %558 = xor i32 %557, %542, !dbg !12038
  %559 = xor i32 %217, %181, !dbg !12038
  %560 = xor i32 %559, %464, !dbg !12038
  %561 = xor i32 %560, %526, !dbg !12038
  call void @llvm.dbg.value(metadata i32 %561, metadata !11942, metadata !DIExpression()), !dbg !11950
  %562 = tail call i32 @llvm.fshl.i32(i32 %561, i32 %561, i32 1), !dbg !12038
  call void @llvm.dbg.value(metadata i32 %562, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 288, 32)), !dbg !11950
  %563 = add i32 %562, 1859775393, !dbg !12038
  %564 = add i32 %563, %531, !dbg !12038
  %565 = add i32 %564, %558, !dbg !12038
  %566 = add i32 %565, %556, !dbg !12038
  call void @llvm.dbg.value(metadata i32 %566, metadata !11949, metadata !DIExpression()), !dbg !11950
  %567 = tail call i32 @llvm.fshl.i32(i32 %542, i32 %542, i32 30), !dbg !12038
  call void @llvm.dbg.value(metadata i32 %567, metadata !11946, metadata !DIExpression()), !dbg !11950
  %568 = tail call i32 @llvm.fshl.i32(i32 %566, i32 %566, i32 5), !dbg !12040
  %569 = xor i32 %567, %555, !dbg !12040
  %570 = xor i32 %569, %554, !dbg !12040
  %571 = xor i32 %235, %199, !dbg !12040
  %572 = xor i32 %571, %477, !dbg !12040
  %573 = xor i32 %572, %538, !dbg !12040
  call void @llvm.dbg.value(metadata i32 %573, metadata !11942, metadata !DIExpression()), !dbg !11950
  %574 = tail call i32 @llvm.fshl.i32(i32 %573, i32 %573, i32 1), !dbg !12040
  call void @llvm.dbg.value(metadata i32 %574, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 32)), !dbg !11950
  %575 = add i32 %574, 1859775393, !dbg !12040
  %576 = add i32 %575, %543, !dbg !12040
  %577 = add i32 %576, %570, !dbg !12040
  %578 = add i32 %577, %568, !dbg !12040
  call void @llvm.dbg.value(metadata i32 %578, metadata !11948, metadata !DIExpression()), !dbg !11950
  %579 = tail call i32 @llvm.fshl.i32(i32 %554, i32 %554, i32 30), !dbg !12040
  call void @llvm.dbg.value(metadata i32 %579, metadata !11945, metadata !DIExpression()), !dbg !11950
  %580 = tail call i32 @llvm.fshl.i32(i32 %578, i32 %578, i32 5), !dbg !12042
  %581 = xor i32 %579, %567, !dbg !12042
  %582 = xor i32 %581, %566, !dbg !12042
  %583 = xor i32 %253, %217, !dbg !12042
  %584 = xor i32 %583, %490, !dbg !12042
  %585 = xor i32 %584, %550, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %585, metadata !11942, metadata !DIExpression()), !dbg !11950
  %586 = tail call i32 @llvm.fshl.i32(i32 %585, i32 %585, i32 1), !dbg !12042
  call void @llvm.dbg.value(metadata i32 %586, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 352, 32)), !dbg !11950
  %587 = add i32 %586, 1859775393, !dbg !12042
  %588 = add i32 %587, %555, !dbg !12042
  %589 = add i32 %588, %582, !dbg !12042
  %590 = add i32 %589, %580, !dbg !12042
  call void @llvm.dbg.value(metadata i32 %590, metadata !11947, metadata !DIExpression()), !dbg !11950
  %591 = tail call i32 @llvm.fshl.i32(i32 %566, i32 %566, i32 30), !dbg !12042
  call void @llvm.dbg.value(metadata i32 %591, metadata !11949, metadata !DIExpression()), !dbg !11950
  %592 = tail call i32 @llvm.fshl.i32(i32 %590, i32 %590, i32 5), !dbg !12044
  %593 = xor i32 %591, %579, !dbg !12044
  %594 = xor i32 %593, %578, !dbg !12044
  %595 = xor i32 %271, %235, !dbg !12044
  %596 = xor i32 %595, %502, !dbg !12044
  %597 = xor i32 %596, %562, !dbg !12044
  call void @llvm.dbg.value(metadata i32 %597, metadata !11942, metadata !DIExpression()), !dbg !11950
  %598 = tail call i32 @llvm.fshl.i32(i32 %597, i32 %597, i32 1), !dbg !12044
  call void @llvm.dbg.value(metadata i32 %598, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 384, 32)), !dbg !11950
  %599 = add i32 %598, 1859775393, !dbg !12044
  %600 = add i32 %599, %567, !dbg !12044
  %601 = add i32 %600, %594, !dbg !12044
  %602 = add i32 %601, %592, !dbg !12044
  call void @llvm.dbg.value(metadata i32 %602, metadata !11946, metadata !DIExpression()), !dbg !11950
  %603 = tail call i32 @llvm.fshl.i32(i32 %578, i32 %578, i32 30), !dbg !12044
  call void @llvm.dbg.value(metadata i32 %603, metadata !11948, metadata !DIExpression()), !dbg !11950
  %604 = tail call i32 @llvm.fshl.i32(i32 %602, i32 %602, i32 5), !dbg !12046
  %605 = xor i32 %603, %591, !dbg !12046
  %606 = xor i32 %605, %590, !dbg !12046
  %607 = xor i32 %289, %253, !dbg !12046
  %608 = xor i32 %607, %514, !dbg !12046
  %609 = xor i32 %608, %574, !dbg !12046
  call void @llvm.dbg.value(metadata i32 %609, metadata !11942, metadata !DIExpression()), !dbg !11950
  %610 = tail call i32 @llvm.fshl.i32(i32 %609, i32 %609, i32 1), !dbg !12046
  call void @llvm.dbg.value(metadata i32 %610, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 416, 32)), !dbg !11950
  %611 = add i32 %610, 1859775393, !dbg !12046
  %612 = add i32 %611, %579, !dbg !12046
  %613 = add i32 %612, %606, !dbg !12046
  %614 = add i32 %613, %604, !dbg !12046
  call void @llvm.dbg.value(metadata i32 %614, metadata !11945, metadata !DIExpression()), !dbg !11950
  %615 = tail call i32 @llvm.fshl.i32(i32 %590, i32 %590, i32 30), !dbg !12046
  call void @llvm.dbg.value(metadata i32 %615, metadata !11947, metadata !DIExpression()), !dbg !11950
  %616 = tail call i32 @llvm.fshl.i32(i32 %614, i32 %614, i32 5), !dbg !12048
  %617 = xor i32 %615, %603, !dbg !12048
  %618 = xor i32 %617, %602, !dbg !12048
  %619 = xor i32 %271, %451, !dbg !12048
  %620 = xor i32 %619, %526, !dbg !12048
  %621 = xor i32 %620, %586, !dbg !12048
  call void @llvm.dbg.value(metadata i32 %621, metadata !11942, metadata !DIExpression()), !dbg !11950
  %622 = tail call i32 @llvm.fshl.i32(i32 %621, i32 %621, i32 1), !dbg !12048
  call void @llvm.dbg.value(metadata i32 %622, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 448, 32)), !dbg !11950
  %623 = add i32 %622, 1859775393, !dbg !12048
  %624 = add i32 %623, %591, !dbg !12048
  %625 = add i32 %624, %618, !dbg !12048
  %626 = add i32 %625, %616, !dbg !12048
  call void @llvm.dbg.value(metadata i32 %626, metadata !11949, metadata !DIExpression()), !dbg !11950
  %627 = tail call i32 @llvm.fshl.i32(i32 %602, i32 %602, i32 30), !dbg !12048
  call void @llvm.dbg.value(metadata i32 %627, metadata !11946, metadata !DIExpression()), !dbg !11950
  %628 = tail call i32 @llvm.fshl.i32(i32 %626, i32 %626, i32 5), !dbg !12050
  %629 = xor i32 %627, %615, !dbg !12050
  %630 = xor i32 %629, %614, !dbg !12050
  %631 = xor i32 %289, %464, !dbg !12050
  %632 = xor i32 %631, %538, !dbg !12050
  %633 = xor i32 %632, %598, !dbg !12050
  call void @llvm.dbg.value(metadata i32 %633, metadata !11942, metadata !DIExpression()), !dbg !11950
  %634 = tail call i32 @llvm.fshl.i32(i32 %633, i32 %633, i32 1), !dbg !12050
  call void @llvm.dbg.value(metadata i32 %634, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 480, 32)), !dbg !11950
  %635 = add i32 %634, 1859775393, !dbg !12050
  %636 = add i32 %635, %603, !dbg !12050
  %637 = add i32 %636, %630, !dbg !12050
  %638 = add i32 %637, %628, !dbg !12050
  call void @llvm.dbg.value(metadata i32 %638, metadata !11948, metadata !DIExpression()), !dbg !11950
  %639 = tail call i32 @llvm.fshl.i32(i32 %614, i32 %614, i32 30), !dbg !12050
  call void @llvm.dbg.value(metadata i32 %639, metadata !11945, metadata !DIExpression()), !dbg !11950
  %640 = tail call i32 @llvm.fshl.i32(i32 %638, i32 %638, i32 5), !dbg !12052
  %641 = xor i32 %639, %627, !dbg !12052
  %642 = xor i32 %641, %626, !dbg !12052
  %643 = xor i32 %477, %451, !dbg !12052
  %644 = xor i32 %643, %550, !dbg !12052
  %645 = xor i32 %644, %610, !dbg !12052
  call void @llvm.dbg.value(metadata i32 %645, metadata !11942, metadata !DIExpression()), !dbg !11950
  %646 = tail call i32 @llvm.fshl.i32(i32 %645, i32 %645, i32 1), !dbg !12052
  call void @llvm.dbg.value(metadata i32 %646, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !11950
  %647 = add i32 %646, 1859775393, !dbg !12052
  %648 = add i32 %647, %615, !dbg !12052
  %649 = add i32 %648, %642, !dbg !12052
  %650 = add i32 %649, %640, !dbg !12052
  call void @llvm.dbg.value(metadata i32 %650, metadata !11947, metadata !DIExpression()), !dbg !11950
  %651 = tail call i32 @llvm.fshl.i32(i32 %626, i32 %626, i32 30), !dbg !12052
  call void @llvm.dbg.value(metadata i32 %651, metadata !11949, metadata !DIExpression()), !dbg !11950
  %652 = tail call i32 @llvm.fshl.i32(i32 %650, i32 %650, i32 5), !dbg !12054
  %653 = xor i32 %651, %639, !dbg !12054
  %654 = xor i32 %653, %638, !dbg !12054
  %655 = xor i32 %464, %490, !dbg !12054
  %656 = xor i32 %655, %562, !dbg !12054
  %657 = xor i32 %656, %622, !dbg !12054
  call void @llvm.dbg.value(metadata i32 %657, metadata !11942, metadata !DIExpression()), !dbg !11950
  %658 = tail call i32 @llvm.fshl.i32(i32 %657, i32 %657, i32 1), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %658, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !11950
  %659 = add i32 %658, 1859775393, !dbg !12054
  %660 = add i32 %659, %627, !dbg !12054
  %661 = add i32 %660, %654, !dbg !12054
  %662 = add i32 %661, %652, !dbg !12054
  call void @llvm.dbg.value(metadata i32 %662, metadata !11946, metadata !DIExpression()), !dbg !11950
  %663 = tail call i32 @llvm.fshl.i32(i32 %638, i32 %638, i32 30), !dbg !12054
  call void @llvm.dbg.value(metadata i32 %663, metadata !11948, metadata !DIExpression()), !dbg !11950
  %664 = tail call i32 @llvm.fshl.i32(i32 %662, i32 %662, i32 5), !dbg !12056
  %665 = xor i32 %663, %651, !dbg !12056
  %666 = xor i32 %665, %650, !dbg !12056
  %667 = xor i32 %477, %502, !dbg !12056
  %668 = xor i32 %667, %574, !dbg !12056
  %669 = xor i32 %668, %634, !dbg !12056
  call void @llvm.dbg.value(metadata i32 %669, metadata !11942, metadata !DIExpression()), !dbg !11950
  %670 = tail call i32 @llvm.fshl.i32(i32 %669, i32 %669, i32 1), !dbg !12056
  call void @llvm.dbg.value(metadata i32 %670, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !11950
  %671 = add i32 %670, 1859775393, !dbg !12056
  %672 = add i32 %671, %639, !dbg !12056
  %673 = add i32 %672, %666, !dbg !12056
  %674 = add i32 %673, %664, !dbg !12056
  call void @llvm.dbg.value(metadata i32 %674, metadata !11945, metadata !DIExpression()), !dbg !11950
  %675 = tail call i32 @llvm.fshl.i32(i32 %650, i32 %650, i32 30), !dbg !12056
  call void @llvm.dbg.value(metadata i32 %675, metadata !11947, metadata !DIExpression()), !dbg !11950
  %676 = tail call i32 @llvm.fshl.i32(i32 %674, i32 %674, i32 5), !dbg !12058
  %677 = xor i32 %675, %663, !dbg !12058
  %678 = xor i32 %677, %662, !dbg !12058
  %679 = xor i32 %514, %490, !dbg !12058
  %680 = xor i32 %679, %586, !dbg !12058
  %681 = xor i32 %680, %646, !dbg !12058
  call void @llvm.dbg.value(metadata i32 %681, metadata !11942, metadata !DIExpression()), !dbg !11950
  %682 = tail call i32 @llvm.fshl.i32(i32 %681, i32 %681, i32 1), !dbg !12058
  call void @llvm.dbg.value(metadata i32 %682, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !11950
  %683 = add i32 %682, 1859775393, !dbg !12058
  %684 = add i32 %683, %651, !dbg !12058
  %685 = add i32 %684, %678, !dbg !12058
  %686 = add i32 %685, %676, !dbg !12058
  call void @llvm.dbg.value(metadata i32 %686, metadata !11949, metadata !DIExpression()), !dbg !11950
  %687 = tail call i32 @llvm.fshl.i32(i32 %662, i32 %662, i32 30), !dbg !12058
  call void @llvm.dbg.value(metadata i32 %687, metadata !11946, metadata !DIExpression()), !dbg !11950
  %688 = tail call i32 @llvm.fshl.i32(i32 %686, i32 %686, i32 5), !dbg !12060
  %689 = xor i32 %687, %675, !dbg !12060
  %690 = xor i32 %689, %674, !dbg !12060
  %691 = xor i32 %502, %526, !dbg !12060
  %692 = xor i32 %691, %598, !dbg !12060
  %693 = xor i32 %692, %658, !dbg !12060
  call void @llvm.dbg.value(metadata i32 %693, metadata !11942, metadata !DIExpression()), !dbg !11950
  %694 = tail call i32 @llvm.fshl.i32(i32 %693, i32 %693, i32 1), !dbg !12060
  call void @llvm.dbg.value(metadata i32 %694, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 32)), !dbg !11950
  %695 = add i32 %694, 1859775393, !dbg !12060
  %696 = add i32 %695, %663, !dbg !12060
  %697 = add i32 %696, %690, !dbg !12060
  %698 = add i32 %697, %688, !dbg !12060
  call void @llvm.dbg.value(metadata i32 %698, metadata !11948, metadata !DIExpression()), !dbg !11950
  %699 = tail call i32 @llvm.fshl.i32(i32 %674, i32 %674, i32 30), !dbg !12060
  call void @llvm.dbg.value(metadata i32 %699, metadata !11945, metadata !DIExpression()), !dbg !11950
  %700 = tail call i32 @llvm.fshl.i32(i32 %698, i32 %698, i32 5), !dbg !12062
  %701 = xor i32 %699, %687, !dbg !12062
  %702 = xor i32 %701, %686, !dbg !12062
  %703 = xor i32 %514, %538, !dbg !12062
  %704 = xor i32 %703, %610, !dbg !12062
  %705 = xor i32 %704, %670, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %705, metadata !11942, metadata !DIExpression()), !dbg !11950
  %706 = tail call i32 @llvm.fshl.i32(i32 %705, i32 %705, i32 1), !dbg !12062
  call void @llvm.dbg.value(metadata i32 %706, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 160, 32)), !dbg !11950
  %707 = add i32 %706, 1859775393, !dbg !12062
  %708 = add i32 %707, %675, !dbg !12062
  %709 = add i32 %708, %702, !dbg !12062
  %710 = add i32 %709, %700, !dbg !12062
  call void @llvm.dbg.value(metadata i32 %710, metadata !11947, metadata !DIExpression()), !dbg !11950
  %711 = tail call i32 @llvm.fshl.i32(i32 %686, i32 %686, i32 30), !dbg !12062
  call void @llvm.dbg.value(metadata i32 %711, metadata !11949, metadata !DIExpression()), !dbg !11950
  %712 = tail call i32 @llvm.fshl.i32(i32 %710, i32 %710, i32 5), !dbg !12064
  %713 = xor i32 %711, %699, !dbg !12064
  %714 = xor i32 %713, %698, !dbg !12064
  %715 = xor i32 %550, %526, !dbg !12064
  %716 = xor i32 %715, %622, !dbg !12064
  %717 = xor i32 %716, %682, !dbg !12064
  call void @llvm.dbg.value(metadata i32 %717, metadata !11942, metadata !DIExpression()), !dbg !11950
  %718 = tail call i32 @llvm.fshl.i32(i32 %717, i32 %717, i32 1), !dbg !12064
  call void @llvm.dbg.value(metadata i32 %718, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 192, 32)), !dbg !11950
  %719 = add i32 %718, 1859775393, !dbg !12064
  %720 = add i32 %719, %687, !dbg !12064
  %721 = add i32 %720, %714, !dbg !12064
  %722 = add i32 %721, %712, !dbg !12064
  call void @llvm.dbg.value(metadata i32 %722, metadata !11946, metadata !DIExpression()), !dbg !11950
  %723 = tail call i32 @llvm.fshl.i32(i32 %698, i32 %698, i32 30), !dbg !12064
  call void @llvm.dbg.value(metadata i32 %723, metadata !11948, metadata !DIExpression()), !dbg !11950
  %724 = tail call i32 @llvm.fshl.i32(i32 %722, i32 %722, i32 5), !dbg !12066
  %725 = xor i32 %723, %711, !dbg !12066
  %726 = xor i32 %725, %710, !dbg !12066
  %727 = xor i32 %538, %562, !dbg !12066
  %728 = xor i32 %727, %634, !dbg !12066
  %729 = xor i32 %728, %694, !dbg !12066
  call void @llvm.dbg.value(metadata i32 %729, metadata !11942, metadata !DIExpression()), !dbg !11950
  %730 = tail call i32 @llvm.fshl.i32(i32 %729, i32 %729, i32 1), !dbg !12066
  call void @llvm.dbg.value(metadata i32 %730, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 224, 32)), !dbg !11950
  %731 = add i32 %730, 1859775393, !dbg !12066
  %732 = add i32 %731, %699, !dbg !12066
  %733 = add i32 %732, %726, !dbg !12066
  %734 = add i32 %733, %724, !dbg !12066
  call void @llvm.dbg.value(metadata i32 %734, metadata !11945, metadata !DIExpression()), !dbg !11950
  %735 = tail call i32 @llvm.fshl.i32(i32 %710, i32 %710, i32 30), !dbg !12066
  call void @llvm.dbg.value(metadata i32 %735, metadata !11947, metadata !DIExpression()), !dbg !11950
  %736 = tail call i32 @llvm.fshl.i32(i32 %734, i32 %734, i32 5), !dbg !12068
  %737 = and i32 %722, %735, !dbg !12068
  %738 = or i32 %722, %735, !dbg !12068
  %739 = and i32 %738, %723, !dbg !12068
  %740 = or i32 %739, %737, !dbg !12068
  %741 = xor i32 %550, %574, !dbg !12068
  %742 = xor i32 %741, %646, !dbg !12068
  %743 = xor i32 %742, %706, !dbg !12068
  call void @llvm.dbg.value(metadata i32 %743, metadata !11942, metadata !DIExpression()), !dbg !11950
  %744 = tail call i32 @llvm.fshl.i32(i32 %743, i32 %743, i32 1), !dbg !12068
  call void @llvm.dbg.value(metadata i32 %744, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 32)), !dbg !11950
  %745 = add i32 %744, -1894007588, !dbg !12068
  %746 = add i32 %745, %711, !dbg !12068
  %747 = add i32 %746, %740, !dbg !12068
  %748 = add i32 %747, %736, !dbg !12068
  call void @llvm.dbg.value(metadata i32 %748, metadata !11949, metadata !DIExpression()), !dbg !11950
  %749 = tail call i32 @llvm.fshl.i32(i32 %722, i32 %722, i32 30), !dbg !12068
  call void @llvm.dbg.value(metadata i32 %749, metadata !11946, metadata !DIExpression()), !dbg !11950
  %750 = tail call i32 @llvm.fshl.i32(i32 %748, i32 %748, i32 5), !dbg !12070
  %751 = and i32 %734, %749, !dbg !12070
  %752 = or i32 %734, %749, !dbg !12070
  %753 = and i32 %752, %735, !dbg !12070
  %754 = or i32 %753, %751, !dbg !12070
  %755 = xor i32 %586, %562, !dbg !12070
  %756 = xor i32 %755, %658, !dbg !12070
  %757 = xor i32 %756, %718, !dbg !12070
  call void @llvm.dbg.value(metadata i32 %757, metadata !11942, metadata !DIExpression()), !dbg !11950
  %758 = tail call i32 @llvm.fshl.i32(i32 %757, i32 %757, i32 1), !dbg !12070
  call void @llvm.dbg.value(metadata i32 %758, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 288, 32)), !dbg !11950
  %759 = add i32 %758, -1894007588, !dbg !12070
  %760 = add i32 %759, %723, !dbg !12070
  %761 = add i32 %760, %754, !dbg !12070
  %762 = add i32 %761, %750, !dbg !12070
  call void @llvm.dbg.value(metadata i32 %762, metadata !11948, metadata !DIExpression()), !dbg !11950
  %763 = tail call i32 @llvm.fshl.i32(i32 %734, i32 %734, i32 30), !dbg !12070
  call void @llvm.dbg.value(metadata i32 %763, metadata !11945, metadata !DIExpression()), !dbg !11950
  %764 = tail call i32 @llvm.fshl.i32(i32 %762, i32 %762, i32 5), !dbg !12072
  %765 = and i32 %748, %763, !dbg !12072
  %766 = or i32 %748, %763, !dbg !12072
  %767 = and i32 %766, %749, !dbg !12072
  %768 = or i32 %767, %765, !dbg !12072
  %769 = xor i32 %574, %598, !dbg !12072
  %770 = xor i32 %769, %670, !dbg !12072
  %771 = xor i32 %770, %730, !dbg !12072
  call void @llvm.dbg.value(metadata i32 %771, metadata !11942, metadata !DIExpression()), !dbg !11950
  %772 = tail call i32 @llvm.fshl.i32(i32 %771, i32 %771, i32 1), !dbg !12072
  call void @llvm.dbg.value(metadata i32 %772, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 32)), !dbg !11950
  %773 = add i32 %772, -1894007588, !dbg !12072
  %774 = add i32 %773, %735, !dbg !12072
  %775 = add i32 %774, %768, !dbg !12072
  %776 = add i32 %775, %764, !dbg !12072
  call void @llvm.dbg.value(metadata i32 %776, metadata !11947, metadata !DIExpression()), !dbg !11950
  %777 = tail call i32 @llvm.fshl.i32(i32 %748, i32 %748, i32 30), !dbg !12072
  call void @llvm.dbg.value(metadata i32 %777, metadata !11949, metadata !DIExpression()), !dbg !11950
  %778 = tail call i32 @llvm.fshl.i32(i32 %776, i32 %776, i32 5), !dbg !12074
  %779 = and i32 %762, %777, !dbg !12074
  %780 = or i32 %762, %777, !dbg !12074
  %781 = and i32 %780, %763, !dbg !12074
  %782 = or i32 %781, %779, !dbg !12074
  %783 = xor i32 %586, %610, !dbg !12074
  %784 = xor i32 %783, %682, !dbg !12074
  %785 = xor i32 %784, %744, !dbg !12074
  call void @llvm.dbg.value(metadata i32 %785, metadata !11942, metadata !DIExpression()), !dbg !11950
  %786 = tail call i32 @llvm.fshl.i32(i32 %785, i32 %785, i32 1), !dbg !12074
  call void @llvm.dbg.value(metadata i32 %786, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 352, 32)), !dbg !11950
  %787 = add i32 %786, -1894007588, !dbg !12074
  %788 = add i32 %787, %749, !dbg !12074
  %789 = add i32 %788, %782, !dbg !12074
  %790 = add i32 %789, %778, !dbg !12074
  call void @llvm.dbg.value(metadata i32 %790, metadata !11946, metadata !DIExpression()), !dbg !11950
  %791 = tail call i32 @llvm.fshl.i32(i32 %762, i32 %762, i32 30), !dbg !12074
  call void @llvm.dbg.value(metadata i32 %791, metadata !11948, metadata !DIExpression()), !dbg !11950
  %792 = tail call i32 @llvm.fshl.i32(i32 %790, i32 %790, i32 5), !dbg !12076
  %793 = and i32 %776, %791, !dbg !12076
  %794 = or i32 %776, %791, !dbg !12076
  %795 = and i32 %794, %777, !dbg !12076
  %796 = or i32 %795, %793, !dbg !12076
  %797 = xor i32 %622, %598, !dbg !12076
  %798 = xor i32 %797, %694, !dbg !12076
  %799 = xor i32 %798, %758, !dbg !12076
  call void @llvm.dbg.value(metadata i32 %799, metadata !11942, metadata !DIExpression()), !dbg !11950
  %800 = tail call i32 @llvm.fshl.i32(i32 %799, i32 %799, i32 1), !dbg !12076
  call void @llvm.dbg.value(metadata i32 %800, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 384, 32)), !dbg !11950
  %801 = add i32 %800, -1894007588, !dbg !12076
  %802 = add i32 %801, %763, !dbg !12076
  %803 = add i32 %802, %796, !dbg !12076
  %804 = add i32 %803, %792, !dbg !12076
  call void @llvm.dbg.value(metadata i32 %804, metadata !11945, metadata !DIExpression()), !dbg !11950
  %805 = tail call i32 @llvm.fshl.i32(i32 %776, i32 %776, i32 30), !dbg !12076
  call void @llvm.dbg.value(metadata i32 %805, metadata !11947, metadata !DIExpression()), !dbg !11950
  %806 = tail call i32 @llvm.fshl.i32(i32 %804, i32 %804, i32 5), !dbg !12078
  %807 = and i32 %790, %805, !dbg !12078
  %808 = or i32 %790, %805, !dbg !12078
  %809 = and i32 %808, %791, !dbg !12078
  %810 = or i32 %809, %807, !dbg !12078
  %811 = xor i32 %610, %634, !dbg !12078
  %812 = xor i32 %811, %706, !dbg !12078
  %813 = xor i32 %812, %772, !dbg !12078
  call void @llvm.dbg.value(metadata i32 %813, metadata !11942, metadata !DIExpression()), !dbg !11950
  %814 = tail call i32 @llvm.fshl.i32(i32 %813, i32 %813, i32 1), !dbg !12078
  call void @llvm.dbg.value(metadata i32 %814, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 416, 32)), !dbg !11950
  %815 = add i32 %814, -1894007588, !dbg !12078
  %816 = add i32 %815, %777, !dbg !12078
  %817 = add i32 %816, %810, !dbg !12078
  %818 = add i32 %817, %806, !dbg !12078
  call void @llvm.dbg.value(metadata i32 %818, metadata !11949, metadata !DIExpression()), !dbg !11950
  %819 = tail call i32 @llvm.fshl.i32(i32 %790, i32 %790, i32 30), !dbg !12078
  call void @llvm.dbg.value(metadata i32 %819, metadata !11946, metadata !DIExpression()), !dbg !11950
  %820 = tail call i32 @llvm.fshl.i32(i32 %818, i32 %818, i32 5), !dbg !12080
  %821 = and i32 %804, %819, !dbg !12080
  %822 = or i32 %804, %819, !dbg !12080
  %823 = and i32 %822, %805, !dbg !12080
  %824 = or i32 %823, %821, !dbg !12080
  %825 = xor i32 %622, %646, !dbg !12080
  %826 = xor i32 %825, %718, !dbg !12080
  %827 = xor i32 %826, %786, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %827, metadata !11942, metadata !DIExpression()), !dbg !11950
  %828 = tail call i32 @llvm.fshl.i32(i32 %827, i32 %827, i32 1), !dbg !12080
  call void @llvm.dbg.value(metadata i32 %828, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 448, 32)), !dbg !11950
  %829 = add i32 %828, -1894007588, !dbg !12080
  %830 = add i32 %829, %791, !dbg !12080
  %831 = add i32 %830, %824, !dbg !12080
  %832 = add i32 %831, %820, !dbg !12080
  call void @llvm.dbg.value(metadata i32 %832, metadata !11948, metadata !DIExpression()), !dbg !11950
  %833 = tail call i32 @llvm.fshl.i32(i32 %804, i32 %804, i32 30), !dbg !12080
  call void @llvm.dbg.value(metadata i32 %833, metadata !11945, metadata !DIExpression()), !dbg !11950
  %834 = tail call i32 @llvm.fshl.i32(i32 %832, i32 %832, i32 5), !dbg !12082
  %835 = and i32 %818, %833, !dbg !12082
  %836 = or i32 %818, %833, !dbg !12082
  %837 = and i32 %836, %819, !dbg !12082
  %838 = or i32 %837, %835, !dbg !12082
  %839 = xor i32 %658, %634, !dbg !12082
  %840 = xor i32 %839, %730, !dbg !12082
  %841 = xor i32 %840, %800, !dbg !12082
  call void @llvm.dbg.value(metadata i32 %841, metadata !11942, metadata !DIExpression()), !dbg !11950
  %842 = tail call i32 @llvm.fshl.i32(i32 %841, i32 %841, i32 1), !dbg !12082
  call void @llvm.dbg.value(metadata i32 %842, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 480, 32)), !dbg !11950
  %843 = add i32 %842, -1894007588, !dbg !12082
  %844 = add i32 %843, %805, !dbg !12082
  %845 = add i32 %844, %838, !dbg !12082
  %846 = add i32 %845, %834, !dbg !12082
  call void @llvm.dbg.value(metadata i32 %846, metadata !11947, metadata !DIExpression()), !dbg !11950
  %847 = tail call i32 @llvm.fshl.i32(i32 %818, i32 %818, i32 30), !dbg !12082
  call void @llvm.dbg.value(metadata i32 %847, metadata !11949, metadata !DIExpression()), !dbg !11950
  %848 = tail call i32 @llvm.fshl.i32(i32 %846, i32 %846, i32 5), !dbg !12084
  %849 = and i32 %832, %847, !dbg !12084
  %850 = or i32 %832, %847, !dbg !12084
  %851 = and i32 %850, %833, !dbg !12084
  %852 = or i32 %851, %849, !dbg !12084
  %853 = xor i32 %646, %670, !dbg !12084
  %854 = xor i32 %853, %744, !dbg !12084
  %855 = xor i32 %854, %814, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %855, metadata !11942, metadata !DIExpression()), !dbg !11950
  %856 = tail call i32 @llvm.fshl.i32(i32 %855, i32 %855, i32 1), !dbg !12084
  call void @llvm.dbg.value(metadata i32 %856, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !11950
  %857 = add i32 %856, -1894007588, !dbg !12084
  %858 = add i32 %857, %819, !dbg !12084
  %859 = add i32 %858, %852, !dbg !12084
  %860 = add i32 %859, %848, !dbg !12084
  call void @llvm.dbg.value(metadata i32 %860, metadata !11946, metadata !DIExpression()), !dbg !11950
  %861 = tail call i32 @llvm.fshl.i32(i32 %832, i32 %832, i32 30), !dbg !12084
  call void @llvm.dbg.value(metadata i32 %861, metadata !11948, metadata !DIExpression()), !dbg !11950
  %862 = tail call i32 @llvm.fshl.i32(i32 %860, i32 %860, i32 5), !dbg !12086
  %863 = and i32 %846, %861, !dbg !12086
  %864 = or i32 %846, %861, !dbg !12086
  %865 = and i32 %864, %847, !dbg !12086
  %866 = or i32 %865, %863, !dbg !12086
  %867 = xor i32 %658, %682, !dbg !12086
  %868 = xor i32 %867, %758, !dbg !12086
  %869 = xor i32 %868, %828, !dbg !12086
  call void @llvm.dbg.value(metadata i32 %869, metadata !11942, metadata !DIExpression()), !dbg !11950
  %870 = tail call i32 @llvm.fshl.i32(i32 %869, i32 %869, i32 1), !dbg !12086
  call void @llvm.dbg.value(metadata i32 %870, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !11950
  %871 = add i32 %870, -1894007588, !dbg !12086
  %872 = add i32 %871, %833, !dbg !12086
  %873 = add i32 %872, %866, !dbg !12086
  %874 = add i32 %873, %862, !dbg !12086
  call void @llvm.dbg.value(metadata i32 %874, metadata !11945, metadata !DIExpression()), !dbg !11950
  %875 = tail call i32 @llvm.fshl.i32(i32 %846, i32 %846, i32 30), !dbg !12086
  call void @llvm.dbg.value(metadata i32 %875, metadata !11947, metadata !DIExpression()), !dbg !11950
  %876 = tail call i32 @llvm.fshl.i32(i32 %874, i32 %874, i32 5), !dbg !12088
  %877 = and i32 %860, %875, !dbg !12088
  %878 = or i32 %860, %875, !dbg !12088
  %879 = and i32 %878, %861, !dbg !12088
  %880 = or i32 %879, %877, !dbg !12088
  %881 = xor i32 %694, %670, !dbg !12088
  %882 = xor i32 %881, %772, !dbg !12088
  %883 = xor i32 %882, %842, !dbg !12088
  call void @llvm.dbg.value(metadata i32 %883, metadata !11942, metadata !DIExpression()), !dbg !11950
  %884 = tail call i32 @llvm.fshl.i32(i32 %883, i32 %883, i32 1), !dbg !12088
  call void @llvm.dbg.value(metadata i32 %884, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !11950
  %885 = add i32 %884, -1894007588, !dbg !12088
  %886 = add i32 %885, %847, !dbg !12088
  %887 = add i32 %886, %880, !dbg !12088
  %888 = add i32 %887, %876, !dbg !12088
  call void @llvm.dbg.value(metadata i32 %888, metadata !11949, metadata !DIExpression()), !dbg !11950
  %889 = tail call i32 @llvm.fshl.i32(i32 %860, i32 %860, i32 30), !dbg !12088
  call void @llvm.dbg.value(metadata i32 %889, metadata !11946, metadata !DIExpression()), !dbg !11950
  %890 = tail call i32 @llvm.fshl.i32(i32 %888, i32 %888, i32 5), !dbg !12090
  %891 = and i32 %874, %889, !dbg !12090
  %892 = or i32 %874, %889, !dbg !12090
  %893 = and i32 %892, %875, !dbg !12090
  %894 = or i32 %893, %891, !dbg !12090
  %895 = xor i32 %682, %706, !dbg !12090
  %896 = xor i32 %895, %786, !dbg !12090
  %897 = xor i32 %896, %856, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %897, metadata !11942, metadata !DIExpression()), !dbg !11950
  %898 = tail call i32 @llvm.fshl.i32(i32 %897, i32 %897, i32 1), !dbg !12090
  call void @llvm.dbg.value(metadata i32 %898, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !11950
  %899 = add i32 %898, -1894007588, !dbg !12090
  %900 = add i32 %899, %861, !dbg !12090
  %901 = add i32 %900, %894, !dbg !12090
  %902 = add i32 %901, %890, !dbg !12090
  call void @llvm.dbg.value(metadata i32 %902, metadata !11948, metadata !DIExpression()), !dbg !11950
  %903 = tail call i32 @llvm.fshl.i32(i32 %874, i32 %874, i32 30), !dbg !12090
  call void @llvm.dbg.value(metadata i32 %903, metadata !11945, metadata !DIExpression()), !dbg !11950
  %904 = tail call i32 @llvm.fshl.i32(i32 %902, i32 %902, i32 5), !dbg !12092
  %905 = and i32 %888, %903, !dbg !12092
  %906 = or i32 %888, %903, !dbg !12092
  %907 = and i32 %906, %889, !dbg !12092
  %908 = or i32 %907, %905, !dbg !12092
  %909 = xor i32 %694, %718, !dbg !12092
  %910 = xor i32 %909, %800, !dbg !12092
  %911 = xor i32 %910, %870, !dbg !12092
  call void @llvm.dbg.value(metadata i32 %911, metadata !11942, metadata !DIExpression()), !dbg !11950
  %912 = tail call i32 @llvm.fshl.i32(i32 %911, i32 %911, i32 1), !dbg !12092
  call void @llvm.dbg.value(metadata i32 %912, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 32)), !dbg !11950
  %913 = add i32 %912, -1894007588, !dbg !12092
  %914 = add i32 %913, %875, !dbg !12092
  %915 = add i32 %914, %908, !dbg !12092
  %916 = add i32 %915, %904, !dbg !12092
  call void @llvm.dbg.value(metadata i32 %916, metadata !11947, metadata !DIExpression()), !dbg !11950
  %917 = tail call i32 @llvm.fshl.i32(i32 %888, i32 %888, i32 30), !dbg !12092
  call void @llvm.dbg.value(metadata i32 %917, metadata !11949, metadata !DIExpression()), !dbg !11950
  %918 = tail call i32 @llvm.fshl.i32(i32 %916, i32 %916, i32 5), !dbg !12094
  %919 = and i32 %902, %917, !dbg !12094
  %920 = or i32 %902, %917, !dbg !12094
  %921 = and i32 %920, %903, !dbg !12094
  %922 = or i32 %921, %919, !dbg !12094
  %923 = xor i32 %730, %706, !dbg !12094
  %924 = xor i32 %923, %814, !dbg !12094
  %925 = xor i32 %924, %884, !dbg !12094
  call void @llvm.dbg.value(metadata i32 %925, metadata !11942, metadata !DIExpression()), !dbg !11950
  %926 = tail call i32 @llvm.fshl.i32(i32 %925, i32 %925, i32 1), !dbg !12094
  call void @llvm.dbg.value(metadata i32 %926, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 160, 32)), !dbg !11950
  %927 = add i32 %926, -1894007588, !dbg !12094
  %928 = add i32 %927, %889, !dbg !12094
  %929 = add i32 %928, %922, !dbg !12094
  %930 = add i32 %929, %918, !dbg !12094
  call void @llvm.dbg.value(metadata i32 %930, metadata !11946, metadata !DIExpression()), !dbg !11950
  %931 = tail call i32 @llvm.fshl.i32(i32 %902, i32 %902, i32 30), !dbg !12094
  call void @llvm.dbg.value(metadata i32 %931, metadata !11948, metadata !DIExpression()), !dbg !11950
  %932 = tail call i32 @llvm.fshl.i32(i32 %930, i32 %930, i32 5), !dbg !12096
  %933 = and i32 %916, %931, !dbg !12096
  %934 = or i32 %916, %931, !dbg !12096
  %935 = and i32 %934, %917, !dbg !12096
  %936 = or i32 %935, %933, !dbg !12096
  %937 = xor i32 %718, %744, !dbg !12096
  %938 = xor i32 %937, %828, !dbg !12096
  %939 = xor i32 %938, %898, !dbg !12096
  call void @llvm.dbg.value(metadata i32 %939, metadata !11942, metadata !DIExpression()), !dbg !11950
  %940 = tail call i32 @llvm.fshl.i32(i32 %939, i32 %939, i32 1), !dbg !12096
  call void @llvm.dbg.value(metadata i32 %940, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 192, 32)), !dbg !11950
  %941 = add i32 %940, -1894007588, !dbg !12096
  %942 = add i32 %941, %903, !dbg !12096
  %943 = add i32 %942, %936, !dbg !12096
  %944 = add i32 %943, %932, !dbg !12096
  call void @llvm.dbg.value(metadata i32 %944, metadata !11945, metadata !DIExpression()), !dbg !11950
  %945 = tail call i32 @llvm.fshl.i32(i32 %916, i32 %916, i32 30), !dbg !12096
  call void @llvm.dbg.value(metadata i32 %945, metadata !11947, metadata !DIExpression()), !dbg !11950
  %946 = tail call i32 @llvm.fshl.i32(i32 %944, i32 %944, i32 5), !dbg !12098
  %947 = and i32 %930, %945, !dbg !12098
  %948 = or i32 %930, %945, !dbg !12098
  %949 = and i32 %948, %931, !dbg !12098
  %950 = or i32 %949, %947, !dbg !12098
  %951 = xor i32 %730, %758, !dbg !12098
  %952 = xor i32 %951, %842, !dbg !12098
  %953 = xor i32 %952, %912, !dbg !12098
  call void @llvm.dbg.value(metadata i32 %953, metadata !11942, metadata !DIExpression()), !dbg !11950
  %954 = tail call i32 @llvm.fshl.i32(i32 %953, i32 %953, i32 1), !dbg !12098
  call void @llvm.dbg.value(metadata i32 %954, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 224, 32)), !dbg !11950
  %955 = add i32 %954, -1894007588, !dbg !12098
  %956 = add i32 %955, %917, !dbg !12098
  %957 = add i32 %956, %950, !dbg !12098
  %958 = add i32 %957, %946, !dbg !12098
  call void @llvm.dbg.value(metadata i32 %958, metadata !11949, metadata !DIExpression()), !dbg !11950
  %959 = tail call i32 @llvm.fshl.i32(i32 %930, i32 %930, i32 30), !dbg !12098
  call void @llvm.dbg.value(metadata i32 %959, metadata !11946, metadata !DIExpression()), !dbg !11950
  %960 = tail call i32 @llvm.fshl.i32(i32 %958, i32 %958, i32 5), !dbg !12100
  %961 = and i32 %944, %959, !dbg !12100
  %962 = or i32 %944, %959, !dbg !12100
  %963 = and i32 %962, %945, !dbg !12100
  %964 = or i32 %963, %961, !dbg !12100
  %965 = xor i32 %772, %744, !dbg !12100
  %966 = xor i32 %965, %856, !dbg !12100
  %967 = xor i32 %966, %926, !dbg !12100
  call void @llvm.dbg.value(metadata i32 %967, metadata !11942, metadata !DIExpression()), !dbg !11950
  %968 = tail call i32 @llvm.fshl.i32(i32 %967, i32 %967, i32 1), !dbg !12100
  call void @llvm.dbg.value(metadata i32 %968, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 32)), !dbg !11950
  %969 = add i32 %968, -1894007588, !dbg !12100
  %970 = add i32 %969, %931, !dbg !12100
  %971 = add i32 %970, %964, !dbg !12100
  %972 = add i32 %971, %960, !dbg !12100
  call void @llvm.dbg.value(metadata i32 %972, metadata !11948, metadata !DIExpression()), !dbg !11950
  %973 = tail call i32 @llvm.fshl.i32(i32 %944, i32 %944, i32 30), !dbg !12100
  call void @llvm.dbg.value(metadata i32 %973, metadata !11945, metadata !DIExpression()), !dbg !11950
  %974 = tail call i32 @llvm.fshl.i32(i32 %972, i32 %972, i32 5), !dbg !12102
  %975 = and i32 %958, %973, !dbg !12102
  %976 = or i32 %958, %973, !dbg !12102
  %977 = and i32 %976, %959, !dbg !12102
  %978 = or i32 %977, %975, !dbg !12102
  %979 = xor i32 %758, %786, !dbg !12102
  %980 = xor i32 %979, %870, !dbg !12102
  %981 = xor i32 %980, %940, !dbg !12102
  call void @llvm.dbg.value(metadata i32 %981, metadata !11942, metadata !DIExpression()), !dbg !11950
  %982 = tail call i32 @llvm.fshl.i32(i32 %981, i32 %981, i32 1), !dbg !12102
  call void @llvm.dbg.value(metadata i32 %982, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 288, 32)), !dbg !11950
  %983 = add i32 %982, -1894007588, !dbg !12102
  %984 = add i32 %983, %945, !dbg !12102
  %985 = add i32 %984, %978, !dbg !12102
  %986 = add i32 %985, %974, !dbg !12102
  call void @llvm.dbg.value(metadata i32 %986, metadata !11947, metadata !DIExpression()), !dbg !11950
  %987 = tail call i32 @llvm.fshl.i32(i32 %958, i32 %958, i32 30), !dbg !12102
  call void @llvm.dbg.value(metadata i32 %987, metadata !11949, metadata !DIExpression()), !dbg !11950
  %988 = tail call i32 @llvm.fshl.i32(i32 %986, i32 %986, i32 5), !dbg !12104
  %989 = and i32 %972, %987, !dbg !12104
  %990 = or i32 %972, %987, !dbg !12104
  %991 = and i32 %990, %973, !dbg !12104
  %992 = or i32 %991, %989, !dbg !12104
  %993 = xor i32 %772, %800, !dbg !12104
  %994 = xor i32 %993, %884, !dbg !12104
  %995 = xor i32 %994, %954, !dbg !12104
  call void @llvm.dbg.value(metadata i32 %995, metadata !11942, metadata !DIExpression()), !dbg !11950
  %996 = tail call i32 @llvm.fshl.i32(i32 %995, i32 %995, i32 1), !dbg !12104
  call void @llvm.dbg.value(metadata i32 %996, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 32)), !dbg !11950
  %997 = add i32 %996, -1894007588, !dbg !12104
  %998 = add i32 %997, %959, !dbg !12104
  %999 = add i32 %998, %992, !dbg !12104
  %1000 = add i32 %999, %988, !dbg !12104
  call void @llvm.dbg.value(metadata i32 %1000, metadata !11946, metadata !DIExpression()), !dbg !11950
  %1001 = tail call i32 @llvm.fshl.i32(i32 %972, i32 %972, i32 30), !dbg !12104
  call void @llvm.dbg.value(metadata i32 %1001, metadata !11948, metadata !DIExpression()), !dbg !11950
  %1002 = tail call i32 @llvm.fshl.i32(i32 %1000, i32 %1000, i32 5), !dbg !12106
  %1003 = and i32 %986, %1001, !dbg !12106
  %1004 = or i32 %986, %1001, !dbg !12106
  %1005 = and i32 %1004, %987, !dbg !12106
  %1006 = or i32 %1005, %1003, !dbg !12106
  %1007 = xor i32 %814, %786, !dbg !12106
  %1008 = xor i32 %1007, %898, !dbg !12106
  %1009 = xor i32 %1008, %968, !dbg !12106
  call void @llvm.dbg.value(metadata i32 %1009, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1010 = tail call i32 @llvm.fshl.i32(i32 %1009, i32 %1009, i32 1), !dbg !12106
  call void @llvm.dbg.value(metadata i32 %1010, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 352, 32)), !dbg !11950
  %1011 = add i32 %1010, -1894007588, !dbg !12106
  %1012 = add i32 %1011, %973, !dbg !12106
  %1013 = add i32 %1012, %1006, !dbg !12106
  %1014 = add i32 %1013, %1002, !dbg !12106
  call void @llvm.dbg.value(metadata i32 %1014, metadata !11945, metadata !DIExpression()), !dbg !11950
  %1015 = tail call i32 @llvm.fshl.i32(i32 %986, i32 %986, i32 30), !dbg !12106
  call void @llvm.dbg.value(metadata i32 %1015, metadata !11947, metadata !DIExpression()), !dbg !11950
  %1016 = tail call i32 @llvm.fshl.i32(i32 %1014, i32 %1014, i32 5), !dbg !12108
  %1017 = xor i32 %1015, %1001, !dbg !12108
  %1018 = xor i32 %1017, %1000, !dbg !12108
  %1019 = xor i32 %800, %828, !dbg !12108
  %1020 = xor i32 %1019, %912, !dbg !12108
  %1021 = xor i32 %1020, %982, !dbg !12108
  call void @llvm.dbg.value(metadata i32 %1021, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1022 = tail call i32 @llvm.fshl.i32(i32 %1021, i32 %1021, i32 1), !dbg !12108
  call void @llvm.dbg.value(metadata i32 %1022, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 384, 32)), !dbg !11950
  %1023 = add i32 %1022, -899497514, !dbg !12108
  %1024 = add i32 %1023, %987, !dbg !12108
  %1025 = add i32 %1024, %1018, !dbg !12108
  %1026 = add i32 %1025, %1016, !dbg !12108
  call void @llvm.dbg.value(metadata i32 %1026, metadata !11949, metadata !DIExpression()), !dbg !11950
  %1027 = tail call i32 @llvm.fshl.i32(i32 %1000, i32 %1000, i32 30), !dbg !12108
  call void @llvm.dbg.value(metadata i32 %1027, metadata !11946, metadata !DIExpression()), !dbg !11950
  %1028 = tail call i32 @llvm.fshl.i32(i32 %1026, i32 %1026, i32 5), !dbg !12110
  %1029 = xor i32 %1027, %1015, !dbg !12110
  %1030 = xor i32 %1029, %1014, !dbg !12110
  %1031 = xor i32 %814, %842, !dbg !12110
  %1032 = xor i32 %1031, %926, !dbg !12110
  %1033 = xor i32 %1032, %996, !dbg !12110
  call void @llvm.dbg.value(metadata i32 %1033, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1034 = tail call i32 @llvm.fshl.i32(i32 %1033, i32 %1033, i32 1), !dbg !12110
  call void @llvm.dbg.value(metadata i32 %1034, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 416, 32)), !dbg !11950
  %1035 = add i32 %1034, -899497514, !dbg !12110
  %1036 = add i32 %1035, %1001, !dbg !12110
  %1037 = add i32 %1036, %1030, !dbg !12110
  %1038 = add i32 %1037, %1028, !dbg !12110
  call void @llvm.dbg.value(metadata i32 %1038, metadata !11948, metadata !DIExpression()), !dbg !11950
  %1039 = tail call i32 @llvm.fshl.i32(i32 %1014, i32 %1014, i32 30), !dbg !12110
  call void @llvm.dbg.value(metadata i32 %1039, metadata !11945, metadata !DIExpression()), !dbg !11950
  %1040 = tail call i32 @llvm.fshl.i32(i32 %1038, i32 %1038, i32 5), !dbg !12112
  %1041 = xor i32 %1039, %1027, !dbg !12112
  %1042 = xor i32 %1041, %1026, !dbg !12112
  %1043 = xor i32 %856, %828, !dbg !12112
  %1044 = xor i32 %1043, %940, !dbg !12112
  %1045 = xor i32 %1044, %1010, !dbg !12112
  call void @llvm.dbg.value(metadata i32 %1045, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1046 = tail call i32 @llvm.fshl.i32(i32 %1045, i32 %1045, i32 1), !dbg !12112
  call void @llvm.dbg.value(metadata i32 %1046, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 448, 32)), !dbg !11950
  %1047 = add i32 %1046, -899497514, !dbg !12112
  %1048 = add i32 %1047, %1015, !dbg !12112
  %1049 = add i32 %1048, %1042, !dbg !12112
  %1050 = add i32 %1049, %1040, !dbg !12112
  call void @llvm.dbg.value(metadata i32 %1050, metadata !11947, metadata !DIExpression()), !dbg !11950
  %1051 = tail call i32 @llvm.fshl.i32(i32 %1026, i32 %1026, i32 30), !dbg !12112
  call void @llvm.dbg.value(metadata i32 %1051, metadata !11949, metadata !DIExpression()), !dbg !11950
  %1052 = tail call i32 @llvm.fshl.i32(i32 %1050, i32 %1050, i32 5), !dbg !12114
  %1053 = xor i32 %1051, %1039, !dbg !12114
  %1054 = xor i32 %1053, %1038, !dbg !12114
  %1055 = xor i32 %842, %870, !dbg !12114
  %1056 = xor i32 %1055, %954, !dbg !12114
  %1057 = xor i32 %1056, %1022, !dbg !12114
  call void @llvm.dbg.value(metadata i32 %1057, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1058 = tail call i32 @llvm.fshl.i32(i32 %1057, i32 %1057, i32 1), !dbg !12114
  call void @llvm.dbg.value(metadata i32 %1058, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 480, 32)), !dbg !11950
  %1059 = add i32 %1058, -899497514, !dbg !12114
  %1060 = add i32 %1059, %1027, !dbg !12114
  %1061 = add i32 %1060, %1054, !dbg !12114
  %1062 = add i32 %1061, %1052, !dbg !12114
  call void @llvm.dbg.value(metadata i32 %1062, metadata !11946, metadata !DIExpression()), !dbg !11950
  %1063 = tail call i32 @llvm.fshl.i32(i32 %1038, i32 %1038, i32 30), !dbg !12114
  call void @llvm.dbg.value(metadata i32 %1063, metadata !11948, metadata !DIExpression()), !dbg !11950
  %1064 = tail call i32 @llvm.fshl.i32(i32 %1062, i32 %1062, i32 5), !dbg !12116
  %1065 = xor i32 %1063, %1051, !dbg !12116
  %1066 = xor i32 %1065, %1050, !dbg !12116
  %1067 = xor i32 %856, %884, !dbg !12116
  %1068 = xor i32 %1067, %968, !dbg !12116
  %1069 = xor i32 %1068, %1034, !dbg !12116
  call void @llvm.dbg.value(metadata i32 %1069, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1070 = tail call i32 @llvm.fshl.i32(i32 %1069, i32 %1069, i32 1), !dbg !12116
  call void @llvm.dbg.value(metadata i32 %1070, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !11950
  %1071 = add i32 %1070, -899497514, !dbg !12116
  %1072 = add i32 %1071, %1039, !dbg !12116
  %1073 = add i32 %1072, %1066, !dbg !12116
  %1074 = add i32 %1073, %1064, !dbg !12116
  call void @llvm.dbg.value(metadata i32 %1074, metadata !11945, metadata !DIExpression()), !dbg !11950
  %1075 = tail call i32 @llvm.fshl.i32(i32 %1050, i32 %1050, i32 30), !dbg !12116
  call void @llvm.dbg.value(metadata i32 %1075, metadata !11947, metadata !DIExpression()), !dbg !11950
  %1076 = tail call i32 @llvm.fshl.i32(i32 %1074, i32 %1074, i32 5), !dbg !12118
  %1077 = xor i32 %1075, %1063, !dbg !12118
  %1078 = xor i32 %1077, %1062, !dbg !12118
  %1079 = xor i32 %898, %870, !dbg !12118
  %1080 = xor i32 %1079, %982, !dbg !12118
  %1081 = xor i32 %1080, %1046, !dbg !12118
  call void @llvm.dbg.value(metadata i32 %1081, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1082 = tail call i32 @llvm.fshl.i32(i32 %1081, i32 %1081, i32 1), !dbg !12118
  call void @llvm.dbg.value(metadata i32 %1082, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !11950
  %1083 = add i32 %1082, -899497514, !dbg !12118
  %1084 = add i32 %1083, %1051, !dbg !12118
  %1085 = add i32 %1084, %1078, !dbg !12118
  %1086 = add i32 %1085, %1076, !dbg !12118
  call void @llvm.dbg.value(metadata i32 %1086, metadata !11949, metadata !DIExpression()), !dbg !11950
  %1087 = tail call i32 @llvm.fshl.i32(i32 %1062, i32 %1062, i32 30), !dbg !12118
  call void @llvm.dbg.value(metadata i32 %1087, metadata !11946, metadata !DIExpression()), !dbg !11950
  %1088 = tail call i32 @llvm.fshl.i32(i32 %1086, i32 %1086, i32 5), !dbg !12120
  %1089 = xor i32 %1087, %1075, !dbg !12120
  %1090 = xor i32 %1089, %1074, !dbg !12120
  %1091 = xor i32 %884, %912, !dbg !12120
  %1092 = xor i32 %1091, %996, !dbg !12120
  %1093 = xor i32 %1092, %1058, !dbg !12120
  call void @llvm.dbg.value(metadata i32 %1093, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1094 = tail call i32 @llvm.fshl.i32(i32 %1093, i32 %1093, i32 1), !dbg !12120
  call void @llvm.dbg.value(metadata i32 %1094, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 64, 32)), !dbg !11950
  %1095 = add i32 %1094, -899497514, !dbg !12120
  %1096 = add i32 %1095, %1063, !dbg !12120
  %1097 = add i32 %1096, %1090, !dbg !12120
  %1098 = add i32 %1097, %1088, !dbg !12120
  call void @llvm.dbg.value(metadata i32 %1098, metadata !11948, metadata !DIExpression()), !dbg !11950
  %1099 = tail call i32 @llvm.fshl.i32(i32 %1074, i32 %1074, i32 30), !dbg !12120
  call void @llvm.dbg.value(metadata i32 %1099, metadata !11945, metadata !DIExpression()), !dbg !11950
  %1100 = tail call i32 @llvm.fshl.i32(i32 %1098, i32 %1098, i32 5), !dbg !12122
  %1101 = xor i32 %1099, %1087, !dbg !12122
  %1102 = xor i32 %1101, %1086, !dbg !12122
  %1103 = xor i32 %898, %926, !dbg !12122
  %1104 = xor i32 %1103, %1010, !dbg !12122
  %1105 = xor i32 %1104, %1070, !dbg !12122
  call void @llvm.dbg.value(metadata i32 %1105, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1106 = tail call i32 @llvm.fshl.i32(i32 %1105, i32 %1105, i32 1), !dbg !12122
  call void @llvm.dbg.value(metadata i32 %1106, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 96, 32)), !dbg !11950
  %1107 = add i32 %1106, -899497514, !dbg !12122
  %1108 = add i32 %1107, %1075, !dbg !12122
  %1109 = add i32 %1108, %1102, !dbg !12122
  %1110 = add i32 %1109, %1100, !dbg !12122
  call void @llvm.dbg.value(metadata i32 %1110, metadata !11947, metadata !DIExpression()), !dbg !11950
  %1111 = tail call i32 @llvm.fshl.i32(i32 %1086, i32 %1086, i32 30), !dbg !12122
  call void @llvm.dbg.value(metadata i32 %1111, metadata !11949, metadata !DIExpression()), !dbg !11950
  %1112 = tail call i32 @llvm.fshl.i32(i32 %1110, i32 %1110, i32 5), !dbg !12124
  %1113 = xor i32 %1111, %1099, !dbg !12124
  %1114 = xor i32 %1113, %1098, !dbg !12124
  %1115 = xor i32 %940, %912, !dbg !12124
  %1116 = xor i32 %1115, %1022, !dbg !12124
  %1117 = xor i32 %1116, %1082, !dbg !12124
  call void @llvm.dbg.value(metadata i32 %1117, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1118 = tail call i32 @llvm.fshl.i32(i32 %1117, i32 %1117, i32 1), !dbg !12124
  call void @llvm.dbg.value(metadata i32 %1118, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 128, 32)), !dbg !11950
  %1119 = add i32 %1118, -899497514, !dbg !12124
  %1120 = add i32 %1119, %1087, !dbg !12124
  %1121 = add i32 %1120, %1114, !dbg !12124
  %1122 = add i32 %1121, %1112, !dbg !12124
  call void @llvm.dbg.value(metadata i32 %1122, metadata !11946, metadata !DIExpression()), !dbg !11950
  %1123 = tail call i32 @llvm.fshl.i32(i32 %1098, i32 %1098, i32 30), !dbg !12124
  call void @llvm.dbg.value(metadata i32 %1123, metadata !11948, metadata !DIExpression()), !dbg !11950
  %1124 = tail call i32 @llvm.fshl.i32(i32 %1122, i32 %1122, i32 5), !dbg !12126
  %1125 = xor i32 %1123, %1111, !dbg !12126
  %1126 = xor i32 %1125, %1110, !dbg !12126
  %1127 = xor i32 %926, %954, !dbg !12126
  %1128 = xor i32 %1127, %1034, !dbg !12126
  %1129 = xor i32 %1128, %1094, !dbg !12126
  call void @llvm.dbg.value(metadata i32 %1129, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1130 = tail call i32 @llvm.fshl.i32(i32 %1129, i32 %1129, i32 1), !dbg !12126
  call void @llvm.dbg.value(metadata i32 %1130, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 160, 32)), !dbg !11950
  %1131 = add i32 %1130, -899497514, !dbg !12126
  %1132 = add i32 %1131, %1099, !dbg !12126
  %1133 = add i32 %1132, %1126, !dbg !12126
  %1134 = add i32 %1133, %1124, !dbg !12126
  call void @llvm.dbg.value(metadata i32 %1134, metadata !11945, metadata !DIExpression()), !dbg !11950
  %1135 = tail call i32 @llvm.fshl.i32(i32 %1110, i32 %1110, i32 30), !dbg !12126
  call void @llvm.dbg.value(metadata i32 %1135, metadata !11947, metadata !DIExpression()), !dbg !11950
  %1136 = tail call i32 @llvm.fshl.i32(i32 %1134, i32 %1134, i32 5), !dbg !12128
  %1137 = xor i32 %1135, %1123, !dbg !12128
  %1138 = xor i32 %1137, %1122, !dbg !12128
  %1139 = xor i32 %940, %968, !dbg !12128
  %1140 = xor i32 %1139, %1046, !dbg !12128
  %1141 = xor i32 %1140, %1106, !dbg !12128
  call void @llvm.dbg.value(metadata i32 %1141, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1142 = tail call i32 @llvm.fshl.i32(i32 %1141, i32 %1141, i32 1), !dbg !12128
  call void @llvm.dbg.value(metadata i32 %1142, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 192, 32)), !dbg !11950
  %1143 = add i32 %1142, -899497514, !dbg !12128
  %1144 = add i32 %1143, %1111, !dbg !12128
  %1145 = add i32 %1144, %1138, !dbg !12128
  %1146 = add i32 %1145, %1136, !dbg !12128
  call void @llvm.dbg.value(metadata i32 %1146, metadata !11949, metadata !DIExpression()), !dbg !11950
  %1147 = tail call i32 @llvm.fshl.i32(i32 %1122, i32 %1122, i32 30), !dbg !12128
  call void @llvm.dbg.value(metadata i32 %1147, metadata !11946, metadata !DIExpression()), !dbg !11950
  %1148 = tail call i32 @llvm.fshl.i32(i32 %1146, i32 %1146, i32 5), !dbg !12130
  %1149 = xor i32 %1147, %1135, !dbg !12130
  %1150 = xor i32 %1149, %1134, !dbg !12130
  %1151 = xor i32 %982, %954, !dbg !12130
  %1152 = xor i32 %1151, %1058, !dbg !12130
  %1153 = xor i32 %1152, %1118, !dbg !12130
  call void @llvm.dbg.value(metadata i32 %1153, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1154 = tail call i32 @llvm.fshl.i32(i32 %1153, i32 %1153, i32 1), !dbg !12130
  call void @llvm.dbg.value(metadata i32 %1154, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 224, 32)), !dbg !11950
  %1155 = add i32 %1154, -899497514, !dbg !12130
  %1156 = add i32 %1155, %1123, !dbg !12130
  %1157 = add i32 %1156, %1150, !dbg !12130
  %1158 = add i32 %1157, %1148, !dbg !12130
  call void @llvm.dbg.value(metadata i32 %1158, metadata !11948, metadata !DIExpression()), !dbg !11950
  %1159 = tail call i32 @llvm.fshl.i32(i32 %1134, i32 %1134, i32 30), !dbg !12130
  call void @llvm.dbg.value(metadata i32 %1159, metadata !11945, metadata !DIExpression()), !dbg !11950
  %1160 = tail call i32 @llvm.fshl.i32(i32 %1158, i32 %1158, i32 5), !dbg !12132
  %1161 = xor i32 %1159, %1147, !dbg !12132
  %1162 = xor i32 %1161, %1146, !dbg !12132
  %1163 = xor i32 %968, %996, !dbg !12132
  %1164 = xor i32 %1163, %1070, !dbg !12132
  %1165 = xor i32 %1164, %1130, !dbg !12132
  call void @llvm.dbg.value(metadata i32 %1165, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1166 = tail call i32 @llvm.fshl.i32(i32 %1165, i32 %1165, i32 1), !dbg !12132
  call void @llvm.dbg.value(metadata i32 %1166, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 256, 32)), !dbg !11950
  %1167 = add i32 %1166, -899497514, !dbg !12132
  %1168 = add i32 %1167, %1135, !dbg !12132
  %1169 = add i32 %1168, %1162, !dbg !12132
  %1170 = add i32 %1169, %1160, !dbg !12132
  call void @llvm.dbg.value(metadata i32 %1170, metadata !11947, metadata !DIExpression()), !dbg !11950
  %1171 = tail call i32 @llvm.fshl.i32(i32 %1146, i32 %1146, i32 30), !dbg !12132
  call void @llvm.dbg.value(metadata i32 %1171, metadata !11949, metadata !DIExpression()), !dbg !11950
  %1172 = tail call i32 @llvm.fshl.i32(i32 %1170, i32 %1170, i32 5), !dbg !12134
  %1173 = xor i32 %1171, %1159, !dbg !12134
  %1174 = xor i32 %1173, %1158, !dbg !12134
  %1175 = xor i32 %982, %1010, !dbg !12134
  %1176 = xor i32 %1175, %1082, !dbg !12134
  %1177 = xor i32 %1176, %1142, !dbg !12134
  call void @llvm.dbg.value(metadata i32 %1177, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1178 = tail call i32 @llvm.fshl.i32(i32 %1177, i32 %1177, i32 1), !dbg !12134
  call void @llvm.dbg.value(metadata i32 %1178, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 288, 32)), !dbg !11950
  %1179 = add i32 %1178, -899497514, !dbg !12134
  %1180 = add i32 %1179, %1147, !dbg !12134
  %1181 = add i32 %1180, %1174, !dbg !12134
  %1182 = add i32 %1181, %1172, !dbg !12134
  call void @llvm.dbg.value(metadata i32 %1182, metadata !11946, metadata !DIExpression()), !dbg !11950
  %1183 = tail call i32 @llvm.fshl.i32(i32 %1158, i32 %1158, i32 30), !dbg !12134
  call void @llvm.dbg.value(metadata i32 %1183, metadata !11948, metadata !DIExpression()), !dbg !11950
  %1184 = tail call i32 @llvm.fshl.i32(i32 %1182, i32 %1182, i32 5), !dbg !12136
  %1185 = xor i32 %1183, %1171, !dbg !12136
  %1186 = xor i32 %1185, %1170, !dbg !12136
  %1187 = xor i32 %1022, %996, !dbg !12136
  %1188 = xor i32 %1187, %1094, !dbg !12136
  %1189 = xor i32 %1188, %1154, !dbg !12136
  call void @llvm.dbg.value(metadata i32 %1189, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1190 = tail call i32 @llvm.fshl.i32(i32 %1189, i32 %1189, i32 1), !dbg !12136
  call void @llvm.dbg.value(metadata i32 %1190, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 320, 32)), !dbg !11950
  %1191 = add i32 %1190, -899497514, !dbg !12136
  %1192 = add i32 %1191, %1159, !dbg !12136
  %1193 = add i32 %1192, %1186, !dbg !12136
  %1194 = add i32 %1193, %1184, !dbg !12136
  call void @llvm.dbg.value(metadata i32 %1194, metadata !11945, metadata !DIExpression()), !dbg !11950
  %1195 = tail call i32 @llvm.fshl.i32(i32 %1170, i32 %1170, i32 30), !dbg !12136
  call void @llvm.dbg.value(metadata i32 %1195, metadata !11947, metadata !DIExpression()), !dbg !11950
  %1196 = tail call i32 @llvm.fshl.i32(i32 %1194, i32 %1194, i32 5), !dbg !12138
  %1197 = xor i32 %1195, %1183, !dbg !12138
  %1198 = xor i32 %1197, %1182, !dbg !12138
  %1199 = xor i32 %1010, %1034, !dbg !12138
  %1200 = xor i32 %1199, %1106, !dbg !12138
  %1201 = xor i32 %1200, %1166, !dbg !12138
  call void @llvm.dbg.value(metadata i32 %1201, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1202 = tail call i32 @llvm.fshl.i32(i32 %1201, i32 %1201, i32 1), !dbg !12138
  call void @llvm.dbg.value(metadata i32 %1202, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 352, 32)), !dbg !11950
  %1203 = add i32 %1202, -899497514, !dbg !12138
  %1204 = add i32 %1203, %1171, !dbg !12138
  %1205 = add i32 %1204, %1198, !dbg !12138
  %1206 = add i32 %1205, %1196, !dbg !12138
  call void @llvm.dbg.value(metadata i32 %1206, metadata !11949, metadata !DIExpression()), !dbg !11950
  %1207 = tail call i32 @llvm.fshl.i32(i32 %1182, i32 %1182, i32 30), !dbg !12138
  call void @llvm.dbg.value(metadata i32 %1207, metadata !11946, metadata !DIExpression()), !dbg !11950
  %1208 = tail call i32 @llvm.fshl.i32(i32 %1206, i32 %1206, i32 5), !dbg !12140
  %1209 = xor i32 %1207, %1195, !dbg !12140
  %1210 = xor i32 %1209, %1194, !dbg !12140
  %1211 = xor i32 %1022, %1046, !dbg !12140
  %1212 = xor i32 %1211, %1118, !dbg !12140
  %1213 = xor i32 %1212, %1178, !dbg !12140
  call void @llvm.dbg.value(metadata i32 %1213, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1214 = tail call i32 @llvm.fshl.i32(i32 %1213, i32 %1213, i32 1), !dbg !12140
  call void @llvm.dbg.value(metadata i32 %1214, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 384, 32)), !dbg !11950
  %1215 = add i32 %1214, -899497514, !dbg !12140
  %1216 = add i32 %1215, %1183, !dbg !12140
  %1217 = add i32 %1216, %1210, !dbg !12140
  %1218 = add i32 %1217, %1208, !dbg !12140
  call void @llvm.dbg.value(metadata i32 %1218, metadata !11948, metadata !DIExpression()), !dbg !11950
  %1219 = tail call i32 @llvm.fshl.i32(i32 %1194, i32 %1194, i32 30), !dbg !12140
  call void @llvm.dbg.value(metadata i32 %1219, metadata !11945, metadata !DIExpression()), !dbg !11950
  %1220 = tail call i32 @llvm.fshl.i32(i32 %1218, i32 %1218, i32 5), !dbg !12142
  %1221 = xor i32 %1219, %1207, !dbg !12142
  %1222 = xor i32 %1221, %1206, !dbg !12142
  %1223 = xor i32 %1058, %1034, !dbg !12142
  %1224 = xor i32 %1223, %1130, !dbg !12142
  %1225 = xor i32 %1224, %1190, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %1225, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1226 = tail call i32 @llvm.fshl.i32(i32 %1225, i32 %1225, i32 1), !dbg !12142
  call void @llvm.dbg.value(metadata i32 %1226, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 416, 32)), !dbg !11950
  %1227 = add i32 %1226, -899497514, !dbg !12142
  %1228 = add i32 %1227, %1195, !dbg !12142
  %1229 = add i32 %1228, %1222, !dbg !12142
  %1230 = add i32 %1229, %1220, !dbg !12142
  call void @llvm.dbg.value(metadata i32 %1230, metadata !11947, metadata !DIExpression()), !dbg !11950
  %1231 = tail call i32 @llvm.fshl.i32(i32 %1206, i32 %1206, i32 30), !dbg !12142
  call void @llvm.dbg.value(metadata i32 %1231, metadata !11949, metadata !DIExpression()), !dbg !11950
  %1232 = tail call i32 @llvm.fshl.i32(i32 %1230, i32 %1230, i32 5), !dbg !12144
  %1233 = xor i32 %1231, %1219, !dbg !12144
  %1234 = xor i32 %1233, %1218, !dbg !12144
  %1235 = xor i32 %1046, %1070, !dbg !12144
  %1236 = xor i32 %1235, %1142, !dbg !12144
  %1237 = xor i32 %1236, %1202, !dbg !12144
  call void @llvm.dbg.value(metadata i32 %1237, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1238 = tail call i32 @llvm.fshl.i32(i32 %1237, i32 %1237, i32 1), !dbg !12144
  call void @llvm.dbg.value(metadata i32 %1238, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 448, 32)), !dbg !11950
  %1239 = add i32 %1238, -899497514, !dbg !12144
  %1240 = add i32 %1239, %1207, !dbg !12144
  %1241 = add i32 %1240, %1234, !dbg !12144
  %1242 = add i32 %1241, %1232, !dbg !12144
  call void @llvm.dbg.value(metadata i32 %1242, metadata !11946, metadata !DIExpression()), !dbg !11950
  %1243 = tail call i32 @llvm.fshl.i32(i32 %1218, i32 %1218, i32 30), !dbg !12144
  call void @llvm.dbg.value(metadata i32 %1243, metadata !11948, metadata !DIExpression()), !dbg !11950
  %1244 = tail call i32 @llvm.fshl.i32(i32 %1242, i32 %1242, i32 5), !dbg !12146
  %1245 = xor i32 %1243, %1231, !dbg !12146
  %1246 = xor i32 %1245, %1230, !dbg !12146
  %1247 = xor i32 %1058, %1082, !dbg !12146
  %1248 = xor i32 %1247, %1154, !dbg !12146
  %1249 = xor i32 %1248, %1214, !dbg !12146
  call void @llvm.dbg.value(metadata i32 %1249, metadata !11942, metadata !DIExpression()), !dbg !11950
  %1250 = tail call i32 @llvm.fshl.i32(i32 %1249, i32 %1249, i32 1), !dbg !12146
  call void @llvm.dbg.value(metadata i32 %1250, metadata !11943, metadata !DIExpression(DW_OP_LLVM_fragment, 480, 32)), !dbg !11950
  call void @llvm.dbg.value(metadata i32 undef, metadata !11945, metadata !DIExpression()), !dbg !11950
  %1251 = tail call i32 @llvm.fshl.i32(i32 %1230, i32 %1230, i32 30), !dbg !12146
  call void @llvm.dbg.value(metadata i32 %1251, metadata !11947, metadata !DIExpression()), !dbg !11950
  %1252 = add i32 %291, -899497514, !dbg !12146
  %1253 = add i32 %1252, %1250, !dbg !12146
  %1254 = add i32 %1253, %1219, !dbg !12146
  %1255 = add i32 %1254, %1246, !dbg !12146
  %1256 = add i32 %1255, %1244, !dbg !12148
  store i32 %1256, i32* %290, align 4, !dbg !12148
  %1257 = add i32 %1242, %293, !dbg !12149
  store i32 %1257, i32* %292, align 4, !dbg !12149
  %1258 = add i32 %1251, %295, !dbg !12150
  store i32 %1258, i32* %294, align 4, !dbg !12150
  %1259 = add i32 %1243, %297, !dbg !12151
  store i32 %1259, i32* %296, align 4, !dbg !12151
  %1260 = add i32 %1231, %299, !dbg !12152
  store i32 %1260, i32* %298, align 4, !dbg !12152
  ret void, !dbg !12153
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.fshl.i32(i32, i32, i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @mbedtls_sha1_update(%struct.mbedtls_sha1_context* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !12154 {
  call void @llvm.dbg.value(metadata %struct.mbedtls_sha1_context* %0, metadata !12158, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i8* %1, metadata !12159, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i32 %2, metadata !12160, metadata !DIExpression()), !dbg !12163
  %4 = icmp eq i32 %2, 0, !dbg !12164
  br i1 %4, label %44, label %5, !dbg !12166

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 0, i32 0, !dbg !12167
  %7 = load i32, i32* %6, align 4, !dbg !12167
  %8 = and i32 %7, 63, !dbg !12168
  call void @llvm.dbg.value(metadata i32 %8, metadata !12162, metadata !DIExpression()), !dbg !12163
  %9 = sub nuw nsw i32 64, %8, !dbg !12169
  call void @llvm.dbg.value(metadata i32 %9, metadata !12161, metadata !DIExpression()), !dbg !12163
  %10 = add i32 %7, %2, !dbg !12170
  store i32 %10, i32* %6, align 4, !dbg !12171
  %11 = icmp ult i32 %10, %2, !dbg !12172
  br i1 %11, label %12, label %16, !dbg !12174

12:                                               ; preds = %5
  %13 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 0, i32 1, !dbg !12175
  %14 = load i32, i32* %13, align 4, !dbg !12176
  %15 = add i32 %14, 1, !dbg !12176
  store i32 %15, i32* %13, align 4, !dbg !12176
  br label %16, !dbg !12175

16:                                               ; preds = %12, %5
  %17 = icmp eq i32 %8, 0, !dbg !12177
  br i1 %17, label %26, label %18, !dbg !12179

18:                                               ; preds = %16
  %19 = icmp ugt i32 %9, %2, !dbg !12180
  br i1 %19, label %26, label %20, !dbg !12181

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 2, i32 0, !dbg !12182
  %22 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 2, i32 %8, !dbg !12184
  %23 = tail call i8* @memcpy(i8* noundef nonnull %22, i8* noundef %1, i32 noundef %9) #24, !dbg !12185
  tail call void @mbedtls_sha1_process(%struct.mbedtls_sha1_context* noundef nonnull %0, i8* noundef nonnull %21) #25, !dbg !12186
  %24 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !12187
  call void @llvm.dbg.value(metadata i8* %24, metadata !12159, metadata !DIExpression()), !dbg !12163
  %25 = sub i32 %2, %9, !dbg !12188
  call void @llvm.dbg.value(metadata i32 %25, metadata !12160, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i32 0, metadata !12162, metadata !DIExpression()), !dbg !12163
  br label %26, !dbg !12189

26:                                               ; preds = %20, %18, %16
  %27 = phi i32 [ %25, %20 ], [ %2, %18 ], [ %2, %16 ]
  %28 = phi i8* [ %24, %20 ], [ %1, %18 ], [ %1, %16 ]
  %29 = phi i32 [ 0, %20 ], [ %8, %18 ], [ 0, %16 ], !dbg !12163
  call void @llvm.dbg.value(metadata i32 %29, metadata !12162, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i8* %28, metadata !12159, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i32 %27, metadata !12160, metadata !DIExpression()), !dbg !12163
  %30 = icmp ugt i32 %27, 63, !dbg !12190
  br i1 %30, label %31, label %37, !dbg !12191

31:                                               ; preds = %26, %31
  %32 = phi i8* [ %34, %31 ], [ %28, %26 ]
  %33 = phi i32 [ %35, %31 ], [ %27, %26 ]
  call void @llvm.dbg.value(metadata i8* %32, metadata !12159, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.value(metadata i32 %33, metadata !12160, metadata !DIExpression()), !dbg !12163
  tail call void @mbedtls_sha1_process(%struct.mbedtls_sha1_context* noundef %0, i8* noundef %32) #25, !dbg !12192
  %34 = getelementptr inbounds i8, i8* %32, i32 64, !dbg !12194
  call void @llvm.dbg.value(metadata i8* %34, metadata !12159, metadata !DIExpression()), !dbg !12163
  %35 = add i32 %33, -64, !dbg !12195
  call void @llvm.dbg.value(metadata i32 %35, metadata !12160, metadata !DIExpression()), !dbg !12163
  %36 = icmp ugt i32 %35, 63, !dbg !12190
  br i1 %36, label %31, label %37, !dbg !12191, !llvm.loop !12196

37:                                               ; preds = %31, %26
  %38 = phi i32 [ %27, %26 ], [ %35, %31 ], !dbg !12163
  %39 = phi i8* [ %28, %26 ], [ %34, %31 ], !dbg !12163
  %40 = icmp eq i32 %38, 0, !dbg !12198
  br i1 %40, label %44, label %41, !dbg !12200

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 2, i32 %29, !dbg !12201
  %43 = tail call i8* @memcpy(i8* noundef nonnull %42, i8* noundef %39, i32 noundef %38) #24, !dbg !12202
  br label %44, !dbg !12202

44:                                               ; preds = %37, %41, %3
  ret void, !dbg !12203
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mbedtls_sha1_finish(%struct.mbedtls_sha1_context* noundef %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !12204 {
  %3 = alloca [8 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.mbedtls_sha1_context* %0, metadata !12208, metadata !DIExpression()), !dbg !12216
  call void @llvm.dbg.value(metadata i8* %1, metadata !12209, metadata !DIExpression()), !dbg !12216
  %4 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 0, !dbg !12217
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !12217
  call void @llvm.dbg.declare(metadata [8 x i8]* %3, metadata !12214, metadata !DIExpression()), !dbg !12218
  %5 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 0, i32 0, !dbg !12219
  %6 = load i32, i32* %5, align 4, !dbg !12219
  %7 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 0, i32 1, !dbg !12220
  %8 = load i32, i32* %7, align 4, !dbg !12220
  %9 = tail call i32 @llvm.fshl.i32(i32 %8, i32 %6, i32 3), !dbg !12221
  call void @llvm.dbg.value(metadata i32 %9, metadata !12212, metadata !DIExpression()), !dbg !12216
  %10 = shl i32 %6, 3, !dbg !12222
  call void @llvm.dbg.value(metadata i32 %10, metadata !12213, metadata !DIExpression()), !dbg !12216
  %11 = lshr i32 %9, 24, !dbg !12223
  %12 = trunc i32 %11 to i8, !dbg !12223
  store i8 %12, i8* %4, align 1, !dbg !12223
  %13 = lshr i32 %9, 16, !dbg !12223
  %14 = trunc i32 %13 to i8, !dbg !12223
  %15 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 1, !dbg !12223
  store i8 %14, i8* %15, align 1, !dbg !12223
  %16 = lshr i32 %9, 8, !dbg !12223
  %17 = trunc i32 %16 to i8, !dbg !12223
  %18 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 2, !dbg !12223
  store i8 %17, i8* %18, align 1, !dbg !12223
  %19 = trunc i32 %9 to i8, !dbg !12223
  %20 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 3, !dbg !12223
  store i8 %19, i8* %20, align 1, !dbg !12223
  %21 = lshr i32 %10, 24, !dbg !12225
  %22 = trunc i32 %21 to i8, !dbg !12225
  %23 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 4, !dbg !12225
  store i8 %22, i8* %23, align 1, !dbg !12225
  %24 = lshr i32 %10, 16, !dbg !12225
  %25 = trunc i32 %24 to i8, !dbg !12225
  %26 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 5, !dbg !12225
  store i8 %25, i8* %26, align 1, !dbg !12225
  %27 = lshr i32 %10, 8, !dbg !12225
  %28 = trunc i32 %27 to i8, !dbg !12225
  %29 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 6, !dbg !12225
  store i8 %28, i8* %29, align 1, !dbg !12225
  %30 = trunc i32 %10 to i8, !dbg !12225
  %31 = getelementptr inbounds [8 x i8], [8 x i8]* %3, i32 0, i32 7, !dbg !12225
  store i8 %30, i8* %31, align 1, !dbg !12225
  %32 = and i32 %6, 63, !dbg !12227
  call void @llvm.dbg.value(metadata i32 %32, metadata !12210, metadata !DIExpression()), !dbg !12216
  %33 = icmp ult i32 %32, 56, !dbg !12228
  %34 = select i1 %33, i32 56, i32 120, !dbg !12229
  %35 = sub nsw i32 %34, %32, !dbg !12229
  call void @llvm.dbg.value(metadata i32 %35, metadata !12211, metadata !DIExpression()), !dbg !12216
  tail call void @mbedtls_sha1_update(%struct.mbedtls_sha1_context* noundef %0, i8* noundef getelementptr inbounds (<{ i8, [63 x i8] }>, <{ i8, [63 x i8] }>* @sha1_padding, i32 0, i32 0), i32 noundef %35) #25, !dbg !12230
  call void @mbedtls_sha1_update(%struct.mbedtls_sha1_context* noundef %0, i8* noundef nonnull %4, i32 noundef 8) #25, !dbg !12231
  %36 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 0, !dbg !12232
  %37 = load i32, i32* %36, align 4, !dbg !12232
  %38 = lshr i32 %37, 24, !dbg !12232
  %39 = trunc i32 %38 to i8, !dbg !12232
  store i8 %39, i8* %1, align 1, !dbg !12232
  %40 = load i32, i32* %36, align 4, !dbg !12232
  %41 = lshr i32 %40, 16, !dbg !12232
  %42 = trunc i32 %41 to i8, !dbg !12232
  %43 = getelementptr inbounds i8, i8* %1, i32 1, !dbg !12232
  store i8 %42, i8* %43, align 1, !dbg !12232
  %44 = load i32, i32* %36, align 4, !dbg !12232
  %45 = lshr i32 %44, 8, !dbg !12232
  %46 = trunc i32 %45 to i8, !dbg !12232
  %47 = getelementptr inbounds i8, i8* %1, i32 2, !dbg !12232
  store i8 %46, i8* %47, align 1, !dbg !12232
  %48 = load i32, i32* %36, align 4, !dbg !12232
  %49 = trunc i32 %48 to i8, !dbg !12232
  %50 = getelementptr inbounds i8, i8* %1, i32 3, !dbg !12232
  store i8 %49, i8* %50, align 1, !dbg !12232
  %51 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 1, !dbg !12234
  %52 = load i32, i32* %51, align 4, !dbg !12234
  %53 = lshr i32 %52, 24, !dbg !12234
  %54 = trunc i32 %53 to i8, !dbg !12234
  %55 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !12234
  store i8 %54, i8* %55, align 1, !dbg !12234
  %56 = load i32, i32* %51, align 4, !dbg !12234
  %57 = lshr i32 %56, 16, !dbg !12234
  %58 = trunc i32 %57 to i8, !dbg !12234
  %59 = getelementptr inbounds i8, i8* %1, i32 5, !dbg !12234
  store i8 %58, i8* %59, align 1, !dbg !12234
  %60 = load i32, i32* %51, align 4, !dbg !12234
  %61 = lshr i32 %60, 8, !dbg !12234
  %62 = trunc i32 %61 to i8, !dbg !12234
  %63 = getelementptr inbounds i8, i8* %1, i32 6, !dbg !12234
  store i8 %62, i8* %63, align 1, !dbg !12234
  %64 = load i32, i32* %51, align 4, !dbg !12234
  %65 = trunc i32 %64 to i8, !dbg !12234
  %66 = getelementptr inbounds i8, i8* %1, i32 7, !dbg !12234
  store i8 %65, i8* %66, align 1, !dbg !12234
  %67 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 2, !dbg !12236
  %68 = load i32, i32* %67, align 4, !dbg !12236
  %69 = lshr i32 %68, 24, !dbg !12236
  %70 = trunc i32 %69 to i8, !dbg !12236
  %71 = getelementptr inbounds i8, i8* %1, i32 8, !dbg !12236
  store i8 %70, i8* %71, align 1, !dbg !12236
  %72 = load i32, i32* %67, align 4, !dbg !12236
  %73 = lshr i32 %72, 16, !dbg !12236
  %74 = trunc i32 %73 to i8, !dbg !12236
  %75 = getelementptr inbounds i8, i8* %1, i32 9, !dbg !12236
  store i8 %74, i8* %75, align 1, !dbg !12236
  %76 = load i32, i32* %67, align 4, !dbg !12236
  %77 = lshr i32 %76, 8, !dbg !12236
  %78 = trunc i32 %77 to i8, !dbg !12236
  %79 = getelementptr inbounds i8, i8* %1, i32 10, !dbg !12236
  store i8 %78, i8* %79, align 1, !dbg !12236
  %80 = load i32, i32* %67, align 4, !dbg !12236
  %81 = trunc i32 %80 to i8, !dbg !12236
  %82 = getelementptr inbounds i8, i8* %1, i32 11, !dbg !12236
  store i8 %81, i8* %82, align 1, !dbg !12236
  %83 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 3, !dbg !12238
  %84 = load i32, i32* %83, align 4, !dbg !12238
  %85 = lshr i32 %84, 24, !dbg !12238
  %86 = trunc i32 %85 to i8, !dbg !12238
  %87 = getelementptr inbounds i8, i8* %1, i32 12, !dbg !12238
  store i8 %86, i8* %87, align 1, !dbg !12238
  %88 = load i32, i32* %83, align 4, !dbg !12238
  %89 = lshr i32 %88, 16, !dbg !12238
  %90 = trunc i32 %89 to i8, !dbg !12238
  %91 = getelementptr inbounds i8, i8* %1, i32 13, !dbg !12238
  store i8 %90, i8* %91, align 1, !dbg !12238
  %92 = load i32, i32* %83, align 4, !dbg !12238
  %93 = lshr i32 %92, 8, !dbg !12238
  %94 = trunc i32 %93 to i8, !dbg !12238
  %95 = getelementptr inbounds i8, i8* %1, i32 14, !dbg !12238
  store i8 %94, i8* %95, align 1, !dbg !12238
  %96 = load i32, i32* %83, align 4, !dbg !12238
  %97 = trunc i32 %96 to i8, !dbg !12238
  %98 = getelementptr inbounds i8, i8* %1, i32 15, !dbg !12238
  store i8 %97, i8* %98, align 1, !dbg !12238
  %99 = getelementptr inbounds %struct.mbedtls_sha1_context, %struct.mbedtls_sha1_context* %0, i32 0, i32 1, i32 4, !dbg !12240
  %100 = load i32, i32* %99, align 4, !dbg !12240
  %101 = lshr i32 %100, 24, !dbg !12240
  %102 = trunc i32 %101 to i8, !dbg !12240
  %103 = getelementptr inbounds i8, i8* %1, i32 16, !dbg !12240
  store i8 %102, i8* %103, align 1, !dbg !12240
  %104 = load i32, i32* %99, align 4, !dbg !12240
  %105 = lshr i32 %104, 16, !dbg !12240
  %106 = trunc i32 %105 to i8, !dbg !12240
  %107 = getelementptr inbounds i8, i8* %1, i32 17, !dbg !12240
  store i8 %106, i8* %107, align 1, !dbg !12240
  %108 = load i32, i32* %99, align 4, !dbg !12240
  %109 = lshr i32 %108, 8, !dbg !12240
  %110 = trunc i32 %109 to i8, !dbg !12240
  %111 = getelementptr inbounds i8, i8* %1, i32 18, !dbg !12240
  store i8 %110, i8* %111, align 1, !dbg !12240
  %112 = load i32, i32* %99, align 4, !dbg !12240
  %113 = trunc i32 %112 to i8, !dbg !12240
  %114 = getelementptr inbounds i8, i8* %1, i32 19, !dbg !12240
  store i8 %113, i8* %114, align 1, !dbg !12240
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !12242
  ret void, !dbg !12242
}

; Function Attrs: noinline nounwind optsize
define dso_local void @mbedtls_sha1(i8* noundef %0, i32 noundef %1, i8* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !12243 {
  %4 = alloca %struct.mbedtls_sha1_context, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !12247, metadata !DIExpression()), !dbg !12251
  call void @llvm.dbg.value(metadata i32 %1, metadata !12248, metadata !DIExpression()), !dbg !12251
  call void @llvm.dbg.value(metadata i8* %2, metadata !12249, metadata !DIExpression()), !dbg !12251
  %5 = bitcast %struct.mbedtls_sha1_context* %4 to i8*, !dbg !12252
  call void @llvm.lifetime.start.p0i8(i64 92, i8* nonnull %5) #23, !dbg !12252
  call void @llvm.dbg.declare(metadata %struct.mbedtls_sha1_context* %4, metadata !12250, metadata !DIExpression()), !dbg !12253
  call void @mbedtls_sha1_init(%struct.mbedtls_sha1_context* noundef nonnull %4) #25, !dbg !12254
  call void @mbedtls_sha1_starts(%struct.mbedtls_sha1_context* noundef nonnull %4) #25, !dbg !12255
  call void @mbedtls_sha1_update(%struct.mbedtls_sha1_context* noundef nonnull %4, i8* noundef %0, i32 noundef %1) #25, !dbg !12256
  call void @mbedtls_sha1_finish(%struct.mbedtls_sha1_context* noundef nonnull %4, i8* noundef %2) #25, !dbg !12257
  call void @mbedtls_sha1_free(%struct.mbedtls_sha1_context* noundef nonnull %4) #25, !dbg !12258
  call void @llvm.lifetime.end.p0i8(i64 92, i8* nonnull %5) #23, !dbg !12259
  ret void, !dbg !12259
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nofree nosync nounwind willreturn }
attributes #3 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { nofree noinline nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { argmemonly nofree nounwind willreturn }
attributes #10 = { nofree nosync nounwind willreturn }
attributes #11 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { argmemonly nofree nounwind willreturn writeonly }
attributes #14 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #16 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #19 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #21 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #22 = { mustprogress nofree noinline nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin nounwind optsize "no-builtins" }
attributes #25 = { nobuiltin optsize "no-builtins" }
attributes #26 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!1580, !1622, !1636, !2, !1683, !1686, !1691, !63, !1693, !99, !126, !1696, !1755, !1757, !1759, !144, !269, !332, !1763, !1782, !358, !547, !596, !909, !983, !1784, !1071, !1081, !1350, !1405, !1477, !1786, !1555, !1566}
!llvm.ident = !{!1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932, !1932}
!llvm.module.flags = !{!1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "buf", scope: !2, file: !3, line: 49, type: !58, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !15, globals: !24, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/bl_dbgprint.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 56, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/inc/bl_common.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14}
!9 = !DIEnumerator(name: "LOG_DEBUG", value: 0)
!10 = !DIEnumerator(name: "LOG_INFO", value: 1)
!11 = !DIEnumerator(name: "LOG_WARN", value: 2)
!12 = !DIEnumerator(name: "LOG_ERROR", value: 3)
!13 = !DIEnumerator(name: "LOG_CRIT", value: 4)
!14 = !DIEnumerator(name: "LOG_NONE", value: 5)
!15 = !{!7, !16, !21}
!16 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !17, line: 44, baseType: !18)
!17 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!18 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !19, line: 77, baseType: !20)
!19 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!20 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !17, line: 56, baseType: !22)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int64_t", file: !19, line: 103, baseType: !23)
!23 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!24 = !{!25, !0, !28, !47}
!25 = !DIGlobalVariableExpression(var: !26, expr: !DIExpression())
!26 = distinct !DIGlobalVariable(name: "debug_level", scope: !2, file: !3, line: 52, type: !27, isLocal: true, isDefinition: true)
!27 = !DIDerivedType(tag: DW_TAG_typedef, name: "bl_log_level_t", file: !6, line: 63, baseType: !5)
!28 = !DIGlobalVariableExpression(var: !29, expr: !DIExpression())
!29 = distinct !DIGlobalVariable(name: "rev", scope: !30, file: !3, line: 58, type: !44, isLocal: true, isDefinition: true)
!30 = distinct !DISubprogram(name: "bl_itoa", scope: !3, file: !3, line: 54, type: !31, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !38)
!31 = !DISubroutineType(types: !32)
!32 = !{null, !33, !36, !36}
!33 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 32)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 32)
!35 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !17, line: 48, baseType: !37)
!37 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !19, line: 79, baseType: !7)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DILocalVariable(name: "buf", arg: 1, scope: !30, file: !3, line: 54, type: !33)
!40 = !DILocalVariable(name: "i", arg: 2, scope: !30, file: !3, line: 54, type: !36)
!41 = !DILocalVariable(name: "base", arg: 3, scope: !30, file: !3, line: 54, type: !36)
!42 = !DILocalVariable(name: "s", scope: !30, file: !3, line: 56, type: !34)
!43 = !DILocalVariable(name: "rem", scope: !30, file: !3, line: 57, type: !36)
!44 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 168, elements: !45)
!45 = !{!46}
!46 = !DISubrange(count: 21)
!47 = !DIGlobalVariableExpression(var: !48, expr: !DIExpression())
!48 = distinct !DIGlobalVariable(name: "rev", scope: !49, file: !3, line: 85, type: !44, isLocal: true, isDefinition: true)
!49 = distinct !DISubprogram(name: "bl_itof", scope: !3, file: !3, line: 81, type: !50, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !52)
!50 = !DISubroutineType(types: !51)
!51 = !{null, !33, !16}
!52 = !{!53, !54, !55, !56, !57}
!53 = !DILocalVariable(name: "buf", arg: 1, scope: !49, file: !3, line: 81, type: !33)
!54 = !DILocalVariable(name: "i", arg: 2, scope: !49, file: !3, line: 81, type: !16)
!55 = !DILocalVariable(name: "s", scope: !49, file: !3, line: 83, type: !34)
!56 = !DILocalVariable(name: "rem", scope: !49, file: !3, line: 84, type: !16)
!57 = !DILocalVariable(name: "j", scope: !49, file: !3, line: 84, type: !16)
!58 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 4096, elements: !59)
!59 = !{!60}
!60 = !DISubrange(count: 512)
!61 = !DIGlobalVariableExpression(var: !62, expr: !DIExpression())
!62 = distinct !DIGlobalVariable(name: "gpt_ms", scope: !63, file: !64, line: 38, type: !77, isLocal: false, isDefinition: true)
!63 = distinct !DICompileUnit(language: DW_LANG_C99, file: !64, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !65, retainedTypes: !71, globals: !74, splitDebugInlining: false, nameTableKind: None)
!64 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/bl_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!65 = !{!66}
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !67, line: 137, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/inc/bl_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!68 = !{!69, !70}
!69 = !DIEnumerator(name: "BL_GPT_CLOCK_SOURCE_32K", value: 0)
!70 = !DIEnumerator(name: "BL_GPT_CLOCK_SOURCE_1M", value: 1)
!71 = !{!36, !72}
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 32)
!73 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!74 = !{!61, !75, !92, !95}
!75 = !DIGlobalVariableExpression(var: !76, expr: !DIExpression())
!76 = distinct !DIGlobalVariable(name: "gpt_us", scope: !63, file: !64, line: 39, type: !77, isLocal: false, isDefinition: true)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 32)
!78 = !DIDerivedType(tag: DW_TAG_typedef, name: "BL_GPT_REGISTER_T", file: !67, line: 72, baseType: !79)
!79 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 62, size: 288, elements: !80)
!80 = !{!81, !83, !84, !85, !87, !88, !89, !90, !91}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !79, file: !67, line: 63, baseType: !82, size: 32)
!82 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !36)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !79, file: !67, line: 64, baseType: !82, size: 32, offset: 32)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !79, file: !67, line: 65, baseType: !82, size: 32, offset: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !79, file: !67, line: 66, baseType: !86, size: 32, offset: 96)
!86 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !82)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !79, file: !67, line: 67, baseType: !82, size: 32, offset: 128)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !79, file: !67, line: 68, baseType: !82, size: 32, offset: 160)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !79, file: !67, line: 69, baseType: !82, size: 32, offset: 192)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !79, file: !67, line: 70, baseType: !82, size: 32, offset: 224)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !79, file: !67, line: 71, baseType: !82, size: 32, offset: 256)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "us_init_falg", scope: !63, file: !64, line: 41, type: !94, isLocal: false, isDefinition: true)
!94 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!95 = !DIGlobalVariableExpression(var: !96, expr: !DIExpression())
!96 = distinct !DIGlobalVariable(name: "ms_init_falg", scope: !63, file: !64, line: 42, type: !94, isLocal: false, isDefinition: true)
!97 = !DIGlobalVariableExpression(var: !98, expr: !DIExpression())
!98 = distinct !DIGlobalVariable(name: "g_current_capid", scope: !99, file: !100, line: 74, type: !36, isLocal: false, isDefinition: true)
!99 = distinct !DICompileUnit(language: DW_LANG_C99, file: !100, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !101, globals: !104, splitDebugInlining: false, nameTableKind: None)
!100 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/bl_dcxo_cal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!101 = !{!36, !102, !16}
!102 = !DIDerivedType(tag: DW_TAG_typedef, name: "BL_P_UINT_32", file: !103, line: 44, baseType: !72)
!103 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/inc/bl_mtk_bb_reg.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!104 = !{!97, !105}
!105 = !DIGlobalVariableExpression(var: !106, expr: !DIExpression())
!106 = distinct !DIGlobalVariable(name: "abist_fqmtr_register", scope: !99, file: !100, line: 73, type: !107, isLocal: true, isDefinition: true)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 32)
!108 = !DIDerivedType(tag: DW_TAG_typedef, name: "ABIST_FQMTR_REGISTER_T", file: !100, line: 71, baseType: !109)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !100, line: 61, size: 144, elements: !110)
!110 = !{!111, !116, !117, !118, !119, !120, !121, !122, !123}
!111 = !DIDerivedType(tag: DW_TAG_member, name: "ABIST_FQMTR_CON0", scope: !109, file: !100, line: 62, baseType: !112, size: 16)
!112 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !113)
!113 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !17, line: 36, baseType: !114)
!114 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !19, line: 57, baseType: !115)
!115 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!116 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !109, file: !100, line: 63, baseType: !112, size: 16, offset: 16)
!117 = !DIDerivedType(tag: DW_TAG_member, name: "ABIST_FQMTR_CON1", scope: !109, file: !100, line: 64, baseType: !112, size: 16, offset: 32)
!118 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !109, file: !100, line: 65, baseType: !112, size: 16, offset: 48)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "ABIST_FQMTR_CON2", scope: !109, file: !100, line: 66, baseType: !112, size: 16, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !109, file: !100, line: 67, baseType: !112, size: 16, offset: 80)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "ABIST_FQMTR_DATA", scope: !109, file: !100, line: 68, baseType: !112, size: 16, offset: 96)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !109, file: !100, line: 69, baseType: !112, size: 16, offset: 112)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "ABIST_FQMTR_DATA_MSB", scope: !109, file: !100, line: 70, baseType: !112, size: 16, offset: 128)
!124 = !DIGlobalVariableExpression(var: !125, expr: !DIExpression())
!125 = distinct !DIGlobalVariable(name: "bl_pmic_vmc_vr_control", scope: !126, file: !127, line: 39, type: !138, isLocal: false, isDefinition: true)
!126 = distinct !DICompileUnit(language: DW_LANG_C99, file: !127, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !128, retainedTypes: !134, globals: !135, splitDebugInlining: false, nameTableKind: None)
!127 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/bl_pmic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!128 = !{!129, !5}
!129 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !130, line: 58, baseType: !7, size: 32, elements: !131)
!130 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_pmic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!131 = !{!132, !133}
!132 = !DIEnumerator(name: "PMIC_I2C_MASTER", value: 0)
!133 = !DIEnumerator(name: "PMIC_I2C_MASTER_MAX", value: 1)
!134 = !{!72}
!135 = !{!136, !124}
!136 = !DIGlobalVariableExpression(var: !137, expr: !DIExpression())
!137 = distinct !DIGlobalVariable(name: "bl_pmic_vusb_vr_control", scope: !126, file: !127, line: 38, type: !138, isLocal: false, isDefinition: true)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = !DISubroutineType(types: !140)
!140 = !{null, !141}
!141 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!142 = !DIGlobalVariableExpression(var: !143, expr: !DIExpression())
!143 = distinct !DIGlobalVariable(name: "lzma_alloc_count", scope: !144, file: !145, line: 73, type: !20, isLocal: true, isDefinition: true)
!144 = distinct !DICompileUnit(language: DW_LANG_C99, file: !145, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !146, retainedTypes: !183, globals: !188, splitDebugInlining: false, nameTableKind: None)
!145 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/bl_fota.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!146 = !{!5, !147, !160, !171, !176}
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !148, line: 101, baseType: !7, size: 32, elements: !149)
!148 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/inc/bl_fota.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!149 = !{!150, !151, !152, !153, !154, !155, !156, !157, !158, !159}
!150 = !DIEnumerator(name: "BL_FOTA_ERROR_NONE", value: 0)
!151 = !DIEnumerator(name: "BL_FOTA_ERROR_LOADING_HEADER", value: 1)
!152 = !DIEnumerator(name: "BL_FOTA_ERROR_HEADER_FORMAT", value: 2)
!153 = !DIEnumerator(name: "BL_FOTA_ERROR_LOADING_BODY", value: 3)
!154 = !DIEnumerator(name: "BL_FOTA_ERROR_WRITE_TO_PARTITON", value: 4)
!155 = !DIEnumerator(name: "BL_FOTA_ERROR_LOADING_CHECKSUM", value: 5)
!156 = !DIEnumerator(name: "BL_FOTA_ERROR_CHECKSUM_VERIFY", value: 6)
!157 = !DIEnumerator(name: "BL_FOTA_ERROR_LOADING_MARKER", value: 7)
!158 = !DIEnumerator(name: "BL_FOTA_ERROR_ERASE_MARKER", value: 8)
!159 = !DIEnumerator(name: "BL_FOTA_ERROR_FS_OP", value: 9)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !161, line: 110, baseType: !20, size: 32, elements: !162)
!161 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!162 = !{!163, !164, !165, !166, !167, !168, !169, !170}
!163 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!164 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!165 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!166 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!167 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!168 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!169 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!170 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!171 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !161, line: 123, baseType: !7, size: 32, elements: !172)
!172 = !{!173, !174, !175}
!173 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!174 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!175 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !145, line: 54, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "INIT_PHASE", value: 0)
!179 = !DIEnumerator(name: "READ_PHASE", value: 1)
!180 = !DIEnumerator(name: "VERIFY_PHASE", value: 2)
!181 = !DIEnumerator(name: "UPDATE_PHASE", value: 3)
!182 = !DIEnumerator(name: "FINISH_PHASE", value: 4)
!183 = !{!184, !187}
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !17, line: 24, baseType: !186)
!186 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !19, line: 43, baseType: !141)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !36, size: 32)
!188 = !{!189, !208, !225, !228, !253, !258, !260, !265, !142}
!189 = !DIGlobalVariableExpression(var: !190, expr: !DIExpression())
!190 = distinct !DIGlobalVariable(name: "lzma_alloc", scope: !144, file: !145, line: 120, type: !191, isLocal: false, isDefinition: true)
!191 = !DIDerivedType(tag: DW_TAG_typedef, name: "lzma_alloc_t", file: !192, line: 69, baseType: !193)
!192 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_lzma_decode_interface.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !192, line: 66, size: 64, elements: !194)
!194 = !{!195, !204}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "Alloc", scope: !193, file: !192, line: 67, baseType: !196, size: 32)
!196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !197, size: 32)
!197 = !DISubroutineType(types: !198)
!198 = !{!199, !199, !200}
!199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !201, line: 40, baseType: !202)
!201 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/strings.h", directory: "/home/mjshen/RTOSExploration")
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "__size_t", file: !203, line: 131, baseType: !7)
!203 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!204 = !DIDerivedType(tag: DW_TAG_member, name: "Free", scope: !193, file: !192, line: 68, baseType: !205, size: 32, offset: 32)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 32)
!206 = !DISubroutineType(types: !207)
!207 = !{null, !199, !199}
!208 = !DIGlobalVariableExpression(var: !209, expr: !DIExpression())
!209 = distinct !DIGlobalVariable(name: "last_progress", scope: !210, file: !145, line: 318, type: !36, isLocal: true, isDefinition: true)
!210 = distinct !DISubprogram(name: "bl_fota_update_progress", scope: !145, file: !145, line: 305, type: !211, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !214)
!211 = !DISubroutineType(types: !212)
!212 = !{null, !213, !36}
!213 = !DIDerivedType(tag: DW_TAG_typedef, name: "bl_fota_progress_phase_t", file: !145, line: 60, baseType: !176)
!214 = !{!215, !216, !217, !222, !223, !224}
!215 = !DILocalVariable(name: "phase", arg: 1, scope: !210, file: !145, line: 305, type: !213)
!216 = !DILocalVariable(name: "progress", arg: 2, scope: !210, file: !145, line: 305, type: !36)
!217 = !DILocalVariable(name: "phase_portion", scope: !210, file: !145, line: 315, type: !218)
!218 = !DICompositeType(tag: DW_TAG_array_type, baseType: !219, size: 160, elements: !220)
!219 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !36)
!220 = !{!221}
!221 = !DISubrange(count: 5)
!222 = !DILocalVariable(name: "step", scope: !210, file: !145, line: 316, type: !219)
!223 = !DILocalVariable(name: "total_progress", scope: !210, file: !145, line: 319, type: !36)
!224 = !DILocalVariable(name: "i", scope: !210, file: !145, line: 320, type: !36)
!225 = !DIGlobalVariableExpression(var: !226, expr: !DIExpression())
!226 = distinct !DIGlobalVariable(name: "page_buffer", scope: !144, file: !145, line: 63, type: !227, isLocal: true, isDefinition: true)
!227 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 16384, elements: !59)
!228 = !DIGlobalVariableExpression(var: !229, expr: !DIExpression())
!229 = distinct !DIGlobalVariable(name: "fota_head_buf", scope: !144, file: !145, line: 67, type: !230, isLocal: true, isDefinition: true)
!230 = !DIDerivedType(tag: DW_TAG_typedef, name: "bl_fota_header_t", file: !148, line: 84, baseType: !231)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !148, line: 80, size: 320, elements: !232)
!232 = !{!233, !234, !235}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !231, file: !148, line: 81, baseType: !36, size: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "m_bin_num", scope: !231, file: !148, line: 82, baseType: !36, size: 32, offset: 32)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "m_bin_info", scope: !231, file: !148, line: 83, baseType: !236, size: 256, offset: 64)
!236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !237, size: 256, elements: !251)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "bl_fota_bin_info_t", file: !148, line: 78, baseType: !238)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !148, line: 69, size: 256, elements: !239)
!239 = !{!240, !241, !242, !243, !244, !245, !246, !247}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "m_bin_offset", scope: !238, file: !148, line: 70, baseType: !36, size: 32)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "m_bin_start_addr", scope: !238, file: !148, line: 71, baseType: !36, size: 32, offset: 32)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "m_bin_length", scope: !238, file: !148, line: 72, baseType: !36, size: 32, offset: 64)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "m_partition_length", scope: !238, file: !148, line: 73, baseType: !36, size: 32, offset: 96)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "m_sig_offset", scope: !238, file: !148, line: 74, baseType: !36, size: 32, offset: 128)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "m_sig_length", scope: !238, file: !148, line: 75, baseType: !36, size: 32, offset: 160)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "m_is_compressed", scope: !238, file: !148, line: 76, baseType: !36, size: 32, offset: 192)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "m_bin_reserved", scope: !238, file: !148, line: 77, baseType: !248, size: 32, offset: 224)
!248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 32, elements: !249)
!249 = !{!250}
!250 = !DISubrange(count: 4)
!251 = !{!252}
!252 = !DISubrange(count: 1)
!253 = !DIGlobalVariableExpression(var: !254, expr: !DIExpression())
!254 = distinct !DIGlobalVariable(name: "lzma_buf_0", scope: !144, file: !145, line: 75, type: !255, isLocal: true, isDefinition: true)
!255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 131072, elements: !256)
!256 = !{!257}
!257 = !DISubrange(count: 16384)
!258 = !DIGlobalVariableExpression(var: !259, expr: !DIExpression())
!259 = distinct !DIGlobalVariable(name: "lzma_buf_1", scope: !144, file: !145, line: 76, type: !255, isLocal: true, isDefinition: true)
!260 = !DIGlobalVariableExpression(var: !261, expr: !DIExpression())
!261 = distinct !DIGlobalVariable(name: "lzma_buf_2", scope: !144, file: !145, line: 77, type: !262, isLocal: true, isDefinition: true)
!262 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 32768, elements: !263)
!263 = !{!264}
!264 = !DISubrange(count: 4096)
!265 = !DIGlobalVariableExpression(var: !266, expr: !DIExpression())
!266 = distinct !DIGlobalVariable(name: "lzma_buf_3", scope: !144, file: !145, line: 78, type: !262, isLocal: true, isDefinition: true)
!267 = !DIGlobalVariableExpression(var: !268, expr: !DIExpression())
!268 = distinct !DIGlobalVariable(name: "emi_settings", scope: !269, file: !311, line: 40, type: !312, isLocal: false, isDefinition: true)
!269 = distinct !DICompileUnit(language: DW_LANG_C99, file: !270, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !271, retainedTypes: !276, globals: !278, splitDebugInlining: false, nameTableKind: None)
!270 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/emi/src/emi_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!271 = !{!5, !272}
!272 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !270, line: 408, baseType: !7, size: 32, elements: !273)
!273 = !{!274, !275}
!274 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!275 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!276 = !{!277}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !82, size: 32)
!278 = !{!267, !279, !281, !283, !285, !287, !289, !291, !293, !295, !297, !299, !301, !303, !305, !307, !309}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !269, file: !270, line: 47, type: !36, isLocal: false, isDefinition: true)
!281 = !DIGlobalVariableExpression(var: !282, expr: !DIExpression())
!282 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !269, file: !270, line: 48, type: !36, isLocal: false, isDefinition: true)
!283 = !DIGlobalVariableExpression(var: !284, expr: !DIExpression())
!284 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !269, file: !270, line: 49, type: !36, isLocal: false, isDefinition: true)
!285 = !DIGlobalVariableExpression(var: !286, expr: !DIExpression())
!286 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !269, file: !270, line: 50, type: !36, isLocal: false, isDefinition: true)
!287 = !DIGlobalVariableExpression(var: !288, expr: !DIExpression())
!288 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !269, file: !270, line: 51, type: !36, isLocal: false, isDefinition: true)
!289 = !DIGlobalVariableExpression(var: !290, expr: !DIExpression())
!290 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !269, file: !270, line: 52, type: !36, isLocal: false, isDefinition: true)
!291 = !DIGlobalVariableExpression(var: !292, expr: !DIExpression())
!292 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !269, file: !270, line: 53, type: !36, isLocal: false, isDefinition: true)
!293 = !DIGlobalVariableExpression(var: !294, expr: !DIExpression())
!294 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !269, file: !270, line: 54, type: !36, isLocal: false, isDefinition: true)
!295 = !DIGlobalVariableExpression(var: !296, expr: !DIExpression())
!296 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !269, file: !270, line: 55, type: !36, isLocal: false, isDefinition: true)
!297 = !DIGlobalVariableExpression(var: !298, expr: !DIExpression())
!298 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !269, file: !270, line: 56, type: !36, isLocal: false, isDefinition: true)
!299 = !DIGlobalVariableExpression(var: !300, expr: !DIExpression())
!300 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !269, file: !270, line: 57, type: !36, isLocal: false, isDefinition: true)
!301 = !DIGlobalVariableExpression(var: !302, expr: !DIExpression())
!302 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !269, file: !270, line: 58, type: !36, isLocal: false, isDefinition: true)
!303 = !DIGlobalVariableExpression(var: !304, expr: !DIExpression())
!304 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !269, file: !270, line: 59, type: !36, isLocal: false, isDefinition: true)
!305 = !DIGlobalVariableExpression(var: !306, expr: !DIExpression())
!306 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !269, file: !270, line: 60, type: !36, isLocal: false, isDefinition: true)
!307 = !DIGlobalVariableExpression(var: !308, expr: !DIExpression())
!308 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !269, file: !270, line: 61, type: !36, isLocal: false, isDefinition: true)
!309 = !DIGlobalVariableExpression(var: !310, expr: !DIExpression())
!310 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !269, file: !270, line: 62, type: !36, isLocal: false, isDefinition: true)
!311 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/emi/inc/custom_emi.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !313, size: 416, elements: !251)
!313 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !314, line: 54, baseType: !315)
!314 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/emi/inc/emi_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !314, line: 39, size: 416, elements: !316)
!316 = !{!317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329}
!317 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !315, file: !314, line: 40, baseType: !36, size: 32)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !315, file: !314, line: 41, baseType: !36, size: 32, offset: 32)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !315, file: !314, line: 42, baseType: !36, size: 32, offset: 64)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !315, file: !314, line: 43, baseType: !36, size: 32, offset: 96)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !315, file: !314, line: 44, baseType: !36, size: 32, offset: 128)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !315, file: !314, line: 45, baseType: !36, size: 32, offset: 160)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !315, file: !314, line: 46, baseType: !36, size: 32, offset: 192)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !315, file: !314, line: 47, baseType: !36, size: 32, offset: 224)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !315, file: !314, line: 48, baseType: !36, size: 32, offset: 256)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !315, file: !314, line: 49, baseType: !36, size: 32, offset: 288)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !315, file: !314, line: 50, baseType: !36, size: 32, offset: 320)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !315, file: !314, line: 51, baseType: !36, size: 32, offset: 352)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !315, file: !314, line: 52, baseType: !36, size: 32, offset: 384)
!330 = !DIGlobalVariableExpression(var: !331, expr: !DIExpression())
!331 = distinct !DIGlobalVariable(name: "debug_node_counter", scope: !332, file: !333, line: 99, type: !7, isLocal: false, isDefinition: true)
!332 = distinct !DICompileUnit(language: DW_LANG_C99, file: !333, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !334, globals: !339, splitDebugInlining: false, nameTableKind: None)
!333 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/emi/src/memory_test.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!334 = !{!7, !335, !337, !72}
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 32)
!336 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !141)
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !115)
!339 = !{!340, !330, !353}
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "debug_info", scope: !332, file: !333, line: 98, type: !342, isLocal: false, isDefinition: true)
!342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !343, size: 3200, elements: !351)
!343 = !DIDerivedType(tag: DW_TAG_typedef, name: "debug_array", file: !333, line: 57, baseType: !344)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !333, line: 51, size: 160, elements: !345)
!345 = !{!346, !347, !348, !349, !350}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_num", scope: !344, file: !333, line: 52, baseType: !7, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "bit_num", scope: !344, file: !333, line: 53, baseType: !7, size: 32, offset: 32)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "pattern", scope: !344, file: !333, line: 54, baseType: !7, size: 32, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !344, file: !333, line: 55, baseType: !7, size: 32, offset: 96)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !344, file: !333, line: 56, baseType: !7, size: 32, offset: 128)
!351 = !{!352}
!352 = !DISubrange(count: 20)
!353 = !DIGlobalVariableExpression(var: !354, expr: !DIExpression())
!354 = distinct !DIGlobalVariable(name: "counter", scope: !332, file: !333, line: 100, type: !355, isLocal: false, isDefinition: true)
!355 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 640, elements: !351)
!356 = !DIGlobalVariableExpression(var: !357, expr: !DIExpression())
!357 = distinct !DIGlobalVariable(name: "i2c_master_register", scope: !358, file: !359, line: 46, type: !482, isLocal: false, isDefinition: true)
!358 = distinct !DICompileUnit(language: DW_LANG_C99, file: !359, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !360, globals: !466, splitDebugInlining: false, nameTableKind: None)
!359 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_i2c_master_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!360 = !{!361, !372, !432, !442, !459}
!361 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !362, line: 137, baseType: !7, size: 32, elements: !363)
!362 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!363 = !{!364, !365, !366, !367, !368, !369, !370, !371}
!364 = !DIEnumerator(name: "PDMA_START_CHANNEL", value: 1)
!365 = !DIEnumerator(name: "PDMA_MSDC1", value: 1)
!366 = !DIEnumerator(name: "PDMA_MSDC2", value: 2)
!367 = !DIEnumerator(name: "PDMA_I2C0_TX", value: 3)
!368 = !DIEnumerator(name: "PDMA_I2C0_RX", value: 4)
!369 = !DIEnumerator(name: "PDMA_I2C1_TX", value: 5)
!370 = !DIEnumerator(name: "PDMA_I2C1_RX", value: 6)
!371 = !DIEnumerator(name: "PDMA_END_CHANNEL", value: 7)
!372 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !373, line: 1170, baseType: !7, size: 32, elements: !374)
!373 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!374 = !{!375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431}
!375 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!376 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!377 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!378 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!379 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!380 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!381 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!382 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!383 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!384 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!385 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!386 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!387 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!388 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!389 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!390 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!391 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!392 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!393 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!394 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!395 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!396 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!397 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!398 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!399 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!400 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!401 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!402 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!403 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!404 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!405 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!406 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!407 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!408 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!409 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!410 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!411 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!412 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!413 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!414 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!415 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!416 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!417 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!418 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!419 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!420 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!421 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!422 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!423 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!424 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!425 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!426 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!427 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!428 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!429 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!430 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!431 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!432 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !433, line: 132, baseType: !7, size: 32, elements: !434)
!433 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_i2c_master_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!434 = !{!435, !436, !437, !438, !439, !440, !441}
!435 = !DIEnumerator(name: "I2C_FREQUENCY_50K", value: 50)
!436 = !DIEnumerator(name: "I2C_FREQUENCY_100K", value: 100)
!437 = !DIEnumerator(name: "I2C_FREQUENCY_200K", value: 200)
!438 = !DIEnumerator(name: "I2C_FREQUENCY_300K", value: 300)
!439 = !DIEnumerator(name: "I2C_FREQUENCY_400K", value: 400)
!440 = !DIEnumerator(name: "I2C_FREQUENCY_1M", value: 1000)
!441 = !DIEnumerator(name: "I2C_FREQUENCY_MAX", value: 1001)
!442 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !433, line: 142, baseType: !7, size: 32, elements: !443)
!443 = !{!444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458}
!444 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_POLLING", value: 0)
!445 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_DMA", value: 1)
!446 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_POLLING", value: 2)
!447 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_RECEIVE_DMA", value: 3)
!448 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_POLLING", value: 4)
!449 = !DIEnumerator(name: "I2C_TRANSACTION_PUSH_PULL_SEND_TO_RECEIVE_DMA", value: 5)
!450 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_POLLING", value: 6)
!451 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA", value: 7)
!452 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_POLLING", value: 8)
!453 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA", value: 9)
!454 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_POLLING", value: 10)
!455 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA", value: 11)
!456 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_DMA_EXTEND", value: 12)
!457 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_RECEIVE_DMA_EXTEND", value: 13)
!458 = !DIEnumerator(name: "I2C_TRANSACTION_OPEN_DRAIN_SEND_TO_RECEIVE_DMA_EXTEND", value: 14)
!459 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !433, line: 162, baseType: !20, size: 32, elements: !460)
!460 = !{!461, !462, !463, !464, !465}
!461 = !DIEnumerator(name: "I2C_TRANSACTION_UNKNOWN_ERROR", value: -4)
!462 = !DIEnumerator(name: "I2C_TRANSACTION_ACK_ERROR", value: -3)
!463 = !DIEnumerator(name: "I2C_TRANSACTION_NACK_ERROR", value: -2)
!464 = !DIEnumerator(name: "I2C_TRANSACTION_TIMEOUT_ERROR", value: -1)
!465 = !DIEnumerator(name: "I2C_TRANSACTION_SUCCESS", value: 0)
!466 = !{!356, !467, !472, !474, !479}
!467 = !DIGlobalVariableExpression(var: !468, expr: !DIExpression())
!468 = distinct !DIGlobalVariable(name: "g_i2c_tx_dma_channel", scope: !358, file: !359, line: 47, type: !469, isLocal: false, isDefinition: true)
!469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !470, size: 128, elements: !249)
!470 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !471)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_channel_t", file: !362, line: 147, baseType: !361)
!472 = !DIGlobalVariableExpression(var: !473, expr: !DIExpression())
!473 = distinct !DIGlobalVariable(name: "g_i2c_rx_dma_channel", scope: !358, file: !359, line: 48, type: !469, isLocal: false, isDefinition: true)
!474 = !DIGlobalVariableExpression(var: !475, expr: !DIExpression())
!475 = distinct !DIGlobalVariable(name: "g_i2c_pdn_table", scope: !358, file: !359, line: 49, type: !476, isLocal: false, isDefinition: true)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !477, size: 128, elements: !249)
!477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !478)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !373, line: 1237, baseType: !372)
!479 = !DIGlobalVariableExpression(var: !480, expr: !DIExpression())
!480 = distinct !DIGlobalVariable(name: "g_i2c_source_clock_table", scope: !358, file: !359, line: 52, type: !481, isLocal: false, isDefinition: true)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 128, elements: !249)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 128, elements: !249)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 32)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "I2C_REGISTER_T", file: !486, line: 1885, baseType: !487)
!486 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!487 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !486, line: 1833, size: 960, elements: !488)
!488 = !{!489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544}
!489 = !DIDerivedType(tag: DW_TAG_member, name: "DATA_PORT", scope: !487, file: !486, line: 1834, baseType: !112, size: 16)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !487, file: !486, line: 1835, baseType: !112, size: 16, offset: 16)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "SLAVE_ADDR", scope: !487, file: !486, line: 1836, baseType: !112, size: 16, offset: 32)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !487, file: !486, line: 1837, baseType: !112, size: 16, offset: 48)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_MASK", scope: !487, file: !486, line: 1838, baseType: !112, size: 16, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !487, file: !486, line: 1839, baseType: !112, size: 16, offset: 80)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "INTR_STAT", scope: !487, file: !486, line: 1840, baseType: !112, size: 16, offset: 96)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !487, file: !486, line: 1841, baseType: !112, size: 16, offset: 112)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "CONTROL", scope: !487, file: !486, line: 1842, baseType: !112, size: 16, offset: 128)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !487, file: !486, line: 1843, baseType: !112, size: 16, offset: 144)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN", scope: !487, file: !486, line: 1844, baseType: !112, size: 16, offset: 160)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !487, file: !486, line: 1845, baseType: !112, size: 16, offset: 176)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSAC_LEN", scope: !487, file: !486, line: 1846, baseType: !112, size: 16, offset: 192)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !487, file: !486, line: 1847, baseType: !112, size: 16, offset: 208)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "DELAY_LEN", scope: !487, file: !486, line: 1848, baseType: !112, size: 16, offset: 224)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !487, file: !486, line: 1849, baseType: !112, size: 16, offset: 240)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "TIMING", scope: !487, file: !486, line: 1850, baseType: !112, size: 16, offset: 256)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !487, file: !486, line: 1851, baseType: !112, size: 16, offset: 272)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "START", scope: !487, file: !486, line: 1852, baseType: !112, size: 16, offset: 288)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !487, file: !486, line: 1853, baseType: !112, size: 16, offset: 304)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !487, file: !486, line: 1854, baseType: !510, size: 32, offset: 320)
!510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !112, size: 32, elements: !511)
!511 = !{!512}
!512 = !DISubrange(count: 2)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "CLOCK_DIV", scope: !487, file: !486, line: 1855, baseType: !112, size: 16, offset: 352)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !487, file: !486, line: 1856, baseType: !112, size: 16, offset: 368)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_STAT", scope: !487, file: !486, line: 1857, baseType: !112, size: 16, offset: 384)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !487, file: !486, line: 1858, baseType: !112, size: 16, offset: 400)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_THRESH", scope: !487, file: !486, line: 1859, baseType: !112, size: 16, offset: 416)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !487, file: !486, line: 1860, baseType: !112, size: 16, offset: 432)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "FIFO_ADDR_CLR", scope: !487, file: !486, line: 1861, baseType: !112, size: 16, offset: 448)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !487, file: !486, line: 1862, baseType: !112, size: 16, offset: 464)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !487, file: !486, line: 1863, baseType: !510, size: 32, offset: 480)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "IO_CONFIG", scope: !487, file: !486, line: 1864, baseType: !112, size: 16, offset: 512)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !487, file: !486, line: 1865, baseType: !112, size: 16, offset: 528)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !487, file: !486, line: 1866, baseType: !510, size: 32, offset: 544)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "HS", scope: !487, file: !486, line: 1867, baseType: !112, size: 16, offset: 576)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !487, file: !486, line: 1868, baseType: !112, size: 16, offset: 592)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !487, file: !486, line: 1869, baseType: !510, size: 32, offset: 608)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "SOFTRESET", scope: !487, file: !486, line: 1870, baseType: !112, size: 16, offset: 640)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !487, file: !486, line: 1871, baseType: !112, size: 16, offset: 656)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !487, file: !486, line: 1872, baseType: !531, size: 96, offset: 672)
!531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !112, size: 96, elements: !532)
!532 = !{!533}
!533 = !DISubrange(count: 6)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "SPARE", scope: !487, file: !486, line: 1873, baseType: !112, size: 16, offset: 768)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !487, file: !486, line: 1874, baseType: !112, size: 16, offset: 784)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGSTAT", scope: !487, file: !486, line: 1875, baseType: !112, size: 16, offset: 800)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !487, file: !486, line: 1876, baseType: !112, size: 16, offset: 816)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "DEBUGCTRL", scope: !487, file: !486, line: 1877, baseType: !112, size: 16, offset: 832)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !487, file: !486, line: 1878, baseType: !112, size: 16, offset: 848)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "TRANSFER_LEN_AUX", scope: !487, file: !486, line: 1879, baseType: !112, size: 16, offset: 864)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !487, file: !486, line: 1880, baseType: !112, size: 16, offset: 880)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !487, file: !486, line: 1881, baseType: !510, size: 32, offset: 896)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "TIMEOUT", scope: !487, file: !486, line: 1882, baseType: !112, size: 16, offset: 928)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !487, file: !486, line: 1883, baseType: !112, size: 16, offset: 944)
!545 = !DIGlobalVariableExpression(var: !546, expr: !DIExpression())
!546 = distinct !DIGlobalVariable(name: "DelayResume", scope: !547, file: !548, line: 55, type: !94, isLocal: false, isDefinition: true)
!547 = distinct !DICompileUnit(language: DW_LANG_C99, file: !548, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !549, retainedTypes: !563, globals: !593, splitDebugInlining: false, nameTableKind: None)
!548 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!549 = !{!550, !558}
!550 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !551, line: 51, baseType: !7, size: 32, elements: !552)
!551 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!552 = !{!553, !554, !555, !556, !557}
!553 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!554 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!555 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!556 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!557 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!558 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !551, line: 62, baseType: !7, size: 32, elements: !559)
!559 = !{!560, !561, !562}
!560 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!561 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!562 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!563 = !{!564, !586, !184, !36, !7, !187, !72, !592, !335}
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!565 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !486, line: 2777, baseType: !566)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !486, line: 2758, size: 576, elements: !567)
!567 = !{!568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !566, file: !486, line: 2759, baseType: !82, size: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !566, file: !486, line: 2760, baseType: !82, size: 32, offset: 32)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !566, file: !486, line: 2761, baseType: !82, size: 32, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !566, file: !486, line: 2762, baseType: !82, size: 32, offset: 96)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !566, file: !486, line: 2763, baseType: !82, size: 32, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !566, file: !486, line: 2764, baseType: !82, size: 32, offset: 160)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !566, file: !486, line: 2765, baseType: !82, size: 32, offset: 192)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !566, file: !486, line: 2766, baseType: !82, size: 32, offset: 224)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !566, file: !486, line: 2767, baseType: !82, size: 32, offset: 256)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !566, file: !486, line: 2768, baseType: !82, size: 32, offset: 288)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !566, file: !486, line: 2769, baseType: !82, size: 32, offset: 320)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !566, file: !486, line: 2770, baseType: !82, size: 32, offset: 352)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !566, file: !486, line: 2771, baseType: !82, size: 32, offset: 384)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !566, file: !486, line: 2772, baseType: !82, size: 32, offset: 416)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !566, file: !486, line: 2773, baseType: !82, size: 32, offset: 448)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !566, file: !486, line: 2774, baseType: !82, size: 32, offset: 480)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !566, file: !486, line: 2775, baseType: !82, size: 32, offset: 512)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !566, file: !486, line: 2776, baseType: !82, size: 32, offset: 544)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !486, line: 2801, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !486, line: 2798, size: 64, elements: !589)
!589 = !{!590, !591}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !588, file: !486, line: 2799, baseType: !82, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !588, file: !486, line: 2800, baseType: !82, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 32)
!593 = !{!545}
!594 = !DIGlobalVariableExpression(var: !595, expr: !DIExpression())
!595 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !596, file: !597, line: 334, type: !94, isLocal: false, isDefinition: true)
!596 = distinct !DICompileUnit(language: DW_LANG_C99, file: !597, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !598, retainedTypes: !755, globals: !897, splitDebugInlining: false, nameTableKind: None)
!597 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!598 = !{!66, !599, !690, !700, !711, !720, !724, !731, !736, !750}
!599 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !600, line: 58, baseType: !20, size: 32, elements: !601)
!600 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!601 = !{!602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!602 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!603 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!604 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!605 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!606 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!607 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!608 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!609 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!610 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!611 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!612 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!613 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!614 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!615 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!616 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!617 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!618 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!619 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!620 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!621 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!622 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!623 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!624 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!625 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!626 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!627 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!628 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!629 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!630 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!631 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!632 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!633 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!634 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!635 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!636 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!637 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!638 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!639 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!640 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!641 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!642 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!643 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!644 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!645 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!646 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!647 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!648 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!649 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!650 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!651 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!652 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!653 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!654 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!655 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!656 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!657 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!658 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!659 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!660 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!661 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!662 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!663 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!664 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!665 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!666 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!667 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!668 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!669 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!670 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!671 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!672 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!673 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!674 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!675 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!676 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!677 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!678 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!679 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!680 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!681 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!682 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!683 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!684 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!685 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!686 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!687 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!688 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!689 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 73, baseType: !7, size: 32, elements: !692)
!691 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!692 = !{!693, !694, !695, !696, !697, !698, !699}
!693 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!694 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!695 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!696 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!697 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!698 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!699 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!700 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 51, baseType: !7, size: 32, elements: !701)
!701 = !{!702, !703, !704, !705, !706, !707, !708, !709, !710}
!702 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!703 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!704 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!705 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!706 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!707 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!708 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!709 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!710 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 83, baseType: !7, size: 32, elements: !712)
!712 = !{!713, !714, !715, !716, !717, !718, !719}
!713 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!714 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!715 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!716 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!717 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!718 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!719 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!720 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !691, line: 98, baseType: !7, size: 32, elements: !721)
!721 = !{!722, !723}
!722 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!723 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!724 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !597, line: 298, baseType: !7, size: 32, elements: !725)
!725 = !{!726, !727, !728, !729, !730}
!726 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!727 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!728 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!729 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!730 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!731 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !732, line: 76, baseType: !7, size: 32, elements: !733)
!732 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!733 = !{!734, !735}
!734 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!735 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!736 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !732, line: 208, baseType: !7, size: 32, elements: !737)
!737 = !{!738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749}
!738 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!739 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!740 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!741 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!742 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!743 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!744 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!745 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!746 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!747 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!748 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!749 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!750 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !732, line: 81, baseType: !7, size: 32, elements: !751)
!751 = !{!752, !753, !754}
!752 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!753 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!754 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!755 = !{!199, !184, !36, !756, !762, !784, !786, !141}
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 32)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !486, line: 2801, baseType: !758)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !486, line: 2798, size: 64, elements: !759)
!759 = !{!760, !761}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !758, file: !486, line: 2799, baseType: !82, size: 32)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !758, file: !486, line: 2800, baseType: !82, size: 32, offset: 32)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !763, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !486, line: 2777, baseType: !764)
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !486, line: 2758, size: 576, elements: !765)
!765 = !{!766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !764, file: !486, line: 2759, baseType: !82, size: 32)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !764, file: !486, line: 2760, baseType: !82, size: 32, offset: 32)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !764, file: !486, line: 2761, baseType: !82, size: 32, offset: 64)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !764, file: !486, line: 2762, baseType: !82, size: 32, offset: 96)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !764, file: !486, line: 2763, baseType: !82, size: 32, offset: 128)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !764, file: !486, line: 2764, baseType: !82, size: 32, offset: 160)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !764, file: !486, line: 2765, baseType: !82, size: 32, offset: 192)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !764, file: !486, line: 2766, baseType: !82, size: 32, offset: 224)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !764, file: !486, line: 2767, baseType: !82, size: 32, offset: 256)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !764, file: !486, line: 2768, baseType: !82, size: 32, offset: 288)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !764, file: !486, line: 2769, baseType: !82, size: 32, offset: 320)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !764, file: !486, line: 2770, baseType: !82, size: 32, offset: 352)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !764, file: !486, line: 2771, baseType: !82, size: 32, offset: 384)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !764, file: !486, line: 2772, baseType: !82, size: 32, offset: 416)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !764, file: !486, line: 2773, baseType: !82, size: 32, offset: 448)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !764, file: !486, line: 2774, baseType: !82, size: 32, offset: 480)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !764, file: !486, line: 2775, baseType: !82, size: 32, offset: 512)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !764, file: !486, line: 2776, baseType: !82, size: 32, offset: 544)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 32)
!785 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !185)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 32)
!787 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !732, line: 193, baseType: !788)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !732, line: 134, size: 1824, elements: !789)
!789 = !{!790, !791, !792, !799, !805, !809, !817, !818, !825, !826, !827, !828, !837, !840, !870, !871, !872, !873, !874, !875, !876, !880, !881, !882, !883, !884, !885, !886, !887, !891, !892, !896}
!790 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !788, file: !732, line: 136, baseType: !36, size: 32)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !788, file: !732, line: 137, baseType: !184, size: 32, offset: 32)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !788, file: !732, line: 138, baseType: !793, size: 32, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !794, line: 56, baseType: !795)
!794 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 32)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 54, size: 8, elements: !797)
!797 = !{!798}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !796, file: !794, line: 55, baseType: !185, size: 8)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !788, file: !732, line: 139, baseType: !800, size: 32, offset: 96)
!800 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !794, line: 46, baseType: !801)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 32)
!802 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 44, size: 8, elements: !803)
!803 = !{!804}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !802, file: !794, line: 45, baseType: !185, size: 8)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !788, file: !732, line: 140, baseType: !806, size: 8, offset: 128)
!806 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !17, line: 20, baseType: !807)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !19, line: 41, baseType: !808)
!808 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !788, file: !732, line: 143, baseType: !810, size: 32, offset: 160)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !812, line: 146, baseType: !813)
!812 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 143, size: 64, elements: !814)
!814 = !{!815, !816}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !813, file: !812, line: 144, baseType: !36, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !813, file: !812, line: 145, baseType: !36, size: 32, offset: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !788, file: !732, line: 144, baseType: !184, size: 32, offset: 192)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !788, file: !732, line: 145, baseType: !819, size: 32, offset: 224)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 32)
!820 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !812, line: 152, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 149, size: 64, elements: !822)
!822 = !{!823, !824}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !821, file: !812, line: 150, baseType: !36, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !821, file: !812, line: 151, baseType: !36, size: 32, offset: 32)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !788, file: !732, line: 146, baseType: !184, size: 32, offset: 256)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !788, file: !732, line: 147, baseType: !36, size: 32, offset: 288)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !788, file: !732, line: 148, baseType: !184, size: 32, offset: 320)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !788, file: !732, line: 151, baseType: !829, size: 1024, offset: 352)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !830, size: 1024, elements: !835)
!830 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !812, line: 170, baseType: !831)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 167, size: 64, elements: !832)
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !831, file: !812, line: 168, baseType: !36, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !831, file: !812, line: 169, baseType: !36, size: 32, offset: 32)
!835 = !{!836, !512}
!836 = !DISubrange(count: 8)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !788, file: !732, line: 155, baseType: !838, size: 32, offset: 1376)
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !691, line: 120, baseType: !185)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !788, file: !732, line: 156, baseType: !841, size: 32, offset: 1408)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !732, line: 124, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !732, line: 90, size: 200, elements: !844)
!844 = !{!845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !843, file: !732, line: 91, baseType: !185, size: 8)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !843, file: !732, line: 92, baseType: !185, size: 8, offset: 8)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !843, file: !732, line: 94, baseType: !185, size: 8, offset: 16)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !843, file: !732, line: 95, baseType: !185, size: 8, offset: 24)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !843, file: !732, line: 96, baseType: !185, size: 8, offset: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !843, file: !732, line: 98, baseType: !185, size: 8, offset: 40)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !843, file: !732, line: 99, baseType: !185, size: 8, offset: 48)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !843, file: !732, line: 100, baseType: !185, size: 8, offset: 56)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !843, file: !732, line: 101, baseType: !185, size: 8, offset: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !843, file: !732, line: 103, baseType: !185, size: 8, offset: 72)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !843, file: !732, line: 104, baseType: !185, size: 8, offset: 80)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !843, file: !732, line: 106, baseType: !185, size: 8, offset: 88)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !843, file: !732, line: 107, baseType: !185, size: 8, offset: 96)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !843, file: !732, line: 108, baseType: !185, size: 8, offset: 104)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !843, file: !732, line: 109, baseType: !185, size: 8, offset: 112)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !843, file: !732, line: 110, baseType: !185, size: 8, offset: 120)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !843, file: !732, line: 111, baseType: !185, size: 8, offset: 128)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !843, file: !732, line: 112, baseType: !185, size: 8, offset: 136)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !843, file: !732, line: 114, baseType: !185, size: 8, offset: 144)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !843, file: !732, line: 115, baseType: !185, size: 8, offset: 152)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !843, file: !732, line: 118, baseType: !185, size: 8, offset: 160)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !843, file: !732, line: 119, baseType: !185, size: 8, offset: 168)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !843, file: !732, line: 120, baseType: !185, size: 8, offset: 176)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !843, file: !732, line: 121, baseType: !185, size: 8, offset: 184)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !843, file: !732, line: 122, baseType: !185, size: 8, offset: 192)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !788, file: !732, line: 157, baseType: !36, size: 32, offset: 1440)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !788, file: !732, line: 158, baseType: !113, size: 16, offset: 1472)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !788, file: !732, line: 159, baseType: !113, size: 16, offset: 1488)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !788, file: !732, line: 163, baseType: !113, size: 16, offset: 1504)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !788, file: !732, line: 164, baseType: !113, size: 16, offset: 1520)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !788, file: !732, line: 167, baseType: !185, size: 8, offset: 1536)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !788, file: !732, line: 168, baseType: !877, size: 24, offset: 1544)
!877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 24, elements: !878)
!878 = !{!879}
!879 = !DISubrange(count: 3)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !788, file: !732, line: 169, baseType: !185, size: 8, offset: 1568)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !788, file: !732, line: 170, baseType: !185, size: 8, offset: 1576)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !788, file: !732, line: 173, baseType: !113, size: 16, offset: 1584)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !788, file: !732, line: 174, baseType: !36, size: 32, offset: 1600)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !788, file: !732, line: 175, baseType: !36, size: 32, offset: 1632)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !788, file: !732, line: 178, baseType: !94, size: 8, offset: 1664)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !788, file: !732, line: 179, baseType: !94, size: 8, offset: 1672)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !788, file: !732, line: 182, baseType: !888, size: 32, offset: 1696)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 32)
!889 = !DISubroutineType(types: !890)
!890 = !{!20, !199}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !788, file: !732, line: 186, baseType: !888, size: 32, offset: 1728)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !788, file: !732, line: 187, baseType: !893, size: 32, offset: 1760)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 32)
!894 = !DISubroutineType(types: !895)
!895 = !{!20, !199, !36, !199, !36}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !788, file: !732, line: 188, baseType: !893, size: 32, offset: 1792)
!897 = !{!594, !898, !900, !902}
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !596, file: !597, line: 382, type: !36, isLocal: false, isDefinition: true)
!900 = !DIGlobalVariableExpression(var: !901, expr: !DIExpression())
!901 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !596, file: !597, line: 383, type: !36, isLocal: false, isDefinition: true)
!902 = !DIGlobalVariableExpression(var: !903, expr: !DIExpression())
!903 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !596, file: !597, line: 369, type: !904, isLocal: true, isDefinition: true)
!904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 1024, elements: !905)
!905 = !{!906}
!906 = !DISubrange(count: 128)
!907 = !DIGlobalVariableExpression(var: !908, expr: !DIExpression())
!908 = distinct !DIGlobalVariable(name: "sfi_index", scope: !909, file: !910, line: 99, type: !20, isLocal: false, isDefinition: true)
!909 = distinct !DICompileUnit(language: DW_LANG_C99, file: !910, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !911, retainedTypes: !925, globals: !948, splitDebugInlining: false, nameTableKind: None)
!910 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_flash_custom_sfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!911 = !{!912}
!912 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !913, line: 62, baseType: !7, size: 32, elements: !914)
!913 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom_sfi.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!914 = !{!915, !916, !917, !918, !919, !920, !921, !922, !923, !924}
!915 = !DIEnumerator(name: "SFC_MAC_CTL", value: 0)
!916 = !DIEnumerator(name: "SFC_DR_CTL", value: 1)
!917 = !DIEnumerator(name: "SFC_MISC_CTL", value: 2)
!918 = !DIEnumerator(name: "SFC_MISC_CTL2", value: 3)
!919 = !DIEnumerator(name: "SFC_DLY_CTL2", value: 4)
!920 = !DIEnumerator(name: "SFC_DLY_CTL3", value: 5)
!921 = !DIEnumerator(name: "SFC_Driving", value: 6)
!922 = !DIEnumerator(name: "SFC_Reserved", value: 7)
!923 = !DIEnumerator(name: "SFC_DLY_CTL4", value: 8)
!924 = !DIEnumerator(name: "SFC_DLY_CTL5", value: 9)
!925 = !{!7, !72, !926, !337}
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 32)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !486, line: 2777, baseType: !928)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !486, line: 2758, size: 576, elements: !929)
!929 = !{!930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !928, file: !486, line: 2759, baseType: !82, size: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !928, file: !486, line: 2760, baseType: !82, size: 32, offset: 32)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !928, file: !486, line: 2761, baseType: !82, size: 32, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !928, file: !486, line: 2762, baseType: !82, size: 32, offset: 96)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !928, file: !486, line: 2763, baseType: !82, size: 32, offset: 128)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !928, file: !486, line: 2764, baseType: !82, size: 32, offset: 160)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !928, file: !486, line: 2765, baseType: !82, size: 32, offset: 192)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !928, file: !486, line: 2766, baseType: !82, size: 32, offset: 224)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !928, file: !486, line: 2767, baseType: !82, size: 32, offset: 256)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !928, file: !486, line: 2768, baseType: !82, size: 32, offset: 288)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !928, file: !486, line: 2769, baseType: !82, size: 32, offset: 320)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !928, file: !486, line: 2770, baseType: !82, size: 32, offset: 352)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !928, file: !486, line: 2771, baseType: !82, size: 32, offset: 384)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !928, file: !486, line: 2772, baseType: !82, size: 32, offset: 416)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !928, file: !486, line: 2773, baseType: !82, size: 32, offset: 448)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !928, file: !486, line: 2774, baseType: !82, size: 32, offset: 480)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !928, file: !486, line: 2775, baseType: !82, size: 32, offset: 512)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !928, file: !486, line: 2776, baseType: !82, size: 32, offset: 544)
!948 = !{!907, !949, !951}
!949 = !DIGlobalVariableExpression(var: !950, expr: !DIExpression())
!950 = distinct !DIGlobalVariable(name: "CS_COUNT_SFI", scope: !909, file: !910, line: 99, type: !20, isLocal: false, isDefinition: true)
!951 = !DIGlobalVariableExpression(var: !952, expr: !DIExpression())
!952 = distinct !DIGlobalVariable(name: "combo_mem_hw_list", scope: !909, file: !953, line: 38, type: !954, isLocal: true, isDefinition: true)
!953 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_sfi_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !955)
!955 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntrySFIList", file: !956, line: 107, baseType: !957)
!956 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_sfi_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !956, line: 102, size: 4352, elements: !958)
!958 = !{!959, !963, !964, !965}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "m_identifier", scope: !957, file: !956, line: 103, baseType: !960, size: 128)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 128, elements: !961)
!961 = !{!962}
!962 = !DISubrange(count: 16)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !957, file: !956, line: 104, baseType: !7, size: 32, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !957, file: !956, line: 105, baseType: !7, size: 32, offset: 160)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !957, file: !956, line: 106, baseType: !966, size: 4160, offset: 192)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !967, size: 4160, elements: !220)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntrySFI", file: !956, line: 79, baseType: !968)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !956, line: 60, size: 832, elements: !969)
!969 = !{!970, !974, !978}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "HWConf_78M", scope: !968, file: !956, line: 74, baseType: !971, size: 320)
!971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 320, elements: !972)
!972 = !{!973}
!973 = !DISubrange(count: 10)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "DevInit_78M", scope: !968, file: !956, line: 75, baseType: !975, size: 256, offset: 320)
!975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 256, elements: !976)
!976 = !{!977}
!977 = !DISubrange(count: 32)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "HWConf_26M", scope: !968, file: !956, line: 77, baseType: !979, size: 256, offset: 576)
!979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 256, elements: !980)
!980 = !{!836}
!981 = !DIGlobalVariableExpression(var: !982, expr: !DIExpression())
!982 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !983, file: !1038, line: 35, type: !1039, isLocal: false, isDefinition: true)
!983 = distinct !DICompileUnit(language: DW_LANG_C99, file: !984, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !985, retainedTypes: !1031, globals: !1032, splitDebugInlining: false, nameTableKind: None)
!984 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!985 = !{!986}
!986 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !987, line: 77, baseType: !7, size: 32, elements: !988)
!987 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!988 = !{!989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030}
!989 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!990 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!991 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!992 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!993 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!994 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!995 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!996 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!997 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!998 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!999 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1000 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1001 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1002 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1003 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1004 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1005 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1006 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1007 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1008 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1009 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1010 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1011 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1012 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1013 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1014 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1015 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1016 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1017 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1018 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1019 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1020 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1021 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1022 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1023 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1024 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1025 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1026 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1027 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1028 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1029 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1030 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1031 = !{!199}
!1032 = !{!981, !1033, !1036}
!1033 = !DIGlobalVariableExpression(var: !1034, expr: !DIExpression())
!1034 = distinct !DIGlobalVariable(name: "cmem_index", scope: !983, file: !984, line: 96, type: !1035, isLocal: true, isDefinition: true)
!1035 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !983, file: !984, line: 94, type: !1035, isLocal: true, isDefinition: true)
!1038 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !984, line: 54, baseType: !1041)
!1041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !984, line: 51, size: 576, elements: !1042)
!1042 = !{!1043, !1053}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1041, file: !984, line: 52, baseType: !1044, size: 96)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !987, line: 152, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !987, line: 144, size: 96, elements: !1046)
!1046 = !{!1047, !1049, !1051}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1045, file: !987, line: 145, baseType: !1048, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !987, line: 61, baseType: !7)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1045, file: !987, line: 146, baseType: !1050, size: 16, offset: 32)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !987, line: 62, baseType: !115)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1045, file: !987, line: 150, baseType: !1052, size: 32, offset: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !987, line: 127, baseType: !986)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1041, file: !984, line: 53, baseType: !1054, size: 480, offset: 96)
!1054 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1055, line: 107, baseType: !1056)
!1055 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1055, line: 103, size: 480, elements: !1057)
!1057 = !{!1058, !1059, !1060}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1056, file: !1055, line: 104, baseType: !7, size: 32)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1056, file: !1055, line: 105, baseType: !7, size: 32, offset: 32)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1056, file: !1055, line: 106, baseType: !1061, size: 400, offset: 64)
!1061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1062, size: 400, elements: !220)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1055, line: 100, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1055, line: 92, size: 80, elements: !1064)
!1064 = !{!1065, !1066, !1067}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1063, file: !1055, line: 93, baseType: !185, size: 8)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1063, file: !1055, line: 94, baseType: !185, size: 8, offset: 8)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1063, file: !1055, line: 96, baseType: !1068, size: 64, offset: 16)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 64, elements: !980)
!1069 = !DIGlobalVariableExpression(var: !1070, expr: !DIExpression())
!1070 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1071, file: !1074, line: 96, type: !1075, isLocal: false, isDefinition: true)
!1071 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1072, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1073, splitDebugInlining: false, nameTableKind: None)
!1072 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1073 = !{!1069}
!1074 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1076, size: 152, elements: !1077)
!1076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !35)
!1077 = !{!1078}
!1078 = !DISubrange(count: 19)
!1079 = !DIGlobalVariableExpression(var: !1080, expr: !DIExpression())
!1080 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1081, file: !1082, line: 168, type: !1343, isLocal: false, isDefinition: true)
!1081 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1082, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1083, retainedTypes: !1094, globals: !1103, splitDebugInlining: false, nameTableKind: None)
!1082 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1083 = !{!1084, !599, !986}
!1084 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1085, line: 49, baseType: !7, size: 32, elements: !1086)
!1085 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1086 = !{!1087, !1088, !1089, !1090, !1091, !1092, !1093}
!1087 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1088 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1089 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1090 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1091 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1092 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1093 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1094 = !{!1095, !36, !1097}
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !600, line: 47, baseType: !141)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !812, line: 146, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 143, size: 64, elements: !1100)
!1100 = !{!1101, !1102}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1099, file: !812, line: 144, baseType: !36, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1099, file: !812, line: 145, baseType: !36, size: 32, offset: 32)
!1103 = !{!1079, !1104, !1106, !1116, !1125, !1127, !1129, !1137, !1139, !1191, !1274, !1277, !1279, !1282, !1306, !1308, !1339}
!1104 = !DIGlobalVariableExpression(var: !1105, expr: !DIExpression())
!1105 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1081, file: !1082, line: 94, type: !16, isLocal: true, isDefinition: true)
!1106 = !DIGlobalVariableExpression(var: !1107, expr: !DIExpression())
!1107 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1081, file: !1082, line: 95, type: !1108, isLocal: false, isDefinition: true)
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1055, line: 100, baseType: !1111)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1055, line: 92, size: 80, elements: !1112)
!1112 = !{!1113, !1114, !1115}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1111, file: !1055, line: 93, baseType: !185, size: 8)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1111, file: !1055, line: 94, baseType: !185, size: 8, offset: 8)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1111, file: !1055, line: 96, baseType: !1068, size: 64, offset: 16)
!1116 = !DIGlobalVariableExpression(var: !1117, expr: !DIExpression())
!1117 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1081, file: !1082, line: 152, type: !1118, isLocal: true, isDefinition: true)
!1118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1119, size: 32)
!1119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1120)
!1120 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1055, line: 116, baseType: !1121)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1055, line: 113, size: 64, elements: !1122)
!1122 = !{!1123, !1124}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1121, file: !1055, line: 114, baseType: !36, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1121, file: !1055, line: 115, baseType: !36, size: 32, offset: 32)
!1125 = !DIGlobalVariableExpression(var: !1126, expr: !DIExpression())
!1126 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1081, file: !1082, line: 156, type: !36, isLocal: false, isDefinition: true)
!1127 = !DIGlobalVariableExpression(var: !1128, expr: !DIExpression())
!1128 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1081, file: !1082, line: 157, type: !36, isLocal: false, isDefinition: true)
!1129 = !DIGlobalVariableExpression(var: !1130, expr: !DIExpression())
!1130 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1081, file: !1082, line: 160, type: !1131, isLocal: true, isDefinition: true)
!1131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1132, size: 512, elements: !980)
!1132 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !812, line: 152, baseType: !1133)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 149, size: 64, elements: !1134)
!1134 = !{!1135, !1136}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1133, file: !812, line: 150, baseType: !36, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1133, file: !812, line: 151, baseType: !36, size: 32, offset: 32)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1081, file: !1082, line: 173, type: !36, isLocal: false, isDefinition: true)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1081, file: !1082, line: 176, type: !1141, isLocal: false, isDefinition: true)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !812, line: 121, baseType: !1142)
!1142 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 105, size: 480, elements: !1143)
!1143 = !{!1144, !1148, !1149, !1153, !1157, !1161, !1162, !1166, !1167, !1168, !1169, !1174, !1179, !1183, !1187}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1142, file: !812, line: 106, baseType: !1145, size: 32)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 32)
!1146 = !DISubroutineType(types: !1147)
!1147 = !{!20, !199, !199}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1142, file: !812, line: 107, baseType: !888, size: 32, offset: 32)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1142, file: !812, line: 108, baseType: !1150, size: 32, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 32)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{!199, !199, !36, !36}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1142, file: !812, line: 109, baseType: !1154, size: 32, offset: 96)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DISubroutineType(types: !1156)
!1156 = !{!20, !199, !36}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1142, file: !812, line: 110, baseType: !1158, size: 32, offset: 128)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 32)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!20, !199, !199, !199, !36}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1142, file: !812, line: 111, baseType: !1154, size: 32, offset: 160)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1142, file: !812, line: 112, baseType: !1163, size: 32, offset: 192)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 32)
!1164 = !DISubroutineType(types: !1165)
!1165 = !{!16, !199, !36}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1142, file: !812, line: 113, baseType: !1154, size: 32, offset: 224)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1142, file: !812, line: 114, baseType: !1154, size: 32, offset: 256)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1142, file: !812, line: 115, baseType: !1154, size: 32, offset: 288)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1142, file: !812, line: 116, baseType: !1170, size: 32, offset: 320)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!20, !199, !20, !1173, !199, !1173}
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !600, line: 50, baseType: !7)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1142, file: !812, line: 117, baseType: !1175, size: 32, offset: 352)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 32)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!20, !199, !1178}
!1178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1173, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1142, file: !812, line: 118, baseType: !1180, size: 32, offset: 384)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 32)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!20, !199, !199, !36}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1142, file: !812, line: 119, baseType: !1184, size: 32, offset: 416)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 32)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!94, !199, !36}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1142, file: !812, line: 120, baseType: !1188, size: 32, offset: 448)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 32)
!1189 = !DISubroutineType(types: !1190)
!1190 = !{!20, !199, !36, !199}
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1081, file: !1082, line: 177, type: !1193, isLocal: false, isDefinition: true)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !732, line: 193, baseType: !1194)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !732, line: 134, size: 1824, elements: !1195)
!1195 = !{!1196, !1197, !1198, !1204, !1210, !1211, !1212, !1213, !1215, !1216, !1217, !1218, !1225, !1226, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1194, file: !732, line: 136, baseType: !36, size: 32)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1194, file: !732, line: 137, baseType: !184, size: 32, offset: 32)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1194, file: !732, line: 138, baseType: !1199, size: 32, offset: 64)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !794, line: 56, baseType: !1200)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 32)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 54, size: 8, elements: !1202)
!1202 = !{!1203}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1201, file: !794, line: 55, baseType: !185, size: 8)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1194, file: !732, line: 139, baseType: !1205, size: 32, offset: 96)
!1205 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !794, line: 46, baseType: !1206)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 32)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 44, size: 8, elements: !1208)
!1208 = !{!1209}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1207, file: !794, line: 45, baseType: !185, size: 8)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1194, file: !732, line: 140, baseType: !806, size: 8, offset: 128)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1194, file: !732, line: 143, baseType: !1097, size: 32, offset: 160)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1194, file: !732, line: 144, baseType: !184, size: 32, offset: 192)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1194, file: !732, line: 145, baseType: !1214, size: 32, offset: 224)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1194, file: !732, line: 146, baseType: !184, size: 32, offset: 256)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1194, file: !732, line: 147, baseType: !36, size: 32, offset: 288)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1194, file: !732, line: 148, baseType: !184, size: 32, offset: 320)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1194, file: !732, line: 151, baseType: !1219, size: 1024, offset: 352)
!1219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1220, size: 1024, elements: !835)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !812, line: 170, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 167, size: 64, elements: !1222)
!1222 = !{!1223, !1224}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1221, file: !812, line: 168, baseType: !36, size: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1221, file: !812, line: 169, baseType: !36, size: 32, offset: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1194, file: !732, line: 155, baseType: !838, size: 32, offset: 1376)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1194, file: !732, line: 156, baseType: !1227, size: 32, offset: 1408)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 32)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !732, line: 124, baseType: !1229)
!1229 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !732, line: 90, size: 200, elements: !1230)
!1230 = !{!1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255}
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1229, file: !732, line: 91, baseType: !185, size: 8)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1229, file: !732, line: 92, baseType: !185, size: 8, offset: 8)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1229, file: !732, line: 94, baseType: !185, size: 8, offset: 16)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1229, file: !732, line: 95, baseType: !185, size: 8, offset: 24)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1229, file: !732, line: 96, baseType: !185, size: 8, offset: 32)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1229, file: !732, line: 98, baseType: !185, size: 8, offset: 40)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1229, file: !732, line: 99, baseType: !185, size: 8, offset: 48)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1229, file: !732, line: 100, baseType: !185, size: 8, offset: 56)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1229, file: !732, line: 101, baseType: !185, size: 8, offset: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1229, file: !732, line: 103, baseType: !185, size: 8, offset: 72)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1229, file: !732, line: 104, baseType: !185, size: 8, offset: 80)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1229, file: !732, line: 106, baseType: !185, size: 8, offset: 88)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1229, file: !732, line: 107, baseType: !185, size: 8, offset: 96)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1229, file: !732, line: 108, baseType: !185, size: 8, offset: 104)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1229, file: !732, line: 109, baseType: !185, size: 8, offset: 112)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1229, file: !732, line: 110, baseType: !185, size: 8, offset: 120)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1229, file: !732, line: 111, baseType: !185, size: 8, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1229, file: !732, line: 112, baseType: !185, size: 8, offset: 136)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1229, file: !732, line: 114, baseType: !185, size: 8, offset: 144)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1229, file: !732, line: 115, baseType: !185, size: 8, offset: 152)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1229, file: !732, line: 118, baseType: !185, size: 8, offset: 160)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1229, file: !732, line: 119, baseType: !185, size: 8, offset: 168)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1229, file: !732, line: 120, baseType: !185, size: 8, offset: 176)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1229, file: !732, line: 121, baseType: !185, size: 8, offset: 184)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1229, file: !732, line: 122, baseType: !185, size: 8, offset: 192)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1194, file: !732, line: 157, baseType: !36, size: 32, offset: 1440)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1194, file: !732, line: 158, baseType: !113, size: 16, offset: 1472)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1194, file: !732, line: 159, baseType: !113, size: 16, offset: 1488)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1194, file: !732, line: 163, baseType: !113, size: 16, offset: 1504)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1194, file: !732, line: 164, baseType: !113, size: 16, offset: 1520)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1194, file: !732, line: 167, baseType: !185, size: 8, offset: 1536)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1194, file: !732, line: 168, baseType: !877, size: 24, offset: 1544)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1194, file: !732, line: 169, baseType: !185, size: 8, offset: 1568)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1194, file: !732, line: 170, baseType: !185, size: 8, offset: 1576)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1194, file: !732, line: 173, baseType: !113, size: 16, offset: 1584)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1194, file: !732, line: 174, baseType: !36, size: 32, offset: 1600)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1194, file: !732, line: 175, baseType: !36, size: 32, offset: 1632)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1194, file: !732, line: 178, baseType: !94, size: 8, offset: 1664)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1194, file: !732, line: 179, baseType: !94, size: 8, offset: 1672)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1194, file: !732, line: 182, baseType: !888, size: 32, offset: 1696)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1194, file: !732, line: 186, baseType: !888, size: 32, offset: 1728)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1194, file: !732, line: 187, baseType: !893, size: 32, offset: 1760)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1194, file: !732, line: 188, baseType: !893, size: 32, offset: 1792)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1081, file: !1082, line: 178, type: !1276, isLocal: false, isDefinition: true)
!1276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !839, size: 64, elements: !980)
!1277 = !DIGlobalVariableExpression(var: !1278, expr: !DIExpression())
!1278 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1081, file: !1082, line: 179, type: !1228, isLocal: false, isDefinition: true)
!1279 = !DIGlobalVariableExpression(var: !1280, expr: !DIExpression())
!1280 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1081, file: !1082, line: 204, type: !1281, isLocal: true, isDefinition: true)
!1281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 512, elements: !980)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1081, file: !1082, line: 205, type: !1284, isLocal: false, isDefinition: true)
!1284 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1285, line: 93, baseType: !1286)
!1285 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1285, line: 83, size: 1056, elements: !1287)
!1287 = !{!1288, !1289, !1291, !1292, !1305}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1286, file: !1285, line: 84, baseType: !36, size: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1286, file: !1285, line: 85, baseType: !1290, size: 32, offset: 32)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1286, file: !1285, line: 86, baseType: !199, size: 32, offset: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1286, file: !1285, line: 87, baseType: !1293, size: 928, offset: 96)
!1293 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !812, line: 99, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 90, size: 928, elements: !1295)
!1295 = !{!1296, !1297, !1298, !1299, !1300, !1301, !1303, !1304}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1294, file: !812, line: 91, baseType: !36, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1294, file: !812, line: 92, baseType: !979, size: 256, offset: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1294, file: !812, line: 93, baseType: !979, size: 256, offset: 288)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1294, file: !812, line: 94, baseType: !979, size: 256, offset: 544)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1294, file: !812, line: 95, baseType: !36, size: 32, offset: 800)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1294, file: !812, line: 96, baseType: !1302, size: 16, offset: 832)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !600, line: 46, baseType: !115)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1294, file: !812, line: 97, baseType: !36, size: 32, offset: 864)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1294, file: !812, line: 98, baseType: !36, size: 32, offset: 896)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1286, file: !1285, line: 92, baseType: !94, size: 8, offset: 1024)
!1306 = !DIGlobalVariableExpression(var: !1307, expr: !DIExpression())
!1307 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1081, file: !1082, line: 208, type: !1193, isLocal: false, isDefinition: true)
!1308 = !DIGlobalVariableExpression(var: !1309, expr: !DIExpression())
!1309 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1081, file: !1310, line: 42, type: !1311, isLocal: true, isDefinition: true)
!1310 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1311 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1312)
!1312 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1082, line: 66, baseType: !1313)
!1313 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1082, line: 63, size: 5600, elements: !1314)
!1314 = !{!1315, !1322}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1313, file: !1082, line: 64, baseType: !1316, size: 96)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !987, line: 152, baseType: !1317)
!1317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !987, line: 144, size: 96, elements: !1318)
!1318 = !{!1319, !1320, !1321}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1317, file: !987, line: 145, baseType: !1048, size: 32)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1317, file: !987, line: 146, baseType: !1050, size: 16, offset: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1317, file: !987, line: 150, baseType: !1052, size: 32, offset: 64)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1313, file: !1082, line: 65, baseType: !1323, size: 5504, offset: 96)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1055, line: 132, baseType: !1324)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1055, line: 128, size: 5504, elements: !1325)
!1325 = !{!1326, !1327, !1328}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1324, file: !1055, line: 129, baseType: !7, size: 32)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1324, file: !1055, line: 130, baseType: !7, size: 32, offset: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1324, file: !1055, line: 131, baseType: !1329, size: 5440, offset: 64)
!1329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1330, size: 5440, elements: !220)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1055, line: 125, baseType: !1331)
!1331 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1055, line: 119, size: 1088, elements: !1332)
!1332 = !{!1333, !1334, !1335, !1336, !1338}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1331, file: !1055, line: 120, baseType: !113, size: 16)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1331, file: !1055, line: 121, baseType: !113, size: 16, offset: 16)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1331, file: !1055, line: 122, baseType: !36, size: 32, offset: 32)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1331, file: !1055, line: 123, baseType: !1337, size: 512, offset: 64)
!1337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1120, size: 512, elements: !980)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1331, file: !1055, line: 124, baseType: !1131, size: 512, offset: 576)
!1339 = !DIGlobalVariableExpression(var: !1340, expr: !DIExpression())
!1340 = distinct !DIGlobalVariable(name: "nor_list", scope: !1081, file: !1082, line: 114, type: !1341, isLocal: true, isDefinition: true)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1343 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !794, line: 79, baseType: !1344)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 32)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 77, size: 8, elements: !1346)
!1346 = !{!1347}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1345, file: !794, line: 78, baseType: !185, size: 8)
!1348 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!1349 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1350, file: !1351, line: 432, type: !1402, isLocal: true, isDefinition: true)
!1350 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1351, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1352, retainedTypes: !1353, globals: !1398, splitDebugInlining: false, nameTableKind: None)
!1351 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1352 = !{!599, !160, !171}
!1353 = !{!36, !1354, !199, !184}
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !812, line: 190, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 173, size: 1376, elements: !1357)
!1357 = !{!1358, !1359, !1360, !1366, !1372, !1373, !1380, !1381, !1388, !1389, !1390, !1391}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1356, file: !812, line: 174, baseType: !36, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1356, file: !812, line: 175, baseType: !1095, size: 32, offset: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1356, file: !812, line: 176, baseType: !1361, size: 32, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !794, line: 56, baseType: !1362)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 32)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 54, size: 8, elements: !1364)
!1364 = !{!1365}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1363, file: !794, line: 55, baseType: !185, size: 8)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1356, file: !812, line: 177, baseType: !1367, size: 32, offset: 96)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !794, line: 46, baseType: !1368)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 32)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 44, size: 8, elements: !1370)
!1370 = !{!1371}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1369, file: !794, line: 45, baseType: !185, size: 8)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1356, file: !812, line: 178, baseType: !806, size: 8, offset: 128)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1356, file: !812, line: 180, baseType: !1374, size: 32, offset: 160)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 32)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !812, line: 146, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 143, size: 64, elements: !1377)
!1377 = !{!1378, !1379}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1376, file: !812, line: 144, baseType: !36, size: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1376, file: !812, line: 145, baseType: !36, size: 32, offset: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1356, file: !812, line: 181, baseType: !1095, size: 32, offset: 192)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1356, file: !812, line: 182, baseType: !1382, size: 32, offset: 224)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !812, line: 152, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 149, size: 64, elements: !1385)
!1385 = !{!1386, !1387}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1384, file: !812, line: 150, baseType: !36, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1384, file: !812, line: 151, baseType: !36, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1356, file: !812, line: 183, baseType: !1095, size: 32, offset: 256)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1356, file: !812, line: 184, baseType: !36, size: 32, offset: 288)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1356, file: !812, line: 185, baseType: !1095, size: 32, offset: 320)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1356, file: !812, line: 188, baseType: !1392, size: 1024, offset: 352)
!1392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1393, size: 1024, elements: !835)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !812, line: 170, baseType: !1394)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 167, size: 64, elements: !1395)
!1395 = !{!1396, !1397}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1394, file: !812, line: 168, baseType: !36, size: 32)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1394, file: !812, line: 169, baseType: !36, size: 32, offset: 32)
!1398 = !{!1399, !1401}
!1399 = !DIGlobalVariableExpression(var: !1400, expr: !DIExpression())
!1400 = distinct !DIGlobalVariable(name: "processing_irqCnt", scope: !1350, file: !1351, line: 57, type: !82, isLocal: false, isDefinition: true)
!1401 = !DIGlobalVariableExpression(var: !1349, expr: !DIExpression())
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !161, line: 119, baseType: !160)
!1403 = !DIGlobalVariableExpression(var: !1404, expr: !DIExpression())
!1404 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !1405, file: !1406, line: 60, type: !36, isLocal: false, isDefinition: true)
!1405 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1406, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1407, globals: !1408, splitDebugInlining: false, nameTableKind: None)
!1406 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1407 = !{!199, !36}
!1408 = !{!1403, !1409, !1411, !1413, !1415, !1417, !1471, !1473}
!1409 = !DIGlobalVariableExpression(var: !1410, expr: !DIExpression())
!1410 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !1405, file: !1406, line: 61, type: !36, isLocal: false, isDefinition: true)
!1411 = !DIGlobalVariableExpression(var: !1412, expr: !DIExpression())
!1412 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !1405, file: !1406, line: 107, type: !36, isLocal: false, isDefinition: true)
!1413 = !DIGlobalVariableExpression(var: !1414, expr: !DIExpression())
!1414 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !1405, file: !1406, line: 132, type: !94, isLocal: false, isDefinition: true)
!1415 = !DIGlobalVariableExpression(var: !1416, expr: !DIExpression())
!1416 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !1405, file: !1406, line: 133, type: !94, isLocal: false, isDefinition: true)
!1417 = !DIGlobalVariableExpression(var: !1418, expr: !DIExpression())
!1418 = distinct !DIGlobalVariable(name: "replaced", scope: !1419, file: !1406, line: 139, type: !36, isLocal: true, isDefinition: true)
!1419 = distinct !DISubprogram(name: "LookupAddress", scope: !1406, file: !1406, line: 135, type: !1420, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !1422)
!1420 = !DISubroutineType(types: !1421)
!1421 = !{!36, !199, !36}
!1422 = !{!1423, !1424, !1425, !1470}
!1423 = !DILocalVariable(name: "DriveData", arg: 1, scope: !1419, file: !1406, line: 135, type: !199)
!1424 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !1419, file: !1406, line: 135, type: !36)
!1425 = !DILocalVariable(name: "D", scope: !1419, file: !1406, line: 137, type: !1426)
!1426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1427, size: 32)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !812, line: 190, baseType: !1428)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 173, size: 1376, elements: !1429)
!1429 = !{!1430, !1431, !1432, !1438, !1444, !1445, !1452, !1453, !1460, !1461, !1462, !1463}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1428, file: !812, line: 174, baseType: !36, size: 32)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1428, file: !812, line: 175, baseType: !1095, size: 32, offset: 32)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1428, file: !812, line: 176, baseType: !1433, size: 32, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !794, line: 56, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 32)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 54, size: 8, elements: !1436)
!1436 = !{!1437}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1435, file: !794, line: 55, baseType: !185, size: 8)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1428, file: !812, line: 177, baseType: !1439, size: 32, offset: 96)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !794, line: 46, baseType: !1440)
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 32)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !794, line: 44, size: 8, elements: !1442)
!1442 = !{!1443}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1441, file: !794, line: 45, baseType: !185, size: 8)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1428, file: !812, line: 178, baseType: !806, size: 8, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1428, file: !812, line: 180, baseType: !1446, size: 32, offset: 160)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 32)
!1447 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !812, line: 146, baseType: !1448)
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 143, size: 64, elements: !1449)
!1449 = !{!1450, !1451}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1448, file: !812, line: 144, baseType: !36, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1448, file: !812, line: 145, baseType: !36, size: 32, offset: 32)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1428, file: !812, line: 181, baseType: !1095, size: 32, offset: 192)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1428, file: !812, line: 182, baseType: !1454, size: 32, offset: 224)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 32)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !812, line: 152, baseType: !1456)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 149, size: 64, elements: !1457)
!1457 = !{!1458, !1459}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1456, file: !812, line: 150, baseType: !36, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1456, file: !812, line: 151, baseType: !36, size: 32, offset: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1428, file: !812, line: 183, baseType: !1095, size: 32, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1428, file: !812, line: 184, baseType: !36, size: 32, offset: 288)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1428, file: !812, line: 185, baseType: !1095, size: 32, offset: 320)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1428, file: !812, line: 188, baseType: !1464, size: 1024, offset: 352)
!1464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1465, size: 1024, elements: !835)
!1465 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !812, line: 170, baseType: !1466)
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 167, size: 64, elements: !1467)
!1467 = !{!1468, !1469}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1466, file: !812, line: 168, baseType: !36, size: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1466, file: !812, line: 169, baseType: !36, size: 32, offset: 32)
!1470 = !DILocalVariable(name: "addr", scope: !1419, file: !1406, line: 138, type: !36)
!1471 = !DIGlobalVariableExpression(var: !1472, expr: !DIExpression())
!1472 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !1419, file: !1406, line: 140, type: !36, isLocal: true, isDefinition: true)
!1473 = !DIGlobalVariableExpression(var: !1474, expr: !DIExpression())
!1474 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !1419, file: !1406, line: 141, type: !36, isLocal: true, isDefinition: true)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !1477, file: !1478, line: 51, type: !1552, isLocal: false, isDefinition: true)
!1477 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1478, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1479, retainedTypes: !1526, globals: !1551, splitDebugInlining: false, nameTableKind: None)
!1478 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1479 = !{!1480, !1491, !1510, !1517}
!1480 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1481, line: 163, baseType: !20, size: 32, elements: !1482)
!1481 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1482 = !{!1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490}
!1483 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!1484 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!1485 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!1486 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!1487 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!1488 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!1489 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!1490 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!1491 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1481, line: 186, baseType: !7, size: 32, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509}
!1493 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!1494 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!1495 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!1496 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!1497 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!1498 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!1499 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!1500 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!1501 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!1502 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!1503 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!1504 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!1505 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!1506 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!1507 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!1508 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!1509 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!1510 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1481, line: 176, baseType: !7, size: 32, elements: !1511)
!1511 = !{!1512, !1513, !1514, !1515, !1516}
!1512 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!1513 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!1514 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!1515 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!1516 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!1517 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1518, line: 98, baseType: !7, size: 32, elements: !1519)
!1518 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1519 = !{!1520, !1521, !1522, !1523, !1524, !1525}
!1520 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!1521 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!1522 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!1523 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!1524 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!1525 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!1526 = !{!1527, !199}
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 32)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !486, line: 276, baseType: !1529)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !486, line: 260, size: 525312, elements: !1530)
!1530 = !{!1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1543, !1544, !1548, !1550}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !1529, file: !486, line: 261, baseType: !82, size: 32)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !1529, file: !486, line: 262, baseType: !82, size: 32, offset: 32)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !1529, file: !486, line: 263, baseType: !82, size: 32, offset: 64)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !1529, file: !486, line: 264, baseType: !82, size: 32, offset: 96)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !1529, file: !486, line: 265, baseType: !82, size: 32, offset: 128)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !1529, file: !486, line: 266, baseType: !82, size: 32, offset: 160)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !1529, file: !486, line: 267, baseType: !82, size: 32, offset: 192)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !1529, file: !486, line: 268, baseType: !82, size: 32, offset: 224)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !1529, file: !486, line: 269, baseType: !82, size: 32, offset: 256)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !1529, file: !486, line: 270, baseType: !82, size: 32, offset: 288)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1529, file: !486, line: 271, baseType: !1542, size: 32, offset: 320)
!1542 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 32, elements: !251)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !1529, file: !486, line: 272, baseType: !82, size: 32, offset: 352)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1529, file: !486, line: 273, baseType: !1545, size: 523904, offset: 384)
!1545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 523904, elements: !1546)
!1546 = !{!1547}
!1547 = !DISubrange(count: 16372)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !1529, file: !486, line: 274, baseType: !1549, size: 512, offset: 524288)
!1549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 512, elements: !961)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !1529, file: !486, line: 275, baseType: !1549, size: 512, offset: 524800)
!1551 = !{!1475}
!1552 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !94)
!1553 = !DIGlobalVariableExpression(var: !1554, expr: !DIExpression())
!1554 = distinct !DIGlobalVariable(name: "sha1_padding", scope: !1555, file: !1556, line: 314, type: !1560, isLocal: true, isDefinition: true)
!1555 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1556, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1557, globals: !1559, splitDebugInlining: false, nameTableKind: None)
!1556 = !DIFile(filename: "../../../../../middleware/third_party/mbedtls/library/sha1.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1557 = !{!199, !36, !141, !1558}
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 32)
!1559 = !{!1553}
!1560 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1561, size: 512, elements: !1562)
!1561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!1562 = !{!1563}
!1563 = !DISubrange(count: 64)
!1564 = !DIGlobalVariableExpression(var: !1565, expr: !DIExpression())
!1565 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !1566, file: !1571, line: 4, type: !1577, isLocal: false, isDefinition: true)
!1566 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1567, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1568, splitDebugInlining: false, nameTableKind: None)
!1567 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC/Build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1568 = !{!1564, !1569, !1575}
!1569 = !DIGlobalVariableExpression(var: !1570, expr: !DIExpression())
!1570 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !1566, file: !1571, line: 5, type: !1572, isLocal: false, isDefinition: true)
!1571 = !DIFile(filename: "Build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 88, elements: !1573)
!1573 = !{!1574}
!1574 = !DISubrange(count: 11)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !1566, file: !1571, line: 6, type: !1572, isLocal: false, isDefinition: true)
!1577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 248, elements: !1578)
!1578 = !{!1579}
!1579 = !DISubrange(count: 31)
!1580 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1581, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1582, retainedTypes: !1595, splitDebugInlining: false, nameTableKind: None)
!1581 = !DIFile(filename: "../../../../../middleware/third_party/lzma_decoder/src/lzma_decode_interface.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1582 = !{!1583, !1591, !160, !5, !171}
!1583 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1584, line: 98, baseType: !7, size: 32, elements: !1585)
!1584 = !DIFile(filename: "../../../../../middleware/third_party/lzma_decoder/inc/LZMA_decoder.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1585 = !{!1586, !1587, !1588, !1589, !1590}
!1586 = !DIEnumerator(name: "LZMA_STATUS_NOT_SPECIFIED", value: 0)
!1587 = !DIEnumerator(name: "LZMA_STATUS_FINISHED_WITH_MARK", value: 1)
!1588 = !DIEnumerator(name: "LZMA_STATUS_NOT_FINISHED", value: 2)
!1589 = !DIEnumerator(name: "LZMA_STATUS_NEEDS_MORE_INPUT", value: 3)
!1590 = !DIEnumerator(name: "LZMA_STATUS_MAYBE_FINISHED_WITHOUT_MARK", value: 4)
!1591 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1584, line: 77, baseType: !7, size: 32, elements: !1592)
!1592 = !{!1593, !1594}
!1593 = !DIEnumerator(name: "LZMA_FINISH_ANY", value: 0)
!1594 = !DIEnumerator(name: "LZMA_FINISH_END", value: 1)
!1595 = !{!1596, !1600, !7, !36, !1609, !20, !184, !16, !1620}
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "SizeT", file: !1597, line: 93, baseType: !1598)
!1597 = !DIFile(filename: "../../../../../middleware/third_party/lzma_decoder/inc/7zTypes.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1598 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1599, line: 46, baseType: !7)
!1599 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISzAlloc", file: !1597, line: 233, baseType: !1602)
!1602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1597, line: 229, size: 64, elements: !1603)
!1603 = !{!1604, !1608}
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "Alloc", scope: !1602, file: !1597, line: 231, baseType: !1605, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 32)
!1606 = !DISubroutineType(types: !1607)
!1607 = !{!199, !199, !1598}
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "Free", scope: !1602, file: !1597, line: 232, baseType: !205, size: 32, offset: 32)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 32)
!1610 = !DIDerivedType(tag: DW_TAG_typedef, name: "VERSION_CTL_T", file: !1581, line: 76, baseType: !1611)
!1611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1581, line: 68, size: 224, elements: !1612)
!1612 = !{!1613, !1614, !1615, !1616, !1617, !1619}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "HW_VERSION", scope: !1611, file: !1581, line: 70, baseType: !36, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "FW_VERSION", scope: !1611, file: !1581, line: 71, baseType: !36, size: 32, offset: 32)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "HW_CODE", scope: !1611, file: !1581, line: 72, baseType: !36, size: 32, offset: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "HW_SUBCODE", scope: !1611, file: !1581, line: 73, baseType: !36, size: 32, offset: 96)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1611, file: !1581, line: 74, baseType: !1618, size: 64, offset: 128)
!1618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 64, elements: !511)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "FAB_CODE", scope: !1611, file: !1581, line: 75, baseType: !36, size: 32, offset: 192)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_typedef, name: "Byte", file: !1597, line: 56, baseType: !141)
!1622 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1623, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1624, retainedTypes: !1631, splitDebugInlining: false, nameTableKind: None)
!1623 = !DIFile(filename: "../../../../../middleware/third_party/lzma_decoder/src/lzma_decoder.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1624 = !{!1591, !1583, !1625}
!1625 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1623, line: 567, baseType: !7, size: 32, elements: !1626)
!1626 = !{!1627, !1628, !1629, !1630}
!1627 = !DIEnumerator(name: "DUMMY_ERROR", value: 0)
!1628 = !DIEnumerator(name: "DUMMY_LIT", value: 1)
!1629 = !DIEnumerator(name: "DUMMY_MATCH", value: 2)
!1630 = !DIEnumerator(name: "DUMMY_REP", value: 3)
!1631 = !{!1632, !7, !1596, !1620, !1633, !1621, !1634, !1635}
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "UInt32", file: !1597, line: 65, baseType: !7)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "UInt16", file: !1597, line: 58, baseType: !115)
!1634 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1599, line: 35, baseType: !20)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 32)
!1636 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1637, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1638, retainedTypes: !1649, splitDebugInlining: false, nameTableKind: None)
!1637 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/bl_main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1638 = !{!5, !1639, !1644, !129}
!1639 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1640, line: 210, baseType: !7, size: 32, elements: !1641)
!1640 = !DIFile(filename: "../../../../../driver/chip/inc/hal_wdt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1641 = !{!1642, !1643}
!1642 = !DIEnumerator(name: "HAL_WDT_MODE_RESET", value: 0)
!1643 = !DIEnumerator(name: "HAL_WDT_MODE_INTERRUPT", value: 1)
!1644 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1640, line: 194, baseType: !20, size: 32, elements: !1645)
!1645 = !{!1646, !1647, !1648}
!1646 = !DIEnumerator(name: "HAL_WDT_STATUS_INVALID_PARAMETER", value: -2)
!1647 = !DIEnumerator(name: "HAL_WDT_STATUS_INVALID_MAGIC", value: -1)
!1648 = !DIEnumerator(name: "HAL_WDT_STATUS_OK", value: 0)
!1649 = !{!1650, !277, !7, !72}
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 32)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1652, line: 418, baseType: !1653)
!1652 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1652, line: 395, size: 1120, elements: !1654)
!1654 = !{!1655, !1656, !1657, !1658, !1659, !1660, !1661, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1674, !1675, !1676, !1678, !1680, !1682}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1653, file: !1652, line: 397, baseType: !86, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1653, file: !1652, line: 398, baseType: !82, size: 32, offset: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1653, file: !1652, line: 399, baseType: !82, size: 32, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1653, file: !1652, line: 400, baseType: !82, size: 32, offset: 96)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1653, file: !1652, line: 401, baseType: !82, size: 32, offset: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1653, file: !1652, line: 402, baseType: !82, size: 32, offset: 160)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1653, file: !1652, line: 403, baseType: !1662, size: 96, offset: 192)
!1662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !785, size: 96, elements: !1663)
!1663 = !{!1664}
!1664 = !DISubrange(count: 12)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1653, file: !1652, line: 404, baseType: !82, size: 32, offset: 288)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1653, file: !1652, line: 405, baseType: !82, size: 32, offset: 320)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1653, file: !1652, line: 406, baseType: !82, size: 32, offset: 352)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1653, file: !1652, line: 407, baseType: !82, size: 32, offset: 384)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1653, file: !1652, line: 408, baseType: !82, size: 32, offset: 416)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1653, file: !1652, line: 409, baseType: !82, size: 32, offset: 448)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1653, file: !1652, line: 410, baseType: !82, size: 32, offset: 480)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1653, file: !1652, line: 411, baseType: !1673, size: 64, offset: 512)
!1673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 64, elements: !511)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1653, file: !1652, line: 412, baseType: !86, size: 32, offset: 576)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1653, file: !1652, line: 413, baseType: !86, size: 32, offset: 608)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1653, file: !1652, line: 414, baseType: !1677, size: 128, offset: 640)
!1677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 128, elements: !249)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1653, file: !1652, line: 415, baseType: !1679, size: 160, offset: 768)
!1679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !86, size: 160, elements: !220)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1653, file: !1652, line: 416, baseType: !1681, size: 160, offset: 928)
!1681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 160, elements: !220)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1653, file: !1652, line: 417, baseType: !82, size: 32, offset: 1088)
!1683 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1684, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1685, splitDebugInlining: false, nameTableKind: None)
!1684 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/bl_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1685 = !{!113, !277, !784, !185}
!1686 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1687, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1688, retainedTypes: !1689, splitDebugInlining: false, nameTableKind: None)
!1687 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/bl_clock.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1688 = !{!5, !66}
!1689 = !{!1690, !277}
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !112, size: 32)
!1691 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1692, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1692 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/custom_blconfig.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1694, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !1695, splitDebugInlining: false, nameTableKind: None)
!1694 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/bl_misc.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1695 = !{!102, !7, !72}
!1696 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1697, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1698, globals: !1699, splitDebugInlining: false, nameTableKind: None)
!1697 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/bl_usb.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1698 = !{!72, !7, !277, !337, !115}
!1699 = !{!1700}
!1700 = !DIGlobalVariableExpression(var: !1701, expr: !DIExpression())
!1701 = distinct !DIGlobalVariable(name: "musb_phy", scope: !1696, file: !1697, line: 46, type: !1702, isLocal: true, isDefinition: true)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 32)
!1703 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1704)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "USBPHY_REGISTER_T", file: !1705, line: 184, baseType: !1706)
!1705 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/inc/bl_usb.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1705, line: 148, size: 30880, elements: !1707)
!1707 = !{!1708, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1734, !1735, !1736, !1737, !1739, !1740, !1742, !1743, !1745, !1746, !1750, !1751, !1752, !1753, !1754}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "revered", scope: !1706, file: !1705, line: 150, baseType: !1709, size: 16384)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 16384, elements: !59)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "u2phyac0", scope: !1706, file: !1705, line: 151, baseType: !7, size: 32, offset: 16384)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "u2phyac1", scope: !1706, file: !1705, line: 152, baseType: !7, size: 32, offset: 16416)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "u2phyac2", scope: !1706, file: !1705, line: 153, baseType: !7, size: 32, offset: 16448)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "revered1", scope: !1706, file: !1705, line: 154, baseType: !7, size: 32, offset: 16480)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "u2phyacr0", scope: !1706, file: !1705, line: 155, baseType: !7, size: 32, offset: 16512)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "u2phyacr1", scope: !1706, file: !1705, line: 156, baseType: !7, size: 32, offset: 16544)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "u2phyacr2", scope: !1706, file: !1705, line: 157, baseType: !7, size: 32, offset: 16576)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "u2phyacr3", scope: !1706, file: !1705, line: 158, baseType: !7, size: 32, offset: 16608)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "u2phyacr4", scope: !1706, file: !1705, line: 159, baseType: !7, size: 32, offset: 16640)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "revered2", scope: !1706, file: !1705, line: 160, baseType: !1720, size: 480, offset: 16672)
!1720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 480, elements: !1721)
!1721 = !{!1722}
!1722 = !DISubrange(count: 15)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "u2phydcr0", scope: !1706, file: !1705, line: 161, baseType: !7, size: 32, offset: 17152)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "u2phydcr1", scope: !1706, file: !1705, line: 162, baseType: !7, size: 32, offset: 17184)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "u2phydtm0", scope: !1706, file: !1705, line: 163, baseType: !7, size: 32, offset: 17216)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "u2phydtm1", scope: !1706, file: !1705, line: 164, baseType: !7, size: 32, offset: 17248)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "u2phydmon0", scope: !1706, file: !1705, line: 165, baseType: !7, size: 32, offset: 17280)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "u2phydmon1", scope: !1706, file: !1705, line: 166, baseType: !7, size: 32, offset: 17312)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "u2phydmon2", scope: !1706, file: !1705, line: 167, baseType: !7, size: 32, offset: 17344)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "revered3", scope: !1706, file: !1705, line: 168, baseType: !1731, size: 544, offset: 17376)
!1731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 544, elements: !1732)
!1732 = !{!1733}
!1733 = !DISubrange(count: 17)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "u1phycr0", scope: !1706, file: !1705, line: 169, baseType: !7, size: 32, offset: 17920)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "u1phycr1", scope: !1706, file: !1705, line: 170, baseType: !7, size: 32, offset: 17952)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "u1phycr2", scope: !1706, file: !1705, line: 171, baseType: !7, size: 32, offset: 17984)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "revered4", scope: !1706, file: !1705, line: 172, baseType: !1738, size: 160, offset: 18016)
!1738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !220)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "regfppc", scope: !1706, file: !1705, line: 173, baseType: !7, size: 32, offset: 18176)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "revered5", scope: !1706, file: !1705, line: 174, baseType: !1741, size: 96, offset: 18208)
!1741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 96, elements: !878)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "versionc", scope: !1706, file: !1705, line: 175, baseType: !7, size: 32, offset: 18304)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "revered6", scope: !1706, file: !1705, line: 176, baseType: !1744, size: 64, offset: 18336)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !511)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "regfcom", scope: !1706, file: !1705, line: 177, baseType: !7, size: 32, offset: 18400)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "revered7", scope: !1706, file: !1705, line: 178, baseType: !1747, size: 12288, offset: 18432)
!1747 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 12288, elements: !1748)
!1748 = !{!1749}
!1749 = !DISubrange(count: 384)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "fmcr0", scope: !1706, file: !1705, line: 179, baseType: !7, size: 32, offset: 30720)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "fmcr1", scope: !1706, file: !1705, line: 180, baseType: !7, size: 32, offset: 30752)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "fmcr2", scope: !1706, file: !1705, line: 181, baseType: !7, size: 32, offset: 30784)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "fmmonr0", scope: !1706, file: !1705, line: 182, baseType: !7, size: 32, offset: 30816)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "fmmonr1", scope: !1706, file: !1705, line: 183, baseType: !7, size: 32, offset: 30848)
!1755 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1756, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1756 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/pmic/bl_mt6385.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1757 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1758, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1758 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/pmic/bl_max14745.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1759 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1760, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1761, retainedTypes: !1762, splitDebugInlining: false, nameTableKind: None)
!1760 = !DIFile(filename: "../../../../../driver/board/mt25x3_hdk/bootloader/core/src/bl_wdt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1761 = !{!1644, !1639}
!1762 = !{!7, !72, !199}
!1763 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1764, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1765, retainedTypes: !1780, splitDebugInlining: false, nameTableKind: None)
!1764 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_i2c_pmic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1765 = !{!1766, !129, !1774, !459, !442}
!1766 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !130, line: 65, baseType: !20, size: 32, elements: !1767)
!1767 = !{!1768, !1769, !1770, !1771, !1772, !1773}
!1768 = !DIEnumerator(name: "PMIC_I2C_STATUS_ACK_ERROR", value: -105)
!1769 = !DIEnumerator(name: "PMIC_I2C_STATUS_NACK_ERROR", value: -104)
!1770 = !DIEnumerator(name: "PMIC_I2C_STATUS_ERROR", value: -103)
!1771 = !DIEnumerator(name: "PMIC_I2C_STATUS_INVALID_PORT_NUMBER", value: -102)
!1772 = !DIEnumerator(name: "PMIC_I2C_STATUS_INVALID_PARAMETER", value: -101)
!1773 = !DIEnumerator(name: "PMIC_I2C_STATUS_OK", value: 0)
!1774 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !373, line: 302, baseType: !7, size: 32, elements: !1775)
!1775 = !{!1776, !1777, !1778, !1779}
!1776 = !DIEnumerator(name: "HAL_I2C_MASTER_0", value: 0)
!1777 = !DIEnumerator(name: "HAL_I2C_MASTER_1", value: 1)
!1778 = !DIEnumerator(name: "HAL_I2C_MASTER_2", value: 2)
!1779 = !DIEnumerator(name: "HAL_I2C_MASTER_MAX", value: 3)
!1780 = !{!36, !199, !1781}
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_status_t", file: !130, line: 72, baseType: !1766)
!1782 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1783, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1783 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1784 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1785, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!1785 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1786 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1788, retainedTypes: !1874, splitDebugInlining: false, nameTableKind: None)
!1787 = !DIFile(filename: "../../../../../driver/chip/mt2523//src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1788 = !{!1789, !1866}
!1789 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !486, line: 44, baseType: !20, size: 32, elements: !1790)
!1790 = !{!1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865}
!1791 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!1792 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!1793 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!1794 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!1795 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!1796 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!1797 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!1798 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!1799 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!1800 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!1801 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!1802 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!1803 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!1804 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!1805 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!1806 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!1807 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!1808 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!1809 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!1810 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!1811 = !DIEnumerator(name: "KP_IRQn", value: 10)
!1812 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!1813 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!1814 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!1815 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!1816 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!1817 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!1818 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!1819 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!1820 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!1821 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!1822 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!1823 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!1824 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!1825 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!1826 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!1827 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!1828 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!1829 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!1830 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!1831 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!1832 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!1833 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!1834 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!1835 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!1836 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!1837 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!1838 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!1839 = !DIEnumerator(name: "SF_IRQn", value: 38)
!1840 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!1841 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!1842 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!1843 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!1844 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!1845 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!1846 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!1847 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!1848 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!1849 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!1850 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!1851 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!1852 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!1853 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!1854 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!1855 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!1856 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!1857 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!1858 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!1859 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!1860 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!1861 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!1862 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!1863 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!1864 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!1865 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!1866 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1867, line: 152, baseType: !20, size: 32, elements: !1868)
!1867 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1868 = !{!1869, !1870, !1871, !1872, !1873}
!1869 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!1870 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!1871 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!1872 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!1873 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!1874 = !{!1875, !1877, !36, !1902, !16}
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !486, line: 125, baseType: !1876)
!1876 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !486, line: 123, baseType: !1789)
!1877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1878, size: 32)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1652, line: 418, baseType: !1879)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1652, line: 395, size: 1120, elements: !1880)
!1880 = !{!1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1879, file: !1652, line: 397, baseType: !86, size: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1879, file: !1652, line: 398, baseType: !82, size: 32, offset: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1879, file: !1652, line: 399, baseType: !82, size: 32, offset: 64)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1879, file: !1652, line: 400, baseType: !82, size: 32, offset: 96)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1879, file: !1652, line: 401, baseType: !82, size: 32, offset: 128)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1879, file: !1652, line: 402, baseType: !82, size: 32, offset: 160)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1879, file: !1652, line: 403, baseType: !1662, size: 96, offset: 192)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1879, file: !1652, line: 404, baseType: !82, size: 32, offset: 288)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1879, file: !1652, line: 405, baseType: !82, size: 32, offset: 320)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1879, file: !1652, line: 406, baseType: !82, size: 32, offset: 352)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1879, file: !1652, line: 407, baseType: !82, size: 32, offset: 384)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1879, file: !1652, line: 408, baseType: !82, size: 32, offset: 416)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1879, file: !1652, line: 409, baseType: !82, size: 32, offset: 448)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1879, file: !1652, line: 410, baseType: !82, size: 32, offset: 480)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1879, file: !1652, line: 411, baseType: !1673, size: 64, offset: 512)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1879, file: !1652, line: 412, baseType: !86, size: 32, offset: 576)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1879, file: !1652, line: 413, baseType: !86, size: 32, offset: 608)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1879, file: !1652, line: 414, baseType: !1677, size: 128, offset: 640)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1879, file: !1652, line: 415, baseType: !1679, size: 160, offset: 768)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1879, file: !1652, line: 416, baseType: !1681, size: 160, offset: 928)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1879, file: !1652, line: 417, baseType: !82, size: 32, offset: 1088)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1652, line: 378, baseType: !1904)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1652, line: 363, size: 28704, elements: !1905)
!1905 = !{!1906, !1908, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1923, !1927, !1931}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1904, file: !1652, line: 365, baseType: !1907, size: 256)
!1907 = !DICompositeType(tag: DW_TAG_array_type, baseType: !82, size: 256, elements: !980)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1904, file: !1652, line: 366, baseType: !1909, size: 768, offset: 256)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 768, elements: !1910)
!1910 = !{!1911}
!1911 = !DISubrange(count: 24)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1904, file: !1652, line: 367, baseType: !1907, size: 256, offset: 1024)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1904, file: !1652, line: 368, baseType: !1909, size: 768, offset: 1280)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1904, file: !1652, line: 369, baseType: !1907, size: 256, offset: 2048)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1904, file: !1652, line: 370, baseType: !1909, size: 768, offset: 2304)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1904, file: !1652, line: 371, baseType: !1907, size: 256, offset: 3072)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1904, file: !1652, line: 372, baseType: !1909, size: 768, offset: 3328)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1904, file: !1652, line: 373, baseType: !1907, size: 256, offset: 4096)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1904, file: !1652, line: 374, baseType: !1920, size: 1792, offset: 4352)
!1920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 1792, elements: !1921)
!1921 = !{!1922}
!1922 = !DISubrange(count: 56)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1904, file: !1652, line: 375, baseType: !1924, size: 1920, offset: 6144)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !785, size: 1920, elements: !1925)
!1925 = !{!1926}
!1926 = !DISubrange(count: 240)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1904, file: !1652, line: 376, baseType: !1928, size: 20608, offset: 8064)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 20608, elements: !1929)
!1929 = !{!1930}
!1930 = !DISubrange(count: 644)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1904, file: !1652, line: 377, baseType: !82, size: 32, offset: 28672)
!1932 = !{!"Ubuntu clang version 14.0.6"}
!1933 = !{i32 7, !"Dwarf Version", i32 2}
!1934 = !{i32 2, !"Debug Info Version", i32 3}
!1935 = !{i32 1, !"wchar_size", i32 4}
!1936 = !{i32 1, !"min_enum_size", i32 4}
!1937 = !{i32 1, !"branch-target-enforcement", i32 0}
!1938 = !{i32 1, !"sign-return-address", i32 0}
!1939 = !{i32 1, !"sign-return-address-all", i32 0}
!1940 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!1941 = !{i32 7, !"frame-pointer", i32 2}
!1942 = distinct !DISubprogram(name: "lzma_decode", scope: !1581, file: !1581, line: 81, type: !1943, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1580, retainedNodes: !1955)
!1943 = !DISubroutineType(types: !1944)
!1944 = !{!1945, !184, !187, !1947, !187, !1947, !36, !1949}
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "LZMA_ret", file: !1946, line: 63, baseType: !20)
!1946 = !DIFile(filename: "../../../../../middleware/third_party/lzma_decoder/inc/lzma_decode_interface.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !185)
!1949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 32)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "lzma_alloc_t", file: !1946, line: 69, baseType: !1951)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1946, line: 66, size: 64, elements: !1952)
!1952 = !{!1953, !1954}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "Alloc", scope: !1951, file: !1946, line: 67, baseType: !1605, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "Free", scope: !1951, file: !1946, line: 68, baseType: !205, size: 32, offset: 32)
!1955 = !{!1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1965, !1966, !1967, !1968, !1969}
!1956 = !DILocalVariable(name: "destination", arg: 1, scope: !1942, file: !1581, line: 82, type: !184)
!1957 = !DILocalVariable(name: "destination_length", arg: 2, scope: !1942, file: !1581, line: 83, type: !187)
!1958 = !DILocalVariable(name: "source", arg: 3, scope: !1942, file: !1581, line: 84, type: !1947)
!1959 = !DILocalVariable(name: "source_length", arg: 4, scope: !1942, file: !1581, line: 85, type: !187)
!1960 = !DILocalVariable(name: "compression_property", arg: 5, scope: !1942, file: !1581, line: 86, type: !1947)
!1961 = !DILocalVariable(name: "compression_property_size", arg: 6, scope: !1942, file: !1581, line: 87, type: !36)
!1962 = !DILocalVariable(name: "lzma_alloc", arg: 7, scope: !1942, file: !1581, line: 88, type: !1949)
!1963 = !DILocalVariable(name: "SRes_ret", scope: !1942, file: !1581, line: 90, type: !1964)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "SRes", file: !1597, line: 43, baseType: !20)
!1965 = !DILocalVariable(name: "LZMA_ret", scope: !1942, file: !1581, line: 91, type: !1945)
!1966 = !DILocalVariable(name: "destination_length_sizeT", scope: !1942, file: !1581, line: 92, type: !1596)
!1967 = !DILocalVariable(name: "source_length_sizeT", scope: !1942, file: !1581, line: 93, type: !1596)
!1968 = !DILocalVariable(name: "g_alloc", scope: !1942, file: !1581, line: 94, type: !1600)
!1969 = !DILocalVariable(name: "status", scope: !1942, file: !1581, line: 95, type: !1970)
!1970 = !DIDerivedType(tag: DW_TAG_typedef, name: "ELzmaStatus", file: !1584, line: 105, baseType: !1583)
!1971 = !DILocation(line: 0, scope: !1942)
!1972 = !DILocation(line: 92, column: 5, scope: !1942)
!1973 = !DILocation(line: 92, column: 45, scope: !1942)
!1974 = !DILocation(line: 92, column: 11, scope: !1942)
!1975 = !DILocation(line: 93, column: 5, scope: !1942)
!1976 = !DILocation(line: 93, column: 40, scope: !1942)
!1977 = !DILocation(line: 93, column: 11, scope: !1942)
!1978 = !DILocation(line: 95, column: 5, scope: !1942)
!1979 = !DILocation(line: 97, column: 15, scope: !1942)
!1980 = !DILocation(line: 100, column: 16, scope: !1942)
!1981 = !DILocation(line: 102, column: 41, scope: !1942)
!1982 = !DILocation(line: 102, column: 25, scope: !1942)
!1983 = !DILocation(line: 103, column: 36, scope: !1942)
!1984 = !DILocation(line: 103, column: 20, scope: !1942)
!1985 = !DILocation(line: 107, column: 1, scope: !1942)
!1986 = !DILocation(line: 106, column: 5, scope: !1942)
!1987 = distinct !DISubprogram(name: "lzma_decode2flash", scope: !1581, file: !1581, line: 301, type: !1988, scopeLine: 306, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1580, retainedNodes: !1990)
!1988 = !DISubroutineType(types: !1989)
!1989 = !{!1945, !184, !36, !1947, !1949}
!1990 = !{!1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2032, !2036, !2037}
!1991 = !DILocalVariable(name: "destination", arg: 1, scope: !1987, file: !1581, line: 302, type: !184)
!1992 = !DILocalVariable(name: "reserved_size", arg: 2, scope: !1987, file: !1581, line: 303, type: !36)
!1993 = !DILocalVariable(name: "source", arg: 3, scope: !1987, file: !1581, line: 304, type: !1947)
!1994 = !DILocalVariable(name: "lzma_alloc", arg: 4, scope: !1987, file: !1581, line: 305, type: !1949)
!1995 = !DILocalVariable(name: "unpackSize", scope: !1987, file: !1581, line: 307, type: !36)
!1996 = !DILocalVariable(name: "i", scope: !1987, file: !1581, line: 308, type: !20)
!1997 = !DILocalVariable(name: "res", scope: !1987, file: !1581, line: 309, type: !1964)
!1998 = !DILocalVariable(name: "g_alloc", scope: !1987, file: !1581, line: 310, type: !1600)
!1999 = !DILocalVariable(name: "state", scope: !1987, file: !1581, line: 311, type: !2000)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "CLzmaDec", file: !1584, line: 67, baseType: !2001)
!2001 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1584, line: 48, size: 896, elements: !2002)
!2002 = !{!2003, !2011, !2012, !2013, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2025, !2026, !2027, !2028, !2029, !2030}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2001, file: !1584, line: 50, baseType: !2004, size: 128)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "CLzmaProps", file: !1584, line: 30, baseType: !2005)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_CLzmaProps", file: !1584, line: 26, size: 128, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "lc", scope: !2005, file: !1584, line: 28, baseType: !7, size: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "lp", scope: !2005, file: !1584, line: 28, baseType: !7, size: 32, offset: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !2005, file: !1584, line: 28, baseType: !7, size: 32, offset: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "dicSize", scope: !2005, file: !1584, line: 29, baseType: !1632, size: 32, offset: 96)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "probs", scope: !2001, file: !1584, line: 51, baseType: !1635, size: 32, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "dic", scope: !2001, file: !1584, line: 52, baseType: !1620, size: 32, offset: 160)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2001, file: !1584, line: 53, baseType: !2014, size: 32, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1621)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2001, file: !1584, line: 54, baseType: !1632, size: 32, offset: 224)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2001, file: !1584, line: 54, baseType: !1632, size: 32, offset: 256)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "dicPos", scope: !2001, file: !1584, line: 55, baseType: !1596, size: 32, offset: 288)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "dicBufSize", scope: !2001, file: !1584, line: 56, baseType: !1596, size: 32, offset: 320)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "processedPos", scope: !2001, file: !1584, line: 57, baseType: !1632, size: 32, offset: 352)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "checkDicSize", scope: !2001, file: !1584, line: 58, baseType: !1632, size: 32, offset: 384)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2001, file: !1584, line: 59, baseType: !7, size: 32, offset: 416)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "reps", scope: !2001, file: !1584, line: 60, baseType: !2024, size: 128, offset: 448)
!2024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1632, size: 128, elements: !249)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "remainLen", scope: !2001, file: !1584, line: 61, baseType: !7, size: 32, offset: 576)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "needFlush", scope: !2001, file: !1584, line: 62, baseType: !20, size: 32, offset: 608)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "needInitState", scope: !2001, file: !1584, line: 63, baseType: !20, size: 32, offset: 640)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "numProbs", scope: !2001, file: !1584, line: 64, baseType: !1632, size: 32, offset: 672)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "tempBufSize", scope: !2001, file: !1584, line: 65, baseType: !7, size: 32, offset: 704)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "tempBuf", scope: !2001, file: !1584, line: 66, baseType: !2031, size: 160, offset: 736)
!2031 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1621, size: 160, elements: !351)
!2032 = !DILocalVariable(name: "lzma_header", scope: !1987, file: !1581, line: 312, type: !2033)
!2033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 104, elements: !2034)
!2034 = !{!2035}
!2035 = !DISubrange(count: 13)
!2036 = !DILocalVariable(name: "read_ret", scope: !1987, file: !1581, line: 313, type: !1402)
!2037 = !DILocalVariable(name: "flash_wait_count", scope: !1987, file: !1581, line: 314, type: !20)
!2038 = !DILocation(line: 0, scope: !1987)
!2039 = !DILocation(line: 311, column: 5, scope: !1987)
!2040 = !DILocation(line: 311, column: 14, scope: !1987)
!2041 = !DILocation(line: 312, column: 5, scope: !1987)
!2042 = !DILocation(line: 312, column: 19, scope: !1987)
!2043 = !DILocation(line: 316, column: 15, scope: !1987)
!2044 = !DILocation(line: 318, column: 9, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !1987, file: !1581, line: 318, column: 9)
!2046 = !DILocation(line: 318, column: 31, scope: !2045)
!2047 = !DILocation(line: 318, column: 50, scope: !2045)
!2048 = !DILocation(line: 318, column: 9, scope: !1987)
!2049 = !DILocation(line: 320, column: 9, scope: !2050)
!2050 = distinct !DILexicalBlock(scope: !2045, file: !1581, line: 319, column: 5)
!2051 = !DILocation(line: 321, column: 9, scope: !2050)
!2052 = !DILocation(line: 324, column: 9, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !1987, file: !1581, line: 324, column: 9)
!2054 = !DILocation(line: 324, column: 23, scope: !2053)
!2055 = !DILocation(line: 324, column: 38, scope: !2053)
!2056 = !DILocation(line: 0, scope: !2053)
!2057 = !DILocation(line: 332, column: 18, scope: !2058)
!2058 = distinct !DILexicalBlock(scope: !1987, file: !1581, line: 332, column: 9)
!2059 = !DILocation(line: 332, column: 9, scope: !1987)
!2060 = !DILocation(line: 334, column: 9, scope: !2061)
!2061 = distinct !DILexicalBlock(scope: !2058, file: !1581, line: 333, column: 5)
!2062 = !DILocation(line: 335, column: 9, scope: !2061)
!2063 = !DILocation(line: 340, column: 61, scope: !2064)
!2064 = distinct !DILexicalBlock(scope: !2065, file: !1581, line: 339, column: 5)
!2065 = distinct !DILexicalBlock(scope: !1987, file: !1581, line: 339, column: 5)
!2066 = !DILocation(line: 340, column: 33, scope: !2064)
!2067 = !DILocation(line: 340, column: 23, scope: !2064)
!2068 = !DILocation(line: 340, column: 72, scope: !2064)
!2069 = !DILocation(line: 340, column: 66, scope: !2064)
!2070 = !DILocation(line: 340, column: 20, scope: !2064)
!2071 = !DILocation(line: 339, column: 25, scope: !2064)
!2072 = !DILocation(line: 339, column: 19, scope: !2064)
!2073 = !DILocation(line: 339, column: 5, scope: !2065)
!2074 = distinct !{!2074, !2073, !2075}
!2075 = !DILocation(line: 340, column: 75, scope: !2065)
!2076 = !DILocation(line: 342, column: 19, scope: !2077)
!2077 = distinct !DILexicalBlock(scope: !1987, file: !1581, line: 342, column: 8)
!2078 = !DILocation(line: 342, column: 8, scope: !1987)
!2079 = !DILocation(line: 344, column: 9, scope: !2080)
!2080 = distinct !DILexicalBlock(scope: !2077, file: !1581, line: 343, column: 5)
!2081 = !DILocation(line: 345, column: 9, scope: !2080)
!2082 = !DILocation(line: 348, column: 5, scope: !2083)
!2083 = distinct !DILexicalBlock(scope: !1987, file: !1581, line: 348, column: 5)
!2084 = !DILocation(line: 349, column: 5, scope: !1987)
!2085 = !DILocation(line: 350, column: 5, scope: !1987)
!2086 = !DILocation(line: 351, column: 5, scope: !1987)
!2087 = !DILocation(line: 352, column: 5, scope: !1987)
!2088 = !DILocation(line: 353, column: 5, scope: !1987)
!2089 = !DILocation(line: 359, column: 11, scope: !1987)
!2090 = !DILocation(line: 360, column: 5, scope: !1987)
!2091 = !DILocation(line: 361, column: 5, scope: !1987)
!2092 = !DILocation(line: 362, column: 1, scope: !1987)
!2093 = distinct !DISubprogram(name: "Decode2Ram", scope: !1581, file: !1581, line: 177, type: !2094, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1580, retainedNodes: !2097)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{!1964, !2096, !184, !184, !36, !1600}
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 32)
!2097 = !{!2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2116, !2117, !2118}
!2098 = !DILocalVariable(name: "state", arg: 1, scope: !2093, file: !1581, line: 177, type: !2096)
!2099 = !DILocalVariable(name: "des", arg: 2, scope: !2093, file: !1581, line: 177, type: !184)
!2100 = !DILocalVariable(name: "src", arg: 3, scope: !2093, file: !1581, line: 177, type: !184)
!2101 = !DILocalVariable(name: "unpackSize", arg: 4, scope: !2093, file: !1581, line: 177, type: !36)
!2102 = !DILocalVariable(name: "alloc", arg: 5, scope: !2093, file: !1581, line: 177, type: !1600)
!2103 = !DILocalVariable(name: "thereIsSize", scope: !2093, file: !1581, line: 179, type: !20)
!2104 = !DILocalVariable(name: "inBuf", scope: !2093, file: !1581, line: 180, type: !1620)
!2105 = !DILocalVariable(name: "outBuf", scope: !2093, file: !1581, line: 181, type: !1620)
!2106 = !DILocalVariable(name: "inPos", scope: !2093, file: !1581, line: 182, type: !1598)
!2107 = !DILocalVariable(name: "inSize", scope: !2093, file: !1581, line: 182, type: !1598)
!2108 = !DILocalVariable(name: "outPos", scope: !2093, file: !1581, line: 182, type: !1598)
!2109 = !DILocalVariable(name: "ret", scope: !2093, file: !1581, line: 183, type: !1402)
!2110 = !DILocalVariable(name: "res", scope: !2093, file: !1581, line: 184, type: !1964)
!2111 = !DILocalVariable(name: "inProcessed", scope: !2093, file: !1581, line: 185, type: !1596)
!2112 = !DILocalVariable(name: "outProcessed", scope: !2093, file: !1581, line: 186, type: !1596)
!2113 = !DILocalVariable(name: "status", scope: !2093, file: !1581, line: 187, type: !1970)
!2114 = !DILocalVariable(name: "finishMode", scope: !2093, file: !1581, line: 188, type: !2115)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "ELzmaFinishMode", file: !1584, line: 81, baseType: !1591)
!2116 = !DILocalVariable(name: "read_ptr", scope: !2093, file: !1581, line: 191, type: !184)
!2117 = !DILocalVariable(name: "write_ptr", scope: !2093, file: !1581, line: 192, type: !184)
!2118 = !DILocalVariable(name: "flash_wait_count", scope: !2093, file: !1581, line: 193, type: !20)
!2119 = !DILocation(line: 0, scope: !2093)
!2120 = !DILocation(line: 179, column: 35, scope: !2093)
!2121 = !DILocation(line: 185, column: 4, scope: !2093)
!2122 = !DILocation(line: 186, column: 4, scope: !2093)
!2123 = !DILocation(line: 187, column: 4, scope: !2093)
!2124 = !DILocation(line: 195, column: 33, scope: !2125)
!2125 = distinct !DILexicalBlock(scope: !2093, file: !1581, line: 195, column: 9)
!2126 = !DILocation(line: 195, column: 39, scope: !2125)
!2127 = !DILocation(line: 195, column: 26, scope: !2125)
!2128 = !DILocation(line: 195, column: 60, scope: !2125)
!2129 = !DILocation(line: 195, column: 9, scope: !2093)
!2130 = !DILocation(line: 197, column: 9, scope: !2131)
!2131 = distinct !DILexicalBlock(scope: !2125, file: !1581, line: 196, column: 5)
!2132 = !DILocation(line: 198, column: 9, scope: !2131)
!2133 = !DILocation(line: 201, column: 34, scope: !2134)
!2134 = distinct !DILexicalBlock(scope: !2093, file: !1581, line: 201, column: 9)
!2135 = !DILocation(line: 201, column: 27, scope: !2134)
!2136 = !DILocation(line: 201, column: 62, scope: !2134)
!2137 = !DILocation(line: 201, column: 9, scope: !2093)
!2138 = !DILocation(line: 203, column: 9, scope: !2139)
!2139 = distinct !DILexicalBlock(scope: !2134, file: !1581, line: 202, column: 5)
!2140 = !DILocation(line: 204, column: 9, scope: !2139)
!2141 = !DILocation(line: 207, column: 5, scope: !2093)
!2142 = !DILocation(line: 208, column: 11, scope: !2093)
!2143 = !DILocation(line: 209, column: 13, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !2093, file: !1581, line: 209, column: 9)
!2145 = !DILocation(line: 209, column: 9, scope: !2093)
!2146 = !DILocation(line: 211, column: 9, scope: !2147)
!2147 = distinct !DILexicalBlock(scope: !2144, file: !1581, line: 210, column: 5)
!2148 = !DILocation(line: 212, column: 9, scope: !2147)
!2149 = !DILocation(line: 217, column: 19, scope: !2150)
!2150 = distinct !DILexicalBlock(scope: !2151, file: !1581, line: 217, column: 13)
!2151 = distinct !DILexicalBlock(scope: !2152, file: !1581, line: 216, column: 5)
!2152 = distinct !DILexicalBlock(scope: !2153, file: !1581, line: 215, column: 5)
!2153 = distinct !DILexicalBlock(scope: !2093, file: !1581, line: 215, column: 5)
!2154 = !DILocation(line: 217, column: 13, scope: !2151)
!2155 = !DILocation(line: 220, column: 13, scope: !2156)
!2156 = distinct !DILexicalBlock(scope: !2150, file: !1581, line: 218, column: 9)
!2157 = !DILocation(line: 224, column: 17, scope: !2158)
!2158 = distinct !DILexicalBlock(scope: !2156, file: !1581, line: 224, column: 17)
!2159 = !DILocation(line: 224, column: 31, scope: !2158)
!2160 = !DILocation(line: 224, column: 46, scope: !2158)
!2161 = !DILocation(line: 0, scope: !2158)
!2162 = !DILocation(line: 233, column: 21, scope: !2163)
!2163 = distinct !DILexicalBlock(scope: !2156, file: !1581, line: 233, column: 17)
!2164 = !DILocation(line: 233, column: 17, scope: !2156)
!2165 = !DILocation(line: 235, column: 17, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2163, file: !1581, line: 234, column: 13)
!2167 = !DILocation(line: 236, column: 17, scope: !2166)
!2168 = !DILocation(line: 238, column: 33, scope: !2156)
!2169 = !DILocation(line: 240, column: 9, scope: !2156)
!2170 = !DILocation(line: 242, column: 30, scope: !2151)
!2171 = !DILocation(line: 242, column: 21, scope: !2151)
!2172 = !DILocation(line: 245, column: 25, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2151, file: !1581, line: 245, column: 13)
!2174 = !DILocation(line: 0, scope: !2173)
!2175 = !DILocation(line: 253, column: 17, scope: !2151)
!2176 = !DILocation(line: 252, column: 15, scope: !2151)
!2177 = !DILocation(line: 255, column: 18, scope: !2151)
!2178 = !DILocation(line: 255, column: 15, scope: !2151)
!2179 = !DILocation(line: 256, column: 19, scope: !2151)
!2180 = !DILocation(line: 257, column: 20, scope: !2151)
!2181 = !DILocation(line: 259, column: 13, scope: !2182)
!2182 = distinct !DILexicalBlock(scope: !2151, file: !1581, line: 259, column: 13)
!2183 = !DILocation(line: 259, column: 52, scope: !2182)
!2184 = !DILocation(line: 259, column: 13, scope: !2151)
!2185 = !DILocation(line: 261, column: 20, scope: !2186)
!2186 = distinct !DILexicalBlock(scope: !2182, file: !1581, line: 260, column: 9)
!2187 = !DILocation(line: 261, column: 13, scope: !2186)
!2188 = !DILocation(line: 262, column: 20, scope: !2186)
!2189 = !DILocation(line: 262, column: 13, scope: !2186)
!2190 = !DILocation(line: 263, column: 13, scope: !2186)
!2191 = !DILocation(line: 265, column: 31, scope: !2151)
!2192 = !DILocation(line: 268, column: 17, scope: !2193)
!2193 = distinct !DILexicalBlock(scope: !2151, file: !1581, line: 268, column: 13)
!2194 = !DILocation(line: 268, column: 26, scope: !2193)
!2195 = !DILocation(line: 268, column: 42, scope: !2193)
!2196 = !DILocation(line: 270, column: 20, scope: !2197)
!2197 = distinct !DILexicalBlock(scope: !2193, file: !1581, line: 269, column: 9)
!2198 = !DILocation(line: 270, column: 13, scope: !2197)
!2199 = !DILocation(line: 271, column: 20, scope: !2197)
!2200 = !DILocation(line: 271, column: 13, scope: !2197)
!2201 = !DILocation(line: 272, column: 13, scope: !2197)
!2202 = !DILocation(line: 275, column: 13, scope: !2203)
!2203 = distinct !DILexicalBlock(scope: !2151, file: !1581, line: 275, column: 13)
!2204 = !DILocation(line: 275, column: 25, scope: !2203)
!2205 = !DILocation(line: 275, column: 30, scope: !2203)
!2206 = !DILocation(line: 277, column: 29, scope: !2207)
!2207 = distinct !DILexicalBlock(scope: !2208, file: !1581, line: 277, column: 17)
!2208 = distinct !DILexicalBlock(scope: !2203, file: !1581, line: 276, column: 9)
!2209 = !DILocation(line: 0, scope: !2208)
!2210 = !DILocation(line: 287, column: 13, scope: !2151)
!2211 = !DILocation(line: 289, column: 20, scope: !2212)
!2212 = distinct !DILexicalBlock(scope: !2213, file: !1581, line: 288, column: 9)
!2213 = distinct !DILexicalBlock(scope: !2151, file: !1581, line: 287, column: 13)
!2214 = !DILocation(line: 289, column: 13, scope: !2212)
!2215 = !DILocation(line: 290, column: 20, scope: !2212)
!2216 = !DILocation(line: 290, column: 13, scope: !2212)
!2217 = !DILocation(line: 291, column: 13, scope: !2212)
!2218 = !DILocation(line: 295, column: 9, scope: !2151)
!2219 = !DILocation(line: 215, column: 5, scope: !2152)
!2220 = distinct !{!2220, !2221, !2222}
!2221 = !DILocation(line: 215, column: 5, scope: !2153)
!2222 = !DILocation(line: 297, column: 5, scope: !2153)
!2223 = !DILocation(line: 298, column: 1, scope: !2093)
!2224 = distinct !DISubprogram(name: "Write2Flash", scope: !1581, file: !1581, line: 110, type: !2225, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1580, retainedNodes: !2227)
!2225 = !DISubroutineType(types: !2226)
!2226 = !{!1402, !184, !184, !36}
!2227 = !{!2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237}
!2228 = !DILocalVariable(name: "des", arg: 1, scope: !2224, file: !1581, line: 110, type: !184)
!2229 = !DILocalVariable(name: "buf", arg: 2, scope: !2224, file: !1581, line: 110, type: !184)
!2230 = !DILocalVariable(name: "length", arg: 3, scope: !2224, file: !1581, line: 110, type: !36)
!2231 = !DILocalVariable(name: "current_block", scope: !2224, file: !1581, line: 112, type: !36)
!2232 = !DILocalVariable(name: "current_block_start_addr", scope: !2224, file: !1581, line: 113, type: !184)
!2233 = !DILocalVariable(name: "end_addr", scope: !2224, file: !1581, line: 114, type: !184)
!2234 = !DILocalVariable(name: "end_block", scope: !2224, file: !1581, line: 115, type: !36)
!2235 = !DILocalVariable(name: "block_idx", scope: !2224, file: !1581, line: 116, type: !36)
!2236 = !DILocalVariable(name: "erase_address", scope: !2224, file: !1581, line: 117, type: !36)
!2237 = !DILocalVariable(name: "flash_op_ret", scope: !2224, file: !1581, line: 118, type: !1402)
!2238 = !DILocation(line: 0, scope: !2224)
!2239 = !DILocation(line: 121, column: 20, scope: !2224)
!2240 = !DILocation(line: 121, column: 29, scope: !2224)
!2241 = !DILocation(line: 122, column: 17, scope: !2224)
!2242 = !DILocation(line: 122, column: 36, scope: !2224)
!2243 = !DILocation(line: 124, column: 21, scope: !2224)
!2244 = !DILocation(line: 124, column: 35, scope: !2224)
!2245 = !DILocation(line: 125, column: 58, scope: !2224)
!2246 = !DILocation(line: 125, column: 32, scope: !2224)
!2247 = !DILocation(line: 127, column: 34, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2224, file: !1581, line: 127, column: 9)
!2249 = !DILocation(line: 127, column: 9, scope: !2224)
!2250 = !DILocation(line: 138, column: 46, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2252, file: !1581, line: 138, column: 5)
!2252 = distinct !DILexicalBlock(scope: !2224, file: !1581, line: 138, column: 5)
!2253 = !DILocation(line: 138, column: 5, scope: !2252)
!2254 = !DILocation(line: 138, column: 69, scope: !2251)
!2255 = distinct !{!2255, !2253, !2256}
!2256 = !DILocation(line: 157, column: 5, scope: !2252)
!2257 = !DILocation(line: 141, column: 35, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2251, file: !1581, line: 139, column: 5)
!2259 = !DILocation(line: 142, column: 13, scope: !2260)
!2260 = distinct !DILexicalBlock(scope: !2258, file: !1581, line: 142, column: 13)
!2261 = !DILocation(line: 142, column: 27, scope: !2260)
!2262 = !DILocation(line: 142, column: 42, scope: !2260)
!2263 = !DILocation(line: 0, scope: !2260)
!2264 = !DILocation(line: 152, column: 26, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2258, file: !1581, line: 152, column: 13)
!2266 = !DILocation(line: 152, column: 13, scope: !2258)
!2267 = !DILocation(line: 159, column: 9, scope: !2268)
!2268 = distinct !DILexicalBlock(scope: !2224, file: !1581, line: 159, column: 9)
!2269 = !DILocation(line: 159, column: 23, scope: !2268)
!2270 = !DILocation(line: 159, column: 38, scope: !2268)
!2271 = !DILocation(line: 0, scope: !2268)
!2272 = !DILocation(line: 169, column: 22, scope: !2273)
!2273 = distinct !DILexicalBlock(scope: !2224, file: !1581, line: 169, column: 9)
!2274 = !DILocation(line: 169, column: 9, scope: !2224)
!2275 = !DILocation(line: 171, column: 9, scope: !2276)
!2276 = distinct !DILexicalBlock(scope: !2273, file: !1581, line: 170, column: 5)
!2277 = !DILocation(line: 172, column: 9, scope: !2276)
!2278 = !DILocation(line: 175, column: 1, scope: !2224)
!2279 = distinct !DISubprogram(name: "LzmaDec_InitDicAndState", scope: !1623, file: !1623, line: 766, type: !2280, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !2312)
!2280 = !DISubroutineType(types: !2281)
!2281 = !{null, !2282, !2311, !2311}
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "CLzmaDec", file: !1584, line: 67, baseType: !2284)
!2284 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1584, line: 48, size: 896, elements: !2285)
!2285 = !{!2286, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310}
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2284, file: !1584, line: 50, baseType: !2287, size: 128)
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "CLzmaProps", file: !1584, line: 30, baseType: !2288)
!2288 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_CLzmaProps", file: !1584, line: 26, size: 128, elements: !2289)
!2289 = !{!2290, !2291, !2292, !2293}
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "lc", scope: !2288, file: !1584, line: 28, baseType: !7, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "lp", scope: !2288, file: !1584, line: 28, baseType: !7, size: 32, offset: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "pb", scope: !2288, file: !1584, line: 28, baseType: !7, size: 32, offset: 64)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "dicSize", scope: !2288, file: !1584, line: 29, baseType: !1632, size: 32, offset: 96)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "probs", scope: !2284, file: !1584, line: 51, baseType: !1635, size: 32, offset: 128)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "dic", scope: !2284, file: !1584, line: 52, baseType: !1620, size: 32, offset: 160)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !2284, file: !1584, line: 53, baseType: !2014, size: 32, offset: 192)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2284, file: !1584, line: 54, baseType: !1632, size: 32, offset: 224)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2284, file: !1584, line: 54, baseType: !1632, size: 32, offset: 256)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "dicPos", scope: !2284, file: !1584, line: 55, baseType: !1596, size: 32, offset: 288)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "dicBufSize", scope: !2284, file: !1584, line: 56, baseType: !1596, size: 32, offset: 320)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "processedPos", scope: !2284, file: !1584, line: 57, baseType: !1632, size: 32, offset: 352)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "checkDicSize", scope: !2284, file: !1584, line: 58, baseType: !1632, size: 32, offset: 384)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2284, file: !1584, line: 59, baseType: !7, size: 32, offset: 416)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "reps", scope: !2284, file: !1584, line: 60, baseType: !2024, size: 128, offset: 448)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "remainLen", scope: !2284, file: !1584, line: 61, baseType: !7, size: 32, offset: 576)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "needFlush", scope: !2284, file: !1584, line: 62, baseType: !20, size: 32, offset: 608)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "needInitState", scope: !2284, file: !1584, line: 63, baseType: !20, size: 32, offset: 640)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "numProbs", scope: !2284, file: !1584, line: 64, baseType: !1632, size: 32, offset: 672)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "tempBufSize", scope: !2284, file: !1584, line: 65, baseType: !7, size: 32, offset: 704)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "tempBuf", scope: !2284, file: !1584, line: 66, baseType: !2031, size: 160, offset: 736)
!2311 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bool", file: !1597, line: 96, baseType: !20)
!2312 = !{!2313, !2314, !2315}
!2313 = !DILocalVariable(name: "p", arg: 1, scope: !2279, file: !1623, line: 766, type: !2282)
!2314 = !DILocalVariable(name: "initDic", arg: 2, scope: !2279, file: !1623, line: 766, type: !2311)
!2315 = !DILocalVariable(name: "initState", arg: 3, scope: !2279, file: !1623, line: 766, type: !2311)
!2316 = !DILocation(line: 0, scope: !2279)
!2317 = !DILocation(line: 768, column: 6, scope: !2279)
!2318 = !DILocation(line: 768, column: 16, scope: !2279)
!2319 = !DILocation(line: 769, column: 6, scope: !2279)
!2320 = !DILocation(line: 769, column: 16, scope: !2279)
!2321 = !DILocation(line: 770, column: 6, scope: !2279)
!2322 = !DILocation(line: 770, column: 18, scope: !2279)
!2323 = !DILocation(line: 772, column: 7, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2279, file: !1623, line: 772, column: 7)
!2325 = !DILocation(line: 772, column: 7, scope: !2279)
!2326 = !DILocation(line: 774, column: 8, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2324, file: !1623, line: 773, column: 3)
!2328 = !DILocation(line: 774, column: 21, scope: !2327)
!2329 = !DILocation(line: 775, column: 8, scope: !2327)
!2330 = !DILocation(line: 775, column: 21, scope: !2327)
!2331 = !DILocation(line: 776, column: 8, scope: !2327)
!2332 = !DILocation(line: 776, column: 22, scope: !2327)
!2333 = !DILocation(line: 777, column: 3, scope: !2327)
!2334 = !DILocation(line: 778, column: 7, scope: !2335)
!2335 = distinct !DILexicalBlock(scope: !2279, file: !1623, line: 778, column: 7)
!2336 = !DILocation(line: 778, column: 7, scope: !2279)
!2337 = !DILocation(line: 779, column: 8, scope: !2335)
!2338 = !DILocation(line: 779, column: 22, scope: !2335)
!2339 = !DILocation(line: 779, column: 5, scope: !2335)
!2340 = !DILocation(line: 780, column: 1, scope: !2279)
!2341 = distinct !DISubprogram(name: "LzmaDec_Init", scope: !1623, file: !1623, line: 782, type: !2342, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !2344)
!2342 = !DISubroutineType(types: !2343)
!2343 = !{null, !2282}
!2344 = !{!2345}
!2345 = !DILocalVariable(name: "p", arg: 1, scope: !2341, file: !1623, line: 782, type: !2282)
!2346 = !DILocation(line: 0, scope: !2341)
!2347 = !DILocation(line: 784, column: 6, scope: !2341)
!2348 = !DILocation(line: 784, column: 13, scope: !2341)
!2349 = !DILocation(line: 785, column: 3, scope: !2341)
!2350 = !DILocation(line: 786, column: 1, scope: !2341)
!2351 = distinct !DISubprogram(name: "LzmaDec_DecodeToDic", scope: !1623, file: !1623, line: 800, type: !2352, scopeLine: 802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !2356)
!2352 = !DISubroutineType(types: !2353)
!2353 = !{!1964, !2282, !1596, !2014, !2354, !2115, !2355}
!2354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 32)
!2356 = !{!2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2366, !2369, !2370, !2373, !2375, !2376, !2379}
!2357 = !DILocalVariable(name: "p", arg: 1, scope: !2351, file: !1623, line: 800, type: !2282)
!2358 = !DILocalVariable(name: "dicLimit", arg: 2, scope: !2351, file: !1623, line: 800, type: !1596)
!2359 = !DILocalVariable(name: "src", arg: 3, scope: !2351, file: !1623, line: 800, type: !2014)
!2360 = !DILocalVariable(name: "srcLen", arg: 4, scope: !2351, file: !1623, line: 800, type: !2354)
!2361 = !DILocalVariable(name: "finishMode", arg: 5, scope: !2351, file: !1623, line: 801, type: !2115)
!2362 = !DILocalVariable(name: "status", arg: 6, scope: !2351, file: !1623, line: 801, type: !2355)
!2363 = !DILocalVariable(name: "inSize", scope: !2351, file: !1623, line: 803, type: !1596)
!2364 = !DILocalVariable(name: "checkEndMarkNow", scope: !2365, file: !1623, line: 811, type: !20)
!2365 = distinct !DILexicalBlock(scope: !2351, file: !1623, line: 810, column: 3)
!2366 = !DILocalVariable(name: "processed", scope: !2367, file: !1623, line: 860, type: !1596)
!2367 = distinct !DILexicalBlock(scope: !2368, file: !1623, line: 859, column: 7)
!2368 = distinct !DILexicalBlock(scope: !2365, file: !1623, line: 858, column: 11)
!2369 = !DILocalVariable(name: "bufLimit", scope: !2367, file: !1623, line: 861, type: !2014)
!2370 = !DILocalVariable(name: "dummyRes", scope: !2371, file: !1623, line: 864, type: !20)
!2371 = distinct !DILexicalBlock(scope: !2372, file: !1623, line: 863, column: 9)
!2372 = distinct !DILexicalBlock(scope: !2367, file: !1623, line: 862, column: 13)
!2373 = !DILocalVariable(name: "rem", scope: !2374, file: !1623, line: 892, type: !7)
!2374 = distinct !DILexicalBlock(scope: !2368, file: !1623, line: 891, column: 7)
!2375 = !DILocalVariable(name: "lookAhead", scope: !2374, file: !1623, line: 892, type: !7)
!2376 = !DILocalVariable(name: "dummyRes", scope: !2377, file: !1623, line: 898, type: !20)
!2377 = distinct !DILexicalBlock(scope: !2378, file: !1623, line: 897, column: 9)
!2378 = distinct !DILexicalBlock(scope: !2374, file: !1623, line: 896, column: 13)
!2379 = !DILocalVariable(name: "kkk", scope: !2380, file: !1623, line: 916, type: !7)
!2380 = distinct !DILexicalBlock(scope: !2374, file: !1623, line: 915, column: 9)
!2381 = !DILocation(line: 0, scope: !2351)
!2382 = !DILocation(line: 803, column: 18, scope: !2351)
!2383 = !DILocation(line: 804, column: 13, scope: !2351)
!2384 = !DILocation(line: 805, column: 3, scope: !2351)
!2385 = !DILocation(line: 807, column: 11, scope: !2351)
!2386 = !DILocation(line: 0, scope: !2367)
!2387 = !DILocation(line: 809, column: 13, scope: !2351)
!2388 = !DILocation(line: 809, column: 23, scope: !2351)
!2389 = !DILocation(line: 809, column: 3, scope: !2351)
!2390 = !DILocation(line: 813, column: 14, scope: !2391)
!2391 = distinct !DILexicalBlock(scope: !2365, file: !1623, line: 813, column: 11)
!2392 = !DILocation(line: 813, column: 11, scope: !2391)
!2393 = !DILocation(line: 813, column: 11, scope: !2365)
!2394 = !DILocation(line: 815, column: 23, scope: !2395)
!2395 = distinct !DILexicalBlock(scope: !2396, file: !1623, line: 815, column: 9)
!2396 = distinct !DILexicalBlock(scope: !2397, file: !1623, line: 815, column: 9)
!2397 = distinct !DILexicalBlock(scope: !2391, file: !1623, line: 814, column: 7)
!2398 = !DILocation(line: 815, column: 27, scope: !2395)
!2399 = !DILocation(line: 815, column: 33, scope: !2395)
!2400 = !DILocation(line: 815, column: 45, scope: !2395)
!2401 = !DILocation(line: 815, column: 9, scope: !2396)
!2402 = !DILocation(line: 816, column: 46, scope: !2395)
!2403 = !DILocation(line: 816, column: 42, scope: !2395)
!2404 = !DILocation(line: 816, column: 36, scope: !2395)
!2405 = !DILocation(line: 816, column: 11, scope: !2395)
!2406 = !DILocation(line: 816, column: 40, scope: !2395)
!2407 = !DILocation(line: 815, column: 70, scope: !2395)
!2408 = !DILocation(line: 815, column: 80, scope: !2395)
!2409 = distinct !{!2409, !2401, !2410}
!2410 = !DILocation(line: 816, column: 46, scope: !2396)
!2411 = !DILocation(line: 817, column: 16, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2397, file: !1623, line: 817, column: 13)
!2413 = !DILocation(line: 817, column: 28, scope: !2412)
!2414 = !DILocation(line: 817, column: 13, scope: !2397)
!2415 = !DILocation(line: 819, column: 19, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2412, file: !1623, line: 818, column: 9)
!2417 = !DILocation(line: 820, column: 11, scope: !2416)
!2418 = !DILocation(line: 822, column: 13, scope: !2419)
!2419 = distinct !DILexicalBlock(scope: !2397, file: !1623, line: 822, column: 13)
!2420 = !DILocation(line: 822, column: 27, scope: !2419)
!2421 = !DILocation(line: 822, column: 13, scope: !2397)
!2422 = !DILocation(line: 825, column: 24, scope: !2397)
!2423 = !DILocation(line: 825, column: 16, scope: !2397)
!2424 = !DILocation(line: 825, column: 38, scope: !2397)
!2425 = !DILocation(line: 826, column: 24, scope: !2397)
!2426 = !DILocation(line: 826, column: 16, scope: !2397)
!2427 = !DILocation(line: 826, column: 38, scope: !2397)
!2428 = !DILocation(line: 826, column: 13, scope: !2397)
!2429 = !DILocation(line: 827, column: 24, scope: !2397)
!2430 = !DILocation(line: 827, column: 16, scope: !2397)
!2431 = !DILocation(line: 827, column: 38, scope: !2397)
!2432 = !DILocation(line: 827, column: 13, scope: !2397)
!2433 = !DILocation(line: 828, column: 24, scope: !2397)
!2434 = !DILocation(line: 828, column: 16, scope: !2397)
!2435 = !DILocation(line: 828, column: 13, scope: !2397)
!2436 = !DILocation(line: 824, column: 17, scope: !2397)
!2437 = !DILocation(line: 829, column: 18, scope: !2397)
!2438 = !DILocation(line: 830, column: 22, scope: !2397)
!2439 = !DILocation(line: 831, column: 24, scope: !2397)
!2440 = !DILocation(line: 832, column: 7, scope: !2397)
!2441 = !DILocation(line: 803, column: 9, scope: !2351)
!2442 = !DILocation(line: 0, scope: !2365)
!2443 = !DILocation(line: 835, column: 14, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2365, file: !1623, line: 835, column: 11)
!2445 = !DILocation(line: 835, column: 21, scope: !2444)
!2446 = !DILocation(line: 835, column: 11, scope: !2365)
!2447 = !DILocation(line: 837, column: 16, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2449, file: !1623, line: 837, column: 13)
!2449 = distinct !DILexicalBlock(scope: !2444, file: !1623, line: 836, column: 7)
!2450 = !DILocation(line: 837, column: 26, scope: !2448)
!2451 = !DILocation(line: 837, column: 31, scope: !2448)
!2452 = !DILocation(line: 837, column: 37, scope: !2448)
!2453 = !DILocation(line: 837, column: 42, scope: !2448)
!2454 = !DILocation(line: 837, column: 13, scope: !2449)
!2455 = !DILocation(line: 839, column: 19, scope: !2456)
!2456 = distinct !DILexicalBlock(scope: !2448, file: !1623, line: 838, column: 9)
!2457 = !DILocation(line: 840, column: 11, scope: !2456)
!2458 = !DILocation(line: 842, column: 13, scope: !2449)
!2459 = !DILocation(line: 844, column: 19, scope: !2460)
!2460 = distinct !DILexicalBlock(scope: !2461, file: !1623, line: 843, column: 9)
!2461 = distinct !DILexicalBlock(scope: !2449, file: !1623, line: 842, column: 13)
!2462 = !DILocation(line: 845, column: 11, scope: !2460)
!2463 = !DILocation(line: 849, column: 19, scope: !2464)
!2464 = distinct !DILexicalBlock(scope: !2465, file: !1623, line: 848, column: 9)
!2465 = distinct !DILexicalBlock(scope: !2449, file: !1623, line: 847, column: 13)
!2466 = !DILocation(line: 850, column: 11, scope: !2464)
!2467 = !DILocation(line: 855, column: 14, scope: !2468)
!2468 = distinct !DILexicalBlock(scope: !2365, file: !1623, line: 855, column: 11)
!2469 = !DILocation(line: 855, column: 11, scope: !2468)
!2470 = !DILocation(line: 855, column: 11, scope: !2365)
!2471 = !DILocation(line: 856, column: 9, scope: !2468)
!2472 = !DILocation(line: 858, column: 14, scope: !2368)
!2473 = !DILocation(line: 858, column: 26, scope: !2368)
!2474 = !DILocation(line: 858, column: 11, scope: !2365)
!2475 = !DILocation(line: 0, scope: !2374)
!2476 = !DILocation(line: 893, column: 20, scope: !2374)
!2477 = !DILocation(line: 893, column: 46, scope: !2374)
!2478 = !DILocation(line: 893, column: 9, scope: !2374)
!2479 = !DILocation(line: 862, column: 20, scope: !2372)
!2480 = !DILocation(line: 862, column: 46, scope: !2372)
!2481 = !DILocation(line: 864, column: 26, scope: !2371)
!2482 = !DILocation(line: 0, scope: !2371)
!2483 = !DILocation(line: 865, column: 24, scope: !2484)
!2484 = distinct !DILexicalBlock(scope: !2371, file: !1623, line: 865, column: 15)
!2485 = !DILocation(line: 865, column: 15, scope: !2371)
!2486 = !DILocation(line: 867, column: 13, scope: !2487)
!2487 = distinct !DILexicalBlock(scope: !2484, file: !1623, line: 866, column: 11)
!2488 = !DILocation(line: 868, column: 28, scope: !2487)
!2489 = !DILocation(line: 869, column: 23, scope: !2487)
!2490 = !DILocation(line: 870, column: 21, scope: !2487)
!2491 = !DILocation(line: 871, column: 13, scope: !2487)
!2492 = !DILocation(line: 873, column: 31, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2371, file: !1623, line: 873, column: 15)
!2494 = !DILocation(line: 875, column: 21, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2493, file: !1623, line: 874, column: 11)
!2496 = !DILocation(line: 876, column: 13, scope: !2495)
!2497 = !DILocation(line: 881, column: 26, scope: !2372)
!2498 = !DILocation(line: 881, column: 35, scope: !2372)
!2499 = !DILocation(line: 882, column: 16, scope: !2367)
!2500 = !DILocation(line: 883, column: 13, scope: !2501)
!2501 = distinct !DILexicalBlock(scope: !2367, file: !1623, line: 883, column: 13)
!2502 = !DILocation(line: 883, column: 56, scope: !2501)
!2503 = !DILocation(line: 883, column: 13, scope: !2367)
!2504 = !DILocation(line: 885, column: 32, scope: !2367)
!2505 = !DILocation(line: 885, column: 36, scope: !2367)
!2506 = !DILocation(line: 886, column: 19, scope: !2367)
!2507 = !DILocation(line: 894, column: 44, scope: !2374)
!2508 = !DILocation(line: 894, column: 31, scope: !2374)
!2509 = !DILocation(line: 894, column: 25, scope: !2374)
!2510 = !DILocation(line: 894, column: 11, scope: !2374)
!2511 = !DILocation(line: 894, column: 29, scope: !2374)
!2512 = distinct !{!2512, !2478, !2513}
!2513 = !DILocation(line: 894, column: 46, scope: !2374)
!2514 = !DILocation(line: 895, column: 24, scope: !2374)
!2515 = !DILocation(line: 896, column: 43, scope: !2378)
!2516 = !DILocation(line: 898, column: 26, scope: !2377)
!2517 = !DILocation(line: 0, scope: !2377)
!2518 = !DILocation(line: 899, column: 24, scope: !2519)
!2519 = distinct !DILexicalBlock(scope: !2377, file: !1623, line: 899, column: 15)
!2520 = !DILocation(line: 899, column: 15, scope: !2377)
!2521 = !DILocation(line: 901, column: 23, scope: !2522)
!2522 = distinct !DILexicalBlock(scope: !2519, file: !1623, line: 900, column: 11)
!2523 = !DILocation(line: 902, column: 21, scope: !2522)
!2524 = !DILocation(line: 903, column: 13, scope: !2522)
!2525 = !DILocation(line: 905, column: 31, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2377, file: !1623, line: 905, column: 15)
!2527 = !DILocation(line: 907, column: 21, scope: !2528)
!2528 = distinct !DILexicalBlock(scope: !2526, file: !1623, line: 906, column: 11)
!2529 = !DILocation(line: 908, column: 13, scope: !2528)
!2530 = !DILocation(line: 911, column: 16, scope: !2374)
!2531 = !DILocation(line: 912, column: 13, scope: !2532)
!2532 = distinct !DILexicalBlock(scope: !2374, file: !1623, line: 912, column: 13)
!2533 = !DILocation(line: 912, column: 54, scope: !2532)
!2534 = !DILocation(line: 912, column: 13, scope: !2374)
!2535 = !DILocation(line: 916, column: 40, scope: !2380)
!2536 = !DILocation(line: 916, column: 44, scope: !2380)
!2537 = !DILocation(line: 0, scope: !2380)
!2538 = !DILocation(line: 917, column: 19, scope: !2539)
!2539 = distinct !DILexicalBlock(scope: !2380, file: !1623, line: 917, column: 15)
!2540 = !DILocation(line: 917, column: 15, scope: !2380)
!2541 = !DILocation(line: 919, column: 15, scope: !2380)
!2542 = !DILocation(line: 920, column: 25, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2380, file: !1623, line: 920, column: 15)
!2544 = !DILocation(line: 920, column: 15, scope: !2380)
!2545 = !DILocation(line: 922, column: 21, scope: !2380)
!2546 = !DILocation(line: 924, column: 19, scope: !2374)
!2547 = !DILocation(line: 927, column: 24, scope: !2374)
!2548 = !DILocation(line: 0, scope: !2368)
!2549 = distinct !{!2549, !2389, !2550}
!2550 = !DILocation(line: 929, column: 3, scope: !2351)
!2551 = !DILocation(line: 930, column: 10, scope: !2552)
!2552 = distinct !DILexicalBlock(scope: !2351, file: !1623, line: 930, column: 7)
!2553 = !DILocation(line: 930, column: 15, scope: !2552)
!2554 = !DILocation(line: 930, column: 7, scope: !2351)
!2555 = !DILocation(line: 931, column: 13, scope: !2552)
!2556 = !DILocation(line: 932, column: 14, scope: !2351)
!2557 = !DILocation(line: 931, column: 5, scope: !2552)
!2558 = !DILocation(line: 932, column: 19, scope: !2351)
!2559 = !DILocation(line: 932, column: 10, scope: !2351)
!2560 = !DILocation(line: 932, column: 3, scope: !2351)
!2561 = !DILocation(line: 933, column: 1, scope: !2351)
!2562 = distinct !DISubprogram(name: "LzmaDec_WriteRem", scope: !1623, file: !1623, line: 512, type: !2563, scopeLine: 513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !2565)
!2563 = !DISubroutineType(types: !2564)
!2564 = !{null, !2282, !1596}
!2565 = !{!2566, !2567, !2568, !2571, !2572, !2573, !2574, !2575}
!2566 = !DILocalVariable(name: "p", arg: 1, scope: !2562, file: !1623, line: 512, type: !2282)
!2567 = !DILocalVariable(name: "limit", arg: 2, scope: !2562, file: !1623, line: 512, type: !1596)
!2568 = !DILocalVariable(name: "dic", scope: !2569, file: !1623, line: 516, type: !1620)
!2569 = distinct !DILexicalBlock(scope: !2570, file: !1623, line: 515, column: 3)
!2570 = distinct !DILexicalBlock(scope: !2562, file: !1623, line: 514, column: 7)
!2571 = !DILocalVariable(name: "dicPos", scope: !2569, file: !1623, line: 517, type: !1596)
!2572 = !DILocalVariable(name: "dicBufSize", scope: !2569, file: !1623, line: 518, type: !1596)
!2573 = !DILocalVariable(name: "len", scope: !2569, file: !1623, line: 519, type: !7)
!2574 = !DILocalVariable(name: "rep0", scope: !2569, file: !1623, line: 520, type: !1596)
!2575 = !DILocalVariable(name: "rem", scope: !2569, file: !1623, line: 521, type: !1596)
!2576 = !DILocation(line: 0, scope: !2562)
!2577 = !DILocation(line: 514, column: 10, scope: !2570)
!2578 = !DILocation(line: 514, column: 25, scope: !2570)
!2579 = !DILocation(line: 516, column: 20, scope: !2569)
!2580 = !DILocation(line: 0, scope: !2569)
!2581 = !DILocation(line: 517, column: 23, scope: !2569)
!2582 = !DILocation(line: 518, column: 27, scope: !2569)
!2583 = !DILocation(line: 520, column: 18, scope: !2569)
!2584 = !DILocation(line: 521, column: 23, scope: !2569)
!2585 = !DILocation(line: 522, column: 13, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2569, file: !1623, line: 522, column: 9)
!2587 = !DILocation(line: 522, column: 9, scope: !2569)
!2588 = !DILocation(line: 525, column: 12, scope: !2589)
!2589 = distinct !DILexicalBlock(scope: !2569, file: !1623, line: 525, column: 9)
!2590 = !DILocation(line: 525, column: 25, scope: !2589)
!2591 = !DILocation(line: 525, column: 30, scope: !2589)
!2592 = !DILocation(line: 528, column: 21, scope: !2569)
!2593 = !DILocation(line: 525, column: 41, scope: !2589)
!2594 = !DILocation(line: 525, column: 54, scope: !2589)
!2595 = !DILocation(line: 525, column: 49, scope: !2589)
!2596 = !DILocation(line: 525, column: 67, scope: !2589)
!2597 = !DILocation(line: 525, column: 9, scope: !2569)
!2598 = !DILocation(line: 526, column: 23, scope: !2589)
!2599 = !DILocation(line: 526, column: 7, scope: !2589)
!2600 = !DILocation(line: 528, column: 8, scope: !2569)
!2601 = !DILocation(line: 529, column: 18, scope: !2569)
!2602 = !DILocation(line: 530, column: 16, scope: !2569)
!2603 = !DILocation(line: 530, column: 5, scope: !2569)
!2604 = !DILocation(line: 532, column: 10, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2569, file: !1623, line: 531, column: 5)
!2606 = !DILocation(line: 533, column: 32, scope: !2605)
!2607 = !DILocation(line: 533, column: 49, scope: !2605)
!2608 = !DILocation(line: 533, column: 42, scope: !2605)
!2609 = !DILocation(line: 533, column: 39, scope: !2605)
!2610 = !DILocation(line: 533, column: 21, scope: !2605)
!2611 = !DILocation(line: 533, column: 7, scope: !2605)
!2612 = !DILocation(line: 533, column: 19, scope: !2605)
!2613 = !DILocation(line: 534, column: 13, scope: !2605)
!2614 = distinct !{!2614, !2603, !2615}
!2615 = !DILocation(line: 535, column: 5, scope: !2569)
!2616 = !DILocation(line: 536, column: 15, scope: !2569)
!2617 = !DILocation(line: 537, column: 3, scope: !2569)
!2618 = !DILocation(line: 538, column: 1, scope: !2562)
!2619 = distinct !DISubprogram(name: "LzmaDec_InitStateReal", scope: !1623, file: !1623, line: 788, type: !2342, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !2620)
!2620 = !{!2621, !2622, !2623, !2624}
!2621 = !DILocalVariable(name: "p", arg: 1, scope: !2619, file: !1623, line: 788, type: !2282)
!2622 = !DILocalVariable(name: "numProbs", scope: !2619, file: !1623, line: 790, type: !1596)
!2623 = !DILocalVariable(name: "i", scope: !2619, file: !1623, line: 791, type: !1596)
!2624 = !DILocalVariable(name: "probs", scope: !2619, file: !1623, line: 792, type: !1635)
!2625 = !DILocation(line: 0, scope: !2619)
!2626 = !DILocation(line: 790, column: 20, scope: !2619)
!2627 = !DILocation(line: 792, column: 25, scope: !2619)
!2628 = !DILocation(line: 793, column: 3, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2619, file: !1623, line: 793, column: 3)
!2630 = !DILocation(line: 794, column: 5, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2629, file: !1623, line: 793, column: 3)
!2632 = !DILocation(line: 794, column: 14, scope: !2631)
!2633 = !DILocation(line: 793, column: 30, scope: !2631)
!2634 = !DILocation(line: 793, column: 17, scope: !2631)
!2635 = distinct !{!2635, !2628, !2636}
!2636 = !DILocation(line: 794, column: 34, scope: !2629)
!2637 = !DILocation(line: 795, column: 42, scope: !2619)
!2638 = !DILocation(line: 795, column: 53, scope: !2619)
!2639 = !DILocation(line: 795, column: 29, scope: !2619)
!2640 = !DILocation(line: 795, column: 40, scope: !2619)
!2641 = !DILocation(line: 795, column: 16, scope: !2619)
!2642 = !DILocation(line: 795, column: 27, scope: !2619)
!2643 = !DILocation(line: 795, column: 3, scope: !2619)
!2644 = !DILocation(line: 795, column: 14, scope: !2619)
!2645 = !DILocation(line: 796, column: 6, scope: !2619)
!2646 = !DILocation(line: 796, column: 12, scope: !2619)
!2647 = !DILocation(line: 797, column: 6, scope: !2619)
!2648 = !DILocation(line: 797, column: 20, scope: !2619)
!2649 = !DILocation(line: 798, column: 1, scope: !2619)
!2650 = distinct !DISubprogram(name: "LzmaDec_TryDummy", scope: !1623, file: !1623, line: 575, type: !2651, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !2656)
!2651 = !DISubroutineType(types: !2652)
!2652 = !{!2653, !2654, !2014, !1596}
!2653 = !DIDerivedType(tag: DW_TAG_typedef, name: "ELzmaDummy", file: !1623, line: 573, baseType: !1625)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2283)
!2656 = !{!2657, !2658, !2659, !2660, !2661, !2662, !2663, !2666, !2667, !2668, !2670, !2671, !2672, !2673, !2678, !2680, !2681, !2682, !2684, !2685, !2687, !2689, !2690, !2691, !2694, !2697}
!2657 = !DILocalVariable(name: "p", arg: 1, scope: !2650, file: !1623, line: 575, type: !2654)
!2658 = !DILocalVariable(name: "buf", arg: 2, scope: !2650, file: !1623, line: 575, type: !2014)
!2659 = !DILocalVariable(name: "inSize", arg: 3, scope: !2650, file: !1623, line: 575, type: !1596)
!2660 = !DILocalVariable(name: "range", scope: !2650, file: !1623, line: 577, type: !1632)
!2661 = !DILocalVariable(name: "code", scope: !2650, file: !1623, line: 578, type: !1632)
!2662 = !DILocalVariable(name: "bufLimit", scope: !2650, file: !1623, line: 579, type: !2014)
!2663 = !DILocalVariable(name: "probs", scope: !2650, file: !1623, line: 580, type: !2664)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 32)
!2665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1633)
!2666 = !DILocalVariable(name: "state", scope: !2650, file: !1623, line: 581, type: !7)
!2667 = !DILocalVariable(name: "res", scope: !2650, file: !1623, line: 582, type: !2653)
!2668 = !DILocalVariable(name: "prob", scope: !2669, file: !1623, line: 585, type: !2664)
!2669 = distinct !DILexicalBlock(scope: !2650, file: !1623, line: 584, column: 3)
!2670 = !DILocalVariable(name: "bound", scope: !2669, file: !1623, line: 586, type: !1632)
!2671 = !DILocalVariable(name: "ttt", scope: !2669, file: !1623, line: 587, type: !7)
!2672 = !DILocalVariable(name: "posState", scope: !2669, file: !1623, line: 588, type: !7)
!2673 = !DILocalVariable(name: "symbol", scope: !2674, file: !1623, line: 605, type: !7)
!2674 = distinct !DILexicalBlock(scope: !2675, file: !1623, line: 604, column: 7)
!2675 = distinct !DILexicalBlock(scope: !2676, file: !1623, line: 603, column: 11)
!2676 = distinct !DILexicalBlock(scope: !2677, file: !1623, line: 592, column: 5)
!2677 = distinct !DILexicalBlock(scope: !2669, file: !1623, line: 591, column: 5)
!2678 = !DILocalVariable(name: "matchByte", scope: !2679, file: !1623, line: 610, type: !7)
!2679 = distinct !DILexicalBlock(scope: !2675, file: !1623, line: 609, column: 7)
!2680 = !DILocalVariable(name: "offs", scope: !2679, file: !1623, line: 612, type: !7)
!2681 = !DILocalVariable(name: "symbol", scope: !2679, file: !1623, line: 613, type: !7)
!2682 = !DILocalVariable(name: "bit", scope: !2683, file: !1623, line: 616, type: !7)
!2683 = distinct !DILexicalBlock(scope: !2679, file: !1623, line: 615, column: 9)
!2684 = !DILocalVariable(name: "probLit", scope: !2683, file: !1623, line: 617, type: !2664)
!2685 = !DILocalVariable(name: "len", scope: !2686, file: !1623, line: 629, type: !7)
!2686 = distinct !DILexicalBlock(scope: !2677, file: !1623, line: 628, column: 5)
!2687 = !DILocalVariable(name: "limit", scope: !2688, file: !1623, line: 686, type: !7)
!2688 = distinct !DILexicalBlock(scope: !2686, file: !1623, line: 685, column: 7)
!2689 = !DILocalVariable(name: "offset", scope: !2688, file: !1623, line: 686, type: !7)
!2690 = !DILocalVariable(name: "probLen", scope: !2688, file: !1623, line: 687, type: !2664)
!2691 = !DILocalVariable(name: "posSlot", scope: !2692, file: !1623, line: 720, type: !7)
!2692 = distinct !DILexicalBlock(scope: !2693, file: !1623, line: 719, column: 7)
!2693 = distinct !DILexicalBlock(scope: !2686, file: !1623, line: 718, column: 11)
!2694 = !DILocalVariable(name: "numDirectBits", scope: !2695, file: !1623, line: 727, type: !7)
!2695 = distinct !DILexicalBlock(scope: !2696, file: !1623, line: 726, column: 9)
!2696 = distinct !DILexicalBlock(scope: !2692, file: !1623, line: 725, column: 13)
!2697 = !DILocalVariable(name: "i", scope: !2698, file: !1623, line: 750, type: !7)
!2698 = distinct !DILexicalBlock(scope: !2695, file: !1623, line: 749, column: 11)
!2699 = !DILocation(line: 0, scope: !2650)
!2700 = !DILocation(line: 577, column: 21, scope: !2650)
!2701 = !DILocation(line: 578, column: 20, scope: !2650)
!2702 = !DILocation(line: 579, column: 30, scope: !2650)
!2703 = !DILocation(line: 580, column: 31, scope: !2650)
!2704 = !DILocation(line: 581, column: 23, scope: !2650)
!2705 = !DILocation(line: 588, column: 29, scope: !2669)
!2706 = !DILocation(line: 588, column: 60, scope: !2669)
!2707 = !DILocation(line: 588, column: 64, scope: !2669)
!2708 = !DILocation(line: 588, column: 43, scope: !2669)
!2709 = !DILocation(line: 0, scope: !2669)
!2710 = !DILocation(line: 590, column: 37, scope: !2669)
!2711 = !DILocation(line: 590, column: 28, scope: !2669)
!2712 = !DILocation(line: 590, column: 56, scope: !2669)
!2713 = !DILocation(line: 591, column: 5, scope: !2669)
!2714 = !DILocation(line: 591, column: 5, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2669, file: !1623, line: 591, column: 5)
!2716 = !DILocation(line: 591, column: 5, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2718, file: !1623, line: 591, column: 5)
!2718 = distinct !DILexicalBlock(scope: !2715, file: !1623, line: 591, column: 5)
!2719 = !DILocation(line: 591, column: 5, scope: !2718)
!2720 = !DILocation(line: 591, column: 5, scope: !2677)
!2721 = !DILocation(line: 597, column: 20, scope: !2676)
!2722 = !DILocation(line: 598, column: 14, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2676, file: !1623, line: 598, column: 11)
!2724 = !DILocation(line: 598, column: 27, scope: !2723)
!2725 = !DILocation(line: 598, column: 32, scope: !2723)
!2726 = !DILocation(line: 600, column: 52, scope: !2723)
!2727 = !DILocation(line: 600, column: 57, scope: !2723)
!2728 = !DILocation(line: 600, column: 34, scope: !2723)
!2729 = !DILocation(line: 600, column: 74, scope: !2723)
!2730 = !DILocation(line: 600, column: 63, scope: !2723)
!2731 = !DILocation(line: 601, column: 17, scope: !2723)
!2732 = !DILocation(line: 601, column: 25, scope: !2723)
!2733 = !DILocation(line: 601, column: 32, scope: !2723)
!2734 = !DILocation(line: 601, column: 22, scope: !2723)
!2735 = !DILocation(line: 601, column: 42, scope: !2723)
!2736 = !DILocation(line: 601, column: 66, scope: !2723)
!2737 = !DILocation(line: 601, column: 14, scope: !2723)
!2738 = !DILocation(line: 601, column: 77, scope: !2723)
!2739 = !DILocation(line: 601, column: 71, scope: !2723)
!2740 = !DILocation(line: 600, column: 78, scope: !2723)
!2741 = !DILocation(line: 599, column: 40, scope: !2723)
!2742 = !DILocation(line: 599, column: 14, scope: !2723)
!2743 = !DILocation(line: 599, column: 9, scope: !2723)
!2744 = !DILocation(line: 0, scope: !2676)
!2745 = !DILocation(line: 603, column: 17, scope: !2675)
!2746 = !DILocation(line: 603, column: 11, scope: !2676)
!2747 = !DILocation(line: 0, scope: !2674)
!2748 = !DILocation(line: 606, column: 14, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2674, file: !1623, line: 606, column: 12)
!2750 = !DILocation(line: 606, column: 14, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2749, file: !1623, line: 606, column: 14)
!2752 = !DILocation(line: 606, column: 14, scope: !2753)
!2753 = distinct !DILexicalBlock(scope: !2754, file: !1623, line: 606, column: 14)
!2754 = distinct !DILexicalBlock(scope: !2751, file: !1623, line: 606, column: 14)
!2755 = !DILocation(line: 606, column: 14, scope: !2754)
!2756 = !DILocation(line: 606, column: 14, scope: !2757)
!2757 = distinct !DILexicalBlock(scope: !2749, file: !1623, line: 606, column: 14)
!2758 = !DILocation(line: 606, column: 67, scope: !2674)
!2759 = !DILocation(line: 606, column: 51, scope: !2749)
!2760 = distinct !{!2760, !2761, !2762}
!2761 = !DILocation(line: 606, column: 9, scope: !2674)
!2762 = !DILocation(line: 606, column: 74, scope: !2674)
!2763 = !DILocation(line: 610, column: 33, scope: !2679)
!2764 = !DILocation(line: 610, column: 40, scope: !2679)
!2765 = !DILocation(line: 610, column: 49, scope: !2679)
!2766 = !DILocation(line: 610, column: 47, scope: !2679)
!2767 = !DILocation(line: 611, column: 24, scope: !2679)
!2768 = !DILocation(line: 611, column: 14, scope: !2679)
!2769 = !DILocation(line: 611, column: 42, scope: !2679)
!2770 = !DILocation(line: 610, column: 60, scope: !2679)
!2771 = !DILocation(line: 610, column: 30, scope: !2679)
!2772 = !DILocation(line: 0, scope: !2679)
!2773 = !DILocation(line: 614, column: 9, scope: !2679)
!2774 = !DILocation(line: 593, column: 7, scope: !2676)
!2775 = !DILocation(line: 612, column: 18, scope: !2679)
!2776 = !DILocation(line: 613, column: 18, scope: !2679)
!2777 = !DILocation(line: 618, column: 21, scope: !2683)
!2778 = !DILocation(line: 619, column: 28, scope: !2683)
!2779 = !DILocation(line: 0, scope: !2683)
!2780 = !DILocation(line: 620, column: 26, scope: !2683)
!2781 = !DILocation(line: 620, column: 33, scope: !2683)
!2782 = !DILocation(line: 620, column: 39, scope: !2683)
!2783 = !DILocation(line: 621, column: 11, scope: !2683)
!2784 = !DILocation(line: 621, column: 11, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2683, file: !1623, line: 621, column: 11)
!2786 = !DILocation(line: 621, column: 11, scope: !2787)
!2787 = distinct !DILexicalBlock(scope: !2788, file: !1623, line: 621, column: 11)
!2788 = distinct !DILexicalBlock(scope: !2785, file: !1623, line: 621, column: 11)
!2789 = !DILocation(line: 621, column: 11, scope: !2788)
!2790 = !DILocation(line: 621, column: 11, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2683, file: !1623, line: 621, column: 11)
!2792 = !DILocation(line: 621, column: 11, scope: !2793)
!2793 = distinct !DILexicalBlock(scope: !2791, file: !1623, line: 621, column: 11)
!2794 = !DILocation(line: 621, column: 11, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2791, file: !1623, line: 621, column: 11)
!2796 = !DILocation(line: 623, column: 23, scope: !2679)
!2797 = !DILocation(line: 622, column: 9, scope: !2683)
!2798 = distinct !{!2798, !2773, !2799}
!2799 = !DILocation(line: 623, column: 30, scope: !2679)
!2800 = !DILocation(line: 630, column: 7, scope: !2686)
!2801 = !DILocation(line: 632, column: 20, scope: !2686)
!2802 = !DILocation(line: 632, column: 28, scope: !2686)
!2803 = !DILocation(line: 633, column: 7, scope: !2686)
!2804 = !DILocation(line: 633, column: 7, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2686, file: !1623, line: 633, column: 7)
!2806 = !DILocation(line: 633, column: 7, scope: !2807)
!2807 = distinct !DILexicalBlock(scope: !2808, file: !1623, line: 633, column: 7)
!2808 = distinct !DILexicalBlock(scope: !2805, file: !1623, line: 633, column: 7)
!2809 = !DILocation(line: 633, column: 7, scope: !2808)
!2810 = !DILocation(line: 0, scope: !2686)
!2811 = !DILocation(line: 633, column: 7, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2686, file: !1623, line: 633, column: 7)
!2813 = !DILocation(line: 642, column: 9, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2812, file: !1623, line: 641, column: 7)
!2815 = !DILocation(line: 644, column: 22, scope: !2814)
!2816 = !DILocation(line: 644, column: 32, scope: !2814)
!2817 = !DILocation(line: 645, column: 9, scope: !2814)
!2818 = !DILocation(line: 645, column: 9, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2814, file: !1623, line: 645, column: 9)
!2820 = !DILocation(line: 645, column: 9, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2822, file: !1623, line: 645, column: 9)
!2822 = distinct !DILexicalBlock(scope: !2819, file: !1623, line: 645, column: 9)
!2823 = !DILocation(line: 645, column: 9, scope: !2822)
!2824 = !DILocation(line: 0, scope: !2814)
!2825 = !DILocation(line: 645, column: 9, scope: !2826)
!2826 = distinct !DILexicalBlock(scope: !2814, file: !1623, line: 645, column: 9)
!2827 = !DILocation(line: 648, column: 24, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2826, file: !1623, line: 646, column: 9)
!2829 = !DILocation(line: 648, column: 37, scope: !2828)
!2830 = !DILocation(line: 648, column: 65, scope: !2828)
!2831 = !DILocation(line: 649, column: 11, scope: !2828)
!2832 = !DILocation(line: 649, column: 11, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2828, file: !1623, line: 649, column: 11)
!2834 = !DILocation(line: 649, column: 11, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2836, file: !1623, line: 649, column: 11)
!2836 = distinct !DILexicalBlock(scope: !2833, file: !1623, line: 649, column: 11)
!2837 = !DILocation(line: 649, column: 11, scope: !2836)
!2838 = !DILocation(line: 0, scope: !2828)
!2839 = !DILocation(line: 649, column: 11, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2828, file: !1623, line: 649, column: 11)
!2841 = !DILocation(line: 652, column: 13, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2843, file: !1623, line: 652, column: 13)
!2843 = distinct !DILexicalBlock(scope: !2840, file: !1623, line: 650, column: 11)
!2844 = !DILocation(line: 652, column: 13, scope: !2843)
!2845 = !DILocation(line: 652, column: 13, scope: !2846)
!2846 = distinct !DILexicalBlock(scope: !2847, file: !1623, line: 652, column: 13)
!2847 = distinct !DILexicalBlock(scope: !2842, file: !1623, line: 652, column: 13)
!2848 = !DILocation(line: 652, column: 13, scope: !2847)
!2849 = !DILocation(line: 657, column: 13, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2840, file: !1623, line: 656, column: 11)
!2851 = !DILocation(line: 659, column: 9, scope: !2828)
!2852 = !DILocation(line: 662, column: 11, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2826, file: !1623, line: 661, column: 9)
!2854 = !DILocation(line: 663, column: 24, scope: !2853)
!2855 = !DILocation(line: 663, column: 34, scope: !2853)
!2856 = !DILocation(line: 664, column: 11, scope: !2853)
!2857 = !DILocation(line: 664, column: 11, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2853, file: !1623, line: 664, column: 11)
!2859 = !DILocation(line: 664, column: 11, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2861, file: !1623, line: 664, column: 11)
!2861 = distinct !DILexicalBlock(scope: !2858, file: !1623, line: 664, column: 11)
!2862 = !DILocation(line: 664, column: 11, scope: !2861)
!2863 = !DILocation(line: 0, scope: !2853)
!2864 = !DILocation(line: 664, column: 11, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2853, file: !1623, line: 664, column: 11)
!2866 = !DILocation(line: 670, column: 13, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2865, file: !1623, line: 669, column: 11)
!2868 = !DILocation(line: 671, column: 26, scope: !2867)
!2869 = !DILocation(line: 671, column: 36, scope: !2867)
!2870 = !DILocation(line: 672, column: 13, scope: !2867)
!2871 = !DILocation(line: 672, column: 13, scope: !2872)
!2872 = distinct !DILexicalBlock(scope: !2867, file: !1623, line: 672, column: 13)
!2873 = !DILocation(line: 672, column: 13, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2875, file: !1623, line: 672, column: 13)
!2875 = distinct !DILexicalBlock(scope: !2872, file: !1623, line: 672, column: 13)
!2876 = !DILocation(line: 672, column: 13, scope: !2875)
!2877 = !DILocation(line: 0, scope: !2867)
!2878 = !DILocation(line: 672, column: 13, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2867, file: !1623, line: 672, column: 13)
!2880 = !DILocation(line: 678, column: 15, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2879, file: !1623, line: 677, column: 13)
!2882 = !DILocation(line: 0, scope: !2812)
!2883 = !DILocation(line: 0, scope: !2688)
!2884 = !DILocation(line: 688, column: 9, scope: !2688)
!2885 = !DILocation(line: 688, column: 9, scope: !2886)
!2886 = distinct !DILexicalBlock(scope: !2688, file: !1623, line: 688, column: 9)
!2887 = !DILocation(line: 688, column: 9, scope: !2888)
!2888 = distinct !DILexicalBlock(scope: !2889, file: !1623, line: 688, column: 9)
!2889 = distinct !DILexicalBlock(scope: !2886, file: !1623, line: 688, column: 9)
!2890 = !DILocation(line: 688, column: 9, scope: !2889)
!2891 = !DILocation(line: 688, column: 9, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2688, file: !1623, line: 688, column: 9)
!2893 = !DILocation(line: 691, column: 26, scope: !2894)
!2894 = distinct !DILexicalBlock(scope: !2892, file: !1623, line: 689, column: 9)
!2895 = !DILocation(line: 691, column: 47, scope: !2894)
!2896 = !DILocation(line: 691, column: 35, scope: !2894)
!2897 = !DILocation(line: 694, column: 9, scope: !2894)
!2898 = !DILocation(line: 697, column: 11, scope: !2899)
!2899 = distinct !DILexicalBlock(scope: !2892, file: !1623, line: 696, column: 9)
!2900 = !DILocation(line: 698, column: 26, scope: !2899)
!2901 = !DILocation(line: 699, column: 11, scope: !2899)
!2902 = !DILocation(line: 699, column: 11, scope: !2903)
!2903 = distinct !DILexicalBlock(scope: !2899, file: !1623, line: 699, column: 11)
!2904 = !DILocation(line: 699, column: 11, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2906, file: !1623, line: 699, column: 11)
!2906 = distinct !DILexicalBlock(scope: !2903, file: !1623, line: 699, column: 11)
!2907 = !DILocation(line: 699, column: 11, scope: !2906)
!2908 = !DILocation(line: 0, scope: !2899)
!2909 = !DILocation(line: 699, column: 11, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2899, file: !1623, line: 699, column: 11)
!2911 = !DILocation(line: 702, column: 28, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2910, file: !1623, line: 700, column: 11)
!2913 = !DILocation(line: 702, column: 49, scope: !2912)
!2914 = !DILocation(line: 702, column: 37, scope: !2912)
!2915 = !DILocation(line: 705, column: 11, scope: !2912)
!2916 = !DILocation(line: 708, column: 13, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2910, file: !1623, line: 707, column: 11)
!2918 = !DILocation(line: 709, column: 28, scope: !2917)
!2919 = !DILocation(line: 0, scope: !2892)
!2920 = !DILocation(line: 714, column: 9, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2688, file: !1623, line: 714, column: 9)
!2922 = !DILocation(line: 0, scope: !2921)
!2923 = !DILocation(line: 714, column: 9, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2921, file: !1623, line: 714, column: 9)
!2925 = !DILocation(line: 714, column: 9, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2924, file: !1623, line: 714, column: 9)
!2927 = !DILocation(line: 714, column: 9, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2929, file: !1623, line: 714, column: 9)
!2929 = distinct !DILexicalBlock(scope: !2926, file: !1623, line: 714, column: 9)
!2930 = !DILocation(line: 714, column: 9, scope: !2929)
!2931 = !DILocation(line: 714, column: 9, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2924, file: !1623, line: 714, column: 9)
!2933 = distinct !{!2933, !2920, !2920}
!2934 = !DILocation(line: 715, column: 13, scope: !2688)
!2935 = !DILocation(line: 718, column: 11, scope: !2686)
!2936 = !DILocation(line: 721, column: 22, scope: !2692)
!2937 = !DILocation(line: 722, column: 15, scope: !2692)
!2938 = !DILocation(line: 722, column: 72, scope: !2692)
!2939 = !DILocation(line: 721, column: 32, scope: !2692)
!2940 = !DILocation(line: 0, scope: !2692)
!2941 = !DILocation(line: 724, column: 9, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2692, file: !1623, line: 724, column: 9)
!2943 = !DILocation(line: 0, scope: !2942)
!2944 = !DILocation(line: 724, column: 9, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2942, file: !1623, line: 724, column: 9)
!2946 = !DILocation(line: 724, column: 9, scope: !2947)
!2947 = distinct !DILexicalBlock(scope: !2945, file: !1623, line: 724, column: 9)
!2948 = !DILocation(line: 724, column: 9, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2950, file: !1623, line: 724, column: 9)
!2950 = distinct !DILexicalBlock(scope: !2947, file: !1623, line: 724, column: 9)
!2951 = !DILocation(line: 724, column: 9, scope: !2950)
!2952 = !DILocation(line: 724, column: 9, scope: !2953)
!2953 = distinct !DILexicalBlock(scope: !2945, file: !1623, line: 724, column: 9)
!2954 = distinct !{!2954, !2941, !2941}
!2955 = !DILocation(line: 725, column: 21, scope: !2696)
!2956 = !DILocation(line: 725, column: 13, scope: !2692)
!2957 = !DILocation(line: 727, column: 46, scope: !2695)
!2958 = !DILocation(line: 727, column: 52, scope: !2695)
!2959 = !DILocation(line: 0, scope: !2695)
!2960 = !DILocation(line: 731, column: 23, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2695, file: !1623, line: 731, column: 15)
!2962 = !DILocation(line: 731, column: 15, scope: !2695)
!2963 = !DILocation(line: 733, column: 26, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2961, file: !1623, line: 732, column: 11)
!2965 = !DILocation(line: 733, column: 42, scope: !2964)
!2966 = !DILocation(line: 733, column: 59, scope: !2964)
!2967 = !DILocation(line: 733, column: 36, scope: !2964)
!2968 = !DILocation(line: 733, column: 77, scope: !2964)
!2969 = !DILocation(line: 733, column: 87, scope: !2964)
!2970 = !DILocation(line: 734, column: 11, scope: !2964)
!2971 = !DILocation(line: 737, column: 27, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2961, file: !1623, line: 736, column: 11)
!2973 = !DILocation(line: 738, column: 13, scope: !2972)
!2974 = !DILocation(line: 0, scope: !2972)
!2975 = !DILocation(line: 740, column: 15, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2977, file: !1623, line: 740, column: 15)
!2977 = distinct !DILexicalBlock(scope: !2972, file: !1623, line: 739, column: 13)
!2978 = !DILocation(line: 740, column: 15, scope: !2977)
!2979 = !DILocation(line: 740, column: 15, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2981, file: !1623, line: 740, column: 15)
!2981 = distinct !DILexicalBlock(scope: !2976, file: !1623, line: 740, column: 15)
!2982 = !DILocation(line: 740, column: 15, scope: !2981)
!2983 = !DILocation(line: 741, column: 21, scope: !2977)
!2984 = !DILocation(line: 742, column: 39, scope: !2977)
!2985 = !DILocation(line: 742, column: 48, scope: !2977)
!2986 = !DILocation(line: 742, column: 55, scope: !2977)
!2987 = !DILocation(line: 742, column: 29, scope: !2977)
!2988 = !DILocation(line: 742, column: 20, scope: !2977)
!2989 = !DILocation(line: 745, column: 20, scope: !2972)
!2990 = !DILocation(line: 745, column: 36, scope: !2972)
!2991 = !DILocation(line: 744, column: 13, scope: !2977)
!2992 = distinct !{!2992, !2973, !2993}
!2993 = !DILocation(line: 745, column: 40, scope: !2972)
!2994 = !DILocation(line: 746, column: 26, scope: !2972)
!2995 = !DILocation(line: 0, scope: !2961)
!2996 = !DILocation(line: 0, scope: !2698)
!2997 = !DILocation(line: 751, column: 13, scope: !2698)
!2998 = !DILocation(line: 753, column: 15, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2698, file: !1623, line: 752, column: 13)
!3000 = !DILocation(line: 753, column: 15, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2999, file: !1623, line: 753, column: 15)
!3002 = !DILocation(line: 753, column: 15, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !3004, file: !1623, line: 753, column: 15)
!3004 = distinct !DILexicalBlock(scope: !3001, file: !1623, line: 753, column: 15)
!3005 = !DILocation(line: 753, column: 15, scope: !3004)
!3006 = !DILocation(line: 753, column: 15, scope: !3007)
!3007 = distinct !DILexicalBlock(scope: !2999, file: !1623, line: 753, column: 15)
!3008 = !DILocation(line: 755, column: 20, scope: !2698)
!3009 = !DILocation(line: 755, column: 36, scope: !2698)
!3010 = !DILocation(line: 754, column: 13, scope: !2999)
!3011 = distinct !{!3011, !2997, !3012}
!3012 = !DILocation(line: 755, column: 40, scope: !2698)
!3013 = !DILocation(line: 763, column: 1, scope: !2650)
!3014 = distinct !DISubprogram(name: "LzmaDec_DecodeReal2", scope: !1623, file: !1623, line: 540, type: !3015, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !3017)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!20, !2282, !1596, !2014}
!3017 = !{!3018, !3019, !3020, !3021, !3023, !3026}
!3018 = !DILocalVariable(name: "p", arg: 1, scope: !3014, file: !1623, line: 540, type: !2282)
!3019 = !DILocalVariable(name: "limit", arg: 2, scope: !3014, file: !1623, line: 540, type: !1596)
!3020 = !DILocalVariable(name: "bufLimit", arg: 3, scope: !3014, file: !1623, line: 540, type: !2014)
!3021 = !DILocalVariable(name: "limit2", scope: !3022, file: !1623, line: 544, type: !1596)
!3022 = distinct !DILexicalBlock(scope: !3014, file: !1623, line: 543, column: 3)
!3023 = !DILocalVariable(name: "rem", scope: !3024, file: !1623, line: 547, type: !1632)
!3024 = distinct !DILexicalBlock(scope: !3025, file: !1623, line: 546, column: 5)
!3025 = distinct !DILexicalBlock(scope: !3022, file: !1623, line: 545, column: 9)
!3026 = !DILocalVariable(name: "__result__", scope: !3027, file: !1623, line: 552, type: !20)
!3027 = distinct !DILexicalBlock(scope: !3022, file: !1623, line: 552, column: 5)
!3028 = !DILocation(line: 0, scope: !3014)
!3029 = !DILocation(line: 542, column: 3, scope: !3014)
!3030 = !DILocation(line: 0, scope: !3022)
!3031 = !DILocation(line: 545, column: 12, scope: !3025)
!3032 = !DILocation(line: 545, column: 25, scope: !3025)
!3033 = !DILocation(line: 545, column: 9, scope: !3022)
!3034 = !DILocation(line: 547, column: 28, scope: !3024)
!3035 = !DILocation(line: 547, column: 41, scope: !3024)
!3036 = !DILocation(line: 547, column: 36, scope: !3024)
!3037 = !DILocation(line: 0, scope: !3024)
!3038 = !DILocation(line: 548, column: 22, scope: !3039)
!3039 = distinct !DILexicalBlock(scope: !3024, file: !1623, line: 548, column: 11)
!3040 = !DILocation(line: 548, column: 17, scope: !3039)
!3041 = !DILocation(line: 548, column: 29, scope: !3039)
!3042 = !DILocation(line: 548, column: 11, scope: !3024)
!3043 = !DILocation(line: 550, column: 5, scope: !3024)
!3044 = !DILocation(line: 552, column: 5, scope: !3027)
!3045 = !DILocation(line: 0, scope: !3027)
!3046 = !DILocation(line: 552, column: 5, scope: !3047)
!3047 = distinct !DILexicalBlock(scope: !3027, file: !1623, line: 552, column: 5)
!3048 = !DILocation(line: 554, column: 12, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3022, file: !1623, line: 554, column: 9)
!3050 = !DILocation(line: 554, column: 25, scope: !3049)
!3051 = !DILocation(line: 554, column: 30, scope: !3049)
!3052 = !DILocation(line: 554, column: 36, scope: !3049)
!3053 = !DILocation(line: 554, column: 60, scope: !3049)
!3054 = !DILocation(line: 554, column: 49, scope: !3049)
!3055 = !DILocation(line: 554, column: 9, scope: !3022)
!3056 = !DILocation(line: 555, column: 23, scope: !3049)
!3057 = !DILocation(line: 555, column: 7, scope: !3049)
!3058 = !DILocation(line: 557, column: 5, scope: !3022)
!3059 = !DILocation(line: 559, column: 13, scope: !3014)
!3060 = !DILocation(line: 559, column: 20, scope: !3014)
!3061 = !DILocation(line: 559, column: 28, scope: !3014)
!3062 = !DILocation(line: 559, column: 34, scope: !3014)
!3063 = !DILocation(line: 559, column: 38, scope: !3014)
!3064 = !DILocation(line: 559, column: 49, scope: !3014)
!3065 = !DILocation(line: 559, column: 55, scope: !3014)
!3066 = !DILocation(line: 559, column: 65, scope: !3014)
!3067 = !DILocation(line: 558, column: 3, scope: !3022)
!3068 = distinct !{!3068, !3029, !3069}
!3069 = !DILocation(line: 559, column: 85, scope: !3014)
!3070 = !DILocation(line: 561, column: 10, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3014, file: !1623, line: 561, column: 7)
!3072 = !DILocation(line: 561, column: 20, scope: !3071)
!3073 = !DILocation(line: 561, column: 7, scope: !3014)
!3074 = !DILocation(line: 562, column: 18, scope: !3071)
!3075 = !DILocation(line: 562, column: 5, scope: !3071)
!3076 = !DILocation(line: 565, column: 1, scope: !3014)
!3077 = distinct !DISubprogram(name: "LzmaDec_DecodeReal", scope: !1623, file: !1623, line: 137, type: !3015, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !3078)
!3078 = !{!3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3102, !3103, !3104, !3105, !3108, !3111, !3112, !3114, !3115, !3121, !3123, !3126, !3129, !3130, !3134, !3135, !3139, !3141, !3143, !3144, !3145, !3148, !3149}
!3079 = !DILocalVariable(name: "p", arg: 1, scope: !3077, file: !1623, line: 137, type: !2282)
!3080 = !DILocalVariable(name: "limit", arg: 2, scope: !3077, file: !1623, line: 137, type: !1596)
!3081 = !DILocalVariable(name: "bufLimit", arg: 3, scope: !3077, file: !1623, line: 137, type: !2014)
!3082 = !DILocalVariable(name: "probs", scope: !3077, file: !1623, line: 139, type: !1635)
!3083 = !DILocalVariable(name: "state", scope: !3077, file: !1623, line: 141, type: !7)
!3084 = !DILocalVariable(name: "rep0", scope: !3077, file: !1623, line: 142, type: !1632)
!3085 = !DILocalVariable(name: "rep1", scope: !3077, file: !1623, line: 142, type: !1632)
!3086 = !DILocalVariable(name: "rep2", scope: !3077, file: !1623, line: 142, type: !1632)
!3087 = !DILocalVariable(name: "rep3", scope: !3077, file: !1623, line: 142, type: !1632)
!3088 = !DILocalVariable(name: "pbMask", scope: !3077, file: !1623, line: 143, type: !7)
!3089 = !DILocalVariable(name: "lpMask", scope: !3077, file: !1623, line: 144, type: !7)
!3090 = !DILocalVariable(name: "lc", scope: !3077, file: !1623, line: 145, type: !7)
!3091 = !DILocalVariable(name: "dic", scope: !3077, file: !1623, line: 147, type: !1620)
!3092 = !DILocalVariable(name: "dicBufSize", scope: !3077, file: !1623, line: 148, type: !1596)
!3093 = !DILocalVariable(name: "dicPos", scope: !3077, file: !1623, line: 149, type: !1596)
!3094 = !DILocalVariable(name: "processedPos", scope: !3077, file: !1623, line: 151, type: !1632)
!3095 = !DILocalVariable(name: "checkDicSize", scope: !3077, file: !1623, line: 152, type: !1632)
!3096 = !DILocalVariable(name: "len", scope: !3077, file: !1623, line: 153, type: !7)
!3097 = !DILocalVariable(name: "buf", scope: !3077, file: !1623, line: 155, type: !2014)
!3098 = !DILocalVariable(name: "range", scope: !3077, file: !1623, line: 156, type: !1632)
!3099 = !DILocalVariable(name: "code", scope: !3077, file: !1623, line: 157, type: !1632)
!3100 = !DILocalVariable(name: "prob", scope: !3101, file: !1623, line: 161, type: !1635)
!3101 = distinct !DILexicalBlock(scope: !3077, file: !1623, line: 160, column: 3)
!3102 = !DILocalVariable(name: "bound", scope: !3101, file: !1623, line: 162, type: !1632)
!3103 = !DILocalVariable(name: "ttt", scope: !3101, file: !1623, line: 163, type: !7)
!3104 = !DILocalVariable(name: "posState", scope: !3101, file: !1623, line: 164, type: !7)
!3105 = !DILocalVariable(name: "symbol", scope: !3106, file: !1623, line: 169, type: !7)
!3106 = distinct !DILexicalBlock(scope: !3107, file: !1623, line: 168, column: 5)
!3107 = distinct !DILexicalBlock(scope: !3101, file: !1623, line: 167, column: 5)
!3108 = !DILocalVariable(name: "matchByte", scope: !3109, file: !1623, line: 196, type: !7)
!3109 = distinct !DILexicalBlock(scope: !3110, file: !1623, line: 195, column: 7)
!3110 = distinct !DILexicalBlock(scope: !3106, file: !1623, line: 177, column: 11)
!3111 = !DILocalVariable(name: "offs", scope: !3109, file: !1623, line: 197, type: !7)
!3112 = !DILocalVariable(name: "bit", scope: !3113, file: !1623, line: 210, type: !7)
!3113 = distinct !DILexicalBlock(scope: !3109, file: !1623, line: 209, column: 9)
!3114 = !DILocalVariable(name: "probLit", scope: !3113, file: !1623, line: 211, type: !1635)
!3115 = !DILocalVariable(name: "distance", scope: !3116, file: !1623, line: 260, type: !1632)
!3116 = distinct !DILexicalBlock(scope: !3117, file: !1623, line: 259, column: 9)
!3117 = distinct !DILexicalBlock(scope: !3118, file: !1623, line: 243, column: 9)
!3118 = distinct !DILexicalBlock(scope: !3119, file: !1623, line: 238, column: 7)
!3119 = distinct !DILexicalBlock(scope: !3120, file: !1623, line: 231, column: 7)
!3120 = distinct !DILexicalBlock(scope: !3101, file: !1623, line: 228, column: 5)
!3121 = !DILocalVariable(name: "probLen", scope: !3122, file: !1623, line: 327, type: !1635)
!3122 = distinct !DILexicalBlock(scope: !3120, file: !1623, line: 326, column: 7)
!3123 = !DILocalVariable(name: "distance", scope: !3124, file: !1623, line: 364, type: !1632)
!3124 = distinct !DILexicalBlock(scope: !3125, file: !1623, line: 363, column: 7)
!3125 = distinct !DILexicalBlock(scope: !3120, file: !1623, line: 362, column: 11)
!3126 = !DILocalVariable(name: "posSlot", scope: !3127, file: !1623, line: 370, type: !7)
!3127 = distinct !DILexicalBlock(scope: !3128, file: !1623, line: 369, column: 9)
!3128 = distinct !DILexicalBlock(scope: !3124, file: !1623, line: 368, column: 13)
!3129 = !DILocalVariable(name: "numDirectBits", scope: !3127, file: !1623, line: 371, type: !7)
!3130 = !DILocalVariable(name: "mask", scope: !3131, file: !1623, line: 378, type: !1632)
!3131 = distinct !DILexicalBlock(scope: !3132, file: !1623, line: 377, column: 13)
!3132 = distinct !DILexicalBlock(scope: !3133, file: !1623, line: 374, column: 11)
!3133 = distinct !DILexicalBlock(scope: !3127, file: !1623, line: 373, column: 15)
!3134 = !DILocalVariable(name: "i", scope: !3131, file: !1623, line: 379, type: !7)
!3135 = !DILocalVariable(name: "t", scope: !3136, file: !1623, line: 397, type: !1632)
!3136 = distinct !DILexicalBlock(scope: !3137, file: !1623, line: 396, column: 15)
!3137 = distinct !DILexicalBlock(scope: !3138, file: !1623, line: 392, column: 13)
!3138 = distinct !DILexicalBlock(scope: !3133, file: !1623, line: 389, column: 11)
!3139 = !DILocalVariable(name: "i", scope: !3140, file: !1623, line: 416, type: !7)
!3140 = distinct !DILexicalBlock(scope: !3138, file: !1623, line: 415, column: 13)
!3141 = !DILocalVariable(name: "rem", scope: !3142, file: !1623, line: 454, type: !1596)
!3142 = distinct !DILexicalBlock(scope: !3120, file: !1623, line: 453, column: 7)
!3143 = !DILocalVariable(name: "curLen", scope: !3142, file: !1623, line: 455, type: !7)
!3144 = !DILocalVariable(name: "pos", scope: !3142, file: !1623, line: 456, type: !1596)
!3145 = !DILocalVariable(name: "dest", scope: !3146, file: !1623, line: 472, type: !1620)
!3146 = distinct !DILexicalBlock(scope: !3147, file: !1623, line: 471, column: 9)
!3147 = distinct !DILexicalBlock(scope: !3142, file: !1623, line: 470, column: 13)
!3148 = !DILocalVariable(name: "src", scope: !3146, file: !1623, line: 473, type: !1634)
!3149 = !DILocalVariable(name: "lim", scope: !3146, file: !1623, line: 474, type: !2014)
!3150 = !DILocation(line: 0, scope: !3077)
!3151 = !DILocation(line: 139, column: 25, scope: !3077)
!3152 = !DILocation(line: 141, column: 23, scope: !3077)
!3153 = !DILocation(line: 142, column: 17, scope: !3077)
!3154 = !DILocation(line: 142, column: 36, scope: !3077)
!3155 = !DILocation(line: 142, column: 55, scope: !3077)
!3156 = !DILocation(line: 142, column: 74, scope: !3077)
!3157 = !DILocation(line: 143, column: 46, scope: !3077)
!3158 = !DILocation(line: 143, column: 51, scope: !3077)
!3159 = !DILocation(line: 144, column: 46, scope: !3077)
!3160 = !DILocation(line: 144, column: 51, scope: !3077)
!3161 = !DILocation(line: 145, column: 25, scope: !3077)
!3162 = !DILocation(line: 147, column: 18, scope: !3077)
!3163 = !DILocation(line: 148, column: 25, scope: !3077)
!3164 = !DILocation(line: 149, column: 21, scope: !3077)
!3165 = !DILocation(line: 151, column: 28, scope: !3077)
!3166 = !DILocation(line: 152, column: 28, scope: !3077)
!3167 = !DILocation(line: 155, column: 24, scope: !3077)
!3168 = !DILocation(line: 156, column: 21, scope: !3077)
!3169 = !DILocation(line: 157, column: 20, scope: !3077)
!3170 = !DILocation(line: 159, column: 3, scope: !3077)
!3171 = !DILocation(line: 153, column: 12, scope: !3077)
!3172 = !DILocation(line: 142, column: 67, scope: !3077)
!3173 = !DILocation(line: 142, column: 48, scope: !3077)
!3174 = !DILocation(line: 142, column: 29, scope: !3077)
!3175 = !DILocation(line: 142, column: 10, scope: !3077)
!3176 = !DILocation(line: 164, column: 38, scope: !3101)
!3177 = !DILocation(line: 0, scope: !3101)
!3178 = !DILocation(line: 166, column: 37, scope: !3101)
!3179 = !DILocation(line: 166, column: 28, scope: !3101)
!3180 = !DILocation(line: 166, column: 56, scope: !3101)
!3181 = !DILocation(line: 167, column: 5, scope: !3101)
!3182 = !DILocation(line: 167, column: 5, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3101, file: !1623, line: 167, column: 5)
!3184 = !DILocation(line: 167, column: 5, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3183, file: !1623, line: 167, column: 5)
!3186 = !DILocation(line: 167, column: 5, scope: !3107)
!3187 = !DILocation(line: 170, column: 7, scope: !3106)
!3188 = !DILocation(line: 172, column: 24, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3106, file: !1623, line: 172, column: 11)
!3190 = !DILocation(line: 172, column: 29, scope: !3189)
!3191 = !DILocation(line: 173, column: 58, scope: !3189)
!3192 = !DILocation(line: 173, column: 68, scope: !3189)
!3193 = !DILocation(line: 174, column: 26, scope: !3189)
!3194 = !DILocation(line: 174, column: 19, scope: !3189)
!3195 = !DILocation(line: 174, column: 54, scope: !3189)
!3196 = !DILocation(line: 174, column: 14, scope: !3189)
!3197 = !DILocation(line: 174, column: 59, scope: !3189)
!3198 = !DILocation(line: 173, column: 75, scope: !3189)
!3199 = !DILocation(line: 173, column: 40, scope: !3189)
!3200 = !DILocation(line: 173, column: 14, scope: !3189)
!3201 = !DILocation(line: 173, column: 9, scope: !3189)
!3202 = !DILocation(line: 0, scope: !3106)
!3203 = !DILocation(line: 177, column: 17, scope: !3110)
!3204 = !DILocation(line: 177, column: 11, scope: !3106)
!3205 = !DILocation(line: 179, column: 15, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3110, file: !1623, line: 178, column: 7)
!3207 = !DILocation(line: 184, column: 9, scope: !3206)
!3208 = !DILocation(line: 184, column: 9, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 184, column: 9)
!3210 = !DILocation(line: 184, column: 9, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3209, file: !1623, line: 184, column: 9)
!3212 = !DILocation(line: 184, column: 9, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 184, column: 9)
!3214 = !DILocation(line: 184, column: 9, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3213, file: !1623, line: 184, column: 9)
!3216 = !DILocation(line: 184, column: 9, scope: !3217)
!3217 = distinct !DILexicalBlock(scope: !3213, file: !1623, line: 184, column: 9)
!3218 = !DILocation(line: 0, scope: !3213)
!3219 = !DILocation(line: 0, scope: !3206)
!3220 = !DILocation(line: 185, column: 9, scope: !3206)
!3221 = !DILocation(line: 185, column: 9, scope: !3222)
!3222 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 185, column: 9)
!3223 = !DILocation(line: 185, column: 9, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3222, file: !1623, line: 185, column: 9)
!3225 = !DILocation(line: 185, column: 9, scope: !3226)
!3226 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 185, column: 9)
!3227 = !DILocation(line: 185, column: 9, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3226, file: !1623, line: 185, column: 9)
!3229 = !DILocation(line: 185, column: 9, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3226, file: !1623, line: 185, column: 9)
!3231 = !DILocation(line: 0, scope: !3226)
!3232 = !DILocation(line: 186, column: 9, scope: !3206)
!3233 = !DILocation(line: 186, column: 9, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 186, column: 9)
!3235 = !DILocation(line: 186, column: 9, scope: !3236)
!3236 = distinct !DILexicalBlock(scope: !3234, file: !1623, line: 186, column: 9)
!3237 = !DILocation(line: 186, column: 9, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 186, column: 9)
!3239 = !DILocation(line: 186, column: 9, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3238, file: !1623, line: 186, column: 9)
!3241 = !DILocation(line: 186, column: 9, scope: !3242)
!3242 = distinct !DILexicalBlock(scope: !3238, file: !1623, line: 186, column: 9)
!3243 = !DILocation(line: 0, scope: !3238)
!3244 = !DILocation(line: 187, column: 9, scope: !3206)
!3245 = !DILocation(line: 187, column: 9, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 187, column: 9)
!3247 = !DILocation(line: 187, column: 9, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3246, file: !1623, line: 187, column: 9)
!3249 = !DILocation(line: 187, column: 9, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 187, column: 9)
!3251 = !DILocation(line: 187, column: 9, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3250, file: !1623, line: 187, column: 9)
!3253 = !DILocation(line: 187, column: 9, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3250, file: !1623, line: 187, column: 9)
!3255 = !DILocation(line: 0, scope: !3250)
!3256 = !DILocation(line: 188, column: 9, scope: !3206)
!3257 = !DILocation(line: 188, column: 9, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 188, column: 9)
!3259 = !DILocation(line: 188, column: 9, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3258, file: !1623, line: 188, column: 9)
!3261 = !DILocation(line: 188, column: 9, scope: !3262)
!3262 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 188, column: 9)
!3263 = !DILocation(line: 188, column: 9, scope: !3264)
!3264 = distinct !DILexicalBlock(scope: !3262, file: !1623, line: 188, column: 9)
!3265 = !DILocation(line: 188, column: 9, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3262, file: !1623, line: 188, column: 9)
!3267 = !DILocation(line: 0, scope: !3262)
!3268 = !DILocation(line: 189, column: 9, scope: !3206)
!3269 = !DILocation(line: 189, column: 9, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 189, column: 9)
!3271 = !DILocation(line: 189, column: 9, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3270, file: !1623, line: 189, column: 9)
!3273 = !DILocation(line: 189, column: 9, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 189, column: 9)
!3275 = !DILocation(line: 189, column: 9, scope: !3276)
!3276 = distinct !DILexicalBlock(scope: !3274, file: !1623, line: 189, column: 9)
!3277 = !DILocation(line: 189, column: 9, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3274, file: !1623, line: 189, column: 9)
!3279 = !DILocation(line: 0, scope: !3274)
!3280 = !DILocation(line: 190, column: 9, scope: !3206)
!3281 = !DILocation(line: 190, column: 9, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 190, column: 9)
!3283 = !DILocation(line: 190, column: 9, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3282, file: !1623, line: 190, column: 9)
!3285 = !DILocation(line: 190, column: 9, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 190, column: 9)
!3287 = !DILocation(line: 190, column: 9, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3286, file: !1623, line: 190, column: 9)
!3289 = !DILocation(line: 190, column: 9, scope: !3290)
!3290 = distinct !DILexicalBlock(scope: !3286, file: !1623, line: 190, column: 9)
!3291 = !DILocation(line: 0, scope: !3286)
!3292 = !DILocation(line: 191, column: 9, scope: !3206)
!3293 = !DILocation(line: 191, column: 9, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 191, column: 9)
!3295 = !DILocation(line: 191, column: 9, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3294, file: !1623, line: 191, column: 9)
!3297 = !DILocation(line: 191, column: 9, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3206, file: !1623, line: 191, column: 9)
!3299 = !DILocation(line: 191, column: 9, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3298, file: !1623, line: 191, column: 9)
!3301 = !DILocation(line: 191, column: 9, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3298, file: !1623, line: 191, column: 9)
!3303 = !DILocation(line: 196, column: 41, scope: !3109)
!3304 = !DILocation(line: 196, column: 58, scope: !3109)
!3305 = !DILocation(line: 196, column: 51, scope: !3109)
!3306 = !DILocation(line: 196, column: 48, scope: !3109)
!3307 = !DILocation(line: 196, column: 30, scope: !3109)
!3308 = !DILocation(line: 0, scope: !3109)
!3309 = !DILocation(line: 198, column: 25, scope: !3109)
!3310 = !DILocation(line: 198, column: 18, scope: !3109)
!3311 = !DILocation(line: 198, column: 15, scope: !3109)
!3312 = !DILocation(line: 212, column: 11, scope: !3113)
!3313 = !DILocation(line: 0, scope: !3113)
!3314 = !DILocation(line: 212, column: 11, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 212, column: 11)
!3316 = !DILocation(line: 212, column: 11, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3315, file: !1623, line: 212, column: 11)
!3318 = !DILocation(line: 212, column: 11, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 212, column: 11)
!3320 = !DILocation(line: 212, column: 11, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3319, file: !1623, line: 212, column: 11)
!3322 = !DILocation(line: 212, column: 11, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3319, file: !1623, line: 212, column: 11)
!3324 = !DILocation(line: 0, scope: !3319)
!3325 = !DILocation(line: 213, column: 11, scope: !3113)
!3326 = !DILocation(line: 213, column: 11, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 213, column: 11)
!3328 = !DILocation(line: 213, column: 11, scope: !3329)
!3329 = distinct !DILexicalBlock(scope: !3327, file: !1623, line: 213, column: 11)
!3330 = !DILocation(line: 213, column: 11, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 213, column: 11)
!3332 = !DILocation(line: 213, column: 11, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3331, file: !1623, line: 213, column: 11)
!3334 = !DILocation(line: 213, column: 11, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3331, file: !1623, line: 213, column: 11)
!3336 = !DILocation(line: 0, scope: !3331)
!3337 = !DILocation(line: 214, column: 11, scope: !3113)
!3338 = !DILocation(line: 214, column: 11, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 214, column: 11)
!3340 = !DILocation(line: 214, column: 11, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3339, file: !1623, line: 214, column: 11)
!3342 = !DILocation(line: 214, column: 11, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 214, column: 11)
!3344 = !DILocation(line: 214, column: 11, scope: !3345)
!3345 = distinct !DILexicalBlock(scope: !3343, file: !1623, line: 214, column: 11)
!3346 = !DILocation(line: 214, column: 11, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3343, file: !1623, line: 214, column: 11)
!3348 = !DILocation(line: 0, scope: !3343)
!3349 = !DILocation(line: 215, column: 11, scope: !3113)
!3350 = !DILocation(line: 215, column: 11, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 215, column: 11)
!3352 = !DILocation(line: 215, column: 11, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3351, file: !1623, line: 215, column: 11)
!3354 = !DILocation(line: 215, column: 11, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 215, column: 11)
!3356 = !DILocation(line: 215, column: 11, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3355, file: !1623, line: 215, column: 11)
!3358 = !DILocation(line: 215, column: 11, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3355, file: !1623, line: 215, column: 11)
!3360 = !DILocation(line: 0, scope: !3355)
!3361 = !DILocation(line: 216, column: 11, scope: !3113)
!3362 = !DILocation(line: 216, column: 11, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 216, column: 11)
!3364 = !DILocation(line: 216, column: 11, scope: !3365)
!3365 = distinct !DILexicalBlock(scope: !3363, file: !1623, line: 216, column: 11)
!3366 = !DILocation(line: 216, column: 11, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 216, column: 11)
!3368 = !DILocation(line: 216, column: 11, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3367, file: !1623, line: 216, column: 11)
!3370 = !DILocation(line: 216, column: 11, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3367, file: !1623, line: 216, column: 11)
!3372 = !DILocation(line: 0, scope: !3367)
!3373 = !DILocation(line: 217, column: 11, scope: !3113)
!3374 = !DILocation(line: 217, column: 11, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 217, column: 11)
!3376 = !DILocation(line: 217, column: 11, scope: !3377)
!3377 = distinct !DILexicalBlock(scope: !3375, file: !1623, line: 217, column: 11)
!3378 = !DILocation(line: 217, column: 11, scope: !3379)
!3379 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 217, column: 11)
!3380 = !DILocation(line: 217, column: 11, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3379, file: !1623, line: 217, column: 11)
!3382 = !DILocation(line: 217, column: 11, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3379, file: !1623, line: 217, column: 11)
!3384 = !DILocation(line: 0, scope: !3379)
!3385 = !DILocation(line: 218, column: 11, scope: !3113)
!3386 = !DILocation(line: 218, column: 11, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 218, column: 11)
!3388 = !DILocation(line: 218, column: 11, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3387, file: !1623, line: 218, column: 11)
!3390 = !DILocation(line: 218, column: 11, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 218, column: 11)
!3392 = !DILocation(line: 218, column: 11, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3391, file: !1623, line: 218, column: 11)
!3394 = !DILocation(line: 218, column: 11, scope: !3395)
!3395 = distinct !DILexicalBlock(scope: !3391, file: !1623, line: 218, column: 11)
!3396 = !DILocation(line: 0, scope: !3391)
!3397 = !DILocation(line: 219, column: 11, scope: !3113)
!3398 = !DILocation(line: 219, column: 11, scope: !3399)
!3399 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 219, column: 11)
!3400 = !DILocation(line: 219, column: 11, scope: !3401)
!3401 = distinct !DILexicalBlock(scope: !3399, file: !1623, line: 219, column: 11)
!3402 = !DILocation(line: 219, column: 11, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3113, file: !1623, line: 219, column: 11)
!3404 = !DILocation(line: 219, column: 11, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3403, file: !1623, line: 219, column: 11)
!3406 = !DILocation(line: 219, column: 11, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3403, file: !1623, line: 219, column: 11)
!3408 = !DILocation(line: 0, scope: !3110)
!3409 = !DILocation(line: 224, column: 23, scope: !3106)
!3410 = !DILocation(line: 224, column: 17, scope: !3106)
!3411 = !DILocation(line: 224, column: 7, scope: !3106)
!3412 = !DILocation(line: 224, column: 21, scope: !3106)
!3413 = !DILocation(line: 229, column: 7, scope: !3120)
!3414 = !DILocation(line: 230, column: 28, scope: !3120)
!3415 = !DILocation(line: 231, column: 7, scope: !3120)
!3416 = !DILocation(line: 231, column: 7, scope: !3417)
!3417 = distinct !DILexicalBlock(scope: !3120, file: !1623, line: 231, column: 7)
!3418 = !DILocation(line: 231, column: 7, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3417, file: !1623, line: 231, column: 7)
!3420 = !DILocation(line: 0, scope: !3120)
!3421 = !DILocation(line: 231, column: 7, scope: !3119)
!3422 = !DILocation(line: 233, column: 9, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3119, file: !1623, line: 232, column: 7)
!3424 = !DILocation(line: 234, column: 15, scope: !3423)
!3425 = !DILocation(line: 236, column: 7, scope: !3423)
!3426 = !DILocation(line: 239, column: 9, scope: !3118)
!3427 = !DILocation(line: 240, column: 31, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3118, file: !1623, line: 240, column: 13)
!3429 = !DILocation(line: 242, column: 32, scope: !3118)
!3430 = !DILocation(line: 243, column: 9, scope: !3118)
!3431 = !DILocation(line: 243, column: 9, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3118, file: !1623, line: 243, column: 9)
!3433 = !DILocation(line: 243, column: 9, scope: !3434)
!3434 = distinct !DILexicalBlock(scope: !3432, file: !1623, line: 243, column: 9)
!3435 = !DILocation(line: 0, scope: !3118)
!3436 = !DILocation(line: 243, column: 9, scope: !3117)
!3437 = !DILocation(line: 245, column: 11, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3117, file: !1623, line: 244, column: 9)
!3439 = !DILocation(line: 246, column: 37, scope: !3438)
!3440 = !DILocation(line: 246, column: 65, scope: !3438)
!3441 = !DILocation(line: 247, column: 11, scope: !3438)
!3442 = !DILocation(line: 247, column: 11, scope: !3443)
!3443 = distinct !DILexicalBlock(scope: !3438, file: !1623, line: 247, column: 11)
!3444 = !DILocation(line: 247, column: 11, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3443, file: !1623, line: 247, column: 11)
!3446 = !DILocation(line: 0, scope: !3438)
!3447 = !DILocation(line: 247, column: 11, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3438, file: !1623, line: 247, column: 11)
!3449 = !DILocation(line: 249, column: 13, scope: !3450)
!3450 = distinct !DILexicalBlock(scope: !3448, file: !1623, line: 248, column: 11)
!3451 = !DILocation(line: 250, column: 38, scope: !3450)
!3452 = !DILocation(line: 250, column: 55, scope: !3450)
!3453 = !DILocation(line: 250, column: 48, scope: !3450)
!3454 = !DILocation(line: 250, column: 45, scope: !3450)
!3455 = !DILocation(line: 250, column: 27, scope: !3450)
!3456 = !DILocation(line: 250, column: 13, scope: !3450)
!3457 = !DILocation(line: 250, column: 25, scope: !3450)
!3458 = !DILocation(line: 251, column: 19, scope: !3450)
!3459 = !DILocation(line: 253, column: 27, scope: !3450)
!3460 = !DILocation(line: 253, column: 21, scope: !3450)
!3461 = !DILocation(line: 254, column: 13, scope: !3450)
!3462 = !DILocation(line: 256, column: 11, scope: !3438)
!3463 = !DILocation(line: 257, column: 9, scope: !3438)
!3464 = !DILocation(line: 261, column: 11, scope: !3116)
!3465 = !DILocation(line: 262, column: 34, scope: !3116)
!3466 = !DILocation(line: 263, column: 11, scope: !3116)
!3467 = !DILocation(line: 263, column: 11, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3116, file: !1623, line: 263, column: 11)
!3469 = !DILocation(line: 263, column: 11, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3468, file: !1623, line: 263, column: 11)
!3471 = !DILocation(line: 0, scope: !3116)
!3472 = !DILocation(line: 263, column: 11, scope: !3473)
!3473 = distinct !DILexicalBlock(scope: !3116, file: !1623, line: 263, column: 11)
!3474 = !DILocation(line: 265, column: 13, scope: !3475)
!3475 = distinct !DILexicalBlock(scope: !3473, file: !1623, line: 264, column: 11)
!3476 = !DILocation(line: 267, column: 11, scope: !3475)
!3477 = !DILocation(line: 270, column: 13, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3473, file: !1623, line: 269, column: 11)
!3479 = !DILocation(line: 271, column: 36, scope: !3478)
!3480 = !DILocation(line: 272, column: 13, scope: !3478)
!3481 = !DILocation(line: 272, column: 13, scope: !3482)
!3482 = distinct !DILexicalBlock(scope: !3478, file: !1623, line: 272, column: 13)
!3483 = !DILocation(line: 272, column: 13, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3482, file: !1623, line: 272, column: 13)
!3485 = !DILocation(line: 0, scope: !3478)
!3486 = !DILocation(line: 272, column: 13, scope: !3487)
!3487 = distinct !DILexicalBlock(scope: !3478, file: !1623, line: 272, column: 13)
!3488 = !DILocation(line: 274, column: 15, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3487, file: !1623, line: 273, column: 13)
!3490 = !DILocation(line: 276, column: 13, scope: !3489)
!3491 = !DILocation(line: 279, column: 15, scope: !3492)
!3492 = distinct !DILexicalBlock(scope: !3487, file: !1623, line: 278, column: 13)
!3493 = !DILocation(line: 0, scope: !3487)
!3494 = !DILocation(line: 0, scope: !3117)
!3495 = !DILocation(line: 288, column: 23, scope: !3118)
!3496 = !DILocation(line: 288, column: 17, scope: !3118)
!3497 = !DILocation(line: 0, scope: !3119)
!3498 = !DILocation(line: 0, scope: !3122)
!3499 = !DILocation(line: 328, column: 9, scope: !3122)
!3500 = !DILocation(line: 328, column: 9, scope: !3501)
!3501 = distinct !DILexicalBlock(scope: !3122, file: !1623, line: 328, column: 9)
!3502 = !DILocation(line: 328, column: 9, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3501, file: !1623, line: 328, column: 9)
!3504 = !DILocation(line: 328, column: 9, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3122, file: !1623, line: 328, column: 9)
!3506 = !DILocation(line: 330, column: 11, scope: !3507)
!3507 = distinct !DILexicalBlock(scope: !3505, file: !1623, line: 329, column: 9)
!3508 = !DILocation(line: 331, column: 26, scope: !3507)
!3509 = !DILocation(line: 331, column: 47, scope: !3507)
!3510 = !DILocation(line: 331, column: 35, scope: !3507)
!3511 = !DILocation(line: 333, column: 11, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3507, file: !1623, line: 333, column: 11)
!3513 = !DILocation(line: 333, column: 11, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3512, file: !1623, line: 333, column: 11)
!3515 = !DILocation(line: 333, column: 11, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3514, file: !1623, line: 333, column: 11)
!3517 = !DILocation(line: 0, scope: !3507)
!3518 = !DILocation(line: 333, column: 11, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3512, file: !1623, line: 333, column: 11)
!3520 = !DILocation(line: 333, column: 11, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3519, file: !1623, line: 333, column: 11)
!3522 = !DILocation(line: 333, column: 11, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3519, file: !1623, line: 333, column: 11)
!3524 = !DILocation(line: 0, scope: !3519)
!3525 = !DILocation(line: 0, scope: !3512)
!3526 = !DILocation(line: 334, column: 11, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3507, file: !1623, line: 334, column: 11)
!3528 = !DILocation(line: 334, column: 11, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3527, file: !1623, line: 334, column: 11)
!3530 = !DILocation(line: 334, column: 11, scope: !3531)
!3531 = distinct !DILexicalBlock(scope: !3529, file: !1623, line: 334, column: 11)
!3532 = !DILocation(line: 334, column: 11, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3527, file: !1623, line: 334, column: 11)
!3534 = !DILocation(line: 334, column: 11, scope: !3535)
!3535 = distinct !DILexicalBlock(scope: !3533, file: !1623, line: 334, column: 11)
!3536 = !DILocation(line: 334, column: 11, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3533, file: !1623, line: 334, column: 11)
!3538 = !DILocation(line: 0, scope: !3533)
!3539 = !DILocation(line: 0, scope: !3527)
!3540 = !DILocation(line: 335, column: 11, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3507, file: !1623, line: 335, column: 11)
!3542 = !DILocation(line: 335, column: 11, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3541, file: !1623, line: 335, column: 11)
!3544 = !DILocation(line: 335, column: 11, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3543, file: !1623, line: 335, column: 11)
!3546 = !DILocation(line: 335, column: 11, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3541, file: !1623, line: 335, column: 11)
!3548 = !DILocation(line: 335, column: 11, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3547, file: !1623, line: 335, column: 11)
!3550 = !DILocation(line: 335, column: 11, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3547, file: !1623, line: 335, column: 11)
!3552 = !DILocation(line: 0, scope: !3547)
!3553 = !DILocation(line: 0, scope: !3541)
!3554 = !DILocation(line: 336, column: 15, scope: !3507)
!3555 = !DILocation(line: 337, column: 9, scope: !3507)
!3556 = !DILocation(line: 340, column: 11, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3505, file: !1623, line: 339, column: 9)
!3558 = !DILocation(line: 341, column: 26, scope: !3557)
!3559 = !DILocation(line: 342, column: 11, scope: !3557)
!3560 = !DILocation(line: 342, column: 11, scope: !3561)
!3561 = distinct !DILexicalBlock(scope: !3557, file: !1623, line: 342, column: 11)
!3562 = !DILocation(line: 342, column: 11, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3561, file: !1623, line: 342, column: 11)
!3564 = !DILocation(line: 0, scope: !3557)
!3565 = !DILocation(line: 342, column: 11, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3557, file: !1623, line: 342, column: 11)
!3567 = !DILocation(line: 344, column: 13, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3566, file: !1623, line: 343, column: 11)
!3569 = !DILocation(line: 345, column: 28, scope: !3568)
!3570 = !DILocation(line: 345, column: 49, scope: !3568)
!3571 = !DILocation(line: 345, column: 37, scope: !3568)
!3572 = !DILocation(line: 347, column: 13, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3568, file: !1623, line: 347, column: 13)
!3574 = !DILocation(line: 347, column: 13, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3573, file: !1623, line: 347, column: 13)
!3576 = !DILocation(line: 347, column: 13, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3575, file: !1623, line: 347, column: 13)
!3578 = !DILocation(line: 0, scope: !3568)
!3579 = !DILocation(line: 347, column: 13, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3573, file: !1623, line: 347, column: 13)
!3581 = !DILocation(line: 347, column: 13, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3580, file: !1623, line: 347, column: 13)
!3583 = !DILocation(line: 347, column: 13, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3580, file: !1623, line: 347, column: 13)
!3585 = !DILocation(line: 0, scope: !3580)
!3586 = !DILocation(line: 0, scope: !3573)
!3587 = !DILocation(line: 348, column: 13, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3568, file: !1623, line: 348, column: 13)
!3589 = !DILocation(line: 348, column: 13, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3588, file: !1623, line: 348, column: 13)
!3591 = !DILocation(line: 348, column: 13, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3590, file: !1623, line: 348, column: 13)
!3593 = !DILocation(line: 348, column: 13, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3588, file: !1623, line: 348, column: 13)
!3595 = !DILocation(line: 348, column: 13, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3594, file: !1623, line: 348, column: 13)
!3597 = !DILocation(line: 348, column: 13, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3594, file: !1623, line: 348, column: 13)
!3599 = !DILocation(line: 0, scope: !3594)
!3600 = !DILocation(line: 0, scope: !3588)
!3601 = !DILocation(line: 349, column: 13, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3568, file: !1623, line: 349, column: 13)
!3603 = !DILocation(line: 349, column: 13, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3602, file: !1623, line: 349, column: 13)
!3605 = !DILocation(line: 349, column: 13, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3604, file: !1623, line: 349, column: 13)
!3607 = !DILocation(line: 349, column: 13, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3602, file: !1623, line: 349, column: 13)
!3609 = !DILocation(line: 349, column: 13, scope: !3610)
!3610 = distinct !DILexicalBlock(scope: !3608, file: !1623, line: 349, column: 13)
!3611 = !DILocation(line: 349, column: 13, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3608, file: !1623, line: 349, column: 13)
!3613 = !DILocation(line: 353, column: 13, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3566, file: !1623, line: 352, column: 11)
!3615 = !DILocation(line: 354, column: 28, scope: !3614)
!3616 = !DILocation(line: 355, column: 13, scope: !3617)
!3617 = distinct !DILexicalBlock(scope: !3614, file: !1623, line: 355, column: 13)
!3618 = !DILocation(line: 0, scope: !3617)
!3619 = !DILocation(line: 0, scope: !3614)
!3620 = !DILocation(line: 355, column: 13, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3622, file: !1623, line: 355, column: 13)
!3622 = distinct !DILexicalBlock(scope: !3617, file: !1623, line: 355, column: 13)
!3623 = !DILocation(line: 355, column: 13, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3621, file: !1623, line: 355, column: 13)
!3625 = !DILocation(line: 355, column: 13, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3624, file: !1623, line: 355, column: 13)
!3627 = !DILocation(line: 355, column: 13, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3621, file: !1623, line: 355, column: 13)
!3629 = !DILocation(line: 355, column: 13, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3628, file: !1623, line: 355, column: 13)
!3631 = !DILocation(line: 355, column: 13, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3628, file: !1623, line: 355, column: 13)
!3633 = !DILocation(line: 0, scope: !3628)
!3634 = !DILocation(line: 0, scope: !3621)
!3635 = !DILocation(line: 355, column: 13, scope: !3622)
!3636 = distinct !{!3636, !3616, !3616}
!3637 = !DILocation(line: 356, column: 17, scope: !3614)
!3638 = !DILocation(line: 0, scope: !3505)
!3639 = !DILocation(line: 362, column: 17, scope: !3125)
!3640 = !DILocation(line: 362, column: 11, scope: !3120)
!3641 = !DILocation(line: 366, column: 15, scope: !3124)
!3642 = !DILocation(line: 366, column: 72, scope: !3124)
!3643 = !DILocation(line: 365, column: 32, scope: !3124)
!3644 = !DILocation(line: 0, scope: !3124)
!3645 = !DILocation(line: 367, column: 9, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3647, file: !1623, line: 367, column: 9)
!3647 = distinct !DILexicalBlock(scope: !3124, file: !1623, line: 367, column: 9)
!3648 = !DILocation(line: 367, column: 9, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3646, file: !1623, line: 367, column: 9)
!3650 = !DILocation(line: 367, column: 9, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3649, file: !1623, line: 367, column: 9)
!3652 = !DILocation(line: 367, column: 9, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3646, file: !1623, line: 367, column: 9)
!3654 = !DILocation(line: 367, column: 9, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3653, file: !1623, line: 367, column: 9)
!3656 = !DILocation(line: 367, column: 9, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3653, file: !1623, line: 367, column: 9)
!3658 = !DILocation(line: 0, scope: !3653)
!3659 = !DILocation(line: 0, scope: !3646)
!3660 = !DILocation(line: 367, column: 9, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3647, file: !1623, line: 367, column: 9)
!3662 = !DILocation(line: 367, column: 9, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3661, file: !1623, line: 367, column: 9)
!3664 = !DILocation(line: 367, column: 9, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3663, file: !1623, line: 367, column: 9)
!3666 = !DILocation(line: 0, scope: !3647)
!3667 = !DILocation(line: 367, column: 9, scope: !3668)
!3668 = distinct !DILexicalBlock(scope: !3661, file: !1623, line: 367, column: 9)
!3669 = !DILocation(line: 367, column: 9, scope: !3670)
!3670 = distinct !DILexicalBlock(scope: !3668, file: !1623, line: 367, column: 9)
!3671 = !DILocation(line: 367, column: 9, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3668, file: !1623, line: 367, column: 9)
!3673 = !DILocation(line: 0, scope: !3668)
!3674 = !DILocation(line: 0, scope: !3661)
!3675 = !DILocation(line: 367, column: 9, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3647, file: !1623, line: 367, column: 9)
!3677 = !DILocation(line: 367, column: 9, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3676, file: !1623, line: 367, column: 9)
!3679 = !DILocation(line: 367, column: 9, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3678, file: !1623, line: 367, column: 9)
!3681 = !DILocation(line: 367, column: 9, scope: !3682)
!3682 = distinct !DILexicalBlock(scope: !3676, file: !1623, line: 367, column: 9)
!3683 = !DILocation(line: 367, column: 9, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3682, file: !1623, line: 367, column: 9)
!3685 = !DILocation(line: 367, column: 9, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3682, file: !1623, line: 367, column: 9)
!3687 = !DILocation(line: 0, scope: !3682)
!3688 = !DILocation(line: 0, scope: !3676)
!3689 = !DILocation(line: 367, column: 9, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3647, file: !1623, line: 367, column: 9)
!3691 = !DILocation(line: 367, column: 9, scope: !3692)
!3692 = distinct !DILexicalBlock(scope: !3690, file: !1623, line: 367, column: 9)
!3693 = !DILocation(line: 367, column: 9, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3692, file: !1623, line: 367, column: 9)
!3695 = !DILocation(line: 367, column: 9, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3690, file: !1623, line: 367, column: 9)
!3697 = !DILocation(line: 367, column: 9, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3696, file: !1623, line: 367, column: 9)
!3699 = !DILocation(line: 367, column: 9, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3696, file: !1623, line: 367, column: 9)
!3701 = !DILocation(line: 0, scope: !3696)
!3702 = !DILocation(line: 0, scope: !3690)
!3703 = !DILocation(line: 367, column: 9, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3647, file: !1623, line: 367, column: 9)
!3705 = !DILocation(line: 367, column: 9, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3704, file: !1623, line: 367, column: 9)
!3707 = !DILocation(line: 367, column: 9, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3706, file: !1623, line: 367, column: 9)
!3709 = !DILocation(line: 367, column: 9, scope: !3710)
!3710 = distinct !DILexicalBlock(scope: !3704, file: !1623, line: 367, column: 9)
!3711 = !DILocation(line: 367, column: 9, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3710, file: !1623, line: 367, column: 9)
!3713 = !DILocation(line: 367, column: 9, scope: !3714)
!3714 = distinct !DILexicalBlock(scope: !3710, file: !1623, line: 367, column: 9)
!3715 = !DILocation(line: 0, scope: !3710)
!3716 = !DILocation(line: 0, scope: !3704)
!3717 = !DILocation(line: 367, column: 9, scope: !3718)
!3718 = distinct !DILexicalBlock(scope: !3647, file: !1623, line: 367, column: 9)
!3719 = !DILocation(line: 367, column: 9, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3718, file: !1623, line: 367, column: 9)
!3721 = !DILocation(line: 367, column: 9, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3720, file: !1623, line: 367, column: 9)
!3723 = !DILocation(line: 367, column: 9, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3718, file: !1623, line: 367, column: 9)
!3725 = !DILocation(line: 367, column: 9, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3724, file: !1623, line: 367, column: 9)
!3727 = !DILocation(line: 367, column: 9, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3724, file: !1623, line: 367, column: 9)
!3729 = !DILocation(line: 0, scope: !3724)
!3730 = !DILocation(line: 0, scope: !3718)
!3731 = !DILocation(line: 367, column: 9, scope: !3647)
!3732 = !DILocation(line: 368, column: 22, scope: !3128)
!3733 = !DILocation(line: 368, column: 13, scope: !3124)
!3734 = !DILocation(line: 0, scope: !3127)
!3735 = !DILocation(line: 371, column: 58, scope: !3127)
!3736 = !DILocation(line: 371, column: 64, scope: !3127)
!3737 = !DILocation(line: 372, column: 37, scope: !3127)
!3738 = !DILocation(line: 372, column: 25, scope: !3127)
!3739 = !DILocation(line: 373, column: 23, scope: !3133)
!3740 = !DILocation(line: 373, column: 15, scope: !3127)
!3741 = !DILocation(line: 375, column: 22, scope: !3132)
!3742 = !DILocation(line: 376, column: 47, scope: !3132)
!3743 = !DILocation(line: 376, column: 57, scope: !3132)
!3744 = !DILocation(line: 0, scope: !3131)
!3745 = !DILocation(line: 380, column: 15, scope: !3131)
!3746 = !DILocation(line: 382, column: 17, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3131, file: !1623, line: 381, column: 15)
!3748 = !DILocation(line: 382, column: 17, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3747, file: !1623, line: 382, column: 17)
!3750 = !DILocation(line: 382, column: 17, scope: !3751)
!3751 = distinct !DILexicalBlock(scope: !3749, file: !1623, line: 382, column: 17)
!3752 = !DILocation(line: 382, column: 17, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3747, file: !1623, line: 382, column: 17)
!3754 = !DILocation(line: 382, column: 17, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3753, file: !1623, line: 382, column: 17)
!3756 = !DILocation(line: 382, column: 17, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3753, file: !1623, line: 382, column: 17)
!3758 = !DILocation(line: 0, scope: !3753)
!3759 = !DILocation(line: 0, scope: !3747)
!3760 = !DILocation(line: 0, scope: !3132)
!3761 = !DILocation(line: 383, column: 22, scope: !3747)
!3762 = !DILocation(line: 385, column: 22, scope: !3131)
!3763 = !DILocation(line: 385, column: 38, scope: !3131)
!3764 = !DILocation(line: 384, column: 15, scope: !3747)
!3765 = distinct !{!3765, !3745, !3766}
!3766 = !DILocation(line: 385, column: 42, scope: !3131)
!3767 = !DILocation(line: 390, column: 27, scope: !3138)
!3768 = !DILocation(line: 391, column: 13, scope: !3138)
!3769 = !DILocation(line: 0, scope: !3138)
!3770 = !DILocation(line: 393, column: 15, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3137, file: !1623, line: 393, column: 15)
!3772 = !DILocation(line: 393, column: 15, scope: !3137)
!3773 = !DILocation(line: 393, column: 15, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3771, file: !1623, line: 393, column: 15)
!3775 = !DILocation(line: 394, column: 21, scope: !3137)
!3776 = !DILocation(line: 398, column: 22, scope: !3136)
!3777 = !DILocation(line: 399, column: 40, scope: !3136)
!3778 = !DILocation(line: 0, scope: !3136)
!3779 = !DILocation(line: 400, column: 38, scope: !3136)
!3780 = !DILocation(line: 400, column: 49, scope: !3136)
!3781 = !DILocation(line: 400, column: 44, scope: !3136)
!3782 = !DILocation(line: 401, column: 31, scope: !3136)
!3783 = !DILocation(line: 401, column: 22, scope: !3136)
!3784 = !DILocation(line: 412, column: 20, scope: !3138)
!3785 = !DILocation(line: 412, column: 36, scope: !3138)
!3786 = !DILocation(line: 411, column: 13, scope: !3137)
!3787 = distinct !{!3787, !3768, !3788}
!3788 = !DILocation(line: 412, column: 40, scope: !3138)
!3789 = !DILocation(line: 414, column: 22, scope: !3138)
!3790 = !DILocation(line: 0, scope: !3140)
!3791 = !DILocation(line: 417, column: 15, scope: !3140)
!3792 = !DILocation(line: 417, column: 15, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3140, file: !1623, line: 417, column: 15)
!3794 = !DILocation(line: 417, column: 15, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3793, file: !1623, line: 417, column: 15)
!3796 = !DILocation(line: 417, column: 15, scope: !3797)
!3797 = distinct !DILexicalBlock(scope: !3140, file: !1623, line: 417, column: 15)
!3798 = !DILocation(line: 417, column: 15, scope: !3799)
!3799 = distinct !DILexicalBlock(scope: !3797, file: !1623, line: 417, column: 15)
!3800 = !DILocation(line: 417, column: 15, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3797, file: !1623, line: 417, column: 15)
!3802 = !DILocation(line: 0, scope: !3797)
!3803 = !DILocation(line: 418, column: 15, scope: !3140)
!3804 = !DILocation(line: 418, column: 15, scope: !3805)
!3805 = distinct !DILexicalBlock(scope: !3140, file: !1623, line: 418, column: 15)
!3806 = !DILocation(line: 418, column: 15, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3805, file: !1623, line: 418, column: 15)
!3808 = !DILocation(line: 418, column: 15, scope: !3809)
!3809 = distinct !DILexicalBlock(scope: !3140, file: !1623, line: 418, column: 15)
!3810 = !DILocation(line: 418, column: 15, scope: !3811)
!3811 = distinct !DILexicalBlock(scope: !3809, file: !1623, line: 418, column: 15)
!3812 = !DILocation(line: 418, column: 15, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3809, file: !1623, line: 418, column: 15)
!3814 = !DILocation(line: 0, scope: !3809)
!3815 = !DILocation(line: 419, column: 15, scope: !3140)
!3816 = !DILocation(line: 419, column: 15, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3140, file: !1623, line: 419, column: 15)
!3818 = !DILocation(line: 419, column: 15, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3817, file: !1623, line: 419, column: 15)
!3820 = !DILocation(line: 419, column: 15, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3140, file: !1623, line: 419, column: 15)
!3822 = !DILocation(line: 419, column: 15, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3821, file: !1623, line: 419, column: 15)
!3824 = !DILocation(line: 419, column: 15, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3821, file: !1623, line: 419, column: 15)
!3826 = !DILocation(line: 0, scope: !3821)
!3827 = !DILocation(line: 420, column: 15, scope: !3140)
!3828 = !DILocation(line: 420, column: 15, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3140, file: !1623, line: 420, column: 15)
!3830 = !DILocation(line: 420, column: 15, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3829, file: !1623, line: 420, column: 15)
!3832 = !DILocation(line: 420, column: 15, scope: !3833)
!3833 = distinct !DILexicalBlock(scope: !3140, file: !1623, line: 420, column: 15)
!3834 = !DILocation(line: 420, column: 15, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3833, file: !1623, line: 420, column: 15)
!3836 = !DILocation(line: 420, column: 15, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3833, file: !1623, line: 420, column: 15)
!3838 = !DILocation(line: 0, scope: !3833)
!3839 = !DILocation(line: 422, column: 26, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3138, file: !1623, line: 422, column: 17)
!3841 = !DILocation(line: 422, column: 17, scope: !3138)
!3842 = !DILocation(line: 434, column: 25, scope: !3124)
!3843 = !DILocation(line: 435, column: 13, scope: !3124)
!3844 = !DILocation(line: 437, column: 24, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !1623, line: 437, column: 15)
!3846 = distinct !DILexicalBlock(scope: !3847, file: !1623, line: 436, column: 9)
!3847 = distinct !DILexicalBlock(scope: !3124, file: !1623, line: 435, column: 13)
!3848 = !DILocation(line: 437, column: 15, scope: !3846)
!3849 = !DILocation(line: 439, column: 23, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3845, file: !1623, line: 438, column: 11)
!3851 = !DILocation(line: 440, column: 13, scope: !3850)
!3852 = !DILocation(line: 443, column: 27, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3847, file: !1623, line: 443, column: 18)
!3854 = !DILocation(line: 443, column: 18, scope: !3847)
!3855 = !DILocation(line: 445, column: 21, scope: !3856)
!3856 = distinct !DILexicalBlock(scope: !3853, file: !1623, line: 444, column: 9)
!3857 = !DILocation(line: 446, column: 11, scope: !3856)
!3858 = !DILocation(line: 448, column: 24, scope: !3124)
!3859 = !DILocation(line: 448, column: 17, scope: !3124)
!3860 = !DILocation(line: 451, column: 11, scope: !3120)
!3861 = !DILocation(line: 458, column: 26, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3142, file: !1623, line: 458, column: 13)
!3863 = !DILocation(line: 0, scope: !3142)
!3864 = !DILocation(line: 458, column: 36, scope: !3862)
!3865 = !DILocation(line: 458, column: 13, scope: !3142)
!3866 = !DILocation(line: 460, column: 21, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3862, file: !1623, line: 459, column: 9)
!3868 = !DILocation(line: 461, column: 11, scope: !3867)
!3869 = !DILocation(line: 464, column: 24, scope: !3142)
!3870 = !DILocation(line: 464, column: 19, scope: !3142)
!3871 = !DILocation(line: 465, column: 22, scope: !3142)
!3872 = !DILocation(line: 465, column: 39, scope: !3142)
!3873 = !DILocation(line: 465, column: 32, scope: !3142)
!3874 = !DILocation(line: 465, column: 29, scope: !3142)
!3875 = !DILocation(line: 469, column: 13, scope: !3142)
!3876 = !DILocation(line: 470, column: 34, scope: !3147)
!3877 = !DILocation(line: 470, column: 20, scope: !3147)
!3878 = !DILocation(line: 470, column: 13, scope: !3142)
!3879 = !DILocation(line: 472, column: 28, scope: !3146)
!3880 = !DILocation(line: 0, scope: !3146)
!3881 = !DILocation(line: 473, column: 42, scope: !3146)
!3882 = !DILocation(line: 474, column: 34, scope: !3146)
!3883 = !DILocation(line: 476, column: 11, scope: !3146)
!3884 = !DILocation(line: 477, column: 36, scope: !3146)
!3885 = !DILocation(line: 477, column: 29, scope: !3146)
!3886 = !DILocation(line: 477, column: 21, scope: !3146)
!3887 = !DILocation(line: 478, column: 18, scope: !3146)
!3888 = !DILocation(line: 478, column: 25, scope: !3146)
!3889 = !DILocation(line: 477, column: 13, scope: !3146)
!3890 = distinct !{!3890, !3883, !3891}
!3891 = !DILocation(line: 478, column: 31, scope: !3146)
!3892 = !DILocation(line: 484, column: 29, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !1623, line: 483, column: 11)
!3894 = distinct !DILexicalBlock(scope: !3147, file: !1623, line: 481, column: 9)
!3895 = !DILocation(line: 484, column: 23, scope: !3893)
!3896 = !DILocation(line: 484, column: 13, scope: !3893)
!3897 = !DILocation(line: 484, column: 27, scope: !3893)
!3898 = !DILocation(line: 485, column: 17, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3893, file: !1623, line: 485, column: 17)
!3900 = !DILocation(line: 485, column: 23, scope: !3899)
!3901 = !DILocation(line: 485, column: 17, scope: !3893)
!3902 = !DILocation(line: 488, column: 18, scope: !3894)
!3903 = !DILocation(line: 488, column: 27, scope: !3894)
!3904 = !DILocation(line: 487, column: 11, scope: !3893)
!3905 = distinct !{!3905, !3906, !3907}
!3906 = !DILocation(line: 482, column: 11, scope: !3894)
!3907 = !DILocation(line: 488, column: 31, scope: !3894)
!3908 = !DILocation(line: 424, column: 19, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3840, file: !1623, line: 423, column: 13)
!3910 = !DILocation(line: 425, column: 21, scope: !3909)
!3911 = !DILocation(line: 475, column: 18, scope: !3146)
!3912 = !DILocation(line: 493, column: 17, scope: !3077)
!3913 = !DILocation(line: 493, column: 25, scope: !3077)
!3914 = !DILocation(line: 492, column: 3, scope: !3101)
!3915 = distinct !{!3915, !3170, !3916}
!3916 = !DILocation(line: 493, column: 42, scope: !3077)
!3917 = !DILocation(line: 495, column: 3, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3077, file: !1623, line: 495, column: 3)
!3919 = !DILocation(line: 495, column: 3, scope: !3077)
!3920 = !DILocation(line: 495, column: 3, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3918, file: !1623, line: 495, column: 3)
!3922 = !DILocation(line: 497, column: 10, scope: !3077)
!3923 = !DILocation(line: 498, column: 12, scope: !3077)
!3924 = !DILocation(line: 499, column: 11, scope: !3077)
!3925 = !DILocation(line: 500, column: 6, scope: !3077)
!3926 = !DILocation(line: 500, column: 16, scope: !3077)
!3927 = !DILocation(line: 501, column: 13, scope: !3077)
!3928 = !DILocation(line: 502, column: 19, scope: !3077)
!3929 = !DILocation(line: 503, column: 14, scope: !3077)
!3930 = !DILocation(line: 504, column: 14, scope: !3077)
!3931 = !DILocation(line: 505, column: 14, scope: !3077)
!3932 = !DILocation(line: 506, column: 14, scope: !3077)
!3933 = !DILocation(line: 507, column: 12, scope: !3077)
!3934 = !DILocation(line: 509, column: 3, scope: !3077)
!3935 = !DILocation(line: 510, column: 1, scope: !3077)
!3936 = distinct !DISubprogram(name: "LzmaDec_DecodeToBuf", scope: !1623, file: !1623, line: 935, type: !3937, scopeLine: 936, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !3939)
!3937 = !DISubroutineType(types: !3938)
!3938 = !{!1964, !2282, !1620, !2354, !2014, !2354, !2115, !2355}
!3939 = !{!3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3953, !3954, !3955, !3956}
!3940 = !DILocalVariable(name: "p", arg: 1, scope: !3936, file: !1623, line: 935, type: !2282)
!3941 = !DILocalVariable(name: "dest", arg: 2, scope: !3936, file: !1623, line: 935, type: !1620)
!3942 = !DILocalVariable(name: "destLen", arg: 3, scope: !3936, file: !1623, line: 935, type: !2354)
!3943 = !DILocalVariable(name: "src", arg: 4, scope: !3936, file: !1623, line: 935, type: !2014)
!3944 = !DILocalVariable(name: "srcLen", arg: 5, scope: !3936, file: !1623, line: 935, type: !2354)
!3945 = !DILocalVariable(name: "finishMode", arg: 6, scope: !3936, file: !1623, line: 935, type: !2115)
!3946 = !DILocalVariable(name: "status", arg: 7, scope: !3936, file: !1623, line: 935, type: !2355)
!3947 = !DILocalVariable(name: "outSize", scope: !3936, file: !1623, line: 937, type: !1596)
!3948 = !DILocalVariable(name: "inSize", scope: !3936, file: !1623, line: 938, type: !1596)
!3949 = !DILocalVariable(name: "inSizeCur", scope: !3950, file: !1623, line: 942, type: !1596)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !1623, line: 941, column: 3)
!3951 = distinct !DILexicalBlock(scope: !3952, file: !1623, line: 940, column: 3)
!3952 = distinct !DILexicalBlock(scope: !3936, file: !1623, line: 940, column: 3)
!3953 = !DILocalVariable(name: "outSizeCur", scope: !3950, file: !1623, line: 942, type: !1596)
!3954 = !DILocalVariable(name: "dicPos", scope: !3950, file: !1623, line: 942, type: !1596)
!3955 = !DILocalVariable(name: "curFinishMode", scope: !3950, file: !1623, line: 943, type: !2115)
!3956 = !DILocalVariable(name: "res", scope: !3950, file: !1623, line: 944, type: !1964)
!3957 = !DILocation(line: 0, scope: !3936)
!3958 = !DILocation(line: 937, column: 19, scope: !3936)
!3959 = !DILocation(line: 938, column: 18, scope: !3936)
!3960 = !DILocation(line: 939, column: 22, scope: !3936)
!3961 = !DILocation(line: 939, column: 11, scope: !3936)
!3962 = !DILocation(line: 940, column: 3, scope: !3936)
!3963 = !DILocation(line: 942, column: 5, scope: !3950)
!3964 = !DILocation(line: 0, scope: !3950)
!3965 = !DILocation(line: 942, column: 11, scope: !3950)
!3966 = !DILocation(line: 945, column: 12, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3950, file: !1623, line: 945, column: 9)
!3968 = !DILocation(line: 945, column: 25, scope: !3967)
!3969 = !DILocation(line: 945, column: 19, scope: !3967)
!3970 = !DILocation(line: 945, column: 9, scope: !3950)
!3971 = !DILocation(line: 946, column: 17, scope: !3967)
!3972 = !DILocation(line: 946, column: 7, scope: !3967)
!3973 = !DILocation(line: 947, column: 17, scope: !3950)
!3974 = !DILocation(line: 948, column: 33, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3950, file: !1623, line: 948, column: 9)
!3976 = !DILocation(line: 948, column: 17, scope: !3975)
!3977 = !DILocation(line: 948, column: 9, scope: !3950)
!3978 = !DILocation(line: 959, column: 11, scope: !3950)
!3979 = !DILocation(line: 960, column: 12, scope: !3950)
!3980 = !DILocation(line: 962, column: 13, scope: !3950)
!3981 = !DILocation(line: 963, column: 21, scope: !3950)
!3982 = !DILocation(line: 963, column: 28, scope: !3950)
!3983 = !DILocation(line: 964, column: 21, scope: !3950)
!3984 = !DILocation(line: 964, column: 25, scope: !3950)
!3985 = !DILocation(line: 964, column: 5, scope: !3950)
!3986 = !DILocation(line: 966, column: 13, scope: !3950)
!3987 = !DILocation(line: 967, column: 14, scope: !3950)
!3988 = !DILocation(line: 968, column: 13, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3950, file: !1623, line: 968, column: 9)
!3990 = !DILocation(line: 968, column: 9, scope: !3950)
!3991 = !DILocation(line: 972, column: 3, scope: !3951)
!3992 = !DILocation(line: 965, column: 10, scope: !3950)
!3993 = !DILocation(line: 961, column: 12, scope: !3950)
!3994 = !DILocation(line: 960, column: 9, scope: !3950)
!3995 = !DILocation(line: 970, column: 20, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3950, file: !1623, line: 970, column: 9)
!3997 = !DILocation(line: 970, column: 25, scope: !3996)
!3998 = distinct !{!3998, !3999, !4000}
!3999 = !DILocation(line: 940, column: 3, scope: !3952)
!4000 = !DILocation(line: 972, column: 3, scope: !3952)
!4001 = !DILocation(line: 973, column: 1, scope: !3936)
!4002 = distinct !DISubprogram(name: "LzmaDec_FreeProbs", scope: !1623, file: !1623, line: 975, type: !4003, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !4011)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{null, !2282, !4005}
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 32)
!4006 = !DIDerivedType(tag: DW_TAG_typedef, name: "ISzAlloc", file: !1597, line: 233, baseType: !4007)
!4007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1597, line: 229, size: 64, elements: !4008)
!4008 = !{!4009, !4010}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "Alloc", scope: !4007, file: !1597, line: 231, baseType: !1605, size: 32)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "Free", scope: !4007, file: !1597, line: 232, baseType: !205, size: 32, offset: 32)
!4011 = !{!4012, !4013}
!4012 = !DILocalVariable(name: "p", arg: 1, scope: !4002, file: !1623, line: 975, type: !2282)
!4013 = !DILocalVariable(name: "alloc", arg: 2, scope: !4002, file: !1623, line: 975, type: !4005)
!4014 = !DILocation(line: 0, scope: !4002)
!4015 = !DILocation(line: 977, column: 10, scope: !4002)
!4016 = !DILocation(line: 977, column: 15, scope: !4002)
!4017 = !DILocation(line: 977, column: 25, scope: !4002)
!4018 = !DILocation(line: 977, column: 3, scope: !4002)
!4019 = !DILocation(line: 978, column: 12, scope: !4002)
!4020 = !DILocation(line: 979, column: 1, scope: !4002)
!4021 = distinct !DISubprogram(name: "LzmaDec_Free", scope: !1623, file: !1623, line: 987, type: !4003, scopeLine: 988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !4022)
!4022 = !{!4023, !4024}
!4023 = !DILocalVariable(name: "p", arg: 1, scope: !4021, file: !1623, line: 987, type: !2282)
!4024 = !DILocalVariable(name: "alloc", arg: 2, scope: !4021, file: !1623, line: 987, type: !4005)
!4025 = !DILocation(line: 0, scope: !4021)
!4026 = !DILocation(line: 989, column: 3, scope: !4021)
!4027 = !DILocation(line: 990, column: 3, scope: !4021)
!4028 = !DILocation(line: 991, column: 1, scope: !4021)
!4029 = distinct !DISubprogram(name: "LzmaDec_FreeDict", scope: !1623, file: !1623, line: 981, type: !4003, scopeLine: 982, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !4030)
!4030 = !{!4031, !4032}
!4031 = !DILocalVariable(name: "p", arg: 1, scope: !4029, file: !1623, line: 981, type: !2282)
!4032 = !DILocalVariable(name: "alloc", arg: 2, scope: !4029, file: !1623, line: 981, type: !4005)
!4033 = !DILocation(line: 0, scope: !4029)
!4034 = !DILocation(line: 983, column: 10, scope: !4029)
!4035 = !DILocation(line: 983, column: 15, scope: !4029)
!4036 = !DILocation(line: 983, column: 25, scope: !4029)
!4037 = !DILocation(line: 983, column: 3, scope: !4029)
!4038 = !DILocation(line: 984, column: 10, scope: !4029)
!4039 = !DILocation(line: 985, column: 1, scope: !4029)
!4040 = distinct !DISubprogram(name: "LzmaProps_Decode", scope: !1623, file: !1623, line: 993, type: !4041, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !4044)
!4041 = !DISubroutineType(types: !4042)
!4042 = !{!1964, !4043, !2014, !7}
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!4044 = !{!4045, !4046, !4047, !4048, !4049}
!4045 = !DILocalVariable(name: "p", arg: 1, scope: !4040, file: !1623, line: 993, type: !4043)
!4046 = !DILocalVariable(name: "data", arg: 2, scope: !4040, file: !1623, line: 993, type: !2014)
!4047 = !DILocalVariable(name: "size", arg: 3, scope: !4040, file: !1623, line: 993, type: !7)
!4048 = !DILocalVariable(name: "dicSize", scope: !4040, file: !1623, line: 995, type: !1632)
!4049 = !DILocalVariable(name: "d", scope: !4040, file: !1623, line: 996, type: !1621)
!4050 = !DILocation(line: 0, scope: !4040)
!4051 = !DILocation(line: 998, column: 12, scope: !4052)
!4052 = distinct !DILexicalBlock(scope: !4040, file: !1623, line: 998, column: 7)
!4053 = !DILocation(line: 998, column: 7, scope: !4040)
!4054 = !DILocation(line: 1001, column: 15, scope: !4052)
!4055 = !DILocation(line: 1001, column: 34, scope: !4052)
!4056 = !DILocation(line: 1001, column: 26, scope: !4052)
!4057 = !DILocation(line: 1001, column: 42, scope: !4052)
!4058 = !DILocation(line: 1001, column: 23, scope: !4052)
!4059 = !DILocation(line: 1001, column: 59, scope: !4052)
!4060 = !DILocation(line: 1001, column: 51, scope: !4052)
!4061 = !DILocation(line: 1001, column: 67, scope: !4052)
!4062 = !DILocation(line: 1001, column: 48, scope: !4052)
!4063 = !DILocation(line: 1001, column: 85, scope: !4052)
!4064 = !DILocation(line: 1001, column: 77, scope: !4052)
!4065 = !DILocation(line: 1001, column: 93, scope: !4052)
!4066 = !DILocation(line: 1001, column: 74, scope: !4052)
!4067 = !DILocation(line: 1003, column: 7, scope: !4040)
!4068 = !DILocation(line: 1005, column: 6, scope: !4040)
!4069 = !DILocation(line: 1005, column: 14, scope: !4040)
!4070 = !DILocation(line: 1007, column: 7, scope: !4040)
!4071 = !DILocation(line: 1008, column: 9, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4040, file: !1623, line: 1008, column: 7)
!4073 = !DILocation(line: 1008, column: 7, scope: !4040)
!4074 = !DILocation(line: 1012, column: 5, scope: !4040)
!4075 = !DILocation(line: 1011, column: 13, scope: !4040)
!4076 = !DILocation(line: 1011, column: 6, scope: !4040)
!4077 = !DILocation(line: 1011, column: 9, scope: !4040)
!4078 = !DILocation(line: 1013, column: 13, scope: !4040)
!4079 = !DILocation(line: 1013, column: 6, scope: !4040)
!4080 = !DILocation(line: 1013, column: 9, scope: !4040)
!4081 = !DILocation(line: 1014, column: 13, scope: !4040)
!4082 = !DILocation(line: 1014, column: 6, scope: !4040)
!4083 = !DILocation(line: 1014, column: 9, scope: !4040)
!4084 = !DILocation(line: 1016, column: 3, scope: !4040)
!4085 = !DILocation(line: 1017, column: 1, scope: !4040)
!4086 = distinct !DISubprogram(name: "LzmaDec_AllocateProbs", scope: !1623, file: !1623, line: 1033, type: !4087, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !4089)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{!1964, !2282, !2014, !7, !4005}
!4089 = !{!4090, !4091, !4092, !4093, !4094, !4095, !4097}
!4090 = !DILocalVariable(name: "p", arg: 1, scope: !4086, file: !1623, line: 1033, type: !2282)
!4091 = !DILocalVariable(name: "props", arg: 2, scope: !4086, file: !1623, line: 1033, type: !2014)
!4092 = !DILocalVariable(name: "propsSize", arg: 3, scope: !4086, file: !1623, line: 1033, type: !7)
!4093 = !DILocalVariable(name: "alloc", arg: 4, scope: !4086, file: !1623, line: 1033, type: !4005)
!4094 = !DILocalVariable(name: "propNew", scope: !4086, file: !1623, line: 1035, type: !2287)
!4095 = !DILocalVariable(name: "__result__", scope: !4096, file: !1623, line: 1036, type: !20)
!4096 = distinct !DILexicalBlock(scope: !4086, file: !1623, line: 1036, column: 3)
!4097 = !DILocalVariable(name: "__result__", scope: !4098, file: !1623, line: 1037, type: !20)
!4098 = distinct !DILexicalBlock(scope: !4086, file: !1623, line: 1037, column: 3)
!4099 = !DILocation(line: 0, scope: !4086)
!4100 = !DILocation(line: 1035, column: 3, scope: !4086)
!4101 = !DILocation(line: 1035, column: 14, scope: !4086)
!4102 = !DILocation(line: 1036, column: 3, scope: !4096)
!4103 = !DILocation(line: 0, scope: !4096)
!4104 = !DILocation(line: 1036, column: 3, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4096, file: !1623, line: 1036, column: 3)
!4106 = !DILocation(line: 1037, column: 3, scope: !4098)
!4107 = !DILocation(line: 0, scope: !4098)
!4108 = !DILocation(line: 1037, column: 3, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4098, file: !1623, line: 1037, column: 3)
!4110 = !DILocation(line: 1038, column: 13, scope: !4086)
!4111 = !DILocation(line: 1039, column: 3, scope: !4086)
!4112 = !DILocation(line: 1040, column: 1, scope: !4086)
!4113 = distinct !DISubprogram(name: "LzmaDec_AllocateProbs2", scope: !1623, file: !1623, line: 1019, type: !4114, scopeLine: 1020, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !4118)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!1964, !2282, !4116, !4005}
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 32)
!4117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2287)
!4118 = !{!4119, !4120, !4121, !4122}
!4119 = !DILocalVariable(name: "p", arg: 1, scope: !4113, file: !1623, line: 1019, type: !2282)
!4120 = !DILocalVariable(name: "propNew", arg: 2, scope: !4113, file: !1623, line: 1019, type: !4116)
!4121 = !DILocalVariable(name: "alloc", arg: 3, scope: !4113, file: !1623, line: 1019, type: !4005)
!4122 = !DILocalVariable(name: "numProbs", scope: !4113, file: !1623, line: 1021, type: !1632)
!4123 = !DILocation(line: 0, scope: !4113)
!4124 = !DILocation(line: 1021, column: 21, scope: !4113)
!4125 = !DILocation(line: 1022, column: 11, scope: !4126)
!4126 = distinct !DILexicalBlock(scope: !4113, file: !1623, line: 1022, column: 7)
!4127 = !DILocation(line: 1022, column: 8, scope: !4126)
!4128 = !DILocation(line: 1022, column: 17, scope: !4126)
!4129 = !DILocation(line: 1022, column: 35, scope: !4126)
!4130 = !DILocation(line: 1022, column: 29, scope: !4126)
!4131 = !DILocation(line: 1022, column: 7, scope: !4113)
!4132 = !DILocation(line: 1024, column: 5, scope: !4133)
!4133 = distinct !DILexicalBlock(scope: !4126, file: !1623, line: 1023, column: 3)
!4134 = !DILocation(line: 1025, column: 36, scope: !4133)
!4135 = !DILocation(line: 1025, column: 42, scope: !4133)
!4136 = !DILocation(line: 1025, column: 58, scope: !4133)
!4137 = !DILocation(line: 1025, column: 29, scope: !4133)
!4138 = !DILocation(line: 1025, column: 14, scope: !4133)
!4139 = !DILocation(line: 1026, column: 8, scope: !4133)
!4140 = !DILocation(line: 1026, column: 17, scope: !4133)
!4141 = !DILocation(line: 1027, column: 10, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4133, file: !1623, line: 1027, column: 9)
!4143 = !DILocation(line: 1027, column: 9, scope: !4133)
!4144 = !DILocation(line: 1030, column: 3, scope: !4113)
!4145 = !DILocation(line: 1031, column: 1, scope: !4113)
!4146 = distinct !DISubprogram(name: "LzmaDec_Allocate", scope: !1623, file: !1623, line: 1042, type: !4087, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !4147)
!4147 = !{!4148, !4149, !4150, !4151, !4152, !4153, !4154, !4156, !4158, !4160}
!4148 = !DILocalVariable(name: "p", arg: 1, scope: !4146, file: !1623, line: 1042, type: !2282)
!4149 = !DILocalVariable(name: "props", arg: 2, scope: !4146, file: !1623, line: 1042, type: !2014)
!4150 = !DILocalVariable(name: "propsSize", arg: 3, scope: !4146, file: !1623, line: 1042, type: !7)
!4151 = !DILocalVariable(name: "alloc", arg: 4, scope: !4146, file: !1623, line: 1042, type: !4005)
!4152 = !DILocalVariable(name: "propNew", scope: !4146, file: !1623, line: 1044, type: !2287)
!4153 = !DILocalVariable(name: "dicBufSize", scope: !4146, file: !1623, line: 1045, type: !1596)
!4154 = !DILocalVariable(name: "__result__", scope: !4155, file: !1623, line: 1046, type: !20)
!4155 = distinct !DILexicalBlock(scope: !4146, file: !1623, line: 1046, column: 3)
!4156 = !DILocalVariable(name: "__result__", scope: !4157, file: !1623, line: 1047, type: !20)
!4157 = distinct !DILexicalBlock(scope: !4146, file: !1623, line: 1047, column: 3)
!4158 = !DILocalVariable(name: "dictSize", scope: !4159, file: !1623, line: 1050, type: !1632)
!4159 = distinct !DILexicalBlock(scope: !4146, file: !1623, line: 1049, column: 3)
!4160 = !DILocalVariable(name: "mask", scope: !4159, file: !1623, line: 1051, type: !1596)
!4161 = !DILocation(line: 0, scope: !4146)
!4162 = !DILocation(line: 1044, column: 3, scope: !4146)
!4163 = !DILocation(line: 1044, column: 14, scope: !4146)
!4164 = !DILocation(line: 1046, column: 3, scope: !4155)
!4165 = !DILocation(line: 0, scope: !4155)
!4166 = !DILocation(line: 1046, column: 3, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4155, file: !1623, line: 1046, column: 3)
!4168 = !DILocation(line: 1047, column: 3, scope: !4157)
!4169 = !DILocation(line: 0, scope: !4157)
!4170 = !DILocation(line: 1047, column: 3, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4157, file: !1623, line: 1047, column: 3)
!4172 = !DILocation(line: 1050, column: 31, scope: !4159)
!4173 = !DILocation(line: 0, scope: !4159)
!4174 = !DILocation(line: 1052, column: 23, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4159, file: !1623, line: 1052, column: 14)
!4176 = !DILocation(line: 1052, column: 14, scope: !4159)
!4177 = !DILocation(line: 1054, column: 35, scope: !4159)
!4178 = !DILocation(line: 1054, column: 45, scope: !4159)
!4179 = !DILocation(line: 1054, column: 43, scope: !4159)
!4180 = !DILocation(line: 1055, column: 20, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4159, file: !1623, line: 1055, column: 9)
!4182 = !DILocation(line: 1055, column: 9, scope: !4159)
!4183 = !DILocation(line: 1059, column: 11, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4146, file: !1623, line: 1059, column: 7)
!4185 = !DILocation(line: 1059, column: 8, scope: !4184)
!4186 = !DILocation(line: 1059, column: 15, scope: !4184)
!4187 = !DILocation(line: 1059, column: 35, scope: !4184)
!4188 = !DILocation(line: 1059, column: 29, scope: !4184)
!4189 = !DILocation(line: 1059, column: 7, scope: !4146)
!4190 = !DILocation(line: 1061, column: 5, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4184, file: !1623, line: 1060, column: 3)
!4192 = !DILocation(line: 1062, column: 29, scope: !4191)
!4193 = !DILocation(line: 1062, column: 35, scope: !4191)
!4194 = !DILocation(line: 1062, column: 22, scope: !4191)
!4195 = !DILocation(line: 1062, column: 12, scope: !4191)
!4196 = !DILocation(line: 1063, column: 10, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4191, file: !1623, line: 1063, column: 9)
!4198 = !DILocation(line: 1063, column: 9, scope: !4191)
!4199 = !DILocation(line: 1065, column: 7, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4197, file: !1623, line: 1064, column: 5)
!4201 = !DILocation(line: 1066, column: 7, scope: !4200)
!4202 = !DILocation(line: 1069, column: 6, scope: !4146)
!4203 = !DILocation(line: 1069, column: 17, scope: !4146)
!4204 = !DILocation(line: 1070, column: 13, scope: !4146)
!4205 = !DILocation(line: 1071, column: 3, scope: !4146)
!4206 = !DILocation(line: 1072, column: 1, scope: !4146)
!4207 = distinct !DISubprogram(name: "LzmaDecode", scope: !1623, file: !1623, line: 1074, type: !4208, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1622, retainedNodes: !4210)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!1964, !1620, !2354, !2014, !2354, !2014, !7, !2115, !2355, !4005}
!4210 = !{!4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224}
!4211 = !DILocalVariable(name: "dest", arg: 1, scope: !4207, file: !1623, line: 1074, type: !1620)
!4212 = !DILocalVariable(name: "destLen", arg: 2, scope: !4207, file: !1623, line: 1074, type: !2354)
!4213 = !DILocalVariable(name: "src", arg: 3, scope: !4207, file: !1623, line: 1074, type: !2014)
!4214 = !DILocalVariable(name: "srcLen", arg: 4, scope: !4207, file: !1623, line: 1074, type: !2354)
!4215 = !DILocalVariable(name: "propData", arg: 5, scope: !4207, file: !1623, line: 1075, type: !2014)
!4216 = !DILocalVariable(name: "propSize", arg: 6, scope: !4207, file: !1623, line: 1075, type: !7)
!4217 = !DILocalVariable(name: "finishMode", arg: 7, scope: !4207, file: !1623, line: 1075, type: !2115)
!4218 = !DILocalVariable(name: "status", arg: 8, scope: !4207, file: !1623, line: 1076, type: !2355)
!4219 = !DILocalVariable(name: "alloc", arg: 9, scope: !4207, file: !1623, line: 1076, type: !4005)
!4220 = !DILocalVariable(name: "p", scope: !4207, file: !1623, line: 1078, type: !2283)
!4221 = !DILocalVariable(name: "res", scope: !4207, file: !1623, line: 1079, type: !1964)
!4222 = !DILocalVariable(name: "outSize", scope: !4207, file: !1623, line: 1080, type: !1596)
!4223 = !DILocalVariable(name: "inSize", scope: !4207, file: !1623, line: 1080, type: !1596)
!4224 = !DILocalVariable(name: "__result__", scope: !4225, file: !1623, line: 1086, type: !20)
!4225 = distinct !DILexicalBlock(scope: !4207, file: !1623, line: 1086, column: 3)
!4226 = !DILocation(line: 0, scope: !4207)
!4227 = !DILocation(line: 1078, column: 3, scope: !4207)
!4228 = !DILocation(line: 1078, column: 12, scope: !4207)
!4229 = !DILocation(line: 1080, column: 19, scope: !4207)
!4230 = !DILocation(line: 1080, column: 38, scope: !4207)
!4231 = !DILocation(line: 1081, column: 22, scope: !4207)
!4232 = !DILocation(line: 1081, column: 12, scope: !4207)
!4233 = !DILocation(line: 1082, column: 11, scope: !4207)
!4234 = !DILocation(line: 1083, column: 14, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4207, file: !1623, line: 1083, column: 7)
!4236 = !DILocation(line: 1083, column: 7, scope: !4207)
!4237 = !DILocation(line: 1085, column: 3, scope: !4238)
!4238 = distinct !DILexicalBlock(scope: !4207, file: !1623, line: 1085, column: 3)
!4239 = !DILocation(line: 1086, column: 3, scope: !4225)
!4240 = !DILocation(line: 0, scope: !4225)
!4241 = !DILocation(line: 1086, column: 3, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4225, file: !1623, line: 1086, column: 3)
!4243 = !DILocation(line: 1087, column: 9, scope: !4207)
!4244 = !DILocation(line: 1088, column: 5, scope: !4207)
!4245 = !DILocation(line: 1088, column: 16, scope: !4207)
!4246 = !DILocation(line: 1089, column: 3, scope: !4207)
!4247 = !DILocation(line: 1090, column: 11, scope: !4207)
!4248 = !DILocation(line: 1091, column: 9, scope: !4207)
!4249 = !DILocation(line: 1092, column: 16, scope: !4207)
!4250 = !DILocation(line: 1092, column: 12, scope: !4207)
!4251 = !DILocation(line: 1093, column: 11, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4207, file: !1623, line: 1093, column: 7)
!4253 = !DILocation(line: 1093, column: 20, scope: !4252)
!4254 = !DILocation(line: 1093, column: 23, scope: !4252)
!4255 = !DILocation(line: 1093, column: 31, scope: !4252)
!4256 = !DILocation(line: 1093, column: 7, scope: !4207)
!4257 = !DILocation(line: 1095, column: 3, scope: !4207)
!4258 = !DILocation(line: 1096, column: 3, scope: !4207)
!4259 = !DILocation(line: 1097, column: 1, scope: !4207)
!4260 = distinct !DISubprogram(name: "bl_hardware_init", scope: !1637, file: !1637, line: 53, type: !4261, scopeLine: 54, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !4263)
!4261 = !DISubroutineType(types: !4262)
!4262 = !{null}
!4263 = !{!4264, !4271}
!4264 = !DILocalVariable(name: "wdt_config", scope: !4260, file: !1637, line: 120, type: !4265)
!4265 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_wdt_config_t", file: !1640, line: 228, baseType: !4266)
!4266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1640, line: 225, size: 64, elements: !4267)
!4267 = !{!4268, !4270}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4266, file: !1640, line: 226, baseType: !4269, size: 32)
!4269 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_wdt_mode_t", file: !1640, line: 213, baseType: !1639)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "seconds", scope: !4266, file: !1640, line: 227, baseType: !36, size: 32, offset: 32)
!4271 = !DILocalVariable(name: "wdt_ret", scope: !4260, file: !1637, line: 123, type: !4272)
!4272 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_wdt_status_t", file: !1640, line: 198, baseType: !1644)
!4273 = !DILocation(line: 56, column: 5, scope: !4260)
!4274 = !DILocation(line: 59, column: 16, scope: !4260)
!4275 = !DILocation(line: 60, column: 5, scope: !4260)
!4276 = !DILocation(line: 63, column: 5, scope: !4260)
!4277 = !DILocation(line: 64, column: 5, scope: !4260)
!4278 = !DILocation(line: 67, column: 5, scope: !4260)
!4279 = !DILocation(line: 75, column: 5, scope: !4260)
!4280 = !DILocation(line: 79, column: 5, scope: !4260)
!4281 = !DILocation(line: 80, column: 19, scope: !4260)
!4282 = !DILocation(line: 82, column: 2, scope: !4260)
!4283 = !DILocation(line: 83, column: 2, scope: !4260)
!4284 = !DILocation(line: 88, column: 5, scope: !4260)
!4285 = !DILocation(line: 89, column: 5, scope: !4260)
!4286 = !DILocation(line: 92, column: 5, scope: !4260)
!4287 = !DILocation(line: 93, column: 5, scope: !4260)
!4288 = !DILocation(line: 94, column: 44, scope: !4260)
!4289 = !DILocation(line: 94, column: 5, scope: !4260)
!4290 = !DILocation(line: 95, column: 45, scope: !4260)
!4291 = !DILocation(line: 95, column: 5, scope: !4260)
!4292 = !DILocation(line: 96, column: 44, scope: !4260)
!4293 = !DILocation(line: 96, column: 5, scope: !4260)
!4294 = !DILocation(line: 98, column: 5, scope: !4260)
!4295 = !DILocation(line: 99, column: 5, scope: !4260)
!4296 = !DILocation(line: 103, column: 5, scope: !4260)
!4297 = !DILocation(line: 104, column: 5, scope: !4260)
!4298 = !DILocation(line: 107, column: 5, scope: !4260)
!4299 = !DILocation(line: 108, column: 5, scope: !4260)
!4300 = !DILocation(line: 111, column: 5, scope: !4260)
!4301 = !DILocation(line: 112, column: 5, scope: !4260)
!4302 = !DILocation(line: 120, column: 5, scope: !4260)
!4303 = !DILocation(line: 120, column: 22, scope: !4260)
!4304 = !DILocation(line: 121, column: 16, scope: !4260)
!4305 = !DILocation(line: 121, column: 21, scope: !4260)
!4306 = !DILocation(line: 122, column: 16, scope: !4260)
!4307 = !DILocation(line: 122, column: 24, scope: !4260)
!4308 = !DILocation(line: 125, column: 15, scope: !4260)
!4309 = !DILocation(line: 0, scope: !4260)
!4310 = !DILocation(line: 126, column: 17, scope: !4311)
!4311 = distinct !DILexicalBlock(scope: !4260, file: !1637, line: 126, column: 9)
!4312 = !DILocation(line: 126, column: 9, scope: !4260)
!4313 = !DILocation(line: 127, column: 9, scope: !4314)
!4314 = distinct !DILexicalBlock(scope: !4311, file: !1637, line: 126, column: 22)
!4315 = !DILocation(line: 128, column: 5, scope: !4314)
!4316 = !DILocation(line: 129, column: 5, scope: !4260)
!4317 = !DILocation(line: 132, column: 5, scope: !4260)
!4318 = !DILocation(line: 133, column: 5, scope: !4260)
!4319 = !DILocation(line: 134, column: 5, scope: !4260)
!4320 = !DILocation(line: 135, column: 5, scope: !4260)
!4321 = !DILocation(line: 136, column: 5, scope: !4260)
!4322 = !DILocation(line: 137, column: 5, scope: !4260)
!4323 = !DILocation(line: 139, column: 1, scope: !4260)
!4324 = distinct !DISubprogram(name: "bl_set_usb_sleep", scope: !1637, file: !1637, line: 141, type: !4261, scopeLine: 142, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !4325)
!4325 = !{!4326}
!4326 = !DILocalVariable(name: "config", scope: !4324, file: !1637, line: 144, type: !4327)
!4327 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_config_t", file: !130, line: 92, baseType: !4328)
!4328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !130, line: 90, size: 32, elements: !4329)
!4329 = !{!4330}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_frequency", scope: !4328, file: !130, line: 91, baseType: !36, size: 32)
!4331 = !DILocation(line: 144, column: 5, scope: !4324)
!4332 = !DILocation(line: 144, column: 23, scope: !4324)
!4333 = !DILocation(line: 149, column: 5, scope: !4324)
!4334 = !DILocation(line: 150, column: 19, scope: !4324)
!4335 = !DILocation(line: 153, column: 5, scope: !4324)
!4336 = !DILocation(line: 154, column: 12, scope: !4324)
!4337 = !DILocation(line: 154, column: 31, scope: !4324)
!4338 = !DILocation(line: 155, column: 5, scope: !4324)
!4339 = !DILocation(line: 158, column: 5, scope: !4324)
!4340 = !DILocation(line: 161, column: 5, scope: !4324)
!4341 = !DILocation(line: 162, column: 19, scope: !4324)
!4342 = !DILocation(line: 165, column: 1, scope: !4324)
!4343 = distinct !DISubprogram(name: "bl_start_user_code", scope: !1637, file: !1637, line: 168, type: !4261, scopeLine: 169, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !4344)
!4344 = !{!4345}
!4345 = !DILocalVariable(name: "targetAddr", scope: !4343, file: !1637, line: 170, type: !36)
!4346 = !DILocation(line: 170, column: 27, scope: !4343)
!4347 = !DILocation(line: 0, scope: !4343)
!4348 = !DILocation(line: 171, column: 5, scope: !4343)
!4349 = !DILocation(line: 172, column: 5, scope: !4343)
!4350 = !DILocation(line: 173, column: 1, scope: !4343)
!4351 = distinct !DISubprogram(name: "main", scope: !1637, file: !1637, line: 175, type: !4352, scopeLine: 176, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1636, retainedNodes: !4354)
!4352 = !DISubroutineType(types: !4353)
!4353 = !{!20}
!4354 = !{}
!4355 = !DILocation(line: 178, column: 5, scope: !4351)
!4356 = !DILocation(line: 181, column: 5, scope: !4351)
!4357 = !DILocation(line: 185, column: 5, scope: !4351)
!4358 = !DILocation(line: 187, column: 5, scope: !4351)
!4359 = !DILocation(line: 189, column: 5, scope: !4351)
!4360 = distinct !DISubprogram(name: "bl_print_internal", scope: !3, file: !3, line: 99, type: !4361, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4369)
!4361 = !DISubroutineType(types: !4362)
!4362 = !{null, !27, !34, !4363}
!4363 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !4364, line: 14, baseType: !4365)
!4364 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!4365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, baseType: !4366)
!4366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !4367)
!4367 = !{!4368}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !4366, file: !3, baseType: !199, size: 32)
!4369 = !{!4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4381, !4382, !4383, !4384, !4385}
!4370 = !DILocalVariable(name: "level", arg: 1, scope: !4360, file: !3, line: 99, type: !27)
!4371 = !DILocalVariable(name: "fmt", arg: 2, scope: !4360, file: !3, line: 99, type: !34)
!4372 = !DILocalVariable(name: "ap", arg: 3, scope: !4360, file: !3, line: 99, type: !4363)
!4373 = !DILocalVariable(name: "ival", scope: !4360, file: !3, line: 101, type: !16)
!4374 = !DILocalVariable(name: "p", scope: !4360, file: !3, line: 102, type: !34)
!4375 = !DILocalVariable(name: "sval", scope: !4360, file: !3, line: 102, type: !34)
!4376 = !DILocalVariable(name: "bp", scope: !4360, file: !3, line: 103, type: !34)
!4377 = !DILocalVariable(name: "cval", scope: !4360, file: !3, line: 103, type: !35)
!4378 = !DILocalVariable(name: "dval", scope: !4360, file: !3, line: 104, type: !21)
!4379 = !DILocalVariable(name: "fract", scope: !4360, file: !3, line: 105, type: !16)
!4380 = !DILocalVariable(name: "uival", scope: !4360, file: !3, line: 107, type: !36)
!4381 = !DILocalVariable(name: "uival1", scope: !4360, file: !3, line: 107, type: !36)
!4382 = !DILocalVariable(name: "uival2", scope: !4360, file: !3, line: 107, type: !36)
!4383 = !DILocalVariable(name: "bp_old", scope: !4360, file: !3, line: 108, type: !34)
!4384 = !DILocalVariable(name: "i", scope: !4360, file: !3, line: 109, type: !16)
!4385 = !DILocalVariable(name: "j", scope: !4360, file: !3, line: 109, type: !16)
!4386 = !DILocation(line: 0, scope: !4360)
!4387 = !DILocation(line: 103, column: 5, scope: !4360)
!4388 = !DILocation(line: 112, column: 8, scope: !4360)
!4389 = !DILocation(line: 113, column: 9, scope: !4360)
!4390 = !DILocation(line: 115, column: 19, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 115, column: 9)
!4392 = !DILocation(line: 115, column: 17, scope: !4391)
!4393 = !DILocation(line: 115, column: 9, scope: !4360)
!4394 = !DILocation(line: 119, column: 10, scope: !4395)
!4395 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 119, column: 5)
!4396 = !DILocation(line: 0, scope: !4395)
!4397 = !DILocation(line: 119, column: 19, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4395, file: !3, line: 119, column: 5)
!4399 = !DILocation(line: 119, column: 5, scope: !4395)
!4400 = !DILocation(line: 121, column: 16, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4402, file: !3, line: 120, column: 24)
!4402 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 120, column: 13)
!4403 = distinct !DILexicalBlock(scope: !4398, file: !3, line: 119, column: 28)
!4404 = !DILocation(line: 121, column: 19, scope: !4401)
!4405 = !DILocation(line: 122, column: 13, scope: !4401)
!4406 = !DILocation(line: 124, column: 18, scope: !4403)
!4407 = !DILocation(line: 124, column: 17, scope: !4403)
!4408 = !DILocation(line: 124, column: 9, scope: !4403)
!4409 = !DILocation(line: 126, column: 24, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 124, column: 23)
!4411 = !DILocation(line: 127, column: 26, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 127, column: 21)
!4413 = !DILocation(line: 127, column: 21, scope: !4410)
!4414 = !DILocation(line: 128, column: 24, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4412, file: !3, line: 127, column: 31)
!4416 = !DILocation(line: 128, column: 27, scope: !4415)
!4417 = !DILocation(line: 129, column: 28, scope: !4415)
!4418 = !DILocation(line: 130, column: 17, scope: !4415)
!4419 = !DILocation(line: 0, scope: !4410)
!4420 = !DILocation(line: 131, column: 17, scope: !4410)
!4421 = !DILocation(line: 132, column: 17, scope: !4410)
!4422 = !DILocation(line: 135, column: 24, scope: !4410)
!4423 = !DILocation(line: 136, column: 26, scope: !4424)
!4424 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 136, column: 21)
!4425 = !DILocation(line: 136, column: 21, scope: !4410)
!4426 = !DILocation(line: 137, column: 24, scope: !4427)
!4427 = distinct !DILexicalBlock(scope: !4424, file: !3, line: 136, column: 31)
!4428 = !DILocation(line: 137, column: 27, scope: !4427)
!4429 = !DILocation(line: 138, column: 28, scope: !4427)
!4430 = !DILocation(line: 139, column: 17, scope: !4427)
!4431 = !DILocation(line: 140, column: 20, scope: !4410)
!4432 = !DILocation(line: 140, column: 23, scope: !4410)
!4433 = !DILocation(line: 141, column: 17, scope: !4410)
!4434 = !DILocation(line: 142, column: 17, scope: !4410)
!4435 = !DILocation(line: 145, column: 24, scope: !4410)
!4436 = !DILocation(line: 146, column: 26, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 146, column: 21)
!4438 = !DILocation(line: 146, column: 21, scope: !4410)
!4439 = !DILocation(line: 147, column: 24, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4437, file: !3, line: 146, column: 31)
!4441 = !DILocation(line: 147, column: 27, scope: !4440)
!4442 = !DILocation(line: 148, column: 28, scope: !4440)
!4443 = !DILocation(line: 149, column: 17, scope: !4440)
!4444 = !DILocation(line: 150, column: 20, scope: !4410)
!4445 = !DILocation(line: 150, column: 23, scope: !4410)
!4446 = !DILocation(line: 151, column: 20, scope: !4410)
!4447 = !DILocation(line: 151, column: 23, scope: !4410)
!4448 = !DILocation(line: 152, column: 17, scope: !4410)
!4449 = !DILocation(line: 153, column: 17, scope: !4410)
!4450 = !DILocation(line: 156, column: 24, scope: !4410)
!4451 = !DILocation(line: 157, column: 20, scope: !4410)
!4452 = !DILocation(line: 157, column: 22, scope: !4410)
!4453 = !DILocation(line: 158, column: 20, scope: !4410)
!4454 = !DILocation(line: 158, column: 22, scope: !4410)
!4455 = !DILocation(line: 159, column: 26, scope: !4410)
!4456 = !DILocation(line: 160, column: 32, scope: !4410)
!4457 = !DILocation(line: 161, column: 32, scope: !4410)
!4458 = !DILocation(line: 162, column: 17, scope: !4410)
!4459 = !DILocation(line: 163, column: 35, scope: !4410)
!4460 = !DILocation(line: 163, column: 21, scope: !4410)
!4461 = !DILocation(line: 163, column: 40, scope: !4410)
!4462 = !DILocation(line: 163, column: 38, scope: !4410)
!4463 = !DILocation(line: 164, column: 23, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 164, column: 21)
!4465 = !DILocation(line: 164, column: 21, scope: !4410)
!4466 = !DILocation(line: 165, column: 35, scope: !4467)
!4467 = distinct !DILexicalBlock(scope: !4468, file: !3, line: 165, column: 21)
!4468 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 165, column: 21)
!4469 = distinct !DILexicalBlock(scope: !4464, file: !3, line: 164, column: 28)
!4470 = !DILocation(line: 165, column: 21, scope: !4468)
!4471 = !DILocation(line: 168, column: 35, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4473, file: !3, line: 168, column: 21)
!4473 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 168, column: 21)
!4474 = !DILocation(line: 168, column: 21, scope: !4473)
!4475 = !DILocation(line: 166, column: 56, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4467, file: !3, line: 165, column: 51)
!4477 = !DILocation(line: 166, column: 37, scope: !4476)
!4478 = !DILocation(line: 166, column: 25, scope: !4476)
!4479 = !DILocation(line: 166, column: 35, scope: !4476)
!4480 = !DILocation(line: 165, column: 47, scope: !4467)
!4481 = distinct !{!4481, !4470, !4482}
!4482 = !DILocation(line: 167, column: 21, scope: !4468)
!4483 = !DILocation(line: 169, column: 25, scope: !4472)
!4484 = !DILocation(line: 169, column: 35, scope: !4472)
!4485 = !DILocation(line: 168, column: 48, scope: !4472)
!4486 = distinct !{!4486, !4474, !4487}
!4487 = !DILocation(line: 169, column: 37, scope: !4473)
!4488 = !DILocation(line: 171, column: 29, scope: !4410)
!4489 = !DILocation(line: 171, column: 20, scope: !4410)
!4490 = !DILocation(line: 173, column: 17, scope: !4410)
!4491 = !DILocation(line: 174, column: 35, scope: !4410)
!4492 = !DILocation(line: 174, column: 21, scope: !4410)
!4493 = !DILocation(line: 174, column: 40, scope: !4410)
!4494 = !DILocation(line: 174, column: 38, scope: !4410)
!4495 = !DILocation(line: 175, column: 23, scope: !4496)
!4496 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 175, column: 21)
!4497 = !DILocation(line: 175, column: 21, scope: !4410)
!4498 = !DILocation(line: 176, column: 35, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4500, file: !3, line: 176, column: 21)
!4500 = distinct !DILexicalBlock(scope: !4501, file: !3, line: 176, column: 21)
!4501 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 175, column: 28)
!4502 = !DILocation(line: 176, column: 21, scope: !4500)
!4503 = !DILocation(line: 179, column: 35, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4505, file: !3, line: 179, column: 21)
!4505 = distinct !DILexicalBlock(scope: !4501, file: !3, line: 179, column: 21)
!4506 = !DILocation(line: 179, column: 21, scope: !4505)
!4507 = !DILocation(line: 177, column: 56, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4499, file: !3, line: 176, column: 51)
!4509 = !DILocation(line: 177, column: 37, scope: !4508)
!4510 = !DILocation(line: 177, column: 25, scope: !4508)
!4511 = !DILocation(line: 177, column: 35, scope: !4508)
!4512 = !DILocation(line: 176, column: 47, scope: !4499)
!4513 = distinct !{!4513, !4502, !4514}
!4514 = !DILocation(line: 178, column: 21, scope: !4500)
!4515 = !DILocation(line: 180, column: 25, scope: !4504)
!4516 = !DILocation(line: 180, column: 35, scope: !4504)
!4517 = !DILocation(line: 179, column: 48, scope: !4504)
!4518 = distinct !{!4518, !4506, !4519}
!4519 = !DILocation(line: 180, column: 37, scope: !4505)
!4520 = !DILocation(line: 182, column: 29, scope: !4410)
!4521 = !DILocation(line: 182, column: 20, scope: !4410)
!4522 = !DILocation(line: 183, column: 17, scope: !4410)
!4523 = !DILocation(line: 186, column: 24, scope: !4410)
!4524 = !DILocation(line: 187, column: 20, scope: !4410)
!4525 = !DILocation(line: 187, column: 23, scope: !4410)
!4526 = !DILocation(line: 188, column: 20, scope: !4410)
!4527 = !DILocation(line: 188, column: 23, scope: !4410)
!4528 = !DILocation(line: 189, column: 17, scope: !4410)
!4529 = !DILocation(line: 190, column: 17, scope: !4410)
!4530 = !DILocation(line: 193, column: 24, scope: !4410)
!4531 = !DILocation(line: 194, column: 20, scope: !4410)
!4532 = !DILocation(line: 194, column: 23, scope: !4410)
!4533 = !DILocation(line: 195, column: 17, scope: !4410)
!4534 = !DILocation(line: 198, column: 24, scope: !4410)
!4535 = !DILocation(line: 199, column: 26, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 199, column: 21)
!4537 = !DILocation(line: 199, column: 21, scope: !4410)
!4538 = !DILocation(line: 200, column: 24, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4536, file: !3, line: 199, column: 31)
!4540 = !DILocation(line: 200, column: 27, scope: !4539)
!4541 = !DILocation(line: 203, column: 21, scope: !4410)
!4542 = !DILocation(line: 203, column: 26, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 203, column: 21)
!4544 = !DILocation(line: 204, column: 21, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 203, column: 34)
!4546 = !DILocation(line: 205, column: 17, scope: !4545)
!4547 = !DILocation(line: 206, column: 24, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 205, column: 24)
!4549 = !DILocation(line: 206, column: 27, scope: !4548)
!4550 = !DILocation(line: 208, column: 20, scope: !4410)
!4551 = !DILocation(line: 208, column: 23, scope: !4410)
!4552 = !DILocation(line: 210, column: 17, scope: !4410)
!4553 = !DILocation(line: 211, column: 17, scope: !4410)
!4554 = !DILocation(line: 214, column: 29, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4410, file: !3, line: 214, column: 17)
!4556 = !DILocation(line: 214, column: 50, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 214, column: 17)
!4558 = !DILocation(line: 214, column: 17, scope: !4555)
!4559 = !DILocation(line: 215, column: 24, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4557, file: !3, line: 214, column: 67)
!4561 = !DILocation(line: 215, column: 27, scope: !4560)
!4562 = !DILocation(line: 214, column: 62, scope: !4557)
!4563 = distinct !{!4563, !4558, !4564}
!4564 = !DILocation(line: 216, column: 17, scope: !4555)
!4565 = !DILocation(line: 119, column: 24, scope: !4398)
!4566 = !DILocation(line: 119, column: 5, scope: !4398)
!4567 = distinct !{!4567, !4399, !4568}
!4568 = !DILocation(line: 219, column: 5, scope: !4395)
!4569 = !DILocation(line: 221, column: 6, scope: !4360)
!4570 = !DILocation(line: 221, column: 9, scope: !4360)
!4571 = !DILocation(line: 223, column: 20, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4573, file: !3, line: 223, column: 5)
!4573 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 223, column: 5)
!4574 = !DILocation(line: 223, column: 5, scope: !4573)
!4575 = !DILocation(line: 223, column: 27, scope: !4572)
!4576 = !DILocation(line: 224, column: 9, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4572, file: !3, line: 223, column: 31)
!4578 = distinct !{!4578, !4574, !4579}
!4579 = !DILocation(line: 225, column: 5, scope: !4573)
!4580 = !DILocation(line: 226, column: 1, scope: !4360)
!4581 = !DILocation(line: 0, scope: !30)
!4582 = !DILocation(line: 60, column: 17, scope: !30)
!4583 = !DILocation(line: 61, column: 11, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !30, file: !3, line: 61, column: 9)
!4585 = !DILocation(line: 61, column: 9, scope: !30)
!4586 = !DILocation(line: 67, column: 5, scope: !30)
!4587 = !DILocation(line: 62, column: 10, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 61, column: 17)
!4589 = !DILocation(line: 62, column: 19, scope: !4588)
!4590 = !DILocation(line: 63, column: 9, scope: !4588)
!4591 = !DILocation(line: 64, column: 9, scope: !4588)
!4592 = !DILocation(line: 75, column: 5, scope: !30)
!4593 = !DILocation(line: 76, column: 10, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !30, file: !3, line: 75, column: 16)
!4595 = !DILocation(line: 68, column: 13, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !30, file: !3, line: 67, column: 15)
!4597 = !DILocation(line: 69, column: 17, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4596, file: !3, line: 69, column: 13)
!4599 = !DILocation(line: 69, column: 13, scope: !4596)
!4600 = !DILocation(line: 70, column: 20, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 69, column: 23)
!4602 = !DILocation(line: 70, column: 14, scope: !4601)
!4603 = !DILocation(line: 70, column: 18, scope: !4601)
!4604 = !DILocation(line: 71, column: 9, scope: !4601)
!4605 = !DILocation(line: 71, column: 20, scope: !4598)
!4606 = !DILocation(line: 72, column: 33, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4608, file: !3, line: 71, column: 32)
!4608 = distinct !DILexicalBlock(scope: !4598, file: !3, line: 71, column: 20)
!4609 = !DILocation(line: 72, column: 20, scope: !4607)
!4610 = !DILocation(line: 72, column: 14, scope: !4607)
!4611 = !DILocation(line: 72, column: 18, scope: !4607)
!4612 = !DILocation(line: 73, column: 9, scope: !4607)
!4613 = distinct !{!4613, !4586, !4614}
!4614 = !DILocation(line: 74, column: 5, scope: !30)
!4615 = !DILocation(line: 76, column: 23, scope: !4594)
!4616 = !DILocation(line: 76, column: 19, scope: !4594)
!4617 = !DILocation(line: 77, column: 9, scope: !4594)
!4618 = !DILocation(line: 75, column: 12, scope: !30)
!4619 = distinct !{!4619, !4592, !4620}
!4620 = !DILocation(line: 78, column: 5, scope: !30)
!4621 = !DILocation(line: 79, column: 1, scope: !30)
!4622 = !DILocation(line: 0, scope: !49)
!4623 = !DILocation(line: 87, column: 17, scope: !49)
!4624 = !DILocation(line: 89, column: 5, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !49, file: !3, line: 89, column: 5)
!4626 = !DILocation(line: 94, column: 10, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !49, file: !3, line: 93, column: 16)
!4628 = !DILocation(line: 93, column: 5, scope: !49)
!4629 = !DILocation(line: 90, column: 13, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 89, column: 42)
!4631 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 89, column: 5)
!4632 = !DILocation(line: 91, column: 16, scope: !4630)
!4633 = !DILocation(line: 91, column: 10, scope: !4630)
!4634 = !DILocation(line: 91, column: 14, scope: !4630)
!4635 = !DILocation(line: 89, column: 38, scope: !4631)
!4636 = !DILocation(line: 89, column: 20, scope: !4631)
!4637 = distinct !{!4637, !4624, !4638}
!4638 = !DILocation(line: 92, column: 5, scope: !4625)
!4639 = !DILocation(line: 94, column: 23, scope: !4627)
!4640 = !DILocation(line: 94, column: 19, scope: !4627)
!4641 = !DILocation(line: 95, column: 9, scope: !4627)
!4642 = !DILocation(line: 93, column: 12, scope: !49)
!4643 = distinct !{!4643, !4628, !4644}
!4644 = !DILocation(line: 96, column: 5, scope: !49)
!4645 = !DILocation(line: 97, column: 1, scope: !49)
!4646 = distinct !DISubprogram(name: "bl_print", scope: !3, file: !3, line: 228, type: !4647, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4649)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{null, !27, !34, null}
!4649 = !{!4650, !4651, !4652}
!4650 = !DILocalVariable(name: "level", arg: 1, scope: !4646, file: !3, line: 228, type: !27)
!4651 = !DILocalVariable(name: "fmt", arg: 2, scope: !4646, file: !3, line: 228, type: !34)
!4652 = !DILocalVariable(name: "ap", scope: !4646, file: !3, line: 230, type: !4363)
!4653 = !DILocation(line: 0, scope: !4646)
!4654 = !DILocation(line: 230, column: 5, scope: !4646)
!4655 = !DILocation(line: 230, column: 17, scope: !4646)
!4656 = !DILocation(line: 231, column: 5, scope: !4646)
!4657 = !DILocation(line: 233, column: 5, scope: !4646)
!4658 = !DILocation(line: 235, column: 5, scope: !4646)
!4659 = !DILocation(line: 236, column: 1, scope: !4646)
!4660 = distinct !DISubprogram(name: "bl_set_debug_level", scope: !3, file: !3, line: 238, type: !4661, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4663)
!4661 = !DISubroutineType(types: !4662)
!4662 = !{null, !27}
!4663 = !{!4664}
!4664 = !DILocalVariable(name: "level", arg: 1, scope: !4660, file: !3, line: 238, type: !27)
!4665 = !DILocation(line: 0, scope: !4660)
!4666 = !DILocation(line: 240, column: 17, scope: !4660)
!4667 = !DILocation(line: 241, column: 1, scope: !4660)
!4668 = distinct !DISubprogram(name: "bl_uart_put_byte", scope: !1684, file: !1684, line: 61, type: !4669, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !4671)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{null, !185}
!4671 = !{!4672, !4673}
!4672 = !DILocalVariable(name: "data", arg: 1, scope: !4668, file: !1684, line: 61, type: !185)
!4673 = !DILocalVariable(name: "lsr", scope: !4668, file: !1684, line: 63, type: !112)
!4674 = !DILocation(line: 0, scope: !4668)
!4675 = !DILocation(line: 63, column: 5, scope: !4668)
!4676 = !DILocation(line: 63, column: 23, scope: !4668)
!4677 = !DILocation(line: 65, column: 5, scope: !4668)
!4678 = !DILocation(line: 66, column: 15, scope: !4679)
!4679 = distinct !DILexicalBlock(scope: !4668, file: !1684, line: 65, column: 15)
!4680 = !DILocation(line: 66, column: 13, scope: !4679)
!4681 = !DILocation(line: 67, column: 14, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4679, file: !1684, line: 67, column: 14)
!4683 = !DILocation(line: 67, column: 18, scope: !4682)
!4684 = !DILocation(line: 67, column: 14, scope: !4679)
!4685 = distinct !{!4685, !4677, !4686}
!4686 = !DILocation(line: 71, column: 5, scope: !4668)
!4687 = !DILocation(line: 68, column: 45, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4682, file: !1684, line: 67, column: 39)
!4689 = !DILocation(line: 68, column: 13, scope: !4688)
!4690 = !DILocation(line: 73, column: 1, scope: !4668)
!4691 = distinct !DISubprogram(name: "bl_uart_read_reg", scope: !1684, file: !1684, line: 51, type: !4692, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !4694)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!113, !36}
!4694 = !{!4695, !4696}
!4695 = !DILocalVariable(name: "addr", arg: 1, scope: !4691, file: !1684, line: 51, type: !36)
!4696 = !DILocalVariable(name: "tmp", scope: !4691, file: !1684, line: 53, type: !785)
!4697 = !DILocation(line: 0, scope: !4691)
!4698 = !DILocation(line: 53, column: 5, scope: !4691)
!4699 = !DILocation(line: 53, column: 22, scope: !4691)
!4700 = !DILocation(line: 54, column: 12, scope: !4691)
!4701 = !DILocation(line: 54, column: 11, scope: !4691)
!4702 = !DILocation(line: 54, column: 9, scope: !4691)
!4703 = !DILocation(line: 55, column: 22, scope: !4691)
!4704 = !DILocation(line: 55, column: 12, scope: !4691)
!4705 = !DILocation(line: 56, column: 1, scope: !4691)
!4706 = !DILocation(line: 55, column: 5, scope: !4691)
!4707 = distinct !DISubprogram(name: "bl_uart_write_reg", scope: !1684, file: !1684, line: 43, type: !4708, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !4710)
!4708 = !DISubroutineType(types: !4709)
!4709 = !{null, !36, !113}
!4710 = !{!4711, !4712}
!4711 = !DILocalVariable(name: "addr", arg: 1, scope: !4707, file: !1684, line: 43, type: !36)
!4712 = !DILocalVariable(name: "data", arg: 2, scope: !4707, file: !1684, line: 43, type: !113)
!4713 = !DILocation(line: 0, scope: !4707)
!4714 = !DILocation(line: 45, column: 34, scope: !4707)
!4715 = !DILocation(line: 45, column: 6, scope: !4707)
!4716 = !DILocation(line: 45, column: 32, scope: !4707)
!4717 = !DILocation(line: 46, column: 1, scope: !4707)
!4718 = distinct !DISubprogram(name: "bl_uart_check_send_end", scope: !1684, file: !1684, line: 78, type: !4261, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !4719)
!4719 = !{!4720, !4721}
!4720 = !DILocalVariable(name: "lsr", scope: !4718, file: !1684, line: 80, type: !113)
!4721 = !DILocalVariable(name: "timeout", scope: !4718, file: !1684, line: 81, type: !113)
!4722 = !DILocation(line: 0, scope: !4718)
!4723 = !DILocation(line: 83, column: 5, scope: !4718)
!4724 = !DILocation(line: 83, column: 19, scope: !4718)
!4725 = !DILocation(line: 84, column: 15, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4718, file: !1684, line: 83, column: 23)
!4727 = !DILocation(line: 85, column: 18, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4726, file: !1684, line: 85, column: 14)
!4729 = !DILocation(line: 85, column: 14, scope: !4726)
!4730 = distinct !{!4730, !4723, !4731}
!4731 = !DILocation(line: 88, column: 5, scope: !4718)
!4732 = !DILocation(line: 89, column: 1, scope: !4718)
!4733 = distinct !DISubprogram(name: "bl_uart_init", scope: !1684, file: !1684, line: 91, type: !4734, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1683, retainedNodes: !4736)
!4734 = !DISubroutineType(types: !4735)
!4735 = !{null, !36}
!4736 = !{!4737, !4738, !4739, !4740, !4741, !4742, !4743, !4744, !4745, !4746}
!4737 = !DILocalVariable(name: "uart_clk", arg: 1, scope: !4733, file: !1684, line: 91, type: !36)
!4738 = !DILocalVariable(name: "integer", scope: !4733, file: !1684, line: 93, type: !36)
!4739 = !DILocalVariable(name: "remainder", scope: !4733, file: !1684, line: 93, type: !36)
!4740 = !DILocalVariable(name: "fraction", scope: !4733, file: !1684, line: 93, type: !36)
!4741 = !DILocalVariable(name: "dll_dlm", scope: !4733, file: !1684, line: 94, type: !36)
!4742 = !DILocalVariable(name: "sample_count", scope: !4733, file: !1684, line: 94, type: !36)
!4743 = !DILocalVariable(name: "sample_point", scope: !4733, file: !1684, line: 94, type: !36)
!4744 = !DILocalVariable(name: "temp_lcr", scope: !4733, file: !1684, line: 94, type: !36)
!4745 = !DILocalVariable(name: "fraction_L_mapping", scope: !4733, file: !1684, line: 95, type: !971)
!4746 = !DILocalVariable(name: "fraction_M_mapping", scope: !4733, file: !1684, line: 96, type: !971)
!4747 = !DILocation(line: 0, scope: !4733)
!4748 = !DILocation(line: 95, column: 14, scope: !4733)
!4749 = !DILocation(line: 96, column: 5, scope: !4733)
!4750 = !DILocation(line: 96, column: 14, scope: !4733)
!4751 = !DILocation(line: 99, column: 38, scope: !4733)
!4752 = !DILocation(line: 100, column: 38, scope: !4733)
!4753 = !DILocation(line: 103, column: 38, scope: !4733)
!4754 = !DILocation(line: 105, column: 24, scope: !4733)
!4755 = !DILocation(line: 106, column: 28, scope: !4733)
!4756 = !DILocation(line: 106, column: 34, scope: !4733)
!4757 = !DILocation(line: 106, column: 62, scope: !4733)
!4758 = !DILocation(line: 107, column: 20, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4733, file: !1684, line: 107, column: 9)
!4760 = !DILocation(line: 107, column: 26, scope: !4759)
!4761 = !DILocation(line: 113, column: 5, scope: !4733)
!4762 = !DILocation(line: 113, column: 25, scope: !4733)
!4763 = !DILocation(line: 114, column: 16, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4733, file: !1684, line: 113, column: 32)
!4765 = distinct !{!4765, !4761, !4766}
!4766 = !DILocation(line: 116, column: 5, scope: !4733)
!4767 = !DILocation(line: 118, column: 33, scope: !4733)
!4768 = !DILocation(line: 118, column: 65, scope: !4733)
!4769 = !DILocation(line: 121, column: 34, scope: !4733)
!4770 = !DILocation(line: 121, column: 39, scope: !4733)
!4771 = !DILocation(line: 123, column: 5, scope: !4733)
!4772 = !DILocation(line: 125, column: 16, scope: !4733)
!4773 = !DILocation(line: 126, column: 46, scope: !4733)
!4774 = !DILocation(line: 126, column: 5, scope: !4733)
!4775 = !DILocation(line: 127, column: 37, scope: !4733)
!4776 = !DILocation(line: 127, column: 5, scope: !4733)
!4777 = !DILocation(line: 128, column: 37, scope: !4733)
!4778 = !DILocation(line: 128, column: 5, scope: !4733)
!4779 = !DILocation(line: 129, column: 5, scope: !4733)
!4780 = !DILocation(line: 131, column: 46, scope: !4733)
!4781 = !DILocation(line: 131, column: 5, scope: !4733)
!4782 = !DILocation(line: 132, column: 46, scope: !4733)
!4783 = !DILocation(line: 132, column: 5, scope: !4733)
!4784 = !DILocation(line: 134, column: 43, scope: !4733)
!4785 = !DILocation(line: 134, column: 5, scope: !4733)
!4786 = !DILocation(line: 135, column: 43, scope: !4733)
!4787 = !DILocation(line: 135, column: 5, scope: !4733)
!4788 = !DILocation(line: 137, column: 5, scope: !4733)
!4789 = !DILocation(line: 138, column: 5, scope: !4733)
!4790 = !DILocation(line: 139, column: 5, scope: !4733)
!4791 = !DILocation(line: 140, column: 1, scope: !4733)
!4792 = distinct !DISubprogram(name: "bl_clock_freq_monitor", scope: !1687, file: !1687, line: 50, type: !4793, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1686, retainedNodes: !4795)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{!36, !113, !113, !94}
!4795 = !{!4796, !4797, !4798, !4799, !4800, !4801, !4802}
!4796 = !DILocalVariable(name: "tcksel", arg: 1, scope: !4792, file: !1687, line: 50, type: !113)
!4797 = !DILocalVariable(name: "fcksel", arg: 2, scope: !4792, file: !1687, line: 50, type: !113)
!4798 = !DILocalVariable(name: "over78m", arg: 3, scope: !4792, file: !1687, line: 50, type: !94)
!4799 = !DILocalVariable(name: "target_freq", scope: !4792, file: !1687, line: 52, type: !36)
!4800 = !DILocalVariable(name: "tmp", scope: !4792, file: !1687, line: 52, type: !36)
!4801 = !DILocalVariable(name: "bak_gpio30_mode3", scope: !4792, file: !1687, line: 53, type: !36)
!4802 = !DILocalVariable(name: "bak_gpio30_dir0", scope: !4792, file: !1687, line: 53, type: !36)
!4803 = !DILocation(line: 0, scope: !4792)
!4804 = !DILocation(line: 56, column: 53, scope: !4792)
!4805 = !DILocation(line: 56, column: 43, scope: !4792)
!4806 = !DILocation(line: 56, column: 27, scope: !4792)
!4807 = !DILocation(line: 58, column: 20, scope: !4792)
!4808 = !DILocation(line: 57, column: 5, scope: !4792)
!4809 = !DILocation(line: 61, column: 27, scope: !4792)
!4810 = !DILocation(line: 62, column: 5, scope: !4792)
!4811 = !DILocation(line: 63, column: 27, scope: !4792)
!4812 = !DILocation(line: 66, column: 9, scope: !4792)
!4813 = !DILocation(line: 67, column: 31, scope: !4814)
!4814 = distinct !DILexicalBlock(scope: !4815, file: !1687, line: 66, column: 26)
!4815 = distinct !DILexicalBlock(scope: !4792, file: !1687, line: 66, column: 9)
!4816 = !DILocation(line: 69, column: 5, scope: !4814)
!4817 = !DILocation(line: 0, scope: !4815)
!4818 = !DILocation(line: 72, column: 29, scope: !4792)
!4819 = !DILocation(line: 74, column: 25, scope: !4792)
!4820 = !DILocation(line: 75, column: 24, scope: !4792)
!4821 = !DILocation(line: 77, column: 19, scope: !4792)
!4822 = !DILocation(line: 78, column: 24, scope: !4792)
!4823 = !DILocation(line: 79, column: 24, scope: !4792)
!4824 = !DILocation(line: 80, column: 23, scope: !4792)
!4825 = !DILocation(line: 82, column: 11, scope: !4792)
!4826 = !DILocation(line: 84, column: 5, scope: !4792)
!4827 = distinct !{!4827, !4826, !4828}
!4828 = !DILocation(line: 86, column: 5, scope: !4792)
!4829 = !DILocation(line: 88, column: 5, scope: !4792)
!4830 = !DILocation(line: 91, column: 25, scope: !4792)
!4831 = !DILocation(line: 91, column: 23, scope: !4792)
!4832 = !DILocation(line: 91, column: 48, scope: !4792)
!4833 = !DILocation(line: 92, column: 9, scope: !4792)
!4834 = !DILocation(line: 75, column: 38, scope: !4792)
!4835 = !DILocation(line: 74, column: 40, scope: !4792)
!4836 = !DILocation(line: 96, column: 10, scope: !4792)
!4837 = !DILocation(line: 96, column: 33, scope: !4792)
!4838 = !DILocation(line: 96, column: 56, scope: !4792)
!4839 = !DILocation(line: 95, column: 5, scope: !4792)
!4840 = !DILocation(line: 98, column: 24, scope: !4792)
!4841 = !DILocation(line: 99, column: 23, scope: !4792)
!4842 = !DILocation(line: 100, column: 24, scope: !4792)
!4843 = !DILocation(line: 101, column: 23, scope: !4792)
!4844 = !DILocation(line: 103, column: 5, scope: !4792)
!4845 = distinct !DISubprogram(name: "clock_set_pll_dcm_init", scope: !1687, file: !1687, line: 107, type: !4261, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1686, retainedNodes: !4846)
!4846 = !{!4847, !4848, !4849, !4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4862}
!4847 = !DILocalVariable(name: "tmp", scope: !4845, file: !1687, line: 110, type: !82)
!4848 = !DILocalVariable(name: "tmp_cali", scope: !4845, file: !1687, line: 110, type: !82)
!4849 = !DILocalVariable(name: "tmp_ft", scope: !4845, file: !1687, line: 110, type: !82)
!4850 = !DILocalVariable(name: "while_count", scope: !4845, file: !1687, line: 112, type: !36)
!4851 = !DILocalVariable(name: "k_init", scope: !4845, file: !1687, line: 112, type: !36)
!4852 = !DILocalVariable(name: "k_before", scope: !4845, file: !1687, line: 112, type: !36)
!4853 = !DILocalVariable(name: "k_after", scope: !4845, file: !1687, line: 112, type: !36)
!4854 = !DILocalVariable(name: "upper_bound", scope: !4845, file: !1687, line: 114, type: !36)
!4855 = !DILocalVariable(name: "lower_bound", scope: !4845, file: !1687, line: 114, type: !36)
!4856 = !DILocalVariable(name: "magic_before", scope: !4845, file: !1687, line: 116, type: !36)
!4857 = !DILocalVariable(name: "magic_after", scope: !4845, file: !1687, line: 116, type: !36)
!4858 = !DILocalVariable(name: "desired_fqdata", scope: !4845, file: !1687, line: 116, type: !36)
!4859 = !DILocalVariable(name: "start", scope: !4845, file: !1687, line: 117, type: !36)
!4860 = !DILocalVariable(name: "end", scope: !4845, file: !1687, line: 117, type: !36)
!4861 = !DILocalVariable(name: "sum", scope: !4845, file: !1687, line: 117, type: !36)
!4862 = !DILocalVariable(name: "test_freq", scope: !4845, file: !1687, line: 119, type: !36)
!4863 = !DILocation(line: 110, column: 5, scope: !4845)
!4864 = !DILocation(line: 110, column: 23, scope: !4845)
!4865 = !DILocation(line: 110, column: 32, scope: !4845)
!4866 = !DILocation(line: 110, column: 46, scope: !4845)
!4867 = !DILocation(line: 0, scope: !4845)
!4868 = !DILocation(line: 117, column: 5, scope: !4845)
!4869 = !DILocation(line: 117, column: 14, scope: !4845)
!4870 = !DILocation(line: 117, column: 25, scope: !4845)
!4871 = !DILocation(line: 121, column: 24, scope: !4845)
!4872 = !DILocation(line: 132, column: 21, scope: !4845)
!4873 = !DILocation(line: 135, column: 21, scope: !4845)
!4874 = !DILocation(line: 142, column: 21, scope: !4845)
!4875 = !DILocation(line: 145, column: 21, scope: !4845)
!4876 = !DILocation(line: 151, column: 21, scope: !4845)
!4877 = !DILocation(line: 156, column: 5, scope: !4845)
!4878 = !DILocation(line: 159, column: 20, scope: !4845)
!4879 = !DILocation(line: 162, column: 20, scope: !4845)
!4880 = !DILocation(line: 166, column: 5, scope: !4845)
!4881 = !DILocation(line: 169, column: 17, scope: !4845)
!4882 = !{i32 0, i32 1661}
!4883 = !DILocation(line: 170, column: 5, scope: !4845)
!4884 = !DILocation(line: 172, column: 5, scope: !4845)
!4885 = !DILocation(line: 173, column: 9, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4845, file: !1687, line: 172, column: 14)
!4887 = !DILocation(line: 174, column: 31, scope: !4886)
!4888 = !DILocation(line: 175, column: 31, scope: !4886)
!4889 = !DILocation(line: 176, column: 31, scope: !4886)
!4890 = !DILocation(line: 177, column: 31, scope: !4886)
!4891 = !DILocation(line: 178, column: 15, scope: !4886)
!4892 = !DILocation(line: 178, column: 13, scope: !4886)
!4893 = !DILocation(line: 179, column: 15, scope: !4886)
!4894 = !DILocation(line: 179, column: 13, scope: !4886)
!4895 = !DILocation(line: 180, column: 16, scope: !4886)
!4896 = !DILocation(line: 180, column: 20, scope: !4886)
!4897 = !DILocation(line: 180, column: 9, scope: !4886)
!4898 = !DILocation(line: 181, column: 19, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4886, file: !1687, line: 180, column: 35)
!4900 = !DILocation(line: 181, column: 17, scope: !4899)
!4901 = distinct !{!4901, !4897, !4902}
!4902 = !DILocation(line: 182, column: 9, scope: !4886)
!4903 = !DILocation(line: 183, column: 15, scope: !4886)
!4904 = !DILocation(line: 183, column: 13, scope: !4886)
!4905 = !DILocation(line: 186, column: 19, scope: !4886)
!4906 = !DILocation(line: 186, column: 28, scope: !4886)
!4907 = !DILocation(line: 186, column: 36, scope: !4886)
!4908 = !DILocation(line: 188, column: 25, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4886, file: !1687, line: 188, column: 13)
!4910 = !DILocation(line: 188, column: 13, scope: !4886)
!4911 = !DILocation(line: 191, column: 23, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4886, file: !1687, line: 191, column: 13)
!4913 = !DILocation(line: 191, column: 39, scope: !4912)
!4914 = !DILocation(line: 191, column: 51, scope: !4912)
!4915 = !DILocation(line: 191, column: 68, scope: !4912)
!4916 = !DILocation(line: 191, column: 84, scope: !4912)
!4917 = !DILocation(line: 191, column: 13, scope: !4886)
!4918 = !DILocation(line: 192, column: 13, scope: !4919)
!4919 = distinct !DILexicalBlock(scope: !4912, file: !1687, line: 191, column: 92)
!4920 = !DILocation(line: 193, column: 25, scope: !4919)
!4921 = !DILocation(line: 193, column: 23, scope: !4919)
!4922 = !DILocation(line: 193, column: 31, scope: !4919)
!4923 = !DILocation(line: 193, column: 29, scope: !4919)
!4924 = !DILocation(line: 194, column: 13, scope: !4919)
!4925 = !DILocation(line: 195, column: 29, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4919, file: !1687, line: 195, column: 17)
!4927 = !DILocation(line: 195, column: 17, scope: !4919)
!4928 = !DILocation(line: 196, column: 17, scope: !4926)
!4929 = !DILocation(line: 200, column: 30, scope: !4930)
!4930 = distinct !DILexicalBlock(scope: !4912, file: !1687, line: 200, column: 20)
!4931 = !DILocation(line: 200, column: 45, scope: !4930)
!4932 = !DILocation(line: 201, column: 57, scope: !4930)
!4933 = !DILocation(line: 201, column: 64, scope: !4930)
!4934 = !DILocation(line: 201, column: 62, scope: !4930)
!4935 = !DILocation(line: 201, column: 13, scope: !4930)
!4936 = !DILocation(line: 202, column: 28, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4930, file: !1687, line: 202, column: 18)
!4938 = !DILocation(line: 202, column: 43, scope: !4937)
!4939 = !DILocation(line: 203, column: 57, scope: !4937)
!4940 = !DILocation(line: 203, column: 64, scope: !4937)
!4941 = !DILocation(line: 203, column: 62, scope: !4937)
!4942 = !DILocation(line: 203, column: 13, scope: !4937)
!4943 = !DILocation(line: 205, column: 40, scope: !4937)
!4944 = !DILocation(line: 205, column: 59, scope: !4937)
!4945 = !DILocation(line: 205, column: 57, scope: !4937)
!4946 = !DILocation(line: 0, scope: !4930)
!4947 = !DILocation(line: 208, column: 41, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4886, file: !1687, line: 208, column: 13)
!4949 = !DILocation(line: 208, column: 34, scope: !4948)
!4950 = !DILocation(line: 208, column: 32, scope: !4948)
!4951 = !DILocation(line: 0, scope: !4948)
!4952 = !DILocation(line: 208, column: 13, scope: !4886)
!4953 = !DILocation(line: 209, column: 42, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4948, file: !1687, line: 208, column: 46)
!4955 = !DILocation(line: 209, column: 37, scope: !4954)
!4956 = !DILocation(line: 209, column: 51, scope: !4954)
!4957 = !DILocation(line: 209, column: 49, scope: !4954)
!4958 = !DILocation(line: 209, column: 22, scope: !4954)
!4959 = !DILocation(line: 210, column: 43, scope: !4954)
!4960 = !DILocation(line: 210, column: 41, scope: !4954)
!4961 = !DILocation(line: 210, column: 36, scope: !4954)
!4962 = !DILocation(line: 210, column: 50, scope: !4954)
!4963 = !DILocation(line: 210, column: 61, scope: !4954)
!4964 = !DILocation(line: 210, column: 59, scope: !4954)
!4965 = !DILocation(line: 210, column: 48, scope: !4954)
!4966 = !DILocation(line: 210, column: 70, scope: !4954)
!4967 = !DILocation(line: 210, column: 74, scope: !4954)
!4968 = !DILocation(line: 210, column: 78, scope: !4954)
!4969 = !DILocation(line: 210, column: 66, scope: !4954)
!4970 = !DILocation(line: 210, column: 20, scope: !4954)
!4971 = !DILocation(line: 211, column: 9, scope: !4954)
!4972 = !DILocation(line: 212, column: 28, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4948, file: !1687, line: 211, column: 16)
!4974 = !DILocation(line: 212, column: 34, scope: !4973)
!4975 = !DILocation(line: 212, column: 51, scope: !4973)
!4976 = !DILocation(line: 212, column: 49, scope: !4973)
!4977 = !DILocation(line: 212, column: 22, scope: !4973)
!4978 = !DILocation(line: 213, column: 29, scope: !4973)
!4979 = !DILocation(line: 213, column: 27, scope: !4973)
!4980 = !DILocation(line: 213, column: 50, scope: !4973)
!4981 = !DILocation(line: 213, column: 61, scope: !4973)
!4982 = !DILocation(line: 213, column: 59, scope: !4973)
!4983 = !DILocation(line: 213, column: 48, scope: !4973)
!4984 = !DILocation(line: 213, column: 69, scope: !4973)
!4985 = !DILocation(line: 213, column: 73, scope: !4973)
!4986 = !DILocation(line: 213, column: 77, scope: !4973)
!4987 = !DILocation(line: 213, column: 66, scope: !4973)
!4988 = !DILocation(line: 213, column: 20, scope: !4973)
!4989 = !DILocation(line: 216, column: 28, scope: !4886)
!4990 = !DILocation(line: 216, column: 44, scope: !4886)
!4991 = !DILocation(line: 216, column: 57, scope: !4886)
!4992 = !DILocation(line: 216, column: 27, scope: !4886)
!4993 = !DILocation(line: 216, column: 25, scope: !4886)
!4994 = !DILocation(line: 217, column: 28, scope: !4886)
!4995 = !DILocation(line: 217, column: 44, scope: !4886)
!4996 = !DILocation(line: 217, column: 57, scope: !4886)
!4997 = !DILocation(line: 217, column: 27, scope: !4886)
!4998 = !DILocation(line: 217, column: 25, scope: !4886)
!4999 = !DILocation(line: 219, column: 9, scope: !4886)
!5000 = !DILocation(line: 220, column: 9, scope: !4886)
!5001 = !DILocation(line: 221, column: 21, scope: !4886)
!5002 = !DILocation(line: 221, column: 19, scope: !4886)
!5003 = !DILocation(line: 221, column: 27, scope: !4886)
!5004 = !DILocation(line: 221, column: 25, scope: !4886)
!5005 = !DILocation(line: 226, column: 20, scope: !4886)
!5006 = distinct !{!5006, !4884, !5007}
!5007 = !DILocation(line: 227, column: 5, scope: !4845)
!5008 = !DILocation(line: 228, column: 17, scope: !4845)
!5009 = !DILocation(line: 229, column: 5, scope: !4845)
!5010 = !DILocation(line: 230, column: 17, scope: !4845)
!5011 = !DILocation(line: 231, column: 103, scope: !4845)
!5012 = !DILocation(line: 231, column: 5, scope: !4845)
!5013 = !DILocation(line: 235, column: 17, scope: !4845)
!5014 = !DILocation(line: 236, column: 5, scope: !4845)
!5015 = !DILocation(line: 244, column: 11, scope: !4845)
!5016 = !DILocation(line: 244, column: 20, scope: !4845)
!5017 = !DILocation(line: 246, column: 5, scope: !4845)
!5018 = !DILocation(line: 247, column: 9, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4845, file: !1687, line: 246, column: 15)
!5020 = !DILocation(line: 250, column: 31, scope: !5019)
!5021 = !DILocation(line: 251, column: 31, scope: !5019)
!5022 = !DILocation(line: 252, column: 31, scope: !5019)
!5023 = !DILocation(line: 253, column: 31, scope: !5019)
!5024 = !DILocation(line: 254, column: 31, scope: !5019)
!5025 = !DILocation(line: 258, column: 15, scope: !5019)
!5026 = !DILocation(line: 258, column: 13, scope: !5019)
!5027 = !DILocation(line: 259, column: 15, scope: !5019)
!5028 = !DILocation(line: 259, column: 13, scope: !5019)
!5029 = !DILocation(line: 260, column: 16, scope: !5019)
!5030 = !DILocation(line: 260, column: 20, scope: !5019)
!5031 = !DILocation(line: 260, column: 9, scope: !5019)
!5032 = !DILocation(line: 261, column: 19, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5019, file: !1687, line: 260, column: 35)
!5034 = !DILocation(line: 261, column: 17, scope: !5033)
!5035 = distinct !{!5035, !5031, !5036}
!5036 = !DILocation(line: 262, column: 9, scope: !5019)
!5037 = !DILocation(line: 263, column: 15, scope: !5019)
!5038 = !DILocation(line: 263, column: 13, scope: !5019)
!5039 = !DILocation(line: 264, column: 9, scope: !5019)
!5040 = !DILocation(line: 267, column: 19, scope: !5019)
!5041 = !DILocation(line: 267, column: 35, scope: !5019)
!5042 = !DILocation(line: 267, column: 39, scope: !5019)
!5043 = !DILocation(line: 269, column: 25, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5019, file: !1687, line: 269, column: 13)
!5045 = !DILocation(line: 269, column: 13, scope: !5019)
!5046 = !DILocation(line: 272, column: 23, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5019, file: !1687, line: 272, column: 13)
!5048 = !DILocation(line: 272, column: 39, scope: !5047)
!5049 = !DILocation(line: 272, column: 51, scope: !5047)
!5050 = !DILocation(line: 272, column: 68, scope: !5047)
!5051 = !DILocation(line: 272, column: 84, scope: !5047)
!5052 = !DILocation(line: 272, column: 13, scope: !5019)
!5053 = !DILocation(line: 273, column: 13, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5047, file: !1687, line: 272, column: 92)
!5055 = !DILocation(line: 274, column: 25, scope: !5054)
!5056 = !DILocation(line: 274, column: 31, scope: !5054)
!5057 = !DILocation(line: 275, column: 13, scope: !5054)
!5058 = !DILocation(line: 276, column: 29, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5054, file: !1687, line: 276, column: 17)
!5060 = !DILocation(line: 276, column: 17, scope: !5054)
!5061 = !DILocation(line: 277, column: 17, scope: !5059)
!5062 = !DILocation(line: 281, column: 30, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5047, file: !1687, line: 281, column: 20)
!5064 = !DILocation(line: 281, column: 45, scope: !5063)
!5065 = !DILocation(line: 282, column: 57, scope: !5063)
!5066 = !DILocation(line: 282, column: 64, scope: !5063)
!5067 = !DILocation(line: 282, column: 62, scope: !5063)
!5068 = !DILocation(line: 282, column: 13, scope: !5063)
!5069 = !DILocation(line: 283, column: 28, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5063, file: !1687, line: 283, column: 18)
!5071 = !DILocation(line: 283, column: 43, scope: !5070)
!5072 = !DILocation(line: 284, column: 57, scope: !5070)
!5073 = !DILocation(line: 284, column: 64, scope: !5070)
!5074 = !DILocation(line: 284, column: 62, scope: !5070)
!5075 = !DILocation(line: 284, column: 13, scope: !5070)
!5076 = !DILocation(line: 286, column: 40, scope: !5070)
!5077 = !DILocation(line: 286, column: 46, scope: !5070)
!5078 = !DILocation(line: 286, column: 65, scope: !5070)
!5079 = !DILocation(line: 286, column: 63, scope: !5070)
!5080 = !DILocation(line: 286, column: 69, scope: !5070)
!5081 = !DILocation(line: 0, scope: !5063)
!5082 = !DILocation(line: 290, column: 36, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5019, file: !1687, line: 290, column: 13)
!5084 = !DILocation(line: 290, column: 32, scope: !5083)
!5085 = !DILocation(line: 290, column: 30, scope: !5083)
!5086 = !DILocation(line: 0, scope: !5083)
!5087 = !DILocation(line: 290, column: 13, scope: !5019)
!5088 = !DILocation(line: 291, column: 42, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5083, file: !1687, line: 290, column: 41)
!5090 = !DILocation(line: 291, column: 37, scope: !5089)
!5091 = !DILocation(line: 291, column: 51, scope: !5089)
!5092 = !DILocation(line: 291, column: 49, scope: !5089)
!5093 = !DILocation(line: 291, column: 22, scope: !5089)
!5094 = !DILocation(line: 292, column: 43, scope: !5089)
!5095 = !DILocation(line: 292, column: 41, scope: !5089)
!5096 = !DILocation(line: 292, column: 36, scope: !5089)
!5097 = !DILocation(line: 292, column: 50, scope: !5089)
!5098 = !DILocation(line: 292, column: 61, scope: !5089)
!5099 = !DILocation(line: 292, column: 59, scope: !5089)
!5100 = !DILocation(line: 292, column: 48, scope: !5089)
!5101 = !DILocation(line: 292, column: 69, scope: !5089)
!5102 = !DILocation(line: 292, column: 73, scope: !5089)
!5103 = !DILocation(line: 292, column: 77, scope: !5089)
!5104 = !DILocation(line: 292, column: 66, scope: !5089)
!5105 = !DILocation(line: 292, column: 20, scope: !5089)
!5106 = !DILocation(line: 293, column: 9, scope: !5089)
!5107 = !DILocation(line: 294, column: 28, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5083, file: !1687, line: 293, column: 16)
!5109 = !DILocation(line: 294, column: 34, scope: !5108)
!5110 = !DILocation(line: 294, column: 51, scope: !5108)
!5111 = !DILocation(line: 294, column: 49, scope: !5108)
!5112 = !DILocation(line: 294, column: 22, scope: !5108)
!5113 = !DILocation(line: 295, column: 29, scope: !5108)
!5114 = !DILocation(line: 295, column: 27, scope: !5108)
!5115 = !DILocation(line: 295, column: 50, scope: !5108)
!5116 = !DILocation(line: 295, column: 61, scope: !5108)
!5117 = !DILocation(line: 295, column: 59, scope: !5108)
!5118 = !DILocation(line: 295, column: 48, scope: !5108)
!5119 = !DILocation(line: 295, column: 69, scope: !5108)
!5120 = !DILocation(line: 295, column: 73, scope: !5108)
!5121 = !DILocation(line: 295, column: 77, scope: !5108)
!5122 = !DILocation(line: 295, column: 66, scope: !5108)
!5123 = !DILocation(line: 295, column: 20, scope: !5108)
!5124 = !DILocation(line: 299, column: 28, scope: !5019)
!5125 = !DILocation(line: 299, column: 44, scope: !5019)
!5126 = !DILocation(line: 299, column: 57, scope: !5019)
!5127 = !DILocation(line: 299, column: 27, scope: !5019)
!5128 = !DILocation(line: 299, column: 25, scope: !5019)
!5129 = !DILocation(line: 302, column: 28, scope: !5019)
!5130 = !DILocation(line: 302, column: 44, scope: !5019)
!5131 = !DILocation(line: 302, column: 57, scope: !5019)
!5132 = !DILocation(line: 302, column: 27, scope: !5019)
!5133 = !DILocation(line: 302, column: 25, scope: !5019)
!5134 = !DILocation(line: 304, column: 9, scope: !5019)
!5135 = !DILocation(line: 305, column: 9, scope: !5019)
!5136 = !DILocation(line: 306, column: 21, scope: !5019)
!5137 = !DILocation(line: 306, column: 19, scope: !5019)
!5138 = !DILocation(line: 306, column: 27, scope: !5019)
!5139 = !DILocation(line: 306, column: 25, scope: !5019)
!5140 = !DILocation(line: 311, column: 20, scope: !5019)
!5141 = distinct !{!5141, !5017, !5142}
!5142 = !DILocation(line: 312, column: 5, scope: !4845)
!5143 = !DILocation(line: 274, column: 23, scope: !5054)
!5144 = !DILocation(line: 274, column: 29, scope: !5054)
!5145 = !DILocation(line: 313, column: 17, scope: !4845)
!5146 = !DILocation(line: 314, column: 103, scope: !4845)
!5147 = !DILocation(line: 314, column: 5, scope: !4845)
!5148 = !DILocation(line: 321, column: 24, scope: !4845)
!5149 = !DILocation(line: 336, column: 19, scope: !4845)
!5150 = !DILocation(line: 337, column: 19, scope: !4845)
!5151 = !DILocation(line: 340, column: 20, scope: !4845)
!5152 = !DILocation(line: 343, column: 5, scope: !4845)
!5153 = !DILocation(line: 349, column: 20, scope: !4845)
!5154 = !DILocation(line: 352, column: 19, scope: !4845)
!5155 = !DILocation(line: 355, column: 20, scope: !4845)
!5156 = !DILocation(line: 358, column: 20, scope: !4845)
!5157 = !DILocation(line: 361, column: 5, scope: !4845)
!5158 = !DILocation(line: 375, column: 21, scope: !4845)
!5159 = !DILocation(line: 376, column: 22, scope: !4845)
!5160 = !DILocation(line: 385, column: 22, scope: !4845)
!5161 = !DILocation(line: 385, column: 36, scope: !4845)
!5162 = !DILocation(line: 385, column: 47, scope: !4845)
!5163 = !DILocation(line: 385, column: 19, scope: !4845)
!5164 = !DILocation(line: 386, column: 22, scope: !4845)
!5165 = !DILocation(line: 386, column: 36, scope: !4845)
!5166 = !DILocation(line: 386, column: 47, scope: !4845)
!5167 = !DILocation(line: 386, column: 19, scope: !4845)
!5168 = !DILocation(line: 391, column: 24, scope: !4845)
!5169 = !DILocation(line: 397, column: 19, scope: !4845)
!5170 = !DILocation(line: 402, column: 19, scope: !4845)
!5171 = !DILocation(line: 405, column: 5, scope: !4845)
!5172 = !DILocation(line: 408, column: 19, scope: !4845)
!5173 = !DILocation(line: 424, column: 19, scope: !4845)
!5174 = !DILocation(line: 502, column: 25, scope: !4845)
!5175 = !DILocation(line: 505, column: 5, scope: !4845)
!5176 = !DILocation(line: 507, column: 19, scope: !4845)
!5177 = !DILocation(line: 508, column: 20, scope: !4845)
!5178 = !DILocation(line: 509, column: 19, scope: !4845)
!5179 = !DILocation(line: 513, column: 1, scope: !4845)
!5180 = distinct !DISubprogram(name: "clock_set_pll_init4flash_tool", scope: !1687, file: !1687, line: 515, type: !4261, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1686, retainedNodes: !4354)
!5181 = !DILocation(line: 518, column: 19, scope: !5180)
!5182 = !DILocation(line: 519, column: 19, scope: !5180)
!5183 = !DILocation(line: 522, column: 20, scope: !5180)
!5184 = !DILocation(line: 525, column: 5, scope: !5180)
!5185 = !DILocation(line: 528, column: 21, scope: !5180)
!5186 = !DILocation(line: 531, column: 20, scope: !5180)
!5187 = !DILocation(line: 537, column: 24, scope: !5180)
!5188 = !DILocation(line: 545, column: 19, scope: !5180)
!5189 = !DILocation(line: 548, column: 20, scope: !5180)
!5190 = !DILocation(line: 551, column: 20, scope: !5180)
!5191 = !DILocation(line: 554, column: 5, scope: !5180)
!5192 = !DILocation(line: 557, column: 24, scope: !5180)
!5193 = !DILocation(line: 563, column: 19, scope: !5180)
!5194 = !DILocation(line: 568, column: 19, scope: !5180)
!5195 = !DILocation(line: 571, column: 5, scope: !5180)
!5196 = !DILocation(line: 574, column: 19, scope: !5180)
!5197 = !DILocation(line: 590, column: 19, scope: !5180)
!5198 = !DILocation(line: 643, column: 25, scope: !5180)
!5199 = !DILocation(line: 646, column: 5, scope: !5180)
!5200 = !DILocation(line: 648, column: 19, scope: !5180)
!5201 = !DILocation(line: 650, column: 1, scope: !5180)
!5202 = distinct !DISubprogram(name: "bl_custom_ram_baseaddr", scope: !1692, file: !1692, line: 51, type: !5203, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1691, retainedNodes: !4354)
!5203 = !DISubroutineType(types: !5204)
!5204 = !{!36}
!5205 = !DILocation(line: 53, column: 5, scope: !5202)
!5206 = distinct !DISubprogram(name: "bl_custom_rom_baseaddr", scope: !1692, file: !1692, line: 56, type: !5203, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1691, retainedNodes: !4354)
!5207 = !DILocation(line: 58, column: 5, scope: !5206)
!5208 = distinct !DISubprogram(name: "bl_custom_cm4_start_address", scope: !1692, file: !1692, line: 61, type: !5203, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1691, retainedNodes: !4354)
!5209 = !DILocation(line: 63, column: 5, scope: !5208)
!5210 = distinct !DISubprogram(name: "bl_custom_fota_start_address", scope: !1692, file: !1692, line: 66, type: !5203, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1691, retainedNodes: !4354)
!5211 = !DILocation(line: 68, column: 5, scope: !5210)
!5212 = distinct !DISubprogram(name: "bl_custom_fota_size", scope: !1692, file: !1692, line: 71, type: !5203, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1691, retainedNodes: !4354)
!5213 = !DILocation(line: 73, column: 5, scope: !5212)
!5214 = distinct !DISubprogram(name: "bl_gpt_delay_us", scope: !64, file: !64, line: 75, type: !5215, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !63, retainedNodes: !5217)
!5215 = !DISubroutineType(types: !5216)
!5216 = !{!94, !219}
!5217 = !{!5218}
!5218 = !DILocalVariable(name: "us", arg: 1, scope: !5214, file: !64, line: 75, type: !219)
!5219 = !DILocation(line: 0, scope: !5214)
!5220 = !DILocation(line: 77, column: 10, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5214, file: !64, line: 77, column: 10)
!5222 = !{i8 0, i8 2}
!5223 = !DILocation(line: 77, column: 23, scope: !5221)
!5224 = !DILocation(line: 77, column: 10, scope: !5214)
!5225 = !DILocation(line: 78, column: 37, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5221, file: !64, line: 77, column: 33)
!5227 = !DILocation(line: 78, column: 9, scope: !5226)
!5228 = !DILocation(line: 79, column: 22, scope: !5226)
!5229 = !DILocation(line: 80, column: 5, scope: !5226)
!5230 = !DILocation(line: 82, column: 23, scope: !5214)
!5231 = !DILocation(line: 82, column: 5, scope: !5214)
!5232 = !DILocation(line: 84, column: 5, scope: !5214)
!5233 = distinct !DISubprogram(name: "bl_gpt_start_free_run_timer", scope: !64, file: !64, line: 61, type: !5234, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !63, retainedNodes: !5236)
!5234 = !DISubroutineType(types: !5235)
!5235 = !{null, !77, !219, !219}
!5236 = !{!5237, !5238, !5239}
!5237 = !DILocalVariable(name: "gpt", arg: 1, scope: !5233, file: !64, line: 61, type: !77)
!5238 = !DILocalVariable(name: "clock_source", arg: 2, scope: !5233, file: !64, line: 61, type: !219)
!5239 = !DILocalVariable(name: "divide", arg: 3, scope: !5233, file: !64, line: 61, type: !219)
!5240 = !DILocation(line: 0, scope: !5233)
!5241 = !DILocation(line: 64, column: 11, scope: !5242)
!5242 = distinct !DILexicalBlock(scope: !5233, file: !64, line: 64, column: 10)
!5243 = !DILocation(line: 64, column: 40, scope: !5242)
!5244 = !DILocation(line: 64, column: 59, scope: !5242)
!5245 = !DILocation(line: 64, column: 10, scope: !5233)
!5246 = !DILocation(line: 65, column: 38, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5242, file: !64, line: 64, column: 65)
!5248 = !DILocation(line: 66, column: 5, scope: !5247)
!5249 = !DILocation(line: 68, column: 33, scope: !5233)
!5250 = !DILocation(line: 68, column: 10, scope: !5233)
!5251 = !DILocation(line: 68, column: 18, scope: !5233)
!5252 = !DILocation(line: 71, column: 10, scope: !5233)
!5253 = !DILocation(line: 71, column: 18, scope: !5233)
!5254 = !DILocation(line: 72, column: 1, scope: !5233)
!5255 = distinct !DISubprogram(name: "bl_gpt_delay_time", scope: !64, file: !64, line: 46, type: !5256, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !63, retainedNodes: !5258)
!5256 = !DISubroutineType(types: !5257)
!5257 = !{null, !77, !219}
!5258 = !{!5259, !5260, !5261, !5262}
!5259 = !DILocalVariable(name: "gpt", arg: 1, scope: !5255, file: !64, line: 46, type: !77)
!5260 = !DILocalVariable(name: "count", arg: 2, scope: !5255, file: !64, line: 46, type: !219)
!5261 = !DILocalVariable(name: "end_count", scope: !5255, file: !64, line: 48, type: !82)
!5262 = !DILocalVariable(name: "current", scope: !5255, file: !64, line: 48, type: !82)
!5263 = !DILocation(line: 0, scope: !5255)
!5264 = !DILocation(line: 48, column: 5, scope: !5255)
!5265 = !DILocation(line: 48, column: 23, scope: !5255)
!5266 = !DILocation(line: 48, column: 38, scope: !5255)
!5267 = !DILocation(line: 49, column: 17, scope: !5255)
!5268 = !DILocation(line: 49, column: 15, scope: !5255)
!5269 = !DILocation(line: 50, column: 17, scope: !5255)
!5270 = !DILocation(line: 50, column: 25, scope: !5255)
!5271 = !DILocation(line: 50, column: 33, scope: !5255)
!5272 = !DILocation(line: 50, column: 15, scope: !5255)
!5273 = !DILocation(line: 53, column: 10, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5255, file: !64, line: 53, column: 10)
!5275 = !DILocation(line: 53, column: 22, scope: !5274)
!5276 = !DILocation(line: 53, column: 20, scope: !5274)
!5277 = !DILocation(line: 53, column: 10, scope: !5255)
!5278 = !DILocation(line: 54, column: 17, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5274, file: !64, line: 53, column: 32)
!5280 = !DILocation(line: 54, column: 45, scope: !5279)
!5281 = !DILocation(line: 54, column: 43, scope: !5279)
!5282 = !DILocation(line: 54, column: 9, scope: !5279)
!5283 = distinct !{!5283, !5282, !5284}
!5284 = !DILocation(line: 54, column: 56, scope: !5279)
!5285 = !DILocation(line: 56, column: 17, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5274, file: !64, line: 55, column: 12)
!5287 = !DILocation(line: 56, column: 46, scope: !5286)
!5288 = !DILocation(line: 56, column: 43, scope: !5286)
!5289 = !DILocation(line: 56, column: 9, scope: !5286)
!5290 = distinct !{!5290, !5289, !5291}
!5291 = !DILocation(line: 56, column: 55, scope: !5286)
!5292 = !DILocation(line: 57, column: 17, scope: !5286)
!5293 = !DILocation(line: 57, column: 45, scope: !5286)
!5294 = !DILocation(line: 57, column: 43, scope: !5286)
!5295 = !DILocation(line: 57, column: 9, scope: !5286)
!5296 = distinct !{!5296, !5295, !5297}
!5297 = !DILocation(line: 57, column: 56, scope: !5286)
!5298 = !DILocation(line: 59, column: 1, scope: !5255)
!5299 = distinct !DISubprogram(name: "bl_gpt_delay_ms", scope: !64, file: !64, line: 88, type: !5215, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !63, retainedNodes: !5300)
!5300 = !{!5301}
!5301 = !DILocalVariable(name: "ms", arg: 1, scope: !5299, file: !64, line: 88, type: !219)
!5302 = !DILocation(line: 0, scope: !5299)
!5303 = !DILocation(line: 90, column: 10, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5299, file: !64, line: 90, column: 10)
!5305 = !DILocation(line: 90, column: 23, scope: !5304)
!5306 = !DILocation(line: 90, column: 10, scope: !5299)
!5307 = !DILocation(line: 91, column: 37, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5304, file: !64, line: 90, column: 32)
!5309 = !DILocation(line: 91, column: 9, scope: !5308)
!5310 = !DILocation(line: 92, column: 22, scope: !5308)
!5311 = !DILocation(line: 93, column: 5, scope: !5308)
!5312 = !DILocation(line: 95, column: 23, scope: !5299)
!5313 = !DILocation(line: 95, column: 46, scope: !5299)
!5314 = !DILocation(line: 95, column: 55, scope: !5299)
!5315 = !DILocation(line: 95, column: 5, scope: !5299)
!5316 = !DILocation(line: 97, column: 5, scope: !5299)
!5317 = distinct !DISubprogram(name: "bl_gpt_get_free_run_count", scope: !64, file: !64, line: 101, type: !5318, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !63, retainedNodes: !5321)
!5318 = !DISubroutineType(types: !5319)
!5319 = !{!94, !5320, !187}
!5320 = !DIDerivedType(tag: DW_TAG_typedef, name: "bl_gpt_clock_source_t", file: !67, line: 140, baseType: !66)
!5321 = !{!5322, !5323}
!5322 = !DILocalVariable(name: "clock_source", arg: 1, scope: !5317, file: !64, line: 101, type: !5320)
!5323 = !DILocalVariable(name: "count", arg: 2, scope: !5317, file: !64, line: 101, type: !187)
!5324 = !DILocation(line: 0, scope: !5317)
!5325 = !DILocation(line: 104, column: 10, scope: !5317)
!5326 = !DILocation(line: 105, column: 14, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5328, file: !64, line: 105, column: 14)
!5328 = distinct !DILexicalBlock(scope: !5329, file: !64, line: 104, column: 51)
!5329 = distinct !DILexicalBlock(scope: !5317, file: !64, line: 104, column: 10)
!5330 = !DILocation(line: 105, column: 27, scope: !5327)
!5331 = !DILocation(line: 105, column: 14, scope: !5328)
!5332 = !DILocation(line: 108, column: 42, scope: !5333)
!5333 = distinct !DILexicalBlock(scope: !5327, file: !64, line: 105, column: 37)
!5334 = !DILocation(line: 108, column: 13, scope: !5333)
!5335 = !DILocation(line: 110, column: 9, scope: !5333)
!5336 = !DILocation(line: 116, column: 14, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5338, file: !64, line: 116, column: 14)
!5338 = distinct !DILexicalBlock(scope: !5339, file: !64, line: 115, column: 56)
!5339 = distinct !DILexicalBlock(scope: !5329, file: !64, line: 115, column: 15)
!5340 = !DILocation(line: 116, column: 27, scope: !5337)
!5341 = !DILocation(line: 116, column: 14, scope: !5338)
!5342 = !DILocation(line: 119, column: 42, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5337, file: !64, line: 116, column: 37)
!5344 = !DILocation(line: 119, column: 13, scope: !5343)
!5345 = !DILocation(line: 123, column: 9, scope: !5343)
!5346 = !DILocation(line: 0, scope: !5329)
!5347 = !DILocation(line: 130, column: 5, scope: !5317)
!5348 = !DILocation(line: 131, column: 1, scope: !5317)
!5349 = distinct !DISubprogram(name: "bl_bonding_io_reg", scope: !1694, file: !1694, line: 43, type: !4261, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1693, retainedNodes: !5350)
!5350 = !{!5351, !5352, !5353, !5354, !5355, !5356, !5357, !5358}
!5351 = !DILocalVariable(name: "bond_sta", scope: !5349, file: !1694, line: 45, type: !7)
!5352 = !DILocalVariable(name: "hw_misc3", scope: !5349, file: !1694, line: 46, type: !7)
!5353 = !DILocalVariable(name: "bond_extsf", scope: !5349, file: !1694, line: 47, type: !7)
!5354 = !DILocalVariable(name: "bond_psram", scope: !5349, file: !1694, line: 48, type: !7)
!5355 = !DILocalVariable(name: "bond_gnss", scope: !5349, file: !1694, line: 49, type: !7)
!5356 = !DILocalVariable(name: "bond_sipsf_18v", scope: !5349, file: !1694, line: 50, type: !7)
!5357 = !DILocalVariable(name: "bond_pu", scope: !5349, file: !1694, line: 52, type: !7)
!5358 = !DILocalVariable(name: "bond_pd", scope: !5349, file: !1694, line: 53, type: !7)
!5359 = !DILocation(line: 0, scope: !5349)
!5360 = !DILocation(line: 55, column: 16, scope: !5349)
!5361 = !DILocation(line: 56, column: 16, scope: !5349)
!5362 = !DILocation(line: 63, column: 10, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5349, file: !1694, line: 63, column: 9)
!5364 = !DILocation(line: 63, column: 9, scope: !5349)
!5365 = !DILocation(line: 67, column: 10, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5349, file: !1694, line: 67, column: 9)
!5367 = !DILocation(line: 67, column: 9, scope: !5349)
!5368 = !DILocation(line: 71, column: 10, scope: !5369)
!5369 = distinct !DILexicalBlock(scope: !5349, file: !1694, line: 71, column: 9)
!5370 = !DILocation(line: 71, column: 9, scope: !5349)
!5371 = !DILocation(line: 75, column: 10, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5349, file: !1694, line: 75, column: 9)
!5373 = !DILocation(line: 75, column: 9, scope: !5349)
!5374 = !DILocation(line: 80, column: 73, scope: !5349)
!5375 = !DILocation(line: 80, column: 92, scope: !5349)
!5376 = !DILocation(line: 80, column: 110, scope: !5349)
!5377 = !DILocation(line: 80, column: 80, scope: !5349)
!5378 = !DILocation(line: 80, column: 98, scope: !5349)
!5379 = !DILocation(line: 80, column: 48, scope: !5349)
!5380 = !DILocation(line: 81, column: 1, scope: !5349)
!5381 = distinct !DISubprogram(name: "bl_d2d_io_pull_down", scope: !1694, file: !1694, line: 83, type: !4261, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1693, retainedNodes: !4354)
!5382 = !DILocation(line: 85, column: 52, scope: !5381)
!5383 = !DILocation(line: 86, column: 1, scope: !5381)
!5384 = distinct !DISubprogram(name: "f32k_measure_clock", scope: !100, file: !100, line: 76, type: !5385, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !99, retainedNodes: !5387)
!5385 = !DISubroutineType(types: !5386)
!5386 = !{!36, !113, !113, !113}
!5387 = !{!5388, !5389, !5390, !5391}
!5388 = !DILocalVariable(name: "fixed_clock", arg: 1, scope: !5384, file: !100, line: 76, type: !113)
!5389 = !DILocalVariable(name: "tested_clock", arg: 2, scope: !5384, file: !100, line: 76, type: !113)
!5390 = !DILocalVariable(name: "window_setting", arg: 3, scope: !5384, file: !100, line: 76, type: !113)
!5391 = !DILocalVariable(name: "fqmtr_data", scope: !5384, file: !100, line: 78, type: !36)
!5392 = !DILocation(line: 0, scope: !5384)
!5393 = !DILocation(line: 81, column: 44, scope: !5384)
!5394 = !DILocation(line: 82, column: 5, scope: !5384)
!5395 = !DILocation(line: 83, column: 5, scope: !5384)
!5396 = !DILocation(line: 83, column: 35, scope: !5384)
!5397 = !DILocation(line: 83, column: 62, scope: !5384)
!5398 = distinct !{!5398, !5395, !5399}
!5399 = !DILocation(line: 83, column: 67, scope: !5384)
!5400 = !DILocation(line: 85, column: 44, scope: !5384)
!5401 = !DILocation(line: 87, column: 59, scope: !5384)
!5402 = !DILocation(line: 87, column: 65, scope: !5384)
!5403 = !DILocation(line: 87, column: 44, scope: !5384)
!5404 = !DILocation(line: 88, column: 44, scope: !5384)
!5405 = !DILocation(line: 90, column: 70, scope: !5384)
!5406 = !DILocation(line: 90, column: 53, scope: !5384)
!5407 = !DILocation(line: 90, column: 44, scope: !5384)
!5408 = !DILocation(line: 91, column: 5, scope: !5384)
!5409 = !DILocation(line: 103, column: 5, scope: !5384)
!5410 = !DILocation(line: 103, column: 35, scope: !5384)
!5411 = !DILocation(line: 103, column: 62, scope: !5384)
!5412 = distinct !{!5412, !5409, !5413}
!5413 = !DILocation(line: 103, column: 67, scope: !5384)
!5414 = !DILocation(line: 105, column: 51, scope: !5384)
!5415 = !DILocation(line: 105, column: 19, scope: !5384)
!5416 = !DILocation(line: 105, column: 72, scope: !5384)
!5417 = !DILocation(line: 105, column: 103, scope: !5384)
!5418 = !DILocation(line: 105, column: 81, scope: !5384)
!5419 = !DILocation(line: 105, column: 79, scope: !5384)
!5420 = !DILocation(line: 117, column: 5, scope: !5384)
!5421 = distinct !DISubprogram(name: "set_capid", scope: !100, file: !100, line: 120, type: !5422, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !99, retainedNodes: !5424)
!5422 = !DISubroutineType(types: !5423)
!5423 = !{null, !36, !36}
!5424 = !{!5425, !5426, !5427, !5428, !5429}
!5425 = !DILocalVariable(name: "target_capid", arg: 1, scope: !5421, file: !100, line: 120, type: !36)
!5426 = !DILocalVariable(name: "current_capid", arg: 2, scope: !5421, file: !100, line: 120, type: !36)
!5427 = !DILocalVariable(name: "dcxo_cap_id", scope: !5421, file: !100, line: 122, type: !36)
!5428 = !DILocalVariable(name: "duration", scope: !5421, file: !100, line: 123, type: !16)
!5429 = !DILocalVariable(name: "temp_capid", scope: !5421, file: !100, line: 124, type: !16)
!5430 = !DILocation(line: 0, scope: !5421)
!5431 = !DILocation(line: 122, column: 32, scope: !5421)
!5432 = !DILocation(line: 123, column: 45, scope: !5421)
!5433 = !DILocation(line: 126, column: 5, scope: !5421)
!5434 = !DILocation(line: 128, column: 16, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5421, file: !100, line: 128, column: 8)
!5436 = !DILocation(line: 128, column: 8, scope: !5421)
!5437 = !DILocation(line: 130, column: 9, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5435, file: !100, line: 128, column: 19)
!5439 = !DILocation(line: 131, column: 9, scope: !5438)
!5440 = !DILocation(line: 133, column: 22, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5438, file: !100, line: 131, column: 28)
!5442 = !DILocation(line: 134, column: 24, scope: !5441)
!5443 = !DILocation(line: 135, column: 26, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5441, file: !100, line: 135, column: 16)
!5445 = !DILocation(line: 135, column: 16, scope: !5441)
!5446 = !DILocation(line: 140, column: 13, scope: !5441)
!5447 = !DILocation(line: 142, column: 27, scope: !5441)
!5448 = !DILocation(line: 142, column: 43, scope: !5441)
!5449 = !DILocation(line: 143, column: 44, scope: !5441)
!5450 = !DILocation(line: 143, column: 49, scope: !5441)
!5451 = !DILocation(line: 143, column: 29, scope: !5441)
!5452 = !DILocation(line: 145, column: 27, scope: !5441)
!5453 = !DILocation(line: 131, column: 24, scope: !5438)
!5454 = distinct !{!5454, !5439, !5455}
!5455 = !DILocation(line: 149, column: 9, scope: !5438)
!5456 = !DILocation(line: 152, column: 9, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5435, file: !100, line: 150, column: 10)
!5458 = !DILocation(line: 153, column: 24, scope: !5457)
!5459 = !DILocation(line: 153, column: 9, scope: !5457)
!5460 = !DILocation(line: 155, column: 22, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5457, file: !100, line: 153, column: 28)
!5462 = !DILocation(line: 156, column: 24, scope: !5461)
!5463 = !DILocation(line: 157, column: 26, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5461, file: !100, line: 157, column: 16)
!5465 = !DILocation(line: 157, column: 16, scope: !5461)
!5466 = !DILocation(line: 161, column: 27, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5461, file: !100, line: 161, column: 17)
!5468 = !DILocation(line: 161, column: 17, scope: !5461)
!5469 = !DILocation(line: 165, column: 13, scope: !5461)
!5470 = !DILocation(line: 167, column: 27, scope: !5461)
!5471 = !DILocation(line: 167, column: 43, scope: !5461)
!5472 = !DILocation(line: 168, column: 44, scope: !5461)
!5473 = !DILocation(line: 168, column: 49, scope: !5461)
!5474 = !DILocation(line: 168, column: 29, scope: !5461)
!5475 = !DILocation(line: 170, column: 27, scope: !5461)
!5476 = distinct !{!5476, !5459, !5477}
!5477 = !DILocation(line: 174, column: 9, scope: !5457)
!5478 = !DILocation(line: 177, column: 19, scope: !5421)
!5479 = !DILocation(line: 178, column: 5, scope: !5421)
!5480 = !DILocation(line: 180, column: 21, scope: !5421)
!5481 = !DILocation(line: 181, column: 1, scope: !5421)
!5482 = distinct !DISubprogram(name: "write_efuse_capid", scope: !100, file: !100, line: 183, type: !4734, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !99, retainedNodes: !5483)
!5483 = !{!5484, !5485, !5486, !5487, !5488, !5489, !5490}
!5484 = !DILocalVariable(name: "cal_capid", arg: 1, scope: !5482, file: !100, line: 183, type: !36)
!5485 = !DILocalVariable(name: "efuse_capid", scope: !5482, file: !100, line: 185, type: !36)
!5486 = !DILocalVariable(name: "efuse_capid0", scope: !5482, file: !100, line: 186, type: !36)
!5487 = !DILocalVariable(name: "efuse_capid1", scope: !5482, file: !100, line: 187, type: !36)
!5488 = !DILocalVariable(name: "efuse_capid2", scope: !5482, file: !100, line: 188, type: !36)
!5489 = !DILocalVariable(name: "temp", scope: !5482, file: !100, line: 189, type: !36)
!5490 = !DILocalVariable(name: "efuse_check", scope: !5482, file: !100, line: 190, type: !16)
!5491 = !DILocation(line: 0, scope: !5482)
!5492 = !DILocation(line: 185, column: 29, scope: !5482)
!5493 = !DILocation(line: 186, column: 41, scope: !5482)
!5494 = !DILocation(line: 195, column: 32, scope: !5482)
!5495 = !DILocation(line: 196, column: 32, scope: !5482)
!5496 = !DILocation(line: 197, column: 5, scope: !5482)
!5497 = !DILocation(line: 198, column: 5, scope: !5482)
!5498 = !DILocation(line: 199, column: 5, scope: !5482)
!5499 = !DILocation(line: 200, column: 5, scope: !5482)
!5500 = !DILocation(line: 201, column: 5, scope: !5482)
!5501 = !DILocation(line: 275, column: 1, scope: !5482)
!5502 = distinct !DISubprogram(name: "read_efuse_capid", scope: !100, file: !100, line: 277, type: !5203, scopeLine: 278, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !99, retainedNodes: !5503)
!5503 = !{!5504, !5505, !5506, !5507}
!5504 = !DILocalVariable(name: "efuse_capid", scope: !5502, file: !100, line: 279, type: !36)
!5505 = !DILocalVariable(name: "efuse_capid0", scope: !5502, file: !100, line: 280, type: !36)
!5506 = !DILocalVariable(name: "efuse_capid1", scope: !5502, file: !100, line: 281, type: !36)
!5507 = !DILocalVariable(name: "efuse_capid2", scope: !5502, file: !100, line: 282, type: !36)
!5508 = !DILocation(line: 279, column: 29, scope: !5502)
!5509 = !DILocation(line: 0, scope: !5502)
!5510 = !DILocation(line: 280, column: 41, scope: !5502)
!5511 = !DILocation(line: 283, column: 32, scope: !5502)
!5512 = !DILocation(line: 284, column: 32, scope: !5502)
!5513 = !DILocation(line: 285, column: 20, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5502, file: !100, line: 285, column: 8)
!5515 = !DILocation(line: 285, column: 8, scope: !5502)
!5516 = !DILocation(line: 286, column: 9, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5514, file: !100, line: 285, column: 24)
!5518 = !DILocation(line: 287, column: 9, scope: !5517)
!5519 = !DILocation(line: 288, column: 26, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5514, file: !100, line: 288, column: 14)
!5521 = !DILocation(line: 288, column: 14, scope: !5514)
!5522 = !DILocation(line: 289, column: 9, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5520, file: !100, line: 288, column: 30)
!5524 = !DILocation(line: 290, column: 9, scope: !5523)
!5525 = !DILocation(line: 291, column: 26, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5520, file: !100, line: 291, column: 14)
!5527 = !DILocation(line: 291, column: 14, scope: !5520)
!5528 = !DILocation(line: 292, column: 9, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5526, file: !100, line: 291, column: 30)
!5530 = !DILocation(line: 293, column: 9, scope: !5529)
!5531 = !DILocation(line: 295, column: 9, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5526, file: !100, line: 294, column: 11)
!5533 = !DILocation(line: 296, column: 9, scope: !5532)
!5534 = !DILocation(line: 0, scope: !5514)
!5535 = !DILocation(line: 298, column: 1, scope: !5502)
!5536 = distinct !DISubprogram(name: "bl_dcxo_factory_calibration", scope: !100, file: !100, line: 300, type: !4261, scopeLine: 301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !99, retainedNodes: !5537)
!5537 = !{!5538, !5539, !5540}
!5538 = !DILocalVariable(name: "cal_capid", scope: !5536, file: !100, line: 302, type: !36)
!5539 = !DILocalVariable(name: "i", scope: !5536, file: !100, line: 303, type: !20)
!5540 = !DILocalVariable(name: "fqmtr_data", scope: !5536, file: !100, line: 304, type: !36)
!5541 = !DILocation(line: 0, scope: !5536)
!5542 = !DILocation(line: 316, column: 5, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5536, file: !100, line: 316, column: 5)
!5544 = !DILocation(line: 317, column: 35, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !100, line: 316, column: 22)
!5546 = distinct !DILexicalBlock(scope: !5543, file: !100, line: 316, column: 5)
!5547 = !DILocation(line: 317, column: 31, scope: !5545)
!5548 = !DILocation(line: 318, column: 29, scope: !5545)
!5549 = !DILocation(line: 318, column: 9, scope: !5545)
!5550 = !DILocation(line: 320, column: 22, scope: !5545)
!5551 = !DILocation(line: 321, column: 9, scope: !5545)
!5552 = !DILocation(line: 322, column: 24, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5545, file: !100, line: 322, column: 13)
!5554 = !DILocation(line: 322, column: 13, scope: !5545)
!5555 = !DILocation(line: 323, column: 13, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5553, file: !100, line: 322, column: 35)
!5557 = !DILocation(line: 324, column: 13, scope: !5556)
!5558 = !DILocation(line: 327, column: 24, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5545, file: !100, line: 327, column: 13)
!5560 = !DILocation(line: 327, column: 13, scope: !5545)
!5561 = !DILocation(line: 330, column: 9, scope: !5545)
!5562 = !DILocation(line: 332, column: 9, scope: !5545)
!5563 = !DILocation(line: 316, column: 19, scope: !5546)
!5564 = !DILocation(line: 316, column: 14, scope: !5546)
!5565 = distinct !{!5565, !5542, !5566}
!5566 = !DILocation(line: 333, column: 5, scope: !5543)
!5567 = !DILocation(line: 335, column: 5, scope: !5536)
!5568 = !DILocation(line: 337, column: 17, scope: !5569)
!5569 = distinct !DILexicalBlock(scope: !5536, file: !100, line: 337, column: 8)
!5570 = !DILocation(line: 337, column: 8, scope: !5536)
!5571 = !DILocation(line: 338, column: 9, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5569, file: !100, line: 337, column: 21)
!5573 = !DILocation(line: 340, column: 5, scope: !5572)
!5574 = !DILocation(line: 344, column: 5, scope: !5536)
!5575 = !DILocation(line: 345, column: 5, scope: !5536)
!5576 = distinct !{!5576, !5575, !5577}
!5577 = !DILocation(line: 345, column: 14, scope: !5536)
!5578 = distinct !DISubprogram(name: "bl_dcxo_load_calibration", scope: !100, file: !100, line: 352, type: !4261, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !99, retainedNodes: !5579)
!5579 = !{!5580, !5581}
!5580 = !DILocalVariable(name: "dcxo_cap_id", scope: !5578, file: !100, line: 355, type: !36)
!5581 = !DILocalVariable(name: "efuse_capid", scope: !5578, file: !100, line: 357, type: !36)
!5582 = !DILocation(line: 355, column: 32, scope: !5578)
!5583 = !DILocation(line: 0, scope: !5578)
!5584 = !DILocation(line: 358, column: 5, scope: !5578)
!5585 = !DILocation(line: 367, column: 27, scope: !5578)
!5586 = !DILocation(line: 367, column: 5, scope: !5578)
!5587 = !DILocation(line: 368, column: 1, scope: !5578)
!5588 = distinct !DISubprogram(name: "bl_dcxo_capid_init", scope: !100, file: !100, line: 370, type: !4261, scopeLine: 371, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !99, retainedNodes: !5589)
!5589 = !{!5590, !5591}
!5590 = !DILocalVariable(name: "dcxo_cap_id", scope: !5588, file: !100, line: 372, type: !36)
!5591 = !DILocalVariable(name: "traget_cal_data", scope: !5588, file: !100, line: 373, type: !36)
!5592 = !DILocation(line: 372, column: 32, scope: !5588)
!5593 = !DILocation(line: 0, scope: !5588)
!5594 = !DILocation(line: 375, column: 36, scope: !5588)
!5595 = !DILocation(line: 375, column: 21, scope: !5588)
!5596 = !DILocation(line: 377, column: 19, scope: !5588)
!5597 = !DILocation(line: 377, column: 35, scope: !5588)
!5598 = !DILocation(line: 378, column: 46, scope: !5588)
!5599 = !DILocation(line: 378, column: 21, scope: !5588)
!5600 = !DILocation(line: 379, column: 19, scope: !5588)
!5601 = !DILocation(line: 380, column: 5, scope: !5588)
!5602 = !DILocation(line: 381, column: 21, scope: !5588)
!5603 = !DILocation(line: 383, column: 1, scope: !5588)
!5604 = distinct !DISubprogram(name: "bl_pmic_init", scope: !127, file: !127, line: 41, type: !4261, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !126, retainedNodes: !5605)
!5605 = !{!5606, !5611}
!5606 = !DILocalVariable(name: "config", scope: !5604, file: !127, line: 43, type: !5607)
!5607 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_config_t", file: !130, line: 92, baseType: !5608)
!5608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !130, line: 90, size: 32, elements: !5609)
!5609 = !{!5610}
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_frequency", scope: !5608, file: !130, line: 91, baseType: !36, size: 32)
!5611 = !DILocalVariable(name: "wdt_status", scope: !5604, file: !127, line: 44, type: !73)
!5612 = !DILocation(line: 43, column: 5, scope: !5604)
!5613 = !DILocation(line: 43, column: 23, scope: !5604)
!5614 = !DILocation(line: 44, column: 5, scope: !5604)
!5615 = !DILocation(line: 44, column: 27, scope: !5604)
!5616 = !DILocation(line: 47, column: 12, scope: !5604)
!5617 = !DILocation(line: 47, column: 31, scope: !5604)
!5618 = !DILocation(line: 48, column: 5, scope: !5604)
!5619 = !DILocation(line: 51, column: 8, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5604, file: !127, line: 51, column: 8)
!5621 = !DILocation(line: 51, column: 25, scope: !5620)
!5622 = !DILocation(line: 51, column: 8, scope: !5604)
!5623 = !DILocation(line: 52, column: 9, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5620, file: !127, line: 51, column: 31)
!5625 = !DILocation(line: 53, column: 33, scope: !5624)
!5626 = !DILocation(line: 54, column: 32, scope: !5624)
!5627 = !DILocation(line: 55, column: 9, scope: !5624)
!5628 = !DILocation(line: 56, column: 15, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5620, file: !127, line: 56, column: 15)
!5630 = !DILocation(line: 56, column: 34, scope: !5629)
!5631 = !DILocation(line: 56, column: 15, scope: !5620)
!5632 = !DILocation(line: 57, column: 9, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5629, file: !127, line: 56, column: 40)
!5634 = !DILocation(line: 58, column: 33, scope: !5633)
!5635 = !DILocation(line: 59, column: 32, scope: !5633)
!5636 = !DILocation(line: 62, column: 22, scope: !5633)
!5637 = !DILocation(line: 62, column: 20, scope: !5633)
!5638 = !DILocation(line: 63, column: 13, scope: !5639)
!5639 = distinct !DILexicalBlock(scope: !5633, file: !127, line: 63, column: 13)
!5640 = !DILocation(line: 63, column: 24, scope: !5639)
!5641 = !DILocation(line: 63, column: 13, scope: !5633)
!5642 = !DILocation(line: 65, column: 13, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5639, file: !127, line: 63, column: 30)
!5644 = !DILocation(line: 66, column: 13, scope: !5643)
!5645 = !DILocation(line: 67, column: 9, scope: !5643)
!5646 = !DILocation(line: 68, column: 13, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5639, file: !127, line: 67, column: 16)
!5648 = !DILocation(line: 80, column: 9, scope: !5649)
!5649 = distinct !DILexicalBlock(scope: !5629, file: !127, line: 79, column: 10)
!5650 = !DILocation(line: 81, column: 33, scope: !5649)
!5651 = !DILocation(line: 82, column: 9, scope: !5649)
!5652 = !DILocation(line: 84, column: 1, scope: !5604)
!5653 = distinct !DISubprogram(name: "bl_pmic_set_register_value", scope: !127, file: !127, line: 86, type: !5654, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !126, retainedNodes: !5656)
!5654 = !DISubroutineType(types: !5655)
!5655 = !{!94, !185, !185, !113, !185, !185, !185}
!5656 = !{!5657, !5658, !5659, !5660, !5661, !5662, !5663, !5665}
!5657 = !DILocalVariable(name: "i2c_address", arg: 1, scope: !5653, file: !127, line: 86, type: !185)
!5658 = !DILocalVariable(name: "reg_addr_len", arg: 2, scope: !5653, file: !127, line: 86, type: !185)
!5659 = !DILocalVariable(name: "reg_addr", arg: 3, scope: !5653, file: !127, line: 86, type: !113)
!5660 = !DILocalVariable(name: "mask", arg: 4, scope: !5653, file: !127, line: 86, type: !185)
!5661 = !DILocalVariable(name: "shift", arg: 5, scope: !5653, file: !127, line: 86, type: !185)
!5662 = !DILocalVariable(name: "value", arg: 6, scope: !5653, file: !127, line: 86, type: !185)
!5663 = !DILocalVariable(name: "send_buffer", scope: !5653, file: !127, line: 88, type: !5664)
!5664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 24, elements: !878)
!5665 = !DILocalVariable(name: "receive_buffer", scope: !5653, file: !127, line: 88, type: !5666)
!5666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 8, elements: !251)
!5667 = !DILocation(line: 0, scope: !5653)
!5668 = !DILocation(line: 88, column: 5, scope: !5653)
!5669 = !DILocation(line: 88, column: 19, scope: !5653)
!5670 = !DILocation(line: 88, column: 35, scope: !5653)
!5671 = !DILocation(line: 90, column: 8, scope: !5653)
!5672 = !DILocation(line: 91, column: 26, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5674, file: !127, line: 90, column: 27)
!5674 = distinct !DILexicalBlock(scope: !5653, file: !127, line: 90, column: 8)
!5675 = !DILocation(line: 91, column: 24, scope: !5673)
!5676 = !DILocation(line: 93, column: 8, scope: !5653)
!5677 = !DILocation(line: 94, column: 26, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !127, line: 93, column: 27)
!5679 = distinct !DILexicalBlock(scope: !5653, file: !127, line: 93, column: 8)
!5680 = !DILocation(line: 94, column: 9, scope: !5678)
!5681 = !DILocation(line: 94, column: 24, scope: !5678)
!5682 = !DILocation(line: 95, column: 37, scope: !5678)
!5683 = !DILocation(line: 95, column: 26, scope: !5678)
!5684 = !DILocation(line: 95, column: 24, scope: !5678)
!5685 = !DILocation(line: 96, column: 5, scope: !5678)
!5686 = !DILocation(line: 90, column: 8, scope: !5674)
!5687 = !DILocation(line: 98, column: 5, scope: !5653)
!5688 = !DILocation(line: 100, column: 29, scope: !5653)
!5689 = !DILocation(line: 100, column: 37, scope: !5653)
!5690 = !DILocation(line: 100, column: 34, scope: !5653)
!5691 = !DILocation(line: 100, column: 23, scope: !5653)
!5692 = !DILocation(line: 101, column: 54, scope: !5653)
!5693 = !DILocation(line: 101, column: 60, scope: !5653)
!5694 = !DILocation(line: 101, column: 33, scope: !5653)
!5695 = !DILocation(line: 101, column: 5, scope: !5653)
!5696 = !DILocation(line: 101, column: 31, scope: !5653)
!5697 = !DILocation(line: 103, column: 8, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5653, file: !127, line: 103, column: 8)
!5699 = !DILocation(line: 103, column: 66, scope: !5698)
!5700 = !DILocation(line: 108, column: 1, scope: !5653)
!5701 = distinct !DISubprogram(name: "bl_null_vusb_vr_control", scope: !127, file: !127, line: 163, type: !139, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !126, retainedNodes: !5702)
!5702 = !{!5703}
!5703 = !DILocalVariable(name: "enable", arg: 1, scope: !5701, file: !127, line: 163, type: !141)
!5704 = !DILocation(line: 0, scope: !5701)
!5705 = !DILocation(line: 165, column: 5, scope: !5701)
!5706 = distinct !DISubprogram(name: "bl_pmic_i2c_read", scope: !127, file: !127, line: 129, type: !5707, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !126, retainedNodes: !5709)
!5707 = !DISubroutineType(types: !5708)
!5708 = !{!141, !141, !141, !1558, !1558}
!5709 = !{!5710, !5711, !5712, !5713, !5714, !5723, !5724}
!5710 = !DILocalVariable(name: "i2c_address", arg: 1, scope: !5706, file: !127, line: 129, type: !141)
!5711 = !DILocalVariable(name: "reg_addr_len", arg: 2, scope: !5706, file: !127, line: 129, type: !141)
!5712 = !DILocalVariable(name: "ptr_send", arg: 3, scope: !5706, file: !127, line: 129, type: !1558)
!5713 = !DILocalVariable(name: "ptr_read", arg: 4, scope: !5706, file: !127, line: 129, type: !1558)
!5714 = !DILocalVariable(name: "config", scope: !5706, file: !127, line: 131, type: !5715)
!5715 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_send_to_receive_config_t", file: !130, line: 100, baseType: !5716)
!5716 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !130, line: 94, size: 160, elements: !5717)
!5717 = !{!5718, !5719, !5720, !5721, !5722}
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !5716, file: !130, line: 95, baseType: !185, size: 8)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !5716, file: !130, line: 96, baseType: !1947, size: 32, offset: 32)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !5716, file: !130, line: 97, baseType: !36, size: 32, offset: 64)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !5716, file: !130, line: 98, baseType: !184, size: 32, offset: 96)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !5716, file: !130, line: 99, baseType: !36, size: 32, offset: 128)
!5723 = !DILocalVariable(name: "retry_cnt", scope: !5706, file: !127, line: 132, type: !141)
!5724 = !DILocalVariable(name: "result_read", scope: !5706, file: !127, line: 132, type: !141)
!5725 = !DILocation(line: 0, scope: !5706)
!5726 = !DILocation(line: 131, column: 5, scope: !5706)
!5727 = !DILocation(line: 131, column: 39, scope: !5706)
!5728 = !DILocation(line: 134, column: 31, scope: !5706)
!5729 = !DILocation(line: 135, column: 12, scope: !5706)
!5730 = !DILocation(line: 135, column: 31, scope: !5706)
!5731 = !DILocation(line: 136, column: 33, scope: !5706)
!5732 = !DILocation(line: 136, column: 12, scope: !5706)
!5733 = !DILocation(line: 136, column: 31, scope: !5706)
!5734 = !DILocation(line: 137, column: 12, scope: !5706)
!5735 = !DILocation(line: 137, column: 31, scope: !5706)
!5736 = !DILocation(line: 138, column: 12, scope: !5706)
!5737 = !DILocation(line: 138, column: 31, scope: !5706)
!5738 = !DILocation(line: 140, column: 5, scope: !5706)
!5739 = !DILocation(line: 141, column: 23, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5706, file: !127, line: 140, column: 8)
!5741 = !DILocation(line: 142, column: 18, scope: !5740)
!5742 = !DILocation(line: 143, column: 15, scope: !5706)
!5743 = !DILocation(line: 143, column: 27, scope: !5706)
!5744 = !DILocation(line: 143, column: 33, scope: !5706)
!5745 = !DILocation(line: 143, column: 5, scope: !5740)
!5746 = distinct !{!5746, !5738, !5747}
!5747 = !DILocation(line: 143, column: 53, scope: !5706)
!5748 = !DILocation(line: 147, column: 1, scope: !5706)
!5749 = !DILocation(line: 146, column: 5, scope: !5706)
!5750 = distinct !DISubprogram(name: "bl_pmic_i2c_write", scope: !127, file: !127, line: 150, type: !5751, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !126, retainedNodes: !5753)
!5751 = !DISubroutineType(types: !5752)
!5752 = !{!141, !141, !141, !1558}
!5753 = !{!5754, !5755, !5756, !5757, !5758}
!5754 = !DILocalVariable(name: "i2c_address", arg: 1, scope: !5750, file: !127, line: 150, type: !141)
!5755 = !DILocalVariable(name: "reg_addr_len", arg: 2, scope: !5750, file: !127, line: 150, type: !141)
!5756 = !DILocalVariable(name: "ptr_send", arg: 3, scope: !5750, file: !127, line: 150, type: !1558)
!5757 = !DILocalVariable(name: "retry_cnt", scope: !5750, file: !127, line: 152, type: !141)
!5758 = !DILocalVariable(name: "result_read", scope: !5750, file: !127, line: 152, type: !141)
!5759 = !DILocation(line: 0, scope: !5750)
!5760 = !DILocation(line: 154, column: 5, scope: !5750)
!5761 = !DILocation(line: 155, column: 23, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5750, file: !127, line: 154, column: 8)
!5763 = !DILocation(line: 156, column: 18, scope: !5762)
!5764 = !DILocation(line: 157, column: 15, scope: !5750)
!5765 = !DILocation(line: 157, column: 27, scope: !5750)
!5766 = !DILocation(line: 157, column: 33, scope: !5750)
!5767 = !DILocation(line: 157, column: 5, scope: !5762)
!5768 = distinct !{!5768, !5760, !5769}
!5769 = !DILocation(line: 157, column: 53, scope: !5750)
!5770 = !DILocation(line: 160, column: 5, scope: !5750)
!5771 = distinct !DISubprogram(name: "bl_pmic_get_register_value", scope: !127, file: !127, line: 110, type: !5772, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !126, retainedNodes: !5774)
!5772 = !DISubroutineType(types: !5773)
!5773 = !{!141, !185, !185, !113, !185, !185}
!5774 = !{!5775, !5776, !5777, !5778, !5779, !5780, !5782}
!5775 = !DILocalVariable(name: "i2c_address", arg: 1, scope: !5771, file: !127, line: 110, type: !185)
!5776 = !DILocalVariable(name: "reg_addr_len", arg: 2, scope: !5771, file: !127, line: 110, type: !185)
!5777 = !DILocalVariable(name: "reg_addr", arg: 3, scope: !5771, file: !127, line: 110, type: !113)
!5778 = !DILocalVariable(name: "mask", arg: 4, scope: !5771, file: !127, line: 110, type: !185)
!5779 = !DILocalVariable(name: "shift", arg: 5, scope: !5771, file: !127, line: 110, type: !185)
!5780 = !DILocalVariable(name: "send_buffer", scope: !5771, file: !127, line: 112, type: !5781)
!5781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 16, elements: !511)
!5782 = !DILocalVariable(name: "receive_buffer", scope: !5771, file: !127, line: 112, type: !5666)
!5783 = !DILocation(line: 0, scope: !5771)
!5784 = !DILocation(line: 112, column: 5, scope: !5771)
!5785 = !DILocation(line: 112, column: 19, scope: !5771)
!5786 = !DILocation(line: 112, column: 34, scope: !5771)
!5787 = !DILocation(line: 114, column: 8, scope: !5771)
!5788 = !DILocation(line: 115, column: 26, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5790, file: !127, line: 114, column: 27)
!5790 = distinct !DILexicalBlock(scope: !5771, file: !127, line: 114, column: 8)
!5791 = !DILocation(line: 115, column: 24, scope: !5789)
!5792 = !DILocation(line: 117, column: 8, scope: !5771)
!5793 = !DILocation(line: 118, column: 26, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5795, file: !127, line: 117, column: 27)
!5795 = distinct !DILexicalBlock(scope: !5771, file: !127, line: 117, column: 8)
!5796 = !DILocation(line: 118, column: 9, scope: !5794)
!5797 = !DILocation(line: 118, column: 24, scope: !5794)
!5798 = !DILocation(line: 119, column: 37, scope: !5794)
!5799 = !DILocation(line: 119, column: 26, scope: !5794)
!5800 = !DILocation(line: 119, column: 24, scope: !5794)
!5801 = !DILocation(line: 120, column: 5, scope: !5794)
!5802 = !DILocation(line: 122, column: 5, scope: !5771)
!5803 = !DILocation(line: 124, column: 14, scope: !5771)
!5804 = !DILocation(line: 124, column: 35, scope: !5771)
!5805 = !DILocation(line: 124, column: 32, scope: !5771)
!5806 = !DILocation(line: 124, column: 12, scope: !5771)
!5807 = !DILocation(line: 125, column: 1, scope: !5771)
!5808 = !DILocation(line: 124, column: 5, scope: !5771)
!5809 = distinct !DISubprogram(name: "hal_usbphy_poweron_initialize", scope: !1697, file: !1697, line: 48, type: !4261, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !5810)
!5810 = !{!5811, !5813, !5815, !5817, !5819, !5821, !5823, !5825, !5827, !5829}
!5811 = !DILocalVariable(name: "temp", scope: !5812, file: !1697, line: 51, type: !7)
!5812 = distinct !DILexicalBlock(scope: !5809, file: !1697, line: 51, column: 2)
!5813 = !DILocalVariable(name: "temp", scope: !5814, file: !1697, line: 53, type: !7)
!5814 = distinct !DILexicalBlock(scope: !5809, file: !1697, line: 53, column: 2)
!5815 = !DILocalVariable(name: "temp", scope: !5816, file: !1697, line: 54, type: !7)
!5816 = distinct !DILexicalBlock(scope: !5809, file: !1697, line: 54, column: 2)
!5817 = !DILocalVariable(name: "temp", scope: !5818, file: !1697, line: 55, type: !7)
!5818 = distinct !DILexicalBlock(scope: !5809, file: !1697, line: 55, column: 2)
!5819 = !DILocalVariable(name: "temp", scope: !5820, file: !1697, line: 56, type: !7)
!5820 = distinct !DILexicalBlock(scope: !5809, file: !1697, line: 56, column: 2)
!5821 = !DILocalVariable(name: "temp", scope: !5822, file: !1697, line: 58, type: !7)
!5822 = distinct !DILexicalBlock(scope: !5809, file: !1697, line: 58, column: 2)
!5823 = !DILocalVariable(name: "temp", scope: !5824, file: !1697, line: 61, type: !7)
!5824 = distinct !DILexicalBlock(scope: !5809, file: !1697, line: 61, column: 2)
!5825 = !DILocalVariable(name: "temp", scope: !5826, file: !1697, line: 62, type: !7)
!5826 = distinct !DILexicalBlock(scope: !5809, file: !1697, line: 62, column: 2)
!5827 = !DILocalVariable(name: "temp", scope: !5828, file: !1697, line: 64, type: !7)
!5828 = distinct !DILexicalBlock(scope: !5809, file: !1697, line: 64, column: 2)
!5829 = !DILocalVariable(name: "temp", scope: !5830, file: !1697, line: 66, type: !7)
!5830 = distinct !DILexicalBlock(scope: !5809, file: !1697, line: 66, column: 2)
!5831 = !DILocation(line: 51, column: 2, scope: !5812)
!5832 = !DILocation(line: 0, scope: !5812)
!5833 = !DILocation(line: 53, column: 2, scope: !5814)
!5834 = !DILocation(line: 0, scope: !5814)
!5835 = !DILocation(line: 54, column: 2, scope: !5816)
!5836 = !DILocation(line: 0, scope: !5816)
!5837 = !DILocation(line: 55, column: 2, scope: !5818)
!5838 = !DILocation(line: 0, scope: !5818)
!5839 = !DILocation(line: 56, column: 2, scope: !5820)
!5840 = !DILocation(line: 0, scope: !5820)
!5841 = !DILocation(line: 58, column: 2, scope: !5822)
!5842 = !DILocation(line: 0, scope: !5822)
!5843 = !DILocation(line: 61, column: 2, scope: !5824)
!5844 = !DILocation(line: 0, scope: !5824)
!5845 = !DILocation(line: 62, column: 2, scope: !5826)
!5846 = !DILocation(line: 0, scope: !5826)
!5847 = !DILocation(line: 64, column: 2, scope: !5828)
!5848 = !DILocation(line: 0, scope: !5828)
!5849 = !DILocation(line: 66, column: 2, scope: !5830)
!5850 = !DILocation(line: 0, scope: !5830)
!5851 = !DILocation(line: 68, column: 2, scope: !5809)
!5852 = !DILocation(line: 69, column: 1, scope: !5809)
!5853 = distinct !DISubprogram(name: "hal_usbphy_save_current", scope: !1697, file: !1697, line: 72, type: !4261, scopeLine: 73, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !5854)
!5854 = !{!5855, !5857, !5859, !5861, !5863, !5865, !5867, !5869, !5871, !5873, !5875, !5877, !5879, !5881, !5883, !5885, !5887, !5889}
!5855 = !DILocalVariable(name: "temp", scope: !5856, file: !1697, line: 75, type: !7)
!5856 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 75, column: 2)
!5857 = !DILocalVariable(name: "temp", scope: !5858, file: !1697, line: 76, type: !7)
!5858 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 76, column: 2)
!5859 = !DILocalVariable(name: "temp", scope: !5860, file: !1697, line: 77, type: !7)
!5860 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 77, column: 2)
!5861 = !DILocalVariable(name: "temp", scope: !5862, file: !1697, line: 78, type: !7)
!5862 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 78, column: 2)
!5863 = !DILocalVariable(name: "temp", scope: !5864, file: !1697, line: 80, type: !7)
!5864 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 80, column: 2)
!5865 = !DILocalVariable(name: "temp", scope: !5866, file: !1697, line: 82, type: !7)
!5866 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 82, column: 2)
!5867 = !DILocalVariable(name: "temp", scope: !5868, file: !1697, line: 86, type: !7)
!5868 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 86, column: 2)
!5869 = !DILocalVariable(name: "temp", scope: !5870, file: !1697, line: 87, type: !7)
!5870 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 87, column: 2)
!5871 = !DILocalVariable(name: "temp", scope: !5872, file: !1697, line: 89, type: !7)
!5872 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 89, column: 2)
!5873 = !DILocalVariable(name: "temp", scope: !5874, file: !1697, line: 91, type: !7)
!5874 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 91, column: 2)
!5875 = !DILocalVariable(name: "temp", scope: !5876, file: !1697, line: 92, type: !7)
!5876 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 92, column: 2)
!5877 = !DILocalVariable(name: "temp", scope: !5878, file: !1697, line: 93, type: !7)
!5878 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 93, column: 2)
!5879 = !DILocalVariable(name: "temp", scope: !5880, file: !1697, line: 94, type: !7)
!5880 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 94, column: 2)
!5881 = !DILocalVariable(name: "temp", scope: !5882, file: !1697, line: 95, type: !7)
!5882 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 95, column: 2)
!5883 = !DILocalVariable(name: "temp", scope: !5884, file: !1697, line: 97, type: !7)
!5884 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 97, column: 2)
!5885 = !DILocalVariable(name: "temp", scope: !5886, file: !1697, line: 99, type: !7)
!5886 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 99, column: 2)
!5887 = !DILocalVariable(name: "temp", scope: !5888, file: !1697, line: 103, type: !7)
!5888 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 103, column: 2)
!5889 = !DILocalVariable(name: "temp", scope: !5890, file: !1697, line: 107, type: !7)
!5890 = distinct !DILexicalBlock(scope: !5853, file: !1697, line: 107, column: 2)
!5891 = !DILocation(line: 75, column: 2, scope: !5856)
!5892 = !DILocation(line: 0, scope: !5856)
!5893 = !DILocation(line: 76, column: 2, scope: !5858)
!5894 = !DILocation(line: 0, scope: !5858)
!5895 = !DILocation(line: 77, column: 2, scope: !5860)
!5896 = !DILocation(line: 0, scope: !5860)
!5897 = !DILocation(line: 78, column: 2, scope: !5862)
!5898 = !DILocation(line: 0, scope: !5862)
!5899 = !DILocation(line: 80, column: 2, scope: !5864)
!5900 = !DILocation(line: 0, scope: !5864)
!5901 = !DILocation(line: 82, column: 2, scope: !5866)
!5902 = !DILocation(line: 0, scope: !5866)
!5903 = !DILocation(line: 84, column: 2, scope: !5853)
!5904 = !DILocation(line: 86, column: 2, scope: !5868)
!5905 = !DILocation(line: 0, scope: !5868)
!5906 = !DILocation(line: 87, column: 2, scope: !5870)
!5907 = !DILocation(line: 0, scope: !5870)
!5908 = !DILocation(line: 88, column: 2, scope: !5853)
!5909 = !DILocation(line: 89, column: 2, scope: !5872)
!5910 = !DILocation(line: 0, scope: !5872)
!5911 = !DILocation(line: 90, column: 2, scope: !5853)
!5912 = !DILocation(line: 91, column: 2, scope: !5874)
!5913 = !DILocation(line: 0, scope: !5874)
!5914 = !DILocation(line: 92, column: 2, scope: !5876)
!5915 = !DILocation(line: 0, scope: !5876)
!5916 = !DILocation(line: 93, column: 2, scope: !5878)
!5917 = !DILocation(line: 0, scope: !5878)
!5918 = !DILocation(line: 94, column: 2, scope: !5880)
!5919 = !DILocation(line: 0, scope: !5880)
!5920 = !DILocation(line: 95, column: 2, scope: !5882)
!5921 = !DILocation(line: 0, scope: !5882)
!5922 = !DILocation(line: 97, column: 2, scope: !5884)
!5923 = !DILocation(line: 0, scope: !5884)
!5924 = !DILocation(line: 99, column: 2, scope: !5886)
!5925 = !DILocation(line: 0, scope: !5886)
!5926 = !DILocation(line: 101, column: 2, scope: !5853)
!5927 = !DILocation(line: 103, column: 2, scope: !5888)
!5928 = !DILocation(line: 0, scope: !5888)
!5929 = !DILocation(line: 105, column: 2, scope: !5853)
!5930 = !DILocation(line: 107, column: 2, scope: !5890)
!5931 = !DILocation(line: 0, scope: !5890)
!5932 = !DILocation(line: 108, column: 1, scope: !5853)
!5933 = distinct !DISubprogram(name: "bl_usb_low_power_setting", scope: !1697, file: !1697, line: 110, type: !4261, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1696, retainedNodes: !5934)
!5934 = !{!5935, !5936, !5938}
!5935 = !DILocalVariable(name: "pll_rg", scope: !5933, file: !1697, line: 112, type: !73)
!5936 = !DILocalVariable(name: "temp", scope: !5937, file: !1697, line: 116, type: !115)
!5937 = distinct !DILexicalBlock(scope: !5933, file: !1697, line: 116, column: 5)
!5938 = !DILocalVariable(name: "temp", scope: !5939, file: !1697, line: 126, type: !115)
!5939 = distinct !DILexicalBlock(scope: !5933, file: !1697, line: 126, column: 5)
!5940 = !DILocation(line: 112, column: 5, scope: !5933)
!5941 = !DILocation(line: 112, column: 27, scope: !5933)
!5942 = !DILocation(line: 112, column: 36, scope: !5933)
!5943 = !DILocation(line: 115, column: 5, scope: !5933)
!5944 = !DILocation(line: 116, column: 5, scope: !5937)
!5945 = !DILocation(line: 0, scope: !5937)
!5946 = !DILocation(line: 117, column: 19, scope: !5933)
!5947 = !DILocation(line: 118, column: 19, scope: !5933)
!5948 = !DILocation(line: 119, column: 19, scope: !5933)
!5949 = !DILocation(line: 122, column: 5, scope: !5933)
!5950 = !DILocation(line: 123, column: 5, scope: !5933)
!5951 = !DILocation(line: 126, column: 5, scope: !5939)
!5952 = !DILocation(line: 0, scope: !5939)
!5953 = !DILocation(line: 127, column: 21, scope: !5933)
!5954 = !DILocation(line: 127, column: 19, scope: !5933)
!5955 = !DILocation(line: 128, column: 19, scope: !5933)
!5956 = !DILocation(line: 129, column: 19, scope: !5933)
!5957 = !DILocation(line: 130, column: 2, scope: !5933)
!5958 = !DILocation(line: 131, column: 1, scope: !5933)
!5959 = distinct !DISubprogram(name: "bl_mt6385_init", scope: !1756, file: !1756, line: 38, type: !5960, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1755, retainedNodes: !5962)
!5960 = !DISubroutineType(types: !5961)
!5961 = !{!7}
!5962 = !{!5963}
!5963 = !DILocalVariable(name: "chip_id", scope: !5959, file: !1756, line: 40, type: !141)
!5964 = !DILocation(line: 43, column: 12, scope: !5959)
!5965 = !DILocation(line: 0, scope: !5959)
!5966 = !DILocation(line: 44, column: 13, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5959, file: !1756, line: 44, column: 5)
!5968 = !DILocation(line: 44, column: 5, scope: !5959)
!5969 = !DILocation(line: 47, column: 3, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5967, file: !1756, line: 45, column: 2)
!5971 = !DILocation(line: 49, column: 3, scope: !5970)
!5972 = !DILocation(line: 50, column: 3, scope: !5970)
!5973 = !DILocation(line: 0, scope: !5967)
!5974 = !DILocation(line: 55, column: 1, scope: !5959)
!5975 = distinct !DISubprogram(name: "bl_mt6385_vcore_set_1p3v", scope: !1756, file: !1756, line: 57, type: !4261, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1755, retainedNodes: !5976)
!5976 = !{!5977, !5981}
!5977 = !DILocalVariable(name: "vcbuck_voval", scope: !5975, file: !1756, line: 61, type: !5978)
!5978 = !DICompositeType(tag: DW_TAG_array_type, baseType: !20, size: 224, elements: !5979)
!5979 = !{!5980}
!5980 = !DISubrange(count: 7)
!5981 = !DILocalVariable(name: "vc_ldo_vosel", scope: !5975, file: !1756, line: 62, type: !5978)
!5982 = !DILocation(line: 0, scope: !5975)
!5983 = !DILocation(line: 64, column: 5, scope: !5975)
!5984 = !DILocation(line: 65, column: 5, scope: !5975)
!5985 = !DILocation(line: 67, column: 5, scope: !5975)
!5986 = !DILocation(line: 71, column: 5, scope: !5975)
!5987 = !DILocation(line: 73, column: 5, scope: !5975)
!5988 = !DILocation(line: 77, column: 5, scope: !5975)
!5989 = !DILocation(line: 79, column: 5, scope: !5975)
!5990 = !DILocation(line: 82, column: 5, scope: !5975)
!5991 = !DILocation(line: 83, column: 5, scope: !5975)
!5992 = !DILocation(line: 84, column: 5, scope: !5975)
!5993 = !DILocation(line: 85, column: 1, scope: !5975)
!5994 = distinct !DISubprogram(name: "bl_mt6385_vusb_vr_control", scope: !1756, file: !1756, line: 87, type: !139, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1755, retainedNodes: !5995)
!5995 = !{!5996, !5997}
!5996 = !DILocalVariable(name: "enable", arg: 1, scope: !5994, file: !1756, line: 87, type: !141)
!5997 = !DILocalVariable(name: "poll_stb_b", scope: !5994, file: !1756, line: 89, type: !20)
!5998 = !DILocation(line: 0, scope: !5994)
!5999 = !DILocation(line: 91, column: 8, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5994, file: !1756, line: 91, column: 8)
!6001 = !DILocation(line: 95, column: 5, scope: !5994)
!6002 = !DILocation(line: 96, column: 5, scope: !5994)
!6003 = !DILocation(line: 100, column: 2, scope: !5994)
!6004 = !DILocation(line: 101, column: 2, scope: !5994)
!6005 = !DILocation(line: 104, column: 16, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !5994, file: !1756, line: 102, column: 2)
!6007 = !DILocation(line: 101, column: 18, scope: !5994)
!6008 = distinct !{!6008, !6004, !6009}
!6009 = !DILocation(line: 105, column: 2, scope: !5994)
!6010 = !DILocation(line: 108, column: 5, scope: !5994)
!6011 = !DILocation(line: 109, column: 5, scope: !5994)
!6012 = !DILocation(line: 110, column: 1, scope: !5994)
!6013 = distinct !DISubprogram(name: "bl_mt6385_vmc_vr_control", scope: !1756, file: !1756, line: 112, type: !139, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1755, retainedNodes: !6014)
!6014 = !{!6015, !6016}
!6015 = !DILocalVariable(name: "enable", arg: 1, scope: !6013, file: !1756, line: 112, type: !141)
!6016 = !DILocalVariable(name: "poll_stb_b", scope: !6013, file: !1756, line: 114, type: !20)
!6017 = !DILocation(line: 0, scope: !6013)
!6018 = !DILocation(line: 116, column: 8, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6013, file: !1756, line: 116, column: 8)
!6020 = !DILocation(line: 120, column: 5, scope: !6013)
!6021 = !DILocation(line: 121, column: 5, scope: !6013)
!6022 = !DILocation(line: 124, column: 5, scope: !6013)
!6023 = !DILocation(line: 125, column: 5, scope: !6013)
!6024 = !DILocation(line: 126, column: 22, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6013, file: !1756, line: 125, column: 29)
!6026 = !DILocation(line: 125, column: 23, scope: !6013)
!6027 = distinct !{!6027, !6023, !6028}
!6028 = !DILocation(line: 127, column: 5, scope: !6013)
!6029 = !DILocation(line: 130, column: 5, scope: !6013)
!6030 = !DILocation(line: 131, column: 5, scope: !6013)
!6031 = !DILocation(line: 132, column: 1, scope: !6013)
!6032 = distinct !DISubprogram(name: "bl_max14745_init", scope: !1758, file: !1758, line: 38, type: !5960, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1757, retainedNodes: !6033)
!6033 = !{!6034}
!6034 = !DILocalVariable(name: "chip_id", scope: !6032, file: !1758, line: 40, type: !141)
!6035 = !DILocation(line: 42, column: 12, scope: !6032)
!6036 = !DILocation(line: 0, scope: !6032)
!6037 = !DILocation(line: 44, column: 13, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6032, file: !1758, line: 44, column: 5)
!6039 = !DILocation(line: 44, column: 5, scope: !6032)
!6040 = !DILocation(line: 47, column: 3, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6038, file: !1758, line: 45, column: 2)
!6042 = !DILocation(line: 48, column: 3, scope: !6041)
!6043 = !DILocation(line: 0, scope: !6038)
!6044 = !DILocation(line: 53, column: 1, scope: !6032)
!6045 = distinct !DISubprogram(name: "bl_max14745_vcore_set_1p3v", scope: !1758, file: !1758, line: 55, type: !4261, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1757, retainedNodes: !4354)
!6046 = !DILocation(line: 59, column: 2, scope: !6045)
!6047 = !DILocation(line: 60, column: 1, scope: !6045)
!6048 = distinct !DISubprogram(name: "bl_max14745_vusb_vr_control", scope: !1758, file: !1758, line: 62, type: !139, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1757, retainedNodes: !6049)
!6049 = !{!6050}
!6050 = !DILocalVariable(name: "enable", arg: 1, scope: !6048, file: !1758, line: 62, type: !141)
!6051 = !DILocation(line: 0, scope: !6048)
!6052 = !DILocation(line: 65, column: 2, scope: !6048)
!6053 = !DILocation(line: 66, column: 1, scope: !6048)
!6054 = distinct !DISubprogram(name: "bl_max14745_vmc_vr_control", scope: !1758, file: !1758, line: 68, type: !139, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1757, retainedNodes: !6055)
!6055 = !{!6056}
!6056 = !DILocalVariable(name: "enable", arg: 1, scope: !6054, file: !1758, line: 68, type: !141)
!6057 = !DILocation(line: 0, scope: !6054)
!6058 = !DILocation(line: 71, column: 2, scope: !6054)
!6059 = !DILocation(line: 72, column: 1, scope: !6054)
!6060 = distinct !DISubprogram(name: "wdt_set_length", scope: !1760, file: !1760, line: 40, type: !4734, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !6061)
!6061 = !{!6062, !6063}
!6062 = !DILocalVariable(name: "seconds", arg: 1, scope: !6060, file: !1760, line: 40, type: !36)
!6063 = !DILocalVariable(name: "length_register_value", scope: !6060, file: !1760, line: 42, type: !36)
!6064 = !DILocation(line: 0, scope: !6060)
!6065 = !DILocation(line: 44, column: 38, scope: !6060)
!6066 = !DILocation(line: 44, column: 47, scope: !6060)
!6067 = !DILocation(line: 45, column: 27, scope: !6060)
!6068 = !DILocation(line: 46, column: 27, scope: !6060)
!6069 = !DILocation(line: 49, column: 50, scope: !6060)
!6070 = !DILocation(line: 52, column: 51, scope: !6060)
!6071 = !DILocation(line: 53, column: 1, scope: !6060)
!6072 = distinct !DISubprogram(name: "wdt_set_mode_register_by_bit", scope: !1760, file: !1760, line: 56, type: !5422, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !6073)
!6073 = !{!6074, !6075, !6076}
!6074 = !DILocalVariable(name: "bit_offset", arg: 1, scope: !6072, file: !1760, line: 56, type: !36)
!6075 = !DILocalVariable(name: "value", arg: 2, scope: !6072, file: !1760, line: 56, type: !36)
!6076 = !DILocalVariable(name: "mode_register_value", scope: !6072, file: !1760, line: 58, type: !36)
!6077 = !DILocation(line: 0, scope: !6072)
!6078 = !DILocation(line: 60, column: 27, scope: !6072)
!6079 = !DILocation(line: 62, column: 11, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6072, file: !1760, line: 62, column: 9)
!6081 = !DILocation(line: 0, scope: !6080)
!6082 = !DILocation(line: 62, column: 9, scope: !6072)
!6083 = !DILocation(line: 68, column: 25, scope: !6072)
!6084 = !DILocation(line: 69, column: 25, scope: !6072)
!6085 = !DILocation(line: 70, column: 47, scope: !6072)
!6086 = !DILocation(line: 73, column: 5, scope: !6072)
!6087 = !DILocation(line: 74, column: 1, scope: !6072)
!6088 = distinct !DISubprogram(name: "hal_wdt_init", scope: !1760, file: !1760, line: 75, type: !6089, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !6097)
!6089 = !DISubroutineType(types: !6090)
!6090 = !{!4272, !6091}
!6091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6092, size: 32)
!6092 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_wdt_config_t", file: !1640, line: 228, baseType: !6093)
!6093 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1640, line: 225, size: 64, elements: !6094)
!6094 = !{!6095, !6096}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6093, file: !1640, line: 226, baseType: !4269, size: 32)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "seconds", scope: !6093, file: !1640, line: 227, baseType: !36, size: 32, offset: 32)
!6097 = !{!6098}
!6098 = !DILocalVariable(name: "wdt_config", arg: 1, scope: !6088, file: !1760, line: 75, type: !6091)
!6099 = !DILocation(line: 0, scope: !6088)
!6100 = !DILocation(line: 78, column: 20, scope: !6101)
!6101 = distinct !DILexicalBlock(scope: !6088, file: !1760, line: 78, column: 9)
!6102 = !DILocation(line: 78, column: 28, scope: !6101)
!6103 = !DILocation(line: 78, column: 66, scope: !6101)
!6104 = !DILocation(line: 78, column: 51, scope: !6101)
!6105 = !DILocation(line: 78, column: 9, scope: !6088)
!6106 = !DILocation(line: 82, column: 21, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6088, file: !1760, line: 82, column: 9)
!6108 = !DILocation(line: 82, column: 29, scope: !6107)
!6109 = !DILocation(line: 82, column: 9, scope: !6088)
!6110 = !DILocation(line: 87, column: 5, scope: !6088)
!6111 = !DILocation(line: 90, column: 60, scope: !6088)
!6112 = !DILocation(line: 90, column: 5, scope: !6088)
!6113 = !DILocation(line: 92, column: 5, scope: !6088)
!6114 = !DILocation(line: 93, column: 1, scope: !6088)
!6115 = distinct !DISubprogram(name: "hal_wdt_enable", scope: !1760, file: !1760, line: 95, type: !6116, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !6118)
!6116 = !DISubroutineType(types: !6117)
!6117 = !{!4272, !36}
!6118 = !{!6119}
!6119 = !DILocalVariable(name: "magic", arg: 1, scope: !6115, file: !1760, line: 95, type: !36)
!6120 = !DILocation(line: 0, scope: !6115)
!6121 = !DILocation(line: 97, column: 30, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6115, file: !1760, line: 97, column: 9)
!6123 = !DILocation(line: 97, column: 9, scope: !6115)
!6124 = !DILocation(line: 101, column: 5, scope: !6115)
!6125 = !DILocation(line: 102, column: 5, scope: !6115)
!6126 = !DILocation(line: 104, column: 51, scope: !6115)
!6127 = !DILocation(line: 106, column: 5, scope: !6115)
!6128 = !DILocation(line: 107, column: 1, scope: !6115)
!6129 = distinct !DISubprogram(name: "hal_wdt_feed", scope: !1760, file: !1760, line: 109, type: !6116, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !6130)
!6130 = !{!6131}
!6131 = !DILocalVariable(name: "magic", arg: 1, scope: !6129, file: !1760, line: 109, type: !36)
!6132 = !DILocation(line: 0, scope: !6129)
!6133 = !DILocation(line: 111, column: 51, scope: !6129)
!6134 = !DILocation(line: 113, column: 5, scope: !6129)
!6135 = !DILocation(line: 114, column: 5, scope: !6129)
!6136 = distinct !DISubprogram(name: "hal_wdt_software_reset", scope: !1760, file: !1760, line: 117, type: !6137, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1759, retainedNodes: !4354)
!6137 = !DISubroutineType(types: !6138)
!6138 = !{!4272}
!6139 = !DILocation(line: 119, column: 50, scope: !6136)
!6140 = !DILocation(line: 120, column: 5, scope: !6136)
!6141 = distinct !DISubprogram(name: "bl_alloc", scope: !145, file: !145, line: 94, type: !197, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6142)
!6142 = !{!6143, !6144}
!6143 = !DILocalVariable(name: "p", arg: 1, scope: !6141, file: !145, line: 94, type: !199)
!6144 = !DILocalVariable(name: "size", arg: 2, scope: !6141, file: !145, line: 94, type: !200)
!6145 = !DILocation(line: 0, scope: !6141)
!6146 = !DILocation(line: 96, column: 5, scope: !6141)
!6147 = !DILocation(line: 97, column: 64, scope: !6141)
!6148 = !DILocation(line: 97, column: 5, scope: !6141)
!6149 = !DILocation(line: 98, column: 13, scope: !6141)
!6150 = !DILocation(line: 98, column: 5, scope: !6141)
!6151 = !DILocation(line: 100, column: 29, scope: !6152)
!6152 = distinct !DILexicalBlock(scope: !6141, file: !145, line: 98, column: 31)
!6153 = !DILocation(line: 101, column: 13, scope: !6152)
!6154 = !DILocation(line: 103, column: 29, scope: !6152)
!6155 = !DILocation(line: 104, column: 13, scope: !6152)
!6156 = !DILocation(line: 106, column: 29, scope: !6152)
!6157 = !DILocation(line: 107, column: 13, scope: !6152)
!6158 = !DILocation(line: 109, column: 30, scope: !6152)
!6159 = !DILocation(line: 110, column: 13, scope: !6152)
!6160 = !DILocation(line: 112, column: 13, scope: !6152)
!6161 = !DILocation(line: 113, column: 13, scope: !6152)
!6162 = !DILocation(line: 0, scope: !6152)
!6163 = !DILocation(line: 115, column: 1, scope: !6141)
!6164 = distinct !DISubprogram(name: "bl_free", scope: !145, file: !145, line: 116, type: !206, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6165)
!6165 = !{!6166, !6167}
!6166 = !DILocalVariable(name: "p", arg: 1, scope: !6164, file: !145, line: 116, type: !199)
!6167 = !DILocalVariable(name: "address", arg: 2, scope: !6164, file: !145, line: 116, type: !199)
!6168 = !DILocation(line: 0, scope: !6164)
!6169 = !DILocation(line: 118, column: 5, scope: !6164)
!6170 = !DILocation(line: 119, column: 1, scope: !6164)
!6171 = distinct !DISubprogram(name: "bl_fota_compress_update", scope: !145, file: !145, line: 123, type: !6172, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6175)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{!6174, !36}
!6174 = !DIDerivedType(tag: DW_TAG_typedef, name: "bl_fota_status_t", file: !148, line: 112, baseType: !147)
!6175 = !{!6176, !6177, !6178, !6179, !6180}
!6176 = !DILocalVariable(name: "bin_number", arg: 1, scope: !6171, file: !145, line: 123, type: !36)
!6177 = !DILocalVariable(name: "ret", scope: !6171, file: !145, line: 125, type: !20)
!6178 = !DILocalVariable(name: "lzma_source", scope: !6171, file: !145, line: 126, type: !36)
!6179 = !DILocalVariable(name: "lzma_dest_addr", scope: !6171, file: !145, line: 127, type: !36)
!6180 = !DILocalVariable(name: "lzma_dest_size", scope: !6171, file: !145, line: 128, type: !36)
!6181 = !DILocation(line: 0, scope: !6171)
!6182 = !DILocation(line: 129, column: 19, scope: !6171)
!6183 = !DILocation(line: 129, column: 89, scope: !6171)
!6184 = !DILocation(line: 129, column: 50, scope: !6171)
!6185 = !DILocation(line: 130, column: 59, scope: !6171)
!6186 = !DILocation(line: 131, column: 59, scope: !6171)
!6187 = !DILocation(line: 133, column: 80, scope: !6171)
!6188 = !DILocation(line: 133, column: 5, scope: !6171)
!6189 = !DILocation(line: 134, column: 132, scope: !6171)
!6190 = !DILocation(line: 134, column: 5, scope: !6171)
!6191 = !DILocation(line: 135, column: 132, scope: !6171)
!6192 = !DILocation(line: 135, column: 5, scope: !6171)
!6193 = !DILocation(line: 136, column: 132, scope: !6171)
!6194 = !DILocation(line: 136, column: 5, scope: !6171)
!6195 = !DILocation(line: 137, column: 132, scope: !6171)
!6196 = !DILocation(line: 137, column: 5, scope: !6171)
!6197 = !DILocation(line: 139, column: 5, scope: !6171)
!6198 = !DILocation(line: 140, column: 5, scope: !6171)
!6199 = !DILocation(line: 141, column: 5, scope: !6171)
!6200 = !DILocation(line: 144, column: 42, scope: !6171)
!6201 = !DILocation(line: 144, column: 41, scope: !6171)
!6202 = !DILocation(line: 144, column: 15, scope: !6171)
!6203 = !DILocation(line: 146, column: 39, scope: !6171)
!6204 = !DILocation(line: 146, column: 38, scope: !6171)
!6205 = !DILocation(line: 146, column: 15, scope: !6171)
!6206 = !DILocation(line: 143, column: 11, scope: !6171)
!6207 = !DILocation(line: 148, column: 14, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6171, file: !145, line: 148, column: 10)
!6209 = !DILocation(line: 148, column: 10, scope: !6171)
!6210 = !DILocation(line: 149, column: 9, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6208, file: !145, line: 148, column: 26)
!6212 = !DILocation(line: 150, column: 9, scope: !6211)
!6213 = !DILocation(line: 151, column: 9, scope: !6211)
!6214 = !DILocation(line: 154, column: 1, scope: !6171)
!6215 = distinct !DISubprogram(name: "bl_fota_get_block_size_length", scope: !145, file: !145, line: 157, type: !6216, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6218)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{!36, !36}
!6218 = !{!6219, !6220, !6221}
!6219 = !DILocalVariable(name: "addr", arg: 1, scope: !6215, file: !145, line: 157, type: !36)
!6220 = !DILocalVariable(name: "block_size", scope: !6215, file: !145, line: 160, type: !36)
!6221 = !DILocalVariable(name: "block_index", scope: !6215, file: !145, line: 161, type: !36)
!6222 = !DILocation(line: 0, scope: !6215)
!6223 = !DILocation(line: 163, column: 19, scope: !6215)
!6224 = !DILocation(line: 164, column: 21, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6215, file: !145, line: 164, column: 9)
!6226 = !DILocation(line: 164, column: 9, scope: !6215)
!6227 = !DILocation(line: 165, column: 9, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6225, file: !145, line: 164, column: 45)
!6229 = !DILocation(line: 166, column: 9, scope: !6228)
!6230 = !DILocation(line: 168, column: 18, scope: !6215)
!6231 = !DILocation(line: 170, column: 5, scope: !6215)
!6232 = !DILocation(line: 172, column: 5, scope: !6215)
!6233 = !DILocation(line: 173, column: 1, scope: !6215)
!6234 = distinct !DISubprogram(name: "bl_fota_write_update_info", scope: !145, file: !145, line: 214, type: !6235, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6237)
!6235 = !DISubroutineType(types: !6236)
!6236 = !{!6174, !199, !16}
!6237 = !{!6238, !6239, !6240, !6241, !6242, !6244, !6245}
!6238 = !DILocalVariable(name: "buffer", arg: 1, scope: !6234, file: !145, line: 214, type: !199)
!6239 = !DILocalVariable(name: "buffer_size", arg: 2, scope: !6234, file: !145, line: 214, type: !16)
!6240 = !DILocalVariable(name: "flash_status", scope: !6234, file: !145, line: 216, type: !1402)
!6241 = !DILocalVariable(name: "marker_addr", scope: !6234, file: !145, line: 217, type: !36)
!6242 = !DILocalVariable(name: "flash_block_size_enum", scope: !6234, file: !145, line: 218, type: !6243)
!6243 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !161, line: 127, baseType: !171)
!6244 = !DILocalVariable(name: "flash_block_size", scope: !6234, file: !145, line: 219, type: !36)
!6245 = !DILocalVariable(name: "erase_addr", scope: !6234, file: !145, line: 220, type: !36)
!6246 = !DILocation(line: 0, scope: !6234)
!6247 = !DILocation(line: 217, column: 28, scope: !6234)
!6248 = !DILocation(line: 217, column: 61, scope: !6234)
!6249 = !DILocation(line: 223, column: 33, scope: !6234)
!6250 = !DILocation(line: 217, column: 59, scope: !6234)
!6251 = !DILocation(line: 217, column: 83, scope: !6234)
!6252 = !DILocation(line: 223, column: 31, scope: !6234)
!6253 = !DILocation(line: 226, column: 29, scope: !6234)
!6254 = !DILocation(line: 227, column: 5, scope: !6234)
!6255 = !DILocation(line: 241, column: 30, scope: !6234)
!6256 = !DILocation(line: 242, column: 5, scope: !6234)
!6257 = !DILocation(line: 243, column: 20, scope: !6234)
!6258 = !DILocation(line: 244, column: 22, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6234, file: !145, line: 244, column: 9)
!6260 = !DILocation(line: 244, column: 9, scope: !6234)
!6261 = !DILocation(line: 245, column: 9, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6259, file: !145, line: 244, column: 46)
!6263 = !DILocation(line: 246, column: 9, scope: !6262)
!6264 = !DILocation(line: 247, column: 9, scope: !6262)
!6265 = !DILocation(line: 249, column: 20, scope: !6234)
!6266 = !DILocation(line: 250, column: 22, scope: !6267)
!6267 = distinct !DILexicalBlock(scope: !6234, file: !145, line: 250, column: 9)
!6268 = !DILocation(line: 250, column: 9, scope: !6234)
!6269 = !DILocation(line: 251, column: 9, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !6267, file: !145, line: 250, column: 46)
!6271 = !DILocation(line: 252, column: 9, scope: !6270)
!6272 = !DILocation(line: 253, column: 9, scope: !6270)
!6273 = !DILocation(line: 255, column: 5, scope: !6234)
!6274 = !DILocation(line: 257, column: 5, scope: !6234)
!6275 = !DILocation(line: 259, column: 1, scope: !6234)
!6276 = distinct !DISubprogram(name: "bl_fota_write_marker", scope: !145, file: !145, line: 262, type: !6277, scopeLine: 263, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6279)
!6277 = !DISubroutineType(types: !6278)
!6278 = !{!6174}
!6279 = !{!6280, !6281, !6292}
!6280 = !DILocalVariable(name: "status", scope: !6276, file: !145, line: 264, type: !6174)
!6281 = !DILocalVariable(name: "ui", scope: !6276, file: !145, line: 265, type: !6282)
!6282 = !DIDerivedType(tag: DW_TAG_typedef, name: "bl_fota_update_info_t", file: !148, line: 67, baseType: !6283)
!6283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !148, line: 53, size: 512, elements: !6284)
!6284 = !{!6285, !6286, !6287, !6288, !6289, !6291}
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !6283, file: !148, line: 55, baseType: !36, size: 32)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "m_error_code", scope: !6283, file: !148, line: 57, baseType: !36, size: 32, offset: 32)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "m_behavior", scope: !6283, file: !148, line: 59, baseType: !36, size: 32, offset: 64)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "m_is_read", scope: !6283, file: !148, line: 61, baseType: !36, size: 32, offset: 96)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "m_marker", scope: !6283, file: !148, line: 63, baseType: !6290, size: 256, offset: 128)
!6290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !35, size: 256, elements: !976)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6283, file: !148, line: 65, baseType: !481, size: 128, offset: 384)
!6292 = !DILocalVariable(name: "i", scope: !6276, file: !145, line: 266, type: !36)
!6293 = !DILocation(line: 0, scope: !6276)
!6294 = !DILocation(line: 265, column: 5, scope: !6276)
!6295 = !DILocation(line: 265, column: 27, scope: !6276)
!6296 = !DILocation(line: 269, column: 5, scope: !6276)
!6297 = !DILocation(line: 270, column: 8, scope: !6276)
!6298 = !DILocation(line: 270, column: 14, scope: !6276)
!6299 = !DILocation(line: 271, column: 8, scope: !6276)
!6300 = !DILocation(line: 271, column: 21, scope: !6276)
!6301 = !DILocation(line: 272, column: 8, scope: !6276)
!6302 = !DILocation(line: 272, column: 18, scope: !6276)
!6303 = !DILocation(line: 273, column: 5, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6276, file: !145, line: 273, column: 5)
!6305 = !DILocation(line: 274, column: 37, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6307, file: !145, line: 273, column: 51)
!6307 = distinct !DILexicalBlock(scope: !6304, file: !145, line: 273, column: 5)
!6308 = !DILocation(line: 274, column: 42, scope: !6306)
!6309 = !DILocation(line: 273, column: 47, scope: !6307)
!6310 = !DILocation(line: 273, column: 19, scope: !6307)
!6311 = distinct !{!6311, !6303, !6312}
!6312 = !DILocation(line: 275, column: 5, scope: !6304)
!6313 = !DILocation(line: 278, column: 14, scope: !6276)
!6314 = !DILocation(line: 281, column: 1, scope: !6276)
!6315 = !DILocation(line: 280, column: 5, scope: !6276)
!6316 = distinct !DISubprogram(name: "bl_fota_write_update_status", scope: !145, file: !145, line: 286, type: !6317, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6319)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{!6174, !6174}
!6319 = !{!6320, !6321, !6322, !6323}
!6320 = !DILocalVariable(name: "update_status", arg: 1, scope: !6316, file: !145, line: 286, type: !6174)
!6321 = !DILocalVariable(name: "status", scope: !6316, file: !145, line: 288, type: !6174)
!6322 = !DILocalVariable(name: "ui", scope: !6316, file: !145, line: 289, type: !6282)
!6323 = !DILocalVariable(name: "i", scope: !6316, file: !145, line: 290, type: !36)
!6324 = !DILocation(line: 0, scope: !6316)
!6325 = !DILocation(line: 289, column: 5, scope: !6316)
!6326 = !DILocation(line: 289, column: 27, scope: !6316)
!6327 = !DILocation(line: 293, column: 5, scope: !6316)
!6328 = !DILocation(line: 295, column: 5, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6316, file: !145, line: 295, column: 5)
!6330 = !DILocation(line: 296, column: 37, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !145, line: 295, column: 51)
!6332 = distinct !DILexicalBlock(scope: !6329, file: !145, line: 295, column: 5)
!6333 = !DILocation(line: 296, column: 42, scope: !6331)
!6334 = !DILocation(line: 295, column: 47, scope: !6332)
!6335 = !DILocation(line: 295, column: 19, scope: !6332)
!6336 = distinct !{!6336, !6328, !6337}
!6337 = !DILocation(line: 297, column: 5, scope: !6329)
!6338 = !DILocation(line: 298, column: 8, scope: !6316)
!6339 = !DILocation(line: 298, column: 21, scope: !6316)
!6340 = !DILocation(line: 300, column: 14, scope: !6316)
!6341 = !DILocation(line: 303, column: 1, scope: !6316)
!6342 = !DILocation(line: 302, column: 5, scope: !6316)
!6343 = !DILocation(line: 0, scope: !210)
!6344 = !DILocation(line: 315, column: 20, scope: !210)
!6345 = !DILocation(line: 322, column: 19, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6347, file: !145, line: 322, column: 5)
!6347 = distinct !DILexicalBlock(scope: !210, file: !145, line: 322, column: 5)
!6348 = !DILocation(line: 322, column: 5, scope: !6347)
!6349 = !DILocation(line: 323, column: 27, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6346, file: !145, line: 322, column: 33)
!6351 = !DILocation(line: 323, column: 24, scope: !6350)
!6352 = !DILocation(line: 322, column: 29, scope: !6346)
!6353 = distinct !{!6353, !6348, !6354}
!6354 = !DILocation(line: 324, column: 5, scope: !6347)
!6355 = !DILocation(line: 325, column: 34, scope: !210)
!6356 = !DILocation(line: 325, column: 32, scope: !210)
!6357 = !DILocation(line: 325, column: 51, scope: !210)
!6358 = !DILocation(line: 325, column: 20, scope: !210)
!6359 = !DILocation(line: 328, column: 5, scope: !210)
!6360 = !DILocation(line: 331, column: 27, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !210, file: !145, line: 331, column: 9)
!6362 = !DILocation(line: 331, column: 41, scope: !6361)
!6363 = !DILocation(line: 331, column: 24, scope: !6361)
!6364 = !DILocation(line: 331, column: 9, scope: !210)
!6365 = !DILocation(line: 332, column: 23, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6361, file: !145, line: 331, column: 49)
!6367 = !DILocation(line: 333, column: 5, scope: !6366)
!6368 = !DILocation(line: 335, column: 5, scope: !210)
!6369 = !DILocation(line: 337, column: 1, scope: !210)
!6370 = distinct !DISubprogram(name: "bl_fota_do_update", scope: !145, file: !145, line: 339, type: !6277, scopeLine: 340, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6371)
!6371 = !{!6372, !6373, !6374, !6375, !6376, !6377, !6378, !6379, !6380, !6381, !6382, !6383, !6384, !6385}
!6372 = !DILocalVariable(name: "status", scope: !6370, file: !145, line: 341, type: !1402)
!6373 = !DILocalVariable(name: "addr", scope: !6370, file: !145, line: 342, type: !36)
!6374 = !DILocalVariable(name: "length", scope: !6370, file: !145, line: 343, type: !36)
!6375 = !DILocalVariable(name: "bin_offset", scope: !6370, file: !145, line: 344, type: !36)
!6376 = !DILocalVariable(name: "p", scope: !6370, file: !145, line: 345, type: !36)
!6377 = !DILocalVariable(name: "the_block_size", scope: !6370, file: !145, line: 346, type: !36)
!6378 = !DILocalVariable(name: "flash_block_size_enum", scope: !6370, file: !145, line: 347, type: !6243)
!6379 = !DILocalVariable(name: "the_page_size", scope: !6370, file: !145, line: 348, type: !36)
!6380 = !DILocalVariable(name: "page_to_write", scope: !6370, file: !145, line: 349, type: !36)
!6381 = !DILocalVariable(name: "i", scope: !6370, file: !145, line: 350, type: !20)
!6382 = !DILocalVariable(name: "os_bin_raw_seek", scope: !6370, file: !145, line: 351, type: !36)
!6383 = !DILocalVariable(name: "os_bin_raw_end", scope: !6370, file: !145, line: 352, type: !36)
!6384 = !DILocalVariable(name: "p_buffer", scope: !6370, file: !145, line: 353, type: !199)
!6385 = !DILocalVariable(name: "fota_bin_raw_seek", scope: !6370, file: !145, line: 358, type: !36)
!6386 = !DILocation(line: 0, scope: !6370)
!6387 = !DILocation(line: 342, column: 49, scope: !6370)
!6388 = !DILocation(line: 343, column: 51, scope: !6370)
!6389 = !DILocation(line: 344, column: 55, scope: !6370)
!6390 = !DILocation(line: 361, column: 30, scope: !6370)
!6391 = !DILocation(line: 361, column: 28, scope: !6370)
!6392 = !DILocation(line: 362, column: 27, scope: !6370)
!6393 = !DILocation(line: 362, column: 42, scope: !6370)
!6394 = !DILocation(line: 362, column: 40, scope: !6370)
!6395 = !DILocation(line: 364, column: 29, scope: !6370)
!6396 = !DILocation(line: 365, column: 22, scope: !6370)
!6397 = !DILocation(line: 375, column: 25, scope: !6370)
!6398 = !DILocation(line: 375, column: 71, scope: !6370)
!6399 = !DILocation(line: 378, column: 28, scope: !6400)
!6400 = distinct !DILexicalBlock(scope: !6401, file: !145, line: 378, column: 5)
!6401 = distinct !DILexicalBlock(scope: !6370, file: !145, line: 378, column: 5)
!6402 = !DILocation(line: 378, column: 5, scope: !6401)
!6403 = !DILocation(line: 375, column: 56, scope: !6370)
!6404 = !DILocation(line: 375, column: 69, scope: !6370)
!6405 = !DILocation(line: 381, column: 18, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6400, file: !145, line: 378, column: 49)
!6407 = !DILocation(line: 382, column: 21, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6406, file: !145, line: 382, column: 14)
!6409 = !DILocation(line: 382, column: 14, scope: !6406)
!6410 = !DILocation(line: 389, column: 9, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6406, file: !145, line: 389, column: 9)
!6412 = !DILocation(line: 410, column: 22, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !145, line: 389, column: 79)
!6414 = distinct !DILexicalBlock(scope: !6411, file: !145, line: 389, column: 9)
!6415 = !DILocation(line: 411, column: 24, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6413, file: !145, line: 411, column: 17)
!6417 = !DILocation(line: 411, column: 17, scope: !6413)
!6418 = !DILocation(line: 412, column: 17, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6416, file: !145, line: 411, column: 48)
!6420 = !DILocation(line: 413, column: 17, scope: !6419)
!6421 = !DILocation(line: 414, column: 17, scope: !6419)
!6422 = !DILocation(line: 420, column: 22, scope: !6413)
!6423 = !DILocation(line: 421, column: 24, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6413, file: !145, line: 421, column: 17)
!6425 = !DILocation(line: 421, column: 17, scope: !6413)
!6426 = !DILocation(line: 422, column: 17, scope: !6427)
!6427 = distinct !DILexicalBlock(scope: !6424, file: !145, line: 421, column: 48)
!6428 = !DILocation(line: 423, column: 17, scope: !6427)
!6429 = !DILocation(line: 424, column: 17, scope: !6427)
!6430 = !DILocation(line: 416, column: 31, scope: !6413)
!6431 = !DILocation(line: 426, column: 29, scope: !6413)
!6432 = !DILocation(line: 389, column: 75, scope: !6414)
!6433 = !DILocation(line: 389, column: 52, scope: !6414)
!6434 = distinct !{!6434, !6410, !6435}
!6435 = !DILocation(line: 427, column: 9, scope: !6411)
!6436 = !DILocation(line: 383, column: 13, scope: !6437)
!6437 = distinct !DILexicalBlock(scope: !6408, file: !145, line: 382, column: 45)
!6438 = !DILocation(line: 384, column: 13, scope: !6437)
!6439 = !DILocation(line: 435, column: 13, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6441, file: !145, line: 434, column: 44)
!6441 = distinct !DILexicalBlock(scope: !6406, file: !145, line: 434, column: 13)
!6442 = !DILocation(line: 436, column: 13, scope: !6440)
!6443 = !DILocation(line: 437, column: 13, scope: !6440)
!6444 = !DILocation(line: 430, column: 20, scope: !6406)
!6445 = !DILocation(line: 439, column: 58, scope: !6406)
!6446 = !DILocation(line: 439, column: 64, scope: !6406)
!6447 = !DILocation(line: 439, column: 9, scope: !6406)
!6448 = distinct !{!6448, !6402, !6449}
!6449 = !DILocation(line: 441, column: 5, scope: !6401)
!6450 = !DILocation(line: 444, column: 1, scope: !6370)
!6451 = distinct !DISubprogram(name: "bl_fota_integrity_check", scope: !145, file: !145, line: 447, type: !6277, scopeLine: 448, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6452)
!6452 = !{!6453, !6455, !6456, !6457, !6458, !6459, !6460, !6469, !6471, !6472, !6473, !6474, !6475}
!6453 = !DILocalVariable(name: "signature_in_fota_pkg", scope: !6451, file: !145, line: 449, type: !6454)
!6454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !185, size: 160, elements: !351)
!6455 = !DILocalVariable(name: "sig_len", scope: !6451, file: !145, line: 450, type: !36)
!6456 = !DILocalVariable(name: "sig_size", scope: !6451, file: !145, line: 451, type: !36)
!6457 = !DILocalVariable(name: "bin_counter", scope: !6451, file: !145, line: 452, type: !36)
!6458 = !DILocalVariable(name: "bin_offset", scope: !6451, file: !145, line: 453, type: !36)
!6459 = !DILocalVariable(name: "fota_bin_raw_seek", scope: !6451, file: !145, line: 454, type: !36)
!6460 = !DILocalVariable(name: "ctx", scope: !6451, file: !145, line: 455, type: !6461)
!6461 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbedtls_sha1_context", file: !6462, line: 52, baseType: !6463)
!6462 = !DIFile(filename: "../../../../../middleware/third_party/mbedtls/include/mbedtls/sha1.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!6463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6462, line: 46, size: 736, elements: !6464)
!6464 = !{!6465, !6466, !6467}
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !6463, file: !6462, line: 48, baseType: !1618, size: 64)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6463, file: !6462, line: 49, baseType: !1681, size: 160, offset: 64)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !6463, file: !6462, line: 50, baseType: !6468, size: 512, offset: 224)
!6468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 512, elements: !1562)
!6469 = !DILocalVariable(name: "bin_sha1_sum", scope: !6451, file: !145, line: 456, type: !6470)
!6470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 160, elements: !351)
!6471 = !DILocalVariable(name: "i", scope: !6451, file: !145, line: 457, type: !20)
!6472 = !DILocalVariable(name: "buffer", scope: !6451, file: !145, line: 458, type: !199)
!6473 = !DILocalVariable(name: "p_buffer", scope: !6451, file: !145, line: 459, type: !199)
!6474 = !DILocalVariable(name: "hal_status", scope: !6451, file: !145, line: 464, type: !1402)
!6475 = !DILocalVariable(name: "sig_addr", scope: !6451, file: !145, line: 465, type: !36)
!6476 = !DILocation(line: 449, column: 5, scope: !6451)
!6477 = !DILocation(line: 449, column: 13, scope: !6451)
!6478 = !DILocation(line: 450, column: 53, scope: !6451)
!6479 = !DILocation(line: 0, scope: !6451)
!6480 = !DILocation(line: 452, column: 56, scope: !6451)
!6481 = !DILocation(line: 453, column: 55, scope: !6451)
!6482 = !DILocation(line: 455, column: 5, scope: !6451)
!6483 = !DILocation(line: 455, column: 26, scope: !6451)
!6484 = !DILocation(line: 456, column: 5, scope: !6451)
!6485 = !DILocation(line: 456, column: 19, scope: !6451)
!6486 = !DILocation(line: 465, column: 27, scope: !6451)
!6487 = !DILocation(line: 465, column: 88, scope: !6451)
!6488 = !DILocation(line: 465, column: 58, scope: !6451)
!6489 = !DILocation(line: 465, column: 105, scope: !6451)
!6490 = !DILocation(line: 465, column: 103, scope: !6451)
!6491 = !DILocation(line: 470, column: 5, scope: !6451)
!6492 = !DILocation(line: 481, column: 25, scope: !6451)
!6493 = !DILocation(line: 481, column: 56, scope: !6451)
!6494 = !DILocation(line: 481, column: 71, scope: !6451)
!6495 = !DILocation(line: 481, column: 69, scope: !6451)
!6496 = !DILocation(line: 485, column: 5, scope: !6451)
!6497 = !DILocation(line: 486, column: 5, scope: !6451)
!6498 = !DILocation(line: 488, column: 5, scope: !6451)
!6499 = !DILocation(line: 488, column: 24, scope: !6451)
!6500 = !DILocation(line: 490, column: 120, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6451, file: !145, line: 488, column: 30)
!6502 = !DILocation(line: 490, column: 9, scope: !6501)
!6503 = !DILocation(line: 492, column: 25, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6501, file: !145, line: 492, column: 13)
!6505 = !DILocation(line: 492, column: 13, scope: !6501)
!6506 = !DILocation(line: 499, column: 26, scope: !6507)
!6507 = distinct !DILexicalBlock(scope: !6504, file: !145, line: 492, column: 47)
!6508 = !DILocation(line: 500, column: 28, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6507, file: !145, line: 500, column: 17)
!6510 = !DILocation(line: 500, column: 17, scope: !6507)
!6511 = !DILocation(line: 501, column: 17, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6509, file: !145, line: 500, column: 52)
!6513 = !DILocation(line: 502, column: 13, scope: !6512)
!6514 = !DILocation(line: 504, column: 25, scope: !6507)
!6515 = !DILocation(line: 505, column: 31, scope: !6507)
!6516 = !DILocation(line: 506, column: 9, scope: !6507)
!6517 = !DILocation(line: 513, column: 26, scope: !6518)
!6518 = distinct !DILexicalBlock(scope: !6504, file: !145, line: 506, column: 16)
!6519 = !DILocation(line: 514, column: 28, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6518, file: !145, line: 514, column: 17)
!6521 = !DILocation(line: 514, column: 17, scope: !6518)
!6522 = !DILocation(line: 515, column: 17, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6520, file: !145, line: 514, column: 52)
!6524 = !DILocation(line: 516, column: 13, scope: !6523)
!6525 = !DILocation(line: 0, scope: !6504)
!6526 = !DILocation(line: 529, column: 24, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6501, file: !145, line: 529, column: 13)
!6528 = !DILocation(line: 529, column: 13, scope: !6501)
!6529 = distinct !{!6529, !6498, !6530}
!6530 = !DILocation(line: 534, column: 5, scope: !6451)
!6531 = !DILocation(line: 530, column: 13, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6527, file: !145, line: 529, column: 48)
!6533 = !DILocation(line: 536, column: 5, scope: !6451)
!6534 = !DILocation(line: 537, column: 5, scope: !6451)
!6535 = !DILocation(line: 546, column: 9, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6537, file: !145, line: 545, column: 44)
!6537 = distinct !DILexicalBlock(scope: !6451, file: !145, line: 545, column: 9)
!6538 = !DILocation(line: 547, column: 9, scope: !6536)
!6539 = !DILocation(line: 552, column: 5, scope: !6451)
!6540 = !DILocation(line: 553, column: 5, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6451, file: !145, line: 553, column: 5)
!6542 = !DILocation(line: 554, column: 36, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6544, file: !145, line: 553, column: 50)
!6544 = distinct !DILexicalBlock(scope: !6541, file: !145, line: 553, column: 5)
!6545 = !DILocation(line: 554, column: 9, scope: !6543)
!6546 = !DILocation(line: 553, column: 46, scope: !6544)
!6547 = !DILocation(line: 553, column: 19, scope: !6544)
!6548 = distinct !{!6548, !6540, !6549}
!6549 = !DILocation(line: 555, column: 5, scope: !6541)
!6550 = !DILocation(line: 556, column: 5, scope: !6451)
!6551 = !DILocation(line: 559, column: 17, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6451, file: !145, line: 559, column: 9)
!6553 = !DILocation(line: 559, column: 9, scope: !6451)
!6554 = !DILocation(line: 560, column: 9, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6552, file: !145, line: 559, column: 44)
!6556 = !DILocation(line: 561, column: 9, scope: !6555)
!6557 = !DILocation(line: 562, column: 9, scope: !6555)
!6558 = !DILocation(line: 580, column: 18, scope: !6451)
!6559 = !DILocation(line: 581, column: 20, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6451, file: !145, line: 581, column: 9)
!6561 = !DILocation(line: 581, column: 9, scope: !6451)
!6562 = !DILocation(line: 582, column: 9, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6560, file: !145, line: 581, column: 44)
!6564 = !DILocation(line: 583, column: 9, scope: !6563)
!6565 = !DILocation(line: 584, column: 9, scope: !6563)
!6566 = !DILocation(line: 588, column: 5, scope: !6451)
!6567 = !DILocation(line: 589, column: 5, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6451, file: !145, line: 589, column: 5)
!6569 = !DILocation(line: 590, column: 36, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6571, file: !145, line: 589, column: 50)
!6571 = distinct !DILexicalBlock(scope: !6568, file: !145, line: 589, column: 5)
!6572 = !DILocation(line: 590, column: 9, scope: !6570)
!6573 = !DILocation(line: 589, column: 46, scope: !6571)
!6574 = !DILocation(line: 589, column: 19, scope: !6571)
!6575 = distinct !{!6575, !6567, !6576}
!6576 = !DILocation(line: 591, column: 5, scope: !6568)
!6577 = !DILocation(line: 592, column: 5, scope: !6451)
!6578 = !DILocation(line: 595, column: 5, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6451, file: !145, line: 595, column: 5)
!6580 = !DILocation(line: 595, column: 46, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6579, file: !145, line: 595, column: 5)
!6582 = !DILocation(line: 595, column: 19, scope: !6581)
!6583 = distinct !{!6583, !6578, !6584}
!6584 = !DILocation(line: 601, column: 5, scope: !6579)
!6585 = !DILocation(line: 596, column: 13, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !6587, file: !145, line: 596, column: 13)
!6587 = distinct !DILexicalBlock(scope: !6581, file: !145, line: 595, column: 50)
!6588 = !DILocation(line: 596, column: 41, scope: !6586)
!6589 = !DILocation(line: 596, column: 38, scope: !6586)
!6590 = !DILocation(line: 596, column: 13, scope: !6587)
!6591 = !DILocation(line: 597, column: 13, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6586, file: !145, line: 596, column: 58)
!6593 = !DILocation(line: 598, column: 13, scope: !6592)
!6594 = !DILocation(line: 599, column: 13, scope: !6592)
!6595 = !DILocation(line: 603, column: 5, scope: !6451)
!6596 = !DILocation(line: 605, column: 5, scope: !6451)
!6597 = !DILocation(line: 606, column: 1, scope: !6451)
!6598 = distinct !DISubprogram(name: "bl_fota_load_and_check_fota_header", scope: !145, file: !145, line: 608, type: !6277, scopeLine: 609, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6599)
!6599 = !{!6600, !6601, !6602, !6603}
!6600 = !DILocalVariable(name: "fota_header_size", scope: !6598, file: !145, line: 610, type: !36)
!6601 = !DILocalVariable(name: "buffer", scope: !6598, file: !145, line: 611, type: !199)
!6602 = !DILocalVariable(name: "flash_status", scope: !6598, file: !145, line: 617, type: !1402)
!6603 = !DILocalVariable(name: "fota_header_startaddr", scope: !6598, file: !145, line: 618, type: !36)
!6604 = !DILocation(line: 0, scope: !6598)
!6605 = !DILocation(line: 618, column: 38, scope: !6598)
!6606 = !DILocation(line: 618, column: 71, scope: !6598)
!6607 = !DILocation(line: 618, column: 69, scope: !6598)
!6608 = !DILocation(line: 644, column: 5, scope: !6598)
!6609 = !DILocation(line: 645, column: 20, scope: !6598)
!6610 = !DILocation(line: 646, column: 22, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6598, file: !145, line: 646, column: 9)
!6612 = !DILocation(line: 646, column: 9, scope: !6598)
!6613 = !DILocation(line: 647, column: 9, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6611, file: !145, line: 646, column: 46)
!6615 = !DILocation(line: 649, column: 9, scope: !6614)
!6616 = !DILocation(line: 654, column: 78, scope: !6598)
!6617 = !DILocation(line: 654, column: 5, scope: !6598)
!6618 = !DILocation(line: 655, column: 107, scope: !6598)
!6619 = !DILocation(line: 655, column: 5, scope: !6598)
!6620 = !DILocation(line: 656, column: 107, scope: !6598)
!6621 = !DILocation(line: 656, column: 5, scope: !6598)
!6622 = !DILocation(line: 657, column: 111, scope: !6598)
!6623 = !DILocation(line: 657, column: 5, scope: !6598)
!6624 = !DILocation(line: 658, column: 107, scope: !6598)
!6625 = !DILocation(line: 658, column: 5, scope: !6598)
!6626 = !DILocation(line: 659, column: 107, scope: !6598)
!6627 = !DILocation(line: 659, column: 5, scope: !6598)
!6628 = !DILocation(line: 660, column: 110, scope: !6598)
!6629 = !DILocation(line: 660, column: 5, scope: !6598)
!6630 = !DILocation(line: 663, column: 10, scope: !6631)
!6631 = distinct !DILexicalBlock(scope: !6598, file: !145, line: 663, column: 10)
!6632 = !DILocation(line: 663, column: 62, scope: !6631)
!6633 = !DILocation(line: 663, column: 10, scope: !6598)
!6634 = !DILocation(line: 664, column: 9, scope: !6635)
!6635 = distinct !DILexicalBlock(scope: !6631, file: !145, line: 663, column: 88)
!6636 = !DILocation(line: 666, column: 9, scope: !6635)
!6637 = !DILocation(line: 670, column: 1, scope: !6598)
!6638 = distinct !DISubprogram(name: "bl_fota_update_main", scope: !145, file: !145, line: 672, type: !6277, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6639)
!6639 = !{!6640}
!6640 = !DILocalVariable(name: "status", scope: !6638, file: !145, line: 674, type: !6174)
!6641 = !DILocation(line: 0, scope: !6638)
!6642 = !DILocation(line: 675, column: 22, scope: !6638)
!6643 = !DILocation(line: 679, column: 12, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6645, file: !145, line: 679, column: 12)
!6645 = distinct !DILexicalBlock(scope: !6646, file: !145, line: 678, column: 39)
!6646 = distinct !DILexicalBlock(scope: !6638, file: !145, line: 678, column: 9)
!6647 = !DILocation(line: 679, column: 12, scope: !6645)
!6648 = !DILocation(line: 682, column: 13, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6644, file: !145, line: 681, column: 14)
!6650 = !DILocation(line: 688, column: 9, scope: !6638)
!6651 = !DILocation(line: 680, column: 22, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6644, file: !145, line: 679, column: 43)
!6653 = !DILocation(line: 688, column: 16, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6638, file: !145, line: 688, column: 9)
!6655 = !DILocation(line: 689, column: 9, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6654, file: !145, line: 688, column: 39)
!6657 = !DILocation(line: 690, column: 18, scope: !6656)
!6658 = !DILocation(line: 696, column: 16, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6638, file: !145, line: 696, column: 9)
!6660 = !DILocation(line: 696, column: 9, scope: !6638)
!6661 = !DILocation(line: 697, column: 9, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6659, file: !145, line: 696, column: 39)
!6663 = !DILocation(line: 698, column: 18, scope: !6662)
!6664 = !DILocation(line: 704, column: 9, scope: !6638)
!6665 = !DILocation(line: 705, column: 9, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6667, file: !145, line: 704, column: 39)
!6667 = distinct !DILexicalBlock(scope: !6638, file: !145, line: 704, column: 9)
!6668 = !DILocation(line: 709, column: 9, scope: !6638)
!6669 = !DILocation(line: 710, column: 9, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6671, file: !145, line: 709, column: 39)
!6671 = distinct !DILexicalBlock(scope: !6638, file: !145, line: 709, column: 9)
!6672 = !DILocation(line: 711, column: 41, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6670, file: !145, line: 711, column: 13)
!6674 = !DILocation(line: 711, column: 57, scope: !6673)
!6675 = !DILocation(line: 711, column: 13, scope: !6670)
!6676 = !DILocation(line: 716, column: 22, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6673, file: !145, line: 711, column: 63)
!6678 = !DILocation(line: 718, column: 9, scope: !6677)
!6679 = !DILocation(line: 719, column: 22, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6673, file: !145, line: 718, column: 16)
!6681 = !DILocation(line: 0, scope: !6673)
!6682 = !DILocation(line: 721, column: 20, scope: !6683)
!6683 = distinct !DILexicalBlock(scope: !6670, file: !145, line: 721, column: 13)
!6684 = !DILocation(line: 721, column: 13, scope: !6670)
!6685 = !DILocation(line: 722, column: 98, scope: !6686)
!6686 = distinct !DILexicalBlock(scope: !6683, file: !145, line: 721, column: 43)
!6687 = !DILocation(line: 722, column: 13, scope: !6686)
!6688 = !DILocation(line: 723, column: 9, scope: !6686)
!6689 = !DILocation(line: 728, column: 9, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6691, file: !145, line: 727, column: 39)
!6691 = distinct !DILexicalBlock(scope: !6638, file: !145, line: 727, column: 9)
!6692 = !DILocation(line: 732, column: 5, scope: !6638)
!6693 = !DILocation(line: 736, column: 9, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6695, file: !145, line: 735, column: 39)
!6695 = distinct !DILexicalBlock(scope: !6638, file: !145, line: 735, column: 9)
!6696 = !DILocation(line: 737, column: 5, scope: !6694)
!6697 = !DILocation(line: 738, column: 9, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6695, file: !145, line: 737, column: 12)
!6699 = !DILocation(line: 743, column: 5, scope: !6638)
!6700 = !DILocation(line: 745, column: 5, scope: !6638)
!6701 = distinct !DISubprogram(name: "bl_fota_is_updating", scope: !145, file: !145, line: 823, type: !6702, scopeLine: 824, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !4354)
!6702 = !DISubroutineType(types: !6703)
!6703 = !{!94}
!6704 = !DILocation(line: 825, column: 9, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6701, file: !145, line: 825, column: 9)
!6706 = !DILocation(line: 825, column: 9, scope: !6701)
!6707 = !DILocation(line: 826, column: 9, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6705, file: !145, line: 825, column: 42)
!6709 = !DILocation(line: 827, column: 9, scope: !6708)
!6710 = !DILocation(line: 830, column: 1, scope: !6701)
!6711 = distinct !DISubprogram(name: "bl_fota_check_updating_marker", scope: !145, file: !145, line: 801, type: !6702, scopeLine: 802, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6712)
!6712 = !{!6713, !6714, !6715, !6716}
!6713 = !DILocalVariable(name: "status", scope: !6711, file: !145, line: 803, type: !6174)
!6714 = !DILocalVariable(name: "i", scope: !6711, file: !145, line: 804, type: !36)
!6715 = !DILocalVariable(name: "marker_found", scope: !6711, file: !145, line: 805, type: !94)
!6716 = !DILocalVariable(name: "ui", scope: !6711, file: !145, line: 806, type: !6282)
!6717 = !DILocation(line: 0, scope: !6711)
!6718 = !DILocation(line: 806, column: 5, scope: !6711)
!6719 = !DILocation(line: 806, column: 27, scope: !6711)
!6720 = !DILocation(line: 808, column: 14, scope: !6711)
!6721 = !DILocation(line: 809, column: 16, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6711, file: !145, line: 809, column: 9)
!6723 = !DILocation(line: 809, column: 9, scope: !6711)
!6724 = !DILocation(line: 814, column: 5, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6711, file: !145, line: 814, column: 5)
!6726 = !DILocation(line: 810, column: 9, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6722, file: !145, line: 809, column: 39)
!6728 = !DILocation(line: 811, column: 9, scope: !6727)
!6729 = !DILocation(line: 815, column: 41, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6731, file: !145, line: 815, column: 13)
!6731 = distinct !DILexicalBlock(scope: !6732, file: !145, line: 814, column: 51)
!6732 = distinct !DILexicalBlock(scope: !6725, file: !145, line: 814, column: 5)
!6733 = !DILocation(line: 815, column: 13, scope: !6730)
!6734 = !DILocation(line: 815, column: 46, scope: !6730)
!6735 = !DILocation(line: 815, column: 13, scope: !6731)
!6736 = !DILocation(line: 814, column: 47, scope: !6732)
!6737 = !DILocation(line: 814, column: 19, scope: !6732)
!6738 = distinct !{!6738, !6724, !6739}
!6739 = !DILocation(line: 818, column: 5, scope: !6725)
!6740 = !DILocation(line: 821, column: 1, scope: !6711)
!6741 = distinct !DISubprogram(name: "bl_fota_read_update_info", scope: !145, file: !145, line: 782, type: !6235, scopeLine: 783, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6742)
!6742 = !{!6743, !6744, !6745, !6746}
!6743 = !DILocalVariable(name: "buffer", arg: 1, scope: !6741, file: !145, line: 782, type: !199)
!6744 = !DILocalVariable(name: "buffer_size", arg: 2, scope: !6741, file: !145, line: 782, type: !16)
!6745 = !DILocalVariable(name: "flash_status", scope: !6741, file: !145, line: 784, type: !1402)
!6746 = !DILocalVariable(name: "marker_addr", scope: !6741, file: !145, line: 785, type: !36)
!6747 = !DILocation(line: 0, scope: !6741)
!6748 = !DILocation(line: 785, column: 28, scope: !6741)
!6749 = !DILocation(line: 785, column: 61, scope: !6741)
!6750 = !DILocation(line: 786, column: 33, scope: !6741)
!6751 = !DILocation(line: 785, column: 59, scope: !6741)
!6752 = !DILocation(line: 785, column: 83, scope: !6741)
!6753 = !DILocation(line: 786, column: 31, scope: !6741)
!6754 = !DILocation(line: 787, column: 20, scope: !6741)
!6755 = !DILocation(line: 788, column: 22, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6741, file: !145, line: 788, column: 9)
!6757 = !DILocation(line: 788, column: 9, scope: !6741)
!6758 = !DILocation(line: 789, column: 9, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6756, file: !145, line: 788, column: 46)
!6760 = !DILocation(line: 790, column: 9, scope: !6759)
!6761 = !DILocation(line: 791, column: 9, scope: !6759)
!6762 = !DILocation(line: 793, column: 5, scope: !6741)
!6763 = !DILocation(line: 794, column: 5, scope: !6741)
!6764 = !DILocation(line: 795, column: 1, scope: !6741)
!6765 = distinct !DISubprogram(name: "bl_fota_is_triggered", scope: !145, file: !145, line: 832, type: !6702, scopeLine: 833, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6766)
!6766 = !{!6767, !6768}
!6767 = !DILocalVariable(name: "status", scope: !6765, file: !145, line: 835, type: !6174)
!6768 = !DILocalVariable(name: "ti", scope: !6765, file: !145, line: 836, type: !6769)
!6769 = !DIDerivedType(tag: DW_TAG_typedef, name: "fota_trigger_info_t", file: !148, line: 48, baseType: !6770)
!6770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !148, line: 45, size: 64, elements: !6771)
!6771 = !{!6772, !6773}
!6772 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !6770, file: !148, line: 46, baseType: !16, size: 32)
!6773 = !DIDerivedType(tag: DW_TAG_member, name: "m_fota_triggered", scope: !6770, file: !148, line: 47, baseType: !16, size: 32, offset: 32)
!6774 = !DILocation(line: 0, scope: !6765)
!6775 = !DILocation(line: 836, column: 5, scope: !6765)
!6776 = !DILocation(line: 836, column: 25, scope: !6765)
!6777 = !DILocation(line: 855, column: 14, scope: !6765)
!6778 = !DILocation(line: 856, column: 16, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6765, file: !145, line: 856, column: 9)
!6780 = !DILocation(line: 856, column: 9, scope: !6765)
!6781 = !DILocation(line: 857, column: 9, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6779, file: !145, line: 856, column: 39)
!6783 = !DILocation(line: 858, column: 9, scope: !6782)
!6784 = !DILocation(line: 861, column: 14, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6765, file: !145, line: 861, column: 10)
!6786 = !DILocation(line: 861, column: 25, scope: !6785)
!6787 = !DILocation(line: 861, column: 38, scope: !6785)
!6788 = !DILocation(line: 861, column: 10, scope: !6765)
!6789 = !DILocation(line: 862, column: 9, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6785, file: !145, line: 861, column: 61)
!6791 = !DILocation(line: 863, column: 9, scope: !6790)
!6792 = !DILocation(line: 867, column: 1, scope: !6765)
!6793 = distinct !DISubprogram(name: "bl_fota_process", scope: !145, file: !145, line: 869, type: !4261, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !144, retainedNodes: !6794)
!6794 = !{!6795}
!6795 = !DILocalVariable(name: "status", scope: !6796, file: !145, line: 878, type: !6174)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !145, line: 876, column: 60)
!6797 = distinct !DILexicalBlock(scope: !6793, file: !145, line: 876, column: 10)
!6798 = !DILocation(line: 876, column: 10, scope: !6797)
!6799 = !DILocation(line: 876, column: 33, scope: !6797)
!6800 = !DILocation(line: 876, column: 36, scope: !6797)
!6801 = !DILocation(line: 876, column: 10, scope: !6793)
!6802 = !DILocation(line: 882, column: 9, scope: !6796)
!6803 = !DILocation(line: 885, column: 9, scope: !6796)
!6804 = !DILocation(line: 886, column: 18, scope: !6796)
!6805 = !DILocation(line: 0, scope: !6796)
!6806 = !DILocation(line: 888, column: 20, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6796, file: !145, line: 888, column: 13)
!6808 = !DILocation(line: 888, column: 13, scope: !6796)
!6809 = !DILocation(line: 890, column: 13, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6807, file: !145, line: 888, column: 43)
!6811 = !DILocation(line: 895, column: 5, scope: !6796)
!6812 = !DILocation(line: 892, column: 13, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6807, file: !145, line: 891, column: 16)
!6814 = !DILocation(line: 893, column: 13, scope: !6813)
!6815 = distinct !{!6815, !6814, !6816}
!6816 = !DILocation(line: 893, column: 22, scope: !6813)
!6817 = !DILocation(line: 897, column: 1, scope: !6793)
!6818 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !270, file: !270, line: 64, type: !6216, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !6819)
!6819 = !{!6820, !6821}
!6820 = !DILocalVariable(name: "bank_no", arg: 1, scope: !6818, file: !270, line: 64, type: !36)
!6821 = !DILocalVariable(name: "value", scope: !6818, file: !270, line: 66, type: !36)
!6822 = !DILocation(line: 0, scope: !6818)
!6823 = !DILocation(line: 68, column: 28, scope: !6818)
!6824 = !DILocation(line: 68, column: 18, scope: !6818)
!6825 = !DILocation(line: 69, column: 34, scope: !6818)
!6826 = !DILocation(line: 69, column: 31, scope: !6818)
!6827 = !DILocation(line: 69, column: 18, scope: !6818)
!6828 = !DILocation(line: 71, column: 5, scope: !6818)
!6829 = !DILocation(line: 71, column: 13, scope: !6818)
!6830 = !DILocation(line: 71, column: 26, scope: !6818)
!6831 = !DILocation(line: 71, column: 34, scope: !6818)
!6832 = distinct !{!6832, !6828, !6833}
!6833 = !DILocation(line: 71, column: 39, scope: !6818)
!6834 = !DILocation(line: 73, column: 15, scope: !6818)
!6835 = !DILocation(line: 73, column: 38, scope: !6818)
!6836 = !DILocation(line: 75, column: 5, scope: !6818)
!6837 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !270, file: !270, line: 79, type: !5422, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !6838)
!6838 = !{!6839, !6840}
!6839 = !DILocalVariable(name: "bank_no", arg: 1, scope: !6837, file: !270, line: 79, type: !36)
!6840 = !DILocalVariable(name: "value", arg: 2, scope: !6837, file: !270, line: 79, type: !36)
!6841 = !DILocation(line: 0, scope: !6837)
!6842 = !DILocation(line: 83, column: 27, scope: !6837)
!6843 = !DILocation(line: 83, column: 45, scope: !6837)
!6844 = !DILocation(line: 83, column: 52, scope: !6837)
!6845 = !DILocation(line: 83, column: 18, scope: !6837)
!6846 = !DILocation(line: 84, column: 34, scope: !6837)
!6847 = !DILocation(line: 84, column: 31, scope: !6837)
!6848 = !DILocation(line: 84, column: 18, scope: !6837)
!6849 = !DILocation(line: 86, column: 5, scope: !6837)
!6850 = !DILocation(line: 86, column: 13, scope: !6837)
!6851 = !DILocation(line: 86, column: 26, scope: !6837)
!6852 = !DILocation(line: 86, column: 34, scope: !6837)
!6853 = distinct !{!6853, !6849, !6854}
!6854 = !DILocation(line: 86, column: 39, scope: !6837)
!6855 = !DILocation(line: 88, column: 5, scope: !6837)
!6856 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !270, file: !270, line: 92, type: !4261, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !4354)
!6857 = !DILocation(line: 95, column: 36, scope: !6856)
!6858 = !DILocation(line: 95, column: 18, scope: !6856)
!6859 = !DILocation(line: 96, column: 37, scope: !6856)
!6860 = !DILocation(line: 96, column: 18, scope: !6856)
!6861 = !DILocation(line: 97, column: 37, scope: !6856)
!6862 = !DILocation(line: 97, column: 19, scope: !6856)
!6863 = !DILocation(line: 98, column: 37, scope: !6856)
!6864 = !DILocation(line: 98, column: 19, scope: !6856)
!6865 = !DILocation(line: 99, column: 37, scope: !6856)
!6866 = !DILocation(line: 99, column: 19, scope: !6856)
!6867 = !DILocation(line: 100, column: 37, scope: !6856)
!6868 = !DILocation(line: 100, column: 19, scope: !6856)
!6869 = !DILocation(line: 101, column: 37, scope: !6856)
!6870 = !DILocation(line: 101, column: 19, scope: !6856)
!6871 = !DILocation(line: 103, column: 37, scope: !6856)
!6872 = !DILocation(line: 103, column: 19, scope: !6856)
!6873 = !DILocation(line: 104, column: 37, scope: !6856)
!6874 = !DILocation(line: 104, column: 19, scope: !6856)
!6875 = !DILocation(line: 105, column: 37, scope: !6856)
!6876 = !DILocation(line: 105, column: 19, scope: !6856)
!6877 = !DILocation(line: 106, column: 37, scope: !6856)
!6878 = !DILocation(line: 106, column: 19, scope: !6856)
!6879 = !DILocation(line: 108, column: 36, scope: !6856)
!6880 = !DILocation(line: 108, column: 18, scope: !6856)
!6881 = !DILocation(line: 109, column: 36, scope: !6856)
!6882 = !DILocation(line: 109, column: 18, scope: !6856)
!6883 = !DILocation(line: 111, column: 5, scope: !6856)
!6884 = distinct !DISubprogram(name: "dump_EMI_Setting", scope: !270, file: !270, line: 114, type: !4261, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !4354)
!6885 = !DILocation(line: 116, column: 5, scope: !6884)
!6886 = !DILocation(line: 117, column: 46, scope: !6884)
!6887 = !DILocation(line: 117, column: 5, scope: !6884)
!6888 = !DILocation(line: 118, column: 46, scope: !6884)
!6889 = !DILocation(line: 118, column: 5, scope: !6884)
!6890 = !DILocation(line: 119, column: 46, scope: !6884)
!6891 = !DILocation(line: 119, column: 5, scope: !6884)
!6892 = !DILocation(line: 120, column: 46, scope: !6884)
!6893 = !DILocation(line: 120, column: 5, scope: !6884)
!6894 = !DILocation(line: 121, column: 46, scope: !6884)
!6895 = !DILocation(line: 121, column: 5, scope: !6884)
!6896 = !DILocation(line: 122, column: 46, scope: !6884)
!6897 = !DILocation(line: 122, column: 5, scope: !6884)
!6898 = !DILocation(line: 123, column: 46, scope: !6884)
!6899 = !DILocation(line: 123, column: 5, scope: !6884)
!6900 = !DILocation(line: 124, column: 46, scope: !6884)
!6901 = !DILocation(line: 124, column: 5, scope: !6884)
!6902 = !DILocation(line: 125, column: 46, scope: !6884)
!6903 = !DILocation(line: 125, column: 5, scope: !6884)
!6904 = !DILocation(line: 126, column: 46, scope: !6884)
!6905 = !DILocation(line: 126, column: 5, scope: !6884)
!6906 = !DILocation(line: 127, column: 46, scope: !6884)
!6907 = !DILocation(line: 127, column: 5, scope: !6884)
!6908 = !DILocation(line: 128, column: 45, scope: !6884)
!6909 = !DILocation(line: 128, column: 5, scope: !6884)
!6910 = !DILocation(line: 129, column: 45, scope: !6884)
!6911 = !DILocation(line: 129, column: 5, scope: !6884)
!6912 = !DILocation(line: 130, column: 47, scope: !6884)
!6913 = !DILocation(line: 130, column: 5, scope: !6884)
!6914 = !DILocation(line: 131, column: 47, scope: !6884)
!6915 = !DILocation(line: 131, column: 5, scope: !6884)
!6916 = !DILocation(line: 132, column: 49, scope: !6884)
!6917 = !DILocation(line: 132, column: 5, scope: !6884)
!6918 = !DILocation(line: 133, column: 41, scope: !6884)
!6919 = !{i32 0, i32 256}
!6920 = !DILocation(line: 133, column: 5, scope: !6884)
!6921 = !DILocation(line: 134, column: 41, scope: !6884)
!6922 = !DILocation(line: 134, column: 5, scope: !6884)
!6923 = !DILocation(line: 135, column: 41, scope: !6884)
!6924 = !DILocation(line: 135, column: 5, scope: !6884)
!6925 = !DILocation(line: 136, column: 41, scope: !6884)
!6926 = !DILocation(line: 136, column: 5, scope: !6884)
!6927 = !DILocation(line: 137, column: 41, scope: !6884)
!6928 = !DILocation(line: 137, column: 5, scope: !6884)
!6929 = !DILocation(line: 138, column: 1, scope: !6884)
!6930 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !270, file: !270, line: 161, type: !4261, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !4354)
!6931 = !DILocation(line: 165, column: 26, scope: !6930)
!6932 = !DILocation(line: 167, column: 16, scope: !6930)
!6933 = !DILocation(line: 168, column: 5, scope: !6930)
!6934 = !DILocation(line: 168, column: 13, scope: !6930)
!6935 = !DILocation(line: 168, column: 36, scope: !6930)
!6936 = distinct !{!6936, !6933, !6937}
!6937 = !DILocation(line: 168, column: 41, scope: !6930)
!6938 = !DILocation(line: 169, column: 16, scope: !6930)
!6939 = !DILocation(line: 170, column: 5, scope: !6930)
!6940 = !DILocation(line: 170, column: 13, scope: !6930)
!6941 = !DILocation(line: 170, column: 36, scope: !6930)
!6942 = distinct !{!6942, !6939, !6943}
!6943 = !DILocation(line: 170, column: 41, scope: !6930)
!6944 = !DILocation(line: 172, column: 42, scope: !6930)
!6945 = !DILocation(line: 173, column: 48, scope: !6930)
!6946 = !DILocation(line: 175, column: 5, scope: !6930)
!6947 = !DILocation(line: 175, column: 13, scope: !6930)
!6948 = !DILocation(line: 175, column: 26, scope: !6930)
!6949 = !DILocation(line: 175, column: 34, scope: !6930)
!6950 = distinct !{!6950, !6946, !6951}
!6951 = !DILocation(line: 175, column: 39, scope: !6930)
!6952 = !DILocation(line: 177, column: 18, scope: !6930)
!6953 = !DILocation(line: 181, column: 22, scope: !6930)
!6954 = !DILocation(line: 183, column: 5, scope: !6930)
!6955 = !DILocation(line: 183, column: 13, scope: !6930)
!6956 = !DILocation(line: 183, column: 26, scope: !6930)
!6957 = !DILocation(line: 183, column: 34, scope: !6930)
!6958 = distinct !{!6958, !6954, !6959}
!6959 = !DILocation(line: 183, column: 39, scope: !6930)
!6960 = !DILocation(line: 187, column: 9, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6930, file: !270, line: 187, column: 9)
!6962 = !DILocation(line: 187, column: 44, scope: !6961)
!6963 = !DILocation(line: 187, column: 9, scope: !6930)
!6964 = !DILocation(line: 188, column: 13, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6966, file: !270, line: 188, column: 12)
!6966 = distinct !DILexicalBlock(scope: !6961, file: !270, line: 187, column: 55)
!6967 = !DILocation(line: 188, column: 48, scope: !6965)
!6968 = !DILocation(line: 188, column: 56, scope: !6965)
!6969 = !DILocation(line: 0, scope: !6965)
!6970 = !DILocation(line: 196, column: 1, scope: !6930)
!6971 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !270, file: !270, line: 205, type: !4352, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !4354)
!6972 = !DILocation(line: 209, column: 15, scope: !6971)
!6973 = !DILocation(line: 212, column: 15, scope: !6971)
!6974 = !DILocation(line: 215, column: 15, scope: !6971)
!6975 = !DILocation(line: 217, column: 5, scope: !6971)
!6976 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !270, file: !270, line: 223, type: !6977, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !6979)
!6977 = !DISubroutineType(types: !6978)
!6978 = !{!16}
!6979 = !{!6980, !6981, !6982, !6983, !6984, !6985}
!6980 = !DILocalVariable(name: "mbist_src", scope: !6976, file: !270, line: 225, type: !36)
!6981 = !DILocalVariable(name: "mbist_len", scope: !6976, file: !270, line: 225, type: !36)
!6982 = !DILocalVariable(name: "mbist_data", scope: !6976, file: !270, line: 225, type: !1618)
!6983 = !DILocalVariable(name: "i", scope: !6976, file: !270, line: 226, type: !36)
!6984 = !DILocalVariable(name: "bist_data_inv", scope: !6976, file: !270, line: 226, type: !36)
!6985 = !DILocalVariable(name: "bist_data_random", scope: !6976, file: !270, line: 226, type: !36)
!6986 = !DILocation(line: 225, column: 36, scope: !6976)
!6987 = !DILocation(line: 0, scope: !6976)
!6988 = !DILocation(line: 231, column: 17, scope: !6976)
!6989 = !DILocation(line: 232, column: 5, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6976, file: !270, line: 232, column: 5)
!6991 = !DILocation(line: 233, column: 9, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6993, file: !270, line: 233, column: 9)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !270, line: 232, column: 66)
!6994 = distinct !DILexicalBlock(scope: !6990, file: !270, line: 232, column: 5)
!6995 = !DILocation(line: 234, column: 13, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6997, file: !270, line: 234, column: 13)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !270, line: 233, column: 34)
!6998 = distinct !DILexicalBlock(scope: !6992, file: !270, line: 233, column: 9)
!6999 = !DILocation(line: 234, column: 57, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6996, file: !270, line: 234, column: 13)
!7001 = distinct !{!7001, !6995, !7002}
!7002 = !DILocation(line: 249, column: 13, scope: !6996)
!7003 = !DILocation(line: 236, column: 29, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !7000, file: !270, line: 234, column: 83)
!7005 = !DILocation(line: 238, column: 29, scope: !7004)
!7006 = !DILocation(line: 240, column: 32, scope: !7004)
!7007 = !DILocation(line: 240, column: 46, scope: !7004)
!7008 = !DILocation(line: 240, column: 98, scope: !7004)
!7009 = !DILocation(line: 240, column: 53, scope: !7004)
!7010 = !DILocation(line: 240, column: 78, scope: !7004)
!7011 = !DILocation(line: 240, column: 29, scope: !7004)
!7012 = !DILocation(line: 241, column: 29, scope: !7004)
!7013 = !DILocation(line: 243, column: 17, scope: !7004)
!7014 = !DILocation(line: 243, column: 25, scope: !7004)
!7015 = !DILocation(line: 243, column: 37, scope: !7004)
!7016 = !DILocation(line: 243, column: 44, scope: !7004)
!7017 = distinct !{!7017, !7013, !7018}
!7018 = !DILocation(line: 243, column: 51, scope: !7004)
!7019 = !DILocation(line: 245, column: 22, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7004, file: !270, line: 245, column: 21)
!7021 = !DILocation(line: 245, column: 34, scope: !7020)
!7022 = !DILocation(line: 245, column: 41, scope: !7020)
!7023 = !DILocation(line: 234, column: 79, scope: !7000)
!7024 = !DILocation(line: 245, column: 21, scope: !7004)
!7025 = !DILocation(line: 233, column: 30, scope: !6998)
!7026 = !DILocation(line: 233, column: 23, scope: !6998)
!7027 = distinct !{!7027, !6991, !7028}
!7028 = !DILocation(line: 250, column: 9, scope: !6992)
!7029 = !DILocation(line: 232, column: 62, scope: !6994)
!7030 = !DILocation(line: 232, column: 43, scope: !6994)
!7031 = distinct !{!7031, !6989, !7032}
!7032 = !DILocation(line: 251, column: 5, scope: !6990)
!7033 = !DILocation(line: 255, column: 1, scope: !6976)
!7034 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !270, file: !270, line: 257, type: !6977, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !4354)
!7035 = !DILocation(line: 259, column: 9, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7034, file: !270, line: 259, column: 9)
!7037 = !DILocation(line: 259, column: 26, scope: !7036)
!7038 = !DILocation(line: 0, scope: !7034)
!7039 = !DILocation(line: 264, column: 1, scope: !7034)
!7040 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !270, file: !270, line: 268, type: !4261, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !7041)
!7041 = !{!7042, !7043}
!7042 = !DILocalVariable(name: "dqy_in_del", scope: !7040, file: !270, line: 270, type: !16)
!7043 = !DILocalVariable(name: "dqs_in_del", scope: !7040, file: !270, line: 271, type: !16)
!7044 = !DILocation(line: 0, scope: !7040)
!7045 = !DILocation(line: 273, column: 15, scope: !7040)
!7046 = !DILocation(line: 274, column: 15, scope: !7040)
!7047 = !DILocation(line: 275, column: 15, scope: !7040)
!7048 = !DILocation(line: 276, column: 15, scope: !7040)
!7049 = !DILocation(line: 278, column: 5, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7040, file: !270, line: 278, column: 5)
!7051 = !DILocation(line: 278, column: 57, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7050, file: !270, line: 278, column: 5)
!7053 = !DILocation(line: 278, column: 40, scope: !7052)
!7054 = distinct !{!7054, !7049, !7055}
!7055 = !DILocation(line: 285, column: 5, scope: !7050)
!7056 = !DILocation(line: 280, column: 36, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7052, file: !270, line: 278, column: 78)
!7058 = !DILocation(line: 280, column: 55, scope: !7057)
!7059 = !DILocation(line: 280, column: 74, scope: !7057)
!7060 = !DILocation(line: 280, column: 42, scope: !7057)
!7061 = !DILocation(line: 280, column: 61, scope: !7057)
!7062 = !DILocation(line: 280, column: 79, scope: !7057)
!7063 = !DILocation(line: 279, column: 31, scope: !7057)
!7064 = !DILocation(line: 279, column: 19, scope: !7057)
!7065 = !DILocation(line: 282, column: 19, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7057, file: !270, line: 282, column: 13)
!7067 = !DILocation(line: 282, column: 15, scope: !7066)
!7068 = !DILocation(line: 282, column: 13, scope: !7057)
!7069 = !DILocation(line: 289, column: 36, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7071, file: !270, line: 288, column: 84)
!7071 = distinct !DILexicalBlock(scope: !7072, file: !270, line: 288, column: 9)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !270, line: 288, column: 9)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !270, line: 287, column: 25)
!7074 = distinct !DILexicalBlock(scope: !7040, file: !270, line: 287, column: 9)
!7075 = !DILocation(line: 289, column: 23, scope: !7070)
!7076 = !DILocation(line: 291, column: 23, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7070, file: !270, line: 291, column: 17)
!7078 = !DILocation(line: 291, column: 19, scope: !7077)
!7079 = !DILocation(line: 291, column: 17, scope: !7070)
!7080 = distinct !{!7080, !7081, !7082}
!7081 = !DILocation(line: 288, column: 9, scope: !7072)
!7082 = !DILocation(line: 294, column: 9, scope: !7072)
!7083 = !DILocation(line: 297, column: 1, scope: !7040)
!7084 = distinct !DISubprogram(name: "custom_setEMI", scope: !270, file: !270, line: 301, type: !7085, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !4354)
!7085 = !DISubroutineType(types: !7086)
!7086 = !{!806}
!7087 = !DILocation(line: 313, column: 5, scope: !7084)
!7088 = !DILocation(line: 315, column: 5, scope: !7084)
!7089 = !DILocation(line: 317, column: 20, scope: !7084)
!7090 = !DILocation(line: 317, column: 18, scope: !7084)
!7091 = !DILocation(line: 318, column: 20, scope: !7084)
!7092 = !DILocation(line: 318, column: 18, scope: !7084)
!7093 = !DILocation(line: 319, column: 20, scope: !7084)
!7094 = !DILocation(line: 319, column: 18, scope: !7084)
!7095 = !DILocation(line: 338, column: 5, scope: !7084)
!7096 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !270, file: !270, line: 348, type: !7085, scopeLine: 349, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !7097)
!7097 = !{!7098}
!7098 = !DILocalVariable(name: "test_result", scope: !7096, file: !270, line: 353, type: !94)
!7099 = !DILocation(line: 360, column: 16, scope: !7096)
!7100 = !DILocation(line: 360, column: 14, scope: !7096)
!7101 = !DILocation(line: 361, column: 16, scope: !7096)
!7102 = !DILocation(line: 361, column: 14, scope: !7096)
!7103 = !DILocation(line: 363, column: 17, scope: !7096)
!7104 = !DILocation(line: 363, column: 15, scope: !7096)
!7105 = !DILocation(line: 365, column: 17, scope: !7096)
!7106 = !DILocation(line: 365, column: 15, scope: !7096)
!7107 = !DILocation(line: 367, column: 18, scope: !7096)
!7108 = !DILocation(line: 367, column: 16, scope: !7096)
!7109 = !DILocation(line: 368, column: 18, scope: !7096)
!7110 = !DILocation(line: 368, column: 16, scope: !7096)
!7111 = !DILocation(line: 373, column: 17, scope: !7096)
!7112 = !DILocation(line: 373, column: 15, scope: !7096)
!7113 = !DILocation(line: 374, column: 17, scope: !7096)
!7114 = !DILocation(line: 374, column: 15, scope: !7096)
!7115 = !DILocation(line: 375, column: 17, scope: !7096)
!7116 = !DILocation(line: 375, column: 15, scope: !7096)
!7117 = !DILocation(line: 377, column: 17, scope: !7096)
!7118 = !DILocation(line: 377, column: 15, scope: !7096)
!7119 = !DILocation(line: 378, column: 17, scope: !7096)
!7120 = !DILocation(line: 378, column: 15, scope: !7096)
!7121 = !DILocation(line: 379, column: 17, scope: !7096)
!7122 = !DILocation(line: 379, column: 15, scope: !7096)
!7123 = !DILocation(line: 380, column: 17, scope: !7096)
!7124 = !DILocation(line: 380, column: 15, scope: !7096)
!7125 = !DILocation(line: 382, column: 5, scope: !7096)
!7126 = !DILocation(line: 387, column: 15, scope: !7096)
!7127 = !DILocation(line: 388, column: 5, scope: !7096)
!7128 = !DILocation(line: 388, column: 14, scope: !7096)
!7129 = !DILocation(line: 388, column: 38, scope: !7096)
!7130 = distinct !{!7130, !7127, !7131}
!7131 = !DILocation(line: 388, column: 43, scope: !7096)
!7132 = !DILocation(line: 389, column: 15, scope: !7096)
!7133 = !DILocation(line: 390, column: 5, scope: !7096)
!7134 = !DILocation(line: 390, column: 14, scope: !7096)
!7135 = !DILocation(line: 390, column: 38, scope: !7096)
!7136 = distinct !{!7136, !7133, !7137}
!7137 = !DILocation(line: 390, column: 43, scope: !7096)
!7138 = !DILocation(line: 391, column: 15, scope: !7096)
!7139 = !DILocation(line: 393, column: 5, scope: !7096)
!7140 = !DILocation(line: 395, column: 5, scope: !7096)
!7141 = !DILocation(line: 396, column: 20, scope: !7096)
!7142 = !DILocation(line: 0, scope: !7096)
!7143 = !DILocation(line: 0, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7096, file: !270, line: 397, column: 9)
!7145 = !DILocation(line: 406, column: 1, scope: !7096)
!7146 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !270, file: !270, line: 413, type: !7147, scopeLine: 414, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !7150)
!7147 = !DISubroutineType(types: !7148)
!7148 = !{!16, !7149}
!7149 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !270, line: 411, baseType: !272)
!7150 = !{!7151, !7152}
!7151 = !DILocalVariable(name: "clock", arg: 1, scope: !7146, file: !270, line: 413, type: !7149)
!7152 = !DILocalVariable(name: "delay", scope: !7146, file: !270, line: 415, type: !82)
!7153 = !DILocation(line: 0, scope: !7146)
!7154 = !DILocation(line: 415, column: 5, scope: !7146)
!7155 = !DILocation(line: 415, column: 23, scope: !7146)
!7156 = !DILocation(line: 419, column: 9, scope: !7146)
!7157 = !DILocation(line: 420, column: 17, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7159, file: !270, line: 419, column: 39)
!7159 = distinct !DILexicalBlock(scope: !7146, file: !270, line: 419, column: 9)
!7160 = !DILocation(line: 420, column: 27, scope: !7158)
!7161 = !DILocation(line: 420, column: 35, scope: !7158)
!7162 = !DILocation(line: 420, column: 9, scope: !7158)
!7163 = distinct !{!7163, !7162, !7164}
!7164 = !DILocation(line: 420, column: 40, scope: !7158)
!7165 = !DILocation(line: 421, column: 21, scope: !7158)
!7166 = !DILocation(line: 421, column: 31, scope: !7158)
!7167 = !DILocation(line: 421, column: 19, scope: !7158)
!7168 = !DILocation(line: 426, column: 19, scope: !7158)
!7169 = !DILocation(line: 427, column: 19, scope: !7158)
!7170 = !DILocation(line: 428, column: 9, scope: !7158)
!7171 = !DILocation(line: 428, column: 18, scope: !7158)
!7172 = !DILocation(line: 428, column: 42, scope: !7158)
!7173 = distinct !{!7173, !7170, !7174}
!7174 = !DILocation(line: 428, column: 47, scope: !7158)
!7175 = !DILocation(line: 429, column: 19, scope: !7158)
!7176 = !DILocation(line: 430, column: 9, scope: !7158)
!7177 = !DILocation(line: 430, column: 18, scope: !7158)
!7178 = !DILocation(line: 430, column: 42, scope: !7158)
!7179 = distinct !{!7179, !7176, !7180}
!7180 = !DILocation(line: 430, column: 47, scope: !7158)
!7181 = !DILocation(line: 431, column: 19, scope: !7158)
!7182 = !DILocation(line: 433, column: 20, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7158, file: !270, line: 433, column: 9)
!7184 = !DILocation(line: 433, column: 25, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7183, file: !270, line: 433, column: 9)
!7186 = !DILocation(line: 433, column: 31, scope: !7185)
!7187 = !DILocation(line: 433, column: 9, scope: !7183)
!7188 = !DILocation(line: 433, column: 44, scope: !7185)
!7189 = distinct !{!7189, !7187, !7190}
!7190 = !DILocation(line: 433, column: 47, scope: !7183)
!7191 = !DILocation(line: 435, column: 21, scope: !7158)
!7192 = !DILocation(line: 435, column: 31, scope: !7158)
!7193 = !DILocation(line: 435, column: 19, scope: !7158)
!7194 = !DILocation(line: 442, column: 5, scope: !7146)
!7195 = !DILocation(line: 439, column: 9, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7197, file: !270, line: 438, column: 12)
!7197 = distinct !DILexicalBlock(scope: !7159, file: !270, line: 436, column: 16)
!7198 = !DILocation(line: 444, column: 1, scope: !7146)
!7199 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !270, file: !270, line: 446, type: !4261, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !4354)
!7200 = !DILocation(line: 451, column: 16, scope: !7199)
!7201 = !DILocation(line: 452, column: 5, scope: !7199)
!7202 = !DILocation(line: 452, column: 13, scope: !7199)
!7203 = !DILocation(line: 452, column: 36, scope: !7199)
!7204 = distinct !{!7204, !7201, !7205}
!7205 = !DILocation(line: 452, column: 41, scope: !7199)
!7206 = !DILocation(line: 453, column: 16, scope: !7199)
!7207 = !DILocation(line: 454, column: 5, scope: !7199)
!7208 = !DILocation(line: 454, column: 13, scope: !7199)
!7209 = !DILocation(line: 454, column: 36, scope: !7199)
!7210 = distinct !{!7210, !7207, !7211}
!7211 = !DILocation(line: 454, column: 41, scope: !7199)
!7212 = !DILocation(line: 456, column: 15, scope: !7199)
!7213 = !DILocation(line: 457, column: 5, scope: !7199)
!7214 = !DILocation(line: 457, column: 14, scope: !7199)
!7215 = !DILocation(line: 457, column: 44, scope: !7199)
!7216 = distinct !{!7216, !7213, !7217}
!7217 = !DILocation(line: 457, column: 49, scope: !7199)
!7218 = !DILocation(line: 458, column: 15, scope: !7199)
!7219 = !DILocation(line: 459, column: 5, scope: !7199)
!7220 = !DILocation(line: 459, column: 14, scope: !7199)
!7221 = !DILocation(line: 459, column: 44, scope: !7199)
!7222 = distinct !{!7222, !7219, !7223}
!7223 = !DILocation(line: 459, column: 49, scope: !7199)
!7224 = !DILocation(line: 460, column: 15, scope: !7199)
!7225 = !DILocation(line: 462, column: 18, scope: !7199)
!7226 = !DILocation(line: 462, column: 28, scope: !7199)
!7227 = !DILocation(line: 462, column: 15, scope: !7199)
!7228 = !DILocation(line: 466, column: 1, scope: !7199)
!7229 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !270, file: !270, line: 468, type: !4261, scopeLine: 469, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !269, retainedNodes: !4354)
!7230 = !DILocation(line: 473, column: 5, scope: !7229)
!7231 = !DILocation(line: 473, column: 13, scope: !7229)
!7232 = !DILocation(line: 473, column: 23, scope: !7229)
!7233 = !DILocation(line: 473, column: 31, scope: !7229)
!7234 = distinct !{!7234, !7230, !7235}
!7235 = !DILocation(line: 473, column: 39, scope: !7229)
!7236 = !DILocation(line: 474, column: 18, scope: !7229)
!7237 = !DILocation(line: 474, column: 28, scope: !7229)
!7238 = !DILocation(line: 474, column: 15, scope: !7229)
!7239 = !DILocation(line: 475, column: 18, scope: !7229)
!7240 = !DILocation(line: 476, column: 5, scope: !7229)
!7241 = !DILocation(line: 476, column: 13, scope: !7229)
!7242 = !DILocation(line: 476, column: 26, scope: !7229)
!7243 = !DILocation(line: 476, column: 34, scope: !7229)
!7244 = distinct !{!7244, !7240, !7245}
!7245 = !DILocation(line: 476, column: 39, scope: !7229)
!7246 = !DILocation(line: 477, column: 15, scope: !7229)
!7247 = !DILocation(line: 479, column: 5, scope: !7229)
!7248 = !DILocation(line: 479, column: 13, scope: !7229)
!7249 = !DILocation(line: 479, column: 37, scope: !7229)
!7250 = distinct !{!7250, !7247, !7251}
!7251 = !DILocation(line: 479, column: 42, scope: !7229)
!7252 = !DILocation(line: 482, column: 1, scope: !7229)
!7253 = distinct !DISubprogram(name: "reset_debug_buffer", scope: !333, file: !333, line: 119, type: !4261, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !332, retainedNodes: !7254)
!7254 = !{!7255}
!7255 = !DILocalVariable(name: "i", scope: !7253, file: !333, line: 121, type: !20)
!7256 = !DILocation(line: 122, column: 24, scope: !7253)
!7257 = !DILocation(line: 0, scope: !7253)
!7258 = !DILocation(line: 123, column: 5, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7253, file: !333, line: 123, column: 5)
!7260 = !DILocation(line: 124, column: 23, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7262, file: !333, line: 123, column: 42)
!7262 = distinct !DILexicalBlock(scope: !7259, file: !333, line: 123, column: 5)
!7263 = !DILocation(line: 124, column: 35, scope: !7261)
!7264 = !DILocation(line: 125, column: 23, scope: !7261)
!7265 = !DILocation(line: 125, column: 31, scope: !7261)
!7266 = !DILocation(line: 126, column: 23, scope: !7261)
!7267 = !DILocation(line: 126, column: 31, scope: !7261)
!7268 = !DILocation(line: 127, column: 23, scope: !7261)
!7269 = !DILocation(line: 127, column: 28, scope: !7261)
!7270 = !DILocation(line: 128, column: 23, scope: !7261)
!7271 = !DILocation(line: 128, column: 27, scope: !7261)
!7272 = !DILocation(line: 123, column: 38, scope: !7262)
!7273 = !DILocation(line: 123, column: 19, scope: !7262)
!7274 = distinct !{!7274, !7258, !7275}
!7275 = !DILocation(line: 129, column: 5, scope: !7259)
!7276 = !DILocation(line: 130, column: 1, scope: !7253)
!7277 = distinct !DISubprogram(name: "flush_debug_buffer", scope: !333, file: !333, line: 133, type: !4261, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !332, retainedNodes: !4354)
!7278 = !DILocation(line: 135, column: 5, scope: !7277)
!7279 = !DILocation(line: 136, column: 5, scope: !7277)
!7280 = !DILocation(line: 137, column: 1, scope: !7277)
!7281 = distinct !DISubprogram(name: "debug_node_print", scope: !333, file: !333, line: 195, type: !4261, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !332, retainedNodes: !7282)
!7282 = !{!7283}
!7283 = !DILocalVariable(name: "i", scope: !7281, file: !333, line: 197, type: !20)
!7284 = !DILocation(line: 0, scope: !7281)
!7285 = !DILocation(line: 198, column: 5, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7281, file: !333, line: 198, column: 5)
!7287 = !DILocation(line: 199, column: 27, scope: !7288)
!7288 = distinct !DILexicalBlock(scope: !7289, file: !333, line: 199, column: 13)
!7289 = distinct !DILexicalBlock(scope: !7290, file: !333, line: 198, column: 42)
!7290 = distinct !DILexicalBlock(scope: !7286, file: !333, line: 198, column: 5)
!7291 = !DILocation(line: 199, column: 35, scope: !7288)
!7292 = !DILocation(line: 199, column: 13, scope: !7289)
!7293 = !DILocation(line: 202, column: 157, scope: !7289)
!7294 = !DILocation(line: 203, column: 55, scope: !7289)
!7295 = !DILocation(line: 203, column: 78, scope: !7289)
!7296 = !DILocation(line: 203, column: 98, scope: !7289)
!7297 = !DILocation(line: 202, column: 9, scope: !7289)
!7298 = !DILocation(line: 198, column: 38, scope: !7290)
!7299 = !DILocation(line: 198, column: 19, scope: !7290)
!7300 = distinct !{!7300, !7285, !7301}
!7301 = !DILocation(line: 204, column: 5, scope: !7286)
!7302 = !DILocation(line: 206, column: 1, scope: !7281)
!7303 = distinct !DISubprogram(name: "drain_debug_buffer", scope: !333, file: !333, line: 139, type: !4261, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !332, retainedNodes: !7304)
!7304 = !{!7305, !7306}
!7305 = !DILocalVariable(name: "i", scope: !7303, file: !333, line: 141, type: !20)
!7306 = !DILocalVariable(name: "sum", scope: !7303, file: !333, line: 142, type: !20)
!7307 = !DILocation(line: 0, scope: !7303)
!7308 = !DILocation(line: 143, column: 5, scope: !7303)
!7309 = !DILocation(line: 144, column: 5, scope: !7303)
!7310 = !DILocation(line: 145, column: 5, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7303, file: !333, line: 145, column: 5)
!7312 = !DILocation(line: 146, column: 13, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7314, file: !333, line: 146, column: 13)
!7314 = distinct !DILexicalBlock(scope: !7315, file: !333, line: 145, column: 39)
!7315 = distinct !DILexicalBlock(scope: !7311, file: !333, line: 145, column: 5)
!7316 = !DILocation(line: 146, column: 24, scope: !7313)
!7317 = !DILocation(line: 146, column: 13, scope: !7314)
!7318 = !DILocation(line: 147, column: 13, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7313, file: !333, line: 146, column: 30)
!7320 = !DILocation(line: 148, column: 25, scope: !7319)
!7321 = !DILocation(line: 148, column: 23, scope: !7319)
!7322 = !DILocation(line: 149, column: 9, scope: !7319)
!7323 = !DILocation(line: 145, column: 35, scope: !7315)
!7324 = !DILocation(line: 145, column: 19, scope: !7315)
!7325 = distinct !{!7325, !7310, !7326}
!7326 = !DILocation(line: 150, column: 5, scope: !7311)
!7327 = !DILocation(line: 151, column: 5, scope: !7303)
!7328 = !DILocation(line: 152, column: 13, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7303, file: !333, line: 152, column: 9)
!7330 = !DILocation(line: 0, scope: !7329)
!7331 = !DILocation(line: 157, column: 1, scope: !7303)
!7332 = distinct !DISubprogram(name: "add_node", scope: !333, file: !333, line: 159, type: !7333, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !332, retainedNodes: !7335)
!7333 = !DISubroutineType(types: !7334)
!7334 = !{!7, !7, !7, !7, !72, !7}
!7335 = !{!7336, !7337, !7338, !7339, !7340}
!7336 = !DILocalVariable(name: "pattern_num", arg: 1, scope: !7332, file: !333, line: 159, type: !7)
!7337 = !DILocalVariable(name: "bit_num", arg: 2, scope: !7332, file: !333, line: 159, type: !7)
!7338 = !DILocalVariable(name: "pattern", arg: 3, scope: !7332, file: !333, line: 159, type: !7)
!7339 = !DILocalVariable(name: "addr", arg: 4, scope: !7332, file: !333, line: 159, type: !72)
!7340 = !DILocalVariable(name: "val", arg: 5, scope: !7332, file: !333, line: 159, type: !7)
!7341 = !DILocation(line: 0, scope: !7332)
!7342 = !DILocation(line: 161, column: 9, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7332, file: !333, line: 161, column: 9)
!7344 = !DILocation(line: 161, column: 28, scope: !7343)
!7345 = !DILocation(line: 161, column: 9, scope: !7332)
!7346 = !DILocation(line: 163, column: 9, scope: !7347)
!7347 = distinct !DILexicalBlock(scope: !7343, file: !333, line: 161, column: 47)
!7348 = !DILocation(line: 164, column: 9, scope: !7347)
!7349 = !DILocation(line: 167, column: 20, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7332, file: !333, line: 166, column: 5)
!7351 = !DILocation(line: 165, column: 5, scope: !7347)
!7352 = !DILocation(line: 167, column: 40, scope: !7350)
!7353 = !DILocation(line: 167, column: 52, scope: !7350)
!7354 = !DILocation(line: 168, column: 40, scope: !7350)
!7355 = !DILocation(line: 168, column: 48, scope: !7350)
!7356 = !DILocation(line: 169, column: 40, scope: !7350)
!7357 = !DILocation(line: 169, column: 48, scope: !7350)
!7358 = !DILocation(line: 170, column: 47, scope: !7350)
!7359 = !DILocation(line: 170, column: 40, scope: !7350)
!7360 = !DILocation(line: 170, column: 45, scope: !7350)
!7361 = !DILocation(line: 171, column: 40, scope: !7350)
!7362 = !DILocation(line: 171, column: 44, scope: !7350)
!7363 = !DILocation(line: 172, column: 27, scope: !7350)
!7364 = !DILocation(line: 173, column: 9, scope: !7350)
!7365 = !DILocation(line: 173, column: 29, scope: !7350)
!7366 = !DILocation(line: 175, column: 5, scope: !7332)
!7367 = distinct !DISubprogram(name: "init_node", scope: !333, file: !333, line: 178, type: !4261, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !332, retainedNodes: !7368)
!7368 = !{!7369}
!7369 = !DILocalVariable(name: "i", scope: !7367, file: !333, line: 180, type: !20)
!7370 = !DILocation(line: 181, column: 24, scope: !7367)
!7371 = !DILocation(line: 182, column: 5, scope: !7367)
!7372 = !DILocation(line: 0, scope: !7367)
!7373 = !DILocation(line: 183, column: 5, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7367, file: !333, line: 183, column: 5)
!7375 = !DILocation(line: 184, column: 9, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7377, file: !333, line: 183, column: 39)
!7377 = distinct !DILexicalBlock(scope: !7374, file: !333, line: 183, column: 5)
!7378 = !DILocation(line: 184, column: 20, scope: !7376)
!7379 = !DILocation(line: 183, column: 35, scope: !7377)
!7380 = !DILocation(line: 183, column: 19, scope: !7377)
!7381 = distinct !{!7381, !7373, !7382}
!7382 = !DILocation(line: 185, column: 5, scope: !7374)
!7383 = !DILocation(line: 187, column: 23, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7385, file: !333, line: 186, column: 42)
!7385 = distinct !DILexicalBlock(scope: !7386, file: !333, line: 186, column: 5)
!7386 = distinct !DILexicalBlock(scope: !7367, file: !333, line: 186, column: 5)
!7387 = !DILocation(line: 187, column: 35, scope: !7384)
!7388 = !DILocation(line: 188, column: 23, scope: !7384)
!7389 = !DILocation(line: 188, column: 31, scope: !7384)
!7390 = !DILocation(line: 189, column: 23, scope: !7384)
!7391 = !DILocation(line: 189, column: 31, scope: !7384)
!7392 = !DILocation(line: 190, column: 23, scope: !7384)
!7393 = !DILocation(line: 190, column: 28, scope: !7384)
!7394 = !DILocation(line: 191, column: 23, scope: !7384)
!7395 = !DILocation(line: 191, column: 27, scope: !7384)
!7396 = !DILocation(line: 186, column: 38, scope: !7385)
!7397 = !DILocation(line: 186, column: 19, scope: !7385)
!7398 = !DILocation(line: 186, column: 5, scope: !7386)
!7399 = distinct !{!7399, !7398, !7400}
!7400 = !DILocation(line: 192, column: 5, scope: !7386)
!7401 = !DILocation(line: 193, column: 1, scope: !7367)
!7402 = distinct !DISubprogram(name: "memory_btmt_test", scope: !333, file: !333, line: 208, type: !6702, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !332, retainedNodes: !7403)
!7403 = !{!7404}
!7404 = !DILocalVariable(name: "rst", scope: !7402, file: !333, line: 210, type: !94)
!7405 = !DILocation(line: 0, scope: !7402)
!7406 = !DILocation(line: 226, column: 5, scope: !7402)
!7407 = !DILocation(line: 248, column: 5, scope: !7402)
!7408 = !DILocation(line: 249, column: 5, scope: !7402)
!7409 = distinct !DISubprogram(name: "ram_basic_test", scope: !333, file: !333, line: 271, type: !7410, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !332, retainedNodes: !7412)
!7410 = !DISubroutineType(types: !7411)
!7411 = !{!20, !7, !7}
!7412 = !{!7413, !7414, !7415, !7416, !7417, !7418, !7419, !7420, !7421, !7422, !7423, !7424}
!7413 = !DILocalVariable(name: "test_start_addr", arg: 1, scope: !7409, file: !333, line: 271, type: !7)
!7414 = !DILocalVariable(name: "test_len", arg: 2, scope: !7409, file: !333, line: 271, type: !7)
!7415 = !DILocalVariable(name: "MEM8_BASE", scope: !7409, file: !333, line: 273, type: !335)
!7416 = !DILocalVariable(name: "MEM16_BASE", scope: !7409, file: !333, line: 274, type: !337)
!7417 = !DILocalVariable(name: "MEM32_BASE", scope: !7409, file: !333, line: 275, type: !72)
!7418 = !DILocalVariable(name: "pattern8", scope: !7409, file: !333, line: 277, type: !141)
!7419 = !DILocalVariable(name: "pattern16", scope: !7409, file: !333, line: 278, type: !115)
!7420 = !DILocalVariable(name: "pattern32", scope: !7409, file: !333, line: 279, type: !7)
!7421 = !DILocalVariable(name: "test_4B_size", scope: !7409, file: !333, line: 281, type: !7)
!7422 = !DILocalVariable(name: "readback_value", scope: !7409, file: !333, line: 282, type: !7)
!7423 = !DILocalVariable(name: "i", scope: !7409, file: !333, line: 284, type: !20)
!7424 = !DILocalVariable(name: "j", scope: !7409, file: !333, line: 284, type: !20)
!7425 = !DILocation(line: 0, scope: !7409)
!7426 = !DILocation(line: 273, column: 41, scope: !7409)
!7427 = !DILocation(line: 274, column: 43, scope: !7409)
!7428 = !DILocation(line: 275, column: 41, scope: !7409)
!7429 = !DILocation(line: 285, column: 29, scope: !7409)
!7430 = !DILocation(line: 288, column: 19, scope: !7431)
!7431 = distinct !DILexicalBlock(scope: !7432, file: !333, line: 288, column: 5)
!7432 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 288, column: 5)
!7433 = !DILocation(line: 288, column: 5, scope: !7432)
!7434 = !DILocation(line: 292, column: 5, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 292, column: 5)
!7436 = !DILocation(line: 289, column: 9, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7431, file: !333, line: 288, column: 40)
!7438 = !DILocation(line: 289, column: 23, scope: !7437)
!7439 = !DILocation(line: 288, column: 36, scope: !7431)
!7440 = distinct !{!7440, !7433, !7441}
!7441 = !DILocation(line: 290, column: 5, scope: !7432)
!7442 = !DILocation(line: 303, column: 5, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 303, column: 5)
!7444 = !DILocation(line: 294, column: 13, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7446, file: !333, line: 294, column: 13)
!7446 = distinct !DILexicalBlock(scope: !7447, file: !333, line: 292, column: 40)
!7447 = distinct !DILexicalBlock(scope: !7435, file: !333, line: 292, column: 5)
!7448 = !DILocation(line: 294, column: 27, scope: !7445)
!7449 = !DILocation(line: 294, column: 13, scope: !7446)
!7450 = !DILocation(line: 295, column: 48, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7445, file: !333, line: 294, column: 33)
!7452 = !DILocation(line: 295, column: 13, scope: !7451)
!7453 = !DILocation(line: 296, column: 9, scope: !7451)
!7454 = !DILocation(line: 297, column: 27, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7445, file: !333, line: 296, column: 16)
!7456 = !DILocation(line: 292, column: 36, scope: !7447)
!7457 = !DILocation(line: 292, column: 19, scope: !7447)
!7458 = distinct !{!7458, !7434, !7459}
!7459 = !DILocation(line: 299, column: 5, scope: !7435)
!7460 = !DILocation(line: 313, column: 19, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7462, file: !333, line: 313, column: 5)
!7462 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 313, column: 5)
!7463 = !DILocation(line: 313, column: 5, scope: !7462)
!7464 = !DILocation(line: 304, column: 13, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7466, file: !333, line: 304, column: 13)
!7466 = distinct !DILexicalBlock(scope: !7467, file: !333, line: 303, column: 40)
!7467 = distinct !DILexicalBlock(scope: !7443, file: !333, line: 303, column: 5)
!7468 = !DILocation(line: 304, column: 27, scope: !7465)
!7469 = !DILocation(line: 304, column: 13, scope: !7466)
!7470 = !DILocation(line: 305, column: 27, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7465, file: !333, line: 304, column: 42)
!7472 = !DILocation(line: 306, column: 9, scope: !7471)
!7473 = !DILocation(line: 307, column: 57, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7465, file: !333, line: 306, column: 16)
!7475 = !DILocation(line: 307, column: 13, scope: !7474)
!7476 = !DILocation(line: 303, column: 36, scope: !7467)
!7477 = !DILocation(line: 303, column: 19, scope: !7467)
!7478 = distinct !{!7478, !7442, !7479}
!7479 = !DILocation(line: 309, column: 5, scope: !7443)
!7480 = !DILocation(line: 318, column: 5, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 318, column: 5)
!7482 = !DILocation(line: 314, column: 32, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7461, file: !333, line: 313, column: 36)
!7484 = !DILocation(line: 314, column: 9, scope: !7483)
!7485 = !DILocation(line: 314, column: 22, scope: !7483)
!7486 = !DILocation(line: 313, column: 32, scope: !7461)
!7487 = distinct !{!7487, !7463, !7488}
!7488 = !DILocation(line: 315, column: 5, scope: !7462)
!7489 = !DILocation(line: 327, column: 5, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 327, column: 5)
!7491 = !DILocation(line: 319, column: 13, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7493, file: !333, line: 319, column: 13)
!7493 = distinct !DILexicalBlock(scope: !7494, file: !333, line: 318, column: 36)
!7494 = distinct !DILexicalBlock(scope: !7481, file: !333, line: 318, column: 5)
!7495 = !DILocation(line: 319, column: 37, scope: !7492)
!7496 = !DILocation(line: 319, column: 26, scope: !7492)
!7497 = !DILocation(line: 319, column: 13, scope: !7493)
!7498 = !DILocation(line: 320, column: 29, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7492, file: !333, line: 319, column: 41)
!7500 = !DILocation(line: 320, column: 38, scope: !7499)
!7501 = !DILocation(line: 320, column: 44, scope: !7499)
!7502 = !DILocation(line: 320, column: 84, scope: !7499)
!7503 = !DILocation(line: 320, column: 13, scope: !7499)
!7504 = !DILocation(line: 321, column: 9, scope: !7499)
!7505 = !DILocation(line: 318, column: 32, scope: !7494)
!7506 = !DILocation(line: 318, column: 19, scope: !7494)
!7507 = distinct !{!7507, !7480, !7508}
!7508 = !DILocation(line: 322, column: 5, scope: !7481)
!7509 = !DILocation(line: 341, column: 19, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7511, file: !333, line: 341, column: 5)
!7511 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 341, column: 5)
!7512 = !DILocation(line: 341, column: 5, scope: !7511)
!7513 = !DILocation(line: 328, column: 13, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !333, line: 328, column: 13)
!7515 = distinct !DILexicalBlock(scope: !7516, file: !333, line: 327, column: 49)
!7516 = distinct !DILexicalBlock(scope: !7490, file: !333, line: 327, column: 5)
!7517 = !DILocation(line: 328, column: 29, scope: !7514)
!7518 = !DILocation(line: 328, column: 26, scope: !7514)
!7519 = !DILocation(line: 0, scope: !7515)
!7520 = !DILocation(line: 328, column: 13, scope: !7515)
!7521 = !DILocation(line: 329, column: 13, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7514, file: !333, line: 328, column: 39)
!7523 = !DILocation(line: 329, column: 27, scope: !7522)
!7524 = !DILocation(line: 330, column: 9, scope: !7522)
!7525 = !DILocation(line: 332, column: 13, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7515, file: !333, line: 332, column: 13)
!7527 = !DILocation(line: 332, column: 27, scope: !7526)
!7528 = !DILocation(line: 332, column: 13, scope: !7515)
!7529 = !DILocation(line: 333, column: 65, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7526, file: !333, line: 332, column: 40)
!7531 = !DILocation(line: 333, column: 39, scope: !7530)
!7532 = !DILocation(line: 333, column: 80, scope: !7530)
!7533 = !DILocation(line: 333, column: 13, scope: !7530)
!7534 = !DILocation(line: 334, column: 9, scope: !7530)
!7535 = !DILocation(line: 335, column: 18, scope: !7515)
!7536 = !DILocation(line: 327, column: 38, scope: !7516)
!7537 = !DILocation(line: 327, column: 45, scope: !7516)
!7538 = !DILocation(line: 327, column: 24, scope: !7516)
!7539 = distinct !{!7539, !7489, !7540}
!7540 = !DILocation(line: 336, column: 5, scope: !7490)
!7541 = !DILocation(line: 346, column: 5, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 346, column: 5)
!7543 = !DILocation(line: 342, column: 34, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7510, file: !333, line: 341, column: 43)
!7545 = !DILocation(line: 342, column: 9, scope: !7544)
!7546 = !DILocation(line: 342, column: 23, scope: !7544)
!7547 = !DILocation(line: 341, column: 39, scope: !7510)
!7548 = distinct !{!7548, !7512, !7549}
!7549 = !DILocation(line: 343, column: 5, scope: !7511)
!7550 = !DILocation(line: 355, column: 5, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 355, column: 5)
!7552 = !DILocation(line: 347, column: 13, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !333, line: 347, column: 13)
!7554 = distinct !DILexicalBlock(scope: !7555, file: !333, line: 346, column: 43)
!7555 = distinct !DILexicalBlock(scope: !7542, file: !333, line: 346, column: 5)
!7556 = !DILocation(line: 347, column: 39, scope: !7553)
!7557 = !DILocation(line: 347, column: 27, scope: !7553)
!7558 = !DILocation(line: 347, column: 13, scope: !7554)
!7559 = !DILocation(line: 348, column: 30, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7553, file: !333, line: 347, column: 43)
!7561 = !DILocation(line: 348, column: 40, scope: !7560)
!7562 = !DILocation(line: 348, column: 46, scope: !7560)
!7563 = !DILocation(line: 348, column: 87, scope: !7560)
!7564 = !DILocation(line: 348, column: 13, scope: !7560)
!7565 = !DILocation(line: 349, column: 9, scope: !7560)
!7566 = !DILocation(line: 346, column: 39, scope: !7555)
!7567 = !DILocation(line: 346, column: 19, scope: !7555)
!7568 = distinct !{!7568, !7541, !7569}
!7569 = !DILocation(line: 350, column: 5, scope: !7542)
!7570 = !DILocation(line: 360, column: 5, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 360, column: 5)
!7572 = !DILocation(line: 355, column: 39, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7551, file: !333, line: 355, column: 5)
!7574 = !DILocation(line: 356, column: 9, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7573, file: !333, line: 355, column: 43)
!7576 = !DILocation(line: 356, column: 23, scope: !7575)
!7577 = !DILocation(line: 355, column: 19, scope: !7573)
!7578 = distinct !{!7578, !7550, !7579}
!7579 = !DILocation(line: 357, column: 5, scope: !7551)
!7580 = !DILocation(line: 368, column: 5, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 368, column: 5)
!7582 = !DILocation(line: 361, column: 13, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !333, line: 361, column: 13)
!7584 = distinct !DILexicalBlock(scope: !7585, file: !333, line: 360, column: 43)
!7585 = distinct !DILexicalBlock(scope: !7571, file: !333, line: 360, column: 5)
!7586 = !DILocation(line: 360, column: 39, scope: !7585)
!7587 = !DILocation(line: 361, column: 27, scope: !7583)
!7588 = !DILocation(line: 361, column: 13, scope: !7584)
!7589 = !DILocation(line: 362, column: 62, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7583, file: !333, line: 361, column: 43)
!7591 = !DILocation(line: 362, column: 13, scope: !7590)
!7592 = !DILocation(line: 363, column: 9, scope: !7590)
!7593 = !DILocation(line: 360, column: 19, scope: !7585)
!7594 = distinct !{!7594, !7570, !7595}
!7595 = !DILocation(line: 364, column: 5, scope: !7571)
!7596 = !DILocation(line: 373, column: 5, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 373, column: 5)
!7598 = !DILocation(line: 369, column: 9, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !333, line: 368, column: 40)
!7600 = distinct !DILexicalBlock(scope: !7581, file: !333, line: 368, column: 5)
!7601 = !DILocation(line: 369, column: 23, scope: !7599)
!7602 = !DILocation(line: 368, column: 36, scope: !7600)
!7603 = !DILocation(line: 368, column: 19, scope: !7600)
!7604 = distinct !{!7604, !7580, !7605}
!7605 = !DILocation(line: 370, column: 5, scope: !7581)
!7606 = !DILocation(line: 383, column: 5, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 383, column: 5)
!7608 = !DILocation(line: 374, column: 13, scope: !7609)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !333, line: 374, column: 13)
!7610 = distinct !DILexicalBlock(scope: !7611, file: !333, line: 373, column: 40)
!7611 = distinct !DILexicalBlock(scope: !7597, file: !333, line: 373, column: 5)
!7612 = !DILocation(line: 374, column: 27, scope: !7609)
!7613 = !DILocation(line: 374, column: 13, scope: !7610)
!7614 = !DILocation(line: 375, column: 27, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7609, file: !333, line: 374, column: 42)
!7616 = !DILocation(line: 376, column: 9, scope: !7615)
!7617 = !DILocation(line: 377, column: 57, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7609, file: !333, line: 376, column: 16)
!7619 = !DILocation(line: 377, column: 13, scope: !7618)
!7620 = !DILocation(line: 373, column: 36, scope: !7611)
!7621 = !DILocation(line: 373, column: 19, scope: !7611)
!7622 = distinct !{!7622, !7596, !7623}
!7623 = !DILocation(line: 379, column: 5, scope: !7597)
!7624 = !DILocation(line: 393, column: 5, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 393, column: 5)
!7626 = !DILocation(line: 384, column: 13, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7628, file: !333, line: 384, column: 13)
!7628 = distinct !DILexicalBlock(scope: !7629, file: !333, line: 383, column: 40)
!7629 = distinct !DILexicalBlock(scope: !7607, file: !333, line: 383, column: 5)
!7630 = !DILocation(line: 384, column: 27, scope: !7627)
!7631 = !DILocation(line: 384, column: 13, scope: !7628)
!7632 = !DILocation(line: 385, column: 25, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7627, file: !333, line: 384, column: 42)
!7634 = !DILocation(line: 385, column: 13, scope: !7633)
!7635 = !DILocation(line: 385, column: 30, scope: !7633)
!7636 = !DILocation(line: 386, column: 9, scope: !7633)
!7637 = !DILocation(line: 387, column: 58, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7627, file: !333, line: 386, column: 16)
!7639 = !DILocation(line: 387, column: 13, scope: !7638)
!7640 = !DILocation(line: 383, column: 36, scope: !7629)
!7641 = !DILocation(line: 383, column: 19, scope: !7629)
!7642 = distinct !{!7642, !7606, !7643}
!7643 = !DILocation(line: 389, column: 5, scope: !7607)
!7644 = !DILocation(line: 403, column: 5, scope: !7645)
!7645 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 403, column: 5)
!7646 = !DILocation(line: 394, column: 13, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !333, line: 394, column: 13)
!7648 = distinct !DILexicalBlock(scope: !7649, file: !333, line: 393, column: 40)
!7649 = distinct !DILexicalBlock(scope: !7625, file: !333, line: 393, column: 5)
!7650 = !DILocation(line: 394, column: 27, scope: !7647)
!7651 = !DILocation(line: 394, column: 13, scope: !7648)
!7652 = !DILocation(line: 395, column: 25, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7647, file: !333, line: 394, column: 42)
!7654 = !DILocation(line: 395, column: 29, scope: !7653)
!7655 = !DILocation(line: 395, column: 13, scope: !7653)
!7656 = !DILocation(line: 395, column: 34, scope: !7653)
!7657 = !DILocation(line: 396, column: 9, scope: !7653)
!7658 = !DILocation(line: 397, column: 58, scope: !7659)
!7659 = distinct !DILexicalBlock(scope: !7647, file: !333, line: 396, column: 16)
!7660 = !DILocation(line: 397, column: 13, scope: !7659)
!7661 = !DILocation(line: 393, column: 36, scope: !7649)
!7662 = !DILocation(line: 393, column: 19, scope: !7649)
!7663 = distinct !{!7663, !7624, !7664}
!7664 = !DILocation(line: 399, column: 5, scope: !7625)
!7665 = !DILocation(line: 413, column: 5, scope: !7666)
!7666 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 413, column: 5)
!7667 = !DILocation(line: 404, column: 13, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7669, file: !333, line: 404, column: 13)
!7669 = distinct !DILexicalBlock(scope: !7670, file: !333, line: 403, column: 40)
!7670 = distinct !DILexicalBlock(scope: !7645, file: !333, line: 403, column: 5)
!7671 = !DILocation(line: 404, column: 27, scope: !7668)
!7672 = !DILocation(line: 404, column: 13, scope: !7669)
!7673 = !DILocation(line: 405, column: 25, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7668, file: !333, line: 404, column: 42)
!7675 = !DILocation(line: 405, column: 29, scope: !7674)
!7676 = !DILocation(line: 405, column: 13, scope: !7674)
!7677 = !DILocation(line: 405, column: 34, scope: !7674)
!7678 = !DILocation(line: 406, column: 9, scope: !7674)
!7679 = !DILocation(line: 407, column: 59, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7668, file: !333, line: 406, column: 16)
!7681 = !DILocation(line: 407, column: 13, scope: !7680)
!7682 = !DILocation(line: 403, column: 36, scope: !7670)
!7683 = !DILocation(line: 403, column: 19, scope: !7670)
!7684 = distinct !{!7684, !7644, !7685}
!7685 = !DILocation(line: 409, column: 5, scope: !7645)
!7686 = !DILocation(line: 422, column: 5, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 422, column: 5)
!7688 = !DILocation(line: 414, column: 13, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !333, line: 414, column: 13)
!7690 = distinct !DILexicalBlock(scope: !7691, file: !333, line: 413, column: 40)
!7691 = distinct !DILexicalBlock(scope: !7666, file: !333, line: 413, column: 5)
!7692 = !DILocation(line: 414, column: 27, scope: !7689)
!7693 = !DILocation(line: 414, column: 13, scope: !7690)
!7694 = !DILocation(line: 415, column: 25, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7689, file: !333, line: 414, column: 42)
!7696 = !DILocation(line: 415, column: 29, scope: !7695)
!7697 = !DILocation(line: 415, column: 13, scope: !7695)
!7698 = !DILocation(line: 415, column: 34, scope: !7695)
!7699 = !DILocation(line: 416, column: 9, scope: !7695)
!7700 = !DILocation(line: 417, column: 58, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7689, file: !333, line: 416, column: 16)
!7702 = !DILocation(line: 417, column: 13, scope: !7701)
!7703 = !DILocation(line: 413, column: 36, scope: !7691)
!7704 = !DILocation(line: 413, column: 19, scope: !7691)
!7705 = distinct !{!7705, !7665, !7706}
!7706 = !DILocation(line: 419, column: 5, scope: !7666)
!7707 = !DILocation(line: 432, column: 5, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 432, column: 5)
!7709 = !DILocation(line: 423, column: 13, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7711, file: !333, line: 423, column: 13)
!7711 = distinct !DILexicalBlock(scope: !7712, file: !333, line: 422, column: 40)
!7712 = distinct !DILexicalBlock(scope: !7687, file: !333, line: 422, column: 5)
!7713 = !DILocation(line: 423, column: 27, scope: !7710)
!7714 = !DILocation(line: 423, column: 13, scope: !7711)
!7715 = !DILocation(line: 424, column: 26, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7710, file: !333, line: 423, column: 42)
!7717 = !DILocation(line: 424, column: 30, scope: !7716)
!7718 = !DILocation(line: 424, column: 13, scope: !7716)
!7719 = !DILocation(line: 424, column: 35, scope: !7716)
!7720 = !DILocation(line: 425, column: 9, scope: !7716)
!7721 = !DILocation(line: 426, column: 58, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7710, file: !333, line: 425, column: 16)
!7723 = !DILocation(line: 426, column: 13, scope: !7722)
!7724 = !DILocation(line: 422, column: 36, scope: !7712)
!7725 = !DILocation(line: 422, column: 19, scope: !7712)
!7726 = distinct !{!7726, !7686, !7727}
!7727 = !DILocation(line: 428, column: 5, scope: !7687)
!7728 = !DILocation(line: 442, column: 5, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 442, column: 5)
!7730 = !DILocation(line: 433, column: 13, scope: !7731)
!7731 = distinct !DILexicalBlock(scope: !7732, file: !333, line: 433, column: 13)
!7732 = distinct !DILexicalBlock(scope: !7733, file: !333, line: 432, column: 40)
!7733 = distinct !DILexicalBlock(scope: !7708, file: !333, line: 432, column: 5)
!7734 = !DILocation(line: 433, column: 27, scope: !7731)
!7735 = !DILocation(line: 433, column: 13, scope: !7732)
!7736 = !DILocation(line: 434, column: 26, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7731, file: !333, line: 433, column: 42)
!7738 = !DILocation(line: 434, column: 13, scope: !7737)
!7739 = !DILocation(line: 434, column: 31, scope: !7737)
!7740 = !DILocation(line: 435, column: 9, scope: !7737)
!7741 = !DILocation(line: 436, column: 60, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7731, file: !333, line: 435, column: 16)
!7743 = !DILocation(line: 436, column: 13, scope: !7742)
!7744 = !DILocation(line: 432, column: 36, scope: !7733)
!7745 = !DILocation(line: 432, column: 19, scope: !7733)
!7746 = distinct !{!7746, !7707, !7747}
!7747 = !DILocation(line: 438, column: 5, scope: !7708)
!7748 = !DILocation(line: 454, column: 5, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 454, column: 5)
!7750 = !DILocation(line: 443, column: 13, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7752, file: !333, line: 443, column: 13)
!7752 = distinct !DILexicalBlock(scope: !7753, file: !333, line: 442, column: 40)
!7753 = distinct !DILexicalBlock(scope: !7729, file: !333, line: 442, column: 5)
!7754 = !DILocation(line: 443, column: 27, scope: !7751)
!7755 = !DILocation(line: 443, column: 13, scope: !7752)
!7756 = !DILocation(line: 444, column: 60, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7751, file: !333, line: 443, column: 42)
!7758 = !DILocation(line: 444, column: 13, scope: !7757)
!7759 = !DILocation(line: 445, column: 9, scope: !7757)
!7760 = !DILocation(line: 442, column: 36, scope: !7753)
!7761 = !DILocation(line: 442, column: 19, scope: !7753)
!7762 = distinct !{!7762, !7728, !7763}
!7763 = !DILocation(line: 446, column: 5, scope: !7729)
!7764 = !DILocation(line: 459, column: 5, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 459, column: 5)
!7766 = !DILocation(line: 455, column: 9, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7768, file: !333, line: 454, column: 40)
!7768 = distinct !DILexicalBlock(scope: !7749, file: !333, line: 454, column: 5)
!7769 = !DILocation(line: 455, column: 23, scope: !7767)
!7770 = !DILocation(line: 454, column: 36, scope: !7768)
!7771 = !DILocation(line: 454, column: 19, scope: !7768)
!7772 = distinct !{!7772, !7748, !7773}
!7773 = !DILocation(line: 456, column: 5, scope: !7749)
!7774 = !DILocation(line: 470, column: 5, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 470, column: 5)
!7776 = !DILocation(line: 460, column: 26, scope: !7777)
!7777 = distinct !DILexicalBlock(scope: !7778, file: !333, line: 459, column: 40)
!7778 = distinct !DILexicalBlock(scope: !7765, file: !333, line: 459, column: 5)
!7779 = !DILocation(line: 462, column: 28, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7777, file: !333, line: 462, column: 13)
!7781 = !DILocation(line: 462, column: 13, scope: !7777)
!7782 = !DILocation(line: 463, column: 67, scope: !7783)
!7783 = distinct !DILexicalBlock(scope: !7780, file: !333, line: 462, column: 50)
!7784 = !DILocation(line: 463, column: 13, scope: !7783)
!7785 = !DILocation(line: 464, column: 9, scope: !7783)
!7786 = !DILocation(line: 466, column: 23, scope: !7777)
!7787 = !DILocation(line: 459, column: 36, scope: !7778)
!7788 = !DILocation(line: 459, column: 19, scope: !7778)
!7789 = distinct !{!7789, !7764, !7790}
!7790 = !DILocation(line: 467, column: 5, scope: !7765)
!7791 = !DILocation(line: 482, column: 5, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 482, column: 5)
!7793 = !DILocation(line: 471, column: 26, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7795, file: !333, line: 470, column: 40)
!7795 = distinct !DILexicalBlock(scope: !7775, file: !333, line: 470, column: 5)
!7796 = !DILocation(line: 473, column: 28, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7794, file: !333, line: 473, column: 13)
!7798 = !DILocation(line: 473, column: 13, scope: !7794)
!7799 = !DILocation(line: 474, column: 67, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7797, file: !333, line: 473, column: 50)
!7801 = !DILocation(line: 474, column: 13, scope: !7800)
!7802 = !DILocation(line: 475, column: 9, scope: !7800)
!7803 = !DILocation(line: 477, column: 23, scope: !7794)
!7804 = !DILocation(line: 470, column: 36, scope: !7795)
!7805 = !DILocation(line: 470, column: 19, scope: !7795)
!7806 = distinct !{!7806, !7774, !7807}
!7807 = !DILocation(line: 478, column: 5, scope: !7775)
!7808 = !DILocation(line: 494, column: 5, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 494, column: 5)
!7810 = !DILocation(line: 483, column: 26, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7812, file: !333, line: 482, column: 40)
!7812 = distinct !DILexicalBlock(scope: !7792, file: !333, line: 482, column: 5)
!7813 = !DILocation(line: 485, column: 28, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7811, file: !333, line: 485, column: 13)
!7815 = !DILocation(line: 485, column: 13, scope: !7811)
!7816 = !DILocation(line: 486, column: 67, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7814, file: !333, line: 485, column: 50)
!7818 = !DILocation(line: 486, column: 13, scope: !7817)
!7819 = !DILocation(line: 487, column: 9, scope: !7817)
!7820 = !DILocation(line: 489, column: 23, scope: !7811)
!7821 = !DILocation(line: 482, column: 36, scope: !7812)
!7822 = !DILocation(line: 482, column: 19, scope: !7812)
!7823 = distinct !{!7823, !7791, !7824}
!7824 = !DILocation(line: 490, column: 5, scope: !7792)
!7825 = !DILocation(line: 506, column: 5, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 506, column: 5)
!7827 = !DILocation(line: 495, column: 26, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !333, line: 494, column: 40)
!7829 = distinct !DILexicalBlock(scope: !7809, file: !333, line: 494, column: 5)
!7830 = !DILocation(line: 497, column: 28, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7828, file: !333, line: 497, column: 13)
!7832 = !DILocation(line: 497, column: 13, scope: !7828)
!7833 = !DILocation(line: 498, column: 67, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7831, file: !333, line: 497, column: 50)
!7835 = !DILocation(line: 498, column: 13, scope: !7834)
!7836 = !DILocation(line: 499, column: 9, scope: !7834)
!7837 = !DILocation(line: 501, column: 23, scope: !7828)
!7838 = !DILocation(line: 494, column: 36, scope: !7829)
!7839 = !DILocation(line: 494, column: 19, scope: !7829)
!7840 = distinct !{!7840, !7808, !7841}
!7841 = !DILocation(line: 502, column: 5, scope: !7809)
!7842 = !DILocation(line: 515, column: 5, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7409, file: !333, line: 515, column: 5)
!7844 = !DILocation(line: 507, column: 26, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7846, file: !333, line: 506, column: 40)
!7846 = distinct !DILexicalBlock(scope: !7826, file: !333, line: 506, column: 5)
!7847 = !DILocation(line: 509, column: 28, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7845, file: !333, line: 509, column: 13)
!7849 = !DILocation(line: 509, column: 13, scope: !7845)
!7850 = !DILocation(line: 510, column: 67, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7848, file: !333, line: 509, column: 50)
!7852 = !DILocation(line: 510, column: 13, scope: !7851)
!7853 = !DILocation(line: 511, column: 9, scope: !7851)
!7854 = !DILocation(line: 506, column: 36, scope: !7846)
!7855 = !DILocation(line: 506, column: 19, scope: !7846)
!7856 = distinct !{!7856, !7825, !7857}
!7857 = !DILocation(line: 512, column: 5, scope: !7826)
!7858 = !DILocation(line: 516, column: 9, scope: !7859)
!7859 = distinct !DILexicalBlock(scope: !7860, file: !333, line: 515, column: 40)
!7860 = distinct !DILexicalBlock(scope: !7843, file: !333, line: 515, column: 5)
!7861 = !DILocation(line: 516, column: 23, scope: !7859)
!7862 = !DILocation(line: 517, column: 23, scope: !7859)
!7863 = !DILocation(line: 518, column: 26, scope: !7859)
!7864 = !DILocation(line: 520, column: 28, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7859, file: !333, line: 520, column: 13)
!7866 = !DILocation(line: 520, column: 13, scope: !7859)
!7867 = !DILocation(line: 521, column: 60, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7865, file: !333, line: 520, column: 43)
!7869 = !DILocation(line: 521, column: 13, scope: !7868)
!7870 = !DILocation(line: 522, column: 9, scope: !7868)
!7871 = !DILocation(line: 515, column: 36, scope: !7860)
!7872 = !DILocation(line: 515, column: 19, scope: !7860)
!7873 = distinct !{!7873, !7842, !7874}
!7874 = !DILocation(line: 523, column: 5, scope: !7843)
!7875 = !DILocation(line: 527, column: 5, scope: !7409)
!7876 = distinct !DISubprogram(name: "pmic_i2c_init", scope: !1764, file: !1764, line: 54, type: !7877, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !7886)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!1781, !7879, !7880}
!7879 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_port_t", file: !130, line: 61, baseType: !129)
!7880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7881, size: 32)
!7881 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7882)
!7882 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_config_t", file: !130, line: 92, baseType: !7883)
!7883 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !130, line: 90, size: 32, elements: !7884)
!7884 = !{!7885}
!7885 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_frequency", scope: !7883, file: !130, line: 91, baseType: !36, size: 32)
!7886 = !{!7887, !7888}
!7887 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7876, file: !1764, line: 54, type: !7879)
!7888 = !DILocalVariable(name: "i2c_config", arg: 2, scope: !7876, file: !1764, line: 54, type: !7880)
!7889 = !DILocation(line: 0, scope: !7876)
!7890 = !DILocation(line: 57, column: 29, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7876, file: !1764, line: 57, column: 9)
!7892 = !DILocation(line: 57, column: 9, scope: !7876)
!7893 = !DILocation(line: 66, column: 70, scope: !7876)
!7894 = !DILocation(line: 66, column: 5, scope: !7876)
!7895 = !DILocation(line: 72, column: 5, scope: !7876)
!7896 = !DILocation(line: 73, column: 1, scope: !7876)
!7897 = distinct !DISubprogram(name: "pmic_i2c_send_polling", scope: !1764, file: !1764, line: 76, type: !7898, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !7900)
!7898 = !DISubroutineType(types: !7899)
!7899 = !{!1781, !7879, !185, !1947, !36}
!7900 = !{!7901, !7902, !7903, !7904, !7905, !7907}
!7901 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7897, file: !1764, line: 76, type: !7879)
!7902 = !DILocalVariable(name: "slave_address", arg: 2, scope: !7897, file: !1764, line: 76, type: !185)
!7903 = !DILocalVariable(name: "data", arg: 3, scope: !7897, file: !1764, line: 76, type: !1947)
!7904 = !DILocalVariable(name: "size", arg: 4, scope: !7897, file: !1764, line: 76, type: !36)
!7905 = !DILocalVariable(name: "transaction_status", scope: !7897, file: !1764, line: 78, type: !7906)
!7906 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_status_t", file: !433, line: 168, baseType: !459)
!7907 = !DILocalVariable(name: "config_size", scope: !7897, file: !1764, line: 79, type: !7908)
!7908 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !433, line: 176, baseType: !7909)
!7909 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !433, line: 170, size: 160, elements: !7910)
!7910 = !{!7911, !7912, !7913, !7914, !7915}
!7911 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !7909, file: !433, line: 171, baseType: !36, size: 32)
!7912 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !7909, file: !433, line: 172, baseType: !36, size: 32, offset: 32)
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !7909, file: !433, line: 173, baseType: !36, size: 32, offset: 64)
!7914 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !7909, file: !433, line: 174, baseType: !36, size: 32, offset: 96)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !7909, file: !433, line: 175, baseType: !36, size: 32, offset: 128)
!7916 = !DILocation(line: 0, scope: !7897)
!7917 = !DILocation(line: 79, column: 5, scope: !7897)
!7918 = !DILocation(line: 79, column: 28, scope: !7897)
!7919 = !DILocation(line: 81, column: 29, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7897, file: !1764, line: 81, column: 9)
!7921 = !DILocation(line: 81, column: 9, scope: !7897)
!7922 = !DILocation(line: 84, column: 14, scope: !7923)
!7923 = distinct !DILexicalBlock(scope: !7897, file: !1764, line: 84, column: 9)
!7924 = !DILocation(line: 84, column: 22, scope: !7923)
!7925 = !DILocation(line: 93, column: 5, scope: !7897)
!7926 = !DILocation(line: 96, column: 17, scope: !7897)
!7927 = !DILocation(line: 96, column: 27, scope: !7897)
!7928 = !DILocation(line: 97, column: 17, scope: !7897)
!7929 = !DILocation(line: 97, column: 30, scope: !7897)
!7930 = !DILocation(line: 104, column: 100, scope: !7897)
!7931 = !DILocation(line: 104, column: 5, scope: !7897)
!7932 = !DILocation(line: 108, column: 5, scope: !7897)
!7933 = !DILocation(line: 111, column: 5, scope: !7897)
!7934 = !DILocation(line: 114, column: 5, scope: !7897)
!7935 = !DILocation(line: 114, column: 17, scope: !7897)
!7936 = !DILocation(line: 114, column: 14, scope: !7897)
!7937 = distinct !{!7937, !7934, !7938}
!7938 = !DILocation(line: 115, column: 5, scope: !7897)
!7939 = !DILocation(line: 118, column: 26, scope: !7897)
!7940 = !DILocation(line: 124, column: 33, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7897, file: !1764, line: 124, column: 9)
!7942 = !DILocation(line: 124, column: 9, scope: !7897)
!7943 = !DILocation(line: 126, column: 9, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7941, file: !1764, line: 124, column: 56)
!7945 = !DILocation(line: 127, column: 9, scope: !7944)
!7946 = !DILocation(line: 131, column: 1, scope: !7897)
!7947 = distinct !DISubprogram(name: "pmic_i2c_receive_polling", scope: !1764, file: !1764, line: 134, type: !7948, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !7950)
!7948 = !DISubroutineType(types: !7949)
!7949 = !{!1781, !7879, !185, !184, !36}
!7950 = !{!7951, !7952, !7953, !7954, !7955, !7956}
!7951 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7947, file: !1764, line: 134, type: !7879)
!7952 = !DILocalVariable(name: "slave_address", arg: 2, scope: !7947, file: !1764, line: 134, type: !185)
!7953 = !DILocalVariable(name: "buffer", arg: 3, scope: !7947, file: !1764, line: 134, type: !184)
!7954 = !DILocalVariable(name: "size", arg: 4, scope: !7947, file: !1764, line: 134, type: !36)
!7955 = !DILocalVariable(name: "transaction_status", scope: !7947, file: !1764, line: 136, type: !7906)
!7956 = !DILocalVariable(name: "config_size", scope: !7947, file: !1764, line: 137, type: !7908)
!7957 = !DILocation(line: 0, scope: !7947)
!7958 = !DILocation(line: 137, column: 5, scope: !7947)
!7959 = !DILocation(line: 137, column: 28, scope: !7947)
!7960 = !DILocation(line: 139, column: 29, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7947, file: !1764, line: 139, column: 9)
!7962 = !DILocation(line: 139, column: 9, scope: !7947)
!7963 = !DILocation(line: 142, column: 14, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7947, file: !1764, line: 142, column: 9)
!7965 = !DILocation(line: 142, column: 24, scope: !7964)
!7966 = !DILocation(line: 151, column: 5, scope: !7947)
!7967 = !DILocation(line: 154, column: 17, scope: !7947)
!7968 = !DILocation(line: 154, column: 27, scope: !7947)
!7969 = !DILocation(line: 155, column: 17, scope: !7947)
!7970 = !DILocation(line: 155, column: 30, scope: !7947)
!7971 = !DILocation(line: 162, column: 103, scope: !7947)
!7972 = !DILocation(line: 162, column: 5, scope: !7947)
!7973 = !DILocation(line: 165, column: 5, scope: !7947)
!7974 = !DILocation(line: 168, column: 5, scope: !7947)
!7975 = !DILocation(line: 168, column: 17, scope: !7947)
!7976 = !DILocation(line: 168, column: 14, scope: !7947)
!7977 = distinct !{!7977, !7974, !7978}
!7978 = !DILocation(line: 169, column: 5, scope: !7947)
!7979 = !DILocation(line: 172, column: 26, scope: !7947)
!7980 = !DILocation(line: 175, column: 33, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7947, file: !1764, line: 175, column: 9)
!7982 = !DILocation(line: 175, column: 9, scope: !7947)
!7983 = !DILocation(line: 183, column: 9, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7981, file: !1764, line: 182, column: 12)
!7985 = !DILocation(line: 189, column: 9, scope: !7984)
!7986 = !DILocation(line: 191, column: 1, scope: !7947)
!7987 = distinct !DISubprogram(name: "pmic_i2c_send_to_receive_polling", scope: !1764, file: !1764, line: 194, type: !7988, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1763, retainedNodes: !7999)
!7988 = !DISubroutineType(types: !7989)
!7989 = !{!1781, !7879, !7990}
!7990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7991, size: 32)
!7991 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmic_i2c_send_to_receive_config_t", file: !130, line: 100, baseType: !7992)
!7992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !130, line: 94, size: 160, elements: !7993)
!7993 = !{!7994, !7995, !7996, !7997, !7998}
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !7992, file: !130, line: 95, baseType: !185, size: 8)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "send_data", scope: !7992, file: !130, line: 96, baseType: !1947, size: 32, offset: 32)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "send_length", scope: !7992, file: !130, line: 97, baseType: !36, size: 32, offset: 64)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "receive_buffer", scope: !7992, file: !130, line: 98, baseType: !184, size: 32, offset: 96)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "receive_length", scope: !7992, file: !130, line: 99, baseType: !36, size: 32, offset: 128)
!7999 = !{!8000, !8001, !8002, !8003}
!8000 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !7987, file: !1764, line: 194, type: !7879)
!8001 = !DILocalVariable(name: "i2c_send_to_receive_config", arg: 2, scope: !7987, file: !1764, line: 194, type: !7990)
!8002 = !DILocalVariable(name: "transaction_status", scope: !7987, file: !1764, line: 196, type: !7906)
!8003 = !DILocalVariable(name: "config_size", scope: !7987, file: !1764, line: 197, type: !7908)
!8004 = !DILocation(line: 0, scope: !7987)
!8005 = !DILocation(line: 197, column: 5, scope: !7987)
!8006 = !DILocation(line: 197, column: 28, scope: !7987)
!8007 = !DILocation(line: 198, column: 29, scope: !8008)
!8008 = distinct !DILexicalBlock(scope: !7987, file: !1764, line: 198, column: 9)
!8009 = !DILocation(line: 198, column: 9, scope: !7987)
!8010 = !DILocation(line: 201, column: 45, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !7987, file: !1764, line: 201, column: 9)
!8012 = !DILocation(line: 201, column: 14, scope: !8011)
!8013 = !DILocation(line: 201, column: 55, scope: !8011)
!8014 = !DILocation(line: 201, column: 94, scope: !8011)
!8015 = !DILocation(line: 201, column: 63, scope: !8011)
!8016 = !DILocation(line: 201, column: 9, scope: !7987)
!8017 = !DILocation(line: 204, column: 37, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !7987, file: !1764, line: 204, column: 9)
!8019 = !DILocation(line: 204, column: 49, scope: !8018)
!8020 = !DILocation(line: 204, column: 66, scope: !8018)
!8021 = !DILocation(line: 204, column: 97, scope: !8018)
!8022 = !DILocation(line: 204, column: 112, scope: !8018)
!8023 = !DILocation(line: 204, column: 9, scope: !7987)
!8024 = !DILocation(line: 212, column: 5, scope: !7987)
!8025 = !DILocation(line: 213, column: 57, scope: !7987)
!8026 = !DILocation(line: 213, column: 17, scope: !7987)
!8027 = !DILocation(line: 213, column: 27, scope: !7987)
!8028 = !DILocation(line: 214, column: 60, scope: !7987)
!8029 = !DILocation(line: 214, column: 17, scope: !7987)
!8030 = !DILocation(line: 214, column: 30, scope: !7987)
!8031 = !DILocation(line: 218, column: 111, scope: !7987)
!8032 = !DILocation(line: 218, column: 5, scope: !7987)
!8033 = !DILocation(line: 220, column: 83, scope: !7987)
!8034 = !DILocation(line: 220, column: 122, scope: !7987)
!8035 = !DILocation(line: 220, column: 5, scope: !7987)
!8036 = !DILocation(line: 221, column: 5, scope: !7987)
!8037 = !DILocation(line: 222, column: 5, scope: !7987)
!8038 = !DILocation(line: 222, column: 17, scope: !7987)
!8039 = !DILocation(line: 222, column: 14, scope: !7987)
!8040 = distinct !{!8040, !8037, !8041}
!8041 = !DILocation(line: 223, column: 5, scope: !7987)
!8042 = !DILocation(line: 224, column: 26, scope: !7987)
!8043 = !DILocation(line: 225, column: 33, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !7987, file: !1764, line: 225, column: 9)
!8045 = !DILocation(line: 225, column: 9, scope: !7987)
!8046 = !DILocation(line: 227, column: 9, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8044, file: !1764, line: 225, column: 56)
!8048 = !DILocation(line: 233, column: 9, scope: !8047)
!8049 = !DILocation(line: 235, column: 86, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8044, file: !1764, line: 234, column: 12)
!8051 = !DILocation(line: 235, column: 130, scope: !8050)
!8052 = !DILocation(line: 235, column: 9, scope: !8050)
!8053 = !DILocation(line: 241, column: 9, scope: !8050)
!8054 = !DILocation(line: 243, column: 1, scope: !7987)
!8055 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !1783, file: !1783, line: 42, type: !8056, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !8059)
!8056 = !DISubroutineType(types: !8057)
!8057 = !{null, !8058, !20, !8058, null}
!8058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 32)
!8059 = !{!8060, !8061, !8062}
!8060 = !DILocalVariable(name: "func", arg: 1, scope: !8055, file: !1783, line: 42, type: !8058)
!8061 = !DILocalVariable(name: "line", arg: 2, scope: !8055, file: !1783, line: 42, type: !20)
!8062 = !DILocalVariable(name: "message", arg: 3, scope: !8055, file: !1783, line: 42, type: !8058)
!8063 = !DILocation(line: 0, scope: !8055)
!8064 = !DILocation(line: 44, column: 1, scope: !8055)
!8065 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !1783, file: !1783, line: 45, type: !8056, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !8066)
!8066 = !{!8067, !8068, !8069}
!8067 = !DILocalVariable(name: "func", arg: 1, scope: !8065, file: !1783, line: 45, type: !8058)
!8068 = !DILocalVariable(name: "line", arg: 2, scope: !8065, file: !1783, line: 45, type: !20)
!8069 = !DILocalVariable(name: "message", arg: 3, scope: !8065, file: !1783, line: 45, type: !8058)
!8070 = !DILocation(line: 0, scope: !8065)
!8071 = !DILocation(line: 47, column: 1, scope: !8065)
!8072 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !1783, file: !1783, line: 48, type: !8056, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !8073)
!8073 = !{!8074, !8075, !8076}
!8074 = !DILocalVariable(name: "func", arg: 1, scope: !8072, file: !1783, line: 48, type: !8058)
!8075 = !DILocalVariable(name: "line", arg: 2, scope: !8072, file: !1783, line: 48, type: !20)
!8076 = !DILocalVariable(name: "message", arg: 3, scope: !8072, file: !1783, line: 48, type: !8058)
!8077 = !DILocation(line: 0, scope: !8072)
!8078 = !DILocation(line: 50, column: 1, scope: !8072)
!8079 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !1783, file: !1783, line: 52, type: !8080, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1782, retainedNodes: !8084)
!8080 = !DISubroutineType(types: !8081)
!8081 = !{null, !8058, !20, !8058, !8082, !20, null}
!8082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8083, size: 32)
!8083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!8084 = !{!8085, !8086, !8087, !8088, !8089}
!8085 = !DILocalVariable(name: "func", arg: 1, scope: !8079, file: !1783, line: 52, type: !8058)
!8086 = !DILocalVariable(name: "line", arg: 2, scope: !8079, file: !1783, line: 52, type: !20)
!8087 = !DILocalVariable(name: "message", arg: 3, scope: !8079, file: !1783, line: 52, type: !8058)
!8088 = !DILocalVariable(name: "data", arg: 4, scope: !8079, file: !1783, line: 52, type: !8082)
!8089 = !DILocalVariable(name: "length", arg: 5, scope: !8079, file: !1783, line: 52, type: !20)
!8090 = !DILocation(line: 0, scope: !8079)
!8091 = !DILocation(line: 55, column: 1, scope: !8079)
!8092 = distinct !DISubprogram(name: "i2c_set_frequency", scope: !359, file: !359, line: 74, type: !5422, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !8093)
!8093 = !{!8094, !8095, !8096, !8097, !8098, !8099, !8100, !8101}
!8094 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8092, file: !359, line: 74, type: !36)
!8095 = !DILocalVariable(name: "transfer_frequency", arg: 2, scope: !8092, file: !359, line: 74, type: !36)
!8096 = !DILocalVariable(name: "frequency", scope: !8092, file: !359, line: 76, type: !36)
!8097 = !DILocalVariable(name: "step_cnt_div", scope: !8092, file: !359, line: 77, type: !36)
!8098 = !DILocalVariable(name: "sample_cnt_div", scope: !8092, file: !359, line: 78, type: !36)
!8099 = !DILocalVariable(name: "orignal_register_value", scope: !8092, file: !359, line: 79, type: !36)
!8100 = !DILocalVariable(name: "register_value", scope: !8092, file: !359, line: 79, type: !36)
!8101 = !DILocalVariable(name: "temp", scope: !8092, file: !359, line: 80, type: !36)
!8102 = !DILocation(line: 0, scope: !8092)
!8103 = !DILocation(line: 83, column: 5, scope: !8092)
!8104 = !DILocation(line: 83, column: 36, scope: !8092)
!8105 = !DILocation(line: 83, column: 46, scope: !8092)
!8106 = !DILocation(line: 84, column: 5, scope: !8092)
!8107 = !DILocation(line: 87, column: 54, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8092, file: !359, line: 84, column: 33)
!8109 = !DILocation(line: 89, column: 13, scope: !8108)
!8110 = !DILocation(line: 95, column: 13, scope: !8108)
!8111 = !DILocation(line: 98, column: 13, scope: !8108)
!8112 = !DILocation(line: 101, column: 13, scope: !8108)
!8113 = !DILocation(line: 104, column: 13, scope: !8108)
!8114 = !DILocation(line: 109, column: 13, scope: !8108)
!8115 = !DILocation(line: 117, column: 5, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8092, file: !359, line: 117, column: 5)
!8117 = !DILocation(line: 119, column: 31, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8119, file: !359, line: 117, column: 69)
!8119 = distinct !DILexicalBlock(scope: !8116, file: !359, line: 117, column: 5)
!8120 = !DILocation(line: 120, column: 60, scope: !8118)
!8121 = !DILocation(line: 120, column: 67, scope: !8118)
!8122 = !DILocation(line: 120, column: 72, scope: !8118)
!8123 = !DILocation(line: 122, column: 26, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8118, file: !359, line: 122, column: 13)
!8125 = !DILocation(line: 122, column: 13, scope: !8118)
!8126 = !DILocation(line: 117, column: 65, scope: !8119)
!8127 = !DILocation(line: 117, column: 45, scope: !8119)
!8128 = distinct !{!8128, !8115, !8129}
!8129 = !DILocation(line: 125, column: 5, scope: !8116)
!8130 = !DILocation(line: 0, scope: !8116)
!8131 = !DILocation(line: 128, column: 17, scope: !8092)
!8132 = !DILocation(line: 131, column: 62, scope: !8092)
!8133 = !DILocation(line: 131, column: 70, scope: !8092)
!8134 = !DILocation(line: 132, column: 94, scope: !8092)
!8135 = !DILocation(line: 132, column: 76, scope: !8092)
!8136 = !DILocation(line: 132, column: 157, scope: !8092)
!8137 = !DILocation(line: 132, column: 45, scope: !8092)
!8138 = !DILocation(line: 133, column: 45, scope: !8092)
!8139 = !DILocation(line: 133, column: 43, scope: !8092)
!8140 = !DILocation(line: 134, column: 1, scope: !8092)
!8141 = distinct !DISubprogram(name: "i2c_config_hardware", scope: !359, file: !359, line: 143, type: !8142, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !8154)
!8142 = !DISubroutineType(types: !8143)
!8143 = !{null, !36, !8144, !185, !8145}
!8144 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_type_t", file: !433, line: 160, baseType: !442)
!8145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8146, size: 32)
!8146 = !DIDerivedType(tag: DW_TAG_typedef, name: "i2c_transaction_size_t", file: !433, line: 176, baseType: !8147)
!8147 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !433, line: 170, size: 160, elements: !8148)
!8148 = !{!8149, !8150, !8151, !8152, !8153}
!8149 = !DIDerivedType(tag: DW_TAG_member, name: "send_size", scope: !8147, file: !433, line: 171, baseType: !36, size: 32)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "receive_size", scope: !8147, file: !433, line: 172, baseType: !36, size: 32, offset: 32)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length", scope: !8147, file: !433, line: 173, baseType: !36, size: 32, offset: 64)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_length_aux", scope: !8147, file: !433, line: 174, baseType: !36, size: 32, offset: 96)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "transaction_length", scope: !8147, file: !433, line: 175, baseType: !36, size: 32, offset: 128)
!8154 = !{!8155, !8156, !8157, !8158}
!8155 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8141, file: !359, line: 143, type: !36)
!8156 = !DILocalVariable(name: "transaction_type", arg: 2, scope: !8141, file: !359, line: 143, type: !8144)
!8157 = !DILocalVariable(name: "slave_address", arg: 3, scope: !8141, file: !359, line: 143, type: !185)
!8158 = !DILocalVariable(name: "config_size", arg: 4, scope: !8141, file: !359, line: 143, type: !8145)
!8159 = !DILocation(line: 0, scope: !8141)
!8160 = !DILocation(line: 146, column: 49, scope: !8141)
!8161 = !DILocation(line: 146, column: 5, scope: !8141)
!8162 = !DILocation(line: 146, column: 36, scope: !8141)
!8163 = !DILocation(line: 146, column: 47, scope: !8141)
!8164 = !DILocation(line: 148, column: 5, scope: !8141)
!8165 = !DILocation(line: 150, column: 5, scope: !8141)
!8166 = !DILocation(line: 153, column: 5, scope: !8141)
!8167 = !DILocation(line: 0, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !359, line: 156, column: 17)
!8169 = distinct !DILexicalBlock(scope: !8141, file: !359, line: 153, column: 31)
!8170 = !DILocation(line: 164, column: 72, scope: !8169)
!8171 = !DILocation(line: 164, column: 59, scope: !8169)
!8172 = !DILocation(line: 164, column: 44, scope: !8169)
!8173 = !DILocation(line: 164, column: 57, scope: !8169)
!8174 = !DILocation(line: 165, column: 44, scope: !8169)
!8175 = !DILocation(line: 165, column: 56, scope: !8169)
!8176 = !DILocation(line: 167, column: 13, scope: !8169)
!8177 = !DILocation(line: 0, scope: !8178)
!8178 = distinct !DILexicalBlock(scope: !8169, file: !359, line: 170, column: 17)
!8179 = !DILocation(line: 177, column: 72, scope: !8169)
!8180 = !DILocation(line: 177, column: 59, scope: !8169)
!8181 = !DILocation(line: 177, column: 44, scope: !8169)
!8182 = !DILocation(line: 177, column: 57, scope: !8169)
!8183 = !DILocation(line: 178, column: 44, scope: !8169)
!8184 = !DILocation(line: 178, column: 56, scope: !8169)
!8185 = !DILocation(line: 180, column: 13, scope: !8169)
!8186 = !DILocation(line: 0, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8169, file: !359, line: 183, column: 17)
!8188 = !DILocation(line: 190, column: 72, scope: !8169)
!8189 = !DILocation(line: 190, column: 59, scope: !8169)
!8190 = !DILocation(line: 190, column: 44, scope: !8169)
!8191 = !DILocation(line: 190, column: 57, scope: !8169)
!8192 = !DILocation(line: 191, column: 44, scope: !8169)
!8193 = !DILocation(line: 191, column: 56, scope: !8169)
!8194 = !DILocation(line: 193, column: 13, scope: !8169)
!8195 = !DILocation(line: 0, scope: !8196)
!8196 = distinct !DILexicalBlock(scope: !8169, file: !359, line: 196, column: 17)
!8197 = !DILocation(line: 203, column: 44, scope: !8169)
!8198 = !DILocation(line: 203, column: 57, scope: !8169)
!8199 = !DILocation(line: 204, column: 71, scope: !8169)
!8200 = !DILocation(line: 204, column: 58, scope: !8169)
!8201 = !DILocation(line: 204, column: 44, scope: !8169)
!8202 = !DILocation(line: 204, column: 56, scope: !8169)
!8203 = !DILocation(line: 206, column: 13, scope: !8169)
!8204 = !DILocation(line: 0, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8169, file: !359, line: 209, column: 17)
!8206 = !DILocation(line: 216, column: 72, scope: !8169)
!8207 = !DILocation(line: 216, column: 59, scope: !8169)
!8208 = !DILocation(line: 216, column: 44, scope: !8169)
!8209 = !DILocation(line: 216, column: 57, scope: !8169)
!8210 = !DILocation(line: 217, column: 44, scope: !8169)
!8211 = !DILocation(line: 217, column: 56, scope: !8169)
!8212 = !DILocation(line: 218, column: 76, scope: !8169)
!8213 = !DILocation(line: 218, column: 63, scope: !8169)
!8214 = !DILocation(line: 219, column: 13, scope: !8169)
!8215 = !DILocation(line: 0, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8169, file: !359, line: 222, column: 17)
!8217 = !DILocation(line: 229, column: 72, scope: !8169)
!8218 = !DILocation(line: 229, column: 59, scope: !8169)
!8219 = !DILocation(line: 229, column: 44, scope: !8169)
!8220 = !DILocation(line: 229, column: 57, scope: !8169)
!8221 = !DILocation(line: 230, column: 75, scope: !8169)
!8222 = !DILocation(line: 230, column: 58, scope: !8169)
!8223 = !DILocation(line: 230, column: 44, scope: !8169)
!8224 = !DILocation(line: 230, column: 56, scope: !8169)
!8225 = !DILocation(line: 232, column: 13, scope: !8169)
!8226 = !DILocation(line: 235, column: 44, scope: !8169)
!8227 = !DILocation(line: 235, column: 54, scope: !8169)
!8228 = !DILocation(line: 236, column: 44, scope: !8169)
!8229 = !DILocation(line: 236, column: 52, scope: !8169)
!8230 = !DILocation(line: 237, column: 72, scope: !8169)
!8231 = !DILocation(line: 237, column: 59, scope: !8169)
!8232 = !DILocation(line: 237, column: 44, scope: !8169)
!8233 = !DILocation(line: 237, column: 57, scope: !8169)
!8234 = !DILocation(line: 238, column: 71, scope: !8169)
!8235 = !DILocation(line: 238, column: 58, scope: !8169)
!8236 = !DILocation(line: 238, column: 44, scope: !8169)
!8237 = !DILocation(line: 238, column: 56, scope: !8169)
!8238 = !DILocation(line: 240, column: 13, scope: !8169)
!8239 = !DILocation(line: 242, column: 44, scope: !8169)
!8240 = !DILocation(line: 242, column: 54, scope: !8169)
!8241 = !DILocation(line: 243, column: 44, scope: !8169)
!8242 = !DILocation(line: 243, column: 52, scope: !8169)
!8243 = !DILocation(line: 244, column: 72, scope: !8169)
!8244 = !DILocation(line: 244, column: 59, scope: !8169)
!8245 = !DILocation(line: 244, column: 44, scope: !8169)
!8246 = !DILocation(line: 244, column: 57, scope: !8169)
!8247 = !DILocation(line: 245, column: 71, scope: !8169)
!8248 = !DILocation(line: 245, column: 58, scope: !8169)
!8249 = !DILocation(line: 245, column: 44, scope: !8169)
!8250 = !DILocation(line: 245, column: 56, scope: !8169)
!8251 = !DILocation(line: 248, column: 13, scope: !8169)
!8252 = !DILocation(line: 250, column: 44, scope: !8169)
!8253 = !DILocation(line: 250, column: 54, scope: !8169)
!8254 = !DILocation(line: 251, column: 44, scope: !8169)
!8255 = !DILocation(line: 251, column: 52, scope: !8169)
!8256 = !DILocation(line: 252, column: 72, scope: !8169)
!8257 = !DILocation(line: 252, column: 59, scope: !8169)
!8258 = !DILocation(line: 252, column: 44, scope: !8169)
!8259 = !DILocation(line: 252, column: 57, scope: !8169)
!8260 = !DILocation(line: 253, column: 71, scope: !8169)
!8261 = !DILocation(line: 253, column: 58, scope: !8169)
!8262 = !DILocation(line: 253, column: 44, scope: !8169)
!8263 = !DILocation(line: 253, column: 56, scope: !8169)
!8264 = !DILocation(line: 254, column: 76, scope: !8169)
!8265 = !DILocation(line: 254, column: 63, scope: !8169)
!8266 = !DILocation(line: 255, column: 13, scope: !8169)
!8267 = !DILocation(line: 0, scope: !8169)
!8268 = !DILocation(line: 261, column: 1, scope: !8141)
!8269 = distinct !DISubprogram(name: "i2c_write_fifo", scope: !359, file: !359, line: 266, type: !8270, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !8272)
!8270 = !DISubroutineType(types: !8271)
!8271 = !{null, !36, !1947, !36}
!8272 = !{!8273, !8274, !8275, !8276}
!8273 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8269, file: !359, line: 266, type: !36)
!8274 = !DILocalVariable(name: "data", arg: 2, scope: !8269, file: !359, line: 266, type: !1947)
!8275 = !DILocalVariable(name: "size", arg: 3, scope: !8269, file: !359, line: 266, type: !36)
!8276 = !DILocalVariable(name: "i", scope: !8269, file: !359, line: 268, type: !36)
!8277 = !DILocation(line: 0, scope: !8269)
!8278 = !DILocation(line: 269, column: 19, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8280, file: !359, line: 269, column: 5)
!8280 = distinct !DILexicalBlock(scope: !8269, file: !359, line: 269, column: 5)
!8281 = !DILocation(line: 269, column: 5, scope: !8280)
!8282 = !DILocation(line: 270, column: 59, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8279, file: !359, line: 269, column: 32)
!8284 = !DILocation(line: 270, column: 52, scope: !8283)
!8285 = !DILocation(line: 270, column: 50, scope: !8283)
!8286 = !DILocation(line: 269, column: 28, scope: !8279)
!8287 = distinct !{!8287, !8281, !8288}
!8288 = !DILocation(line: 271, column: 5, scope: !8280)
!8289 = !DILocation(line: 272, column: 1, scope: !8269)
!8290 = distinct !DISubprogram(name: "i2c_read_fifo", scope: !359, file: !359, line: 274, type: !8291, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !8293)
!8291 = !DISubroutineType(types: !8292)
!8292 = !{null, !36, !184, !36}
!8293 = !{!8294, !8295, !8296, !8297}
!8294 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8290, file: !359, line: 274, type: !36)
!8295 = !DILocalVariable(name: "buffer", arg: 2, scope: !8290, file: !359, line: 274, type: !184)
!8296 = !DILocalVariable(name: "size", arg: 3, scope: !8290, file: !359, line: 274, type: !36)
!8297 = !DILocalVariable(name: "i", scope: !8290, file: !359, line: 276, type: !36)
!8298 = !DILocation(line: 0, scope: !8290)
!8299 = !DILocation(line: 277, column: 19, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8301, file: !359, line: 277, column: 5)
!8301 = distinct !DILexicalBlock(scope: !8290, file: !359, line: 277, column: 5)
!8302 = !DILocation(line: 277, column: 5, scope: !8301)
!8303 = !DILocation(line: 278, column: 56, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8300, file: !359, line: 277, column: 32)
!8305 = !DILocation(line: 278, column: 25, scope: !8304)
!8306 = !DILocation(line: 278, column: 18, scope: !8304)
!8307 = !DILocation(line: 278, column: 23, scope: !8304)
!8308 = !DILocation(line: 277, column: 28, scope: !8300)
!8309 = distinct !{!8309, !8302, !8310}
!8310 = !DILocation(line: 279, column: 5, scope: !8301)
!8311 = !DILocation(line: 280, column: 1, scope: !8290)
!8312 = distinct !DISubprogram(name: "i2c_get_transaction_status", scope: !359, file: !359, line: 282, type: !8313, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !358, retainedNodes: !8315)
!8313 = !DISubroutineType(types: !8314)
!8314 = !{!7906, !36}
!8315 = !{!8316, !8317, !8318}
!8316 = !DILocalVariable(name: "i2c_port", arg: 1, scope: !8312, file: !359, line: 282, type: !36)
!8317 = !DILocalVariable(name: "register_value", scope: !8312, file: !359, line: 284, type: !113)
!8318 = !DILocalVariable(name: "return_status", scope: !8312, file: !359, line: 285, type: !7906)
!8319 = !DILocation(line: 0, scope: !8312)
!8320 = !DILocation(line: 287, column: 22, scope: !8312)
!8321 = !DILocation(line: 287, column: 53, scope: !8312)
!8322 = !DILocation(line: 289, column: 15, scope: !8323)
!8323 = distinct !DILexicalBlock(scope: !8312, file: !359, line: 289, column: 9)
!8324 = !DILocation(line: 289, column: 30, scope: !8323)
!8325 = !DILocation(line: 289, column: 11, scope: !8323)
!8326 = !DILocation(line: 289, column: 9, scope: !8312)
!8327 = !DILocation(line: 291, column: 37, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8323, file: !359, line: 291, column: 16)
!8329 = !DILocation(line: 291, column: 18, scope: !8328)
!8330 = !DILocation(line: 291, column: 16, scope: !8323)
!8331 = !DILocation(line: 293, column: 37, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8328, file: !359, line: 293, column: 16)
!8333 = !DILocation(line: 293, column: 18, scope: !8332)
!8334 = !DILocation(line: 293, column: 16, scope: !8328)
!8335 = !DILocation(line: 295, column: 20, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8332, file: !359, line: 295, column: 16)
!8337 = !DILocation(line: 295, column: 16, scope: !8332)
!8338 = !DILocation(line: 318, column: 5, scope: !8312)
!8339 = !DILocation(line: 319, column: 5, scope: !8312)
!8340 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !548, file: !548, line: 93, type: !6216, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8341)
!8341 = !{!8342, !8343}
!8342 = !DILocalVariable(name: "num", arg: 1, scope: !8340, file: !548, line: 93, type: !36)
!8343 = !DILocalVariable(name: "ret", scope: !8340, file: !548, line: 95, type: !7)
!8344 = !DILocation(line: 0, scope: !8340)
!8345 = !DILocation(line: 100, column: 9, scope: !8340)
!8346 = !DILocation(line: 102, column: 5, scope: !8340)
!8347 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !548, file: !548, line: 110, type: !8348, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8351)
!8348 = !DISubroutineType(types: !8349)
!8349 = !{null, !8350}
!8350 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !113)
!8351 = !{!8352, !8353}
!8352 = !DILocalVariable(name: "CS", arg: 1, scope: !8347, file: !548, line: 110, type: !8350)
!8353 = !DILocalVariable(name: "val", scope: !8347, file: !548, line: 112, type: !36)
!8354 = !DILocation(line: 0, scope: !8347)
!8355 = !DILocation(line: 116, column: 16, scope: !8347)
!8356 = !DILocation(line: 117, column: 9, scope: !8347)
!8357 = !DILocation(line: 122, column: 13, scope: !8358)
!8358 = distinct !DILexicalBlock(scope: !8359, file: !548, line: 121, column: 27)
!8359 = distinct !DILexicalBlock(scope: !8360, file: !548, line: 121, column: 16)
!8360 = distinct !DILexicalBlock(scope: !8347, file: !548, line: 117, column: 9)
!8361 = !DILocation(line: 127, column: 9, scope: !8362)
!8362 = distinct !DILexicalBlock(scope: !8363, file: !548, line: 127, column: 9)
!8363 = distinct !DILexicalBlock(scope: !8364, file: !548, line: 127, column: 9)
!8364 = distinct !DILexicalBlock(scope: !8359, file: !548, line: 125, column: 12)
!8365 = distinct !{!8365, !8361, !8361}
!8366 = !DILocation(line: 0, scope: !8360)
!8367 = !DILocation(line: 130, column: 9, scope: !8347)
!8368 = !DILocation(line: 138, column: 24, scope: !8347)
!8369 = !DILocation(line: 139, column: 1, scope: !8347)
!8370 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !548, file: !548, line: 148, type: !8348, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8371)
!8371 = !{!8372, !8373}
!8372 = !DILocalVariable(name: "CS", arg: 1, scope: !8370, file: !548, line: 148, type: !8350)
!8373 = !DILocalVariable(name: "val", scope: !8370, file: !548, line: 150, type: !36)
!8374 = !DILocation(line: 0, scope: !8370)
!8375 = !DILocation(line: 153, column: 16, scope: !8370)
!8376 = !DILocation(line: 154, column: 9, scope: !8370)
!8377 = !DILocation(line: 155, column: 24, scope: !8370)
!8378 = !DILocation(line: 158, column: 5, scope: !8370)
!8379 = !DILocation(line: 158, column: 18, scope: !8370)
!8380 = !DILocation(line: 158, column: 32, scope: !8370)
!8381 = distinct !{!8381, !8378, !8382}
!8382 = !DILocation(line: 158, column: 49, scope: !8370)
!8383 = !DILocation(line: 163, column: 16, scope: !8370)
!8384 = !DILocation(line: 164, column: 9, scope: !8370)
!8385 = !DILocation(line: 165, column: 24, scope: !8370)
!8386 = !DILocation(line: 168, column: 5, scope: !8370)
!8387 = !DILocation(line: 168, column: 18, scope: !8370)
!8388 = !DILocation(line: 168, column: 32, scope: !8370)
!8389 = distinct !{!8389, !8386, !8390}
!8390 = !DILocation(line: 168, column: 46, scope: !8370)
!8391 = !DILocation(line: 179, column: 1, scope: !8370)
!8392 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !548, file: !548, line: 186, type: !8393, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8395)
!8393 = !DISubroutineType(types: !8394)
!8394 = !{!36, !8350}
!8395 = !{!8396, !8397, !8398}
!8396 = !DILocalVariable(name: "CS", arg: 1, scope: !8392, file: !548, line: 186, type: !8350)
!8397 = !DILocalVariable(name: "val", scope: !8392, file: !548, line: 188, type: !36)
!8398 = !DILocalVariable(name: "misc_ctl", scope: !8392, file: !548, line: 189, type: !36)
!8399 = !DILocation(line: 0, scope: !8392)
!8400 = !DILocation(line: 204, column: 16, scope: !8392)
!8401 = !DILocation(line: 208, column: 12, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8392, file: !548, line: 208, column: 9)
!8403 = !DILocation(line: 208, column: 9, scope: !8392)
!8404 = !DILocation(line: 212, column: 20, scope: !8392)
!8405 = !DILocation(line: 215, column: 1, scope: !8392)
!8406 = !DILocation(line: 215, column: 15, scope: !8392)
!8407 = !DILocation(line: 215, column: 29, scope: !8392)
!8408 = !DILocation(line: 215, column: 8, scope: !8392)
!8409 = distinct !{!8409, !8405, !8410}
!8410 = !DILocation(line: 215, column: 46, scope: !8392)
!8411 = !DILocation(line: 216, column: 22, scope: !8392)
!8412 = !DILocation(line: 216, column: 36, scope: !8392)
!8413 = !DILocation(line: 216, column: 9, scope: !8392)
!8414 = distinct !{!8414, !8413, !8415}
!8415 = !DILocation(line: 216, column: 47, scope: !8392)
!8416 = !DILocation(line: 218, column: 13, scope: !8392)
!8417 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !548, file: !548, line: 227, type: !8348, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8418)
!8418 = !{!8419}
!8419 = !DILocalVariable(name: "CS", arg: 1, scope: !8417, file: !548, line: 227, type: !8350)
!8420 = !DILocation(line: 0, scope: !8417)
!8421 = !DILocation(line: 235, column: 5, scope: !8417)
!8422 = !DILocation(line: 236, column: 5, scope: !8417)
!8423 = !DILocation(line: 238, column: 1, scope: !8417)
!8424 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !548, file: !548, line: 249, type: !8425, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8427)
!8425 = !DISubroutineType(types: !8426)
!8426 = !{null, !8350, !219}
!8427 = !{!8428, !8429, !8430, !8431, !8432}
!8428 = !DILocalVariable(name: "CS", arg: 1, scope: !8424, file: !548, line: 249, type: !8350)
!8429 = !DILocalVariable(name: "cmd", arg: 2, scope: !8424, file: !548, line: 249, type: !219)
!8430 = !DILocalVariable(name: "cmdi", scope: !8424, file: !548, line: 251, type: !36)
!8431 = !DILocalVariable(name: "cmdo", scope: !8424, file: !548, line: 251, type: !36)
!8432 = !DILocalVariable(name: "len", scope: !8424, file: !548, line: 252, type: !185)
!8433 = !DILocation(line: 0, scope: !8424)
!8434 = !DILocation(line: 254, column: 46, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !548, line: 254, column: 5)
!8436 = distinct !DILexicalBlock(scope: !8424, file: !548, line: 254, column: 5)
!8437 = !DILocation(line: 254, column: 5, scope: !8436)
!8438 = !DILocation(line: 255, column: 22, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8435, file: !548, line: 254, column: 103)
!8440 = !DILocation(line: 255, column: 59, scope: !8439)
!8441 = !DILocation(line: 255, column: 51, scope: !8439)
!8442 = !DILocation(line: 254, column: 65, scope: !8435)
!8443 = !DILocation(line: 254, column: 97, scope: !8435)
!8444 = distinct !{!8444, !8437, !8445}
!8445 = !DILocation(line: 256, column: 5, scope: !8436)
!8446 = !DILocation(line: 258, column: 9, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8424, file: !548, line: 258, column: 9)
!8448 = !DILocation(line: 262, column: 5, scope: !8424)
!8449 = !DILocation(line: 263, column: 33, scope: !8424)
!8450 = !DILocation(line: 264, column: 25, scope: !8424)
!8451 = !DILocation(line: 265, column: 24, scope: !8424)
!8452 = !DILocation(line: 266, column: 5, scope: !8424)
!8453 = !DILocation(line: 268, column: 5, scope: !8424)
!8454 = !DILocation(line: 269, column: 1, scope: !8424)
!8455 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !548, file: !548, line: 281, type: !8456, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8458)
!8456 = !DISubroutineType(types: !8457)
!8457 = !{null, !8350, !1948, !219, !219}
!8458 = !{!8459, !8460, !8461, !8462, !8463, !8464}
!8459 = !DILocalVariable(name: "CS", arg: 1, scope: !8455, file: !548, line: 281, type: !8350)
!8460 = !DILocalVariable(name: "cmd", arg: 2, scope: !8455, file: !548, line: 281, type: !1948)
!8461 = !DILocalVariable(name: "address", arg: 3, scope: !8455, file: !548, line: 281, type: !219)
!8462 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !8455, file: !548, line: 281, type: !219)
!8463 = !DILocalVariable(name: "cmd1", scope: !8455, file: !548, line: 283, type: !36)
!8464 = !DILocalVariable(name: "cmd2", scope: !8455, file: !548, line: 283, type: !36)
!8465 = !DILocation(line: 0, scope: !8455)
!8466 = !DILocation(line: 285, column: 12, scope: !8455)
!8467 = !DILocation(line: 287, column: 23, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8455, file: !548, line: 287, column: 9)
!8469 = !DILocation(line: 287, column: 9, scope: !8455)
!8470 = !DILocation(line: 288, column: 22, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8468, file: !548, line: 287, column: 31)
!8472 = !DILocation(line: 288, column: 55, scope: !8471)
!8473 = !DILocation(line: 288, column: 53, scope: !8471)
!8474 = !DILocation(line: 289, column: 5, scope: !8471)
!8475 = !DILocation(line: 290, column: 22, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8468, file: !548, line: 289, column: 12)
!8477 = !DILocation(line: 290, column: 53, scope: !8476)
!8478 = !DILocation(line: 290, column: 51, scope: !8476)
!8479 = !DILocation(line: 291, column: 21, scope: !8476)
!8480 = !DILocation(line: 0, scope: !8468)
!8481 = !DILocation(line: 294, column: 33, scope: !8455)
!8482 = !DILocation(line: 295, column: 38, scope: !8455)
!8483 = !DILocation(line: 296, column: 41, scope: !8455)
!8484 = !DILocation(line: 296, column: 25, scope: !8455)
!8485 = !DILocation(line: 297, column: 24, scope: !8455)
!8486 = !DILocation(line: 299, column: 5, scope: !8455)
!8487 = !DILocation(line: 300, column: 5, scope: !8455)
!8488 = !DILocation(line: 302, column: 1, scope: !8455)
!8489 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !548, file: !548, line: 312, type: !8490, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8492)
!8490 = !DISubroutineType(types: !8491)
!8491 = !{!36, !219, !219}
!8492 = !{!8493, !8494}
!8493 = !DILocalVariable(name: "cmd", arg: 1, scope: !8489, file: !548, line: 312, type: !219)
!8494 = !DILocalVariable(name: "address", arg: 2, scope: !8489, file: !548, line: 312, type: !219)
!8495 = !DILocation(line: 0, scope: !8489)
!8496 = !DILocation(line: 314, column: 14, scope: !8489)
!8497 = !DILocation(line: 314, column: 44, scope: !8489)
!8498 = !DILocation(line: 314, column: 82, scope: !8489)
!8499 = !DILocation(line: 314, column: 75, scope: !8489)
!8500 = !DILocation(line: 314, column: 5, scope: !8489)
!8501 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !548, file: !548, line: 332, type: !8502, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8505)
!8502 = !DISubroutineType(types: !8503)
!8503 = !{!36, !219, !219, !8504, !187}
!8504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 32)
!8505 = !{!8506, !8507, !8508, !8509, !8510, !8518, !8519, !8520}
!8506 = !DILocalVariable(name: "cmd", arg: 1, scope: !8501, file: !548, line: 332, type: !219)
!8507 = !DILocalVariable(name: "address", arg: 2, scope: !8501, file: !548, line: 332, type: !219)
!8508 = !DILocalVariable(name: "p_data", arg: 3, scope: !8501, file: !548, line: 332, type: !8504)
!8509 = !DILocalVariable(name: "length", arg: 4, scope: !8501, file: !548, line: 332, type: !187)
!8510 = !DILocalVariable(name: "tmp", scope: !8501, file: !548, line: 334, type: !8511)
!8511 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !732, line: 202, baseType: !8512)
!8512 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !732, line: 198, size: 32, elements: !8513)
!8513 = !{!8514, !8515, !8517}
!8514 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !8512, file: !732, line: 199, baseType: !36, size: 32)
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !8512, file: !732, line: 200, baseType: !8516, size: 32)
!8516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 32, elements: !511)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !8512, file: !732, line: 201, baseType: !248, size: 32)
!8518 = !DILocalVariable(name: "cmd1", scope: !8501, file: !548, line: 335, type: !36)
!8519 = !DILocalVariable(name: "cmd2", scope: !8501, file: !548, line: 335, type: !36)
!8520 = !DILocalVariable(name: "i", scope: !8501, file: !548, line: 336, type: !36)
!8521 = !DILocation(line: 0, scope: !8501)
!8522 = !DILocation(line: 334, column: 5, scope: !8501)
!8523 = !DILocation(line: 334, column: 16, scope: !8501)
!8524 = !DILocation(line: 338, column: 12, scope: !8501)
!8525 = !DILocation(line: 340, column: 17, scope: !8501)
!8526 = !DILocation(line: 342, column: 17, scope: !8501)
!8527 = !DILocation(line: 342, column: 9, scope: !8501)
!8528 = !DILocation(line: 342, column: 15, scope: !8501)
!8529 = !DILocation(line: 344, column: 22, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8531, file: !548, line: 343, column: 29)
!8531 = distinct !DILexicalBlock(scope: !8532, file: !548, line: 343, column: 5)
!8532 = distinct !DILexicalBlock(scope: !8501, file: !548, line: 343, column: 5)
!8533 = !DILocation(line: 343, column: 5, scope: !8532)
!8534 = !DILocation(line: 344, column: 21, scope: !8530)
!8535 = !DILocation(line: 344, column: 9, scope: !8530)
!8536 = !DILocation(line: 344, column: 19, scope: !8530)
!8537 = !DILocation(line: 345, column: 18, scope: !8530)
!8538 = !DILocation(line: 343, column: 25, scope: !8531)
!8539 = !DILocation(line: 343, column: 19, scope: !8531)
!8540 = distinct !{!8540, !8533, !8541}
!8541 = !DILocation(line: 346, column: 5, scope: !8532)
!8542 = !DILocation(line: 347, column: 16, scope: !8501)
!8543 = !DILocation(line: 348, column: 16, scope: !8501)
!8544 = !DILocation(line: 348, column: 15, scope: !8501)
!8545 = !DILocation(line: 339, column: 17, scope: !8501)
!8546 = !DILocation(line: 339, column: 52, scope: !8501)
!8547 = !DILocation(line: 339, column: 45, scope: !8501)
!8548 = !DILocation(line: 348, column: 13, scope: !8501)
!8549 = !DILocation(line: 349, column: 38, scope: !8501)
!8550 = !DILocation(line: 351, column: 1, scope: !8501)
!8551 = !DILocation(line: 350, column: 5, scope: !8501)
!8552 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !548, file: !548, line: 367, type: !8553, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8555)
!8553 = !DISubroutineType(types: !8554)
!8554 = !{null, !36, !199, !16}
!8555 = !{!8556, !8557, !8558, !8559, !8560, !8561}
!8556 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !8552, file: !548, line: 367, type: !36)
!8557 = !DILocalVariable(name: "buff", arg: 2, scope: !8552, file: !548, line: 367, type: !199)
!8558 = !DILocalVariable(name: "length", arg: 3, scope: !8552, file: !548, line: 367, type: !16)
!8559 = !DILocalVariable(name: "i", scope: !8552, file: !548, line: 369, type: !36)
!8560 = !DILocalVariable(name: "p_data", scope: !8552, file: !548, line: 370, type: !184)
!8561 = !DILocalVariable(name: "tmp", scope: !8552, file: !548, line: 371, type: !8511)
!8562 = !DILocation(line: 0, scope: !8552)
!8563 = !DILocation(line: 371, column: 5, scope: !8552)
!8564 = !DILocation(line: 371, column: 13, scope: !8552)
!8565 = !DILocation(line: 373, column: 18, scope: !8552)
!8566 = !DILocation(line: 376, column: 15, scope: !8567)
!8567 = distinct !DILexicalBlock(scope: !8552, file: !548, line: 376, column: 9)
!8568 = !DILocation(line: 376, column: 30, scope: !8567)
!8569 = !DILocation(line: 376, column: 11, scope: !8567)
!8570 = !DILocation(line: 376, column: 9, scope: !8552)
!8571 = !DILocation(line: 377, column: 23, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8573, file: !548, line: 377, column: 9)
!8573 = distinct !DILexicalBlock(scope: !8574, file: !548, line: 377, column: 9)
!8574 = distinct !DILexicalBlock(scope: !8567, file: !548, line: 376, column: 41)
!8575 = !DILocation(line: 377, column: 9, scope: !8573)
!8576 = !DILocation(line: 378, column: 13, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8572, file: !548, line: 377, column: 80)
!8578 = !DILocation(line: 377, column: 41, scope: !8572)
!8579 = !DILocation(line: 377, column: 54, scope: !8572)
!8580 = !DILocation(line: 377, column: 67, scope: !8572)
!8581 = distinct !{!8581, !8575, !8582}
!8582 = !DILocation(line: 379, column: 9, scope: !8573)
!8583 = !DILocation(line: 382, column: 37, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8567, file: !548, line: 382, column: 14)
!8585 = !DILocation(line: 382, column: 16, scope: !8584)
!8586 = !DILocation(line: 0, scope: !8584)
!8587 = !DILocation(line: 382, column: 14, scope: !8567)
!8588 = !DILocation(line: 391, column: 9, scope: !8589)
!8589 = distinct !DILexicalBlock(scope: !8590, file: !548, line: 391, column: 9)
!8590 = distinct !DILexicalBlock(scope: !8584, file: !548, line: 390, column: 13)
!8591 = !DILocation(line: 383, column: 9, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8593, file: !548, line: 383, column: 9)
!8593 = distinct !DILexicalBlock(scope: !8584, file: !548, line: 382, column: 49)
!8594 = !DILocation(line: 384, column: 26, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8596, file: !548, line: 383, column: 80)
!8596 = distinct !DILexicalBlock(scope: !8592, file: !548, line: 383, column: 9)
!8597 = !DILocation(line: 384, column: 24, scope: !8595)
!8598 = !DILocation(line: 385, column: 47, scope: !8595)
!8599 = !DILocation(line: 385, column: 26, scope: !8595)
!8600 = !DILocation(line: 385, column: 24, scope: !8595)
!8601 = !DILocation(line: 386, column: 13, scope: !8595)
!8602 = !DILocation(line: 383, column: 41, scope: !8596)
!8603 = !DILocation(line: 383, column: 54, scope: !8596)
!8604 = !DILocation(line: 383, column: 67, scope: !8596)
!8605 = !DILocation(line: 383, column: 23, scope: !8596)
!8606 = distinct !{!8606, !8591, !8607}
!8607 = !DILocation(line: 387, column: 9, scope: !8592)
!8608 = !DILocation(line: 392, column: 13, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !548, line: 392, column: 13)
!8610 = distinct !DILexicalBlock(scope: !8611, file: !548, line: 391, column: 61)
!8611 = distinct !DILexicalBlock(scope: !8589, file: !548, line: 391, column: 9)
!8612 = !DILocation(line: 393, column: 36, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8614, file: !548, line: 392, column: 51)
!8614 = distinct !DILexicalBlock(scope: !8609, file: !548, line: 392, column: 13)
!8615 = !DILocation(line: 393, column: 29, scope: !8613)
!8616 = !DILocation(line: 393, column: 17, scope: !8613)
!8617 = !DILocation(line: 393, column: 27, scope: !8613)
!8618 = !DILocation(line: 392, column: 47, scope: !8614)
!8619 = !DILocation(line: 392, column: 27, scope: !8614)
!8620 = !DILocation(line: 392, column: 31, scope: !8614)
!8621 = distinct !{!8621, !8608, !8622}
!8622 = !DILocation(line: 394, column: 13, scope: !8609)
!8623 = !DILocation(line: 395, column: 13, scope: !8610)
!8624 = !DILocation(line: 391, column: 41, scope: !8611)
!8625 = !DILocation(line: 391, column: 54, scope: !8611)
!8626 = !DILocation(line: 391, column: 23, scope: !8611)
!8627 = distinct !{!8627, !8588, !8628}
!8628 = !DILocation(line: 396, column: 9, scope: !8589)
!8629 = !DILocation(line: 398, column: 1, scope: !8552)
!8630 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !548, file: !548, line: 414, type: !8631, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8633)
!8631 = !DISubroutineType(types: !8632)
!8632 = !{null, !8350, !1947, !184, !8350, !8350}
!8633 = !{!8634, !8635, !8636, !8637, !8638, !8639, !8640, !8641, !8642, !8643}
!8634 = !DILocalVariable(name: "CS", arg: 1, scope: !8630, file: !548, line: 414, type: !8350)
!8635 = !DILocalVariable(name: "cmd", arg: 2, scope: !8630, file: !548, line: 414, type: !1947)
!8636 = !DILocalVariable(name: "data", arg: 3, scope: !8630, file: !548, line: 414, type: !184)
!8637 = !DILocalVariable(name: "outl", arg: 4, scope: !8630, file: !548, line: 414, type: !8350)
!8638 = !DILocalVariable(name: "inl", arg: 5, scope: !8630, file: !548, line: 414, type: !8350)
!8639 = !DILocalVariable(name: "tmp", scope: !8630, file: !548, line: 416, type: !36)
!8640 = !DILocalVariable(name: "i", scope: !8630, file: !548, line: 417, type: !36)
!8641 = !DILocalVariable(name: "j", scope: !8630, file: !548, line: 417, type: !36)
!8642 = !DILocalVariable(name: "p_data", scope: !8630, file: !548, line: 418, type: !184)
!8643 = !DILocalVariable(name: "p_tmp", scope: !8630, file: !548, line: 418, type: !184)
!8644 = !DILocation(line: 0, scope: !8630)
!8645 = !DILocation(line: 416, column: 5, scope: !8630)
!8646 = !DILocation(line: 422, column: 60, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8648, file: !548, line: 422, column: 5)
!8648 = distinct !DILexicalBlock(scope: !8630, file: !548, line: 422, column: 5)
!8649 = !DILocation(line: 422, column: 5, scope: !8648)
!8650 = !DILocation(line: 423, column: 25, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8652, file: !548, line: 423, column: 9)
!8652 = distinct !DILexicalBlock(scope: !8647, file: !548, line: 422, column: 83)
!8653 = !DILocation(line: 423, column: 32, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8651, file: !548, line: 423, column: 9)
!8655 = !DILocation(line: 423, column: 9, scope: !8651)
!8656 = !DILocation(line: 424, column: 24, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8654, file: !548, line: 423, column: 59)
!8658 = !DILocation(line: 424, column: 13, scope: !8657)
!8659 = !DILocation(line: 424, column: 22, scope: !8657)
!8660 = !DILocation(line: 423, column: 50, scope: !8654)
!8661 = !DILocation(line: 423, column: 55, scope: !8654)
!8662 = !DILocation(line: 423, column: 39, scope: !8654)
!8663 = distinct !{!8663, !8655, !8664}
!8664 = !DILocation(line: 425, column: 9, scope: !8651)
!8665 = !DILocation(line: 426, column: 9, scope: !8652)
!8666 = !DILocation(line: 0, scope: !8648)
!8667 = !DILocation(line: 422, column: 75, scope: !8647)
!8668 = distinct !{!8668, !8649, !8669}
!8669 = !DILocation(line: 427, column: 5, scope: !8648)
!8670 = !DILocation(line: 428, column: 25, scope: !8630)
!8671 = !DILocation(line: 429, column: 26, scope: !8630)
!8672 = !DILocation(line: 429, column: 24, scope: !8630)
!8673 = !DILocation(line: 430, column: 5, scope: !8630)
!8674 = !DILocation(line: 431, column: 5, scope: !8630)
!8675 = !DILocation(line: 433, column: 67, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8677, file: !548, line: 433, column: 5)
!8677 = distinct !DILexicalBlock(scope: !8630, file: !548, line: 433, column: 5)
!8678 = !DILocation(line: 433, column: 5, scope: !8677)
!8679 = !DILocation(line: 433, column: 56, scope: !8677)
!8680 = !DILocation(line: 434, column: 17, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8676, file: !548, line: 433, column: 100)
!8682 = !DILocation(line: 434, column: 15, scope: !8681)
!8683 = !DILocation(line: 433, column: 74, scope: !8676)
!8684 = !DILocation(line: 433, column: 79, scope: !8676)
!8685 = !DILocation(line: 433, column: 87, scope: !8676)
!8686 = distinct !{!8686, !8678, !8687}
!8687 = !DILocation(line: 435, column: 5, scope: !8677)
!8688 = !DILocation(line: 437, column: 1, scope: !8630)
!8689 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !548, file: !548, line: 462, type: !8690, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8692)
!8690 = !DISubroutineType(types: !8691)
!8691 = !{null, !8350, !1947}
!8692 = !{!8693, !8694, !8695, !8696, !8697}
!8693 = !DILocalVariable(name: "CS", arg: 1, scope: !8689, file: !548, line: 462, type: !8350)
!8694 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !8689, file: !548, line: 462, type: !1947)
!8695 = !DILocalVariable(name: "i", scope: !8689, file: !548, line: 464, type: !36)
!8696 = !DILocalVariable(name: "val", scope: !8689, file: !548, line: 465, type: !36)
!8697 = !DILocalVariable(name: "status", scope: !8698, file: !548, line: 492, type: !185)
!8698 = distinct !DILexicalBlock(scope: !8699, file: !548, line: 491, column: 47)
!8699 = distinct !DILexicalBlock(scope: !8700, file: !548, line: 491, column: 13)
!8700 = distinct !DILexicalBlock(scope: !8689, file: !548, line: 477, column: 17)
!8701 = !DILocation(line: 0, scope: !8689)
!8702 = !DILocation(line: 467, column: 17, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8689, file: !548, line: 467, column: 9)
!8704 = !DILocation(line: 467, column: 9, scope: !8689)
!8705 = !DILocation(line: 474, column: 11, scope: !8689)
!8706 = !DILocation(line: 477, column: 5, scope: !8689)
!8707 = !DILocation(line: 478, column: 17, scope: !8700)
!8708 = !DILocation(line: 478, column: 9, scope: !8700)
!8709 = !DILocation(line: 481, column: 17, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !548, line: 481, column: 17)
!8711 = distinct !DILexicalBlock(scope: !8700, file: !548, line: 478, column: 29)
!8712 = !DILocation(line: 481, column: 17, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8714, file: !548, line: 481, column: 17)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !548, line: 481, column: 17)
!8715 = distinct !DILexicalBlock(scope: !8710, file: !548, line: 481, column: 17)
!8716 = !DILocation(line: 481, column: 17, scope: !8714)
!8717 = !DILocation(line: 481, column: 17, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8719, file: !548, line: 481, column: 17)
!8719 = distinct !DILexicalBlock(scope: !8715, file: !548, line: 481, column: 17)
!8720 = !DILocation(line: 484, column: 17, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8711, file: !548, line: 484, column: 17)
!8722 = !DILocation(line: 484, column: 17, scope: !8723)
!8723 = distinct !DILexicalBlock(scope: !8724, file: !548, line: 484, column: 17)
!8724 = distinct !DILexicalBlock(scope: !8725, file: !548, line: 484, column: 17)
!8725 = distinct !DILexicalBlock(scope: !8721, file: !548, line: 484, column: 17)
!8726 = !DILocation(line: 484, column: 17, scope: !8724)
!8727 = !DILocation(line: 484, column: 17, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8729, file: !548, line: 484, column: 17)
!8729 = distinct !DILexicalBlock(scope: !8725, file: !548, line: 484, column: 17)
!8730 = !DILocation(line: 0, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8732, file: !548, line: 487, column: 17)
!8732 = distinct !DILexicalBlock(scope: !8711, file: !548, line: 487, column: 17)
!8733 = !DILocation(line: 487, column: 17, scope: !8732)
!8734 = !DILocation(line: 487, column: 17, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8736, file: !548, line: 487, column: 17)
!8736 = distinct !DILexicalBlock(scope: !8731, file: !548, line: 487, column: 17)
!8737 = !DILocation(line: 487, column: 17, scope: !8736)
!8738 = !DILocation(line: 487, column: 17, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8740, file: !548, line: 487, column: 17)
!8740 = distinct !DILexicalBlock(scope: !8731, file: !548, line: 487, column: 17)
!8741 = !DILocation(line: 487, column: 17, scope: !8740)
!8742 = !DILocation(line: 491, column: 23, scope: !8699)
!8743 = !DILocation(line: 491, column: 13, scope: !8699)
!8744 = !DILocation(line: 491, column: 28, scope: !8699)
!8745 = !DILocation(line: 491, column: 13, scope: !8700)
!8746 = !DILocation(line: 492, column: 13, scope: !8698)
!8747 = !DILocation(line: 494, column: 13, scope: !8698)
!8748 = !DILocation(line: 0, scope: !8698)
!8749 = !DILocation(line: 495, column: 17, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8698, file: !548, line: 494, column: 16)
!8751 = !DILocation(line: 496, column: 22, scope: !8698)
!8752 = !DILocation(line: 496, column: 31, scope: !8698)
!8753 = !DILocation(line: 496, column: 29, scope: !8698)
!8754 = !DILocation(line: 496, column: 13, scope: !8750)
!8755 = distinct !{!8755, !8747, !8756}
!8756 = !DILocation(line: 496, column: 45, scope: !8698)
!8757 = !DILocation(line: 497, column: 9, scope: !8699)
!8758 = !DILocation(line: 503, column: 25, scope: !8700)
!8759 = !DILocation(line: 497, column: 9, scope: !8698)
!8760 = !DILocation(line: 500, column: 70, scope: !8761)
!8761 = distinct !DILexicalBlock(scope: !8699, file: !548, line: 499, column: 14)
!8762 = !DILocation(line: 500, column: 60, scope: !8761)
!8763 = !DILocation(line: 500, column: 13, scope: !8761)
!8764 = !DILocation(line: 503, column: 15, scope: !8700)
!8765 = !DILocation(line: 503, column: 11, scope: !8700)
!8766 = distinct !{!8766, !8706, !8767}
!8767 = !DILocation(line: 504, column: 5, scope: !8689)
!8768 = !DILocation(line: 505, column: 1, scope: !8689)
!8769 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !548, file: !548, line: 514, type: !8770, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8772)
!8770 = !DISubroutineType(types: !8771)
!8771 = !{null, !8350, !184, !185}
!8772 = !{!8773, !8774, !8775}
!8773 = !DILocalVariable(name: "CS", arg: 1, scope: !8769, file: !548, line: 514, type: !8350)
!8774 = !DILocalVariable(name: "id", arg: 2, scope: !8769, file: !548, line: 514, type: !184)
!8775 = !DILocalVariable(name: "cmd", arg: 3, scope: !8769, file: !548, line: 514, type: !185)
!8776 = !DILocation(line: 0, scope: !8769)
!8777 = !DILocation(line: 517, column: 5, scope: !8769)
!8778 = !DILocation(line: 518, column: 1, scope: !8769)
!8779 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !548, file: !548, line: 521, type: !8780, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8782)
!8780 = !DISubroutineType(types: !8781)
!8781 = !{null, !8350, !184}
!8782 = !{!8783, !8784}
!8783 = !DILocalVariable(name: "CS", arg: 1, scope: !8779, file: !548, line: 521, type: !8350)
!8784 = !DILocalVariable(name: "id", arg: 2, scope: !8779, file: !548, line: 521, type: !184)
!8785 = !DILocation(line: 0, scope: !8779)
!8786 = !DILocation(line: 523, column: 5, scope: !8779)
!8787 = !DILocation(line: 524, column: 1, scope: !8779)
!8788 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !548, file: !548, line: 536, type: !8789, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !4354)
!8789 = !DISubroutineType(types: !8790)
!8790 = !{!8791}
!8791 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !551, line: 57, baseType: !550)
!8792 = !DILocation(line: 540, column: 5, scope: !8788)
!8793 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !548, file: !548, line: 561, type: !8794, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !4354)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{!8796}
!8796 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !551, line: 66, baseType: !558)
!8797 = !DILocation(line: 564, column: 15, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8793, file: !548, line: 564, column: 9)
!8799 = !DILocation(line: 564, column: 31, scope: !8798)
!8800 = !DILocation(line: 564, column: 45, scope: !8798)
!8801 = !DILocation(line: 0, scope: !8798)
!8802 = !DILocation(line: 569, column: 1, scope: !8793)
!8803 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !548, file: !548, line: 580, type: !8804, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !547, retainedNodes: !8806)
!8804 = !DISubroutineType(types: !8805)
!8805 = !{!94, !184}
!8806 = !{!8807, !8808}
!8807 = !DILocalVariable(name: "buffer", arg: 1, scope: !8803, file: !548, line: 580, type: !184)
!8808 = !DILocalVariable(name: "i", scope: !8803, file: !548, line: 582, type: !20)
!8809 = !DILocation(line: 0, scope: !8803)
!8810 = !DILocation(line: 583, column: 5, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8803, file: !548, line: 583, column: 5)
!8812 = !DILocation(line: 584, column: 9, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8814, file: !548, line: 583, column: 29)
!8814 = distinct !DILexicalBlock(scope: !8811, file: !548, line: 583, column: 5)
!8815 = !DILocation(line: 584, column: 19, scope: !8813)
!8816 = !DILocation(line: 583, column: 25, scope: !8814)
!8817 = !DILocation(line: 583, column: 19, scope: !8814)
!8818 = distinct !{!8818, !8810, !8819}
!8819 = !DILocation(line: 585, column: 5, scope: !8811)
!8820 = !DILocation(line: 586, column: 5, scope: !8803)
!8821 = distinct !DISubprogram(name: "ust_get_current_time", scope: !597, file: !597, line: 91, type: !5203, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !8822)
!8822 = !{!8823, !8824}
!8823 = !DILocalVariable(name: "counter", scope: !8821, file: !597, line: 94, type: !36)
!8824 = !DILocalVariable(name: "ret", scope: !8821, file: !597, line: 95, type: !94)
!8825 = !DILocation(line: 94, column: 5, scope: !8821)
!8826 = !DILocation(line: 0, scope: !8821)
!8827 = !DILocation(line: 94, column: 14, scope: !8821)
!8828 = !DILocation(line: 96, column: 11, scope: !8821)
!8829 = !DILocation(line: 97, column: 9, scope: !8821)
!8830 = !DILocation(line: 98, column: 9, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !597, line: 98, column: 9)
!8832 = distinct !DILexicalBlock(scope: !8833, file: !597, line: 98, column: 9)
!8833 = distinct !DILexicalBlock(scope: !8834, file: !597, line: 97, column: 22)
!8834 = distinct !DILexicalBlock(scope: !8821, file: !597, line: 97, column: 9)
!8835 = distinct !{!8835, !8830, !8830}
!8836 = !DILocation(line: 100, column: 12, scope: !8821)
!8837 = !DILocation(line: 112, column: 1, scope: !8821)
!8838 = !DILocation(line: 100, column: 5, scope: !8821)
!8839 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !597, file: !597, line: 114, type: !5203, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !8840)
!8840 = !{!8841, !8842}
!8841 = !DILocalVariable(name: "counter", scope: !8839, file: !597, line: 117, type: !36)
!8842 = !DILocalVariable(name: "ret", scope: !8839, file: !597, line: 118, type: !94)
!8843 = !DILocation(line: 117, column: 5, scope: !8839)
!8844 = !DILocation(line: 0, scope: !8839)
!8845 = !DILocation(line: 117, column: 14, scope: !8839)
!8846 = !DILocation(line: 119, column: 11, scope: !8839)
!8847 = !DILocation(line: 120, column: 9, scope: !8839)
!8848 = !DILocation(line: 121, column: 9, scope: !8849)
!8849 = distinct !DILexicalBlock(scope: !8850, file: !597, line: 121, column: 9)
!8850 = distinct !DILexicalBlock(scope: !8851, file: !597, line: 121, column: 9)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !597, line: 120, column: 22)
!8852 = distinct !DILexicalBlock(scope: !8839, file: !597, line: 120, column: 9)
!8853 = distinct !{!8853, !8848, !8848}
!8854 = !DILocation(line: 123, column: 12, scope: !8839)
!8855 = !DILocation(line: 135, column: 1, scope: !8839)
!8856 = !DILocation(line: 123, column: 5, scope: !8839)
!8857 = distinct !DISubprogram(name: "ust_busy_wait", scope: !597, file: !597, line: 137, type: !4734, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !8858)
!8858 = !{!8859}
!8859 = !DILocalVariable(name: "delay_us", arg: 1, scope: !8857, file: !597, line: 137, type: !36)
!8860 = !DILocation(line: 0, scope: !8857)
!8861 = !DILocation(line: 140, column: 5, scope: !8857)
!8862 = !DILocation(line: 144, column: 1, scope: !8857)
!8863 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !597, file: !597, line: 148, type: !5203, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !4354)
!8864 = !DILocation(line: 151, column: 5, scope: !8863)
!8865 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !597, file: !597, line: 154, type: !4734, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !8866)
!8866 = !{!8867}
!8867 = !DILocalVariable(name: "x", arg: 1, scope: !8865, file: !597, line: 154, type: !36)
!8868 = !DILocation(line: 0, scope: !8865)
!8869 = !DILocation(line: 157, column: 5, scope: !8865)
!8870 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !597, file: !597, line: 199, type: !889, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !8871)
!8871 = !{!8872}
!8872 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8870, file: !597, line: 199, type: !199)
!8873 = !DILocation(line: 0, scope: !8870)
!8874 = !DILocation(line: 201, column: 5, scope: !8870)
!8875 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !597, file: !597, line: 388, type: !6977, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !4354)
!8876 = !DILocation(line: 390, column: 5, scope: !8875)
!8877 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !597, file: !597, line: 1333, type: !4261, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !4354)
!8878 = !DILocation(line: 1335, column: 5, scope: !8877)
!8879 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !597, file: !597, line: 1556, type: !8880, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !8901)
!8880 = !DISubroutineType(types: !8881)
!8881 = !{!16, !8882, !786}
!8882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8883, size: 32)
!8883 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !812, line: 121, baseType: !8884)
!8884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 105, size: 480, elements: !8885)
!8885 = !{!8886, !8887, !8888, !8889, !8890, !8891, !8892, !8893, !8894, !8895, !8896, !8897, !8898, !8899, !8900}
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !8884, file: !812, line: 106, baseType: !1145, size: 32)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !8884, file: !812, line: 107, baseType: !888, size: 32, offset: 32)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !8884, file: !812, line: 108, baseType: !1150, size: 32, offset: 64)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !8884, file: !812, line: 109, baseType: !1154, size: 32, offset: 96)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !8884, file: !812, line: 110, baseType: !1158, size: 32, offset: 128)
!8891 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !8884, file: !812, line: 111, baseType: !1154, size: 32, offset: 160)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !8884, file: !812, line: 112, baseType: !1163, size: 32, offset: 192)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !8884, file: !812, line: 113, baseType: !1154, size: 32, offset: 224)
!8894 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !8884, file: !812, line: 114, baseType: !1154, size: 32, offset: 256)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !8884, file: !812, line: 115, baseType: !1154, size: 32, offset: 288)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !8884, file: !812, line: 116, baseType: !1170, size: 32, offset: 320)
!8897 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !8884, file: !812, line: 117, baseType: !1175, size: 32, offset: 352)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !8884, file: !812, line: 118, baseType: !1180, size: 32, offset: 384)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !8884, file: !812, line: 119, baseType: !1184, size: 32, offset: 416)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !8884, file: !812, line: 120, baseType: !1188, size: 32, offset: 448)
!8901 = !{!8902, !8903, !8904}
!8902 = !DILocalVariable(name: "driver", arg: 1, scope: !8879, file: !597, line: 1556, type: !8882)
!8903 = !DILocalVariable(name: "D", arg: 2, scope: !8879, file: !597, line: 1556, type: !786)
!8904 = !DILocalVariable(name: "smap", scope: !8879, file: !597, line: 1558, type: !838)
!8905 = !DILocation(line: 0, scope: !8879)
!8906 = !DILocation(line: 1561, column: 15, scope: !8879)
!8907 = !DILocation(line: 1562, column: 22, scope: !8879)
!8908 = !DILocation(line: 1563, column: 5, scope: !8879)
!8909 = !DILocation(line: 1563, column: 22, scope: !8879)
!8910 = !DILocation(line: 1565, column: 5, scope: !8879)
!8911 = !DILocation(line: 1565, column: 22, scope: !8879)
!8912 = !DILocation(line: 1566, column: 5, scope: !8879)
!8913 = !DILocation(line: 1566, column: 22, scope: !8879)
!8914 = !DILocation(line: 1568, column: 5, scope: !8879)
!8915 = !DILocation(line: 1568, column: 22, scope: !8879)
!8916 = !DILocation(line: 1569, column: 5, scope: !8879)
!8917 = !DILocation(line: 1569, column: 22, scope: !8879)
!8918 = !DILocation(line: 1570, column: 5, scope: !8879)
!8919 = !DILocation(line: 1570, column: 22, scope: !8879)
!8920 = !DILocation(line: 1573, column: 8, scope: !8879)
!8921 = !DILocation(line: 1573, column: 13, scope: !8879)
!8922 = !DILocation(line: 1573, column: 28, scope: !8879)
!8923 = !DILocation(line: 1574, column: 8, scope: !8879)
!8924 = !DILocation(line: 1574, column: 13, scope: !8879)
!8925 = !DILocation(line: 1574, column: 29, scope: !8879)
!8926 = !DILocation(line: 1575, column: 8, scope: !8879)
!8927 = !DILocation(line: 1575, column: 13, scope: !8879)
!8928 = !DILocation(line: 1575, column: 30, scope: !8879)
!8929 = !DILocation(line: 1576, column: 8, scope: !8879)
!8930 = !DILocation(line: 1576, column: 13, scope: !8879)
!8931 = !DILocation(line: 1576, column: 23, scope: !8879)
!8932 = !DILocation(line: 1577, column: 8, scope: !8879)
!8933 = !DILocation(line: 1577, column: 13, scope: !8879)
!8934 = !DILocation(line: 1577, column: 24, scope: !8879)
!8935 = !DILocation(line: 1578, column: 8, scope: !8879)
!8936 = !DILocation(line: 1578, column: 13, scope: !8879)
!8937 = !DILocation(line: 1578, column: 25, scope: !8879)
!8938 = !DILocation(line: 1579, column: 8, scope: !8879)
!8939 = !DILocation(line: 1579, column: 23, scope: !8879)
!8940 = !DILocation(line: 1583, column: 10, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8879, file: !597, line: 1583, column: 9)
!8942 = !DILocation(line: 1583, column: 24, scope: !8941)
!8943 = !DILocation(line: 1583, column: 32, scope: !8941)
!8944 = !DILocation(line: 1583, column: 35, scope: !8941)
!8945 = !DILocation(line: 1583, column: 49, scope: !8941)
!8946 = !DILocation(line: 1583, column: 9, scope: !8879)
!8947 = !DILocation(line: 1586, column: 12, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8941, file: !597, line: 1583, column: 59)
!8949 = !DILocation(line: 1586, column: 17, scope: !8948)
!8950 = !DILocation(line: 1586, column: 25, scope: !8948)
!8951 = !DILocation(line: 1587, column: 12, scope: !8948)
!8952 = !DILocation(line: 1587, column: 17, scope: !8948)
!8953 = !DILocation(line: 1587, column: 24, scope: !8948)
!8954 = !DILocation(line: 1591, column: 10, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8879, file: !597, line: 1591, column: 9)
!8956 = !DILocation(line: 1589, column: 5, scope: !8948)
!8957 = !DILocation(line: 1600, column: 32, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8879, file: !597, line: 1600, column: 9)
!8959 = !DILocation(line: 1600, column: 35, scope: !8958)
!8960 = !DILocation(line: 1600, column: 49, scope: !8958)
!8961 = !DILocation(line: 1600, column: 9, scope: !8879)
!8962 = !DILocation(line: 1601, column: 12, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8958, file: !597, line: 1600, column: 59)
!8964 = !DILocation(line: 1601, column: 17, scope: !8963)
!8965 = !DILocation(line: 1601, column: 25, scope: !8963)
!8966 = !DILocation(line: 1602, column: 12, scope: !8963)
!8967 = !DILocation(line: 1602, column: 17, scope: !8963)
!8968 = !DILocation(line: 1602, column: 24, scope: !8963)
!8969 = !DILocation(line: 1603, column: 5, scope: !8963)
!8970 = !DILocation(line: 1607, column: 8, scope: !8879)
!8971 = !DILocation(line: 1607, column: 20, scope: !8879)
!8972 = !DILocation(line: 1622, column: 5, scope: !8879)
!8973 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !597, file: !597, line: 4553, type: !889, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !8974)
!8974 = !{!8975, !8976, !8977, !8978}
!8975 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8973, file: !597, line: 4553, type: !199)
!8976 = !DILocalVariable(name: "D", scope: !8973, file: !597, line: 4555, type: !786)
!8977 = !DILocalVariable(name: "unlock", scope: !8973, file: !597, line: 4556, type: !36)
!8978 = !DILocalVariable(name: "cmd", scope: !8973, file: !597, line: 4557, type: !185)
!8979 = !DILocation(line: 0, scope: !8973)
!8980 = !DILocation(line: 4555, column: 24, scope: !8973)
!8981 = !DILocation(line: 4557, column: 5, scope: !8973)
!8982 = !DILocation(line: 4558, column: 12, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8973, file: !597, line: 4558, column: 9)
!8984 = !DILocation(line: 4558, column: 9, scope: !8983)
!8985 = !DILocation(line: 4558, column: 23, scope: !8983)
!8986 = !DILocation(line: 4558, column: 31, scope: !8983)
!8987 = !DILocation(line: 4558, column: 34, scope: !8983)
!8988 = !DILocation(line: 4558, column: 48, scope: !8983)
!8989 = !DILocation(line: 4558, column: 56, scope: !8983)
!8990 = !DILocation(line: 4558, column: 59, scope: !8983)
!8991 = !DILocation(line: 4558, column: 73, scope: !8983)
!8992 = !DILocation(line: 4558, column: 9, scope: !8973)
!8993 = !DILocation(line: 4563, column: 24, scope: !8973)
!8994 = !DILocation(line: 4563, column: 31, scope: !8973)
!8995 = !DILocation(line: 4563, column: 36, scope: !8973)
!8996 = !DILocation(line: 4563, column: 28, scope: !8973)
!8997 = !DILocation(line: 4563, column: 5, scope: !8973)
!8998 = !DILocation(line: 4564, column: 5, scope: !8973)
!8999 = !DILocation(line: 4567, column: 28, scope: !8973)
!9000 = !DILocation(line: 4567, column: 36, scope: !8973)
!9001 = !DILocation(line: 4567, column: 41, scope: !8973)
!9002 = !DILocation(line: 4567, column: 5, scope: !8973)
!9003 = !DILocation(line: 4568, column: 17, scope: !8973)
!9004 = !DILocation(line: 4568, column: 22, scope: !8973)
!9005 = !DILocation(line: 4568, column: 14, scope: !8973)
!9006 = !DILocation(line: 4569, column: 22, scope: !8973)
!9007 = !DILocation(line: 4569, column: 54, scope: !8973)
!9008 = !DILocation(line: 4569, column: 65, scope: !8973)
!9009 = !DILocation(line: 4569, column: 62, scope: !8973)
!9010 = !DILocation(line: 4569, column: 87, scope: !8973)
!9011 = !DILocation(line: 4569, column: 85, scope: !8973)
!9012 = !DILocation(line: 4569, column: 60, scope: !8973)
!9013 = !DILocation(line: 4569, column: 58, scope: !8973)
!9014 = !DILocation(line: 4569, column: 51, scope: !8973)
!9015 = !DILocation(line: 4572, column: 24, scope: !8973)
!9016 = !DILocation(line: 4572, column: 5, scope: !8973)
!9017 = !DILocation(line: 4573, column: 5, scope: !8973)
!9018 = !DILocation(line: 4575, column: 5, scope: !8973)
!9019 = !DILocation(line: 4576, column: 1, scope: !8973)
!9020 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !597, file: !597, line: 4488, type: !9021, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9023)
!9021 = !DISubroutineType(types: !9022)
!9022 = !{null, !786}
!9023 = !{!9024, !9025}
!9024 = !DILocalVariable(name: "D", arg: 1, scope: !9020, file: !597, line: 4488, type: !786)
!9025 = !DILocalVariable(name: "status", scope: !9020, file: !597, line: 4490, type: !839)
!9026 = !DILocation(line: 0, scope: !9020)
!9027 = !DILocation(line: 4490, column: 5, scope: !9020)
!9028 = !DILocation(line: 4491, column: 5, scope: !9020)
!9029 = !DILocation(line: 4492, column: 32, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !9020, file: !597, line: 4491, column: 10)
!9031 = !DILocation(line: 4492, column: 40, scope: !9030)
!9032 = !DILocation(line: 4492, column: 45, scope: !9030)
!9033 = !DILocation(line: 4492, column: 9, scope: !9030)
!9034 = !DILocation(line: 4493, column: 20, scope: !9020)
!9035 = !DILocation(line: 4493, column: 32, scope: !9020)
!9036 = !DILocation(line: 4493, column: 29, scope: !9020)
!9037 = !DILocation(line: 4493, column: 27, scope: !9020)
!9038 = !DILocation(line: 4493, column: 16, scope: !9020)
!9039 = !DILocation(line: 4493, column: 5, scope: !9030)
!9040 = distinct !{!9040, !9028, !9041}
!9041 = !DILocation(line: 4493, column: 54, scope: !9020)
!9042 = !DILocation(line: 4494, column: 1, scope: !9020)
!9043 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !597, file: !597, line: 1742, type: !8880, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9044)
!9044 = !{!9045, !9046, !9047}
!9045 = !DILocalVariable(name: "driver", arg: 1, scope: !9043, file: !597, line: 1742, type: !8882)
!9046 = !DILocalVariable(name: "D", arg: 2, scope: !9043, file: !597, line: 1742, type: !786)
!9047 = !DILocalVariable(name: "smap", scope: !9043, file: !597, line: 1744, type: !838)
!9048 = !DILocation(line: 0, scope: !9043)
!9049 = !DILocation(line: 1747, column: 15, scope: !9043)
!9050 = !DILocation(line: 1748, column: 22, scope: !9043)
!9051 = !DILocation(line: 1749, column: 5, scope: !9043)
!9052 = !DILocation(line: 1749, column: 22, scope: !9043)
!9053 = !DILocation(line: 1750, column: 5, scope: !9043)
!9054 = !DILocation(line: 1750, column: 22, scope: !9043)
!9055 = !DILocation(line: 1751, column: 5, scope: !9043)
!9056 = !DILocation(line: 1751, column: 22, scope: !9043)
!9057 = !DILocation(line: 1752, column: 5, scope: !9043)
!9058 = !DILocation(line: 1752, column: 22, scope: !9043)
!9059 = !DILocation(line: 1753, column: 5, scope: !9043)
!9060 = !DILocation(line: 1753, column: 22, scope: !9043)
!9061 = !DILocation(line: 1756, column: 8, scope: !9043)
!9062 = !DILocation(line: 1756, column: 13, scope: !9043)
!9063 = !DILocation(line: 1756, column: 24, scope: !9043)
!9064 = !DILocation(line: 1758, column: 8, scope: !9043)
!9065 = !DILocation(line: 1758, column: 13, scope: !9043)
!9066 = !DILocation(line: 1758, column: 28, scope: !9043)
!9067 = !DILocation(line: 1759, column: 8, scope: !9043)
!9068 = !DILocation(line: 1759, column: 13, scope: !9043)
!9069 = !DILocation(line: 1759, column: 29, scope: !9043)
!9070 = !DILocation(line: 1760, column: 8, scope: !9043)
!9071 = !DILocation(line: 1760, column: 13, scope: !9043)
!9072 = !DILocation(line: 1760, column: 23, scope: !9043)
!9073 = !DILocation(line: 1761, column: 8, scope: !9043)
!9074 = !DILocation(line: 1761, column: 13, scope: !9043)
!9075 = !DILocation(line: 1761, column: 24, scope: !9043)
!9076 = !DILocation(line: 1762, column: 8, scope: !9043)
!9077 = !DILocation(line: 1762, column: 13, scope: !9043)
!9078 = !DILocation(line: 1762, column: 21, scope: !9043)
!9079 = !DILocation(line: 1763, column: 8, scope: !9043)
!9080 = !DILocation(line: 1763, column: 13, scope: !9043)
!9081 = !DILocation(line: 1763, column: 20, scope: !9043)
!9082 = !DILocation(line: 1764, column: 8, scope: !9043)
!9083 = !DILocation(line: 1764, column: 23, scope: !9043)
!9084 = !DILocation(line: 1768, column: 8, scope: !9043)
!9085 = !DILocation(line: 1768, column: 20, scope: !9043)
!9086 = !DILocation(line: 1770, column: 5, scope: !9043)
!9087 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !597, file: !597, line: 1775, type: !8880, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9088)
!9088 = !{!9089, !9090}
!9089 = !DILocalVariable(name: "driver", arg: 1, scope: !9087, file: !597, line: 1775, type: !8882)
!9090 = !DILocalVariable(name: "D", arg: 2, scope: !9087, file: !597, line: 1775, type: !786)
!9091 = !DILocation(line: 0, scope: !9087)
!9092 = !DILocation(line: 1793, column: 5, scope: !9087)
!9093 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !597, file: !597, line: 1932, type: !8880, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9094)
!9094 = !{!9095, !9096}
!9095 = !DILocalVariable(name: "driver", arg: 1, scope: !9093, file: !597, line: 1932, type: !8882)
!9096 = !DILocalVariable(name: "D", arg: 2, scope: !9093, file: !597, line: 1932, type: !786)
!9097 = !DILocation(line: 0, scope: !9093)
!9098 = !DILocation(line: 1935, column: 13, scope: !9093)
!9099 = !DILocation(line: 1935, column: 25, scope: !9093)
!9100 = !DILocation(line: 1936, column: 13, scope: !9093)
!9101 = !DILocation(line: 1936, column: 22, scope: !9093)
!9102 = !DILocation(line: 1937, column: 13, scope: !9093)
!9103 = !DILocation(line: 1937, column: 23, scope: !9093)
!9104 = !DILocation(line: 1939, column: 13, scope: !9093)
!9105 = !DILocation(line: 1939, column: 24, scope: !9093)
!9106 = !DILocation(line: 1940, column: 13, scope: !9093)
!9107 = !DILocation(line: 1940, column: 25, scope: !9093)
!9108 = !DILocation(line: 1945, column: 13, scope: !9093)
!9109 = !DILocation(line: 1945, column: 32, scope: !9093)
!9110 = !DILocation(line: 1946, column: 13, scope: !9093)
!9111 = !DILocation(line: 1946, column: 30, scope: !9093)
!9112 = !DILocation(line: 1947, column: 13, scope: !9093)
!9113 = !DILocation(line: 1947, column: 26, scope: !9093)
!9114 = !DILocation(line: 1948, column: 13, scope: !9093)
!9115 = !DILocation(line: 1948, column: 25, scope: !9093)
!9116 = !DILocation(line: 1949, column: 13, scope: !9093)
!9117 = !DILocation(line: 1949, column: 24, scope: !9093)
!9118 = !DILocation(line: 1956, column: 13, scope: !9093)
!9119 = !DILocation(line: 1956, column: 23, scope: !9093)
!9120 = !DILocation(line: 1957, column: 13, scope: !9093)
!9121 = !DILocation(line: 1957, column: 28, scope: !9093)
!9122 = !DILocation(line: 1960, column: 13, scope: !9093)
!9123 = !DILocation(line: 1960, column: 30, scope: !9093)
!9124 = !DILocation(line: 1961, column: 13, scope: !9093)
!9125 = !DILocation(line: 1961, column: 30, scope: !9093)
!9126 = !DILocation(line: 1962, column: 13, scope: !9093)
!9127 = !DILocation(line: 1962, column: 20, scope: !9093)
!9128 = !DILocation(line: 1968, column: 9, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9093, file: !597, line: 1968, column: 9)
!9130 = !DILocation(line: 1968, column: 36, scope: !9129)
!9131 = !DILocation(line: 1968, column: 9, scope: !9093)
!9132 = !DILocation(line: 1971, column: 12, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9129, file: !597, line: 1970, column: 5)
!9134 = !DILocation(line: 1971, column: 25, scope: !9133)
!9135 = !DILocation(line: 1979, column: 8, scope: !9093)
!9136 = !DILocation(line: 1979, column: 13, scope: !9093)
!9137 = !DILocation(line: 1979, column: 25, scope: !9093)
!9138 = !DILocation(line: 1980, column: 8, scope: !9093)
!9139 = !DILocation(line: 1980, column: 13, scope: !9093)
!9140 = !DILocation(line: 1980, column: 24, scope: !9093)
!9141 = !DILocation(line: 1981, column: 8, scope: !9093)
!9142 = !DILocation(line: 1981, column: 13, scope: !9093)
!9143 = !DILocation(line: 1981, column: 24, scope: !9093)
!9144 = !DILocation(line: 1982, column: 8, scope: !9093)
!9145 = !DILocation(line: 1982, column: 13, scope: !9093)
!9146 = !DILocation(line: 1982, column: 22, scope: !9093)
!9147 = !DILocation(line: 1983, column: 8, scope: !9093)
!9148 = !DILocation(line: 1983, column: 13, scope: !9093)
!9149 = !DILocation(line: 1983, column: 21, scope: !9093)
!9150 = !DILocation(line: 1984, column: 8, scope: !9093)
!9151 = !DILocation(line: 1984, column: 13, scope: !9093)
!9152 = !DILocation(line: 1984, column: 22, scope: !9093)
!9153 = !DILocation(line: 1985, column: 8, scope: !9093)
!9154 = !DILocation(line: 1985, column: 13, scope: !9093)
!9155 = !DILocation(line: 1985, column: 22, scope: !9093)
!9156 = !DILocation(line: 1986, column: 8, scope: !9093)
!9157 = !DILocation(line: 1986, column: 13, scope: !9093)
!9158 = !DILocation(line: 1986, column: 21, scope: !9093)
!9159 = !DILocation(line: 1987, column: 8, scope: !9093)
!9160 = !DILocation(line: 1987, column: 13, scope: !9093)
!9161 = !DILocation(line: 1987, column: 20, scope: !9093)
!9162 = !DILocation(line: 1988, column: 8, scope: !9093)
!9163 = !DILocation(line: 1988, column: 13, scope: !9093)
!9164 = !DILocation(line: 1988, column: 25, scope: !9093)
!9165 = !DILocation(line: 1989, column: 8, scope: !9093)
!9166 = !DILocation(line: 1989, column: 13, scope: !9093)
!9167 = !DILocation(line: 1989, column: 22, scope: !9093)
!9168 = !DILocation(line: 1990, column: 8, scope: !9093)
!9169 = !DILocation(line: 1990, column: 13, scope: !9093)
!9170 = !DILocation(line: 1990, column: 22, scope: !9093)
!9171 = !DILocation(line: 1993, column: 8, scope: !9093)
!9172 = !DILocation(line: 1993, column: 13, scope: !9093)
!9173 = !DILocation(line: 1993, column: 26, scope: !9093)
!9174 = !DILocation(line: 1996, column: 8, scope: !9093)
!9175 = !DILocation(line: 1996, column: 20, scope: !9093)
!9176 = !DILocation(line: 1999, column: 8, scope: !9093)
!9177 = !DILocation(line: 1999, column: 24, scope: !9093)
!9178 = !DILocation(line: 2000, column: 8, scope: !9093)
!9179 = !DILocation(line: 2000, column: 19, scope: !9093)
!9180 = !DILocation(line: 2001, column: 8, scope: !9093)
!9181 = !DILocation(line: 2001, column: 24, scope: !9093)
!9182 = !DILocation(line: 2002, column: 8, scope: !9093)
!9183 = !DILocation(line: 2002, column: 23, scope: !9093)
!9184 = !DILocation(line: 2004, column: 5, scope: !9093)
!9185 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !597, file: !597, line: 2160, type: !1146, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9186)
!9186 = !{!9187, !9188, !9189, !9202, !9203, !9204}
!9187 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9185, file: !597, line: 2160, type: !199)
!9188 = !DILocalVariable(name: "Info", arg: 2, scope: !9185, file: !597, line: 2160, type: !199)
!9189 = !DILocalVariable(name: "FlashInfo", scope: !9185, file: !597, line: 2162, type: !9190)
!9190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9191, size: 32)
!9191 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !812, line: 99, baseType: !9192)
!9192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 90, size: 928, elements: !9193)
!9193 = !{!9194, !9195, !9196, !9197, !9198, !9199, !9200, !9201}
!9194 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9192, file: !812, line: 91, baseType: !36, size: 32)
!9195 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9192, file: !812, line: 92, baseType: !979, size: 256, offset: 32)
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9192, file: !812, line: 93, baseType: !979, size: 256, offset: 288)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9192, file: !812, line: 94, baseType: !979, size: 256, offset: 544)
!9198 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9192, file: !812, line: 95, baseType: !36, size: 32, offset: 800)
!9199 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9192, file: !812, line: 96, baseType: !1302, size: 16, offset: 832)
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9192, file: !812, line: 97, baseType: !36, size: 32, offset: 864)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9192, file: !812, line: 98, baseType: !36, size: 32, offset: 896)
!9202 = !DILocalVariable(name: "D", scope: !9185, file: !597, line: 2163, type: !786)
!9203 = !DILocalVariable(name: "i", scope: !9185, file: !597, line: 2164, type: !36)
!9204 = !DILocalVariable(name: "result", scope: !9185, file: !597, line: 2166, type: !16)
!9205 = !DILocation(line: 0, scope: !9185)
!9206 = !DILocation(line: 2163, column: 37, scope: !9185)
!9207 = !DILocation(line: 2202, column: 16, scope: !9185)
!9208 = !DILocation(line: 2202, column: 28, scope: !9185)
!9209 = !DILocation(line: 2204, column: 15, scope: !9185)
!9210 = !DILocation(line: 2204, column: 29, scope: !9185)
!9211 = !DILocation(line: 2204, column: 39, scope: !9185)
!9212 = !DILocation(line: 2204, column: 5, scope: !9185)
!9213 = !DILocation(line: 2205, column: 9, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9185, file: !597, line: 2204, column: 45)
!9215 = !DILocation(line: 2205, column: 33, scope: !9214)
!9216 = !DILocation(line: 2206, column: 41, scope: !9214)
!9217 = !DILocation(line: 2206, column: 55, scope: !9214)
!9218 = !DILocation(line: 2206, column: 9, scope: !9214)
!9219 = !DILocation(line: 2206, column: 36, scope: !9214)
!9220 = !DILocation(line: 2207, column: 38, scope: !9214)
!9221 = !DILocation(line: 2207, column: 52, scope: !9214)
!9222 = !DILocation(line: 2207, column: 32, scope: !9214)
!9223 = !DILocation(line: 2209, column: 10, scope: !9214)
!9224 = distinct !{!9224, !9212, !9225}
!9225 = !DILocation(line: 2210, column: 5, scope: !9185)
!9226 = !DILocation(line: 2212, column: 16, scope: !9185)
!9227 = !DILocation(line: 2212, column: 32, scope: !9185)
!9228 = !DILocation(line: 2213, column: 16, scope: !9185)
!9229 = !DILocation(line: 2213, column: 25, scope: !9185)
!9230 = !DILocation(line: 2236, column: 5, scope: !9185)
!9231 = !DILocation(line: 2238, column: 5, scope: !9185)
!9232 = !DILocation(line: 2239, column: 18, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9185, file: !597, line: 2238, column: 10)
!9234 = !DILocation(line: 2240, column: 34, scope: !9185)
!9235 = !DILocation(line: 2240, column: 5, scope: !9233)
!9236 = distinct !{!9236, !9231, !9237}
!9237 = !DILocation(line: 2240, column: 43, scope: !9185)
!9238 = !DILocation(line: 2256, column: 8, scope: !9185)
!9239 = !DILocation(line: 2256, column: 5, scope: !9185)
!9240 = !DILocation(line: 2259, column: 5, scope: !9185)
!9241 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !597, file: !597, line: 2275, type: !889, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9242)
!9242 = !{!9243, !9244, !9245, !9246}
!9243 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9241, file: !597, line: 2275, type: !199)
!9244 = !DILocalVariable(name: "D", scope: !9241, file: !597, line: 2278, type: !786)
!9245 = !DILocalVariable(name: "status", scope: !9241, file: !597, line: 2279, type: !839)
!9246 = !DILocalVariable(name: "saved_mask", scope: !9241, file: !597, line: 2280, type: !36)
!9247 = !DILocation(line: 0, scope: !9241)
!9248 = !DILocation(line: 2278, column: 33, scope: !9241)
!9249 = !DILocation(line: 2293, column: 9, scope: !9241)
!9250 = !DILocation(line: 2297, column: 17, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !597, line: 2297, column: 17)
!9252 = distinct !DILexicalBlock(scope: !9241, file: !597, line: 2293, column: 19)
!9253 = !DILocation(line: 2297, column: 17, scope: !9252)
!9254 = !DILocation(line: 2298, column: 17, scope: !9255)
!9255 = distinct !DILexicalBlock(scope: !9251, file: !597, line: 2297, column: 36)
!9256 = !DILocation(line: 2299, column: 37, scope: !9255)
!9257 = !DILocation(line: 2300, column: 13, scope: !9255)
!9258 = !DILocation(line: 2303, column: 50, scope: !9252)
!9259 = !DILocation(line: 2303, column: 55, scope: !9252)
!9260 = !DILocation(line: 2303, column: 22, scope: !9252)
!9261 = !DILocation(line: 2306, column: 35, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9252, file: !597, line: 2306, column: 17)
!9263 = !DILocation(line: 2306, column: 32, scope: !9262)
!9264 = !DILocation(line: 2306, column: 30, scope: !9262)
!9265 = !DILocation(line: 2306, column: 19, scope: !9262)
!9266 = !DILocation(line: 2306, column: 17, scope: !9252)
!9267 = distinct !{!9267, !9249, !9268}
!9268 = !DILocation(line: 2313, column: 9, scope: !9241)
!9269 = !DILocation(line: 2307, column: 17, scope: !9270)
!9270 = distinct !DILexicalBlock(scope: !9262, file: !597, line: 2306, column: 59)
!9271 = !DILocation(line: 2315, column: 12, scope: !9241)
!9272 = !DILocation(line: 2315, column: 21, scope: !9241)
!9273 = !DILocation(line: 2326, column: 5, scope: !9241)
!9274 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !597, file: !597, line: 2819, type: !1155, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9275)
!9275 = !{!9276, !9277, !9278, !9279, !9280, !9281, !9282, !9283, !9284, !9285, !9288, !9289}
!9276 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9274, file: !597, line: 2819, type: !199)
!9277 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9274, file: !597, line: 2819, type: !36)
!9278 = !DILocalVariable(name: "result", scope: !9274, file: !597, line: 2821, type: !16)
!9279 = !DILocalVariable(name: "blocksize", scope: !9274, file: !597, line: 2822, type: !36)
!9280 = !DILocalVariable(name: "eraseunit", scope: !9274, file: !597, line: 2823, type: !36)
!9281 = !DILocalVariable(name: "eraseaddr", scope: !9274, file: !597, line: 2824, type: !36)
!9282 = !DILocalVariable(name: "iteration", scope: !9274, file: !597, line: 2825, type: !36)
!9283 = !DILocalVariable(name: "D", scope: !9274, file: !597, line: 2826, type: !786)
!9284 = !DILocalVariable(name: "erase_block", scope: !9274, file: !597, line: 2827, type: !36)
!9285 = !DILocalVariable(name: "a", scope: !9286, file: !597, line: 2853, type: !36)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !597, line: 2852, column: 56)
!9287 = distinct !DILexicalBlock(scope: !9274, file: !597, line: 2852, column: 9)
!9288 = !DILocalVariable(name: "b", scope: !9286, file: !597, line: 2853, type: !36)
!9289 = !DILocalVariable(name: "c", scope: !9286, file: !597, line: 2853, type: !36)
!9290 = !DILocation(line: 0, scope: !9274)
!9291 = !DILocation(line: 2826, column: 30, scope: !9274)
!9292 = !DILocation(line: 2829, column: 5, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9294, file: !597, line: 2829, column: 5)
!9294 = distinct !DILexicalBlock(scope: !9274, file: !597, line: 2829, column: 5)
!9295 = !DILocation(line: 2829, column: 5, scope: !9294)
!9296 = distinct !{!9296, !9292, !9292}
!9297 = !DILocation(line: 2838, column: 8, scope: !9274)
!9298 = !DILocation(line: 2838, column: 21, scope: !9274)
!9299 = !DILocation(line: 2847, column: 5, scope: !9274)
!9300 = !DILocation(line: 2848, column: 18, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9274, file: !597, line: 2847, column: 10)
!9302 = !DILocation(line: 2850, column: 34, scope: !9274)
!9303 = !DILocation(line: 2850, column: 5, scope: !9301)
!9304 = distinct !{!9304, !9299, !9305}
!9305 = !DILocation(line: 2850, column: 43, scope: !9274)
!9306 = !DILocation(line: 2839, column: 32, scope: !9274)
!9307 = !DILocation(line: 2861, column: 53, scope: !9286)
!9308 = !DILocation(line: 2861, column: 40, scope: !9286)
!9309 = !DILocation(line: 2861, column: 25, scope: !9286)
!9310 = !DILocation(line: 2874, column: 16, scope: !9286)
!9311 = !DILocation(line: 2874, column: 13, scope: !9286)
!9312 = !DILocation(line: 0, scope: !9286)
!9313 = !DILocation(line: 2875, column: 24, scope: !9286)
!9314 = !DILocation(line: 2877, column: 21, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9286, file: !597, line: 2877, column: 13)
!9316 = !DILocation(line: 2877, column: 13, scope: !9286)
!9317 = !DILocation(line: 2879, column: 23, scope: !9318)
!9318 = distinct !DILexicalBlock(scope: !9319, file: !597, line: 2879, column: 21)
!9319 = distinct !DILexicalBlock(scope: !9320, file: !597, line: 2878, column: 120)
!9320 = distinct !DILexicalBlock(scope: !9321, file: !597, line: 2878, column: 13)
!9321 = distinct !DILexicalBlock(scope: !9322, file: !597, line: 2878, column: 13)
!9322 = distinct !DILexicalBlock(scope: !9315, file: !597, line: 2877, column: 27)
!9323 = !DILocation(line: 2879, column: 21, scope: !9319)
!9324 = !DILocation(line: 2878, column: 48, scope: !9320)
!9325 = !DILocation(line: 2878, column: 83, scope: !9320)
!9326 = !DILocation(line: 2878, column: 113, scope: !9320)
!9327 = !DILocation(line: 2878, column: 35, scope: !9320)
!9328 = !DILocation(line: 2878, column: 13, scope: !9321)
!9329 = distinct !{!9329, !9328, !9330}
!9330 = !DILocation(line: 2883, column: 13, scope: !9321)
!9331 = !DILocation(line: 2863, column: 19, scope: !9286)
!9332 = !DILocation(line: 2825, column: 24, scope: !9274)
!9333 = !DILocation(line: 2886, column: 9, scope: !9286)
!9334 = !DILocation(line: 2888, column: 36, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9286, file: !597, line: 2886, column: 31)
!9336 = !DILocation(line: 2888, column: 41, scope: !9335)
!9337 = !DILocation(line: 2889, column: 17, scope: !9335)
!9338 = !DILocation(line: 2891, column: 36, scope: !9335)
!9339 = !DILocation(line: 2891, column: 41, scope: !9335)
!9340 = !DILocation(line: 2892, column: 17, scope: !9335)
!9341 = !DILocation(line: 2894, column: 36, scope: !9335)
!9342 = !DILocation(line: 2894, column: 41, scope: !9335)
!9343 = !DILocation(line: 2895, column: 17, scope: !9335)
!9344 = !DILocation(line: 2897, column: 17, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9346, file: !597, line: 2897, column: 17)
!9346 = distinct !DILexicalBlock(scope: !9335, file: !597, line: 2897, column: 17)
!9347 = distinct !{!9347, !9344, !9344}
!9348 = !DILocation(line: 0, scope: !9335)
!9349 = !DILocation(line: 2906, column: 5, scope: !9274)
!9350 = !DILocation(line: 2908, column: 32, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9274, file: !597, line: 2906, column: 27)
!9352 = !DILocation(line: 2908, column: 37, scope: !9351)
!9353 = !DILocation(line: 2909, column: 13, scope: !9351)
!9354 = !DILocation(line: 2911, column: 32, scope: !9351)
!9355 = !DILocation(line: 2911, column: 37, scope: !9351)
!9356 = !DILocation(line: 2912, column: 13, scope: !9351)
!9357 = !DILocation(line: 2914, column: 32, scope: !9351)
!9358 = !DILocation(line: 2914, column: 37, scope: !9351)
!9359 = !DILocation(line: 2915, column: 13, scope: !9351)
!9360 = !DILocation(line: 0, scope: !9351)
!9361 = !DILocation(line: 2921, column: 56, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9363, file: !597, line: 2921, column: 5)
!9363 = distinct !DILexicalBlock(scope: !9274, file: !597, line: 2921, column: 5)
!9364 = !DILocation(line: 2921, column: 5, scope: !9363)
!9365 = !DILocation(line: 2921, column: 35, scope: !9363)
!9366 = !DILocation(line: 2921, column: 22, scope: !9363)
!9367 = !DILocation(line: 2922, column: 9, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9362, file: !597, line: 2921, column: 99)
!9369 = !DILocation(line: 2929, column: 9, scope: !9368)
!9370 = !DILocation(line: 2938, column: 26, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9368, file: !597, line: 2929, column: 26)
!9372 = !DILocation(line: 2939, column: 37, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9371, file: !597, line: 2939, column: 17)
!9374 = !DILocation(line: 2939, column: 17, scope: !9371)
!9375 = distinct !{!9375, !9369, !9376}
!9376 = !DILocation(line: 2943, column: 9, scope: !9368)
!9377 = !DILocation(line: 2921, column: 71, scope: !9362)
!9378 = !DILocation(line: 2921, column: 85, scope: !9362)
!9379 = distinct !{!9379, !9364, !9380}
!9380 = !DILocation(line: 2983, column: 5, scope: !9363)
!9381 = !DILocation(line: 2985, column: 21, scope: !9274)
!9382 = !DILocation(line: 3000, column: 5, scope: !9274)
!9383 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !597, file: !597, line: 2533, type: !1159, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9384)
!9384 = !{!9385, !9386, !9387, !9388, !9389, !9390, !9391, !9392, !9393, !9394, !9395, !9396, !9397, !9398}
!9385 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9383, file: !597, line: 2533, type: !199)
!9386 = !DILocalVariable(name: "Address", arg: 2, scope: !9383, file: !597, line: 2533, type: !199)
!9387 = !DILocalVariable(name: "Data", arg: 3, scope: !9383, file: !597, line: 2533, type: !199)
!9388 = !DILocalVariable(name: "Length", arg: 4, scope: !9383, file: !597, line: 2533, type: !36)
!9389 = !DILocalVariable(name: "D", scope: !9383, file: !597, line: 2535, type: !786)
!9390 = !DILocalVariable(name: "savedMask", scope: !9383, file: !597, line: 2536, type: !36)
!9391 = !DILocalVariable(name: "address", scope: !9383, file: !597, line: 2537, type: !36)
!9392 = !DILocalVariable(name: "p_data", scope: !9383, file: !597, line: 2538, type: !184)
!9393 = !DILocalVariable(name: "p_data_first", scope: !9383, file: !597, line: 2539, type: !184)
!9394 = !DILocalVariable(name: "result", scope: !9383, file: !597, line: 2540, type: !16)
!9395 = !DILocalVariable(name: "written", scope: !9383, file: !597, line: 2541, type: !36)
!9396 = !DILocalVariable(name: "length", scope: !9383, file: !597, line: 2542, type: !36)
!9397 = !DILocalVariable(name: "cmd1", scope: !9383, file: !597, line: 2543, type: !36)
!9398 = !DILocalVariable(name: "j", scope: !9399, file: !597, line: 2599, type: !36)
!9399 = distinct !DILexicalBlock(scope: !9400, file: !597, line: 2597, column: 61)
!9400 = distinct !DILexicalBlock(scope: !9401, file: !597, line: 2597, column: 13)
!9401 = distinct !DILexicalBlock(scope: !9383, file: !597, line: 2583, column: 25)
!9402 = !DILocation(line: 0, scope: !9383)
!9403 = !DILocation(line: 2535, column: 26, scope: !9383)
!9404 = !DILocation(line: 2537, column: 37, scope: !9383)
!9405 = !DILocation(line: 2538, column: 5, scope: !9383)
!9406 = !DILocation(line: 2538, column: 19, scope: !9383)
!9407 = !DILocation(line: 2542, column: 5, scope: !9383)
!9408 = !DILocation(line: 2545, column: 5, scope: !9409)
!9409 = distinct !DILexicalBlock(scope: !9410, file: !597, line: 2545, column: 5)
!9410 = distinct !DILexicalBlock(scope: !9383, file: !597, line: 2545, column: 5)
!9411 = !DILocation(line: 2545, column: 5, scope: !9410)
!9412 = distinct !{!9412, !9408, !9408}
!9413 = !DILocation(line: 2569, column: 8, scope: !9383)
!9414 = !DILocation(line: 2569, column: 21, scope: !9383)
!9415 = !DILocation(line: 2576, column: 5, scope: !9383)
!9416 = !DILocation(line: 2577, column: 18, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9383, file: !597, line: 2576, column: 10)
!9418 = !DILocation(line: 2579, column: 34, scope: !9383)
!9419 = !DILocation(line: 2579, column: 5, scope: !9417)
!9420 = distinct !{!9420, !9415, !9421}
!9421 = !DILocation(line: 2579, column: 43, scope: !9383)
!9422 = !DILocation(line: 2583, column: 14, scope: !9383)
!9423 = !DILocation(line: 2583, column: 5, scope: !9383)
!9424 = !DILocation(line: 2584, column: 27, scope: !9401)
!9425 = !DILocation(line: 2592, column: 18, scope: !9401)
!9426 = !DILocation(line: 2592, column: 35, scope: !9401)
!9427 = !DILocation(line: 2592, column: 74, scope: !9401)
!9428 = !DILocation(line: 2592, column: 50, scope: !9401)
!9429 = !DILocation(line: 2592, column: 39, scope: !9401)
!9430 = !DILocation(line: 2595, column: 37, scope: !9401)
!9431 = !DILocation(line: 2595, column: 29, scope: !9401)
!9432 = !DILocation(line: 2595, column: 16, scope: !9401)
!9433 = !DILocation(line: 2597, column: 13, scope: !9400)
!9434 = !DILocation(line: 2597, column: 30, scope: !9400)
!9435 = !DILocation(line: 2597, column: 13, scope: !9401)
!9436 = !DILocation(line: 0, scope: !9399)
!9437 = !DILocation(line: 2600, column: 27, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !597, line: 2600, column: 13)
!9439 = distinct !DILexicalBlock(scope: !9399, file: !597, line: 2600, column: 13)
!9440 = !DILocation(line: 2600, column: 13, scope: !9439)
!9441 = !DILocation(line: 2601, column: 38, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9438, file: !597, line: 2600, column: 42)
!9443 = !DILocation(line: 2601, column: 17, scope: !9442)
!9444 = !DILocation(line: 2601, column: 36, scope: !9442)
!9445 = !DILocation(line: 2600, column: 38, scope: !9438)
!9446 = distinct !{!9446, !9440, !9447}
!9447 = !DILocation(line: 2602, column: 13, scope: !9439)
!9448 = !DILocation(line: 0, scope: !9401)
!9449 = !DILocation(line: 2606, column: 18, scope: !9450)
!9450 = distinct !DILexicalBlock(scope: !9401, file: !597, line: 2606, column: 13)
!9451 = !DILocation(line: 2606, column: 29, scope: !9450)
!9452 = !DILocation(line: 2606, column: 13, scope: !9401)
!9453 = !DILocation(line: 2607, column: 13, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !9450, file: !597, line: 2606, column: 55)
!9455 = !DILocation(line: 2608, column: 9, scope: !9454)
!9456 = !DILocation(line: 2613, column: 16, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9401, file: !597, line: 2613, column: 13)
!9458 = !DILocation(line: 2613, column: 29, scope: !9457)
!9459 = !DILocation(line: 0, scope: !9457)
!9460 = !DILocation(line: 2613, column: 13, scope: !9401)
!9461 = !DILocation(line: 2614, column: 20, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9457, file: !597, line: 2613, column: 35)
!9463 = !DILocation(line: 2615, column: 32, scope: !9462)
!9464 = !DILocation(line: 2615, column: 40, scope: !9462)
!9465 = !DILocation(line: 2615, column: 13, scope: !9462)
!9466 = !DILocation(line: 2616, column: 9, scope: !9462)
!9467 = !DILocation(line: 2619, column: 20, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9457, file: !597, line: 2618, column: 9)
!9469 = !DILocation(line: 2620, column: 32, scope: !9468)
!9470 = !DILocation(line: 2620, column: 40, scope: !9468)
!9471 = !DILocation(line: 2620, column: 13, scope: !9468)
!9472 = !DILocation(line: 2633, column: 37, scope: !9401)
!9473 = !DILocation(line: 2634, column: 45, scope: !9401)
!9474 = !DILocation(line: 2634, column: 42, scope: !9401)
!9475 = !DILocation(line: 2634, column: 40, scope: !9401)
!9476 = !DILocation(line: 2634, column: 58, scope: !9401)
!9477 = !DILocation(line: 2634, column: 29, scope: !9401)
!9478 = !DILocation(line: 2635, column: 28, scope: !9401)
!9479 = !DILocation(line: 2636, column: 9, scope: !9401)
!9480 = !DILocation(line: 2638, column: 26, scope: !9401)
!9481 = !DILocation(line: 2638, column: 9, scope: !9401)
!9482 = !DILocation(line: 2639, column: 29, scope: !9401)
!9483 = !DILocation(line: 2639, column: 9, scope: !9401)
!9484 = !DILocation(line: 2670, column: 9, scope: !9401)
!9485 = !DILocation(line: 2676, column: 89, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9401, file: !597, line: 2670, column: 13)
!9487 = !DILocation(line: 2676, column: 26, scope: !9486)
!9488 = !DILocation(line: 2678, column: 36, scope: !9401)
!9489 = !DILocation(line: 2678, column: 9, scope: !9486)
!9490 = distinct !{!9490, !9484, !9491}
!9491 = !DILocation(line: 2678, column: 45, scope: !9401)
!9492 = !DILocation(line: 2718, column: 19, scope: !9401)
!9493 = !DILocation(line: 2718, column: 16, scope: !9401)
!9494 = !DILocation(line: 2719, column: 16, scope: !9401)
!9495 = !DILocation(line: 2722, column: 31, scope: !9496)
!9496 = distinct !DILexicalBlock(scope: !9401, file: !597, line: 2722, column: 13)
!9497 = !DILocation(line: 2722, column: 13, scope: !9401)
!9498 = distinct !{!9498, !9423, !9499}
!9499 = !DILocation(line: 2725, column: 5, scope: !9383)
!9500 = !DILocation(line: 2748, column: 21, scope: !9383)
!9501 = !DILocation(line: 2757, column: 16, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9383, file: !597, line: 2757, column: 9)
!9503 = !DILocation(line: 2761, column: 1, scope: !9383)
!9504 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !597, file: !597, line: 3019, type: !1155, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9505)
!9505 = !{!9506, !9507}
!9506 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9504, file: !597, line: 3019, type: !199)
!9507 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9504, file: !597, line: 3019, type: !36)
!9508 = !DILocation(line: 0, scope: !9504)
!9509 = !DILocation(line: 3021, column: 5, scope: !9504)
!9510 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !597, file: !597, line: 3124, type: !1164, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9511)
!9511 = !{!9512, !9513, !9514, !9515, !9516, !9517, !9518, !9519}
!9512 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9510, file: !597, line: 3124, type: !199)
!9513 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9510, file: !597, line: 3124, type: !36)
!9514 = !DILocalVariable(name: "result", scope: !9510, file: !597, line: 3126, type: !16)
!9515 = !DILocalVariable(name: "savedMask", scope: !9510, file: !597, line: 3127, type: !36)
!9516 = !DILocalVariable(name: "D", scope: !9510, file: !597, line: 3128, type: !786)
!9517 = !DILocalVariable(name: "status_busy", scope: !9510, file: !597, line: 3129, type: !839)
!9518 = !DILocalVariable(name: "status_suspend", scope: !9510, file: !597, line: 3129, type: !839)
!9519 = !DILocalVariable(name: "check_status", scope: !9520, file: !597, line: 3141, type: !839)
!9520 = distinct !DILexicalBlock(scope: !9521, file: !597, line: 3140, column: 56)
!9521 = distinct !DILexicalBlock(scope: !9510, file: !597, line: 3140, column: 9)
!9522 = !DILocation(line: 0, scope: !9510)
!9523 = !DILocation(line: 3128, column: 47, scope: !9510)
!9524 = !DILocation(line: 3131, column: 5, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9526, file: !597, line: 3131, column: 5)
!9526 = distinct !DILexicalBlock(scope: !9510, file: !597, line: 3131, column: 5)
!9527 = !DILocation(line: 3131, column: 5, scope: !9526)
!9528 = distinct !{!9528, !9524, !9524}
!9529 = !DILocation(line: 3134, column: 50, scope: !9510)
!9530 = !DILocation(line: 3134, column: 55, scope: !9510)
!9531 = !DILocation(line: 3134, column: 22, scope: !9510)
!9532 = !DILocation(line: 3135, column: 50, scope: !9510)
!9533 = !DILocation(line: 3135, column: 55, scope: !9510)
!9534 = !DILocation(line: 3135, column: 22, scope: !9510)
!9535 = !DILocation(line: 3140, column: 32, scope: !9521)
!9536 = !DILocation(line: 3140, column: 29, scope: !9521)
!9537 = !DILocation(line: 3140, column: 27, scope: !9521)
!9538 = !DILocation(line: 3140, column: 11, scope: !9521)
!9539 = !DILocation(line: 3140, column: 9, scope: !9510)
!9540 = !DILocation(line: 3141, column: 34, scope: !9520)
!9541 = !DILocation(line: 3141, column: 60, scope: !9520)
!9542 = !DILocation(line: 3141, column: 58, scope: !9520)
!9543 = !DILocation(line: 0, scope: !9520)
!9544 = !DILocation(line: 3144, column: 37, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9520, file: !597, line: 3144, column: 13)
!9546 = !DILocation(line: 3144, column: 35, scope: !9545)
!9547 = !DILocation(line: 3144, column: 16, scope: !9545)
!9548 = !DILocation(line: 3144, column: 52, scope: !9545)
!9549 = !DILocation(line: 3145, column: 21, scope: !9545)
!9550 = !DILocation(line: 3145, column: 38, scope: !9545)
!9551 = !DILocation(line: 3147, column: 13, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9553, file: !597, line: 3147, column: 13)
!9553 = distinct !DILexicalBlock(scope: !9554, file: !597, line: 3147, column: 13)
!9554 = distinct !DILexicalBlock(scope: !9545, file: !597, line: 3145, column: 61)
!9555 = !DILocation(line: 3147, column: 13, scope: !9553)
!9556 = distinct !{!9556, !9551, !9551}
!9557 = !DILocation(line: 3150, column: 13, scope: !9554)
!9558 = !DILocation(line: 3151, column: 33, scope: !9554)
!9559 = !DILocation(line: 3153, column: 9, scope: !9554)
!9560 = !DILocation(line: 3155, column: 20, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9562, file: !597, line: 3155, column: 17)
!9562 = distinct !DILexicalBlock(scope: !9545, file: !597, line: 3153, column: 16)
!9563 = !DILocation(line: 3155, column: 31, scope: !9561)
!9564 = !DILocation(line: 3155, column: 17, scope: !9562)
!9565 = !DILocation(line: 3156, column: 36, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9561, file: !597, line: 3155, column: 54)
!9567 = !DILocation(line: 3156, column: 17, scope: !9566)
!9568 = !DILocation(line: 3157, column: 36, scope: !9566)
!9569 = !DILocation(line: 3157, column: 17, scope: !9566)
!9570 = !DILocation(line: 3158, column: 13, scope: !9566)
!9571 = !DILocation(line: 3160, column: 13, scope: !9562)
!9572 = !DILocation(line: 3173, column: 13, scope: !9562)
!9573 = !DILocation(line: 3194, column: 18, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9575, file: !597, line: 3193, column: 32)
!9575 = distinct !DILexicalBlock(scope: !9510, file: !597, line: 3193, column: 9)
!9576 = !DILocation(line: 3195, column: 5, scope: !9574)
!9577 = !DILocation(line: 3197, column: 5, scope: !9510)
!9578 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !597, file: !597, line: 3225, type: !1155, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9579)
!9579 = !{!9580, !9581, !9582, !9583, !9584}
!9580 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9578, file: !597, line: 3225, type: !199)
!9581 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9578, file: !597, line: 3225, type: !36)
!9582 = !DILocalVariable(name: "D", scope: !9578, file: !597, line: 3227, type: !786)
!9583 = !DILocalVariable(name: "status", scope: !9578, file: !597, line: 3228, type: !839)
!9584 = !DILocalVariable(name: "savedMask", scope: !9578, file: !597, line: 3229, type: !36)
!9585 = !DILocation(line: 0, scope: !9578)
!9586 = !DILocation(line: 3227, column: 30, scope: !9578)
!9587 = !DILocation(line: 3234, column: 5, scope: !9578)
!9588 = !DILocation(line: 3238, column: 5, scope: !9578)
!9589 = !DILocation(line: 3239, column: 46, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9578, file: !597, line: 3238, column: 15)
!9591 = !DILocation(line: 3239, column: 51, scope: !9590)
!9592 = !DILocation(line: 3239, column: 18, scope: !9590)
!9593 = !DILocation(line: 3241, column: 31, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9590, file: !597, line: 3241, column: 13)
!9595 = !DILocation(line: 3241, column: 28, scope: !9594)
!9596 = !DILocation(line: 3241, column: 26, scope: !9594)
!9597 = !DILocation(line: 3241, column: 15, scope: !9594)
!9598 = !DILocation(line: 3241, column: 13, scope: !9590)
!9599 = distinct !{!9599, !9588, !9600}
!9600 = !DILocation(line: 3244, column: 5, scope: !9578)
!9601 = !DILocation(line: 3246, column: 5, scope: !9578)
!9602 = !DILocation(line: 3250, column: 5, scope: !9578)
!9603 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !597, file: !597, line: 3277, type: !1155, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9604)
!9604 = !{!9605, !9606, !9607}
!9605 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9603, file: !597, line: 3277, type: !199)
!9606 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9603, file: !597, line: 3277, type: !36)
!9607 = !DILocalVariable(name: "D", scope: !9603, file: !597, line: 3279, type: !786)
!9608 = !DILocation(line: 0, scope: !9603)
!9609 = !DILocation(line: 3279, column: 29, scope: !9603)
!9610 = !DILocation(line: 3282, column: 5, scope: !9603)
!9611 = !DILocation(line: 3285, column: 5, scope: !9603)
!9612 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !597, file: !597, line: 3332, type: !1181, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9613)
!9613 = !{!9614, !9615, !9616}
!9614 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9612, file: !597, line: 3332, type: !199)
!9615 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !9612, file: !597, line: 3332, type: !199)
!9616 = !DILocalVariable(name: "ACTION", arg: 3, scope: !9612, file: !597, line: 3332, type: !36)
!9617 = !DILocation(line: 0, scope: !9612)
!9618 = !DILocation(line: 3334, column: 5, scope: !9612)
!9619 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !597, file: !597, line: 2350, type: !1189, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9620)
!9620 = !{!9621, !9622, !9623, !9624}
!9621 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9619, file: !597, line: 2350, type: !199)
!9622 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !9619, file: !597, line: 2350, type: !36)
!9623 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !9619, file: !597, line: 2350, type: !199)
!9624 = !DILocalVariable(name: "D", scope: !9619, file: !597, line: 2352, type: !786)
!9625 = !DILocation(line: 0, scope: !9619)
!9626 = !DILocation(line: 2353, column: 9, scope: !9619)
!9627 = !DILocation(line: 2354, column: 12, scope: !9628)
!9628 = distinct !DILexicalBlock(scope: !9629, file: !597, line: 2353, column: 51)
!9629 = distinct !DILexicalBlock(scope: !9619, file: !597, line: 2353, column: 9)
!9630 = !DILocation(line: 2354, column: 9, scope: !9628)
!9631 = !DILocation(line: 2355, column: 5, scope: !9628)
!9632 = !DILocation(line: 2356, column: 17, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9634, file: !597, line: 2356, column: 13)
!9634 = distinct !DILexicalBlock(scope: !9635, file: !597, line: 2355, column: 71)
!9635 = distinct !DILexicalBlock(scope: !9629, file: !597, line: 2355, column: 16)
!9636 = !DILocation(line: 2356, column: 14, scope: !9633)
!9637 = !DILocation(line: 2356, column: 28, scope: !9633)
!9638 = !DILocation(line: 2356, column: 49, scope: !9633)
!9639 = !DILocation(line: 2356, column: 56, scope: !9633)
!9640 = !DILocation(line: 2356, column: 70, scope: !9633)
!9641 = !DILocation(line: 2356, column: 80, scope: !9633)
!9642 = !DILocation(line: 2356, column: 13, scope: !9634)
!9643 = !DILocation(line: 2361, column: 9, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9645, file: !597, line: 2361, column: 9)
!9645 = distinct !DILexicalBlock(scope: !9646, file: !597, line: 2361, column: 9)
!9646 = distinct !DILexicalBlock(scope: !9635, file: !597, line: 2359, column: 12)
!9647 = distinct !{!9647, !9643, !9643}
!9648 = !DILocation(line: 2363, column: 5, scope: !9619)
!9649 = !DILocation(line: 2364, column: 1, scope: !9619)
!9650 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !597, file: !597, line: 3452, type: !9021, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9651)
!9651 = !{!9652, !9653}
!9652 = !DILocalVariable(name: "D", arg: 1, scope: !9650, file: !597, line: 3452, type: !786)
!9653 = !DILocalVariable(name: "savedMask", scope: !9650, file: !597, line: 3454, type: !36)
!9654 = !DILocation(line: 0, scope: !9650)
!9655 = !DILocation(line: 3462, column: 24, scope: !9650)
!9656 = !DILocation(line: 3462, column: 31, scope: !9650)
!9657 = !DILocation(line: 3462, column: 36, scope: !9650)
!9658 = !DILocation(line: 3462, column: 28, scope: !9650)
!9659 = !DILocation(line: 3462, column: 5, scope: !9650)
!9660 = !DILocation(line: 3463, column: 12, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9650, file: !597, line: 3463, column: 9)
!9662 = !DILocation(line: 3463, column: 27, scope: !9661)
!9663 = !DILocation(line: 3463, column: 9, scope: !9650)
!9664 = !DILocation(line: 3464, column: 30, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9661, file: !597, line: 3463, column: 33)
!9666 = !DILocation(line: 3464, column: 28, scope: !9665)
!9667 = !DILocation(line: 3465, column: 5, scope: !9665)
!9668 = !DILocation(line: 3467, column: 5, scope: !9650)
!9669 = !DILocation(line: 3469, column: 1, scope: !9650)
!9670 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !597, file: !597, line: 2417, type: !4261, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9671)
!9671 = !{!9672}
!9672 = !DILocalVariable(name: "savedMask", scope: !9670, file: !597, line: 2419, type: !36)
!9673 = !DILocation(line: 0, scope: !9670)
!9674 = !DILocation(line: 2425, column: 25, scope: !9670)
!9675 = !DILocation(line: 2427, column: 1, scope: !9670)
!9676 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !597, file: !597, line: 3421, type: !9021, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9677)
!9677 = !{!9678, !9679, !9680, !9681}
!9678 = !DILocalVariable(name: "D", arg: 1, scope: !9676, file: !597, line: 3421, type: !786)
!9679 = !DILocalVariable(name: "savedMask", scope: !9676, file: !597, line: 3423, type: !36)
!9680 = !DILocalVariable(name: "currtime", scope: !9676, file: !597, line: 3424, type: !36)
!9681 = !DILocalVariable(name: "difftime", scope: !9676, file: !597, line: 3424, type: !36)
!9682 = !DILocation(line: 0, scope: !9676)
!9683 = !DILocation(line: 3427, column: 9, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9676, file: !597, line: 3427, column: 9)
!9685 = !DILocation(line: 3427, column: 28, scope: !9684)
!9686 = !DILocation(line: 3427, column: 9, scope: !9676)
!9687 = !DILocation(line: 3428, column: 20, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9684, file: !597, line: 3427, column: 59)
!9689 = !DILocation(line: 3429, column: 20, scope: !9688)
!9690 = !DILocation(line: 3430, column: 27, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9688, file: !597, line: 3430, column: 13)
!9692 = !DILocation(line: 3430, column: 24, scope: !9691)
!9693 = !DILocation(line: 3430, column: 22, scope: !9691)
!9694 = !DILocation(line: 3430, column: 13, scope: !9688)
!9695 = !DILocation(line: 3431, column: 47, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9691, file: !597, line: 3430, column: 46)
!9697 = !DILocation(line: 3431, column: 13, scope: !9696)
!9698 = !DILocation(line: 3432, column: 9, scope: !9696)
!9699 = !DILocation(line: 3436, column: 24, scope: !9676)
!9700 = !DILocation(line: 3436, column: 31, scope: !9676)
!9701 = !DILocation(line: 3436, column: 36, scope: !9676)
!9702 = !DILocation(line: 3436, column: 28, scope: !9676)
!9703 = !DILocation(line: 3436, column: 5, scope: !9676)
!9704 = !DILocation(line: 3443, column: 1, scope: !9676)
!9705 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !597, file: !597, line: 3536, type: !9706, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9708)
!9706 = !DISubroutineType(types: !9707)
!9707 = !{!36, !786, !185}
!9708 = !{!9709, !9710, !9711, !9712}
!9709 = !DILocalVariable(name: "D", arg: 1, scope: !9705, file: !597, line: 3536, type: !786)
!9710 = !DILocalVariable(name: "cmd", arg: 2, scope: !9705, file: !597, line: 3536, type: !185)
!9711 = !DILocalVariable(name: "savedMask", scope: !9705, file: !597, line: 3538, type: !36)
!9712 = !DILocalVariable(name: "result", scope: !9705, file: !597, line: 3539, type: !36)
!9713 = !DILocation(line: 0, scope: !9705)
!9714 = !DILocation(line: 3542, column: 22, scope: !9705)
!9715 = !DILocation(line: 3542, column: 5, scope: !9705)
!9716 = !DILocation(line: 3543, column: 35, scope: !9705)
!9717 = !DILocation(line: 3543, column: 33, scope: !9705)
!9718 = !DILocation(line: 3544, column: 25, scope: !9705)
!9719 = !DILocation(line: 3545, column: 24, scope: !9705)
!9720 = !DILocation(line: 3546, column: 25, scope: !9705)
!9721 = !DILocation(line: 3546, column: 5, scope: !9705)
!9722 = !DILocation(line: 3547, column: 42, scope: !9705)
!9723 = !DILocation(line: 3547, column: 60, scope: !9705)
!9724 = !DILocation(line: 3547, column: 14, scope: !9705)
!9725 = !DILocation(line: 3550, column: 5, scope: !9705)
!9726 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !597, file: !597, line: 2405, type: !4261, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9727)
!9727 = !{!9728}
!9728 = !DILocalVariable(name: "savedMask", scope: !9726, file: !597, line: 2407, type: !36)
!9729 = !DILocation(line: 0, scope: !9726)
!9730 = !DILocation(line: 2413, column: 25, scope: !9726)
!9731 = !DILocation(line: 2416, column: 1, scope: !9726)
!9732 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !597, file: !597, line: 2393, type: !4261, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9733)
!9733 = !{!9734}
!9734 = !DILocalVariable(name: "savedMask", scope: !9732, file: !597, line: 2395, type: !36)
!9735 = !DILocation(line: 0, scope: !9732)
!9736 = !DILocation(line: 2401, column: 20, scope: !9732)
!9737 = !DILocation(line: 2404, column: 1, scope: !9732)
!9738 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !597, file: !597, line: 3355, type: !889, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9739)
!9739 = !{!9740, !9741, !9742}
!9740 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9738, file: !597, line: 3355, type: !199)
!9741 = !DILocalVariable(name: "D", scope: !9738, file: !597, line: 3357, type: !786)
!9742 = !DILocalVariable(name: "status", scope: !9738, file: !597, line: 3358, type: !113)
!9743 = !DILocation(line: 0, scope: !9738)
!9744 = !DILocation(line: 3366, column: 12, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9738, file: !597, line: 3366, column: 9)
!9746 = !DILocation(line: 3366, column: 17, scope: !9745)
!9747 = !DILocation(line: 3366, column: 9, scope: !9745)
!9748 = !DILocation(line: 3366, column: 9, scope: !9738)
!9749 = !DILocation(line: 3357, column: 25, scope: !9738)
!9750 = !DILocation(line: 3367, column: 18, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9745, file: !597, line: 3366, column: 33)
!9752 = !DILocation(line: 3368, column: 25, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9751, file: !597, line: 3368, column: 13)
!9754 = !DILocation(line: 3368, column: 22, scope: !9753)
!9755 = !DILocation(line: 3368, column: 20, scope: !9753)
!9756 = !DILocation(line: 3368, column: 13, scope: !9751)
!9757 = !DILocation(line: 3373, column: 5, scope: !9738)
!9758 = !DILocation(line: 3374, column: 1, scope: !9738)
!9759 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !597, file: !597, line: 3478, type: !9021, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9760)
!9760 = !{!9761}
!9761 = !DILocalVariable(name: "D", arg: 1, scope: !9759, file: !597, line: 3478, type: !786)
!9762 = !DILocation(line: 0, scope: !9759)
!9763 = !DILocation(line: 3480, column: 30, scope: !9759)
!9764 = !DILocation(line: 3480, column: 35, scope: !9759)
!9765 = !DILocation(line: 3480, column: 27, scope: !9759)
!9766 = !DILocation(line: 3480, column: 5, scope: !9759)
!9767 = !DILocation(line: 3481, column: 1, scope: !9759)
!9768 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !597, file: !597, line: 2382, type: !4261, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9769)
!9769 = !{!9770}
!9770 = !DILocalVariable(name: "savedMask", scope: !9768, file: !597, line: 2384, type: !36)
!9771 = !DILocation(line: 0, scope: !9768)
!9772 = !DILocation(line: 2390, column: 20, scope: !9768)
!9773 = !DILocation(line: 2392, column: 1, scope: !9768)
!9774 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !597, file: !597, line: 3044, type: !9775, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9777)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{!16, !199, !36, !185}
!9777 = !{!9778, !9779, !9780, !9781, !9782, !9783, !9784, !9785}
!9778 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9774, file: !597, line: 3044, type: !199)
!9779 = !DILocalVariable(name: "addr", arg: 2, scope: !9774, file: !597, line: 3044, type: !36)
!9780 = !DILocalVariable(name: "data", arg: 3, scope: !9774, file: !597, line: 3044, type: !185)
!9781 = !DILocalVariable(name: "savedMask", scope: !9774, file: !597, line: 3046, type: !36)
!9782 = !DILocalVariable(name: "D", scope: !9774, file: !597, line: 3047, type: !786)
!9783 = !DILocalVariable(name: "result", scope: !9774, file: !597, line: 3048, type: !16)
!9784 = !DILocalVariable(name: "check_data", scope: !9774, file: !597, line: 3049, type: !185)
!9785 = !DILocalVariable(name: "status_busy", scope: !9774, file: !597, line: 3050, type: !113)
!9786 = !DILocation(line: 0, scope: !9774)
!9787 = !DILocation(line: 3047, column: 43, scope: !9774)
!9788 = !DILocation(line: 3053, column: 47, scope: !9774)
!9789 = !DILocation(line: 3053, column: 52, scope: !9774)
!9790 = !DILocation(line: 3053, column: 19, scope: !9774)
!9791 = !DILocation(line: 3056, column: 9, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9774, file: !597, line: 3056, column: 9)
!9793 = !DILocation(line: 3056, column: 9, scope: !9774)
!9794 = !DILocation(line: 3058, column: 9, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9796, file: !597, line: 3058, column: 9)
!9796 = distinct !DILexicalBlock(scope: !9797, file: !597, line: 3058, column: 9)
!9797 = distinct !DILexicalBlock(scope: !9792, file: !597, line: 3056, column: 28)
!9798 = !DILocation(line: 3058, column: 9, scope: !9796)
!9799 = distinct !{!9799, !9794, !9794}
!9800 = !DILocation(line: 3060, column: 9, scope: !9797)
!9801 = !DILocation(line: 3062, column: 29, scope: !9797)
!9802 = !DILocation(line: 3063, column: 5, scope: !9797)
!9803 = !DILocation(line: 3065, column: 38, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9792, file: !597, line: 3065, column: 15)
!9805 = !DILocation(line: 3065, column: 35, scope: !9804)
!9806 = !DILocation(line: 3065, column: 33, scope: !9804)
!9807 = !DILocation(line: 3065, column: 17, scope: !9804)
!9808 = !DILocation(line: 3065, column: 15, scope: !9792)
!9809 = !DILocation(line: 3068, column: 9, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9804, file: !597, line: 3065, column: 62)
!9811 = !DILocation(line: 3071, column: 23, scope: !9810)
!9812 = !DILocation(line: 3071, column: 22, scope: !9810)
!9813 = !DILocation(line: 3073, column: 24, scope: !9814)
!9814 = distinct !DILexicalBlock(scope: !9810, file: !597, line: 3073, column: 13)
!9815 = !DILocation(line: 3073, column: 13, scope: !9810)
!9816 = !DILocation(line: 3078, column: 16, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9818, file: !597, line: 3078, column: 16)
!9818 = distinct !DILexicalBlock(scope: !9814, file: !597, line: 3075, column: 16)
!9819 = !DILocation(line: 3078, column: 16, scope: !9818)
!9820 = !DILocation(line: 3081, column: 58, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9817, file: !597, line: 3078, column: 46)
!9822 = !DILocation(line: 3081, column: 17, scope: !9821)
!9823 = !DILocation(line: 3082, column: 22, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9821, file: !597, line: 3082, column: 21)
!9825 = !DILocation(line: 3082, column: 49, scope: !9824)
!9826 = !DILocation(line: 3082, column: 21, scope: !9821)
!9827 = !DILocation(line: 3092, column: 13, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9829, file: !597, line: 3092, column: 13)
!9829 = distinct !DILexicalBlock(scope: !9774, file: !597, line: 3091, column: 9)
!9830 = !DILocation(line: 3092, column: 33, scope: !9828)
!9831 = !DILocation(line: 3092, column: 13, scope: !9829)
!9832 = !DILocation(line: 3106, column: 5, scope: !9774)
!9833 = !DILocation(line: 3107, column: 1, scope: !9774)
!9834 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !597, file: !597, line: 3561, type: !9835, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9837)
!9835 = !DISubroutineType(types: !9836)
!9836 = !{null, !786, !219, !185}
!9837 = !{!9838, !9839, !9840, !9841}
!9838 = !DILocalVariable(name: "D", arg: 1, scope: !9834, file: !597, line: 3561, type: !786)
!9839 = !DILocalVariable(name: "cmd", arg: 2, scope: !9834, file: !597, line: 3561, type: !219)
!9840 = !DILocalVariable(name: "outlen", arg: 3, scope: !9834, file: !597, line: 3561, type: !185)
!9841 = !DILocalVariable(name: "savedMask", scope: !9834, file: !597, line: 3563, type: !36)
!9842 = !DILocation(line: 0, scope: !9834)
!9843 = !DILocation(line: 3566, column: 22, scope: !9834)
!9844 = !DILocation(line: 3566, column: 5, scope: !9834)
!9845 = !DILocation(line: 3567, column: 33, scope: !9834)
!9846 = !DILocation(line: 3568, column: 27, scope: !9834)
!9847 = !DILocation(line: 3568, column: 25, scope: !9834)
!9848 = !DILocation(line: 3569, column: 24, scope: !9834)
!9849 = !DILocation(line: 3570, column: 25, scope: !9834)
!9850 = !DILocation(line: 3570, column: 5, scope: !9834)
!9851 = !DILocation(line: 3573, column: 1, scope: !9834)
!9852 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !597, file: !597, line: 3497, type: !9853, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9855)
!9853 = !DISubroutineType(types: !9854)
!9854 = !{null, !786, !36}
!9855 = !{!9856, !9857, !9858}
!9856 = !DILocalVariable(name: "D", arg: 1, scope: !9852, file: !597, line: 3497, type: !786)
!9857 = !DILocalVariable(name: "addr", arg: 2, scope: !9852, file: !597, line: 3497, type: !36)
!9858 = !DILocalVariable(name: "savedMask", scope: !9852, file: !597, line: 3499, type: !36)
!9859 = !DILocation(line: 0, scope: !9852)
!9860 = !DILocation(line: 3501, column: 14, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9852, file: !597, line: 3501, column: 9)
!9862 = !DILocation(line: 3501, column: 25, scope: !9861)
!9863 = !DILocation(line: 3501, column: 9, scope: !9852)
!9864 = !DILocation(line: 3502, column: 9, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9861, file: !597, line: 3501, column: 51)
!9866 = !DILocation(line: 3503, column: 5, scope: !9865)
!9867 = !DILocation(line: 3516, column: 5, scope: !9852)
!9868 = !DILocation(line: 3517, column: 31, scope: !9852)
!9869 = !DILocation(line: 3517, column: 38, scope: !9852)
!9870 = !DILocation(line: 3517, column: 43, scope: !9852)
!9871 = !DILocation(line: 3517, column: 59, scope: !9852)
!9872 = !DILocation(line: 3517, column: 56, scope: !9852)
!9873 = !DILocation(line: 3517, column: 5, scope: !9852)
!9874 = !DILocation(line: 3524, column: 1, scope: !9852)
!9875 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !597, file: !597, line: 2018, type: !8880, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9876)
!9876 = !{!9877, !9878, !9879}
!9877 = !DILocalVariable(name: "driver", arg: 1, scope: !9875, file: !597, line: 2018, type: !8882)
!9878 = !DILocalVariable(name: "D", arg: 2, scope: !9875, file: !597, line: 2018, type: !786)
!9879 = !DILocalVariable(name: "result", scope: !9875, file: !597, line: 2020, type: !16)
!9880 = !DILocation(line: 0, scope: !9875)
!9881 = !DILocation(line: 2022, column: 13, scope: !9875)
!9882 = !DILocation(line: 2022, column: 5, scope: !9875)
!9883 = !DILocation(line: 2031, column: 16, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9875, file: !597, line: 2022, column: 31)
!9885 = !DILocation(line: 2031, column: 27, scope: !9884)
!9886 = !DILocation(line: 2033, column: 22, scope: !9884)
!9887 = !DILocation(line: 2034, column: 13, scope: !9884)
!9888 = !DILocation(line: 2049, column: 16, scope: !9884)
!9889 = !DILocation(line: 2049, column: 27, scope: !9884)
!9890 = !DILocation(line: 2051, column: 23, scope: !9884)
!9891 = !DILocation(line: 2053, column: 13, scope: !9884)
!9892 = !DILocation(line: 2058, column: 22, scope: !9884)
!9893 = !DILocation(line: 2059, column: 13, scope: !9884)
!9894 = !DILocation(line: 2079, column: 13, scope: !9895)
!9895 = distinct !DILexicalBlock(scope: !9896, file: !597, line: 2079, column: 13)
!9896 = distinct !DILexicalBlock(scope: !9884, file: !597, line: 2079, column: 13)
!9897 = distinct !{!9897, !9894, !9894}
!9898 = !DILocation(line: 2083, column: 5, scope: !9875)
!9899 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !597, file: !597, line: 2100, type: !9900, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9902)
!9900 = !DISubroutineType(types: !9901)
!9901 = !{!16, !8882, !786, !36, !36}
!9902 = !{!9903, !9904, !9905, !9906, !9907}
!9903 = !DILocalVariable(name: "driver", arg: 1, scope: !9899, file: !597, line: 2100, type: !8882)
!9904 = !DILocalVariable(name: "D", arg: 2, scope: !9899, file: !597, line: 2100, type: !786)
!9905 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !9899, file: !597, line: 2100, type: !36)
!9906 = !DILocalVariable(name: "parameter", arg: 4, scope: !9899, file: !597, line: 2100, type: !36)
!9907 = !DILocalVariable(name: "result", scope: !9899, file: !597, line: 2102, type: !16)
!9908 = !DILocation(line: 0, scope: !9899)
!9909 = !DILocation(line: 2105, column: 16, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9899, file: !597, line: 2105, column: 9)
!9911 = !DILocation(line: 2105, column: 24, scope: !9910)
!9912 = !DILocation(line: 2109, column: 12, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9899, file: !597, line: 2109, column: 9)
!9914 = !DILocation(line: 2109, column: 16, scope: !9913)
!9915 = !DILocation(line: 2109, column: 24, scope: !9913)
!9916 = !DILocation(line: 2109, column: 30, scope: !9913)
!9917 = !DILocation(line: 2109, column: 40, scope: !9913)
!9918 = !DILocation(line: 2109, column: 9, scope: !9899)
!9919 = !DILocation(line: 2118, column: 19, scope: !9899)
!9920 = !DILocation(line: 2118, column: 8, scope: !9899)
!9921 = !DILocation(line: 2118, column: 17, scope: !9899)
!9922 = !DILocation(line: 2119, column: 23, scope: !9899)
!9923 = !DILocation(line: 2119, column: 8, scope: !9899)
!9924 = !DILocation(line: 2119, column: 21, scope: !9899)
!9925 = !DILocation(line: 2122, column: 5, scope: !9899)
!9926 = !DILocation(line: 2125, column: 8, scope: !9899)
!9927 = !DILocation(line: 2125, column: 13, scope: !9899)
!9928 = !DILocation(line: 2125, column: 24, scope: !9899)
!9929 = !DILocation(line: 2126, column: 26, scope: !9899)
!9930 = !DILocation(line: 2126, column: 5, scope: !9899)
!9931 = !DILocation(line: 2128, column: 9, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9899, file: !597, line: 2128, column: 9)
!9933 = !DILocation(line: 2128, column: 31, scope: !9932)
!9934 = !DILocation(line: 2128, column: 60, scope: !9932)
!9935 = !DILocation(line: 2128, column: 9, scope: !9899)
!9936 = !DILocation(line: 2129, column: 12, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9932, file: !597, line: 2128, column: 110)
!9938 = !DILocation(line: 2129, column: 17, scope: !9937)
!9939 = !DILocation(line: 2129, column: 28, scope: !9937)
!9940 = !DILocation(line: 2130, column: 9, scope: !9937)
!9941 = !DILocation(line: 2131, column: 5, scope: !9937)
!9942 = !DILocation(line: 2134, column: 14, scope: !9899)
!9943 = !DILocation(line: 2136, column: 5, scope: !9899)
!9944 = !DILocation(line: 2137, column: 1, scope: !9899)
!9945 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !597, file: !597, line: 3387, type: !9946, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9948)
!9946 = !DISubroutineType(types: !9947)
!9947 = !{null, !786, !184}
!9948 = !{!9949, !9950, !9951}
!9949 = !DILocalVariable(name: "D", arg: 1, scope: !9945, file: !597, line: 3387, type: !786)
!9950 = !DILocalVariable(name: "id", arg: 2, scope: !9945, file: !597, line: 3387, type: !184)
!9951 = !DILocalVariable(name: "cmd", scope: !9945, file: !597, line: 3389, type: !185)
!9952 = !DILocation(line: 0, scope: !9945)
!9953 = !DILocation(line: 3389, column: 5, scope: !9945)
!9954 = !DILocation(line: 3405, column: 9, scope: !9955)
!9955 = distinct !DILexicalBlock(scope: !9945, file: !597, line: 3405, column: 9)
!9956 = !DILocation(line: 3405, column: 21, scope: !9955)
!9957 = !DILocation(line: 0, scope: !9955)
!9958 = !DILocation(line: 3405, column: 9, scope: !9945)
!9959 = !DILocation(line: 3411, column: 31, scope: !9945)
!9960 = !DILocation(line: 3411, column: 5, scope: !9945)
!9961 = !DILocation(line: 3412, column: 1, scope: !9945)
!9962 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !597, file: !597, line: 3585, type: !9963, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !596, retainedNodes: !9965)
!9963 = !DISubroutineType(types: !9964)
!9964 = !{null, !8350, !184, !184, !8350, !8350}
!9965 = !{!9966, !9967, !9968, !9969, !9970, !9971}
!9966 = !DILocalVariable(name: "CS", arg: 1, scope: !9962, file: !597, line: 3585, type: !8350)
!9967 = !DILocalVariable(name: "cmd", arg: 2, scope: !9962, file: !597, line: 3585, type: !184)
!9968 = !DILocalVariable(name: "data", arg: 3, scope: !9962, file: !597, line: 3585, type: !184)
!9969 = !DILocalVariable(name: "outl", arg: 4, scope: !9962, file: !597, line: 3585, type: !8350)
!9970 = !DILocalVariable(name: "inl", arg: 5, scope: !9962, file: !597, line: 3585, type: !8350)
!9971 = !DILocalVariable(name: "savedMask", scope: !9962, file: !597, line: 3587, type: !36)
!9972 = !DILocation(line: 0, scope: !9962)
!9973 = !DILocation(line: 3590, column: 5, scope: !9962)
!9974 = !DILocation(line: 3593, column: 1, scope: !9962)
!9975 = distinct !DISubprogram(name: "custom_setSFI", scope: !910, file: !910, line: 101, type: !9976, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !9978)
!9976 = !DISubroutineType(types: !9977)
!9977 = !{!808}
!9978 = !{!9979, !9982}
!9979 = !DILocalVariable(name: "sfi", scope: !9975, file: !910, line: 103, type: !9980)
!9980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9981, size: 32)
!9981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !967)
!9982 = !DILocalVariable(name: "tmp_driving", scope: !9975, file: !910, line: 105, type: !36)
!9983 = !DILocation(line: 110, column: 5, scope: !9975)
!9984 = !DILocation(line: 111, column: 5, scope: !9975)
!9985 = !DILocation(line: 112, column: 5, scope: !9975)
!9986 = !DILocation(line: 114, column: 10, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9975, file: !910, line: 114, column: 9)
!9988 = !DILocation(line: 114, column: 37, scope: !9987)
!9989 = !DILocation(line: 114, column: 9, scope: !9975)
!9990 = !DILocation(line: 115, column: 9, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9987, file: !910, line: 114, column: 52)
!9992 = !DILocation(line: 116, column: 9, scope: !9991)
!9993 = !DILocation(line: 117, column: 9, scope: !9991)
!9994 = !DILocation(line: 118, column: 5, scope: !9991)
!9995 = !DILocation(line: 128, column: 17, scope: !9975)
!9996 = !DILocation(line: 128, column: 15, scope: !9975)
!9997 = !DILocation(line: 134, column: 19, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9975, file: !910, line: 134, column: 9)
!9999 = !DILocation(line: 134, column: 9, scope: !9975)
!10000 = !DILocation(line: 136, column: 9, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9998, file: !910, line: 134, column: 27)
!10002 = distinct !{!10002, !10000, !10003}
!10003 = !DILocation(line: 136, column: 18, scope: !10001)
!10004 = !DILocation(line: 0, scope: !9975)
!10005 = !DILocation(line: 148, column: 29, scope: !9975)
!10006 = !DILocation(line: 148, column: 5, scope: !9975)
!10007 = !DILocation(line: 153, column: 26, scope: !9975)
!10008 = !DILocation(line: 153, column: 24, scope: !9975)
!10009 = !DILocation(line: 154, column: 29, scope: !9975)
!10010 = !DILocation(line: 154, column: 27, scope: !9975)
!10011 = !DILocation(line: 156, column: 27, scope: !9975)
!10012 = !DILocation(line: 156, column: 25, scope: !9975)
!10013 = !DILocation(line: 157, column: 28, scope: !9975)
!10014 = !DILocation(line: 157, column: 26, scope: !9975)
!10015 = !DILocation(line: 158, column: 27, scope: !9975)
!10016 = !DILocation(line: 158, column: 25, scope: !9975)
!10017 = !DILocation(line: 159, column: 27, scope: !9975)
!10018 = !DILocation(line: 159, column: 25, scope: !9975)
!10019 = !DILocation(line: 161, column: 19, scope: !9975)
!10020 = !DILocation(line: 161, column: 34, scope: !9975)
!10021 = !DILocation(line: 162, column: 37, scope: !9975)
!10022 = !DILocation(line: 162, column: 34, scope: !9975)
!10023 = !DILocation(line: 162, column: 20, scope: !9975)
!10024 = !DILocation(line: 163, column: 19, scope: !9975)
!10025 = !DILocation(line: 163, column: 34, scope: !9975)
!10026 = !DILocation(line: 164, column: 34, scope: !9975)
!10027 = !DILocation(line: 164, column: 20, scope: !9975)
!10028 = !DILocation(line: 165, column: 19, scope: !9975)
!10029 = !DILocation(line: 165, column: 34, scope: !9975)
!10030 = !DILocation(line: 166, column: 34, scope: !9975)
!10031 = !DILocation(line: 166, column: 20, scope: !9975)
!10032 = !DILocation(line: 177, column: 5, scope: !9975)
!10033 = distinct !DISubprogram(name: "custom_setSFIExt", scope: !910, file: !910, line: 196, type: !4352, scopeLine: 197, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !909, retainedNodes: !4354)
!10034 = !DILocation(line: 217, column: 5, scope: !10033)
!10035 = !DILocation(line: 224, column: 16, scope: !10033)
!10036 = !DILocation(line: 225, column: 16, scope: !10033)
!10037 = !DILocation(line: 226, column: 22, scope: !10033)
!10038 = !DILocation(line: 227, column: 5, scope: !10033)
!10039 = !DILocation(line: 227, column: 12, scope: !10033)
!10040 = !DILocation(line: 227, column: 29, scope: !10033)
!10041 = distinct !{!10041, !10038, !10042}
!10042 = !DILocation(line: 227, column: 38, scope: !10033)
!10043 = !DILocation(line: 239, column: 5, scope: !10033)
!10044 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !984, file: !984, line: 110, type: !8804, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !10045)
!10045 = !{!10046, !10047, !10048, !10049}
!10046 = !DILocalVariable(name: "id", arg: 1, scope: !10044, file: !984, line: 110, type: !184)
!10047 = !DILocalVariable(name: "i", scope: !10044, file: !984, line: 114, type: !16)
!10048 = !DILocalVariable(name: "j", scope: !10044, file: !984, line: 114, type: !16)
!10049 = !DILocalVariable(name: "id_list", scope: !10044, file: !984, line: 115, type: !10050)
!10050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10051, size: 32)
!10051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1062)
!10052 = !DILocation(line: 0, scope: !10044)
!10053 = !DILocation(line: 119, column: 5, scope: !10054)
!10054 = distinct !DILexicalBlock(scope: !10044, file: !984, line: 119, column: 5)
!10055 = !DILocation(line: 119, column: 46, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10054, file: !984, line: 119, column: 5)
!10057 = !DILocation(line: 119, column: 19, scope: !10056)
!10058 = distinct !{!10058, !10053, !10059}
!10059 = !DILocation(line: 131, column: 5, scope: !10054)
!10060 = !DILocation(line: 121, column: 23, scope: !10061)
!10061 = distinct !DILexicalBlock(scope: !10062, file: !984, line: 121, column: 9)
!10062 = distinct !DILexicalBlock(scope: !10063, file: !984, line: 121, column: 9)
!10063 = distinct !DILexicalBlock(scope: !10056, file: !984, line: 119, column: 50)
!10064 = !DILocation(line: 121, column: 9, scope: !10062)
!10065 = !DILocation(line: 122, column: 17, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10067, file: !984, line: 122, column: 17)
!10067 = distinct !DILexicalBlock(scope: !10061, file: !984, line: 121, column: 51)
!10068 = !DILocation(line: 122, column: 37, scope: !10066)
!10069 = !DILocation(line: 122, column: 34, scope: !10066)
!10070 = !DILocation(line: 122, column: 17, scope: !10067)
!10071 = !DILocation(line: 121, column: 47, scope: !10061)
!10072 = distinct !{!10072, !10064, !10073}
!10073 = !DILocation(line: 125, column: 9, scope: !10062)
!10074 = !DILocation(line: 0, scope: !10062)
!10075 = !DILocation(line: 127, column: 15, scope: !10076)
!10076 = distinct !DILexicalBlock(scope: !10063, file: !984, line: 127, column: 13)
!10077 = !DILocation(line: 127, column: 13, scope: !10063)
!10078 = !DILocation(line: 134, column: 1, scope: !10044)
!10079 = distinct !DISubprogram(name: "CMEM_Index", scope: !984, file: !984, line: 153, type: !6977, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !10080)
!10080 = !{!10081, !10082, !10083, !10090}
!10081 = !DILocalVariable(name: "i", scope: !10079, file: !984, line: 156, type: !16)
!10082 = !DILocalVariable(name: "j", scope: !10079, file: !984, line: 156, type: !16)
!10083 = !DILocalVariable(name: "id", scope: !10079, file: !984, line: 157, type: !10084)
!10084 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1055, line: 89, baseType: !10085)
!10085 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1055, line: 86, size: 64, elements: !10086)
!10086 = !{!10087, !10088}
!10087 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !10085, file: !1055, line: 87, baseType: !1068, size: 64)
!10088 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !10085, file: !1055, line: 88, baseType: !10089, size: 64)
!10089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !113, size: 64, elements: !249)
!10090 = !DILocalVariable(name: "id_list", scope: !10079, file: !984, line: 158, type: !10050)
!10091 = !DILocation(line: 157, column: 5, scope: !10079)
!10092 = !DILocation(line: 157, column: 17, scope: !10079)
!10093 = !DILocation(line: 0, scope: !10079)
!10094 = !DILocation(line: 161, column: 9, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10079, file: !984, line: 161, column: 9)
!10096 = !DILocation(line: 161, column: 20, scope: !10095)
!10097 = !DILocation(line: 161, column: 9, scope: !10079)
!10098 = !DILocation(line: 172, column: 58, scope: !10079)
!10099 = !DILocation(line: 172, column: 5, scope: !10079)
!10100 = !DILocation(line: 178, column: 5, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10079, file: !984, line: 178, column: 5)
!10102 = !DILocation(line: 180, column: 23, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10104, file: !984, line: 180, column: 9)
!10104 = distinct !DILexicalBlock(scope: !10105, file: !984, line: 180, column: 9)
!10105 = distinct !DILexicalBlock(scope: !10106, file: !984, line: 178, column: 53)
!10106 = distinct !DILexicalBlock(scope: !10101, file: !984, line: 178, column: 5)
!10107 = !DILocation(line: 180, column: 9, scope: !10104)
!10108 = !DILocation(line: 181, column: 17, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10110, file: !984, line: 181, column: 17)
!10110 = distinct !DILexicalBlock(scope: !10103, file: !984, line: 180, column: 51)
!10111 = !DILocation(line: 181, column: 37, scope: !10109)
!10112 = !DILocation(line: 181, column: 34, scope: !10109)
!10113 = !DILocation(line: 181, column: 17, scope: !10110)
!10114 = !DILocation(line: 180, column: 47, scope: !10103)
!10115 = distinct !{!10115, !10107, !10116}
!10116 = !DILocation(line: 184, column: 9, scope: !10104)
!10117 = !DILocation(line: 0, scope: !10104)
!10118 = !DILocation(line: 186, column: 15, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10105, file: !984, line: 186, column: 13)
!10120 = !DILocation(line: 186, column: 13, scope: !10105)
!10121 = !DILocation(line: 188, column: 26, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10119, file: !984, line: 186, column: 41)
!10123 = !DILocation(line: 188, column: 24, scope: !10122)
!10124 = !DILocation(line: 189, column: 13, scope: !10122)
!10125 = !DILocation(line: 178, column: 46, scope: !10106)
!10126 = !DILocation(line: 178, column: 19, scope: !10106)
!10127 = distinct !{!10127, !10100, !10128}
!10128 = !DILocation(line: 191, column: 5, scope: !10101)
!10129 = !DILocation(line: 222, column: 12, scope: !10079)
!10130 = !DILocation(line: 223, column: 1, scope: !10079)
!10131 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !984, file: !984, line: 240, type: !10132, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !10134)
!10132 = !DISubroutineType(types: !10133)
!10133 = !{!10050, !36}
!10134 = !{!10135}
!10135 = !DILocalVariable(name: "index", arg: 1, scope: !10131, file: !984, line: 240, type: !36)
!10136 = !DILocation(line: 0, scope: !10131)
!10137 = !DILocation(line: 242, column: 13, scope: !10131)
!10138 = !DILocation(line: 242, column: 5, scope: !10131)
!10139 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !984, file: !984, line: 254, type: !10140, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !10142)
!10140 = !DISubroutineType(types: !10141)
!10141 = !{null, !8350, !199, !592}
!10142 = !{!10143, !10144, !10145, !10146, !10148, !10149}
!10143 = !DILocalVariable(name: "CS", arg: 1, scope: !10139, file: !984, line: 254, type: !8350)
!10144 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10139, file: !984, line: 254, type: !199)
!10145 = !DILocalVariable(name: "flashid", arg: 3, scope: !10139, file: !984, line: 254, type: !592)
!10146 = !DILocalVariable(name: "cmd", scope: !10147, file: !984, line: 258, type: !185)
!10147 = distinct !DILexicalBlock(scope: !10139, file: !984, line: 257, column: 5)
!10148 = !DILocalVariable(name: "id", scope: !10147, file: !984, line: 258, type: !877)
!10149 = !DILocalVariable(name: "i", scope: !10147, file: !984, line: 258, type: !185)
!10150 = !DILocation(line: 0, scope: !10139)
!10151 = !DILocation(line: 258, column: 9, scope: !10147)
!10152 = !DILocation(line: 258, column: 22, scope: !10147)
!10153 = !DILocation(line: 0, scope: !10147)
!10154 = !DILocation(line: 260, column: 13, scope: !10147)
!10155 = !DILocation(line: 261, column: 9, scope: !10147)
!10156 = !DILocation(line: 263, column: 13, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10147, file: !984, line: 263, column: 13)
!10158 = !DILocation(line: 263, column: 27, scope: !10157)
!10159 = !DILocation(line: 263, column: 48, scope: !10157)
!10160 = !DILocation(line: 263, column: 13, scope: !10147)
!10161 = !DILocation(line: 264, column: 17, scope: !10162)
!10162 = distinct !DILexicalBlock(scope: !10157, file: !984, line: 263, column: 95)
!10163 = !DILocation(line: 265, column: 13, scope: !10162)
!10164 = !DILocation(line: 266, column: 9, scope: !10162)
!10165 = !DILocation(line: 268, column: 9, scope: !10166)
!10166 = distinct !DILexicalBlock(scope: !10147, file: !984, line: 268, column: 9)
!10167 = !DILocation(line: 269, column: 26, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10169, file: !984, line: 268, column: 50)
!10169 = distinct !DILexicalBlock(scope: !10166, file: !984, line: 268, column: 9)
!10170 = !DILocation(line: 269, column: 13, scope: !10168)
!10171 = !DILocation(line: 269, column: 24, scope: !10168)
!10172 = !DILocation(line: 268, column: 46, scope: !10169)
!10173 = !DILocation(line: 268, column: 23, scope: !10169)
!10174 = distinct !{!10174, !10165, !10175}
!10175 = !DILocation(line: 270, column: 9, scope: !10166)
!10176 = !DILocation(line: 271, column: 5, scope: !10139)
!10177 = !DILocation(line: 272, column: 5, scope: !10139)
!10178 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !984, file: !984, line: 285, type: !8804, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !10179)
!10179 = !{!10180, !10181, !10182, !10183}
!10180 = !DILocalVariable(name: "id", arg: 1, scope: !10178, file: !984, line: 285, type: !184)
!10181 = !DILocalVariable(name: "i", scope: !10178, file: !984, line: 289, type: !16)
!10182 = !DILocalVariable(name: "j", scope: !10178, file: !984, line: 289, type: !16)
!10183 = !DILocalVariable(name: "id_list", scope: !10178, file: !984, line: 290, type: !10050)
!10184 = !DILocation(line: 0, scope: !10178)
!10185 = !DILocation(line: 294, column: 5, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10178, file: !984, line: 294, column: 5)
!10187 = !DILocation(line: 294, column: 46, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10186, file: !984, line: 294, column: 5)
!10189 = !DILocation(line: 294, column: 19, scope: !10188)
!10190 = distinct !{!10190, !10185, !10191}
!10191 = !DILocation(line: 306, column: 5, scope: !10186)
!10192 = !DILocation(line: 296, column: 23, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10194, file: !984, line: 296, column: 9)
!10194 = distinct !DILexicalBlock(scope: !10195, file: !984, line: 296, column: 9)
!10195 = distinct !DILexicalBlock(scope: !10188, file: !984, line: 294, column: 53)
!10196 = !DILocation(line: 296, column: 9, scope: !10194)
!10197 = !DILocation(line: 297, column: 17, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10199, file: !984, line: 297, column: 17)
!10199 = distinct !DILexicalBlock(scope: !10193, file: !984, line: 296, column: 51)
!10200 = !DILocation(line: 297, column: 37, scope: !10198)
!10201 = !DILocation(line: 297, column: 34, scope: !10198)
!10202 = !DILocation(line: 297, column: 17, scope: !10199)
!10203 = !DILocation(line: 296, column: 47, scope: !10193)
!10204 = distinct !{!10204, !10196, !10205}
!10205 = !DILocation(line: 300, column: 9, scope: !10194)
!10206 = !DILocation(line: 0, scope: !10194)
!10207 = !DILocation(line: 302, column: 15, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10195, file: !984, line: 302, column: 13)
!10209 = !DILocation(line: 302, column: 13, scope: !10195)
!10210 = !DILocation(line: 310, column: 1, scope: !10178)
!10211 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !984, file: !984, line: 328, type: !6977, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !983, retainedNodes: !10212)
!10212 = !{!10213, !10214, !10215, !10216}
!10213 = !DILocalVariable(name: "i", scope: !10211, file: !984, line: 331, type: !16)
!10214 = !DILocalVariable(name: "j", scope: !10211, file: !984, line: 331, type: !16)
!10215 = !DILocalVariable(name: "id", scope: !10211, file: !984, line: 332, type: !10084)
!10216 = !DILocalVariable(name: "id_list", scope: !10211, file: !984, line: 333, type: !10050)
!10217 = !DILocation(line: 332, column: 5, scope: !10211)
!10218 = !DILocation(line: 332, column: 17, scope: !10211)
!10219 = !DILocation(line: 0, scope: !10211)
!10220 = !DILocation(line: 336, column: 9, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10211, file: !984, line: 336, column: 9)
!10222 = !DILocation(line: 336, column: 28, scope: !10221)
!10223 = !DILocation(line: 336, column: 9, scope: !10211)
!10224 = !DILocation(line: 344, column: 60, scope: !10211)
!10225 = !DILocation(line: 344, column: 5, scope: !10211)
!10226 = !DILocation(line: 350, column: 5, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10211, file: !984, line: 350, column: 5)
!10228 = !DILocation(line: 352, column: 23, scope: !10229)
!10229 = distinct !DILexicalBlock(scope: !10230, file: !984, line: 352, column: 9)
!10230 = distinct !DILexicalBlock(scope: !10231, file: !984, line: 352, column: 9)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !984, line: 350, column: 53)
!10232 = distinct !DILexicalBlock(scope: !10227, file: !984, line: 350, column: 5)
!10233 = !DILocation(line: 352, column: 9, scope: !10230)
!10234 = !DILocation(line: 353, column: 17, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10236, file: !984, line: 353, column: 17)
!10236 = distinct !DILexicalBlock(scope: !10229, file: !984, line: 352, column: 51)
!10237 = !DILocation(line: 353, column: 37, scope: !10235)
!10238 = !DILocation(line: 353, column: 34, scope: !10235)
!10239 = !DILocation(line: 353, column: 17, scope: !10236)
!10240 = !DILocation(line: 352, column: 47, scope: !10229)
!10241 = distinct !{!10241, !10233, !10242}
!10242 = !DILocation(line: 356, column: 9, scope: !10230)
!10243 = !DILocation(line: 0, scope: !10230)
!10244 = !DILocation(line: 358, column: 15, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10231, file: !984, line: 358, column: 13)
!10246 = !DILocation(line: 358, column: 13, scope: !10231)
!10247 = !DILocation(line: 360, column: 34, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10245, file: !984, line: 358, column: 41)
!10249 = !DILocation(line: 360, column: 32, scope: !10248)
!10250 = !DILocation(line: 361, column: 13, scope: !10248)
!10251 = !DILocation(line: 350, column: 46, scope: !10232)
!10252 = !DILocation(line: 350, column: 19, scope: !10232)
!10253 = distinct !{!10253, !10226, !10254}
!10254 = !DILocation(line: 363, column: 5, scope: !10227)
!10255 = !DILocation(line: 364, column: 12, scope: !10211)
!10256 = !DILocation(line: 365, column: 1, scope: !10211)
!10257 = distinct !DISubprogram(name: "NOR_ReadID", scope: !1785, file: !1785, line: 64, type: !10258, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1784, retainedNodes: !10264)
!10258 = !DISubroutineType(types: !10259)
!10259 = !{null, !8350, !10260, !592}
!10260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10261, size: 32)
!10261 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !10262)
!10262 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !10263, line: 158, baseType: !113)
!10263 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!10264 = !{!10265, !10266, !10267, !10268, !10269, !10271, !10272}
!10265 = !DILocalVariable(name: "CS", arg: 1, scope: !10257, file: !1785, line: 64, type: !8350)
!10266 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10257, file: !1785, line: 64, type: !10260)
!10267 = !DILocalVariable(name: "flashid", arg: 3, scope: !10257, file: !1785, line: 64, type: !592)
!10268 = !DILocalVariable(name: "savedMask", scope: !10257, file: !1785, line: 66, type: !36)
!10269 = !DILocalVariable(name: "cmd", scope: !10270, file: !1785, line: 70, type: !185)
!10270 = distinct !DILexicalBlock(scope: !10257, file: !1785, line: 69, column: 5)
!10271 = !DILocalVariable(name: "id", scope: !10270, file: !1785, line: 70, type: !877)
!10272 = !DILocalVariable(name: "i", scope: !10270, file: !1785, line: 70, type: !185)
!10273 = !DILocation(line: 0, scope: !10257)
!10274 = !DILocation(line: 70, column: 9, scope: !10270)
!10275 = !DILocation(line: 70, column: 22, scope: !10270)
!10276 = !DILocation(line: 0, scope: !10270)
!10277 = !DILocation(line: 72, column: 13, scope: !10270)
!10278 = !DILocation(line: 73, column: 21, scope: !10270)
!10279 = !DILocation(line: 74, column: 9, scope: !10270)
!10280 = !DILocation(line: 75, column: 9, scope: !10270)
!10281 = !DILocation(line: 77, column: 13, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10270, file: !1785, line: 77, column: 13)
!10283 = !DILocation(line: 77, column: 27, scope: !10282)
!10284 = !DILocation(line: 77, column: 48, scope: !10282)
!10285 = !DILocation(line: 77, column: 13, scope: !10270)
!10286 = !DILocation(line: 78, column: 17, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10282, file: !1785, line: 77, column: 87)
!10288 = !DILocation(line: 79, column: 25, scope: !10287)
!10289 = !DILocation(line: 80, column: 13, scope: !10287)
!10290 = !DILocation(line: 81, column: 13, scope: !10287)
!10291 = !DILocation(line: 82, column: 9, scope: !10287)
!10292 = !DILocation(line: 84, column: 9, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10270, file: !1785, line: 84, column: 9)
!10294 = !DILocation(line: 85, column: 26, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10296, file: !1785, line: 84, column: 50)
!10296 = distinct !DILexicalBlock(scope: !10293, file: !1785, line: 84, column: 9)
!10297 = !DILocation(line: 85, column: 13, scope: !10295)
!10298 = !DILocation(line: 85, column: 24, scope: !10295)
!10299 = !DILocation(line: 84, column: 46, scope: !10296)
!10300 = !DILocation(line: 84, column: 23, scope: !10296)
!10301 = distinct !{!10301, !10292, !10302}
!10302 = !DILocation(line: 86, column: 9, scope: !10293)
!10303 = !DILocation(line: 87, column: 5, scope: !10257)
!10304 = !DILocation(line: 89, column: 1, scope: !10257)
!10305 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1072, file: !1072, line: 248, type: !5203, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !4354)
!10306 = !DILocation(line: 250, column: 5, scope: !10305)
!10307 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1072, file: !1072, line: 270, type: !5203, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !4354)
!10308 = !DILocation(line: 272, column: 5, scope: !10307)
!10309 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1072, file: !1072, line: 374, type: !4261, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !4354)
!10310 = !DILocation(line: 376, column: 5, scope: !10309)
!10311 = !DILocation(line: 377, column: 1, scope: !10309)
!10312 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1072, file: !1072, line: 395, type: !5203, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !4354)
!10313 = !DILocation(line: 397, column: 5, scope: !10312)
!10314 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1072, file: !1072, line: 416, type: !5203, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1071, retainedNodes: !4354)
!10315 = !DILocation(line: 418, column: 5, scope: !10314)
!10316 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1082, file: !1082, line: 254, type: !5203, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !4354)
!10317 = !DILocation(line: 256, column: 32, scope: !10316)
!10318 = !DILocation(line: 257, column: 5, scope: !10316)
!10319 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1082, file: !1082, line: 406, type: !10320, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !4354)
!10320 = !DISubroutineType(types: !10321)
!10321 = !{!185}
!10322 = !DILocation(line: 408, column: 5, scope: !10319)
!10323 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1082, file: !1082, line: 420, type: !10324, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10326)
!10324 = !DISubroutineType(types: !10325)
!10325 = !{!36, !185}
!10326 = !{!10327, !10328, !10329}
!10327 = !DILocalVariable(name: "CS", arg: 1, scope: !10323, file: !1082, line: 420, type: !185)
!10328 = !DILocalVariable(name: "index", scope: !10323, file: !1082, line: 422, type: !36)
!10329 = !DILocalVariable(name: "list", scope: !10323, file: !1082, line: 423, type: !1341)
!10330 = !DILocation(line: 0, scope: !10323)
!10331 = !DILocation(line: 427, column: 13, scope: !10323)
!10332 = !DILocation(line: 430, column: 34, scope: !10323)
!10333 = !DILocation(line: 430, column: 5, scope: !10323)
!10334 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1082, file: !1082, line: 442, type: !10335, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10337)
!10335 = !DISubroutineType(types: !10336)
!10336 = !{!36, !36, !1118}
!10337 = !{!10338, !10339, !10340}
!10338 = !DILocalVariable(name: "address", arg: 1, scope: !10334, file: !1082, line: 442, type: !36)
!10339 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !10334, file: !1082, line: 442, type: !1118)
!10340 = !DILocalVariable(name: "i", scope: !10334, file: !1082, line: 444, type: !113)
!10341 = !DILocation(line: 0, scope: !10334)
!10342 = !DILocation(line: 446, column: 23, scope: !10334)
!10343 = !DILocation(line: 448, column: 36, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10345, file: !1082, line: 448, column: 5)
!10345 = distinct !DILexicalBlock(scope: !10334, file: !1082, line: 448, column: 5)
!10346 = !DILocation(line: 448, column: 41, scope: !10344)
!10347 = !DILocation(line: 448, column: 5, scope: !10345)
!10348 = !DILocation(line: 449, column: 39, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10350, file: !1082, line: 449, column: 13)
!10350 = distinct !DILexicalBlock(scope: !10344, file: !1082, line: 448, column: 54)
!10351 = !DILocation(line: 449, column: 21, scope: !10349)
!10352 = !DILocation(line: 449, column: 46, scope: !10349)
!10353 = !DILocation(line: 450, column: 46, scope: !10349)
!10354 = !DILocation(line: 450, column: 25, scope: !10349)
!10355 = !DILocation(line: 449, column: 13, scope: !10350)
!10356 = !DILocation(line: 448, column: 48, scope: !10344)
!10357 = !DILocation(line: 448, column: 29, scope: !10344)
!10358 = !DILocation(line: 448, column: 31, scope: !10344)
!10359 = distinct !{!10359, !10347, !10360}
!10360 = !DILocation(line: 453, column: 5, scope: !10345)
!10361 = !DILocation(line: 454, column: 27, scope: !10334)
!10362 = !DILocation(line: 454, column: 5, scope: !10334)
!10363 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1082, file: !1082, line: 462, type: !6216, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10364)
!10364 = !{!10365}
!10365 = !DILocalVariable(name: "address", arg: 1, scope: !10363, file: !1082, line: 462, type: !36)
!10366 = !DILocation(line: 0, scope: !10363)
!10367 = !DILocation(line: 464, column: 45, scope: !10363)
!10368 = !DILocation(line: 464, column: 12, scope: !10363)
!10369 = !DILocation(line: 464, column: 5, scope: !10363)
!10370 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1082, file: !1082, line: 487, type: !6216, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10371)
!10371 = !{!10372, !10373, !10374}
!10372 = !DILocalVariable(name: "address", arg: 1, scope: !10370, file: !1082, line: 487, type: !36)
!10373 = !DILocalVariable(name: "index", scope: !10370, file: !1082, line: 490, type: !36)
!10374 = !DILocalVariable(name: "list", scope: !10370, file: !1082, line: 491, type: !1341)
!10375 = !DILocation(line: 0, scope: !10370)
!10376 = !DILocation(line: 490, column: 22, scope: !10370)
!10377 = !DILocation(line: 495, column: 45, scope: !10370)
!10378 = !DILocation(line: 495, column: 12, scope: !10370)
!10379 = !DILocation(line: 495, column: 5, scope: !10370)
!10380 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1082, file: !1082, line: 517, type: !10381, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10385)
!10381 = !DISubroutineType(types: !10382)
!10382 = !{!16, !10383}
!10383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10384, size: 32)
!10384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1132)
!10385 = !{!10386, !10387, !10388}
!10386 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !10380, file: !1082, line: 517, type: !10383)
!10387 = !DILocalVariable(name: "result", scope: !10380, file: !1082, line: 519, type: !36)
!10388 = !DILocalVariable(name: "i", scope: !10380, file: !1082, line: 519, type: !36)
!10389 = !DILocation(line: 0, scope: !10380)
!10390 = !DILocation(line: 522, column: 29, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10392, file: !1082, line: 522, column: 5)
!10392 = distinct !DILexicalBlock(scope: !10380, file: !1082, line: 522, column: 5)
!10393 = !DILocation(line: 522, column: 38, scope: !10391)
!10394 = !DILocation(line: 522, column: 5, scope: !10392)
!10395 = !DILocation(line: 523, column: 31, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10391, file: !1082, line: 522, column: 51)
!10397 = !DILocation(line: 523, column: 37, scope: !10396)
!10398 = !DILocation(line: 523, column: 16, scope: !10396)
!10399 = !DILocation(line: 522, column: 45, scope: !10391)
!10400 = distinct !{!10400, !10394, !10401}
!10401 = !DILocation(line: 524, column: 5, scope: !10392)
!10402 = !DILocation(line: 525, column: 5, scope: !10380)
!10403 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1082, file: !1082, line: 535, type: !10404, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10406)
!10404 = !DISubroutineType(types: !10405)
!10405 = !{!36, !36, !36, !1097, !1118}
!10406 = !{!10407, !10408, !10409, !10410, !10411, !10412, !10413, !10414, !10415}
!10407 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10403, file: !1082, line: 536, type: !36)
!10408 = !DILocalVariable(name: "length", arg: 2, scope: !10403, file: !1082, line: 537, type: !36)
!10409 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10403, file: !1082, line: 538, type: !1097)
!10410 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !10403, file: !1082, line: 539, type: !1118)
!10411 = !DILocalVariable(name: "addr", scope: !10403, file: !1082, line: 541, type: !36)
!10412 = !DILocalVariable(name: "ptr", scope: !10403, file: !1082, line: 541, type: !36)
!10413 = !DILocalVariable(name: "blksize", scope: !10403, file: !1082, line: 541, type: !36)
!10414 = !DILocalVariable(name: "total_blocks", scope: !10403, file: !1082, line: 541, type: !36)
!10415 = !DILocalVariable(name: "endaddr", scope: !10403, file: !1082, line: 542, type: !36)
!10416 = !DILocation(line: 0, scope: !10403)
!10417 = !DILocation(line: 542, column: 33, scope: !10403)
!10418 = !DILocation(line: 557, column: 59, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10420, file: !1082, line: 557, column: 5)
!10420 = distinct !DILexicalBlock(scope: !10403, file: !1082, line: 557, column: 5)
!10421 = !DILocation(line: 557, column: 5, scope: !10420)
!10422 = !DILocation(line: 560, column: 19, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10419, file: !1082, line: 559, column: 5)
!10424 = !DILocation(line: 562, column: 26, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10423, file: !1082, line: 562, column: 13)
!10426 = !DILocation(line: 0, scope: !10425)
!10427 = !DILocation(line: 562, column: 13, scope: !10423)
!10428 = !DILocation(line: 563, column: 39, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10425, file: !1082, line: 562, column: 34)
!10430 = !DILocation(line: 564, column: 29, scope: !10429)
!10431 = !DILocation(line: 564, column: 42, scope: !10429)
!10432 = !DILocation(line: 565, column: 9, scope: !10429)
!10433 = !DILocation(line: 567, column: 45, scope: !10434)
!10434 = distinct !DILexicalBlock(scope: !10425, file: !1082, line: 567, column: 18)
!10435 = !DILocation(line: 567, column: 26, scope: !10434)
!10436 = !DILocation(line: 567, column: 18, scope: !10425)
!10437 = !DILocation(line: 568, column: 29, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10434, file: !1082, line: 567, column: 59)
!10439 = !DILocation(line: 568, column: 41, scope: !10438)
!10440 = !DILocation(line: 569, column: 9, scope: !10438)
!10441 = !DILocation(line: 572, column: 16, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10434, file: !1082, line: 571, column: 14)
!10443 = !DILocation(line: 573, column: 21, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10442, file: !1082, line: 573, column: 17)
!10445 = !DILocation(line: 573, column: 17, scope: !10442)
!10446 = !DILocation(line: 576, column: 29, scope: !10442)
!10447 = !DILocation(line: 576, column: 39, scope: !10442)
!10448 = !DILocation(line: 577, column: 29, scope: !10442)
!10449 = !DILocation(line: 577, column: 42, scope: !10442)
!10450 = !DILocation(line: 0, scope: !10420)
!10451 = !DILocation(line: 579, column: 14, scope: !10423)
!10452 = !DILocation(line: 580, column: 21, scope: !10423)
!10453 = distinct !{!10453, !10421, !10454}
!10454 = !DILocation(line: 581, column: 5, scope: !10420)
!10455 = !DILocation(line: 586, column: 1, scope: !10403)
!10456 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1082, file: !1082, line: 593, type: !10457, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10459)
!10457 = !DISubroutineType(types: !10458)
!10458 = !{!16, !36, !36, !1097}
!10459 = !{!10460, !10461, !10462}
!10460 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10456, file: !1082, line: 593, type: !36)
!10461 = !DILocalVariable(name: "length", arg: 2, scope: !10456, file: !1082, line: 593, type: !36)
!10462 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10456, file: !1082, line: 593, type: !1097)
!10463 = !DILocation(line: 0, scope: !10456)
!10464 = !DILocation(line: 595, column: 12, scope: !10456)
!10465 = !DILocation(line: 595, column: 5, scope: !10456)
!10466 = !DILocation(line: 597, column: 81, scope: !10456)
!10467 = !DILocation(line: 597, column: 12, scope: !10456)
!10468 = !DILocation(line: 597, column: 5, scope: !10456)
!10469 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1082, file: !1082, line: 606, type: !10457, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10470)
!10470 = !{!10471, !10472, !10473}
!10471 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10469, file: !1082, line: 606, type: !36)
!10472 = !DILocalVariable(name: "length", arg: 2, scope: !10469, file: !1082, line: 606, type: !36)
!10473 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10469, file: !1082, line: 606, type: !1097)
!10474 = !DILocation(line: 0, scope: !10469)
!10475 = !DILocation(line: 624, column: 5, scope: !10469)
!10476 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1082, file: !1082, line: 637, type: !10457, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10477)
!10477 = !{!10478, !10479, !10480, !10481, !10482}
!10478 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10476, file: !1082, line: 637, type: !36)
!10479 = !DILocalVariable(name: "length", arg: 2, scope: !10476, file: !1082, line: 637, type: !36)
!10480 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10476, file: !1082, line: 637, type: !1097)
!10481 = !DILocalVariable(name: "index", scope: !10476, file: !1082, line: 642, type: !36)
!10482 = !DILocalVariable(name: "list", scope: !10476, file: !1082, line: 644, type: !1341)
!10483 = !DILocation(line: 0, scope: !10476)
!10484 = !DILocation(line: 642, column: 22, scope: !10476)
!10485 = !DILocation(line: 648, column: 81, scope: !10476)
!10486 = !DILocation(line: 648, column: 12, scope: !10476)
!10487 = !DILocation(line: 648, column: 5, scope: !10476)
!10488 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1082, file: !1082, line: 658, type: !10457, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10489)
!10489 = !{!10490, !10491, !10492}
!10490 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10488, file: !1082, line: 658, type: !36)
!10491 = !DILocalVariable(name: "length", arg: 2, scope: !10488, file: !1082, line: 658, type: !36)
!10492 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10488, file: !1082, line: 658, type: !1097)
!10493 = !DILocation(line: 0, scope: !10488)
!10494 = !DILocation(line: 688, column: 5, scope: !10488)
!10495 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1082, file: !1082, line: 700, type: !8393, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10496)
!10496 = !{!10497, !10498, !10499}
!10497 = !DILocalVariable(name: "CS", arg: 1, scope: !10495, file: !1082, line: 700, type: !8350)
!10498 = !DILocalVariable(name: "index", scope: !10495, file: !1082, line: 705, type: !36)
!10499 = !DILocalVariable(name: "list", scope: !10495, file: !1082, line: 707, type: !1341)
!10500 = !DILocation(line: 0, scope: !10495)
!10501 = !DILocation(line: 705, column: 22, scope: !10495)
!10502 = !DILocation(line: 711, column: 24, scope: !10495)
!10503 = !DILocation(line: 711, column: 5, scope: !10495)
!10504 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1082, file: !1082, line: 721, type: !10505, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10507)
!10505 = !DISubroutineType(types: !10506)
!10506 = !{null, !1214, !187, !36}
!10507 = !{!10508, !10509, !10510}
!10508 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !10504, file: !1082, line: 721, type: !1214)
!10509 = !DILocalVariable(name: "index", arg: 2, scope: !10504, file: !1082, line: 721, type: !187)
!10510 = !DILocalVariable(name: "bankSize", arg: 3, scope: !10504, file: !1082, line: 721, type: !36)
!10511 = !DILocation(line: 0, scope: !10504)
!10512 = !DILocation(line: 723, column: 18, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10504, file: !1082, line: 723, column: 9)
!10514 = !DILocation(line: 723, column: 26, scope: !10513)
!10515 = !DILocation(line: 723, column: 35, scope: !10513)
!10516 = !DILocation(line: 723, column: 9, scope: !10504)
!10517 = !DILocation(line: 724, column: 26, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10513, file: !1082, line: 723, column: 48)
!10519 = !DILocation(line: 724, column: 32, scope: !10518)
!10520 = !DILocation(line: 725, column: 5, scope: !10518)
!10521 = !DILocation(line: 726, column: 18, scope: !10522)
!10522 = distinct !DILexicalBlock(scope: !10513, file: !1082, line: 725, column: 12)
!10523 = !DILocation(line: 727, column: 26, scope: !10522)
!10524 = !DILocation(line: 727, column: 32, scope: !10522)
!10525 = !DILocation(line: 728, column: 18, scope: !10522)
!10526 = !DILocation(line: 728, column: 26, scope: !10522)
!10527 = !DILocation(line: 728, column: 35, scope: !10522)
!10528 = !DILocation(line: 731, column: 1, scope: !10504)
!10529 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1082, file: !1082, line: 739, type: !10530, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10532)
!10530 = !DISubroutineType(types: !10531)
!10531 = !{!36, !36, !36, !1214, !10383}
!10532 = !{!10533, !10534, !10535, !10536, !10537, !10538, !10539, !10540, !10541}
!10533 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10529, file: !1082, line: 740, type: !36)
!10534 = !DILocalVariable(name: "length", arg: 2, scope: !10529, file: !1082, line: 741, type: !36)
!10535 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !10529, file: !1082, line: 742, type: !1214)
!10536 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !10529, file: !1082, line: 743, type: !10383)
!10537 = !DILocalVariable(name: "Partition", scope: !10529, file: !1082, line: 745, type: !36)
!10538 = !DILocalVariable(name: "Index", scope: !10529, file: !1082, line: 746, type: !16)
!10539 = !DILocalVariable(name: "bankSize", scope: !10529, file: !1082, line: 747, type: !36)
!10540 = !DILocalVariable(name: "NextBankAddr", scope: !10529, file: !1082, line: 748, type: !36)
!10541 = !DILocalVariable(name: "srcBankIdx", scope: !10529, file: !1082, line: 748, type: !36)
!10542 = !DILocation(line: 0, scope: !10529)
!10543 = !DILocation(line: 750, column: 12, scope: !10529)
!10544 = !DILocation(line: 750, column: 5, scope: !10529)
!10545 = !DILocation(line: 752, column: 51, scope: !10546)
!10546 = distinct !DILexicalBlock(scope: !10547, file: !1082, line: 752, column: 5)
!10547 = distinct !DILexicalBlock(scope: !10529, file: !1082, line: 752, column: 5)
!10548 = !DILocation(line: 752, column: 5, scope: !10547)
!10549 = !DILocation(line: 753, column: 51, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10551, file: !1082, line: 753, column: 13)
!10551 = distinct !DILexicalBlock(scope: !10546, file: !1082, line: 752, column: 70)
!10552 = !DILocation(line: 753, column: 24, scope: !10550)
!10553 = !DILocation(line: 753, column: 13, scope: !10551)
!10554 = !DILocation(line: 758, column: 49, scope: !10551)
!10555 = !DILocation(line: 758, column: 22, scope: !10551)
!10556 = !DILocation(line: 760, column: 22, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10551, file: !1082, line: 760, column: 13)
!10558 = !DILocation(line: 760, column: 13, scope: !10551)
!10559 = !DILocation(line: 761, column: 37, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10557, file: !1082, line: 760, column: 39)
!10561 = !DILocation(line: 762, column: 24, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10560, file: !1082, line: 762, column: 17)
!10563 = !DILocation(line: 762, column: 17, scope: !10560)
!10564 = !DILocation(line: 767, column: 33, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10560, file: !1082, line: 767, column: 17)
!10566 = !DILocation(line: 767, column: 42, scope: !10565)
!10567 = !DILocation(line: 767, column: 17, scope: !10560)
!10568 = !DILocation(line: 768, column: 33, scope: !10569)
!10569 = distinct !DILexicalBlock(scope: !10565, file: !1082, line: 767, column: 55)
!10570 = !DILocation(line: 768, column: 39, scope: !10569)
!10571 = !DILocation(line: 769, column: 13, scope: !10569)
!10572 = !DILocation(line: 770, column: 46, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10574, file: !1082, line: 770, column: 21)
!10574 = distinct !DILexicalBlock(scope: !10565, file: !1082, line: 769, column: 20)
!10575 = !DILocation(line: 770, column: 21, scope: !10574)
!10576 = !DILocation(line: 773, column: 33, scope: !10574)
!10577 = !DILocation(line: 773, column: 39, scope: !10574)
!10578 = !DILocation(line: 774, column: 33, scope: !10574)
!10579 = !DILocation(line: 774, column: 42, scope: !10574)
!10580 = !DILocation(line: 777, column: 22, scope: !10560)
!10581 = !DILocation(line: 778, column: 20, scope: !10560)
!10582 = !DILocation(line: 779, column: 9, scope: !10560)
!10583 = !DILocation(line: 746, column: 13, scope: !10529)
!10584 = !DILocation(line: 752, column: 66, scope: !10546)
!10585 = distinct !{!10585, !10548, !10586}
!10586 = !DILocation(line: 781, column: 5, scope: !10547)
!10587 = !DILocation(line: 784, column: 5, scope: !10529)
!10588 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1082, file: !1082, line: 912, type: !10589, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10591)
!10589 = !DISubroutineType(types: !10590)
!10590 = !{null, !219}
!10591 = !{!10592}
!10592 = !DILocalVariable(name: "CS", arg: 1, scope: !10588, file: !1082, line: 912, type: !219)
!10593 = !DILocation(line: 0, scope: !10588)
!10594 = !DILocation(line: 914, column: 12, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10588, file: !1082, line: 914, column: 9)
!10596 = !DILocation(line: 914, column: 9, scope: !10588)
!10597 = !DILocation(line: 918, column: 26, scope: !10598)
!10598 = distinct !DILexicalBlock(scope: !10595, file: !1082, line: 914, column: 18)
!10599 = !DILocation(line: 918, column: 24, scope: !10598)
!10600 = !DILocation(line: 920, column: 28, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10598, file: !1082, line: 920, column: 13)
!10602 = !DILocation(line: 920, column: 13, scope: !10598)
!10603 = !DILocation(line: 921, column: 13, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10605, file: !1082, line: 921, column: 13)
!10605 = distinct !DILexicalBlock(scope: !10606, file: !1082, line: 921, column: 13)
!10606 = distinct !DILexicalBlock(scope: !10601, file: !1082, line: 920, column: 33)
!10607 = distinct !{!10607, !10603, !10603}
!10608 = !DILocation(line: 923, column: 19, scope: !10598)
!10609 = !DILocation(line: 923, column: 17, scope: !10598)
!10610 = !DILocation(line: 924, column: 5, scope: !10598)
!10611 = !DILocation(line: 935, column: 14, scope: !10588)
!10612 = !DILocation(line: 936, column: 1, scope: !10588)
!10613 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1082, file: !1082, line: 974, type: !6977, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1081, retainedNodes: !10614)
!10614 = !{!10615}
!10615 = !DILocalVariable(name: "result", scope: !10613, file: !1082, line: 976, type: !16)
!10616 = !DILocation(line: 981, column: 5, scope: !10613)
!10617 = !DILocation(line: 986, column: 24, scope: !10613)
!10618 = !DILocation(line: 986, column: 33, scope: !10613)
!10619 = !DILocation(line: 986, column: 49, scope: !10613)
!10620 = !DILocation(line: 986, column: 22, scope: !10613)
!10621 = !DILocation(line: 1002, column: 19, scope: !10613)
!10622 = !DILocation(line: 1002, column: 17, scope: !10613)
!10623 = !DILocation(line: 1014, column: 22, scope: !10613)
!10624 = !DILocation(line: 1014, column: 5, scope: !10613)
!10625 = !DILocation(line: 1024, column: 33, scope: !10613)
!10626 = !DILocation(line: 1026, column: 27, scope: !10613)
!10627 = !DILocation(line: 1027, column: 26, scope: !10613)
!10628 = !DILocation(line: 1042, column: 33, scope: !10613)
!10629 = !DILocation(line: 1044, column: 32, scope: !10613)
!10630 = !DILocation(line: 1052, column: 18, scope: !10613)
!10631 = !DILocation(line: 1052, column: 27, scope: !10613)
!10632 = !DILocation(line: 1052, column: 43, scope: !10613)
!10633 = !DILocation(line: 1048, column: 14, scope: !10613)
!10634 = !DILocation(line: 0, scope: !10613)
!10635 = !DILocation(line: 1063, column: 5, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10637, file: !1082, line: 1063, column: 5)
!10637 = distinct !DILexicalBlock(scope: !10613, file: !1082, line: 1063, column: 5)
!10638 = !DILocation(line: 1063, column: 5, scope: !10637)
!10639 = distinct !{!10639, !10635, !10635}
!10640 = !DILocation(line: 1096, column: 36, scope: !10613)
!10641 = !DILocation(line: 1096, column: 34, scope: !10613)
!10642 = !DILocation(line: 1101, column: 5, scope: !10613)
!10643 = !DILocation(line: 1103, column: 34, scope: !10613)
!10644 = !DILocation(line: 1109, column: 35, scope: !10613)
!10645 = !DILocation(line: 1110, column: 33, scope: !10613)
!10646 = !DILocation(line: 1111, column: 34, scope: !10613)
!10647 = !DILocation(line: 1113, column: 5, scope: !10613)
!10648 = distinct !DISubprogram(name: "readRawDiskData", scope: !1351, file: !1351, line: 216, type: !10649, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !10690)
!10649 = !DISubroutineType(types: !10650)
!10650 = !{!16, !10651, !36, !184, !36}
!10651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10652, size: 32)
!10652 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1285, line: 93, baseType: !10653)
!10653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1285, line: 83, size: 1056, elements: !10654)
!10654 = !{!10655, !10656, !10676, !10677, !10689}
!10655 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !10653, file: !1285, line: 84, baseType: !36, size: 32)
!10656 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !10653, file: !1285, line: 85, baseType: !10657, size: 32, offset: 32)
!10657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10658, size: 32)
!10658 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !812, line: 121, baseType: !10659)
!10659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 105, size: 480, elements: !10660)
!10660 = !{!10661, !10662, !10663, !10664, !10665, !10666, !10667, !10668, !10669, !10670, !10671, !10672, !10673, !10674, !10675}
!10661 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !10659, file: !812, line: 106, baseType: !1145, size: 32)
!10662 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !10659, file: !812, line: 107, baseType: !888, size: 32, offset: 32)
!10663 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !10659, file: !812, line: 108, baseType: !1150, size: 32, offset: 64)
!10664 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !10659, file: !812, line: 109, baseType: !1154, size: 32, offset: 96)
!10665 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !10659, file: !812, line: 110, baseType: !1158, size: 32, offset: 128)
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !10659, file: !812, line: 111, baseType: !1154, size: 32, offset: 160)
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !10659, file: !812, line: 112, baseType: !1163, size: 32, offset: 192)
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !10659, file: !812, line: 113, baseType: !1154, size: 32, offset: 224)
!10669 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !10659, file: !812, line: 114, baseType: !1154, size: 32, offset: 256)
!10670 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !10659, file: !812, line: 115, baseType: !1154, size: 32, offset: 288)
!10671 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !10659, file: !812, line: 116, baseType: !1170, size: 32, offset: 320)
!10672 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !10659, file: !812, line: 117, baseType: !1175, size: 32, offset: 352)
!10673 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !10659, file: !812, line: 118, baseType: !1180, size: 32, offset: 384)
!10674 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !10659, file: !812, line: 119, baseType: !1184, size: 32, offset: 416)
!10675 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !10659, file: !812, line: 120, baseType: !1188, size: 32, offset: 448)
!10676 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !10653, file: !1285, line: 86, baseType: !199, size: 32, offset: 64)
!10677 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !10653, file: !1285, line: 87, baseType: !10678, size: 928, offset: 96)
!10678 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !812, line: 99, baseType: !10679)
!10679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !812, line: 90, size: 928, elements: !10680)
!10680 = !{!10681, !10682, !10683, !10684, !10685, !10686, !10687, !10688}
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !10679, file: !812, line: 91, baseType: !36, size: 32)
!10682 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !10679, file: !812, line: 92, baseType: !979, size: 256, offset: 32)
!10683 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !10679, file: !812, line: 93, baseType: !979, size: 256, offset: 288)
!10684 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !10679, file: !812, line: 94, baseType: !979, size: 256, offset: 544)
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !10679, file: !812, line: 95, baseType: !36, size: 32, offset: 800)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !10679, file: !812, line: 96, baseType: !1302, size: 16, offset: 832)
!10687 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !10679, file: !812, line: 97, baseType: !36, size: 32, offset: 864)
!10688 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !10679, file: !812, line: 98, baseType: !36, size: 32, offset: 896)
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !10653, file: !1285, line: 92, baseType: !94, size: 8, offset: 1024)
!10690 = !{!10691, !10692, !10693, !10694, !10695, !10696}
!10691 = !DILocalVariable(name: "D", arg: 1, scope: !10648, file: !1351, line: 216, type: !10651)
!10692 = !DILocalVariable(name: "addr", arg: 2, scope: !10648, file: !1351, line: 216, type: !36)
!10693 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10648, file: !1351, line: 216, type: !184)
!10694 = !DILocalVariable(name: "len", arg: 4, scope: !10648, file: !1351, line: 216, type: !36)
!10695 = !DILocalVariable(name: "phyAddr", scope: !10648, file: !1351, line: 219, type: !36)
!10696 = !DILocalVariable(name: "diskSize", scope: !10648, file: !1351, line: 220, type: !36)
!10697 = !DILocation(line: 0, scope: !10648)
!10698 = !DILocation(line: 220, column: 28, scope: !10648)
!10699 = !DILocation(line: 222, column: 14, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10648, file: !1351, line: 222, column: 9)
!10701 = !DILocation(line: 222, column: 26, scope: !10700)
!10702 = !DILocation(line: 225, column: 51, scope: !10648)
!10703 = !DILocation(line: 225, column: 61, scope: !10648)
!10704 = !DILocation(line: 225, column: 15, scope: !10648)
!10705 = !DILocation(line: 225, column: 70, scope: !10648)
!10706 = !DILocation(line: 227, column: 13, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10648, file: !1351, line: 227, column: 9)
!10708 = !DILocation(line: 227, column: 9, scope: !10648)
!10709 = !DILocation(line: 228, column: 9, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10707, file: !1351, line: 227, column: 23)
!10711 = !DILocation(line: 229, column: 5, scope: !10710)
!10712 = !DILocation(line: 233, column: 22, scope: !10648)
!10713 = !DILocation(line: 233, column: 5, scope: !10648)
!10714 = !DILocation(line: 237, column: 5, scope: !10648)
!10715 = !DILocation(line: 238, column: 1, scope: !10648)
!10716 = distinct !DISubprogram(name: "MountDevice", scope: !1351, file: !1351, line: 165, type: !10717, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !10719)
!10717 = !DISubroutineType(types: !10718)
!10718 = !{null, !10651}
!10719 = !{!10720, !10721}
!10720 = !DILocalVariable(name: "D", arg: 1, scope: !10716, file: !1351, line: 165, type: !10651)
!10721 = !DILocalVariable(name: "Result", scope: !10716, file: !1351, line: 167, type: !16)
!10722 = !DILocation(line: 0, scope: !10716)
!10723 = !DILocation(line: 180, column: 12, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10716, file: !1351, line: 180, column: 9)
!10725 = !DILocation(line: 180, column: 9, scope: !10716)
!10726 = !DILocation(line: 186, column: 17, scope: !10716)
!10727 = !DILocation(line: 186, column: 28, scope: !10716)
!10728 = !DILocation(line: 186, column: 43, scope: !10716)
!10729 = !DILocation(line: 186, column: 64, scope: !10716)
!10730 = !DILocation(line: 186, column: 52, scope: !10716)
!10731 = !DILocation(line: 186, column: 14, scope: !10716)
!10732 = !DILocation(line: 190, column: 16, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10716, file: !1351, line: 190, column: 9)
!10734 = !DILocation(line: 190, column: 9, scope: !10716)
!10735 = !DILocation(line: 191, column: 9, scope: !10736)
!10736 = distinct !DILexicalBlock(scope: !10737, file: !1351, line: 191, column: 9)
!10737 = distinct !DILexicalBlock(scope: !10738, file: !1351, line: 191, column: 9)
!10738 = distinct !DILexicalBlock(scope: !10733, file: !1351, line: 190, column: 31)
!10739 = distinct !{!10739, !10735, !10735}
!10740 = !DILocation(line: 194, column: 17, scope: !10716)
!10741 = !DILocation(line: 195, column: 1, scope: !10716)
!10742 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1351, file: !1351, line: 277, type: !10649, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !10743)
!10743 = !{!10744, !10745, !10746, !10747, !10748, !10749, !10750, !10751, !10752, !10753, !10757, !10758, !10759, !10764}
!10744 = !DILocalVariable(name: "D", arg: 1, scope: !10742, file: !1351, line: 277, type: !10651)
!10745 = !DILocalVariable(name: "addr", arg: 2, scope: !10742, file: !1351, line: 277, type: !36)
!10746 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10742, file: !1351, line: 277, type: !184)
!10747 = !DILocalVariable(name: "len", arg: 4, scope: !10742, file: !1351, line: 277, type: !36)
!10748 = !DILocalVariable(name: "dest", scope: !10742, file: !1351, line: 279, type: !36)
!10749 = !DILocalVariable(name: "src", scope: !10742, file: !1351, line: 279, type: !36)
!10750 = !DILocalVariable(name: "diskSize", scope: !10742, file: !1351, line: 280, type: !36)
!10751 = !DILocalVariable(name: "result", scope: !10742, file: !1351, line: 281, type: !16)
!10752 = !DILocalVariable(name: "DoneLength", scope: !10742, file: !1351, line: 282, type: !36)
!10753 = !DILocalVariable(name: "blockSize", scope: !10754, file: !1351, line: 313, type: !36)
!10754 = distinct !DILexicalBlock(scope: !10755, file: !1351, line: 312, column: 14)
!10755 = distinct !DILexicalBlock(scope: !10756, file: !1351, line: 305, column: 13)
!10756 = distinct !DILexicalBlock(scope: !10742, file: !1351, line: 298, column: 30)
!10757 = !DILocalVariable(name: "programBytes", scope: !10754, file: !1351, line: 314, type: !36)
!10758 = !DILocalVariable(name: "nextBlkAddr", scope: !10754, file: !1351, line: 316, type: !36)
!10759 = !DILocalVariable(name: "Cell", scope: !10760, file: !1351, line: 346, type: !10762)
!10760 = distinct !DILexicalBlock(scope: !10761, file: !1351, line: 345, column: 83)
!10761 = distinct !DILexicalBlock(scope: !10754, file: !1351, line: 345, column: 17)
!10762 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !10763, line: 76, baseType: !113)
!10763 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!10764 = !DILocalVariable(name: "b", scope: !10760, file: !1351, line: 347, type: !184)
!10765 = !DILocation(line: 0, scope: !10742)
!10766 = !DILocation(line: 280, column: 28, scope: !10742)
!10767 = !DILocation(line: 284, column: 14, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10742, file: !1351, line: 284, column: 9)
!10769 = !DILocation(line: 284, column: 9, scope: !10742)
!10770 = !DILocation(line: 288, column: 14, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10742, file: !1351, line: 288, column: 9)
!10772 = !DILocation(line: 288, column: 20, scope: !10771)
!10773 = !DILocation(line: 288, column: 9, scope: !10742)
!10774 = !DILocation(line: 292, column: 13, scope: !10775)
!10775 = distinct !DILexicalBlock(scope: !10742, file: !1351, line: 292, column: 9)
!10776 = !DILocation(line: 292, column: 9, scope: !10742)
!10777 = !DILocation(line: 293, column: 9, scope: !10778)
!10778 = distinct !DILexicalBlock(scope: !10775, file: !1351, line: 292, column: 23)
!10779 = !DILocation(line: 294, column: 5, scope: !10778)
!10780 = !DILocation(line: 346, column: 17, scope: !10760)
!10781 = !DILocation(line: 298, column: 23, scope: !10742)
!10782 = !DILocation(line: 298, column: 5, scope: !10742)
!10783 = !DILocation(line: 299, column: 52, scope: !10756)
!10784 = !DILocation(line: 299, column: 62, scope: !10756)
!10785 = !DILocation(line: 299, column: 16, scope: !10756)
!10786 = !DILocation(line: 299, column: 71, scope: !10756)
!10787 = !DILocation(line: 299, column: 78, scope: !10756)
!10788 = !DILocation(line: 300, column: 34, scope: !10756)
!10789 = !DILocation(line: 302, column: 12, scope: !10756)
!10790 = !DILocation(line: 302, column: 23, scope: !10756)
!10791 = !DILocation(line: 302, column: 81, scope: !10756)
!10792 = !DILocation(line: 302, column: 45, scope: !10756)
!10793 = !DILocation(line: 302, column: 9, scope: !10756)
!10794 = !DILocation(line: 305, column: 29, scope: !10755)
!10795 = !DILocation(line: 305, column: 57, scope: !10755)
!10796 = !DILocation(line: 305, column: 66, scope: !10755)
!10797 = !DILocation(line: 305, column: 80, scope: !10755)
!10798 = !DILocation(line: 305, column: 13, scope: !10756)
!10799 = !DILocation(line: 306, column: 25, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10755, file: !1351, line: 305, column: 87)
!10801 = !DILocation(line: 306, column: 36, scope: !10800)
!10802 = !DILocation(line: 306, column: 51, scope: !10800)
!10803 = !DILocation(line: 306, column: 60, scope: !10800)
!10804 = !DILocation(line: 306, column: 74, scope: !10800)
!10805 = !DILocation(line: 306, column: 22, scope: !10800)
!10806 = !DILocation(line: 307, column: 24, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10800, file: !1351, line: 307, column: 17)
!10808 = !DILocation(line: 307, column: 17, scope: !10800)
!10809 = !DILocation(line: 310, column: 23, scope: !10800)
!10810 = !DILocation(line: 311, column: 9, scope: !10800)
!10811 = !DILocation(line: 313, column: 47, scope: !10754)
!10812 = !DILocation(line: 313, column: 56, scope: !10754)
!10813 = !DILocation(line: 313, column: 34, scope: !10754)
!10814 = !DILocation(line: 0, scope: !10754)
!10815 = !DILocation(line: 316, column: 42, scope: !10754)
!10816 = !DILocation(line: 316, column: 58, scope: !10754)
!10817 = !DILocation(line: 316, column: 55, scope: !10754)
!10818 = !DILocation(line: 326, column: 22, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10754, file: !1351, line: 326, column: 17)
!10820 = !DILocation(line: 326, column: 37, scope: !10819)
!10821 = !DILocation(line: 326, column: 17, scope: !10754)
!10822 = !DILocation(line: 332, column: 43, scope: !10754)
!10823 = !DILocation(line: 345, column: 30, scope: !10761)
!10824 = !DILocation(line: 345, column: 52, scope: !10761)
!10825 = !DILocation(line: 0, scope: !10760)
!10826 = !DILocation(line: 348, column: 26, scope: !10760)
!10827 = !DILocation(line: 348, column: 24, scope: !10760)
!10828 = !DILocation(line: 348, column: 22, scope: !10760)
!10829 = !DILocation(line: 349, column: 41, scope: !10760)
!10830 = !DILocation(line: 349, column: 24, scope: !10760)
!10831 = !DILocation(line: 349, column: 22, scope: !10760)
!10832 = !DILocation(line: 350, column: 29, scope: !10760)
!10833 = !DILocation(line: 350, column: 40, scope: !10760)
!10834 = !DILocation(line: 350, column: 55, scope: !10760)
!10835 = !DILocation(line: 350, column: 64, scope: !10760)
!10836 = !DILocation(line: 350, column: 26, scope: !10760)
!10837 = !DILocation(line: 351, column: 28, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10760, file: !1351, line: 351, column: 21)
!10839 = !DILocation(line: 354, column: 13, scope: !10761)
!10840 = !DILocation(line: 362, column: 33, scope: !10841)
!10841 = distinct !DILexicalBlock(scope: !10842, file: !1351, line: 361, column: 24)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !1351, line: 355, column: 21)
!10843 = distinct !DILexicalBlock(scope: !10761, file: !1351, line: 354, column: 20)
!10844 = !DILocation(line: 362, column: 44, scope: !10841)
!10845 = !DILocation(line: 362, column: 59, scope: !10841)
!10846 = !DILocation(line: 362, column: 68, scope: !10841)
!10847 = !DILocation(line: 362, column: 82, scope: !10841)
!10848 = !DILocation(line: 362, column: 30, scope: !10841)
!10849 = !DILocation(line: 364, column: 28, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10843, file: !1351, line: 364, column: 21)
!10851 = !DILocation(line: 364, column: 21, scope: !10843)
!10852 = !DILocation(line: 368, column: 24, scope: !10754)
!10853 = !DILocation(line: 0, scope: !10755)
!10854 = distinct !{!10854, !10782, !10855}
!10855 = !DILocation(line: 370, column: 5, scope: !10742)
!10856 = !DILocation(line: 379, column: 1, scope: !10742)
!10857 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1351, file: !1351, line: 398, type: !10858, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !10860)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{!16, !10651, !36}
!10860 = !{!10861, !10862, !10863, !10864}
!10861 = !DILocalVariable(name: "D", arg: 1, scope: !10857, file: !1351, line: 398, type: !10651)
!10862 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !10857, file: !1351, line: 398, type: !36)
!10863 = !DILocalVariable(name: "result", scope: !10857, file: !1351, line: 401, type: !16)
!10864 = !DILocalVariable(name: "block_index", scope: !10857, file: !1351, line: 402, type: !36)
!10865 = !DILocation(line: 0, scope: !10857)
!10866 = !DILocation(line: 402, column: 36, scope: !10857)
!10867 = !DILocation(line: 403, column: 13, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10857, file: !1351, line: 403, column: 9)
!10869 = !DILocation(line: 403, column: 9, scope: !10857)
!10870 = !DILocation(line: 404, column: 9, scope: !10871)
!10871 = distinct !DILexicalBlock(scope: !10868, file: !1351, line: 403, column: 23)
!10872 = !DILocation(line: 405, column: 5, scope: !10871)
!10873 = !DILocation(line: 407, column: 37, scope: !10874)
!10874 = distinct !DILexicalBlock(scope: !10857, file: !1351, line: 407, column: 9)
!10875 = !DILocation(line: 407, column: 21, scope: !10874)
!10876 = !DILocation(line: 407, column: 9, scope: !10857)
!10877 = !DILocation(line: 414, column: 8, scope: !10857)
!10878 = !DILocation(line: 414, column: 19, scope: !10857)
!10879 = !DILocation(line: 414, column: 32, scope: !10857)
!10880 = !DILocation(line: 414, column: 5, scope: !10857)
!10881 = !DILocation(line: 416, column: 17, scope: !10857)
!10882 = !DILocation(line: 416, column: 28, scope: !10857)
!10883 = !DILocation(line: 416, column: 42, scope: !10857)
!10884 = !DILocation(line: 416, column: 14, scope: !10857)
!10885 = !DILocation(line: 420, column: 16, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10857, file: !1351, line: 420, column: 9)
!10887 = !DILocation(line: 424, column: 1, scope: !10857)
!10888 = distinct !DISubprogram(name: "NOR_init", scope: !1351, file: !1351, line: 433, type: !6977, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !4354)
!10889 = !DILocation(line: 436, column: 9, scope: !10890)
!10890 = distinct !DILexicalBlock(scope: !10888, file: !1351, line: 436, column: 9)
!10891 = !DILocation(line: 436, column: 9, scope: !10888)
!10892 = !DILocation(line: 437, column: 9, scope: !10893)
!10893 = distinct !DILexicalBlock(scope: !10890, file: !1351, line: 436, column: 62)
!10894 = !DILocation(line: 438, column: 9, scope: !10893)
!10895 = !DILocation(line: 439, column: 27, scope: !10893)
!10896 = !DILocation(line: 440, column: 5, scope: !10893)
!10897 = !DILocation(line: 441, column: 5, scope: !10888)
!10898 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1351, file: !1351, line: 444, type: !10899, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !4354)
!10899 = !DISubroutineType(types: !10900)
!10900 = !{!1402}
!10901 = !DILocation(line: 446, column: 12, scope: !10898)
!10902 = !DILocation(line: 446, column: 5, scope: !10898)
!10903 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1351, file: !1351, line: 449, type: !10904, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !10906)
!10904 = !DISubroutineType(types: !10905)
!10905 = !{!16, !36, !36, !184}
!10906 = !{!10907, !10908, !10909, !10910, !10911, !10912, !10913}
!10907 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10903, file: !1351, line: 449, type: !36)
!10908 = !DILocalVariable(name: "page_idx", arg: 2, scope: !10903, file: !1351, line: 449, type: !36)
!10909 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10903, file: !1351, line: 449, type: !184)
!10910 = !DILocalVariable(name: "D", scope: !10903, file: !1351, line: 451, type: !10651)
!10911 = !DILocalVariable(name: "mtdData", scope: !10903, file: !1351, line: 452, type: !1354)
!10912 = !DILocalVariable(name: "result", scope: !10903, file: !1351, line: 453, type: !16)
!10913 = !DILocalVariable(name: "addr", scope: !10903, file: !1351, line: 455, type: !36)
!10914 = !DILocation(line: 0, scope: !10903)
!10915 = !DILocation(line: 452, column: 60, scope: !10903)
!10916 = !DILocation(line: 455, column: 32, scope: !10903)
!10917 = !DILocation(line: 455, column: 22, scope: !10903)
!10918 = !DILocation(line: 455, column: 95, scope: !10903)
!10919 = !DILocation(line: 455, column: 76, scope: !10903)
!10920 = !DILocation(line: 455, column: 118, scope: !10903)
!10921 = !DILocation(line: 455, column: 74, scope: !10903)
!10922 = !DILocation(line: 455, column: 106, scope: !10903)
!10923 = !DILocation(line: 457, column: 14, scope: !10903)
!10924 = !DILocation(line: 459, column: 16, scope: !10925)
!10925 = distinct !DILexicalBlock(scope: !10903, file: !1351, line: 459, column: 9)
!10926 = !DILocation(line: 463, column: 1, scope: !10903)
!10927 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1351, file: !1351, line: 466, type: !10904, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !10928)
!10928 = !{!10929, !10930, !10931, !10932, !10933, !10934, !10935}
!10929 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10927, file: !1351, line: 466, type: !36)
!10930 = !DILocalVariable(name: "page_idx", arg: 2, scope: !10927, file: !1351, line: 466, type: !36)
!10931 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10927, file: !1351, line: 466, type: !184)
!10932 = !DILocalVariable(name: "D", scope: !10927, file: !1351, line: 468, type: !10651)
!10933 = !DILocalVariable(name: "mtdData", scope: !10927, file: !1351, line: 469, type: !1354)
!10934 = !DILocalVariable(name: "result", scope: !10927, file: !1351, line: 470, type: !16)
!10935 = !DILocalVariable(name: "addr", scope: !10927, file: !1351, line: 472, type: !36)
!10936 = !DILocation(line: 0, scope: !10927)
!10937 = !DILocation(line: 469, column: 60, scope: !10927)
!10938 = !DILocation(line: 472, column: 32, scope: !10927)
!10939 = !DILocation(line: 472, column: 22, scope: !10927)
!10940 = !DILocation(line: 472, column: 95, scope: !10927)
!10941 = !DILocation(line: 472, column: 76, scope: !10927)
!10942 = !DILocation(line: 472, column: 118, scope: !10927)
!10943 = !DILocation(line: 472, column: 74, scope: !10927)
!10944 = !DILocation(line: 472, column: 106, scope: !10927)
!10945 = !DILocation(line: 474, column: 14, scope: !10927)
!10946 = !DILocation(line: 475, column: 16, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10927, file: !1351, line: 475, column: 9)
!10948 = !DILocation(line: 479, column: 1, scope: !10927)
!10949 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1351, file: !1351, line: 481, type: !10950, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !10952)
!10950 = !DISubroutineType(types: !10951)
!10951 = !{!16, !36}
!10952 = !{!10953, !10954}
!10953 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10949, file: !1351, line: 481, type: !36)
!10954 = !DILocalVariable(name: "result", scope: !10949, file: !1351, line: 483, type: !16)
!10955 = !DILocation(line: 0, scope: !10949)
!10956 = !DILocation(line: 484, column: 14, scope: !10949)
!10957 = !DILocation(line: 485, column: 16, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10949, file: !1351, line: 485, column: 9)
!10959 = !DILocation(line: 489, column: 1, scope: !10949)
!10960 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1351, file: !1351, line: 492, type: !6216, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !10961)
!10961 = !{!10962, !10963, !10964}
!10962 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10960, file: !1351, line: 492, type: !36)
!10963 = !DILocalVariable(name: "D", scope: !10960, file: !1351, line: 494, type: !10651)
!10964 = !DILocalVariable(name: "mtdData", scope: !10960, file: !1351, line: 495, type: !1354)
!10965 = !DILocation(line: 0, scope: !10960)
!10966 = !DILocation(line: 495, column: 60, scope: !10960)
!10967 = !DILocation(line: 496, column: 12, scope: !10960)
!10968 = !DILocation(line: 496, column: 5, scope: !10960)
!10969 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1351, file: !1351, line: 499, type: !6216, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !10970)
!10970 = !{!10971, !10972, !10973}
!10971 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10969, file: !1351, line: 499, type: !36)
!10972 = !DILocalVariable(name: "D", scope: !10969, file: !1351, line: 501, type: !10651)
!10973 = !DILocalVariable(name: "mtdData", scope: !10969, file: !1351, line: 502, type: !1354)
!10974 = !DILocation(line: 0, scope: !10969)
!10975 = !DILocation(line: 502, column: 60, scope: !10969)
!10976 = !DILocation(line: 504, column: 12, scope: !10969)
!10977 = !DILocation(line: 504, column: 5, scope: !10969)
!10978 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1351, file: !1351, line: 510, type: !10979, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !10981)
!10979 = !DISubroutineType(types: !10980)
!10980 = !{!16, !36, !187, !187}
!10981 = !{!10982, !10983, !10984, !10985, !10986}
!10982 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10978, file: !1351, line: 510, type: !36)
!10983 = !DILocalVariable(name: "block_index", arg: 2, scope: !10978, file: !1351, line: 510, type: !187)
!10984 = !DILocalVariable(name: "offset", arg: 3, scope: !10978, file: !1351, line: 510, type: !187)
!10985 = !DILocalVariable(name: "D", scope: !10978, file: !1351, line: 512, type: !10651)
!10986 = !DILocalVariable(name: "mtdData", scope: !10978, file: !1351, line: 513, type: !1354)
!10987 = !DILocation(line: 0, scope: !10978)
!10988 = !DILocation(line: 513, column: 60, scope: !10978)
!10989 = !DILocation(line: 516, column: 29, scope: !10978)
!10990 = !DILocation(line: 519, column: 20, scope: !10978)
!10991 = !DILocation(line: 519, column: 18, scope: !10978)
!10992 = !DILocation(line: 520, column: 22, scope: !10993)
!10993 = distinct !DILexicalBlock(scope: !10978, file: !1351, line: 520, column: 9)
!10994 = !DILocation(line: 520, column: 9, scope: !10978)
!10995 = !DILocation(line: 524, column: 28, scope: !10978)
!10996 = !DILocation(line: 524, column: 26, scope: !10978)
!10997 = !DILocation(line: 524, column: 13, scope: !10978)
!10998 = !DILocation(line: 526, column: 5, scope: !10978)
!10999 = !DILocation(line: 527, column: 1, scope: !10978)
!11000 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1351, file: !1351, line: 532, type: !11001, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !11003)
!11001 = !DISubroutineType(types: !11002)
!11002 = !{!16, !36, !36, !187}
!11003 = !{!11004, !11005, !11006, !11007, !11008}
!11004 = !DILocalVariable(name: "block_index", arg: 1, scope: !11000, file: !1351, line: 532, type: !36)
!11005 = !DILocalVariable(name: "offset", arg: 2, scope: !11000, file: !1351, line: 532, type: !36)
!11006 = !DILocalVariable(name: "addr", arg: 3, scope: !11000, file: !1351, line: 532, type: !187)
!11007 = !DILocalVariable(name: "D", scope: !11000, file: !1351, line: 534, type: !10651)
!11008 = !DILocalVariable(name: "mtdData", scope: !11000, file: !1351, line: 535, type: !1354)
!11009 = !DILocation(line: 0, scope: !11000)
!11010 = !DILocation(line: 535, column: 60, scope: !11000)
!11011 = !DILocation(line: 537, column: 23, scope: !11000)
!11012 = !DILocation(line: 537, column: 13, scope: !11000)
!11013 = !DILocation(line: 537, column: 79, scope: !11000)
!11014 = !DILocation(line: 537, column: 60, scope: !11000)
!11015 = !DILocation(line: 537, column: 58, scope: !11000)
!11016 = !DILocation(line: 537, column: 88, scope: !11000)
!11017 = !DILocation(line: 537, column: 11, scope: !11000)
!11018 = !DILocation(line: 539, column: 5, scope: !11000)
!11019 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1351, file: !1351, line: 545, type: !11020, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !11022)
!11020 = !DISubroutineType(types: !11021)
!11021 = !{!1402, !16}
!11022 = !{!11023}
!11023 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !11019, file: !1351, line: 545, type: !16)
!11024 = !DILocation(line: 0, scope: !11019)
!11025 = !DILocation(line: 547, column: 9, scope: !11019)
!11026 = !DILocation(line: 558, column: 9, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11028, file: !1351, line: 558, column: 9)
!11028 = distinct !DILexicalBlock(scope: !11029, file: !1351, line: 558, column: 9)
!11029 = distinct !DILexicalBlock(scope: !11030, file: !1351, line: 557, column: 12)
!11030 = distinct !DILexicalBlock(scope: !11031, file: !1351, line: 555, column: 16)
!11031 = distinct !DILexicalBlock(scope: !11032, file: !1351, line: 553, column: 16)
!11032 = distinct !DILexicalBlock(scope: !11033, file: !1351, line: 551, column: 16)
!11033 = distinct !DILexicalBlock(scope: !11034, file: !1351, line: 549, column: 16)
!11034 = distinct !DILexicalBlock(scope: !11019, file: !1351, line: 547, column: 9)
!11035 = distinct !{!11035, !11026, !11026}
!11036 = !DILocation(line: 560, column: 1, scope: !11019)
!11037 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1351, file: !1351, line: 561, type: !11038, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !11040)
!11038 = !DISubroutineType(types: !11039)
!11039 = !{!6243, !36}
!11040 = !{!11041, !11042, !11043}
!11041 = !DILocalVariable(name: "address", arg: 1, scope: !11037, file: !1351, line: 561, type: !36)
!11042 = !DILocalVariable(name: "block_size", scope: !11037, file: !1351, line: 563, type: !36)
!11043 = !DILocalVariable(name: "block_index", scope: !11037, file: !1351, line: 564, type: !36)
!11044 = !DILocation(line: 0, scope: !11037)
!11045 = !DILocation(line: 566, column: 19, scope: !11037)
!11046 = !DILocation(line: 567, column: 21, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11037, file: !1351, line: 567, column: 9)
!11048 = !DILocation(line: 567, column: 9, scope: !11037)
!11049 = !DILocation(line: 568, column: 9, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !11051, file: !1351, line: 568, column: 9)
!11051 = distinct !DILexicalBlock(scope: !11052, file: !1351, line: 568, column: 9)
!11052 = distinct !DILexicalBlock(scope: !11047, file: !1351, line: 567, column: 45)
!11053 = distinct !{!11053, !11049, !11049}
!11054 = !DILocation(line: 570, column: 18, scope: !11037)
!11055 = !DILocation(line: 571, column: 9, scope: !11037)
!11056 = !DILocation(line: 574, column: 9, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11058, file: !1351, line: 573, column: 38)
!11058 = distinct !DILexicalBlock(scope: !11059, file: !1351, line: 573, column: 16)
!11059 = distinct !DILexicalBlock(scope: !11037, file: !1351, line: 571, column: 9)
!11060 = !DILocation(line: 576, column: 9, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11062, file: !1351, line: 575, column: 39)
!11062 = distinct !DILexicalBlock(scope: !11058, file: !1351, line: 575, column: 16)
!11063 = !DILocation(line: 578, column: 9, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11065, file: !1351, line: 578, column: 9)
!11065 = distinct !DILexicalBlock(scope: !11066, file: !1351, line: 578, column: 9)
!11066 = distinct !DILexicalBlock(scope: !11062, file: !1351, line: 577, column: 12)
!11067 = distinct !{!11067, !11063, !11063}
!11068 = !DILocation(line: 0, scope: !11059)
!11069 = !DILocation(line: 580, column: 1, scope: !11037)
!11070 = distinct !DISubprogram(name: "hal_flash_init", scope: !1351, file: !1351, line: 583, type: !10899, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !4354)
!11071 = !DILocation(line: 585, column: 5, scope: !11070)
!11072 = !DILocation(line: 586, column: 5, scope: !11070)
!11073 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1351, file: !1351, line: 589, type: !10899, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !4354)
!11074 = !DILocation(line: 591, column: 5, scope: !11073)
!11075 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1351, file: !1351, line: 595, type: !11076, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !11078)
!11076 = !DISubroutineType(types: !11077)
!11077 = !{!1402, !36, !6243}
!11078 = !{!11079, !11080, !11081, !11082, !11083}
!11079 = !DILocalVariable(name: "start_address", arg: 1, scope: !11075, file: !1351, line: 595, type: !36)
!11080 = !DILocalVariable(name: "block", arg: 2, scope: !11075, file: !1351, line: 595, type: !6243)
!11081 = !DILocalVariable(name: "result", scope: !11075, file: !1351, line: 597, type: !16)
!11082 = !DILocalVariable(name: "block_index", scope: !11075, file: !1351, line: 598, type: !36)
!11083 = !DILocalVariable(name: "erase_type", scope: !11075, file: !1351, line: 599, type: !36)
!11084 = !DILocation(line: 0, scope: !11075)
!11085 = !DILocation(line: 601, column: 9, scope: !11075)
!11086 = !DILocation(line: 602, column: 28, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11088, file: !1351, line: 602, column: 13)
!11088 = distinct !DILexicalBlock(scope: !11089, file: !1351, line: 601, column: 38)
!11089 = distinct !DILexicalBlock(scope: !11075, file: !1351, line: 601, column: 9)
!11090 = !DILocation(line: 602, column: 37, scope: !11087)
!11091 = !DILocation(line: 602, column: 13, scope: !11088)
!11092 = !DILocation(line: 607, column: 28, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11094, file: !1351, line: 607, column: 13)
!11094 = distinct !DILexicalBlock(scope: !11095, file: !1351, line: 606, column: 46)
!11095 = distinct !DILexicalBlock(scope: !11089, file: !1351, line: 606, column: 16)
!11096 = !DILocation(line: 607, column: 38, scope: !11093)
!11097 = !DILocation(line: 607, column: 13, scope: !11094)
!11098 = !DILocation(line: 612, column: 28, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11100, file: !1351, line: 612, column: 13)
!11100 = distinct !DILexicalBlock(scope: !11101, file: !1351, line: 611, column: 46)
!11101 = distinct !DILexicalBlock(scope: !11095, file: !1351, line: 611, column: 16)
!11102 = !DILocation(line: 612, column: 38, scope: !11099)
!11103 = !DILocation(line: 612, column: 13, scope: !11100)
!11104 = !DILocation(line: 0, scope: !11089)
!11105 = !DILocation(line: 621, column: 19, scope: !11075)
!11106 = !DILocation(line: 622, column: 21, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11075, file: !1351, line: 622, column: 9)
!11108 = !DILocation(line: 622, column: 9, scope: !11075)
!11109 = !DILocation(line: 626, column: 17, scope: !11075)
!11110 = !DILocation(line: 627, column: 14, scope: !11075)
!11111 = !DILocation(line: 628, column: 16, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11075, file: !1351, line: 628, column: 9)
!11113 = !DILocation(line: 628, column: 9, scope: !11075)
!11114 = !DILocation(line: 629, column: 16, scope: !11115)
!11115 = distinct !DILexicalBlock(scope: !11112, file: !1351, line: 628, column: 38)
!11116 = !DILocation(line: 629, column: 9, scope: !11115)
!11117 = !DILocation(line: 632, column: 1, scope: !11075)
!11118 = distinct !DISubprogram(name: "hal_flash_read", scope: !1351, file: !1351, line: 634, type: !11119, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !11121)
!11119 = !DISubroutineType(types: !11120)
!11120 = !{!1402, !36, !184, !36}
!11121 = !{!11122, !11123, !11124, !11125, !11126}
!11122 = !DILocalVariable(name: "start_address", arg: 1, scope: !11118, file: !1351, line: 634, type: !36)
!11123 = !DILocalVariable(name: "buffer", arg: 2, scope: !11118, file: !1351, line: 634, type: !184)
!11124 = !DILocalVariable(name: "length", arg: 3, scope: !11118, file: !1351, line: 634, type: !36)
!11125 = !DILocalVariable(name: "D", scope: !11118, file: !1351, line: 636, type: !10651)
!11126 = !DILocalVariable(name: "result", scope: !11118, file: !1351, line: 637, type: !16)
!11127 = !DILocation(line: 0, scope: !11118)
!11128 = !DILocation(line: 639, column: 14, scope: !11118)
!11129 = !DILocation(line: 641, column: 16, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !11118, file: !1351, line: 641, column: 9)
!11131 = !DILocation(line: 641, column: 9, scope: !11118)
!11132 = !DILocation(line: 642, column: 16, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11130, file: !1351, line: 641, column: 38)
!11134 = !DILocation(line: 642, column: 9, scope: !11133)
!11135 = !DILocation(line: 645, column: 1, scope: !11118)
!11136 = distinct !DISubprogram(name: "hal_flash_write", scope: !1351, file: !1351, line: 647, type: !11137, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1350, retainedNodes: !11139)
!11137 = !DISubroutineType(types: !11138)
!11138 = !{!1402, !36, !1947, !36}
!11139 = !{!11140, !11141, !11142, !11143, !11144, !11145}
!11140 = !DILocalVariable(name: "address", arg: 1, scope: !11136, file: !1351, line: 647, type: !36)
!11141 = !DILocalVariable(name: "data", arg: 2, scope: !11136, file: !1351, line: 647, type: !1947)
!11142 = !DILocalVariable(name: "length", arg: 3, scope: !11136, file: !1351, line: 647, type: !36)
!11143 = !DILocalVariable(name: "D", scope: !11136, file: !1351, line: 649, type: !10651)
!11144 = !DILocalVariable(name: "result", scope: !11136, file: !1351, line: 650, type: !16)
!11145 = !DILocalVariable(name: "addr", scope: !11146, file: !1351, line: 660, type: !36)
!11146 = distinct !DILexicalBlock(scope: !11147, file: !1351, line: 659, column: 40)
!11147 = distinct !DILexicalBlock(scope: !11136, file: !1351, line: 659, column: 8)
!11148 = !DILocation(line: 0, scope: !11136)
!11149 = !DILocation(line: 652, column: 14, scope: !11136)
!11150 = !DILocation(line: 653, column: 16, scope: !11151)
!11151 = distinct !DILexicalBlock(scope: !11136, file: !1351, line: 653, column: 9)
!11152 = !DILocation(line: 653, column: 9, scope: !11136)
!11153 = !DILocation(line: 654, column: 16, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11151, file: !1351, line: 653, column: 38)
!11155 = !DILocation(line: 654, column: 9, scope: !11154)
!11156 = !DILocation(line: 659, column: 8, scope: !11147)
!11157 = !DILocation(line: 659, column: 8, scope: !11136)
!11158 = !DILocation(line: 661, column: 25, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11146, file: !1351, line: 661, column: 8)
!11160 = !DILocation(line: 0, scope: !11146)
!11161 = !DILocation(line: 661, column: 58, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11159, file: !1351, line: 661, column: 8)
!11163 = !DILocation(line: 661, column: 8, scope: !11159)
!11164 = !DILocation(line: 662, column: 13, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11162, file: !1351, line: 661, column: 147)
!11166 = !DILocation(line: 661, column: 128, scope: !11162)
!11167 = distinct !{!11167, !11163, !11168}
!11168 = !DILocation(line: 663, column: 8, scope: !11159)
!11169 = !DILocation(line: 668, column: 1, scope: !11136)
!11170 = distinct !DISubprogram(name: "BlockAddress", scope: !1406, file: !1406, line: 111, type: !11171, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !11173)
!11171 = !DISubroutineType(types: !11172)
!11172 = !{!199, !199, !36}
!11173 = !{!11174, !11175, !11176, !11177, !11178, !11179}
!11174 = !DILocalVariable(name: "DriverData", arg: 1, scope: !11170, file: !1406, line: 111, type: !199)
!11175 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11170, file: !1406, line: 111, type: !36)
!11176 = !DILocalVariable(name: "D", scope: !11170, file: !1406, line: 113, type: !1426)
!11177 = !DILocalVariable(name: "addr", scope: !11170, file: !1406, line: 114, type: !36)
!11178 = !DILocalVariable(name: "region", scope: !11170, file: !1406, line: 115, type: !36)
!11179 = !DILocalVariable(name: "BlockUpperBound", scope: !11170, file: !1406, line: 115, type: !36)
!11180 = !DILocation(line: 0, scope: !11170)
!11181 = !DILocation(line: 117, column: 26, scope: !11170)
!11182 = !DILocation(line: 117, column: 40, scope: !11170)
!11183 = !DILocation(line: 118, column: 28, scope: !11170)
!11184 = !DILocation(line: 118, column: 5, scope: !11170)
!11185 = !DILocation(line: 119, column: 39, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11170, file: !1406, line: 118, column: 43)
!11187 = !DILocation(line: 119, column: 76, scope: !11186)
!11188 = !DILocation(line: 119, column: 52, scope: !11186)
!11189 = !DILocation(line: 119, column: 14, scope: !11186)
!11190 = !DILocation(line: 120, column: 15, scope: !11186)
!11191 = !DILocation(line: 121, column: 50, scope: !11186)
!11192 = !DILocation(line: 121, column: 25, scope: !11186)
!11193 = distinct !{!11193, !11184, !11194}
!11194 = !DILocation(line: 122, column: 5, scope: !11170)
!11195 = !DILocation(line: 123, column: 68, scope: !11170)
!11196 = !DILocation(line: 123, column: 44, scope: !11170)
!11197 = !DILocation(line: 123, column: 25, scope: !11170)
!11198 = !DILocation(line: 123, column: 107, scope: !11170)
!11199 = !DILocation(line: 123, column: 83, scope: !11170)
!11200 = !DILocation(line: 123, column: 10, scope: !11170)
!11201 = !DILocation(line: 125, column: 16, scope: !11170)
!11202 = !DILocation(line: 125, column: 25, scope: !11170)
!11203 = !DILocation(line: 125, column: 5, scope: !11170)
!11204 = distinct !DISubprogram(name: "MapWindow", scope: !1406, file: !1406, line: 180, type: !1151, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !11205)
!11205 = !{!11206, !11207, !11208, !11209}
!11206 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11204, file: !1406, line: 180, type: !199)
!11207 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11204, file: !1406, line: 180, type: !36)
!11208 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !11204, file: !1406, line: 180, type: !36)
!11209 = !DILocalVariable(name: "D", scope: !11204, file: !1406, line: 182, type: !1426)
!11210 = !DILocation(line: 0, scope: !11204)
!11211 = !DILocation(line: 185, column: 5, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11213, file: !1406, line: 185, column: 5)
!11213 = distinct !DILexicalBlock(scope: !11204, file: !1406, line: 185, column: 5)
!11214 = !DILocation(line: 185, column: 5, scope: !11213)
!11215 = distinct !{!11215, !11211, !11211}
!11216 = !DILocation(line: 186, column: 27, scope: !11204)
!11217 = !DILocation(line: 186, column: 19, scope: !11204)
!11218 = !DILocation(line: 186, column: 8, scope: !11204)
!11219 = !DILocation(line: 186, column: 17, scope: !11204)
!11220 = !DILocation(line: 188, column: 5, scope: !11204)
!11221 = !DILocation(line: 0, scope: !1419)
!11222 = !DILocation(line: 142, column: 12, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !1419, file: !1406, line: 142, column: 9)
!11224 = !DILocation(line: 142, column: 34, scope: !11223)
!11225 = !DILocation(line: 142, column: 64, scope: !11223)
!11226 = !DILocation(line: 142, column: 75, scope: !11223)
!11227 = !DILocation(line: 142, column: 9, scope: !1419)
!11228 = !DILocation(line: 143, column: 79, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11230, file: !1406, line: 143, column: 13)
!11230 = distinct !DILexicalBlock(scope: !11223, file: !1406, line: 142, column: 99)
!11231 = !DILocation(line: 143, column: 13, scope: !11230)
!11232 = !DILocation(line: 144, column: 72, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11234, file: !1406, line: 144, column: 17)
!11234 = distinct !DILexicalBlock(scope: !11229, file: !1406, line: 143, column: 94)
!11235 = !DILocation(line: 144, column: 83, scope: !11233)
!11236 = !DILocation(line: 144, column: 17, scope: !11234)
!11237 = !DILocation(line: 145, column: 87, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11239, file: !1406, line: 145, column: 21)
!11239 = distinct !DILexicalBlock(scope: !11233, file: !1406, line: 144, column: 107)
!11240 = !DILocation(line: 145, column: 21, scope: !11239)
!11241 = !DILocation(line: 146, column: 33, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11238, file: !1406, line: 145, column: 102)
!11243 = !DILocation(line: 147, column: 25, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11242, file: !1406, line: 147, column: 25)
!11245 = !DILocation(line: 147, column: 62, scope: !11244)
!11246 = !DILocation(line: 147, column: 34, scope: !11244)
!11247 = !DILocation(line: 147, column: 25, scope: !11242)
!11248 = !DILocation(line: 148, column: 91, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11244, file: !1406, line: 147, column: 106)
!11250 = !DILocation(line: 149, column: 111, scope: !11249)
!11251 = !DILocation(line: 149, column: 101, scope: !11249)
!11252 = !DILocation(line: 149, column: 87, scope: !11249)
!11253 = !DILocation(line: 149, column: 99, scope: !11249)
!11254 = !DILocation(line: 150, column: 37, scope: !11249)
!11255 = !DILocation(line: 150, column: 34, scope: !11249)
!11256 = !DILocation(line: 151, column: 21, scope: !11249)
!11257 = !DILocation(line: 152, column: 91, scope: !11258)
!11258 = distinct !DILexicalBlock(scope: !11244, file: !1406, line: 151, column: 28)
!11259 = !DILocation(line: 153, column: 111, scope: !11258)
!11260 = !DILocation(line: 153, column: 101, scope: !11258)
!11261 = !DILocation(line: 153, column: 87, scope: !11258)
!11262 = !DILocation(line: 153, column: 99, scope: !11258)
!11263 = !DILocation(line: 154, column: 34, scope: !11258)
!11264 = !DILocation(line: 157, column: 32, scope: !11265)
!11265 = distinct !DILexicalBlock(scope: !11238, file: !1406, line: 156, column: 24)
!11266 = !DILocation(line: 158, column: 83, scope: !11265)
!11267 = !DILocation(line: 159, column: 60, scope: !11265)
!11268 = !DILocation(line: 159, column: 33, scope: !11265)
!11269 = !DILocation(line: 159, column: 30, scope: !11265)
!11270 = !DILocation(line: 162, column: 29, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11233, file: !1406, line: 161, column: 20)
!11272 = !DILocation(line: 163, column: 83, scope: !11271)
!11273 = !DILocation(line: 164, column: 103, scope: !11271)
!11274 = !DILocation(line: 164, column: 93, scope: !11271)
!11275 = !DILocation(line: 164, column: 79, scope: !11271)
!11276 = !DILocation(line: 164, column: 91, scope: !11271)
!11277 = !DILocation(line: 165, column: 56, scope: !11271)
!11278 = !DILocation(line: 165, column: 29, scope: !11271)
!11279 = !DILocation(line: 165, column: 26, scope: !11271)
!11280 = !DILocation(line: 168, column: 24, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11229, file: !1406, line: 167, column: 16)
!11282 = !DILocation(line: 169, column: 75, scope: !11281)
!11283 = !DILocation(line: 170, column: 50, scope: !11281)
!11284 = !DILocation(line: 170, column: 22, scope: !11281)
!11285 = !DILocation(line: 173, column: 21, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11223, file: !1406, line: 172, column: 12)
!11287 = !DILocation(line: 174, column: 75, scope: !11286)
!11288 = !DILocation(line: 175, column: 95, scope: !11286)
!11289 = !DILocation(line: 175, column: 85, scope: !11286)
!11290 = !DILocation(line: 175, column: 71, scope: !11286)
!11291 = !DILocation(line: 175, column: 83, scope: !11286)
!11292 = !DILocation(line: 176, column: 46, scope: !11286)
!11293 = !DILocation(line: 176, column: 18, scope: !11286)
!11294 = !DILocation(line: 0, scope: !11223)
!11295 = !DILocation(line: 178, column: 5, scope: !1419)
!11296 = distinct !DISubprogram(name: "BlockSize", scope: !1406, file: !1406, line: 191, type: !1420, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !11297)
!11297 = !{!11298, !11299, !11300, !11301, !11302}
!11298 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11296, file: !1406, line: 191, type: !199)
!11299 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11296, file: !1406, line: 191, type: !36)
!11300 = !DILocalVariable(name: "D", scope: !11296, file: !1406, line: 193, type: !1426)
!11301 = !DILocalVariable(name: "region", scope: !11296, file: !1406, line: 194, type: !36)
!11302 = !DILocalVariable(name: "BlockUpperBound", scope: !11296, file: !1406, line: 194, type: !36)
!11303 = !DILocation(line: 0, scope: !11296)
!11304 = !DILocation(line: 196, column: 26, scope: !11296)
!11305 = !DILocation(line: 196, column: 45, scope: !11296)
!11306 = !DILocation(line: 197, column: 28, scope: !11296)
!11307 = !DILocation(line: 197, column: 5, scope: !11296)
!11308 = !DILocation(line: 198, column: 15, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11296, file: !1406, line: 197, column: 43)
!11310 = !DILocation(line: 199, column: 50, scope: !11309)
!11311 = !DILocation(line: 199, column: 25, scope: !11309)
!11312 = distinct !{!11312, !11307, !11313}
!11313 = !DILocation(line: 200, column: 5, scope: !11296)
!11314 = !DILocation(line: 202, column: 35, scope: !11296)
!11315 = !DILocation(line: 202, column: 5, scope: !11296)
!11316 = distinct !DISubprogram(name: "BlockIndex", scope: !1406, file: !1406, line: 205, type: !1420, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !11317)
!11317 = !{!11318, !11319, !11320, !11321, !11322, !11323}
!11318 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11316, file: !1406, line: 205, type: !199)
!11319 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !11316, file: !1406, line: 205, type: !36)
!11320 = !DILocalVariable(name: "D", scope: !11316, file: !1406, line: 207, type: !1426)
!11321 = !DILocalVariable(name: "region", scope: !11316, file: !1406, line: 208, type: !36)
!11322 = !DILocalVariable(name: "BlockUpperAddr", scope: !11316, file: !1406, line: 208, type: !36)
!11323 = !DILocalVariable(name: "blk_idx", scope: !11316, file: !1406, line: 209, type: !36)
!11324 = !DILocation(line: 0, scope: !11316)
!11325 = !DILocation(line: 211, column: 25, scope: !11316)
!11326 = !DILocation(line: 211, column: 44, scope: !11316)
!11327 = !DILocation(line: 211, column: 81, scope: !11316)
!11328 = !DILocation(line: 211, column: 57, scope: !11316)
!11329 = !DILocation(line: 213, column: 28, scope: !11316)
!11330 = !DILocation(line: 213, column: 40, scope: !11316)
!11331 = !DILocation(line: 213, column: 66, scope: !11316)
!11332 = !DILocation(line: 213, column: 5, scope: !11316)
!11333 = !DILocation(line: 214, column: 17, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11316, file: !1406, line: 213, column: 78)
!11335 = !DILocation(line: 215, column: 18, scope: !11334)
!11336 = !DILocation(line: 216, column: 15, scope: !11334)
!11337 = !DILocation(line: 217, column: 48, scope: !11334)
!11338 = !DILocation(line: 217, column: 85, scope: !11334)
!11339 = !DILocation(line: 217, column: 61, scope: !11334)
!11340 = distinct !{!11340, !11332, !11341}
!11341 = !DILocation(line: 218, column: 5, scope: !11316)
!11342 = !DILocation(line: 221, column: 53, scope: !11343)
!11343 = distinct !DILexicalBlock(scope: !11344, file: !1406, line: 220, column: 37)
!11344 = distinct !DILexicalBlock(scope: !11316, file: !1406, line: 220, column: 9)
!11345 = !DILocation(line: 221, column: 29, scope: !11343)
!11346 = !DILocation(line: 221, column: 17, scope: !11343)
!11347 = !DILocation(line: 222, column: 5, scope: !11343)
!11348 = !DILocation(line: 0, scope: !11344)
!11349 = !DILocation(line: 225, column: 5, scope: !11316)
!11350 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !1406, file: !1406, line: 232, type: !5203, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !4354)
!11351 = !DILocation(line: 235, column: 5, scope: !11350)
!11352 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !1406, file: !1406, line: 243, type: !5203, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !4354)
!11353 = !DILocation(line: 245, column: 5, scope: !11352)
!11354 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !1406, file: !1406, line: 249, type: !5203, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !4354)
!11355 = !DILocation(line: 254, column: 5, scope: !11354)
!11356 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !1406, file: !1406, line: 259, type: !5203, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !4354)
!11357 = !DILocation(line: 261, column: 5, scope: !11356)
!11358 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !1406, file: !1406, line: 271, type: !4734, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1405, retainedNodes: !11359)
!11359 = !{!11360}
!11360 = !DILocalVariable(name: "delay", arg: 1, scope: !11358, file: !1406, line: 271, type: !36)
!11361 = !DILocation(line: 0, scope: !11358)
!11362 = !DILocation(line: 274, column: 5, scope: !11358)
!11363 = !DILocation(line: 282, column: 1, scope: !11358)
!11364 = distinct !DISubprogram(name: "hal_cache_init", scope: !1478, file: !1478, line: 53, type: !11365, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11368)
!11365 = !DISubroutineType(types: !11366)
!11366 = !{!11367}
!11367 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !1481, line: 172, baseType: !1480)
!11368 = !{!11369, !11371}
!11369 = !DILocalVariable(name: "region", scope: !11364, file: !1478, line: 55, type: !11370)
!11370 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !1481, line: 204, baseType: !1491)
!11371 = !DILocalVariable(name: "irq_flag", scope: !11364, file: !1478, line: 56, type: !36)
!11372 = !DILocation(line: 59, column: 16, scope: !11364)
!11373 = !DILocation(line: 0, scope: !11364)
!11374 = !DILocation(line: 62, column: 9, scope: !11375)
!11375 = distinct !DILexicalBlock(scope: !11364, file: !1478, line: 62, column: 9)
!11376 = !DILocation(line: 62, column: 9, scope: !11364)
!11377 = !DILocation(line: 64, column: 9, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !11375, file: !1478, line: 62, column: 39)
!11379 = !DILocation(line: 66, column: 9, scope: !11378)
!11380 = !DILocation(line: 69, column: 24, scope: !11381)
!11381 = distinct !DILexicalBlock(scope: !11375, file: !1478, line: 67, column: 12)
!11382 = !DILocation(line: 72, column: 9, scope: !11381)
!11383 = !DILocation(line: 77, column: 5, scope: !11364)
!11384 = !DILocation(line: 80, column: 22, scope: !11364)
!11385 = !DILocation(line: 81, column: 28, scope: !11364)
!11386 = !DILocation(line: 84, column: 19, scope: !11364)
!11387 = !DILocation(line: 85, column: 23, scope: !11364)
!11388 = !DILocation(line: 88, column: 5, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11364, file: !1478, line: 88, column: 5)
!11390 = !DILocation(line: 90, column: 9, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11392, file: !1478, line: 88, column: 81)
!11392 = distinct !DILexicalBlock(scope: !11389, file: !1478, line: 88, column: 5)
!11393 = !DILocation(line: 90, column: 38, scope: !11391)
!11394 = !DILocation(line: 91, column: 9, scope: !11391)
!11395 = !DILocation(line: 91, column: 42, scope: !11391)
!11396 = !DILocation(line: 94, column: 45, scope: !11391)
!11397 = !DILocation(line: 94, column: 47, scope: !11391)
!11398 = !DILocation(line: 95, column: 49, scope: !11391)
!11399 = !DILocation(line: 95, column: 51, scope: !11391)
!11400 = !DILocation(line: 88, column: 77, scope: !11392)
!11401 = !DILocation(line: 88, column: 46, scope: !11392)
!11402 = distinct !{!11402, !11388, !11403}
!11403 = !DILocation(line: 96, column: 5, scope: !11389)
!11404 = !DILocation(line: 99, column: 1, scope: !11364)
!11405 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !1478, file: !1478, line: 327, type: !11365, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11406)
!11406 = !{!11407}
!11407 = !DILocalVariable(name: "irq_flag", scope: !11405, file: !1478, line: 329, type: !36)
!11408 = !DILocation(line: 332, column: 16, scope: !11405)
!11409 = !DILocation(line: 0, scope: !11405)
!11410 = !DILocation(line: 335, column: 21, scope: !11405)
!11411 = !DILocation(line: 336, column: 21, scope: !11405)
!11412 = !DILocation(line: 339, column: 21, scope: !11405)
!11413 = !DILocation(line: 340, column: 21, scope: !11405)
!11414 = !DILocation(line: 434, column: 3, scope: !11415, inlinedAt: !11417)
!11415 = distinct !DISubprogram(name: "__ISB", scope: !11416, file: !11416, line: 432, type: !4261, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !4354)
!11416 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!11417 = distinct !DILocation(line: 343, column: 5, scope: !11405)
!11418 = !{i64 442894}
!11419 = !DILocation(line: 346, column: 5, scope: !11405)
!11420 = !DILocation(line: 348, column: 5, scope: !11405)
!11421 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !1478, file: !1478, line: 101, type: !11365, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11422)
!11422 = !{!11423}
!11423 = !DILocalVariable(name: "region", scope: !11421, file: !1478, line: 103, type: !11370)
!11424 = !DILocation(line: 107, column: 5, scope: !11421)
!11425 = !DILocation(line: 110, column: 22, scope: !11421)
!11426 = !DILocation(line: 111, column: 28, scope: !11421)
!11427 = !DILocation(line: 114, column: 19, scope: !11421)
!11428 = !DILocation(line: 115, column: 23, scope: !11421)
!11429 = !DILocation(line: 0, scope: !11421)
!11430 = !DILocation(line: 118, column: 5, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11421, file: !1478, line: 118, column: 5)
!11432 = !DILocation(line: 120, column: 9, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11434, file: !1478, line: 118, column: 81)
!11434 = distinct !DILexicalBlock(scope: !11431, file: !1478, line: 118, column: 5)
!11435 = !DILocation(line: 120, column: 38, scope: !11433)
!11436 = !DILocation(line: 121, column: 9, scope: !11433)
!11437 = !DILocation(line: 121, column: 42, scope: !11433)
!11438 = !DILocation(line: 124, column: 45, scope: !11433)
!11439 = !DILocation(line: 124, column: 47, scope: !11433)
!11440 = !DILocation(line: 125, column: 49, scope: !11433)
!11441 = !DILocation(line: 125, column: 51, scope: !11433)
!11442 = !DILocation(line: 118, column: 77, scope: !11434)
!11443 = !DILocation(line: 118, column: 46, scope: !11434)
!11444 = distinct !{!11444, !11430, !11445}
!11445 = !DILocation(line: 126, column: 5, scope: !11431)
!11446 = !DILocation(line: 129, column: 20, scope: !11421)
!11447 = !DILocation(line: 131, column: 5, scope: !11421)
!11448 = distinct !DISubprogram(name: "hal_cache_enable", scope: !1478, file: !1478, line: 134, type: !11365, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !4354)
!11449 = !DILocation(line: 137, column: 45, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11448, file: !1478, line: 137, column: 9)
!11451 = !DILocation(line: 137, column: 28, scope: !11450)
!11452 = !DILocation(line: 137, column: 9, scope: !11448)
!11453 = !DILocation(line: 142, column: 22, scope: !11448)
!11454 = !DILocation(line: 145, column: 28, scope: !11448)
!11455 = !DILocation(line: 145, column: 19, scope: !11448)
!11456 = !DILocation(line: 147, column: 5, scope: !11448)
!11457 = !DILocation(line: 0, scope: !11448)
!11458 = !DILocation(line: 148, column: 1, scope: !11448)
!11459 = distinct !DISubprogram(name: "hal_cache_disable", scope: !1478, file: !1478, line: 150, type: !11365, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11460)
!11460 = !{!11461}
!11461 = !DILocalVariable(name: "irq_flag", scope: !11459, file: !1478, line: 152, type: !36)
!11462 = !DILocation(line: 155, column: 16, scope: !11459)
!11463 = !DILocation(line: 0, scope: !11459)
!11464 = !DILocation(line: 158, column: 16, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11459, file: !1478, line: 158, column: 9)
!11466 = !DILocation(line: 158, column: 26, scope: !11465)
!11467 = !DILocation(line: 158, column: 9, scope: !11459)
!11468 = !DILocation(line: 160, column: 9, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11465, file: !1478, line: 158, column: 49)
!11470 = !DILocation(line: 161, column: 5, scope: !11469)
!11471 = !DILocation(line: 164, column: 22, scope: !11459)
!11472 = !DILocation(line: 167, column: 28, scope: !11459)
!11473 = !DILocation(line: 167, column: 19, scope: !11459)
!11474 = !DILocation(line: 170, column: 5, scope: !11459)
!11475 = !DILocation(line: 172, column: 5, scope: !11459)
!11476 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !1478, file: !1478, line: 175, type: !11477, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11479)
!11477 = !DISubroutineType(types: !11478)
!11478 = !{!11367, !11370}
!11479 = !{!11480}
!11480 = !DILocalVariable(name: "region", arg: 1, scope: !11476, file: !1478, line: 175, type: !11370)
!11481 = !DILocation(line: 0, scope: !11476)
!11482 = !DILocation(line: 178, column: 16, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11476, file: !1478, line: 178, column: 9)
!11484 = !DILocation(line: 178, column: 9, scope: !11476)
!11485 = !DILocation(line: 183, column: 9, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11476, file: !1478, line: 183, column: 9)
!11487 = !DILocation(line: 183, column: 38, scope: !11486)
!11488 = !DILocation(line: 183, column: 9, scope: !11476)
!11489 = !DILocation(line: 184, column: 38, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11486, file: !1478, line: 183, column: 62)
!11491 = !DILocation(line: 184, column: 32, scope: !11490)
!11492 = !DILocation(line: 190, column: 32, scope: !11476)
!11493 = !DILocation(line: 190, column: 23, scope: !11476)
!11494 = !DILocation(line: 192, column: 5, scope: !11476)
!11495 = !DILocation(line: 193, column: 1, scope: !11476)
!11496 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !1478, file: !1478, line: 195, type: !11477, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11497)
!11497 = !{!11498}
!11498 = !DILocalVariable(name: "region", arg: 1, scope: !11496, file: !1478, line: 195, type: !11370)
!11499 = !DILocation(line: 0, scope: !11496)
!11500 = !DILocation(line: 198, column: 16, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11496, file: !1478, line: 198, column: 9)
!11502 = !DILocation(line: 198, column: 9, scope: !11496)
!11503 = !DILocation(line: 203, column: 35, scope: !11496)
!11504 = !DILocation(line: 203, column: 31, scope: !11496)
!11505 = !DILocation(line: 203, column: 28, scope: !11496)
!11506 = !DILocation(line: 206, column: 32, scope: !11496)
!11507 = !DILocation(line: 206, column: 23, scope: !11496)
!11508 = !DILocation(line: 209, column: 41, scope: !11496)
!11509 = !DILocation(line: 209, column: 43, scope: !11496)
!11510 = !DILocation(line: 210, column: 45, scope: !11496)
!11511 = !DILocation(line: 210, column: 47, scope: !11496)
!11512 = !DILocation(line: 212, column: 5, scope: !11496)
!11513 = !DILocation(line: 213, column: 1, scope: !11496)
!11514 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !1478, file: !1478, line: 215, type: !11515, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11518)
!11515 = !DISubroutineType(types: !11516)
!11516 = !{!11367, !11517}
!11517 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !1481, line: 182, baseType: !1510)
!11518 = !{!11519}
!11519 = !DILocalVariable(name: "cache_size", arg: 1, scope: !11514, file: !1478, line: 215, type: !11517)
!11520 = !DILocation(line: 0, scope: !11514)
!11521 = !DILocation(line: 218, column: 20, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11514, file: !1478, line: 218, column: 9)
!11523 = !DILocation(line: 218, column: 9, scope: !11514)
!11524 = !DILocation(line: 223, column: 22, scope: !11514)
!11525 = !DILocation(line: 224, column: 37, scope: !11514)
!11526 = !DILocation(line: 224, column: 22, scope: !11514)
!11527 = !DILocation(line: 227, column: 20, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11514, file: !1478, line: 227, column: 9)
!11529 = !DILocation(line: 227, column: 9, scope: !11514)
!11530 = !DILocation(line: 228, column: 26, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11528, file: !1478, line: 227, column: 43)
!11532 = !DILocation(line: 229, column: 5, scope: !11531)
!11533 = !DILocation(line: 232, column: 28, scope: !11514)
!11534 = !DILocation(line: 232, column: 19, scope: !11514)
!11535 = !DILocation(line: 234, column: 5, scope: !11514)
!11536 = !DILocation(line: 235, column: 1, scope: !11514)
!11537 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !1478, file: !1478, line: 237, type: !11538, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11547)
!11538 = !DISubroutineType(types: !11539)
!11539 = !{!11367, !11370, !11540}
!11540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11541, size: 32)
!11541 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11542)
!11542 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !1481, line: 222, baseType: !11543)
!11543 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1481, line: 219, size: 64, elements: !11544)
!11544 = !{!11545, !11546}
!11545 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !11543, file: !1481, line: 220, baseType: !36, size: 32)
!11546 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !11543, file: !1481, line: 221, baseType: !36, size: 32, offset: 32)
!11547 = !{!11548, !11549}
!11548 = !DILocalVariable(name: "region", arg: 1, scope: !11537, file: !1478, line: 237, type: !11370)
!11549 = !DILocalVariable(name: "region_config", arg: 2, scope: !11537, file: !1478, line: 237, type: !11540)
!11550 = !DILocation(line: 0, scope: !11537)
!11551 = !DILocation(line: 240, column: 16, scope: !11552)
!11552 = distinct !DILexicalBlock(scope: !11537, file: !1478, line: 240, column: 9)
!11553 = !DILocation(line: 240, column: 9, scope: !11537)
!11554 = !DILocation(line: 245, column: 23, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11537, file: !1478, line: 245, column: 9)
!11556 = !DILocation(line: 245, column: 9, scope: !11537)
!11557 = !DILocation(line: 250, column: 24, scope: !11558)
!11558 = distinct !DILexicalBlock(scope: !11537, file: !1478, line: 250, column: 9)
!11559 = !DILocation(line: 250, column: 45, scope: !11558)
!11560 = !DILocation(line: 250, column: 9, scope: !11537)
!11561 = !DILocation(line: 251, column: 9, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11558, file: !1478, line: 250, column: 81)
!11563 = !DILocation(line: 256, column: 24, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11537, file: !1478, line: 256, column: 9)
!11565 = !DILocation(line: 256, column: 42, scope: !11564)
!11566 = !DILocation(line: 256, column: 9, scope: !11537)
!11567 = !DILocation(line: 257, column: 9, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11564, file: !1478, line: 256, column: 78)
!11569 = !DILocation(line: 262, column: 5, scope: !11537)
!11570 = !DILocation(line: 262, column: 34, scope: !11537)
!11571 = !DILocation(line: 263, column: 55, scope: !11537)
!11572 = !DILocation(line: 263, column: 93, scope: !11537)
!11573 = !DILocation(line: 263, column: 76, scope: !11537)
!11574 = !DILocation(line: 263, column: 5, scope: !11537)
!11575 = !DILocation(line: 263, column: 38, scope: !11537)
!11576 = !DILocation(line: 266, column: 34, scope: !11537)
!11577 = !DILocation(line: 269, column: 45, scope: !11537)
!11578 = !DILocation(line: 269, column: 41, scope: !11537)
!11579 = !DILocation(line: 269, column: 43, scope: !11537)
!11580 = !DILocation(line: 270, column: 49, scope: !11537)
!11581 = !DILocation(line: 270, column: 45, scope: !11537)
!11582 = !DILocation(line: 270, column: 47, scope: !11537)
!11583 = !DILocation(line: 272, column: 5, scope: !11537)
!11584 = !DILocation(line: 273, column: 1, scope: !11537)
!11585 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !1478, file: !1478, line: 275, type: !11586, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11588)
!11586 = !DISubroutineType(types: !11587)
!11587 = !{!11367, !36}
!11588 = !{!11589, !11590}
!11589 = !DILocalVariable(name: "address", arg: 1, scope: !11585, file: !1478, line: 275, type: !36)
!11590 = !DILocalVariable(name: "irq_flag", scope: !11585, file: !1478, line: 277, type: !36)
!11591 = !DILocation(line: 0, scope: !11585)
!11592 = !DILocation(line: 280, column: 17, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11585, file: !1478, line: 280, column: 9)
!11594 = !DILocation(line: 280, column: 9, scope: !11585)
!11595 = !DILocation(line: 284, column: 16, scope: !11585)
!11596 = !DILocation(line: 287, column: 32, scope: !11585)
!11597 = !DILocation(line: 287, column: 21, scope: !11585)
!11598 = !DILocation(line: 288, column: 21, scope: !11585)
!11599 = !DILocation(line: 434, column: 3, scope: !11415, inlinedAt: !11600)
!11600 = distinct !DILocation(line: 291, column: 5, scope: !11585)
!11601 = !DILocation(line: 294, column: 5, scope: !11585)
!11602 = !DILocation(line: 296, column: 5, scope: !11585)
!11603 = !DILocation(line: 297, column: 1, scope: !11585)
!11604 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !1478, file: !1478, line: 299, type: !11605, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11607)
!11605 = !DISubroutineType(types: !11606)
!11606 = !{!11367, !36, !36}
!11607 = !{!11608, !11609, !11610, !11611}
!11608 = !DILocalVariable(name: "address", arg: 1, scope: !11604, file: !1478, line: 299, type: !36)
!11609 = !DILocalVariable(name: "length", arg: 2, scope: !11604, file: !1478, line: 299, type: !36)
!11610 = !DILocalVariable(name: "irq_flag", scope: !11604, file: !1478, line: 301, type: !36)
!11611 = !DILocalVariable(name: "end_address", scope: !11604, file: !1478, line: 302, type: !36)
!11612 = !DILocation(line: 0, scope: !11604)
!11613 = !DILocation(line: 302, column: 36, scope: !11604)
!11614 = !DILocation(line: 305, column: 47, scope: !11615)
!11615 = distinct !DILexicalBlock(scope: !11604, file: !1478, line: 305, column: 9)
!11616 = !DILocation(line: 310, column: 16, scope: !11604)
!11617 = !DILocation(line: 313, column: 20, scope: !11604)
!11618 = !DILocation(line: 313, column: 5, scope: !11604)
!11619 = !DILocation(line: 314, column: 9, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11604, file: !1478, line: 313, column: 35)
!11621 = !DILocation(line: 315, column: 17, scope: !11620)
!11622 = distinct !{!11622, !11618, !11623}
!11623 = !DILocation(line: 316, column: 5, scope: !11604)
!11624 = !DILocation(line: 434, column: 3, scope: !11415, inlinedAt: !11625)
!11625 = distinct !DILocation(line: 319, column: 5, scope: !11604)
!11626 = !DILocation(line: 322, column: 5, scope: !11604)
!11627 = !DILocation(line: 324, column: 5, scope: !11604)
!11628 = !DILocation(line: 325, column: 1, scope: !11604)
!11629 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !1478, file: !1478, line: 351, type: !11586, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11630)
!11630 = !{!11631, !11632}
!11631 = !DILocalVariable(name: "address", arg: 1, scope: !11629, file: !1478, line: 351, type: !36)
!11632 = !DILocalVariable(name: "irq_flag", scope: !11629, file: !1478, line: 353, type: !36)
!11633 = !DILocation(line: 0, scope: !11629)
!11634 = !DILocation(line: 356, column: 17, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11629, file: !1478, line: 356, column: 9)
!11636 = !DILocation(line: 356, column: 9, scope: !11629)
!11637 = !DILocation(line: 361, column: 16, scope: !11629)
!11638 = !DILocation(line: 364, column: 32, scope: !11629)
!11639 = !DILocation(line: 364, column: 21, scope: !11629)
!11640 = !DILocation(line: 365, column: 21, scope: !11629)
!11641 = !DILocation(line: 434, column: 3, scope: !11415, inlinedAt: !11642)
!11642 = distinct !DILocation(line: 368, column: 5, scope: !11629)
!11643 = !DILocation(line: 371, column: 5, scope: !11629)
!11644 = !DILocation(line: 373, column: 5, scope: !11629)
!11645 = !DILocation(line: 374, column: 1, scope: !11629)
!11646 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !1478, file: !1478, line: 376, type: !11605, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11647)
!11647 = !{!11648, !11649, !11650, !11651}
!11648 = !DILocalVariable(name: "address", arg: 1, scope: !11646, file: !1478, line: 376, type: !36)
!11649 = !DILocalVariable(name: "length", arg: 2, scope: !11646, file: !1478, line: 376, type: !36)
!11650 = !DILocalVariable(name: "irq_flag", scope: !11646, file: !1478, line: 378, type: !36)
!11651 = !DILocalVariable(name: "end_address", scope: !11646, file: !1478, line: 379, type: !36)
!11652 = !DILocation(line: 0, scope: !11646)
!11653 = !DILocation(line: 379, column: 36, scope: !11646)
!11654 = !DILocation(line: 382, column: 47, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11646, file: !1478, line: 382, column: 9)
!11656 = !DILocation(line: 387, column: 16, scope: !11646)
!11657 = !DILocation(line: 390, column: 20, scope: !11646)
!11658 = !DILocation(line: 390, column: 5, scope: !11646)
!11659 = !DILocation(line: 391, column: 9, scope: !11660)
!11660 = distinct !DILexicalBlock(scope: !11646, file: !1478, line: 390, column: 35)
!11661 = !DILocation(line: 392, column: 17, scope: !11660)
!11662 = distinct !{!11662, !11658, !11663}
!11663 = !DILocation(line: 393, column: 5, scope: !11646)
!11664 = !DILocation(line: 434, column: 3, scope: !11415, inlinedAt: !11665)
!11665 = distinct !DILocation(line: 396, column: 5, scope: !11646)
!11666 = !DILocation(line: 399, column: 5, scope: !11646)
!11667 = !DILocation(line: 401, column: 5, scope: !11646)
!11668 = !DILocation(line: 402, column: 1, scope: !11646)
!11669 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !1478, file: !1478, line: 404, type: !11365, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11670)
!11670 = !{!11671}
!11671 = !DILocalVariable(name: "irq_flag", scope: !11669, file: !1478, line: 406, type: !36)
!11672 = !DILocation(line: 409, column: 16, scope: !11669)
!11673 = !DILocation(line: 0, scope: !11669)
!11674 = !DILocation(line: 412, column: 21, scope: !11669)
!11675 = !DILocation(line: 413, column: 21, scope: !11669)
!11676 = !DILocation(line: 434, column: 3, scope: !11415, inlinedAt: !11677)
!11677 = distinct !DILocation(line: 416, column: 5, scope: !11669)
!11678 = !DILocation(line: 419, column: 5, scope: !11669)
!11679 = !DILocation(line: 421, column: 5, scope: !11669)
!11680 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !1478, file: !1478, line: 424, type: !11681, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1477, retainedNodes: !11683)
!11681 = !DISubroutineType(types: !11682)
!11682 = !{!94, !36}
!11683 = !{!11684, !11685}
!11684 = !DILocalVariable(name: "address", arg: 1, scope: !11680, file: !1478, line: 424, type: !36)
!11685 = !DILocalVariable(name: "region", scope: !11680, file: !1478, line: 426, type: !11370)
!11686 = !DILocation(line: 0, scope: !11680)
!11687 = !DILocation(line: 429, column: 18, scope: !11688)
!11688 = distinct !DILexicalBlock(scope: !11680, file: !1478, line: 429, column: 9)
!11689 = !DILocation(line: 429, column: 28, scope: !11688)
!11690 = !DILocation(line: 429, column: 9, scope: !11680)
!11691 = !DILocation(line: 435, column: 20, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11693, file: !1478, line: 435, column: 13)
!11693 = distinct !DILexicalBlock(scope: !11694, file: !1478, line: 433, column: 81)
!11694 = distinct !DILexicalBlock(scope: !11695, file: !1478, line: 433, column: 5)
!11695 = distinct !DILexicalBlock(scope: !11680, file: !1478, line: 433, column: 5)
!11696 = !DILocation(line: 435, column: 41, scope: !11692)
!11697 = !DILocation(line: 435, column: 36, scope: !11692)
!11698 = !DILocation(line: 435, column: 13, scope: !11693)
!11699 = !DILocation(line: 436, column: 30, scope: !11700)
!11700 = distinct !DILexicalBlock(scope: !11701, file: !1478, line: 436, column: 17)
!11701 = distinct !DILexicalBlock(scope: !11692, file: !1478, line: 435, column: 53)
!11702 = !DILocation(line: 436, column: 59, scope: !11700)
!11703 = !DILocation(line: 436, column: 26, scope: !11700)
!11704 = !DILocation(line: 436, column: 85, scope: !11700)
!11705 = !DILocation(line: 436, column: 99, scope: !11700)
!11706 = !DILocation(line: 436, column: 97, scope: !11700)
!11707 = !DILocation(line: 436, column: 17, scope: !11701)
!11708 = !DILocation(line: 433, column: 77, scope: !11694)
!11709 = !DILocation(line: 433, column: 46, scope: !11694)
!11710 = !DILocation(line: 433, column: 5, scope: !11695)
!11711 = distinct !{!11711, !11710, !11712}
!11712 = !DILocation(line: 440, column: 5, scope: !11695)
!11713 = !DILocation(line: 442, column: 1, scope: !11680)
!11714 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !1787, file: !1787, line: 51, type: !5203, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11715)
!11715 = !{!11716, !11717}
!11716 = !DILocalVariable(name: "mask", scope: !11714, file: !1787, line: 53, type: !36)
!11717 = !DILocalVariable(name: "priority", scope: !11714, file: !1787, line: 55, type: !36)
!11718 = !DILocation(line: 521, column: 3, scope: !11719, inlinedAt: !11723)
!11719 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !11720, file: !11720, line: 517, type: !5203, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11721)
!11720 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/apps/bootloader/GCC")
!11721 = !{!11722}
!11722 = !DILocalVariable(name: "result", scope: !11719, file: !11720, line: 519, type: !36)
!11723 = distinct !DILocation(line: 53, column: 21, scope: !11714)
!11724 = !{i64 457658}
!11725 = !DILocation(line: 0, scope: !11719, inlinedAt: !11723)
!11726 = !DILocation(line: 0, scope: !11714)
!11727 = !DILocalVariable(name: "value", arg: 1, scope: !11728, file: !11720, line: 532, type: !36)
!11728 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !11720, file: !11720, line: 532, type: !4734, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11729)
!11729 = !{!11727}
!11730 = !DILocation(line: 0, scope: !11728, inlinedAt: !11731)
!11731 = distinct !DILocation(line: 56, column: 5, scope: !11714)
!11732 = !DILocation(line: 534, column: 3, scope: !11728, inlinedAt: !11731)
!11733 = !{i64 457991}
!11734 = !DILocation(line: 456, column: 3, scope: !11735, inlinedAt: !11736)
!11735 = distinct !DISubprogram(name: "__DMB", scope: !11416, file: !11416, line: 454, type: !4261, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !4354)
!11736 = distinct !DILocation(line: 57, column: 5, scope: !11714)
!11737 = !{i64 430747}
!11738 = !DILocation(line: 434, column: 3, scope: !11739, inlinedAt: !11740)
!11739 = distinct !DISubprogram(name: "__ISB", scope: !11416, file: !11416, line: 432, type: !4261, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !4354)
!11740 = distinct !DILocation(line: 58, column: 5, scope: !11714)
!11741 = !{i64 430162}
!11742 = !DILocation(line: 59, column: 5, scope: !11714)
!11743 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !1787, file: !1787, line: 62, type: !4734, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11744)
!11744 = !{!11745}
!11745 = !DILocalVariable(name: "mask", arg: 1, scope: !11743, file: !1787, line: 62, type: !36)
!11746 = !DILocation(line: 0, scope: !11743)
!11747 = !DILocation(line: 0, scope: !11728, inlinedAt: !11748)
!11748 = distinct !DILocation(line: 64, column: 5, scope: !11743)
!11749 = !DILocation(line: 534, column: 3, scope: !11728, inlinedAt: !11748)
!11750 = !DILocation(line: 456, column: 3, scope: !11735, inlinedAt: !11751)
!11751 = distinct !DILocation(line: 65, column: 5, scope: !11743)
!11752 = !DILocation(line: 434, column: 3, scope: !11739, inlinedAt: !11753)
!11753 = distinct !DILocation(line: 66, column: 5, scope: !11743)
!11754 = !DILocation(line: 67, column: 1, scope: !11743)
!11755 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !1787, file: !1787, line: 69, type: !4261, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11756)
!11756 = !{!11757, !11758}
!11757 = !DILocalVariable(name: "irq_number", scope: !11755, file: !1787, line: 71, type: !1875)
!11758 = !DILocalVariable(name: "mask", scope: !11755, file: !1787, line: 72, type: !36)
!11759 = !DILocation(line: 72, column: 21, scope: !11755)
!11760 = !DILocation(line: 0, scope: !11755)
!11761 = !DILocation(line: 73, column: 5, scope: !11762)
!11762 = distinct !DILexicalBlock(scope: !11755, file: !1787, line: 73, column: 5)
!11763 = !DILocation(line: 74, column: 9, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11765, file: !1787, line: 73, column: 85)
!11765 = distinct !DILexicalBlock(scope: !11762, file: !1787, line: 73, column: 5)
!11766 = !DILocation(line: 73, column: 81, scope: !11765)
!11767 = !DILocation(line: 73, column: 53, scope: !11765)
!11768 = distinct !{!11768, !11761, !11769}
!11769 = !DILocation(line: 75, column: 5, scope: !11762)
!11770 = !DILocation(line: 76, column: 5, scope: !11755)
!11771 = !DILocation(line: 77, column: 1, scope: !11755)
!11772 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1652, file: !1652, line: 1507, type: !11773, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11775)
!11773 = !DISubroutineType(types: !11774)
!11774 = !{null, !1876}
!11775 = !{!11776}
!11776 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11772, file: !1652, line: 1507, type: !1876)
!11777 = !DILocation(line: 0, scope: !11772)
!11778 = !DILocation(line: 1509, column: 65, scope: !11772)
!11779 = !DILocation(line: 1509, column: 44, scope: !11772)
!11780 = !DILocation(line: 1509, column: 32, scope: !11772)
!11781 = !DILocation(line: 1509, column: 3, scope: !11772)
!11782 = !DILocation(line: 1509, column: 39, scope: !11772)
!11783 = !DILocation(line: 1510, column: 1, scope: !11772)
!11784 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !1787, file: !1787, line: 79, type: !4261, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11785)
!11785 = !{!11786, !11787}
!11786 = !DILocalVariable(name: "irq_number", scope: !11784, file: !1787, line: 81, type: !1875)
!11787 = !DILocalVariable(name: "mask", scope: !11784, file: !1787, line: 82, type: !36)
!11788 = !DILocation(line: 82, column: 21, scope: !11784)
!11789 = !DILocation(line: 0, scope: !11784)
!11790 = !DILocation(line: 84, column: 5, scope: !11791)
!11791 = distinct !DILexicalBlock(scope: !11784, file: !1787, line: 84, column: 5)
!11792 = !DILocation(line: 85, column: 9, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11794, file: !1787, line: 84, column: 85)
!11794 = distinct !DILexicalBlock(scope: !11791, file: !1787, line: 84, column: 5)
!11795 = !DILocation(line: 84, column: 81, scope: !11794)
!11796 = !DILocation(line: 84, column: 53, scope: !11794)
!11797 = distinct !{!11797, !11790, !11798}
!11798 = !DILocation(line: 86, column: 5, scope: !11791)
!11799 = !DILocation(line: 87, column: 5, scope: !11784)
!11800 = !DILocation(line: 88, column: 1, scope: !11784)
!11801 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1652, file: !1652, line: 1494, type: !11773, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11802)
!11802 = !{!11803}
!11803 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11801, file: !1652, line: 1494, type: !1876)
!11804 = !DILocation(line: 0, scope: !11801)
!11805 = !DILocation(line: 1497, column: 91, scope: !11801)
!11806 = !DILocation(line: 1497, column: 61, scope: !11801)
!11807 = !DILocation(line: 1497, column: 40, scope: !11801)
!11808 = !DILocation(line: 1497, column: 3, scope: !11801)
!11809 = !DILocation(line: 1497, column: 46, scope: !11801)
!11810 = !DILocation(line: 1498, column: 1, scope: !11801)
!11811 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !1787, file: !1787, line: 90, type: !4261, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11812)
!11812 = !{!11813}
!11813 = !DILocalVariable(name: "irq_number", scope: !11811, file: !1787, line: 92, type: !1875)
!11814 = !DILocation(line: 0, scope: !11811)
!11815 = !DILocation(line: 93, column: 5, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11811, file: !1787, line: 93, column: 5)
!11817 = !DILocation(line: 94, column: 9, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11819, file: !1787, line: 93, column: 85)
!11819 = distinct !DILexicalBlock(scope: !11816, file: !1787, line: 93, column: 5)
!11820 = !DILocation(line: 93, column: 81, scope: !11819)
!11821 = !DILocation(line: 93, column: 53, scope: !11819)
!11822 = distinct !{!11822, !11815, !11823}
!11823 = !DILocation(line: 95, column: 5, scope: !11816)
!11824 = !DILocation(line: 96, column: 1, scope: !11811)
!11825 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1652, file: !1652, line: 1547, type: !11773, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11826)
!11826 = !{!11827}
!11827 = !DILocalVariable(name: "IRQn", arg: 1, scope: !11825, file: !1652, line: 1547, type: !1876)
!11828 = !DILocation(line: 0, scope: !11825)
!11829 = !DILocation(line: 1549, column: 65, scope: !11825)
!11830 = !DILocation(line: 1549, column: 44, scope: !11825)
!11831 = !DILocation(line: 1549, column: 32, scope: !11825)
!11832 = !DILocation(line: 1549, column: 3, scope: !11825)
!11833 = !DILocation(line: 1549, column: 39, scope: !11825)
!11834 = !DILocation(line: 1550, column: 1, scope: !11825)
!11835 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !1787, file: !1787, line: 98, type: !11836, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11839)
!11836 = !DISubroutineType(types: !11837)
!11837 = !{!11838, !1875}
!11838 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !1867, line: 158, baseType: !1866)
!11839 = !{!11840}
!11840 = !DILocalVariable(name: "irq_number", arg: 1, scope: !11835, file: !1787, line: 98, type: !1875)
!11841 = !DILocation(line: 0, scope: !11835)
!11842 = !DILocation(line: 100, column: 24, scope: !11843)
!11843 = distinct !DILexicalBlock(scope: !11835, file: !1787, line: 100, column: 9)
!11844 = !DILocation(line: 104, column: 5, scope: !11835)
!11845 = !DILocation(line: 105, column: 5, scope: !11835)
!11846 = !DILocation(line: 106, column: 1, scope: !11835)
!11847 = distinct !DISubprogram(name: "software_trigger_irq", scope: !1787, file: !1787, line: 45, type: !11848, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !11850)
!11848 = !DISubroutineType(types: !11849)
!11849 = !{null, !1875}
!11850 = !{!11851}
!11851 = !DILocalVariable(name: "irq_number", arg: 1, scope: !11847, file: !1787, line: 45, type: !1875)
!11852 = !DILocation(line: 0, scope: !11847)
!11853 = !DILocation(line: 47, column: 54, scope: !11847)
!11854 = !DILocation(line: 47, column: 16, scope: !11847)
!11855 = !DILocation(line: 445, column: 3, scope: !11856, inlinedAt: !11857)
!11856 = distinct !DISubprogram(name: "__DSB", scope: !11416, file: !11416, line: 443, type: !4261, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !4354)
!11857 = distinct !DILocation(line: 48, column: 5, scope: !11847)
!11858 = !{i64 430458}
!11859 = !DILocation(line: 49, column: 1, scope: !11847)
!11860 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !1787, file: !1787, line: 114, type: !5203, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1786, retainedNodes: !4354)
!11861 = !DILocation(line: 116, column: 19, scope: !11860)
!11862 = !DILocation(line: 116, column: 24, scope: !11860)
!11863 = !DILocation(line: 116, column: 5, scope: !11860)
!11864 = distinct !DISubprogram(name: "mbedtls_sha1_init", scope: !1556, file: !1556, line: 82, type: !11865, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11874)
!11865 = !DISubroutineType(types: !11866)
!11866 = !{null, !11867}
!11867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11868, size: 32)
!11868 = !DIDerivedType(tag: DW_TAG_typedef, name: "mbedtls_sha1_context", file: !6462, line: 52, baseType: !11869)
!11869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6462, line: 46, size: 736, elements: !11870)
!11870 = !{!11871, !11872, !11873}
!11871 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !11869, file: !6462, line: 48, baseType: !1618, size: 64)
!11872 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11869, file: !6462, line: 49, baseType: !1681, size: 160, offset: 64)
!11873 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !11869, file: !6462, line: 50, baseType: !6468, size: 512, offset: 224)
!11874 = !{!11875}
!11875 = !DILocalVariable(name: "ctx", arg: 1, scope: !11864, file: !1556, line: 82, type: !11867)
!11876 = !DILocation(line: 0, scope: !11864)
!11877 = !DILocation(line: 84, column: 13, scope: !11864)
!11878 = !DILocation(line: 84, column: 5, scope: !11864)
!11879 = !DILocation(line: 85, column: 1, scope: !11864)
!11880 = distinct !DISubprogram(name: "mbedtls_sha1_free", scope: !1556, file: !1556, line: 87, type: !11865, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11881)
!11881 = !{!11882}
!11882 = !DILocalVariable(name: "ctx", arg: 1, scope: !11880, file: !1556, line: 87, type: !11867)
!11883 = !DILocation(line: 0, scope: !11880)
!11884 = !DILocation(line: 89, column: 13, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11880, file: !1556, line: 89, column: 9)
!11886 = !DILocation(line: 89, column: 9, scope: !11880)
!11887 = !DILocation(line: 92, column: 22, scope: !11880)
!11888 = !DILocation(line: 92, column: 5, scope: !11880)
!11889 = !DILocation(line: 93, column: 1, scope: !11880)
!11890 = distinct !DISubprogram(name: "mbedtls_zeroize", scope: !1556, file: !1556, line: 55, type: !11891, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11893)
!11891 = !DISubroutineType(types: !11892)
!11892 = !{null, !199, !200}
!11893 = !{!11894, !11895, !11896}
!11894 = !DILocalVariable(name: "v", arg: 1, scope: !11890, file: !1556, line: 55, type: !199)
!11895 = !DILocalVariable(name: "n", arg: 2, scope: !11890, file: !1556, line: 55, type: !200)
!11896 = !DILocalVariable(name: "p", scope: !11890, file: !1556, line: 56, type: !335)
!11897 = !DILocation(line: 0, scope: !11890)
!11898 = !DILocation(line: 56, column: 52, scope: !11890)
!11899 = !DILocation(line: 56, column: 60, scope: !11890)
!11900 = !DILocation(line: 56, column: 67, scope: !11890)
!11901 = !DILocation(line: 56, column: 70, scope: !11890)
!11902 = distinct !{!11902, !11898, !11903}
!11903 = !DILocation(line: 56, column: 72, scope: !11890)
!11904 = !DILocation(line: 57, column: 1, scope: !11890)
!11905 = distinct !DISubprogram(name: "mbedtls_sha1_clone", scope: !1556, file: !1556, line: 95, type: !11906, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11910)
!11906 = !DISubroutineType(types: !11907)
!11907 = !{null, !11867, !11908}
!11908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11909, size: 32)
!11909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11868)
!11910 = !{!11911, !11912}
!11911 = !DILocalVariable(name: "dst", arg: 1, scope: !11905, file: !1556, line: 95, type: !11867)
!11912 = !DILocalVariable(name: "src", arg: 2, scope: !11905, file: !1556, line: 96, type: !11908)
!11913 = !DILocation(line: 0, scope: !11905)
!11914 = !DILocation(line: 98, column: 12, scope: !11905)
!11915 = !DILocation(line: 99, column: 1, scope: !11905)
!11916 = distinct !DISubprogram(name: "mbedtls_sha1_starts", scope: !1556, file: !1556, line: 104, type: !11865, scopeLine: 105, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11917)
!11917 = !{!11918}
!11918 = !DILocalVariable(name: "ctx", arg: 1, scope: !11916, file: !1556, line: 104, type: !11867)
!11919 = !DILocation(line: 0, scope: !11916)
!11920 = !DILocation(line: 106, column: 5, scope: !11916)
!11921 = !DILocation(line: 106, column: 19, scope: !11916)
!11922 = !DILocation(line: 107, column: 5, scope: !11916)
!11923 = !DILocation(line: 107, column: 19, scope: !11916)
!11924 = !DILocation(line: 109, column: 5, scope: !11916)
!11925 = !DILocation(line: 109, column: 19, scope: !11916)
!11926 = !DILocation(line: 110, column: 5, scope: !11916)
!11927 = !DILocation(line: 110, column: 19, scope: !11916)
!11928 = !DILocation(line: 111, column: 5, scope: !11916)
!11929 = !DILocation(line: 111, column: 19, scope: !11916)
!11930 = !DILocation(line: 112, column: 5, scope: !11916)
!11931 = !DILocation(line: 112, column: 19, scope: !11916)
!11932 = !DILocation(line: 113, column: 5, scope: !11916)
!11933 = !DILocation(line: 113, column: 19, scope: !11916)
!11934 = !DILocation(line: 114, column: 1, scope: !11916)
!11935 = distinct !DISubprogram(name: "mbedtls_sha1_process", scope: !1556, file: !1556, line: 117, type: !11936, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !11939)
!11936 = !DISubroutineType(types: !11937)
!11937 = !{null, !11867, !11938}
!11938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 32)
!11939 = !{!11940, !11941, !11942, !11943, !11945, !11946, !11947, !11948, !11949}
!11940 = !DILocalVariable(name: "ctx", arg: 1, scope: !11935, file: !1556, line: 117, type: !11867)
!11941 = !DILocalVariable(name: "data", arg: 2, scope: !11935, file: !1556, line: 117, type: !11938)
!11942 = !DILocalVariable(name: "temp", scope: !11935, file: !1556, line: 119, type: !36)
!11943 = !DILocalVariable(name: "W", scope: !11935, file: !1556, line: 119, type: !11944)
!11944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !36, size: 512, elements: !961)
!11945 = !DILocalVariable(name: "A", scope: !11935, file: !1556, line: 119, type: !36)
!11946 = !DILocalVariable(name: "B", scope: !11935, file: !1556, line: 119, type: !36)
!11947 = !DILocalVariable(name: "C", scope: !11935, file: !1556, line: 119, type: !36)
!11948 = !DILocalVariable(name: "D", scope: !11935, file: !1556, line: 119, type: !36)
!11949 = !DILocalVariable(name: "E", scope: !11935, file: !1556, line: 119, type: !36)
!11950 = !DILocation(line: 0, scope: !11935)
!11951 = !DILocation(line: 121, column: 5, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 121, column: 5)
!11953 = !DILocation(line: 122, column: 5, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 122, column: 5)
!11955 = !DILocation(line: 123, column: 5, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 123, column: 5)
!11957 = !DILocation(line: 124, column: 5, scope: !11958)
!11958 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 124, column: 5)
!11959 = !DILocation(line: 125, column: 5, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 125, column: 5)
!11961 = !DILocation(line: 126, column: 5, scope: !11962)
!11962 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 126, column: 5)
!11963 = !DILocation(line: 127, column: 5, scope: !11964)
!11964 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 127, column: 5)
!11965 = !DILocation(line: 128, column: 5, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 128, column: 5)
!11967 = !DILocation(line: 129, column: 5, scope: !11968)
!11968 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 129, column: 5)
!11969 = !DILocation(line: 130, column: 5, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 130, column: 5)
!11971 = !DILocation(line: 131, column: 5, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 131, column: 5)
!11973 = !DILocation(line: 132, column: 5, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 132, column: 5)
!11975 = !DILocation(line: 133, column: 5, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 133, column: 5)
!11977 = !DILocation(line: 134, column: 5, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 134, column: 5)
!11979 = !DILocation(line: 135, column: 5, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 135, column: 5)
!11981 = !DILocation(line: 136, column: 5, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 136, column: 5)
!11983 = !DILocation(line: 152, column: 9, scope: !11935)
!11984 = !DILocation(line: 153, column: 9, scope: !11935)
!11985 = !DILocation(line: 154, column: 9, scope: !11935)
!11986 = !DILocation(line: 155, column: 9, scope: !11935)
!11987 = !DILocation(line: 156, column: 9, scope: !11935)
!11988 = !DILocation(line: 161, column: 5, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 161, column: 5)
!11990 = !DILocation(line: 162, column: 5, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 162, column: 5)
!11992 = !DILocation(line: 163, column: 5, scope: !11993)
!11993 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 163, column: 5)
!11994 = !DILocation(line: 164, column: 5, scope: !11995)
!11995 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 164, column: 5)
!11996 = !DILocation(line: 165, column: 5, scope: !11997)
!11997 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 165, column: 5)
!11998 = !DILocation(line: 166, column: 5, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 166, column: 5)
!12000 = !DILocation(line: 167, column: 5, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 167, column: 5)
!12002 = !DILocation(line: 168, column: 5, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 168, column: 5)
!12004 = !DILocation(line: 169, column: 5, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 169, column: 5)
!12006 = !DILocation(line: 170, column: 5, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 170, column: 5)
!12008 = !DILocation(line: 171, column: 5, scope: !12009)
!12009 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 171, column: 5)
!12010 = !DILocation(line: 172, column: 5, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 172, column: 5)
!12012 = !DILocation(line: 173, column: 5, scope: !12013)
!12013 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 173, column: 5)
!12014 = !DILocation(line: 174, column: 5, scope: !12015)
!12015 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 174, column: 5)
!12016 = !DILocation(line: 175, column: 5, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 175, column: 5)
!12018 = !DILocation(line: 176, column: 5, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 176, column: 5)
!12020 = !DILocation(line: 177, column: 5, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 177, column: 5)
!12022 = !DILocation(line: 178, column: 5, scope: !12023)
!12023 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 178, column: 5)
!12024 = !DILocation(line: 179, column: 5, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 179, column: 5)
!12026 = !DILocation(line: 180, column: 5, scope: !12027)
!12027 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 180, column: 5)
!12028 = !DILocation(line: 188, column: 5, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 188, column: 5)
!12030 = !DILocation(line: 189, column: 5, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 189, column: 5)
!12032 = !DILocation(line: 190, column: 5, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 190, column: 5)
!12034 = !DILocation(line: 191, column: 5, scope: !12035)
!12035 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 191, column: 5)
!12036 = !DILocation(line: 192, column: 5, scope: !12037)
!12037 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 192, column: 5)
!12038 = !DILocation(line: 193, column: 5, scope: !12039)
!12039 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 193, column: 5)
!12040 = !DILocation(line: 194, column: 5, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 194, column: 5)
!12042 = !DILocation(line: 195, column: 5, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 195, column: 5)
!12044 = !DILocation(line: 196, column: 5, scope: !12045)
!12045 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 196, column: 5)
!12046 = !DILocation(line: 197, column: 5, scope: !12047)
!12047 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 197, column: 5)
!12048 = !DILocation(line: 198, column: 5, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 198, column: 5)
!12050 = !DILocation(line: 199, column: 5, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 199, column: 5)
!12052 = !DILocation(line: 200, column: 5, scope: !12053)
!12053 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 200, column: 5)
!12054 = !DILocation(line: 201, column: 5, scope: !12055)
!12055 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 201, column: 5)
!12056 = !DILocation(line: 202, column: 5, scope: !12057)
!12057 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 202, column: 5)
!12058 = !DILocation(line: 203, column: 5, scope: !12059)
!12059 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 203, column: 5)
!12060 = !DILocation(line: 204, column: 5, scope: !12061)
!12061 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 204, column: 5)
!12062 = !DILocation(line: 205, column: 5, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 205, column: 5)
!12064 = !DILocation(line: 206, column: 5, scope: !12065)
!12065 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 206, column: 5)
!12066 = !DILocation(line: 207, column: 5, scope: !12067)
!12067 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 207, column: 5)
!12068 = !DILocation(line: 215, column: 5, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 215, column: 5)
!12070 = !DILocation(line: 216, column: 5, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 216, column: 5)
!12072 = !DILocation(line: 217, column: 5, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 217, column: 5)
!12074 = !DILocation(line: 218, column: 5, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 218, column: 5)
!12076 = !DILocation(line: 219, column: 5, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 219, column: 5)
!12078 = !DILocation(line: 220, column: 5, scope: !12079)
!12079 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 220, column: 5)
!12080 = !DILocation(line: 221, column: 5, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 221, column: 5)
!12082 = !DILocation(line: 222, column: 5, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 222, column: 5)
!12084 = !DILocation(line: 223, column: 5, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 223, column: 5)
!12086 = !DILocation(line: 224, column: 5, scope: !12087)
!12087 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 224, column: 5)
!12088 = !DILocation(line: 225, column: 5, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 225, column: 5)
!12090 = !DILocation(line: 226, column: 5, scope: !12091)
!12091 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 226, column: 5)
!12092 = !DILocation(line: 227, column: 5, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 227, column: 5)
!12094 = !DILocation(line: 228, column: 5, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 228, column: 5)
!12096 = !DILocation(line: 229, column: 5, scope: !12097)
!12097 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 229, column: 5)
!12098 = !DILocation(line: 230, column: 5, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 230, column: 5)
!12100 = !DILocation(line: 231, column: 5, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 231, column: 5)
!12102 = !DILocation(line: 232, column: 5, scope: !12103)
!12103 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 232, column: 5)
!12104 = !DILocation(line: 233, column: 5, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 233, column: 5)
!12106 = !DILocation(line: 234, column: 5, scope: !12107)
!12107 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 234, column: 5)
!12108 = !DILocation(line: 242, column: 5, scope: !12109)
!12109 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 242, column: 5)
!12110 = !DILocation(line: 243, column: 5, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 243, column: 5)
!12112 = !DILocation(line: 244, column: 5, scope: !12113)
!12113 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 244, column: 5)
!12114 = !DILocation(line: 245, column: 5, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 245, column: 5)
!12116 = !DILocation(line: 246, column: 5, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 246, column: 5)
!12118 = !DILocation(line: 247, column: 5, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 247, column: 5)
!12120 = !DILocation(line: 248, column: 5, scope: !12121)
!12121 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 248, column: 5)
!12122 = !DILocation(line: 249, column: 5, scope: !12123)
!12123 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 249, column: 5)
!12124 = !DILocation(line: 250, column: 5, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 250, column: 5)
!12126 = !DILocation(line: 251, column: 5, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 251, column: 5)
!12128 = !DILocation(line: 252, column: 5, scope: !12129)
!12129 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 252, column: 5)
!12130 = !DILocation(line: 253, column: 5, scope: !12131)
!12131 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 253, column: 5)
!12132 = !DILocation(line: 254, column: 5, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 254, column: 5)
!12134 = !DILocation(line: 255, column: 5, scope: !12135)
!12135 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 255, column: 5)
!12136 = !DILocation(line: 256, column: 5, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 256, column: 5)
!12138 = !DILocation(line: 257, column: 5, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 257, column: 5)
!12140 = !DILocation(line: 258, column: 5, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 258, column: 5)
!12142 = !DILocation(line: 259, column: 5, scope: !12143)
!12143 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 259, column: 5)
!12144 = !DILocation(line: 260, column: 5, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 260, column: 5)
!12146 = !DILocation(line: 261, column: 5, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !11935, file: !1556, line: 261, column: 5)
!12148 = !DILocation(line: 266, column: 19, scope: !11935)
!12149 = !DILocation(line: 267, column: 19, scope: !11935)
!12150 = !DILocation(line: 268, column: 19, scope: !11935)
!12151 = !DILocation(line: 269, column: 19, scope: !11935)
!12152 = !DILocation(line: 270, column: 19, scope: !11935)
!12153 = !DILocation(line: 271, column: 1, scope: !11935)
!12154 = distinct !DISubprogram(name: "mbedtls_sha1_update", scope: !1556, file: !1556, line: 277, type: !12155, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !12157)
!12155 = !DISubroutineType(types: !12156)
!12156 = !{null, !11867, !11938, !200}
!12157 = !{!12158, !12159, !12160, !12161, !12162}
!12158 = !DILocalVariable(name: "ctx", arg: 1, scope: !12154, file: !1556, line: 277, type: !11867)
!12159 = !DILocalVariable(name: "input", arg: 2, scope: !12154, file: !1556, line: 277, type: !11938)
!12160 = !DILocalVariable(name: "ilen", arg: 3, scope: !12154, file: !1556, line: 277, type: !200)
!12161 = !DILocalVariable(name: "fill", scope: !12154, file: !1556, line: 279, type: !200)
!12162 = !DILocalVariable(name: "left", scope: !12154, file: !1556, line: 280, type: !36)
!12163 = !DILocation(line: 0, scope: !12154)
!12164 = !DILocation(line: 282, column: 14, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12154, file: !1556, line: 282, column: 9)
!12166 = !DILocation(line: 282, column: 9, scope: !12154)
!12167 = !DILocation(line: 285, column: 12, scope: !12154)
!12168 = !DILocation(line: 285, column: 26, scope: !12154)
!12169 = !DILocation(line: 286, column: 15, scope: !12154)
!12170 = !DILocation(line: 288, column: 19, scope: !12154)
!12171 = !DILocation(line: 289, column: 19, scope: !12154)
!12172 = !DILocation(line: 291, column: 23, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12154, file: !1556, line: 291, column: 9)
!12174 = !DILocation(line: 291, column: 9, scope: !12154)
!12175 = !DILocation(line: 292, column: 9, scope: !12173)
!12176 = !DILocation(line: 292, column: 22, scope: !12173)
!12177 = !DILocation(line: 294, column: 9, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12154, file: !1556, line: 294, column: 9)
!12179 = !DILocation(line: 294, column: 14, scope: !12178)
!12180 = !DILocation(line: 294, column: 22, scope: !12178)
!12181 = !DILocation(line: 294, column: 9, scope: !12154)
!12182 = !DILocation(line: 296, column: 27, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12178, file: !1556, line: 295, column: 5)
!12184 = !DILocation(line: 296, column: 39, scope: !12183)
!12185 = !DILocation(line: 296, column: 9, scope: !12183)
!12186 = !DILocation(line: 297, column: 9, scope: !12183)
!12187 = !DILocation(line: 298, column: 15, scope: !12183)
!12188 = !DILocation(line: 299, column: 15, scope: !12183)
!12189 = !DILocation(line: 301, column: 5, scope: !12183)
!12190 = !DILocation(line: 303, column: 17, scope: !12154)
!12191 = !DILocation(line: 303, column: 5, scope: !12154)
!12192 = !DILocation(line: 305, column: 9, scope: !12193)
!12193 = distinct !DILexicalBlock(scope: !12154, file: !1556, line: 304, column: 5)
!12194 = !DILocation(line: 306, column: 15, scope: !12193)
!12195 = !DILocation(line: 307, column: 15, scope: !12193)
!12196 = distinct !{!12196, !12191, !12197}
!12197 = !DILocation(line: 308, column: 5, scope: !12154)
!12198 = !DILocation(line: 310, column: 14, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12154, file: !1556, line: 310, column: 9)
!12200 = !DILocation(line: 310, column: 9, scope: !12154)
!12201 = !DILocation(line: 311, column: 39, scope: !12199)
!12202 = !DILocation(line: 311, column: 9, scope: !12199)
!12203 = !DILocation(line: 312, column: 1, scope: !12154)
!12204 = distinct !DISubprogram(name: "mbedtls_sha1_finish", scope: !1556, file: !1556, line: 325, type: !12205, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !12207)
!12205 = !DISubroutineType(types: !12206)
!12206 = !{null, !11867, !1558}
!12207 = !{!12208, !12209, !12210, !12211, !12212, !12213, !12214}
!12208 = !DILocalVariable(name: "ctx", arg: 1, scope: !12204, file: !1556, line: 325, type: !11867)
!12209 = !DILocalVariable(name: "output", arg: 2, scope: !12204, file: !1556, line: 325, type: !1558)
!12210 = !DILocalVariable(name: "last", scope: !12204, file: !1556, line: 327, type: !36)
!12211 = !DILocalVariable(name: "padn", scope: !12204, file: !1556, line: 327, type: !36)
!12212 = !DILocalVariable(name: "high", scope: !12204, file: !1556, line: 328, type: !36)
!12213 = !DILocalVariable(name: "low", scope: !12204, file: !1556, line: 328, type: !36)
!12214 = !DILocalVariable(name: "msglen", scope: !12204, file: !1556, line: 329, type: !12215)
!12215 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 64, elements: !980)
!12216 = !DILocation(line: 0, scope: !12204)
!12217 = !DILocation(line: 329, column: 5, scope: !12204)
!12218 = !DILocation(line: 329, column: 19, scope: !12204)
!12219 = !DILocation(line: 331, column: 14, scope: !12204)
!12220 = !DILocation(line: 332, column: 14, scope: !12204)
!12221 = !DILocation(line: 332, column: 10, scope: !12204)
!12222 = !DILocation(line: 333, column: 28, scope: !12204)
!12223 = !DILocation(line: 335, column: 5, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12204, file: !1556, line: 335, column: 5)
!12225 = !DILocation(line: 336, column: 5, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12204, file: !1556, line: 336, column: 5)
!12227 = !DILocation(line: 338, column: 26, scope: !12204)
!12228 = !DILocation(line: 339, column: 19, scope: !12204)
!12229 = !DILocation(line: 339, column: 12, scope: !12204)
!12230 = !DILocation(line: 341, column: 5, scope: !12204)
!12231 = !DILocation(line: 342, column: 5, scope: !12204)
!12232 = !DILocation(line: 344, column: 5, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12204, file: !1556, line: 344, column: 5)
!12234 = !DILocation(line: 345, column: 5, scope: !12235)
!12235 = distinct !DILexicalBlock(scope: !12204, file: !1556, line: 345, column: 5)
!12236 = !DILocation(line: 346, column: 5, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12204, file: !1556, line: 346, column: 5)
!12238 = !DILocation(line: 347, column: 5, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12204, file: !1556, line: 347, column: 5)
!12240 = !DILocation(line: 348, column: 5, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12204, file: !1556, line: 348, column: 5)
!12242 = !DILocation(line: 349, column: 1, scope: !12204)
!12243 = distinct !DISubprogram(name: "mbedtls_sha1", scope: !1556, file: !1556, line: 428, type: !12244, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1555, retainedNodes: !12246)
!12244 = !DISubroutineType(types: !12245)
!12245 = !{null, !11938, !200, !1558}
!12246 = !{!12247, !12248, !12249, !12250}
!12247 = !DILocalVariable(name: "input", arg: 1, scope: !12243, file: !1556, line: 428, type: !11938)
!12248 = !DILocalVariable(name: "ilen", arg: 2, scope: !12243, file: !1556, line: 428, type: !200)
!12249 = !DILocalVariable(name: "output", arg: 3, scope: !12243, file: !1556, line: 428, type: !1558)
!12250 = !DILocalVariable(name: "ctx", scope: !12243, file: !1556, line: 430, type: !11868)
!12251 = !DILocation(line: 0, scope: !12243)
!12252 = !DILocation(line: 430, column: 5, scope: !12243)
!12253 = !DILocation(line: 430, column: 26, scope: !12243)
!12254 = !DILocation(line: 432, column: 5, scope: !12243)
!12255 = !DILocation(line: 433, column: 5, scope: !12243)
!12256 = !DILocation(line: 434, column: 5, scope: !12243)
!12257 = !DILocation(line: 435, column: 5, scope: !12243)
!12258 = !DILocation(line: 436, column: 5, scope: !12243)
!12259 = !DILocation(line: 437, column: 1, scope: !12243)
