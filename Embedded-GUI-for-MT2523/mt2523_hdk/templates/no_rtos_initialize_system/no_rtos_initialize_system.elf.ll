; ModuleID = './build/no_rtos_initialize_system.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.uart_sw_flowcontrol_config_t = type { i8, i8, i8 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.9 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gpt_lock_sleep_name = internal unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0)], align 4, !dbg !92
@gpt_lock_sleep_handle = internal unnamed_addr global [6 x i8] zeroinitializer, align 1, !dbg !156
@__FUNCTION__.hal_gpt_init = private unnamed_addr constant [13 x i8] c"hal_gpt_init\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"[GPT%d][init]:get sleep handle failed\0D\0A\00", align 1
@.str.1.3 = private unnamed_addr constant [5 x i8] c"GPT0\00", align 1
@.str.2.4 = private unnamed_addr constant [5 x i8] c"GPT1\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"GPT2\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"GPT3\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"GPT4\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"GPT5\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !168
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !331
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !388
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !385
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !346
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !362
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !389
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !669
@.str.39 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.40 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !824
@g_uart_dma_config = internal global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !842
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@g_uart_frist_send_complete_interrupt = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !786
@g_uart_send_lock_status = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !791
@g_uart_sleep_handler = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !793
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_flowcontrol_status = internal unnamed_addr global [4 x i32] zeroinitializer, align 4, !dbg !795
@g_uart_irq_pending_status = internal unnamed_addr global [4 x i8] zeroinitializer, align 1, !dbg !822
@g_uart_restore_init = internal unnamed_addr global i1 false, align 1, !dbg !867
@g_uart_config = internal global [4 x %struct.hal_uart_config_t] zeroinitializer, align 4, !dbg !808
@g_uart_sw_flowcontrol_config = internal unnamed_addr global [4 x %struct.uart_sw_flowcontrol_config_t] zeroinitializer, align 1, !dbg !799
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !856
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !868
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !837
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !869
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !941
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !946
@.str.83 = private unnamed_addr constant [6 x i8] c"uart0\00", align 1
@.str.1.84 = private unnamed_addr constant [6 x i8] c"uart1\00", align 1
@.str.2.85 = private unnamed_addr constant [6 x i8] c"uart2\00", align 1
@.str.3.86 = private unnamed_addr constant [6 x i8] c"uart3\00", align 1
@g_uart_sleep_handler_name = dso_local local_unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1.84, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.85, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3.86, i32 0, i32 0)], align 4, !dbg !952
@.str.4.95 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.5.96 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.6 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !958
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1049
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1036
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.103 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1054
@.str.113 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.114 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1133
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1135
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1137
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1139
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1141
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1143
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1145
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1147
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1149
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1151
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1153
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1466
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1468
@.str.117 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.118 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1477
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1470
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1478
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1530
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1533
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1566
@nor_egid = dso_local local_unnamed_addr global %struct.anon.9* null, align 4, !dbg !1575
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1891
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1762
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1790
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1893
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1600
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1786
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1788
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1612
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1873
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1876
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !1906
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !1765
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1778
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1749
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1753
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1751
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1602
@.str.133 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.134 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1878
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1757
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1774
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1776
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !1933
@.str.139 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.140 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !1993
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1880
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1994
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2001
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2003
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2005
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2007
@.str.155 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.156 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !2009
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2063
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2065
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2067
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2079
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2081
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2083
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2085
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2188
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2190
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2192
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2194
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2196
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2198
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2200
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2202
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2204
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2206
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2208
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2210
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2212
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2214
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2186
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2233
@.str.167 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.168 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2.169 = private unnamed_addr constant [34 x i8] c"pls add your own code from here\0D\0A\00", align 1
@.str.3.170 = private unnamed_addr constant [31 x i8] c"example project test success.\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2245
@end = external dso_local global i8, align 1
@errno = external dso_local local_unnamed_addr global i32, align 4
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2447
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2555
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:02:04 GMT +00:00\00", align 1, !dbg !2557
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2562
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2568

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2638 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2646
  call void @llvm.dbg.value(metadata i32 %1, metadata !2645, metadata !DIExpression()), !dbg !2647
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2648, !range !2650
  %3 = icmp eq i8 %2, 0, !dbg !2648
  br i1 %3, label %5, label %4, !dbg !2651

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2652
  br label %15, !dbg !2654

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2655
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2657
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2658
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2659
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2660
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2661
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2662
  call void @llvm.dbg.value(metadata i32 0, metadata !2643, metadata !DIExpression()), !dbg !2647
  br label %7, !dbg !2663

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2643, metadata !DIExpression()), !dbg !2647
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !2665
  store volatile i32 0, i32* %9, align 4, !dbg !2668
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !2669
  store volatile i32 0, i32* %10, align 4, !dbg !2670
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !2671
  store i32 0, i32* %11, align 4, !dbg !2672
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !2673
  store i32 0, i32* %12, align 4, !dbg !2674
  %13 = add nuw nsw i32 %8, 1, !dbg !2675
  call void @llvm.dbg.value(metadata i32 %13, metadata !2643, metadata !DIExpression()), !dbg !2647
  %14 = icmp eq i32 %13, 16, !dbg !2676
  br i1 %14, label %15, label %7, !dbg !2663, !llvm.loop !2677

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2647
  ret i32 %16, !dbg !2679
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2680 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2683
  call void @llvm.dbg.value(metadata i32 %1, metadata !2682, metadata !DIExpression()), !dbg !2684
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2685
  %3 = and i32 %2, -31, !dbg !2685
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2685
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2686
  %5 = or i32 %4, 19, !dbg !2686
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2686
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2687
  %7 = and i32 %6, -31, !dbg !2687
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2687
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2688
  %9 = or i32 %8, 3, !dbg !2688
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2688
  tail call void asm sideeffect "isb", ""() #22, !dbg !2689, !srcloc !2693
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2694
  ret i32 0, !dbg !2695
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !2696 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2699
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2700
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2701
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2702
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2703
  call void @llvm.dbg.value(metadata i32 0, metadata !2698, metadata !DIExpression()), !dbg !2704
  br label %2, !dbg !2705

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2698, metadata !DIExpression()), !dbg !2704
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !2707
  store volatile i32 0, i32* %4, align 4, !dbg !2710
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !2711
  store volatile i32 0, i32* %5, align 4, !dbg !2712
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !2713
  store i32 0, i32* %6, align 4, !dbg !2714
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !2715
  store i32 0, i32* %7, align 4, !dbg !2716
  %8 = add nuw nsw i32 %3, 1, !dbg !2717
  call void @llvm.dbg.value(metadata i32 %8, metadata !2698, metadata !DIExpression()), !dbg !2704
  %9 = icmp eq i32 %8, 16, !dbg !2718
  br i1 %9, label %10, label %2, !dbg !2705, !llvm.loop !2719

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !2721
  ret i32 0, !dbg !2722
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !2723 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2724
  %2 = and i32 %1, 768, !dbg !2726
  %3 = icmp eq i32 %2, 0, !dbg !2726
  br i1 %3, label %8, label %4, !dbg !2727

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2728
  %6 = or i32 %5, 13, !dbg !2728
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2728
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2729
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2730
  br label %8, !dbg !2731

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !2732
  ret i32 %9, !dbg !2733
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !2734 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2737
  call void @llvm.dbg.value(metadata i32 %1, metadata !2736, metadata !DIExpression()), !dbg !2738
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2739
  %3 = and i32 %2, 1, !dbg !2741
  %4 = icmp eq i32 %3, 0, !dbg !2741
  br i1 %4, label %7, label %5, !dbg !2742

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2743
  br label %7, !dbg !2745

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2746
  %9 = and i32 %8, -2, !dbg !2746
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2746
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2747
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2748
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2749
  ret i32 0, !dbg !2750
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !2751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2755, metadata !DIExpression()), !dbg !2756
  %2 = icmp ugt i32 %0, 15, !dbg !2757
  br i1 %2, label %13, label %3, !dbg !2759

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2760
  %5 = load volatile i32, i32* %4, align 4, !dbg !2760
  %6 = and i32 %5, 256, !dbg !2762
  %7 = icmp eq i32 %6, 0, !dbg !2762
  br i1 %7, label %13, label %8, !dbg !2763

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !2764
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2766
  %11 = or i32 %10, %9, !dbg !2766
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2766
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2767
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !2768
  br label %13, !dbg !2769

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !2756
  ret i32 %14, !dbg !2770
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !2771 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2773, metadata !DIExpression()), !dbg !2774
  %2 = icmp ugt i32 %0, 15, !dbg !2775
  br i1 %2, label %11, label %3, !dbg !2777

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !2778
  %5 = xor i32 %4, -1, !dbg !2779
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2780
  %7 = and i32 %6, %5, !dbg !2780
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2780
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2781
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !2782
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2783
  store i32 0, i32* %9, align 4, !dbg !2784
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2785
  store i32 0, i32* %10, align 4, !dbg !2786
  br label %11, !dbg !2787

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !2774
  ret i32 %12, !dbg !2788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !2789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2794, metadata !DIExpression()), !dbg !2795
  %2 = icmp ugt i32 %0, 3, !dbg !2796
  br i1 %2, label %13, label %3, !dbg !2798

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2799
  %5 = and i32 %4, -769, !dbg !2799
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2799
  %6 = shl nuw nsw i32 %0, 8, !dbg !2800
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2801
  %8 = or i32 %7, %6, !dbg !2801
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2801
  %9 = icmp eq i32 %0, 0, !dbg !2802
  br i1 %9, label %10, label %11, !dbg !2804

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2805
  br label %11, !dbg !2807

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2808
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2809
  br label %13, !dbg !2810

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !2795
  ret i32 %14, !dbg !2811
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !2812 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2823, metadata !DIExpression()), !dbg !2825
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !2824, metadata !DIExpression()), !dbg !2825
  %3 = icmp ugt i32 %0, 15, !dbg !2826
  br i1 %3, label %30, label %4, !dbg !2828

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !2829
  br i1 %5, label %30, label %6, !dbg !2831

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !2832
  %8 = load i32, i32* %7, align 4, !dbg !2832
  %9 = and i32 %8, 4095, !dbg !2834
  %10 = icmp eq i32 %9, 0, !dbg !2834
  br i1 %10, label %12, label %11, !dbg !2835

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2836
  unreachable, !dbg !2836

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !2838
  %14 = load i32, i32* %13, align 4, !dbg !2838
  %15 = and i32 %14, 4095, !dbg !2840
  %16 = icmp eq i32 %15, 0, !dbg !2840
  br i1 %16, label %18, label %17, !dbg !2841

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2842
  unreachable, !dbg !2842

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2844
  store volatile i32 %8, i32* %19, align 4, !dbg !2845
  %20 = load i32, i32* %7, align 4, !dbg !2846
  %21 = load i32, i32* %13, align 4, !dbg !2847
  %22 = add i32 %21, %20, !dbg !2848
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !2849
  store volatile i32 %22, i32* %23, align 4, !dbg !2850
  %24 = load volatile i32, i32* %19, align 4, !dbg !2851
  %25 = or i32 %24, 256, !dbg !2851
  store volatile i32 %25, i32* %19, align 4, !dbg !2851
  %26 = load volatile i32, i32* %19, align 4, !dbg !2852
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2853
  store i32 %26, i32* %27, align 4, !dbg !2854
  %28 = load volatile i32, i32* %23, align 4, !dbg !2855
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2856
  store i32 %28, i32* %29, align 4, !dbg !2857
  br label %30, !dbg !2858

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !2825
  ret i32 %31, !dbg !2859
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2860 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2864, metadata !DIExpression()), !dbg !2866
  %2 = and i32 %0, 31, !dbg !2867
  %3 = icmp eq i32 %2, 0, !dbg !2867
  br i1 %3, label %4, label %9, !dbg !2869

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2870
  call void @llvm.dbg.value(metadata i32 %5, metadata !2865, metadata !DIExpression()), !dbg !2866
  %6 = and i32 %0, -32, !dbg !2871
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2872
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2873
  %8 = or i32 %7, 5, !dbg !2873
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2873
  tail call void asm sideeffect "isb", ""() #22, !dbg !2874, !srcloc !2693
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !2876
  br label %9, !dbg !2877

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2866
  ret i32 %10, !dbg !2878
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2879 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2883, metadata !DIExpression()), !dbg !2887
  call void @llvm.dbg.value(metadata i32 %1, metadata !2884, metadata !DIExpression()), !dbg !2887
  %3 = add i32 %1, %0, !dbg !2888
  call void @llvm.dbg.value(metadata i32 %3, metadata !2886, metadata !DIExpression()), !dbg !2887
  %4 = or i32 %1, %0, !dbg !2889
  %5 = and i32 %4, 31, !dbg !2889
  %6 = icmp eq i32 %5, 0, !dbg !2889
  br i1 %6, label %7, label %16, !dbg !2889

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2891
  call void @llvm.dbg.value(metadata i32 %8, metadata !2885, metadata !DIExpression()), !dbg !2887
  call void @llvm.dbg.value(metadata i32 %0, metadata !2883, metadata !DIExpression()), !dbg !2887
  %9 = icmp ugt i32 %3, %0, !dbg !2892
  br i1 %9, label %10, label %15, !dbg !2893

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2883, metadata !DIExpression()), !dbg !2887
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !2894
  %13 = add i32 %11, 32, !dbg !2896
  call void @llvm.dbg.value(metadata i32 %13, metadata !2883, metadata !DIExpression()), !dbg !2887
  %14 = icmp ult i32 %13, %3, !dbg !2892
  br i1 %14, label %10, label %15, !dbg !2893, !llvm.loop !2897

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !2899, !srcloc !2693
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !2901
  br label %16, !dbg !2902

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2887
  ret i32 %17, !dbg !2903
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2906, metadata !DIExpression()), !dbg !2908
  %2 = and i32 %0, 31, !dbg !2909
  %3 = icmp eq i32 %2, 0, !dbg !2909
  br i1 %3, label %4, label %9, !dbg !2911

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2912
  call void @llvm.dbg.value(metadata i32 %5, metadata !2907, metadata !DIExpression()), !dbg !2908
  %6 = and i32 %0, -32, !dbg !2913
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2914
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2915
  %8 = or i32 %7, 21, !dbg !2915
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2915
  tail call void asm sideeffect "isb", ""() #22, !dbg !2916, !srcloc !2693
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !2918
  br label %9, !dbg !2919

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2908
  ret i32 %10, !dbg !2920
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2921 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2923, metadata !DIExpression()), !dbg !2927
  call void @llvm.dbg.value(metadata i32 %1, metadata !2924, metadata !DIExpression()), !dbg !2927
  %3 = add i32 %1, %0, !dbg !2928
  call void @llvm.dbg.value(metadata i32 %3, metadata !2926, metadata !DIExpression()), !dbg !2927
  %4 = or i32 %1, %0, !dbg !2929
  %5 = and i32 %4, 31, !dbg !2929
  %6 = icmp eq i32 %5, 0, !dbg !2929
  br i1 %6, label %7, label %16, !dbg !2929

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2931
  call void @llvm.dbg.value(metadata i32 %8, metadata !2925, metadata !DIExpression()), !dbg !2927
  call void @llvm.dbg.value(metadata i32 %0, metadata !2923, metadata !DIExpression()), !dbg !2927
  %9 = icmp ugt i32 %3, %0, !dbg !2932
  br i1 %9, label %10, label %15, !dbg !2933

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2923, metadata !DIExpression()), !dbg !2927
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !2934
  %13 = add i32 %11, 32, !dbg !2936
  call void @llvm.dbg.value(metadata i32 %13, metadata !2923, metadata !DIExpression()), !dbg !2927
  %14 = icmp ult i32 %13, %3, !dbg !2932
  br i1 %14, label %10, label %15, !dbg !2933, !llvm.loop !2937

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !2939, !srcloc !2693
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !2941
  br label %16, !dbg !2942

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !2927
  ret i32 %17, !dbg !2943
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2944 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2947
  call void @llvm.dbg.value(metadata i32 %1, metadata !2946, metadata !DIExpression()), !dbg !2948
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2949
  %3 = and i32 %2, -31, !dbg !2949
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2949
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2950
  %5 = or i32 %4, 19, !dbg !2950
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2950
  tail call void asm sideeffect "isb", ""() #22, !dbg !2951, !srcloc !2693
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2953
  ret i32 0, !dbg !2954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !2955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2959, metadata !DIExpression()), !dbg !2961
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2962
  %3 = and i32 %2, 8, !dbg !2964
  %4 = icmp eq i32 %3, 0, !dbg !2964
  br i1 %4, label %23, label %5, !dbg !2965

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !2960, metadata !DIExpression()), !dbg !2961
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2966
  %8 = shl nuw nsw i32 1, %6, !dbg !2971
  %9 = and i32 %7, %8, !dbg !2972
  %10 = icmp eq i32 %9, 0, !dbg !2972
  br i1 %10, label %20, label %11, !dbg !2973

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !2974
  %13 = load volatile i32, i32* %12, align 4, !dbg !2974
  %14 = and i32 %13, -257, !dbg !2977
  %15 = icmp ugt i32 %14, %0, !dbg !2978
  br i1 %15, label %20, label %16, !dbg !2979

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !2980
  %18 = load volatile i32, i32* %17, align 4, !dbg !2980
  %19 = icmp ugt i32 %18, %0, !dbg !2981
  br i1 %19, label %23, label %20, !dbg !2982

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !2983
  call void @llvm.dbg.value(metadata i32 %21, metadata !2960, metadata !DIExpression()), !dbg !2961
  %22 = icmp eq i32 %21, 16, !dbg !2984
  br i1 %22, label %23, label %5, !dbg !2985, !llvm.loop !2986

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !2961
  ret i1 %24, !dbg !2988
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !2989 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2995, metadata !DIExpression()), !dbg !2996
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !2997
  br i1 %2, label %3, label %32, !dbg !2999

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3000
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3002
  %6 = load i32, i32* %5, align 4, !dbg !3002
  %7 = icmp eq i32 %6, 1, !dbg !3003
  br i1 %7, label %32, label %8, !dbg !3004

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3005
  %10 = load i8, i8* %9, align 4, !dbg !3005, !range !2650
  %11 = icmp eq i8 %10, 0, !dbg !3005
  br i1 %11, label %12, label %32, !dbg !3006

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3007
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !3008
  tail call void @gpt_open_clock_source() #20, !dbg !3009
  store i8 1, i8* %9, align 4, !dbg !3010
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3011
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3011
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3012
  %18 = load volatile i32, i32* %17, align 4, !dbg !3013
  %19 = and i32 %18, -2, !dbg !3013
  store volatile i32 %19, i32* %17, align 4, !dbg !3013
  %20 = shl nuw i32 1, %0, !dbg !3014
  %21 = xor i32 %20, -1, !dbg !3015
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3016
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3017
  %24 = load volatile i32, i32* %23, align 4, !dbg !3018
  %25 = and i32 %24, %21, !dbg !3018
  store volatile i32 %25, i32* %23, align 4, !dbg !3018
  %26 = getelementptr inbounds [6 x i8*], [6 x i8*]* @gpt_lock_sleep_name, i32 0, i32 %0, !dbg !3019
  %27 = load i8*, i8** %26, align 4, !dbg !3019
  %28 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %27) #20, !dbg !3019
  %29 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3019
  store i8 %28, i8* %29, align 1, !dbg !3019
  %30 = icmp eq i8 %28, -1, !dbg !3021
  br i1 %30, label %31, label %32, !dbg !3019

31:                                               ; preds = %12
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @__FUNCTION__.hal_gpt_init, i32 0, i32 0), i32 noundef 123, i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i32 0, i32 0), i32 noundef %0) #20, !dbg !3023
  br label %32, !dbg !3023

32:                                               ; preds = %12, %3, %8, %1, %31
  %33 = phi i32 [ -3, %31 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], [ 0, %12 ], !dbg !2996
  ret i32 %33, !dbg !3025
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3026 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3030, metadata !DIExpression()), !dbg !3031
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3032, !range !2650
  %3 = icmp ne i8 %2, 0, !dbg !3034
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3035
  %7 = and i1 %5, %6, !dbg !3035
  ret i1 %7, !dbg !3036
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3037 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3039, metadata !DIExpression()), !dbg !3040
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3041
  br i1 %2, label %3, label %17, !dbg !3043

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3044
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3046
  %6 = load i32, i32* %5, align 4, !dbg !3046
  %7 = icmp eq i32 %6, 1, !dbg !3047
  br i1 %7, label %17, label %8, !dbg !3048

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3049
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3050
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3051
  store i8 0, i8* %11, align 4, !dbg !3052
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3053
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3053
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3054
  %14 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3055
  %15 = load i8, i8* %14, align 1, !dbg !3055
  %16 = tail call i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext %15) #20, !dbg !3055
  br label %17, !dbg !3057

17:                                               ; preds = %3, %1, %8
  %18 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3040
  ret i32 %18, !dbg !3058
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_release_sleep_handle(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3059 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3064, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.value(metadata i32* %1, metadata !3065, metadata !DIExpression()), !dbg !3066
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3067

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3068
  %5 = icmp eq i32 %4, 1, !dbg !3072
  br i1 %5, label %8, label %6, !dbg !3073

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3074
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3076
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3077
  br label %8, !dbg !3078

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3079
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3080
  br label %20, !dbg !3081

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3082
  %13 = icmp eq i32 %12, 1, !dbg !3086
  br i1 %13, label %16, label %14, !dbg !3087

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3088
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3090
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3091
  br label %16, !dbg !3092

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3093
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3094
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3095
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3096
  store i32 %21, i32* %1, align 4, !dbg !3096
  br label %22, !dbg !3097

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3066
  ret i32 %23, !dbg !3098
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3099 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3103, metadata !DIExpression()), !dbg !3106
  call void @llvm.dbg.value(metadata i32 %1, metadata !3104, metadata !DIExpression()), !dbg !3106
  call void @llvm.dbg.value(metadata i32* %2, metadata !3105, metadata !DIExpression()), !dbg !3106
  %4 = icmp eq i32* %2, null, !dbg !3107
  br i1 %4, label %7, label %5, !dbg !3109

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3110
  store i32 %6, i32* %2, align 4, !dbg !3110
  br label %7, !dbg !3112

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3106
  ret i32 %8, !dbg !3113
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3119, metadata !DIExpression()), !dbg !3121
  call void @llvm.dbg.value(metadata i32* %1, metadata !3120, metadata !DIExpression()), !dbg !3121
  %3 = icmp ugt i32 %0, 5, !dbg !3122
  br i1 %3, label %7, label %4, !dbg !3124

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3125
  %6 = load i32, i32* %5, align 4, !dbg !3125
  store i32 %6, i32* %1, align 4, !dbg !3126
  br label %7, !dbg !3127

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3121
  ret i32 %8, !dbg !3128
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3129 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3133, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3134, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.value(metadata i8* %2, metadata !3135, metadata !DIExpression()), !dbg !3136
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3137
  br i1 %4, label %5, label %18, !dbg !3139

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3140
  %7 = load i32, i32* %6, align 4, !dbg !3140
  %8 = icmp eq i32 %7, 1, !dbg !3142
  br i1 %8, label %18, label %9, !dbg !3143

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3144
  %11 = load i8, i8* %10, align 4, !dbg !3144, !range !2650
  %12 = icmp eq i8 %11, 1, !dbg !3145
  br i1 %12, label %13, label %18, !dbg !3146

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3147
  br i1 %14, label %18, label %15, !dbg !3149

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3150
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3151
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3152
  store i8* %2, i8** %17, align 4, !dbg !3153
  tail call void @gpt_nvic_register() #20, !dbg !3154
  br label %18, !dbg !3155

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3136
  ret i32 %19, !dbg !3156
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3157 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3162, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.value(metadata i32 %1, metadata !3163, metadata !DIExpression()), !dbg !3166
  call void @llvm.dbg.value(metadata i32 %2, metadata !3164, metadata !DIExpression()), !dbg !3166
  %5 = bitcast i32* %4 to i8*, !dbg !3167
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3167
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3165, metadata !DIExpression()), !dbg !3168
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3169
  br i1 %6, label %7, label %51, !dbg !3171

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3172
  %9 = load i32, i32* %8, align 4, !dbg !3172
  %10 = icmp eq i32 %9, 1, !dbg !3174
  br i1 %10, label %51, label %11, !dbg !3175

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3176
  %13 = load i8, i8* %12, align 4, !dbg !3176, !range !2650
  %14 = icmp eq i8 %13, 1, !dbg !3177
  br i1 %14, label %15, label %51, !dbg !3178

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3179
  br i1 %16, label %51, label %17, !dbg !3181

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3182
  store volatile i32 %18, i32* %4, align 4, !dbg !3183
  tail call void @gpt_open_clock_source() #20, !dbg !3184
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3185
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3185
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3186
  %22 = load volatile i32, i32* %21, align 4, !dbg !3187
  %23 = and i32 %22, -2, !dbg !3187
  store volatile i32 %23, i32* %21, align 4, !dbg !3187
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3188
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3189
  %26 = load volatile i32, i32* %25, align 4, !dbg !3190
  %27 = and i32 %26, -2, !dbg !3190
  store volatile i32 %27, i32* %25, align 4, !dbg !3190
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3191
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3192
  store volatile i32 16, i32* %29, align 4, !dbg !3193
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3194
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3195
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3196
  store volatile i32 %30, i32* %32, align 4, !dbg !3197
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3198
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3199
  store volatile i32 1, i32* %34, align 4, !dbg !3200
  %35 = shl i32 %2, 4, !dbg !3201
  %36 = or i32 %35, 2, !dbg !3202
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3203
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3204
  store volatile i32 %36, i32* %38, align 4, !dbg !3205
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3206

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3207
  %43 = icmp eq i32 %42, 0, !dbg !3206
  br i1 %43, label %44, label %41, !dbg !3206, !llvm.loop !3208

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3210
  %46 = load volatile i32, i32* %45, align 4, !dbg !3211
  %47 = or i32 %46, 1, !dbg !3211
  store volatile i32 %47, i32* %45, align 4, !dbg !3211
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3212
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3213
  store volatile i32 1, i32* %49, align 4, !dbg !3214
  store i32 1, i32* %8, align 4, !dbg !3215
  %50 = load volatile i32, i32* %4, align 4, !dbg !3216
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3217
  br label %51, !dbg !3218

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3166
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3219
  ret i32 %52, !dbg !3219
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3220 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3224, metadata !DIExpression()), !dbg !3225
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3226
  %3 = icmp eq i32 %2, 1, !dbg !3228
  br i1 %3, label %6, label %4, !dbg !3229

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3230
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3232
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3233
  br label %6, !dbg !3234

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3235
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3236
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3237
  ret i32 0, !dbg !3238
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3239 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3241, metadata !DIExpression()), !dbg !3245
  call void @llvm.dbg.value(metadata i32 %1, metadata !3242, metadata !DIExpression()), !dbg !3245
  call void @llvm.dbg.value(metadata i32 %2, metadata !3243, metadata !DIExpression()), !dbg !3245
  %5 = bitcast i32* %4 to i8*, !dbg !3246
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3246
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3244, metadata !DIExpression()), !dbg !3247
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3248
  br i1 %6, label %7, label %53, !dbg !3250

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3251
  %9 = load i32, i32* %8, align 4, !dbg !3251
  %10 = icmp eq i32 %9, 1, !dbg !3253
  br i1 %10, label %53, label %11, !dbg !3254

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3255
  %13 = load i8, i8* %12, align 4, !dbg !3255, !range !2650
  %14 = icmp eq i8 %13, 1, !dbg !3256
  br i1 %14, label %15, label %53, !dbg !3257

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3258
  %17 = load i8, i8* %16, align 1, !dbg !3258
  %18 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %17) #20, !dbg !3258
  %19 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3260
  store i8 1, i8* %19, align 1, !dbg !3261
  %20 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3262
  store volatile i32 %20, i32* %4, align 4, !dbg !3263
  tail call void @gpt_open_clock_source() #20, !dbg !3264
  %21 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3265
  %22 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3265
  %23 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %22, i32 0, i32 2, !dbg !3266
  %24 = load volatile i32, i32* %23, align 4, !dbg !3267
  %25 = and i32 %24, -2, !dbg !3267
  store volatile i32 %25, i32* %23, align 4, !dbg !3267
  %26 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3268
  %27 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %26, i32 0, i32 0, !dbg !3269
  %28 = load volatile i32, i32* %27, align 4, !dbg !3270
  %29 = and i32 %28, -2, !dbg !3270
  store volatile i32 %29, i32* %27, align 4, !dbg !3270
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3271
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 1, !dbg !3272
  store volatile i32 12, i32* %31, align 4, !dbg !3273
  %32 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3274
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3275
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 6, !dbg !3276
  store volatile i32 %32, i32* %34, align 4, !dbg !3277
  %35 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3278
  %36 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %35, i32 0, i32 4, !dbg !3279
  store volatile i32 1, i32* %36, align 4, !dbg !3280
  %37 = shl i32 %2, 4, !dbg !3281
  %38 = or i32 %37, 2, !dbg !3282
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3283
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3284
  store volatile i32 %38, i32* %40, align 4, !dbg !3285
  %41 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4
  %42 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %41, i32 0, i32 5
  br label %43, !dbg !3286

43:                                               ; preds = %43, %15
  %44 = load volatile i32, i32* %42, align 4, !dbg !3287
  %45 = icmp eq i32 %44, 0, !dbg !3286
  br i1 %45, label %46, label %43, !dbg !3286, !llvm.loop !3288

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %41, i32 0, i32 0, !dbg !3290
  %48 = load volatile i32, i32* %47, align 4, !dbg !3291
  %49 = or i32 %48, 1, !dbg !3291
  store volatile i32 %49, i32* %47, align 4, !dbg !3291
  %50 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %21, align 4, !dbg !3292
  %51 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %50, i32 0, i32 2, !dbg !3293
  store volatile i32 1, i32* %51, align 4, !dbg !3294
  %52 = load volatile i32, i32* %4, align 4, !dbg !3295
  tail call void @restore_interrupt_mask(i32 noundef %52) #20, !dbg !3296
  store i32 1, i32* %8, align 4, !dbg !3297
  br label %53, !dbg !3298

53:                                               ; preds = %7, %11, %3, %46
  %54 = phi i32 [ 0, %46 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3245
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3299
  ret i32 %54, !dbg !3299
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3300 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3302, metadata !DIExpression()), !dbg !3303
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3304
  %3 = icmp eq i32 %2, 1, !dbg !3306
  br i1 %3, label %6, label %4, !dbg !3307

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3308
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3310
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3311
  br label %6, !dbg !3312

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3313
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3314
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3315
  ret i32 0, !dbg !3316
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3317 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3319, metadata !DIExpression()), !dbg !3321
  %3 = bitcast i32* %2 to i8*, !dbg !3322
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3322
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3320, metadata !DIExpression()), !dbg !3323
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3324
  br i1 %4, label %5, label %27, !dbg !3326

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3327
  store volatile i32 %6, i32* %2, align 4, !dbg !3328
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3329
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3329
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3330
  %10 = load volatile i32, i32* %9, align 4, !dbg !3331
  %11 = and i32 %10, -2, !dbg !3331
  store volatile i32 %11, i32* %9, align 4, !dbg !3331
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3332
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3333
  %14 = load volatile i32, i32* %13, align 4, !dbg !3334
  %15 = and i32 %14, -2, !dbg !3334
  store volatile i32 %15, i32* %13, align 4, !dbg !3334
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3335
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3336
  store volatile i32 1, i32* %17, align 4, !dbg !3337
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3338
  store i32 0, i32* %18, align 4, !dbg !3339
  %19 = load volatile i32, i32* %2, align 4, !dbg !3340
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !3341
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3342
  %21 = load i8, i8* %20, align 1, !dbg !3342, !range !2650
  %22 = icmp eq i8 %21, 0, !dbg !3342
  br i1 %22, label %27, label %23, !dbg !3344

23:                                               ; preds = %5
  %24 = getelementptr inbounds [6 x i8], [6 x i8]* @gpt_lock_sleep_handle, i32 0, i32 %0, !dbg !3345
  %25 = load i8, i8* %24, align 1, !dbg !3345
  %26 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %25) #20, !dbg !3345
  store i8 0, i8* %20, align 1, !dbg !3348
  br label %27, !dbg !3349

27:                                               ; preds = %5, %23, %1
  %28 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3321
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3350
  ret i32 %28, !dbg !3350
}

; Function Attrs: optsize
declare dso_local i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3351 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3355, metadata !DIExpression()), !dbg !3358
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3359
  %3 = icmp ugt i32 %2, 31, !dbg !3361
  br i1 %3, label %13, label %4, !dbg !3362

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3363
  br i1 %5, label %13, label %6, !dbg !3365

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3366
  call void @llvm.dbg.value(metadata i32 %7, metadata !3357, metadata !DIExpression()), !dbg !3358
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !3367
  call void @llvm.dbg.value(metadata i32 %8, metadata !3356, metadata !DIExpression()), !dbg !3358
  %9 = or i32 %8, -559087616, !dbg !3368
  store i32 %9, i32* %0, align 4, !dbg !3369
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3370
  store i8 1, i8* %10, align 4, !dbg !3371
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3372
  %12 = add i32 %11, 1, !dbg !3372
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3372
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3373
  br label %13, !dbg !3374

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3358
  ret i32 %14, !dbg !3375
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3376 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3378, metadata !DIExpression()), !dbg !3380
  %3 = bitcast i32* %2 to i8*, !dbg !3381
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3381
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3379, metadata !DIExpression()), !dbg !3382
  %4 = and i32 %0, -559087616, !dbg !3383
  %5 = icmp eq i32 %4, -559087616, !dbg !3385
  br i1 %5, label %6, label %24, !dbg !3386

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3387
  store volatile i32 %7, i32* %2, align 4, !dbg !3388
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3389
  %9 = icmp eq i32 %8, 0, !dbg !3391
  br i1 %9, label %24, label %10, !dbg !3392

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3393
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3395
  %13 = load i8, i8* %12, align 1, !dbg !3395, !range !2650
  %14 = icmp eq i8 %13, 0, !dbg !3395
  br i1 %14, label %15, label %24, !dbg !3396

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3397
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3399
  %18 = load i8, i8* %17, align 4, !dbg !3399, !range !2650
  %19 = icmp eq i8 %18, 1, !dbg !3400
  br i1 %19, label %20, label %24, !dbg !3401

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3402
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3403
  store i8 0, i8* %22, align 4, !dbg !3404
  %23 = add i32 %8, -1, !dbg !3405
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3405
  br label %24, !dbg !3406

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3380
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3407
  ret i32 %25, !dbg !3407
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3408 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3412, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.value(metadata i32 %1, metadata !3413, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3414, metadata !DIExpression()), !dbg !3419
  call void @llvm.dbg.value(metadata i8* %3, metadata !3415, metadata !DIExpression()), !dbg !3419
  %5 = and i32 %0, -559087616, !dbg !3420
  %6 = icmp ne i32 %5, -559087616, !dbg !3422
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3423
  call void @llvm.dbg.value(metadata i32 %0, metadata !3418, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3419
  br i1 %8, label %44, label %9, !dbg !3423

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3424
  call void @llvm.dbg.value(metadata i32 %10, metadata !3418, metadata !DIExpression()), !dbg !3419
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3425
  %12 = load i8, i8* %11, align 1, !dbg !3425, !range !2650
  %13 = icmp eq i8 %12, 0, !dbg !3425
  br i1 %13, label %14, label %44, !dbg !3427

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3428
  %16 = load i8, i8* %15, align 4, !dbg !3428, !range !2650
  %17 = icmp eq i8 %16, 1, !dbg !3430
  br i1 %17, label %18, label %44, !dbg !3431

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3432
  br i1 %19, label %44, label %20, !dbg !3434

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3435
  call void @llvm.dbg.value(metadata i32 %21, metadata !3417, metadata !DIExpression()), !dbg !3419
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3436
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3437, !range !2650
  %23 = icmp eq i8 %22, 0, !dbg !3439
  br i1 %23, label %24, label %27, !dbg !3440

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !3441
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !3443
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3444
  br label %27, !dbg !3445

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3446
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3447, !range !2650
  %30 = icmp eq i8 %29, 0, !dbg !3449
  br i1 %30, label %31, label %34, !dbg !3450

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3451
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !3453
  call void @llvm.dbg.value(metadata i32 %33, metadata !3416, metadata !DIExpression()), !dbg !3419
  br label %34, !dbg !3454

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3455
  call void @llvm.dbg.value(metadata i32 %35, metadata !3416, metadata !DIExpression()), !dbg !3419
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3456
  %37 = add i32 %36, %35, !dbg !3456
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3456
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3457
  %39 = add i32 %38, 1, !dbg !3457
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3457
  store i8 1, i8* %11, align 1, !dbg !3458
  %40 = add i32 %37, %1, !dbg !3459
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3460
  store i32 %40, i32* %41, align 4, !dbg !3461
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3462
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3463
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3464
  store i8* %3, i8** %43, align 4, !dbg !3465
  tail call void @gpt_sw_start_timer() #20, !dbg !3466
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3467
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !3468
  br label %44, !dbg !3469

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3419
  ret i32 %45, !dbg !3470
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3473, metadata !DIExpression()), !dbg !3477
  %2 = and i32 %0, -559087616, !dbg !3478
  %3 = icmp eq i32 %2, -559087616, !dbg !3480
  br i1 %3, label %4, label %31, !dbg !3481

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3482
  call void @llvm.dbg.value(metadata i32 %5, metadata !3476, metadata !DIExpression()), !dbg !3477
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3483
  %7 = load i8, i8* %6, align 1, !dbg !3483, !range !2650
  %8 = icmp eq i8 %7, 1, !dbg !3485
  br i1 %8, label %9, label %31, !dbg !3486

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3487
  %11 = load i8, i8* %10, align 4, !dbg !3487, !range !2650
  %12 = icmp eq i8 %11, 1, !dbg !3489
  br i1 %12, label %13, label %31, !dbg !3490

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3491
  call void @llvm.dbg.value(metadata i32 %14, metadata !3475, metadata !DIExpression()), !dbg !3477
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3492
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3493
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3494
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3495, !range !2650
  %17 = icmp eq i8 %16, 0, !dbg !3497
  br i1 %17, label %18, label %21, !dbg !3498

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3499
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !3501
  call void @llvm.dbg.value(metadata i32 %20, metadata !3474, metadata !DIExpression()), !dbg !3477
  br label %21, !dbg !3502

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3503
  call void @llvm.dbg.value(metadata i32 %22, metadata !3474, metadata !DIExpression()), !dbg !3477
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3504
  %24 = add i32 %23, %22, !dbg !3504
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3504
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3505
  %26 = add i32 %25, -1, !dbg !3505
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3505
  store i8 0, i8* %6, align 1, !dbg !3506
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3507
  %28 = icmp eq i32 %27, 0, !dbg !3509
  br i1 %28, label %30, label %29, !dbg !3510

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !3511
  br label %30, !dbg !3513

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3514
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !3515
  br label %31, !dbg !3516

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3477
  ret i32 %32, !dbg !3517
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3518 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3522, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32* %1, metadata !3523, metadata !DIExpression()), !dbg !3527
  %3 = and i32 %0, -559087616, !dbg !3528
  %4 = icmp eq i32 %3, -559087616, !dbg !3530
  br i1 %4, label %5, label %20, !dbg !3531

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3532
  call void @llvm.dbg.value(metadata i32 %6, metadata !3526, metadata !DIExpression()), !dbg !3527
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3533
  %8 = load i8, i8* %7, align 4, !dbg !3533, !range !2650
  %9 = icmp eq i8 %8, 1, !dbg !3535
  br i1 %9, label %10, label %20, !dbg !3536

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3537
  call void @llvm.dbg.value(metadata i32 %11, metadata !3525, metadata !DIExpression()), !dbg !3527
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3538
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3539
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3540
  %15 = load volatile i32, i32* %14, align 4, !dbg !3540
  %16 = add i32 %15, %12, !dbg !3541
  call void @llvm.dbg.value(metadata i32 %16, metadata !3524, metadata !DIExpression()), !dbg !3527
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3542
  %18 = load i32, i32* %17, align 4, !dbg !3542
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3544
  store i32 %19, i32* %1, align 4, !dbg !3545
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !3546
  br label %20, !dbg !3547

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3527
  ret i32 %21, !dbg !3548
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3553, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.value(metadata i32 %1, metadata !3554, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.value(metadata i32 %2, metadata !3555, metadata !DIExpression()), !dbg !3560
  %4 = and i32 %0, 65535, !dbg !3561
  %5 = mul i32 %4, %1, !dbg !3562
  call void @llvm.dbg.value(metadata i32 %5, metadata !3556, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3560
  %6 = lshr i32 %0, 16, !dbg !3563
  %7 = mul i32 %6, %1, !dbg !3564
  call void @llvm.dbg.value(metadata i32 %7, metadata !3556, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3560
  %8 = and i32 %5, 65535, !dbg !3565
  call void @llvm.dbg.value(metadata i32 %8, metadata !3558, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3560
  %9 = lshr i32 %5, 16, !dbg !3566
  %10 = add i32 %9, %7, !dbg !3567
  call void @llvm.dbg.value(metadata i32 %10, metadata !3558, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3560
  %11 = udiv i32 %10, %2, !dbg !3568
  call void @llvm.dbg.value(metadata i32 %11, metadata !3559, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3560
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3569
  %15 = or i32 %14, %8, !dbg !3570
  %16 = udiv i32 %15, %2, !dbg !3571
  call void @llvm.dbg.value(metadata i32 %16, metadata !3559, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3560
  %17 = shl i32 %11, 16, !dbg !3572
  %18 = add i32 %16, %17, !dbg !3573
  ret i32 %18, !dbg !3574
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3575 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3579, metadata !DIExpression()), !dbg !3580
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3581
  %3 = load volatile i32, i32* %2, align 4, !dbg !3581
  ret i32 %3, !dbg !3582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3587, metadata !DIExpression()), !dbg !3588
  %2 = shl i32 %0, 5, !dbg !3589
  %3 = mul i32 %0, 7, !dbg !3590
  %4 = udiv i32 %3, 10, !dbg !3591
  %5 = add i32 %4, %2, !dbg !3592
  %6 = mul i32 %0, 6, !dbg !3593
  %7 = udiv i32 %6, 100, !dbg !3594
  %8 = add i32 %5, %7, !dbg !3595
  %9 = shl i32 %0, 3, !dbg !3596
  %10 = udiv i32 %9, 1000, !dbg !3597
  %11 = add i32 %8, %10, !dbg !3598
  ret i32 %11, !dbg !3599
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !342 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3600
  br i1 %1, label %10, label %2, !dbg !3602

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3603
  br i1 %3, label %4, label %6, !dbg !3606

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !3607
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3609
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3610

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3612
  br label %8, !dbg !3612

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3612
  br label %10, !dbg !3613

10:                                               ; preds = %8, %0
  ret void, !dbg !3613
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3614 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !3615
  br i1 %1, label %4, label %2, !dbg !3617

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !3618
  br label %4, !dbg !3620

4:                                                ; preds = %2, %0
  ret void, !dbg !3621
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3624, metadata !DIExpression()), !dbg !3625
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3626
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3627
  br i1 %2, label %3, label %6, !dbg !3629

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3630
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3632
  br label %6, !dbg !3633

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3634
  ret i32 %7, !dbg !3635
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3636 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3638, metadata !DIExpression()), !dbg !3639
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3640
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3641
  br i1 %2, label %3, label %6, !dbg !3643

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3644
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3646
  br label %6, !dbg !3647

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3648
  ret i32 %7, !dbg !3649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3650 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3654, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i32 %1, metadata !3655, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.value(metadata i32 %2, metadata !3656, metadata !DIExpression()), !dbg !3657
  tail call void @gpt_open_clock_source() #21, !dbg !3658
  %4 = or i32 %2, %1, !dbg !3659
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3660
  store volatile i32 %4, i32* %5, align 4, !dbg !3661
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3662
  store volatile i32 49, i32* %6, align 4, !dbg !3663
  ret void, !dbg !3664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3665 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3669, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata i32 %1, metadata !3670, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata i32 0, metadata !3671, metadata !DIExpression()), !dbg !3673
  call void @llvm.dbg.value(metadata i32 0, metadata !3672, metadata !DIExpression()), !dbg !3673
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3674
  call void @llvm.dbg.value(metadata i32 %3, metadata !3672, metadata !DIExpression()), !dbg !3673
  %4 = add i32 %1, 1, !dbg !3675
  %5 = add i32 %4, %3, !dbg !3676
  call void @llvm.dbg.value(metadata i32 %5, metadata !3671, metadata !DIExpression()), !dbg !3673
  %6 = icmp ugt i32 %5, %3, !dbg !3677
  br i1 %6, label %7, label %10, !dbg !3679

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3680
  %9 = icmp ult i32 %8, %5, !dbg !3682
  br i1 %9, label %7, label %16, !dbg !3683, !llvm.loop !3684

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3686
  %12 = icmp ult i32 %11, %3, !dbg !3688
  br i1 %12, label %13, label %10, !dbg !3689, !llvm.loop !3690

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3692
  %15 = icmp ult i32 %14, %5, !dbg !3693
  br i1 %15, label %13, label %16, !dbg !3694, !llvm.loop !3695

16:                                               ; preds = %13, %7
  ret void, !dbg !3697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !3698 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3702, metadata !DIExpression()), !dbg !3703
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3704
  store volatile i32 0, i32* %2, align 4, !dbg !3705
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3706
  store volatile i32 0, i32* %3, align 4, !dbg !3707
  %4 = load volatile i32, i32* %3, align 4, !dbg !3708
  %5 = or i32 %4, 2, !dbg !3708
  store volatile i32 %5, i32* %3, align 4, !dbg !3708
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3709

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3710
  %9 = icmp eq i32 %8, 0, !dbg !3709
  br i1 %9, label %10, label %7, !dbg !3709, !llvm.loop !3711

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3713
  store volatile i32 16, i32* %11, align 4, !dbg !3714
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3715
  store volatile i32 1, i32* %12, align 4, !dbg !3716
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3717
  store volatile i32 -1, i32* %13, align 4, !dbg !3718
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3719
  br i1 %14, label %15, label %16, !dbg !3721

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3722
  br label %16, !dbg !3724

16:                                               ; preds = %15, %10
  ret void, !dbg !3725
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3726 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3728, metadata !DIExpression()), !dbg !3730
  %3 = bitcast i32* %2 to i8*, !dbg !3731
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3731
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3729, metadata !DIExpression()), !dbg !3732
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3733
  %5 = load volatile i32, i32* %4, align 4, !dbg !3733
  store volatile i32 %5, i32* %2, align 4, !dbg !3734
  %6 = load volatile i32, i32* %4, align 4, !dbg !3735
  %7 = and i32 %6, -2, !dbg !3735
  store volatile i32 %7, i32* %4, align 4, !dbg !3735
  %8 = load volatile i32, i32* %2, align 4, !dbg !3736
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3737
  ret i32 %8, !dbg !3738
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3739 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3743, metadata !DIExpression()), !dbg !3745
  call void @llvm.dbg.value(metadata i32 %1, metadata !3744, metadata !DIExpression()), !dbg !3745
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3746
  store volatile i32 %1, i32* %3, align 4, !dbg !3747
  ret void, !dbg !3748
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3749 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3751, metadata !DIExpression()), !dbg !3756
  %5 = bitcast i32* %2 to i8*, !dbg !3757
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3757
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3753, metadata !DIExpression()), !dbg !3758
  %6 = bitcast i32* %3 to i8*, !dbg !3759
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3759
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3754, metadata !DIExpression()), !dbg !3760
  %7 = bitcast i32* %4 to i8*, !dbg !3761
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3761
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3755, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.value(metadata i32 undef, metadata !3751, metadata !DIExpression()), !dbg !3756
  call void @llvm.dbg.value(metadata i32 0, metadata !3752, metadata !DIExpression()), !dbg !3756
  br label %8, !dbg !3763

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3752, metadata !DIExpression()), !dbg !3756
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3765
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3765
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3768
  %13 = load volatile i32, i32* %12, align 4, !dbg !3768
  store volatile i32 %13, i32* %3, align 4, !dbg !3769
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3770
  %15 = load volatile i32, i32* %14, align 4, !dbg !3770
  store volatile i32 %15, i32* %4, align 4, !dbg !3771
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !3772
  store volatile i32 %16, i32* %2, align 4, !dbg !3773
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3774
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3775
  store volatile i32 1, i32* %18, align 4, !dbg !3776
  %19 = load volatile i32, i32* %3, align 4, !dbg !3777
  %20 = and i32 %19, 1, !dbg !3779
  %21 = icmp eq i32 %20, 0, !dbg !3779
  br i1 %21, label %33, label %22, !dbg !3780

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3781
  %24 = and i32 %23, 1, !dbg !3782
  %25 = icmp eq i32 %24, 0, !dbg !3782
  br i1 %25, label %33, label %26, !dbg !3783

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3784
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3784
  %29 = icmp eq void (i8*)* %28, null, !dbg !3787
  br i1 %29, label %33, label %30, !dbg !3788

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3789
  %32 = load i8*, i8** %31, align 4, !dbg !3789
  tail call void %28(i8* noundef %32) #20, !dbg !3791
  br label %33, !dbg !3792

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3793
  %35 = load volatile i32, i32* %2, align 4, !dbg !3794
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !3795
  %36 = add nuw nsw i32 %9, 1, !dbg !3796
  call void @llvm.dbg.value(metadata i32 %36, metadata !3752, metadata !DIExpression()), !dbg !3756
  %37 = icmp eq i32 %36, 6, !dbg !3797
  br i1 %37, label %38, label %8, !dbg !3763, !llvm.loop !3798

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3800
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3800
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3800
  ret void, !dbg !3800
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3801 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !3802
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !3803
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !3804
  ret void, !dbg !3805
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3806 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3808, metadata !DIExpression()), !dbg !3813
  %3 = bitcast i32* %2 to i8*, !dbg !3814
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3814
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3809, metadata !DIExpression()), !dbg !3815
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3816
  call void @llvm.dbg.value(metadata i32 %4, metadata !3810, metadata !DIExpression()), !dbg !3813
  %5 = lshr i32 %4, 15, !dbg !3817
  call void @llvm.dbg.value(metadata i32 %5, metadata !3811, metadata !DIExpression()), !dbg !3813
  %6 = and i32 %4, 32767, !dbg !3818
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3819
  %8 = add nuw nsw i32 %7, 16384, !dbg !3820
  %9 = lshr i32 %8, 15, !dbg !3821
  call void @llvm.dbg.value(metadata i32 %9, metadata !3812, metadata !DIExpression()), !dbg !3813
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3822
  %11 = add nuw nsw i32 %9, %10, !dbg !3823
  store volatile i32 %11, i32* %2, align 4, !dbg !3824
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3825
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3826
  %14 = load volatile i32, i32* %13, align 4, !dbg !3827
  %15 = or i32 %14, 2, !dbg !3827
  store volatile i32 %15, i32* %13, align 4, !dbg !3827
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3828

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3829
  %20 = icmp eq i32 %19, 0, !dbg !3828
  br i1 %20, label %21, label %18, !dbg !3828, !llvm.loop !3830

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3832
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3833
  ret i32 %22, !dbg !3834
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !3835 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3839, metadata !DIExpression()), !dbg !3840
  br label %1, !dbg !3841

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3839, metadata !DIExpression()), !dbg !3840
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3843
  %4 = load i8, i8* %3, align 4, !dbg !3843, !range !2650
  %5 = icmp eq i8 %4, 1, !dbg !3847
  br i1 %5, label %6, label %9, !dbg !3848

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3849
  call void @llvm.dbg.value(metadata i32 %7, metadata !3839, metadata !DIExpression()), !dbg !3840
  %8 = icmp eq i32 %7, 32, !dbg !3850
  br i1 %8, label %9, label %1, !dbg !3841, !llvm.loop !3851

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3840
  ret i32 %10, !dbg !3853
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !3854 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3858
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3858
  %4 = bitcast i32* %2 to i8*, !dbg !3858
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3858
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3859, !range !2650
  %6 = icmp eq i8 %5, 0, !dbg !3859
  br i1 %6, label %7, label %11, !dbg !3861

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !3856, metadata !DIExpression(DW_OP_deref)), !dbg !3862
  call void @llvm.dbg.value(metadata i32* %2, metadata !3857, metadata !DIExpression(DW_OP_deref)), !dbg !3862
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !3863
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3864
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3865
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3866
  %9 = load i32, i32* %1, align 4, !dbg !3867
  call void @llvm.dbg.value(metadata i32 %9, metadata !3856, metadata !DIExpression()), !dbg !3862
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !3868
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3869
  br label %11, !dbg !3870

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3870
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3870
  ret void, !dbg !3870
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !3871 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3875, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i32* %1, metadata !3876, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i32 -1, metadata !3878, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i32 0, metadata !3877, metadata !DIExpression()), !dbg !3880
  br label %3, !dbg !3881

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !3877, metadata !DIExpression()), !dbg !3880
  call void @llvm.dbg.value(metadata i32 %5, metadata !3878, metadata !DIExpression()), !dbg !3880
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !3883
  %7 = load i8, i8* %6, align 1, !dbg !3883, !range !2650
  %8 = icmp eq i8 %7, 0, !dbg !3883
  br i1 %8, label %13, label %9, !dbg !3887

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !3888
  call void @llvm.dbg.value(metadata i32 %10, metadata !3879, metadata !DIExpression()), !dbg !3880
  %11 = icmp ult i32 %10, %5, !dbg !3890
  br i1 %11, label %12, label %13, !dbg !3892

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3878, metadata !DIExpression()), !dbg !3880
  store i32 %4, i32* %1, align 4, !dbg !3893
  br label %13, !dbg !3895

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !3880
  call void @llvm.dbg.value(metadata i32 %14, metadata !3878, metadata !DIExpression()), !dbg !3880
  %15 = add nuw nsw i32 %4, 1, !dbg !3896
  call void @llvm.dbg.value(metadata i32 %15, metadata !3877, metadata !DIExpression()), !dbg !3880
  %16 = icmp eq i32 %15, 32, !dbg !3897
  br i1 %16, label %17, label %3, !dbg !3881, !llvm.loop !3898

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !3900
  ret void, !dbg !3901
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !3902 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3904, metadata !DIExpression()), !dbg !3908
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !3909
  %3 = load i32, i32* %2, align 4, !dbg !3909
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3909
  %5 = sub i32 %3, %4, !dbg !3909
  call void @llvm.dbg.value(metadata i32 %5, metadata !3905, metadata !DIExpression()), !dbg !3908
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3910
  %7 = sub i32 %6, %4, !dbg !3910
  call void @llvm.dbg.value(metadata i32 %7, metadata !3906, metadata !DIExpression()), !dbg !3908
  %8 = icmp ugt i32 %5, %7, !dbg !3911
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %10, metadata !3907, metadata !DIExpression()), !dbg !3908
  ret i32 %10, !dbg !3914
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !3915 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3917, metadata !DIExpression()), !dbg !3921
  %4 = bitcast i32* %2 to i8*, !dbg !3922
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !3922
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3919, metadata !DIExpression()), !dbg !3923
  %5 = bitcast i32* %3 to i8*, !dbg !3924
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3924
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3920, metadata !DIExpression()), !dbg !3925
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3926
  %7 = icmp eq i32 %6, 0, !dbg !3928
  br i1 %7, label %38, label %8, !dbg !3929

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3930
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !3932
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3933
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3934
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !3935
  store volatile i32 %11, i32* %2, align 4, !dbg !3936
  %12 = load volatile i32, i32* %2, align 4, !dbg !3937
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3938
  %14 = add i32 %13, %12, !dbg !3938
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3938
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3939
  call void @llvm.dbg.value(metadata i32 0, metadata !3918, metadata !DIExpression()), !dbg !3921
  br label %15, !dbg !3940

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3918, metadata !DIExpression()), !dbg !3921
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !3942
  %18 = load i8, i8* %17, align 1, !dbg !3942, !range !2650
  %19 = icmp eq i8 %18, 0, !dbg !3942
  br i1 %19, label %31, label %20, !dbg !3946

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !3947
  store volatile i32 %21, i32* %3, align 4, !dbg !3949
  %22 = load volatile i32, i32* %3, align 4, !dbg !3950
  %23 = icmp eq i32 %22, 0, !dbg !3952
  br i1 %23, label %24, label %31, !dbg !3953

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !3954
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3956
  %26 = add i32 %25, -1, !dbg !3956
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3956
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !3957
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3957
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !3958
  %30 = load i8*, i8** %29, align 4, !dbg !3958
  tail call void %28(i8* noundef %30) #20, !dbg !3959
  br label %31, !dbg !3960

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !3961
  call void @llvm.dbg.value(metadata i32 %32, metadata !3918, metadata !DIExpression()), !dbg !3921
  %33 = icmp eq i32 %32, 32, !dbg !3962
  br i1 %33, label %34, label %15, !dbg !3940, !llvm.loop !3963

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3965
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3966
  %36 = icmp eq i32 %35, 0, !dbg !3968
  br i1 %36, label %38, label %37, !dbg !3969

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !3970
  br label %38, !dbg !3972

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3973
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !3973
  ret void, !dbg !3973
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !3974 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3979, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !3981, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32 0, metadata !3980, metadata !DIExpression()), !dbg !3982
  br label %5, !dbg !3984

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !3986
  call void @llvm.dbg.value(metadata i32 %3, metadata !3980, metadata !DIExpression()), !dbg !3982
  call void @llvm.dbg.value(metadata i32 %6, metadata !3980, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3982
  %4 = icmp eq i32 %3, 5, !dbg !3988
  br i1 %4, label %10, label %5, !dbg !3984, !llvm.loop !3989

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3980, metadata !DIExpression()), !dbg !3982
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !3991
  %8 = load i32, i32* %7, align 4, !dbg !3991
  %9 = icmp eq i32 %8, %0, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %6, metadata !3980, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3982
  br i1 %9, label %10, label %2, !dbg !3995

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !3982
  ret i32 %11, !dbg !3996
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !3997 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4002, metadata !DIExpression()), !dbg !4003
  ret i32 0, !dbg !4004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !4005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4007, metadata !DIExpression()), !dbg !4008
  ret i32 0, !dbg !4009
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4010 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4014, metadata !DIExpression()), !dbg !4018
  call void @llvm.dbg.value(metadata i32 %1, metadata !4015, metadata !DIExpression()), !dbg !4018
  %3 = icmp ugt i32 %0, 48, !dbg !4019
  br i1 %3, label %13, label %4, !dbg !4021

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4022
  call void @llvm.dbg.value(metadata i32 %5, metadata !4016, metadata !DIExpression()), !dbg !4018
  %6 = and i32 %0, 31, !dbg !4023
  call void @llvm.dbg.value(metadata i32 %6, metadata !4017, metadata !DIExpression()), !dbg !4018
  %7 = icmp eq i32 %1, 0, !dbg !4024
  %8 = shl nuw i32 1, %6, !dbg !4026
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4026
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !4027
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !4027
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !4027
  store volatile i32 %8, i32* %12, align 4, !dbg !4026
  br label %13, !dbg !4028

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4018
  ret i32 %14, !dbg !4028
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4029 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4034, metadata !DIExpression()), !dbg !4039
  call void @llvm.dbg.value(metadata i32* %1, metadata !4035, metadata !DIExpression()), !dbg !4039
  %3 = icmp ugt i32 %0, 48, !dbg !4040
  br i1 %3, label %15, label %4, !dbg !4042

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4043
  br i1 %5, label %15, label %6, !dbg !4045

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4046
  call void @llvm.dbg.value(metadata i32 %7, metadata !4036, metadata !DIExpression()), !dbg !4039
  %8 = and i32 %0, 31, !dbg !4047
  call void @llvm.dbg.value(metadata i32 %8, metadata !4037, metadata !DIExpression()), !dbg !4039
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4048
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !4049
  %11 = load volatile i32, i32* %10, align 4, !dbg !4049
  call void @llvm.dbg.value(metadata i32 %11, metadata !4038, metadata !DIExpression()), !dbg !4039
  %12 = shl nuw i32 1, %8, !dbg !4050
  %13 = and i32 %11, %12, !dbg !4051
  call void @llvm.dbg.value(metadata i32 %13, metadata !4038, metadata !DIExpression()), !dbg !4039
  %14 = lshr i32 %13, %8, !dbg !4052
  store i32 %14, i32* %1, align 4, !dbg !4053
  br label %15, !dbg !4054

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4039
  ret i32 %16, !dbg !4055
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4056 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4061, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i8 %1, metadata !4062, metadata !DIExpression()), !dbg !4066
  %3 = icmp ugt i32 %0, 48, !dbg !4067
  br i1 %3, label %18, label %4, !dbg !4069

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !4070
  br i1 %5, label %18, label %6, !dbg !4072

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !4073
  %8 = lshr i32 %0, 3, !dbg !4074
  call void @llvm.dbg.value(metadata i32 %8, metadata !4063, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.value(metadata i32 %0, metadata !4064, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4066
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4075
  call void @llvm.dbg.value(metadata i32 %9, metadata !4065, metadata !DIExpression()), !dbg !4066
  %10 = shl nuw nsw i32 %0, 2, !dbg !4076
  %11 = and i32 %10, 28, !dbg !4076
  %12 = shl nuw i32 15, %11, !dbg !4077
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4078
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !4079
  store volatile i32 %12, i32* %14, align 4, !dbg !4080
  %15 = shl nuw i32 %7, %11, !dbg !4081
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4082
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !4083
  store volatile i32 %15, i32* %17, align 4, !dbg !4084
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !4085
  br label %18, !dbg !4086

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4066
  ret i32 %19, !dbg !4087
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4093, metadata !DIExpression()), !dbg !4098
  call void @llvm.dbg.value(metadata i32* %1, metadata !4094, metadata !DIExpression()), !dbg !4098
  %3 = icmp ugt i32 %0, 48, !dbg !4099
  br i1 %3, label %15, label %4, !dbg !4101

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4102
  br i1 %5, label %15, label %6, !dbg !4104

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4105
  call void @llvm.dbg.value(metadata i32 %7, metadata !4095, metadata !DIExpression()), !dbg !4098
  %8 = and i32 %0, 31, !dbg !4106
  call void @llvm.dbg.value(metadata i32 %8, metadata !4096, metadata !DIExpression()), !dbg !4098
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4107
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !4108
  %11 = load volatile i32, i32* %10, align 4, !dbg !4108
  call void @llvm.dbg.value(metadata i32 %11, metadata !4097, metadata !DIExpression()), !dbg !4098
  %12 = shl nuw i32 1, %8, !dbg !4109
  %13 = and i32 %11, %12, !dbg !4110
  call void @llvm.dbg.value(metadata i32 %13, metadata !4097, metadata !DIExpression()), !dbg !4098
  %14 = lshr i32 %13, %8, !dbg !4111
  store i32 %14, i32* %1, align 4, !dbg !4112
  br label %15, !dbg !4113

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4098
  ret i32 %16, !dbg !4114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4115 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4119, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.value(metadata i32 %1, metadata !4120, metadata !DIExpression()), !dbg !4123
  %3 = icmp ugt i32 %0, 48, !dbg !4124
  br i1 %3, label %13, label %4, !dbg !4126

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4127
  call void @llvm.dbg.value(metadata i32 %5, metadata !4121, metadata !DIExpression()), !dbg !4123
  %6 = and i32 %0, 31, !dbg !4128
  call void @llvm.dbg.value(metadata i32 %6, metadata !4122, metadata !DIExpression()), !dbg !4123
  %7 = icmp eq i32 %1, 0, !dbg !4129
  %8 = shl nuw i32 1, %6, !dbg !4131
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4131
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !4132
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !4132
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !4132
  store volatile i32 %8, i32* %12, align 4, !dbg !4131
  br label %13, !dbg !4133

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4123
  ret i32 %14, !dbg !4133
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4136, metadata !DIExpression()), !dbg !4141
  call void @llvm.dbg.value(metadata i32* %1, metadata !4137, metadata !DIExpression()), !dbg !4141
  %3 = icmp ugt i32 %0, 48, !dbg !4142
  br i1 %3, label %15, label %4, !dbg !4144

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4145
  br i1 %5, label %15, label %6, !dbg !4147

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4148
  call void @llvm.dbg.value(metadata i32 %7, metadata !4138, metadata !DIExpression()), !dbg !4141
  %8 = and i32 %0, 31, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %8, metadata !4139, metadata !DIExpression()), !dbg !4141
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4150
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !4151
  %11 = load volatile i32, i32* %10, align 4, !dbg !4151
  call void @llvm.dbg.value(metadata i32 %11, metadata !4140, metadata !DIExpression()), !dbg !4141
  %12 = shl nuw i32 1, %8, !dbg !4152
  %13 = and i32 %11, %12, !dbg !4153
  call void @llvm.dbg.value(metadata i32 %13, metadata !4140, metadata !DIExpression()), !dbg !4141
  %14 = lshr i32 %13, %8, !dbg !4154
  store i32 %14, i32* %1, align 4, !dbg !4155
  br label %15, !dbg !4156

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4141
  ret i32 %16, !dbg !4157
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !4158 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4160, metadata !DIExpression()), !dbg !4164
  %2 = icmp ugt i32 %0, 48, !dbg !4165
  br i1 %2, label %16, label %3, !dbg !4167

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4168
  call void @llvm.dbg.value(metadata i32 %4, metadata !4161, metadata !DIExpression()), !dbg !4164
  %5 = and i32 %0, 31, !dbg !4169
  call void @llvm.dbg.value(metadata i32 %5, metadata !4162, metadata !DIExpression()), !dbg !4164
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4170
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !4171
  %8 = load volatile i32, i32* %7, align 4, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %8, metadata !4163, metadata !DIExpression()), !dbg !4164
  %9 = shl nuw i32 1, %5, !dbg !4172
  %10 = and i32 %8, %9, !dbg !4173
  call void @llvm.dbg.value(metadata i32 %10, metadata !4163, metadata !DIExpression()), !dbg !4164
  %11 = lshr i32 %10, %5, !dbg !4174
  %12 = icmp eq i32 %11, 0, !dbg !4174
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !4176
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !4176
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !4176
  store volatile i32 %9, i32* %15, align 4, !dbg !4177
  br label %16, !dbg !4178

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !4164
  ret i32 %17, !dbg !4178
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4181, metadata !DIExpression()), !dbg !4184
  %2 = icmp ugt i32 %0, 48, !dbg !4185
  br i1 %2, label %9, label %3, !dbg !4187

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4188
  call void @llvm.dbg.value(metadata i32 %4, metadata !4182, metadata !DIExpression()), !dbg !4184
  %5 = and i32 %0, 31, !dbg !4189
  call void @llvm.dbg.value(metadata i32 %5, metadata !4183, metadata !DIExpression()), !dbg !4184
  %6 = shl nuw i32 1, %5, !dbg !4190
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4191
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !4192
  store volatile i32 %6, i32* %8, align 4, !dbg !4193
  br label %9, !dbg !4194

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4184
  ret i32 %10, !dbg !4195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4198, metadata !DIExpression()), !dbg !4201
  %2 = icmp ugt i32 %0, 48, !dbg !4202
  br i1 %2, label %9, label %3, !dbg !4204

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4205
  call void @llvm.dbg.value(metadata i32 %4, metadata !4199, metadata !DIExpression()), !dbg !4201
  %5 = and i32 %0, 31, !dbg !4206
  call void @llvm.dbg.value(metadata i32 %5, metadata !4200, metadata !DIExpression()), !dbg !4201
  %6 = shl nuw i32 1, %5, !dbg !4207
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4208
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !4209
  store volatile i32 %6, i32* %8, align 4, !dbg !4210
  br label %9, !dbg !4211

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4201
  ret i32 %10, !dbg !4212
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !4213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4215, metadata !DIExpression()), !dbg !4218
  %2 = icmp ugt i32 %0, 48, !dbg !4219
  br i1 %2, label %14, label %3, !dbg !4221

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4222
  %5 = icmp eq i32 %4, 0, !dbg !4222
  br i1 %5, label %14, label %6, !dbg !4223

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4224
  call void @llvm.dbg.value(metadata i32 %7, metadata !4216, metadata !DIExpression()), !dbg !4218
  %8 = and i32 %0, 31, !dbg !4225
  call void @llvm.dbg.value(metadata i32 %8, metadata !4217, metadata !DIExpression()), !dbg !4218
  %9 = shl nuw i32 1, %8, !dbg !4226
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4227
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4228
  store volatile i32 %9, i32* %11, align 4, !dbg !4229
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4230
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !4231
  store volatile i32 %9, i32* %13, align 4, !dbg !4232
  br label %14, !dbg !4233

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4218
  ret i32 %15, !dbg !4234
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !4235 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4237, metadata !DIExpression()), !dbg !4240
  %2 = icmp ugt i32 %0, 48, !dbg !4241
  br i1 %2, label %14, label %3, !dbg !4243

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4244
  %5 = icmp eq i32 %4, 0, !dbg !4244
  br i1 %5, label %14, label %6, !dbg !4245

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4246
  call void @llvm.dbg.value(metadata i32 %7, metadata !4238, metadata !DIExpression()), !dbg !4240
  %8 = and i32 %0, 31, !dbg !4247
  call void @llvm.dbg.value(metadata i32 %8, metadata !4239, metadata !DIExpression()), !dbg !4240
  %9 = shl nuw i32 1, %8, !dbg !4248
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4249
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4250
  store volatile i32 %9, i32* %11, align 4, !dbg !4251
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4252
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !4253
  store volatile i32 %9, i32* %13, align 4, !dbg !4254
  br label %14, !dbg !4255

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4240
  ret i32 %15, !dbg !4256
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !4257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4259, metadata !DIExpression()), !dbg !4262
  %2 = icmp ugt i32 %0, 48, !dbg !4263
  br i1 %2, label %12, label %3, !dbg !4265

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4266
  %5 = icmp eq i32 %4, 0, !dbg !4266
  br i1 %5, label %12, label %6, !dbg !4267

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4268
  call void @llvm.dbg.value(metadata i32 %7, metadata !4260, metadata !DIExpression()), !dbg !4262
  %8 = and i32 %0, 31, !dbg !4269
  call void @llvm.dbg.value(metadata i32 %8, metadata !4261, metadata !DIExpression()), !dbg !4262
  %9 = shl nuw i32 1, %8, !dbg !4270
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4271
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !4272
  store volatile i32 %9, i32* %11, align 4, !dbg !4273
  br label %12, !dbg !4274

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4262
  ret i32 %13, !dbg !4275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4282, metadata !DIExpression()), !dbg !4284
  call void @llvm.dbg.value(metadata i32 %1, metadata !4283, metadata !DIExpression()), !dbg !4284
  %3 = icmp ugt i32 %0, 5, !dbg !4285
  br i1 %3, label %7, label %4, !dbg !4287

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4288
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !4289
  store volatile i32 %1, i32* %6, align 4, !dbg !4290
  br label %7, !dbg !4291

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !4284
  ret i32 %8, !dbg !4292
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !4293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4297, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata i8 %1, metadata !4298, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata i8 %2, metadata !4299, metadata !DIExpression()), !dbg !4303
  call void @llvm.dbg.value(metadata i8 %3, metadata !4300, metadata !DIExpression()), !dbg !4303
  %5 = icmp ugt i32 %0, 48, !dbg !4304
  br i1 %5, label %30, label %6, !dbg !4306

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4307
  %8 = icmp eq i32 %7, 0, !dbg !4307
  br i1 %8, label %9, label %30, !dbg !4308

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !4309
  call void @llvm.dbg.value(metadata i32 %10, metadata !4301, metadata !DIExpression()), !dbg !4303
  %11 = and i32 %0, 31, !dbg !4310
  call void @llvm.dbg.value(metadata i32 %11, metadata !4302, metadata !DIExpression()), !dbg !4303
  %12 = icmp eq i8 %1, 0, !dbg !4311
  %13 = shl nuw i32 1, %11, !dbg !4313
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4313
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !4314
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !4314
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !4314
  store volatile i32 %13, i32* %17, align 4, !dbg !4313
  %18 = icmp eq i8 %2, 0, !dbg !4315
  %19 = shl nuw i32 1, %11, !dbg !4317
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4317
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !4318
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !4318
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !4318
  store volatile i32 %19, i32* %23, align 4, !dbg !4317
  %24 = icmp eq i8 %3, 0, !dbg !4319
  %25 = shl nuw i32 1, %11, !dbg !4321
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4321
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !4322
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !4322
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !4322
  store volatile i32 %25, i32* %29, align 4, !dbg !4321
  br label %30, !dbg !4323

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !4303
  ret i32 %31, !dbg !4323
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4324 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4326, metadata !DIExpression()), !dbg !4333
  %2 = icmp ugt i32 %0, 48, !dbg !4334
  br i1 %2, label %40, label %3, !dbg !4336

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4337
  call void @llvm.dbg.value(metadata i32 %4, metadata !4327, metadata !DIExpression()), !dbg !4333
  %5 = and i32 %0, 31, !dbg !4338
  call void @llvm.dbg.value(metadata i32 %5, metadata !4330, metadata !DIExpression()), !dbg !4333
  %6 = lshr i32 %0, 4, !dbg !4339
  call void @llvm.dbg.value(metadata i32 %6, metadata !4328, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.value(metadata i32 %0, metadata !4331, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4333
  %7 = lshr i32 %0, 3, !dbg !4340
  call void @llvm.dbg.value(metadata i32 %7, metadata !4329, metadata !DIExpression()), !dbg !4333
  call void @llvm.dbg.value(metadata i32 %0, metadata !4332, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4333
  %8 = shl nuw nsw i32 %0, 2, !dbg !4341
  %9 = and i32 %8, 28, !dbg !4341
  %10 = shl nuw i32 15, %9, !dbg !4342
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4343
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !4344
  store volatile i32 %10, i32* %12, align 4, !dbg !4345
  %13 = shl nuw i32 1, %5, !dbg !4346
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4347
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !4348
  store volatile i32 %13, i32* %15, align 4, !dbg !4349
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4350
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !4351
  store volatile i32 %13, i32* %17, align 4, !dbg !4352
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4353
  %19 = icmp eq i32 %18, 0, !dbg !4353
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4355
  br i1 %19, label %23, label %21, !dbg !4356

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !4357
  br label %29, !dbg !4359

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !4360
  store volatile i32 %13, i32* %24, align 4, !dbg !4362
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4363
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !4364
  store volatile i32 %13, i32* %26, align 4, !dbg !4365
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4366
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !4367
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !4355
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4368
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !4369
  store volatile i32 %13, i32* %32, align 4, !dbg !4370
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4371
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !4372
  store volatile i32 %13, i32* %34, align 4, !dbg !4373
  %35 = shl nuw nsw i32 %0, 1, !dbg !4374
  %36 = and i32 %35, 30, !dbg !4374
  %37 = shl nuw i32 3, %36, !dbg !4375
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4376
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !4377
  store volatile i32 %37, i32* %39, align 4, !dbg !4378
  br label %40, !dbg !4379

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !4333
  ret i32 %41, !dbg !4380
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4381 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4383, metadata !DIExpression()), !dbg !4388
  %2 = icmp ugt i32 %0, 48, !dbg !4389
  br i1 %2, label %34, label %3, !dbg !4391

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4392
  call void @llvm.dbg.value(metadata i32 %4, metadata !4384, metadata !DIExpression()), !dbg !4388
  %5 = and i32 %0, 31, !dbg !4393
  call void @llvm.dbg.value(metadata i32 %5, metadata !4386, metadata !DIExpression()), !dbg !4388
  %6 = lshr i32 %0, 3, !dbg !4394
  call void @llvm.dbg.value(metadata i32 %6, metadata !4385, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.value(metadata i32 %0, metadata !4387, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4388
  %7 = shl nuw nsw i32 %0, 2, !dbg !4395
  %8 = and i32 %7, 28, !dbg !4395
  %9 = shl nuw i32 15, %8, !dbg !4396
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4397
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !4398
  store volatile i32 %9, i32* %11, align 4, !dbg !4399
  %12 = shl nuw i32 1, %5, !dbg !4400
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4401
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !4402
  store volatile i32 %12, i32* %14, align 4, !dbg !4403
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4404
  %16 = icmp eq i32 %15, 0, !dbg !4404
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4406
  br i1 %16, label %22, label %18, !dbg !4407

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !4408
  store volatile i32 %12, i32* %19, align 4, !dbg !4410
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4411
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !4412
  br label %28, !dbg !4413

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !4414
  store volatile i32 %12, i32* %23, align 4, !dbg !4416
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4417
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !4418
  store volatile i32 %12, i32* %25, align 4, !dbg !4419
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4420
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !4421
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !4406
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4422
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !4423
  store volatile i32 %12, i32* %31, align 4, !dbg !4424
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4425
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !4426
  store volatile i32 %12, i32* %33, align 4, !dbg !4427
  br label %34, !dbg !4428

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !4388
  ret i32 %35, !dbg !4429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4434, metadata !DIExpression()), !dbg !4438
  call void @llvm.dbg.value(metadata i32 %1, metadata !4435, metadata !DIExpression()), !dbg !4438
  %3 = icmp ugt i32 %0, 48, !dbg !4439
  br i1 %3, label %14, label %4, !dbg !4441

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !4442
  call void @llvm.dbg.value(metadata i32 %5, metadata !4436, metadata !DIExpression()), !dbg !4438
  call void @llvm.dbg.value(metadata i32 %0, metadata !4437, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4438
  %6 = shl nuw nsw i32 %0, 1, !dbg !4443
  %7 = and i32 %6, 30, !dbg !4443
  %8 = shl nuw i32 3, %7, !dbg !4444
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4445
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !4446
  store volatile i32 %8, i32* %10, align 4, !dbg !4447
  %11 = shl i32 %1, %7, !dbg !4448
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4449
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !4450
  store volatile i32 %11, i32* %13, align 4, !dbg !4451
  br label %14, !dbg !4452

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4438
  ret i32 %15, !dbg !4453
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4454 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4459, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.value(metadata i32* %1, metadata !4460, metadata !DIExpression()), !dbg !4464
  %3 = icmp ugt i32 %0, 48, !dbg !4465
  br i1 %3, label %18, label %4, !dbg !4467

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4468
  br i1 %5, label %18, label %6, !dbg !4470

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !4471
  call void @llvm.dbg.value(metadata i32 %7, metadata !4461, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.value(metadata i32 %0, metadata !4462, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4464
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4472
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !4473
  %10 = load volatile i32, i32* %9, align 4, !dbg !4473
  call void @llvm.dbg.value(metadata i32 %10, metadata !4463, metadata !DIExpression()), !dbg !4464
  %11 = shl nuw nsw i32 %0, 1, !dbg !4474
  %12 = and i32 %11, 30, !dbg !4474
  %13 = shl nuw i32 3, %12, !dbg !4475
  %14 = and i32 %10, %13, !dbg !4476
  call void @llvm.dbg.value(metadata i32 %14, metadata !4463, metadata !DIExpression()), !dbg !4464
  %15 = lshr i32 %14, %12, !dbg !4477
  call void @llvm.dbg.value(metadata i32 %15, metadata !4463, metadata !DIExpression()), !dbg !4464
  %16 = shl i32 %15, 2, !dbg !4478
  %17 = add i32 %16, 4, !dbg !4478
  store i32 %17, i32* %1, align 4, !dbg !4479
  br label %18, !dbg !4480

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4464
  ret i32 %19, !dbg !4481
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4482 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4486, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i1 %1, metadata !4487, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4551
  %4 = bitcast i32* %3 to i8*, !dbg !4552
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4552
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4553
  %6 = load volatile i32, i32* %5, align 4, !dbg !4553
  %7 = icmp eq i32 %6, 2, !dbg !4555
  br i1 %7, label %9, label %8, !dbg !4556

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4557
  unreachable, !dbg !4557

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4559
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4559
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4493, metadata !DIExpression()), !dbg !4551
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4560
  call void @llvm.dbg.value(metadata i32 %12, metadata !4488, metadata !DIExpression()), !dbg !4551
  br i1 %1, label %13, label %14, !dbg !4561

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !4562
  br label %14, !dbg !4565

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4490, metadata !DIExpression(DW_OP_deref)), !dbg !4551
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4566
  call void @llvm.dbg.value(metadata i32 %15, metadata !4549, metadata !DIExpression()), !dbg !4551
  %16 = icmp eq i32 %15, 0, !dbg !4567
  br i1 %16, label %18, label %17, !dbg !4569

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4570
  unreachable, !dbg !4570

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4572
  call void @llvm.dbg.value(metadata i32 %19, metadata !4490, metadata !DIExpression()), !dbg !4551
  %20 = icmp eq i32 %19, 0, !dbg !4574
  br i1 %20, label %43, label %21, !dbg !4575

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4576
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4576
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4491, metadata !DIExpression()), !dbg !4551
  call void @llvm.dbg.value(metadata i8* undef, metadata !4492, metadata !DIExpression()), !dbg !4551
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4577
  br i1 %24, label %25, label %26, !dbg !4579

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4580
  unreachable, !dbg !4580

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4582
  %28 = load i8*, i8** %27, align 4, !dbg !4582
  call void @llvm.dbg.value(metadata i8* %28, metadata !4492, metadata !DIExpression()), !dbg !4551
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4583
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !4584
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !4585
  call void @llvm.dbg.value(metadata i32* %3, metadata !4490, metadata !DIExpression(DW_OP_deref)), !dbg !4551
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4586
  call void @llvm.dbg.value(metadata i32 %31, metadata !4549, metadata !DIExpression()), !dbg !4551
  %32 = icmp eq i32 %31, 0, !dbg !4587
  br i1 %32, label %34, label %33, !dbg !4589

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4590
  unreachable, !dbg !4590

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4592
  call void @llvm.dbg.value(metadata i32 %35, metadata !4490, metadata !DIExpression()), !dbg !4551
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4594
  %37 = load i32, i32* %36, align 4, !dbg !4594
  %38 = icmp ult i32 %35, %37, !dbg !4595
  br i1 %38, label %43, label %39, !dbg !4596

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %40, metadata !4549, metadata !DIExpression()), !dbg !4551
  %41 = icmp eq i32 %40, 0, !dbg !4599
  br i1 %41, label %43, label %42, !dbg !4601

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4602
  unreachable, !dbg !4602

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4604
  ret void, !dbg !4604
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4605 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4607, metadata !DIExpression()), !dbg !4616
  call void @llvm.dbg.value(metadata i1 %1, metadata !4608, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4616
  %4 = bitcast i32* %3 to i8*, !dbg !4617
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4617
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4618
  %6 = load volatile i32, i32* %5, align 4, !dbg !4618
  %7 = icmp eq i32 %6, 2, !dbg !4620
  br i1 %7, label %9, label %8, !dbg !4621

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4622
  unreachable, !dbg !4622

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4624
  call void @llvm.dbg.value(metadata i32 %10, metadata !4609, metadata !DIExpression()), !dbg !4616
  br i1 %1, label %11, label %39, !dbg !4625

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !4626
  %13 = load i8, i8* %12, align 1, !dbg !4626, !range !2650
  %14 = icmp eq i8 %13, 0, !dbg !4630
  br i1 %14, label %15, label %38, !dbg !4631

15:                                               ; preds = %11
  %16 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4632
  call void @llvm.dbg.value(metadata i32 %16, metadata !4615, metadata !DIExpression()), !dbg !4616
  call void @llvm.dbg.value(metadata i32* %3, metadata !4612, metadata !DIExpression(DW_OP_deref)), !dbg !4616
  %17 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !4634
  call void @llvm.dbg.value(metadata i32 %17, metadata !4610, metadata !DIExpression()), !dbg !4616
  %18 = icmp eq i32 %17, 0, !dbg !4635
  br i1 %18, label %20, label %19, !dbg !4637

19:                                               ; preds = %15
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 234, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4638
  unreachable, !dbg !4638

20:                                               ; preds = %15
  %21 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4640
  %22 = load i32, i32* %21, align 4, !dbg !4640
  %23 = load i32, i32* %3, align 4, !dbg !4642
  call void @llvm.dbg.value(metadata i32 %23, metadata !4612, metadata !DIExpression()), !dbg !4616
  %24 = icmp eq i32 %22, %23, !dbg !4643
  br i1 %24, label %25, label %37, !dbg !4644

25:                                               ; preds = %20
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !4645
  %27 = load i8, i8* %26, align 1, !dbg !4645, !range !2650
  %28 = icmp eq i8 %27, 0, !dbg !4645
  br i1 %28, label %37, label %29, !dbg !4648

29:                                               ; preds = %25
  %30 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !4649
  %31 = load i8, i8* %30, align 1, !dbg !4649
  %32 = call zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext %31) #20, !dbg !4652
  br i1 %32, label %33, label %36, !dbg !4653

33:                                               ; preds = %29
  %34 = load i8, i8* %30, align 1, !dbg !4654
  %35 = call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %34) #20, !dbg !4656
  br label %36, !dbg !4657

36:                                               ; preds = %33, %29
  store i8 0, i8* %26, align 1, !dbg !4658
  br label %37, !dbg !4659

37:                                               ; preds = %25, %36, %20
  call void @restore_interrupt_mask(i32 noundef %16) #20, !dbg !4660
  br label %64, !dbg !4661

38:                                               ; preds = %11
  store i8 0, i8* %12, align 1, !dbg !4662
  br label %64

39:                                               ; preds = %9
  %40 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4664
  %41 = load void (i32, i8*)*, void (i32, i8*)** %40, align 4, !dbg !4664
  call void @llvm.dbg.value(metadata void (i32, i8*)* %41, metadata !4613, metadata !DIExpression()), !dbg !4616
  call void @llvm.dbg.value(metadata i8* undef, metadata !4614, metadata !DIExpression()), !dbg !4616
  %42 = icmp eq void (i32, i8*)* %41, null, !dbg !4666
  br i1 %42, label %43, label %44, !dbg !4668

43:                                               ; preds = %39
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4669
  unreachable, !dbg !4669

44:                                               ; preds = %39
  %45 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4671
  %46 = load i8*, i8** %45, align 4, !dbg !4671
  call void @llvm.dbg.value(metadata i8* %46, metadata !4614, metadata !DIExpression()), !dbg !4616
  %47 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4672
  tail call void %41(i32 noundef 2, i8* noundef %46) #20, !dbg !4673
  %48 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !4674
  call void @llvm.dbg.value(metadata i32* %3, metadata !4612, metadata !DIExpression(DW_OP_deref)), !dbg !4616
  %49 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !4675
  call void @llvm.dbg.value(metadata i32 %49, metadata !4610, metadata !DIExpression()), !dbg !4616
  %50 = icmp eq i32 %49, 0, !dbg !4676
  br i1 %50, label %52, label %51, !dbg !4678

51:                                               ; preds = %44
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4679
  unreachable, !dbg !4679

52:                                               ; preds = %44
  %53 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4681
  %54 = load i32, i32* %53, align 4, !dbg !4681
  %55 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4682
  %56 = load i32, i32* %55, align 4, !dbg !4682
  %57 = sub i32 %54, %56, !dbg !4683
  call void @llvm.dbg.value(metadata i32 %57, metadata !4611, metadata !DIExpression()), !dbg !4616
  %58 = load i32, i32* %3, align 4, !dbg !4684
  call void @llvm.dbg.value(metadata i32 %58, metadata !4612, metadata !DIExpression()), !dbg !4616
  %59 = icmp ult i32 %58, %57, !dbg !4686
  br i1 %59, label %64, label %60, !dbg !4687

60:                                               ; preds = %52
  %61 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4688
  call void @llvm.dbg.value(metadata i32 %61, metadata !4610, metadata !DIExpression()), !dbg !4616
  %62 = icmp eq i32 %61, 0, !dbg !4690
  br i1 %62, label %64, label %63, !dbg !4692

63:                                               ; preds = %60
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4693
  unreachable, !dbg !4693

64:                                               ; preds = %60, %52, %37, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4695
  ret void, !dbg !4695
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4700, metadata !DIExpression()), !dbg !4704
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4705
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4705
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4701, metadata !DIExpression()), !dbg !4704
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !4706
  %5 = icmp eq i32 %4, 0, !dbg !4706
  br i1 %5, label %6, label %14, !dbg !4708

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !4709
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !4711
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4712
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4712
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4702, metadata !DIExpression()), !dbg !4704
  call void @llvm.dbg.value(metadata i8* undef, metadata !4703, metadata !DIExpression()), !dbg !4704
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4713
  br i1 %9, label %10, label %11, !dbg !4715

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4716
  unreachable, !dbg !4716

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4718
  %13 = load i8*, i8** %12, align 4, !dbg !4718
  call void @llvm.dbg.value(metadata i8* %13, metadata !4703, metadata !DIExpression()), !dbg !4704
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !4719
  br label %14, !dbg !4720

14:                                               ; preds = %11, %1
  ret void, !dbg !4721
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_backup_all_registers() local_unnamed_addr #0 !dbg !4722 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4724, metadata !DIExpression()), !dbg !4729
  br label %1, !dbg !4730

1:                                                ; preds = %0, %21
  %2 = phi i32 [ 0, %0 ], [ %22, %21 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !4724, metadata !DIExpression()), !dbg !4729
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %2, !dbg !4732
  %4 = load volatile i32, i32* %3, align 4, !dbg !4732
  %5 = icmp eq i32 %4, 0, !dbg !4736
  br i1 %5, label %21, label %6, !dbg !4737

6:                                                ; preds = %1
  %7 = load volatile i32, i32* %3, align 4, !dbg !4738
  call void @llvm.dbg.value(metadata i32 %7, metadata !4725, metadata !DIExpression()), !dbg !4729
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %2, !dbg !4740
  %9 = load i32, i32* %8, align 4, !dbg !4740
  call void @llvm.dbg.value(metadata i32 %9, metadata !4726, metadata !DIExpression()), !dbg !4729
  %10 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 0, !dbg !4741
  %11 = load void (i32, i8*)*, void (i32, i8*)** %10, align 4, !dbg !4741
  call void @llvm.dbg.value(metadata void (i32, i8*)* %11, metadata !4727, metadata !DIExpression()), !dbg !4729
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 1, !dbg !4742
  %13 = load i8*, i8** %12, align 4, !dbg !4742
  call void @llvm.dbg.value(metadata i8* %13, metadata !4728, metadata !DIExpression()), !dbg !4729
  %14 = tail call i32 @hal_uart_deinit(i32 noundef %2) #21, !dbg !4743
  store volatile i32 %7, i32* %3, align 4, !dbg !4744
  store i32 %9, i32* %8, align 4, !dbg !4745
  store void (i32, i8*)* %11, void (i32, i8*)** %10, align 4, !dbg !4746
  store i8* %13, i8** %12, align 4, !dbg !4747
  %15 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %2, !dbg !4748
  %16 = load i32, i32* %15, align 4, !dbg !4748
  %17 = tail call i32 @hal_nvic_get_pending_irq(i32 noundef %16) #20, !dbg !4749
  %18 = icmp ne i32 %17, 0, !dbg !4749
  %19 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_irq_pending_status, i32 0, i32 %2, !dbg !4750
  %20 = zext i1 %18 to i8, !dbg !4751
  store i8 %20, i8* %19, align 1, !dbg !4751
  br label %21, !dbg !4752

21:                                               ; preds = %1, %6
  %22 = add nuw nsw i32 %2, 1, !dbg !4753
  call void @llvm.dbg.value(metadata i32 %22, metadata !4724, metadata !DIExpression()), !dbg !4729
  %23 = icmp eq i32 %22, 4, !dbg !4754
  br i1 %23, label %24, label %1, !dbg !4730, !llvm.loop !4755

24:                                               ; preds = %21
  ret void, !dbg !4757
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4763, metadata !DIExpression()), !dbg !4771
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4772
  br i1 %2, label %3, label %56, !dbg !4774

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4775
  call void @llvm.dbg.value(metadata i32 %4, metadata !4767, metadata !DIExpression()), !dbg !4771
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4776
  %6 = load volatile i32, i32* %5, align 4, !dbg !4776
  %7 = icmp eq i32 %6, 0, !dbg !4778
  br i1 %7, label %54, label %8, !dbg !4779

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4780
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4780
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4764, metadata !DIExpression()), !dbg !4771
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !4781
  %11 = load volatile i32, i32* %5, align 4, !dbg !4782
  %12 = icmp eq i32 %11, 2, !dbg !4784
  br i1 %12, label %13, label %43, !dbg !4785

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4786
  call void @llvm.dbg.value(metadata i32 %14, metadata !4765, metadata !DIExpression()), !dbg !4771
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4788
  call void @llvm.dbg.value(metadata i32 %15, metadata !4766, metadata !DIExpression()), !dbg !4771
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !4789
  call void @llvm.dbg.value(metadata i32 %16, metadata !4768, metadata !DIExpression()), !dbg !4771
  %17 = icmp eq i32 %16, 0, !dbg !4790
  br i1 %17, label %19, label %18, !dbg !4792

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4793
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4795
  unreachable, !dbg !4795

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !4796
  call void @llvm.dbg.value(metadata i32 %20, metadata !4768, metadata !DIExpression()), !dbg !4771
  %21 = icmp eq i32 %20, 0, !dbg !4797
  br i1 %21, label %23, label %22, !dbg !4799

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4800
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4802
  unreachable, !dbg !4802

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !4803
  call void @llvm.dbg.value(metadata i32 %24, metadata !4768, metadata !DIExpression()), !dbg !4771
  %25 = icmp eq i32 %24, 0, !dbg !4804
  br i1 %25, label %27, label %26, !dbg !4806

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4807
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4809
  unreachable, !dbg !4809

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !4810
  call void @llvm.dbg.value(metadata i32 %28, metadata !4768, metadata !DIExpression()), !dbg !4771
  %29 = icmp eq i32 %28, 0, !dbg !4811
  br i1 %29, label %31, label %30, !dbg !4813

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4814
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4816
  unreachable, !dbg !4816

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !4817
  call void @llvm.dbg.value(metadata i32 %32, metadata !4768, metadata !DIExpression()), !dbg !4771
  %33 = icmp eq i32 %32, 0, !dbg !4818
  br i1 %33, label %35, label %34, !dbg !4820

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4821
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4823
  unreachable, !dbg !4823

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !4824
  call void @llvm.dbg.value(metadata i32 %36, metadata !4768, metadata !DIExpression()), !dbg !4771
  %37 = icmp eq i32 %36, 0, !dbg !4825
  br i1 %37, label %39, label %38, !dbg !4827

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4828
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4830
  unreachable, !dbg !4830

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4831
  %41 = load i32, i32* %40, align 4, !dbg !4831
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !4832
  br label %43, !dbg !4833

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !4834
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4835
  %45 = load i32, i32* %44, align 4, !dbg !4835
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !4836
  call void @llvm.dbg.value(metadata i32 %46, metadata !4769, metadata !DIExpression()), !dbg !4771
  %47 = icmp eq i32 %46, 0, !dbg !4837
  br i1 %47, label %49, label %48, !dbg !4839

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4840
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !4842
  unreachable, !dbg !4842

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4843
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !4844
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4845
  store i8* null, i8** %51, align 4, !dbg !4846
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !4847
  store i8 0, i8* %52, align 1, !dbg !4848
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !4849
  store i32 0, i32* %53, align 4, !dbg !4850
  store volatile i32 0, i32* %5, align 4, !dbg !4851
  br label %54, !dbg !4852

54:                                               ; preds = %3, %49
  %55 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4771
  br label %56, !dbg !4853

56:                                               ; preds = %54, %1
  %57 = phi i32 [ -4, %1 ], [ %55, %54 ], !dbg !4771
  ret i32 %57, !dbg !4853
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4854 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4858, metadata !DIExpression()), !dbg !4859
  %2 = icmp ult i32 %0, 4, !dbg !4860
  ret i1 %2, !dbg !4861
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_restore_all_registers() local_unnamed_addr #0 !dbg !4862 {
  store i1 true, i1* @g_uart_restore_init, align 1, !dbg !4869
  call void @llvm.dbg.value(metadata i32 0, metadata !4865, metadata !DIExpression()), !dbg !4870
  br label %1, !dbg !4871

1:                                                ; preds = %0, %51
  %2 = phi i32 [ 0, %0 ], [ %52, %51 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !4865, metadata !DIExpression()), !dbg !4870
  %3 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %2, !dbg !4873
  %4 = load volatile i32, i32* %3, align 4, !dbg !4873
  call void @llvm.dbg.value(metadata i32 %4, metadata !4867, metadata !DIExpression()), !dbg !4870
  %5 = icmp eq i32 %4, 0, !dbg !4876
  br i1 %5, label %9, label %6, !dbg !4878

6:                                                ; preds = %1
  store volatile i32 0, i32* %3, align 4, !dbg !4879
  %7 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %2, !dbg !4881
  %8 = tail call i32 @hal_uart_init(i32 noundef %2, %struct.hal_uart_config_t* noundef nonnull %7) #21, !dbg !4882
  br label %9, !dbg !4883

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %2, !dbg !4884
  %11 = load i32, i32* %10, align 4, !dbg !4884
  switch i32 %11, label %30 [
    i32 1, label %12
    i32 2, label %28
  ], !dbg !4886

12:                                               ; preds = %9
  %13 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %2, !dbg !4887
  %14 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %13, align 4, !dbg !4887
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %14, metadata !4866, metadata !DIExpression()), !dbg !4870
  %15 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 0, !dbg !4889
  %16 = load i8, i8* %15, align 1, !dbg !4889
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %14, i8 noundef zeroext %16) #20, !dbg !4890
  %17 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %2, i32 0, !dbg !4891
  %18 = load i32, i32* %17, align 4, !dbg !4891
  %19 = udiv i32 12000000, %18, !dbg !4892
  %20 = add nuw nsw i32 %19, 1, !dbg !4893
  call void @llvm.dbg.value(metadata i32 %20, metadata !4864, metadata !DIExpression()), !dbg !4870
  %21 = tail call i32 @hal_gpt_delay_us(i32 noundef %20) #20, !dbg !4894
  %22 = load i8, i8* %15, align 1, !dbg !4895
  %23 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 1, !dbg !4896
  %24 = load i8, i8* %23, align 1, !dbg !4896
  %25 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %2, i32 2, !dbg !4897
  %26 = load i8, i8* %25, align 1, !dbg !4897
  %27 = tail call i32 @hal_uart_set_software_flowcontrol(i32 noundef %2, i8 noundef zeroext %22, i8 noundef zeroext %24, i8 noundef zeroext %26) #21, !dbg !4898
  br label %30, !dbg !4899

28:                                               ; preds = %9
  %29 = tail call i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %2) #21, !dbg !4900
  br label %30, !dbg !4903

30:                                               ; preds = %9, %28, %12
  %31 = icmp eq i32 %4, 2, !dbg !4904
  br i1 %31, label %32, label %40, !dbg !4906

32:                                               ; preds = %30
  %33 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %2, !dbg !4907
  %34 = tail call i32 @hal_uart_set_dma(i32 noundef %2, %struct.hal_uart_dma_config_t* noundef nonnull %33) #21, !dbg !4909
  %35 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 0, !dbg !4910
  %36 = load void (i32, i8*)*, void (i32, i8*)** %35, align 4, !dbg !4910
  %37 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %2, i32 1, !dbg !4911
  %38 = load i8*, i8** %37, align 4, !dbg !4911
  %39 = tail call i32 @hal_uart_register_callback(i32 noundef %2, void (i32, i8*)* noundef %36, i8* noundef %38) #21, !dbg !4912
  br label %40, !dbg !4913

40:                                               ; preds = %32, %30
  %41 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %2, !dbg !4914
  %42 = load i8, i8* %41, align 1, !dbg !4914
  %43 = tail call zeroext i1 @hal_sleep_manager_is_sleep_handle_alive(i8 noundef zeroext %42) #20, !dbg !4915
  call void @llvm.dbg.value(metadata i1 %43, metadata !4868, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4870
  br i1 %43, label %44, label %51, !dbg !4916

44:                                               ; preds = %40
  %45 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_irq_pending_status, i32 0, i32 %2, !dbg !4918
  %46 = load i8, i8* %45, align 1, !dbg !4918, !range !2650
  %47 = icmp eq i8 %46, 0, !dbg !4918
  br i1 %47, label %51, label %48, !dbg !4919

48:                                               ; preds = %44
  %49 = load i8, i8* %41, align 1, !dbg !4920
  %50 = tail call i32 @hal_sleep_manager_unlock_sleep(i8 noundef zeroext %49) #20, !dbg !4922
  br label %51, !dbg !4923

51:                                               ; preds = %40, %44, %48
  %52 = add nuw nsw i32 %2, 1, !dbg !4924
  call void @llvm.dbg.value(metadata i32 %52, metadata !4865, metadata !DIExpression()), !dbg !4870
  %53 = icmp eq i32 %52, 4, !dbg !4925
  br i1 %53, label %54, label %1, !dbg !4871, !llvm.loop !4926

54:                                               ; preds = %51
  store i1 false, i1* @g_uart_restore_init, align 1, !dbg !4928
  ret void, !dbg !4929
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4930 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4935, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4936, metadata !DIExpression()), !dbg !4942
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4943
  br i1 %3, label %4, label %59, !dbg !4945

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4946
  br i1 %5, label %6, label %59, !dbg !4947

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4948
  call void @llvm.dbg.value(metadata i32 %7, metadata !4940, metadata !DIExpression()), !dbg !4942
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4949
  %9 = load volatile i32, i32* %8, align 4, !dbg !4949
  %10 = icmp eq i32 %9, 0, !dbg !4951
  br i1 %10, label %12, label %11, !dbg !4952

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4953
  br label %59, !dbg !4955

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_restore_init, align 1, !dbg !4956
  br i1 %13, label %19, label %14, !dbg !4958

14:                                               ; preds = %12
  %15 = getelementptr inbounds [0 x i8*], [0 x i8*]* bitcast ([4 x i8*]* @g_uart_sleep_handler_name to [0 x i8*]*), i32 0, i32 %0, !dbg !4959
  %16 = load i8*, i8** %15, align 4, !dbg !4959
  %17 = tail call zeroext i8 @hal_sleep_manager_set_sleep_handle(i8* noundef %16) #20, !dbg !4961
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !4962
  store i8 %17, i8* %18, align 1, !dbg !4963
  br label %19, !dbg !4964

19:                                               ; preds = %14, %12
  %20 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !4965
  br i1 %20, label %32, label %21, !dbg !4967

21:                                               ; preds = %19, %21
  %22 = phi i32 [ %29, %21 ], [ 0, %19 ]
  call void @llvm.dbg.value(metadata i32 %22, metadata !4938, metadata !DIExpression()), !dbg !4942
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %22, !dbg !4968
  store volatile i32 0, i32* %23, align 4, !dbg !4973
  %24 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %22, !dbg !4974
  store i32 0, i32* %24, align 4, !dbg !4975
  %25 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %22, !dbg !4976
  store i8 0, i8* %25, align 1, !dbg !4977
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %22, !dbg !4978
  store i8 0, i8* %26, align 1, !dbg !4979
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %22, i32 1, !dbg !4980
  store i8* null, i8** %27, align 4, !dbg !4981
  %28 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %22, i32 0, !dbg !4982
  store void (i32, i8*)* null, void (i32, i8*)** %28, align 4, !dbg !4983
  %29 = add nuw nsw i32 %22, 1, !dbg !4984
  call void @llvm.dbg.value(metadata i32 %29, metadata !4938, metadata !DIExpression()), !dbg !4942
  %30 = icmp eq i32 %29, 4, !dbg !4985
  br i1 %30, label %31, label %21, !dbg !4986, !llvm.loop !4987

31:                                               ; preds = %21
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !4989
  br label %32, !dbg !4990

32:                                               ; preds = %31, %19
  %33 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4991
  %34 = load i32, i32* %33, align 4, !dbg !4991
  %35 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !4992
  store i32 %34, i32* %35, align 4, !dbg !4993
  %36 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4994
  %37 = load i32, i32* %36, align 4, !dbg !4994
  %38 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 1, !dbg !4995
  store i32 %37, i32* %38, align 4, !dbg !4996
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4997
  %40 = load i32, i32* %39, align 4, !dbg !4997
  %41 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 2, !dbg !4998
  store i32 %40, i32* %41, align 4, !dbg !4999
  %42 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !5000
  %43 = load i32, i32* %42, align 4, !dbg !5000
  %44 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 3, !dbg !5001
  store i32 %43, i32* %44, align 4, !dbg !5002
  store volatile i32 1, i32* %8, align 4, !dbg !5003
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5004
  %45 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5005
  %46 = load i32, i32* %45, align 4, !dbg !5005
  %47 = tail call i32 @hal_clock_enable(i32 noundef %46) #20, !dbg !5006
  call void @llvm.dbg.value(metadata i32 %47, metadata !4941, metadata !DIExpression()), !dbg !4942
  %48 = icmp eq i32 %47, 0, !dbg !5007
  br i1 %48, label %50, label %49, !dbg !5009

49:                                               ; preds = %32
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5010
  unreachable, !dbg !5010

50:                                               ; preds = %32
  %51 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5012
  %52 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %51, align 4, !dbg !5012
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %52, metadata !4937, metadata !DIExpression()), !dbg !4942
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %52) #20, !dbg !5013
  %53 = load i32, i32* %33, align 4, !dbg !5014
  %54 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %53, !dbg !5015
  %55 = load i32, i32* %54, align 4, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %55, metadata !4939, metadata !DIExpression()), !dbg !4942
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %52, i32 noundef %55) #20, !dbg !5016
  %56 = load i32, i32* %36, align 4, !dbg !5017
  %57 = load i32, i32* %39, align 4, !dbg !5018
  %58 = load i32, i32* %42, align 4, !dbg !5019
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %52, i32 noundef %56, i32 noundef %57, i32 noundef %58) #20, !dbg !5020
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %52) #20, !dbg !5021
  tail call void @uart_set_sleep_mode(%struct.UART_REGISTER_T* noundef %52) #20, !dbg !5022
  br label %59, !dbg !5023

59:                                               ; preds = %2, %4, %50, %11
  %60 = phi i32 [ -3, %11 ], [ 0, %50 ], [ -4, %4 ], [ -4, %2 ], !dbg !4942
  ret i32 %60, !dbg !5024
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !5025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5029, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8 %1, metadata !5030, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8 %2, metadata !5031, metadata !DIExpression()), !dbg !5034
  call void @llvm.dbg.value(metadata i8 %3, metadata !5032, metadata !DIExpression()), !dbg !5034
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5035
  br i1 %5, label %6, label %17, !dbg !5037

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5038
  %8 = load volatile i32, i32* %7, align 4, !dbg !5038
  %9 = icmp eq i32 %8, 0, !dbg !5040
  br i1 %9, label %17, label %10, !dbg !5041

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5042
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !5042
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !5033, metadata !DIExpression()), !dbg !5034
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !5043
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !5044
  store i32 1, i32* %13, align 4, !dbg !5045
  %14 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 0, !dbg !5046
  store i8 %1, i8* %14, align 1, !dbg !5047
  %15 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 1, !dbg !5048
  store i8 %2, i8* %15, align 1, !dbg !5049
  %16 = getelementptr inbounds [4 x %struct.uart_sw_flowcontrol_config_t], [4 x %struct.uart_sw_flowcontrol_config_t]* @g_uart_sw_flowcontrol_config, i32 0, i32 %0, i32 2, !dbg !5050
  store i8 %3, i8* %16, align 1, !dbg !5051
  br label %17, !dbg !5052

17:                                               ; preds = %6, %4, %10
  %18 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !5034
  ret i32 %18, !dbg !5053
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5054 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5056, metadata !DIExpression()), !dbg !5058
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5059
  br i1 %2, label %3, label %11, !dbg !5061

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5062
  %5 = load volatile i32, i32* %4, align 4, !dbg !5062
  %6 = icmp eq i32 %5, 0, !dbg !5064
  br i1 %6, label %11, label %7, !dbg !5065

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5066
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5066
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5057, metadata !DIExpression()), !dbg !5058
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5067
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !5068
  store i32 2, i32* %10, align 4, !dbg !5069
  br label %11, !dbg !5070

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5058
  ret i32 %12, !dbg !5071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5072 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5078, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !5079, metadata !DIExpression()), !dbg !5090
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !5091
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5091
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !5081, metadata !DIExpression()), !dbg !5092
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5093
  br i1 %5, label %6, label %101, !dbg !5095

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !5096
  %8 = load i8*, i8** %7, align 4, !dbg !5096
  %9 = icmp eq i8* %8, null, !dbg !5098
  br i1 %9, label %101, label %10, !dbg !5099

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !5100
  %12 = load i8*, i8** %11, align 4, !dbg !5100
  %13 = icmp eq i8* %12, null, !dbg !5101
  br i1 %13, label %101, label %14, !dbg !5102

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !5103
  %16 = load i32, i32* %15, align 4, !dbg !5103
  %17 = icmp ugt i32 %16, 131071, !dbg !5105
  br i1 %17, label %101, label %18, !dbg !5106

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !5107
  %20 = load i32, i32* %19, align 4, !dbg !5107
  %21 = icmp ugt i32 %20, 131071, !dbg !5108
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !5109
  br i1 %23, label %101, label %24, !dbg !5109

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !5110
  %26 = load i32, i32* %25, align 4, !dbg !5110
  %27 = icmp ugt i32 %26, 131071, !dbg !5112
  br i1 %27, label %101, label %28, !dbg !5113

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !5114
  %30 = load i32, i32* %29, align 4, !dbg !5114
  %31 = icmp ugt i32 %30, 131071, !dbg !5115
  br i1 %31, label %101, label %32, !dbg !5116

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !5117
  %34 = load i32, i32* %33, align 4, !dbg !5117
  %35 = icmp ugt i32 %34, 131071, !dbg !5118
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !5119
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !5119
  br i1 %39, label %101, label %40, !dbg !5119

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5120
  %42 = load volatile i32, i32* %41, align 4, !dbg !5120
  %43 = icmp eq i32 %42, 1, !dbg !5122
  br i1 %43, label %44, label %101, !dbg !5123

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5124
  call void @llvm.dbg.value(metadata i32 %45, metadata !5087, metadata !DIExpression()), !dbg !5090
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5125
  call void @llvm.dbg.value(metadata i32 %46, metadata !5088, metadata !DIExpression()), !dbg !5090
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !5126
  call void @llvm.dbg.value(metadata i32 %47, metadata !5089, metadata !DIExpression()), !dbg !5090
  %48 = icmp eq i32 %47, 0, !dbg !5127
  br i1 %48, label %50, label %49, !dbg !5129

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5130
  unreachable, !dbg !5130

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !5132
  %52 = ptrtoint i8* %51 to i32, !dbg !5133
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !5134
  store i32 %52, i32* %53, align 4, !dbg !5135
  %54 = load i32, i32* %15, align 4, !dbg !5136
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !5137
  store i32 %54, i32* %55, align 4, !dbg !5138
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5139
  call void @llvm.dbg.value(metadata i32 %56, metadata !5089, metadata !DIExpression()), !dbg !5090
  %57 = icmp eq i32 %56, 0, !dbg !5140
  br i1 %57, label %59, label %58, !dbg !5142

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5143
  unreachable, !dbg !5143

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !5145
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !5146
  call void @llvm.dbg.value(metadata i32 %61, metadata !5089, metadata !DIExpression()), !dbg !5090
  %62 = icmp eq i32 %61, 0, !dbg !5147
  br i1 %62, label %64, label %63, !dbg !5149

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5150
  unreachable, !dbg !5150

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !5152
  call void @llvm.dbg.value(metadata i32 %65, metadata !5089, metadata !DIExpression()), !dbg !5090
  %66 = icmp eq i32 %65, 0, !dbg !5153
  br i1 %66, label %68, label %67, !dbg !5155

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5156
  unreachable, !dbg !5156

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5158
  %70 = ptrtoint i8* %69 to i32, !dbg !5159
  store i32 %70, i32* %53, align 4, !dbg !5160
  %71 = load i32, i32* %25, align 4, !dbg !5161
  store i32 %71, i32* %55, align 4, !dbg !5162
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5163
  call void @llvm.dbg.value(metadata i32 %72, metadata !5089, metadata !DIExpression()), !dbg !5090
  %73 = icmp eq i32 %72, 0, !dbg !5164
  br i1 %73, label %75, label %74, !dbg !5166

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5167
  unreachable, !dbg !5167

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5169
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !5170
  call void @llvm.dbg.value(metadata i32 %77, metadata !5089, metadata !DIExpression()), !dbg !5090
  %78 = icmp eq i32 %77, 0, !dbg !5171
  br i1 %78, label %80, label %79, !dbg !5173

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5174
  unreachable, !dbg !5174

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5176
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !5177
  call void @llvm.dbg.value(metadata i32 %82, metadata !5089, metadata !DIExpression()), !dbg !5090
  %83 = icmp eq i32 %82, 0, !dbg !5178
  br i1 %83, label %85, label %84, !dbg !5180

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5181
  unreachable, !dbg !5181

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !5183
  call void @llvm.dbg.value(metadata i32 %86, metadata !5080, metadata !DIExpression()), !dbg !5090
  %87 = load i8*, i8** %7, align 4, !dbg !5184
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5185
  store i8* %87, i8** %88, align 4, !dbg !5186
  %89 = load i32, i32* %15, align 4, !dbg !5187
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5188
  store i32 %89, i32* %90, align 4, !dbg !5189
  %91 = load i32, i32* %19, align 4, !dbg !5190
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5191
  store i32 %91, i32* %92, align 4, !dbg !5192
  %93 = load i32, i32* %33, align 4, !dbg !5193
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5194
  store i32 %93, i32* %94, align 4, !dbg !5195
  %95 = load i8*, i8** %11, align 4, !dbg !5196
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5197
  store i8* %95, i8** %96, align 4, !dbg !5198
  %97 = load i32, i32* %25, align 4, !dbg !5199
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5200
  store i32 %97, i32* %98, align 4, !dbg !5201
  %99 = load i32, i32* %29, align 4, !dbg !5202
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5203
  store i32 %99, i32* %100, align 4, !dbg !5204
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !5205
  br label %101, !dbg !5206

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !5090
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5207
  ret i32 %102, !dbg !5207
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5208 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5212, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5213, metadata !DIExpression()), !dbg !5220
  call void @llvm.dbg.value(metadata i8* %2, metadata !5214, metadata !DIExpression()), !dbg !5220
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5221
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !5223
  br i1 %6, label %7, label %39, !dbg !5223

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5224
  call void @llvm.dbg.value(metadata i32 %8, metadata !5217, metadata !DIExpression()), !dbg !5220
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5225
  %10 = load volatile i32, i32* %9, align 4, !dbg !5225
  %11 = icmp eq i32 %10, 1, !dbg !5227
  br i1 %11, label %12, label %37, !dbg !5228

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5229
  call void @llvm.dbg.value(metadata i32 %13, metadata !5215, metadata !DIExpression()), !dbg !5220
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5230
  call void @llvm.dbg.value(metadata i32 %14, metadata !5216, metadata !DIExpression()), !dbg !5220
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5231
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !5232
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5233
  store i8* %2, i8** %16, align 4, !dbg !5234
  %17 = shl i32 %0, 1, !dbg !5235
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !5236
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !5237
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !5238
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %20, metadata !5218, metadata !DIExpression()), !dbg !5220
  %21 = icmp eq i32 %20, 0, !dbg !5240
  br i1 %21, label %23, label %22, !dbg !5242

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5243
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5245
  unreachable, !dbg !5245

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !5246
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !5247
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !5248
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !5249
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !5250
  call void @llvm.dbg.value(metadata i32 %27, metadata !5218, metadata !DIExpression()), !dbg !5220
  %28 = icmp eq i32 %27, 0, !dbg !5251
  br i1 %28, label %30, label %29, !dbg !5253

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5254
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5256
  unreachable, !dbg !5256

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5257
  %32 = load i32, i32* %31, align 4, !dbg !5257
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !5258
  call void @llvm.dbg.value(metadata i32 %33, metadata !5219, metadata !DIExpression()), !dbg !5220
  %34 = icmp eq i32 %33, 0, !dbg !5259
  br i1 %34, label %36, label %35, !dbg !5261

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5262
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5264
  unreachable, !dbg !5264

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !5265
  store volatile i32 2, i32* %9, align 4, !dbg !5266
  br label %37, !dbg !5267

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5220
  br label %39, !dbg !5268

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !5220
  ret i32 %40, !dbg !5268
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !5269 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5274, metadata !DIExpression()), !dbg !5277
  call void @llvm.dbg.value(metadata i8* %1, metadata !5275, metadata !DIExpression()), !dbg !5277
  call void @llvm.dbg.value(metadata i8* %1, metadata !5276, metadata !DIExpression()), !dbg !5277
  %3 = load i8, i8* %1, align 4, !dbg !5278, !range !2650
  %4 = icmp eq i8 %3, 0, !dbg !5278
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !5280
  %6 = bitcast i8* %5 to i32*, !dbg !5280
  %7 = load i32, i32* %6, align 4, !dbg !5280
  br i1 %4, label %9, label %8, !dbg !5281

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5276, metadata !DIExpression()), !dbg !5277
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5282
  br label %10, !dbg !5284

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5285
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !5287
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !5288 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5290, metadata !DIExpression()), !dbg !5295
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5296
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5296
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5291, metadata !DIExpression()), !dbg !5295
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5297
  call void @llvm.dbg.value(metadata i32 %4, metadata !5292, metadata !DIExpression()), !dbg !5295
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5298
  call void @llvm.dbg.value(metadata i32 %5, metadata !5293, metadata !DIExpression()), !dbg !5295
  tail call void @uart_unmask_send_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5299
  %6 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_frist_send_complete_interrupt, i32 0, i32 %0, !dbg !5300
  store i8 1, i8* %6, align 1, !dbg !5301
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5302
  %7 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5303
  %8 = load i32, i32* %7, align 4, !dbg !5303
  %9 = tail call i32 @hal_nvic_enable_irq(i32 noundef %8) #20, !dbg !5304
  %10 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !5305
  call void @llvm.dbg.value(metadata i32 %10, metadata !5294, metadata !DIExpression()), !dbg !5295
  %11 = icmp eq i32 %10, 0, !dbg !5306
  br i1 %11, label %13, label %12, !dbg !5308

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5309
  unreachable, !dbg !5309

13:                                               ; preds = %1
  %14 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !5311
  call void @llvm.dbg.value(metadata i32 %14, metadata !5294, metadata !DIExpression()), !dbg !5295
  %15 = icmp eq i32 %14, 0, !dbg !5312
  br i1 %15, label %17, label %16, !dbg !5314

16:                                               ; preds = %13
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5315
  unreachable, !dbg !5315

17:                                               ; preds = %13
  %18 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !5317
  call void @llvm.dbg.value(metadata i32 %18, metadata !5294, metadata !DIExpression()), !dbg !5295
  %19 = icmp eq i32 %18, 0, !dbg !5318
  br i1 %19, label %21, label %20, !dbg !5320

20:                                               ; preds = %17
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5321
  unreachable, !dbg !5321

21:                                               ; preds = %17
  %22 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !5323
  call void @llvm.dbg.value(metadata i32 %22, metadata !5294, metadata !DIExpression()), !dbg !5295
  %23 = icmp eq i32 %22, 0, !dbg !5324
  br i1 %23, label %25, label %24, !dbg !5326

24:                                               ; preds = %21
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5327
  unreachable, !dbg !5327

25:                                               ; preds = %21
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5329
  ret void, !dbg !5330
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.hal_cache_region_config_t* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !5331 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !5337, metadata !DIExpression()), !dbg !5338
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !5339
  %3 = load i32, i32* %2, align 4, !dbg !5339
  %4 = icmp ult i32 %3, 13, !dbg !5340
  br i1 %4, label %5, label %17, !dbg !5341

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !5342
  %7 = load i32, i32* %6, align 4, !dbg !5342
  %8 = icmp ult i32 %7, 4, !dbg !5343
  br i1 %8, label %9, label %17, !dbg !5344

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !5345
  %11 = load i32, i32* %10, align 4, !dbg !5345
  %12 = icmp ult i32 %11, 2, !dbg !5346
  br i1 %12, label %13, label %17, !dbg !5347

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !5348
  %15 = load i32, i32* %14, align 4, !dbg !5348
  %16 = icmp ult i32 %15, 3, !dbg !5349
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !5338
  ret i1 %18, !dbg !5350
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5351 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5355, metadata !DIExpression()), !dbg !5360
  call void @llvm.dbg.value(metadata i32 %1, metadata !5356, metadata !DIExpression()), !dbg !5360
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5361
  br i1 %3, label %4, label %17, !dbg !5363

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !5364
  br i1 %5, label %6, label %17, !dbg !5365

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5366
  %8 = load volatile i32, i32* %7, align 4, !dbg !5366
  %9 = icmp eq i32 %8, 0, !dbg !5368
  br i1 %9, label %17, label %10, !dbg !5369

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5370
  call void @llvm.dbg.value(metadata i32 %11, metadata !5358, metadata !DIExpression()), !dbg !5360
  %12 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !5371
  store i32 %1, i32* %12, align 4, !dbg !5372
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !5373
  %13 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5374
  %14 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %13, align 4, !dbg !5374
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %14, metadata !5359, metadata !DIExpression()), !dbg !5360
  %15 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !5375
  %16 = load i32, i32* %15, align 4, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %16, metadata !5357, metadata !DIExpression()), !dbg !5360
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %14, i32 noundef %16) #20, !dbg !5376
  br label %17, !dbg !5377

17:                                               ; preds = %6, %2, %4, %10
  %18 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !5360
  ret i32 %18, !dbg !5378
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !5379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5383, metadata !DIExpression()), !dbg !5384
  %2 = icmp ult i32 %0, 13, !dbg !5385
  ret i1 %2, !dbg !5386
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5391, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !5392, metadata !DIExpression()), !dbg !5395
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5396
  br i1 %3, label %4, label %31, !dbg !5398

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !5399
  br i1 %5, label %6, label %31, !dbg !5400

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5401
  %8 = load volatile i32, i32* %7, align 4, !dbg !5401
  %9 = icmp eq i32 %8, 0, !dbg !5403
  br i1 %9, label %31, label %10, !dbg !5404

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5405
  call void @llvm.dbg.value(metadata i32 %11, metadata !5393, metadata !DIExpression()), !dbg !5395
  %12 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !5406
  %13 = load i32, i32* %12, align 4, !dbg !5406
  %14 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 0, !dbg !5407
  store i32 %13, i32* %14, align 4, !dbg !5408
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !5409
  %16 = load i32, i32* %15, align 4, !dbg !5409
  %17 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 1, !dbg !5410
  store i32 %16, i32* %17, align 4, !dbg !5411
  %18 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !5412
  %19 = load i32, i32* %18, align 4, !dbg !5412
  %20 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 2, !dbg !5413
  store i32 %19, i32* %20, align 4, !dbg !5414
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !5415
  %22 = load i32, i32* %21, align 4, !dbg !5415
  %23 = getelementptr inbounds [4 x %struct.hal_uart_config_t], [4 x %struct.hal_uart_config_t]* @g_uart_config, i32 0, i32 %0, i32 3, !dbg !5416
  store i32 %22, i32* %23, align 4, !dbg !5417
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !5418
  %24 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5419
  %25 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %24, align 4, !dbg !5419
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %25, metadata !5394, metadata !DIExpression()), !dbg !5395
  %26 = load i32, i32* %12, align 4, !dbg !5420
  %27 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %26) #21, !dbg !5421
  %28 = load i32, i32* %15, align 4, !dbg !5422
  %29 = load i32, i32* %18, align 4, !dbg !5423
  %30 = load i32, i32* %21, align 4, !dbg !5424
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %25, i32 noundef %28, i32 noundef %29, i32 noundef %30) #20, !dbg !5425
  br label %31, !dbg !5426

31:                                               ; preds = %6, %2, %4, %10
  %32 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !5395
  ret i32 %32, !dbg !5427
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5428 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5432, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata i8 %1, metadata !5433, metadata !DIExpression()), !dbg !5435
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5436
  br i1 %3, label %4, label %11, !dbg !5438

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5439
  %6 = load volatile i32, i32* %5, align 4, !dbg !5439
  %7 = icmp eq i32 %6, 1, !dbg !5441
  br i1 %7, label %8, label %11, !dbg !5442

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5443
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5443
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5434, metadata !DIExpression()), !dbg !5435
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !5444
  br label %11, !dbg !5445

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !5445
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5446 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5452, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i8* %1, metadata !5453, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 %2, metadata !5454, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i32 0, metadata !5455, metadata !DIExpression()), !dbg !5456
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5457
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5459
  br i1 %6, label %7, label %20, !dbg !5459

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5460
  %9 = load volatile i32, i32* %8, align 4, !dbg !5460
  %10 = icmp ne i32 %9, 1, !dbg !5462
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5463
  call void @llvm.dbg.value(metadata i32 0, metadata !5455, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i8* %1, metadata !5453, metadata !DIExpression()), !dbg !5456
  br i1 %12, label %20, label %13, !dbg !5463

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5455, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.value(metadata i8* %15, metadata !5453, metadata !DIExpression()), !dbg !5456
  %16 = load i8, i8* %15, align 1, !dbg !5464
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !5468
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5469
  call void @llvm.dbg.value(metadata i8* %17, metadata !5453, metadata !DIExpression()), !dbg !5456
  %18 = add nuw i32 %14, 1, !dbg !5470
  call void @llvm.dbg.value(metadata i32 %18, metadata !5455, metadata !DIExpression()), !dbg !5456
  %19 = icmp eq i32 %18, %2, !dbg !5471
  br i1 %19, label %20, label %13, !dbg !5472, !llvm.loop !5473

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5456
  ret i32 %21, !dbg !5475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5476 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5478, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata i8* %1, metadata !5479, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata i32 %2, metadata !5480, metadata !DIExpression()), !dbg !5487
  %5 = bitcast i32* %4 to i8*, !dbg !5488
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5488
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5489
  %7 = xor i1 %6, true, !dbg !5491
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5491
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5491
  br i1 %11, label %54, label %12, !dbg !5491

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5492
  %14 = load volatile i32, i32* %13, align 4, !dbg !5492
  %15 = icmp eq i32 %14, 2, !dbg !5494
  br i1 %15, label %16, label %54, !dbg !5495

16:                                               ; preds = %12
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5496
  call void @llvm.dbg.value(metadata i32 %17, metadata !5486, metadata !DIExpression()), !dbg !5487
  %18 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_send_lock_status, i32 0, i32 %0, !dbg !5497
  %19 = load i8, i8* %18, align 1, !dbg !5497, !range !2650
  %20 = icmp eq i8 %19, 0, !dbg !5499
  br i1 %20, label %21, label %25, !dbg !5500

21:                                               ; preds = %16
  %22 = getelementptr inbounds [4 x i8], [4 x i8]* @g_uart_sleep_handler, i32 0, i32 %0, !dbg !5501
  %23 = load i8, i8* %22, align 1, !dbg !5501
  %24 = tail call i32 @hal_sleep_manager_lock_sleep(i8 noundef zeroext %23) #20, !dbg !5503
  store i8 1, i8* %18, align 1, !dbg !5504
  br label %25, !dbg !5505

25:                                               ; preds = %21, %16
  tail call void @restore_interrupt_mask(i32 noundef %17) #20, !dbg !5506
  %26 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5507
  call void @llvm.dbg.value(metadata i32 %26, metadata !5481, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata i32* %4, metadata !5484, metadata !DIExpression(DW_OP_deref)), !dbg !5487
  %27 = call i32 @vdma_get_available_send_space(i32 noundef %26, i32* noundef nonnull %4) #20, !dbg !5508
  call void @llvm.dbg.value(metadata i32 %27, metadata !5485, metadata !DIExpression()), !dbg !5487
  %28 = icmp eq i32 %27, 0, !dbg !5509
  br i1 %28, label %30, label %29, !dbg !5511

29:                                               ; preds = %25
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5512
  unreachable, !dbg !5512

30:                                               ; preds = %25
  %31 = load i32, i32* %4, align 4, !dbg !5514
  call void @llvm.dbg.value(metadata i32 %31, metadata !5484, metadata !DIExpression()), !dbg !5487
  %32 = icmp ult i32 %31, %2, !dbg !5516
  %33 = select i1 %32, i32 %31, i32 %2
  call void @llvm.dbg.value(metadata i32 %33, metadata !5483, metadata !DIExpression()), !dbg !5487
  call void @llvm.dbg.value(metadata i32 0, metadata !5482, metadata !DIExpression()), !dbg !5487
  %34 = icmp eq i32 %33, 0, !dbg !5517
  br i1 %34, label %47, label %37, !dbg !5520

35:                                               ; preds = %37
  call void @llvm.dbg.value(metadata i32 %43, metadata !5482, metadata !DIExpression()), !dbg !5487
  %36 = icmp eq i32 %43, %33, !dbg !5517
  br i1 %36, label %45, label %37, !dbg !5520, !llvm.loop !5521

37:                                               ; preds = %30, %35
  %38 = phi i32 [ %43, %35 ], [ 0, %30 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !5482, metadata !DIExpression()), !dbg !5487
  %39 = getelementptr inbounds i8, i8* %1, i32 %38, !dbg !5523
  %40 = load i8, i8* %39, align 1, !dbg !5523
  %41 = call i32 @vdma_push_data(i32 noundef %26, i8 noundef zeroext %40) #20, !dbg !5525
  call void @llvm.dbg.value(metadata i32 %41, metadata !5485, metadata !DIExpression()), !dbg !5487
  %42 = icmp eq i32 %41, 0, !dbg !5526
  %43 = add nuw i32 %38, 1, !dbg !5528
  call void @llvm.dbg.value(metadata i32 %43, metadata !5482, metadata !DIExpression()), !dbg !5487
  br i1 %42, label %35, label %44, !dbg !5529

44:                                               ; preds = %37
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5530
  unreachable, !dbg !5530

45:                                               ; preds = %35
  %46 = load i32, i32* %4, align 4, !dbg !5532
  br label %47, !dbg !5532

47:                                               ; preds = %45, %30
  %48 = phi i32 [ %46, %45 ], [ %31, %30 ], !dbg !5532
  call void @llvm.dbg.value(metadata i32 %48, metadata !5484, metadata !DIExpression()), !dbg !5487
  %49 = icmp eq i32 %33, %48, !dbg !5534
  br i1 %49, label %50, label %54, !dbg !5535

50:                                               ; preds = %47
  %51 = call i32 @vdma_enable_interrupt(i32 noundef %26) #20, !dbg !5536
  call void @llvm.dbg.value(metadata i32 %51, metadata !5485, metadata !DIExpression()), !dbg !5487
  %52 = icmp eq i32 %51, 0, !dbg !5538
  br i1 %52, label %54, label %53, !dbg !5540

53:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5541
  unreachable, !dbg !5541

54:                                               ; preds = %47, %50, %12, %3
  %55 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %33, %50 ], [ %33, %47 ], !dbg !5487
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5543
  ret i32 %55, !dbg !5543
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !5544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5548, metadata !DIExpression()), !dbg !5551
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5552
  br i1 %2, label %3, label %11, !dbg !5554

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5555
  %5 = load volatile i32, i32* %4, align 4, !dbg !5555
  %6 = icmp eq i32 %5, 1, !dbg !5557
  br i1 %6, label %7, label %11, !dbg !5558

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5559
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5559
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5550, metadata !DIExpression()), !dbg !5551
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5560
  call void @llvm.dbg.value(metadata i8 %10, metadata !5549, metadata !DIExpression()), !dbg !5551
  br label %11, !dbg !5561

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5551
  ret i8 %12, !dbg !5562
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !5563 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5567, metadata !DIExpression()), !dbg !5570
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5571
  br i1 %2, label %3, label %11, !dbg !5573

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5574
  %5 = load volatile i32, i32* %4, align 4, !dbg !5574
  %6 = icmp eq i32 %5, 1, !dbg !5576
  br i1 %6, label %7, label %11, !dbg !5577

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5578
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5578
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5569, metadata !DIExpression()), !dbg !5570
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5579
  call void @llvm.dbg.value(metadata i32 %10, metadata !5568, metadata !DIExpression()), !dbg !5570
  br label %11, !dbg !5580

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5570
  ret i32 %12, !dbg !5581
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5586, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.value(metadata i8* %1, metadata !5587, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.value(metadata i32 %2, metadata !5588, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.value(metadata i8* %1, metadata !5590, metadata !DIExpression()), !dbg !5591
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5592
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5594
  br i1 %6, label %7, label %19, !dbg !5594

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5595
  %9 = load volatile i32, i32* %8, align 4, !dbg !5595
  %10 = icmp ne i32 %9, 1, !dbg !5597
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5598
  call void @llvm.dbg.value(metadata i32 0, metadata !5589, metadata !DIExpression()), !dbg !5591
  br i1 %12, label %19, label %13, !dbg !5598

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5589, metadata !DIExpression()), !dbg !5591
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !5599
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !5603
  store i8 %15, i8* %16, align 1, !dbg !5604
  %17 = add nuw i32 %14, 1, !dbg !5605
  call void @llvm.dbg.value(metadata i32 %17, metadata !5589, metadata !DIExpression()), !dbg !5591
  %18 = icmp eq i32 %17, %2, !dbg !5606
  br i1 %18, label %19, label %13, !dbg !5607, !llvm.loop !5608

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5591
  ret i32 %20, !dbg !5610
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5611 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5613, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata i8* %1, metadata !5614, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata i32 %2, metadata !5615, metadata !DIExpression()), !dbg !5621
  %5 = bitcast i32* %4 to i8*, !dbg !5622
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5622
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5623
  %7 = xor i1 %6, true, !dbg !5625
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5625
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5625
  br i1 %11, label %44, label %12, !dbg !5625

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5626
  %14 = load volatile i32, i32* %13, align 4, !dbg !5626
  %15 = icmp eq i32 %14, 2, !dbg !5628
  br i1 %15, label %16, label %44, !dbg !5629

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5630
  call void @llvm.dbg.value(metadata i32 %17, metadata !5616, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata i32* %4, metadata !5618, metadata !DIExpression(DW_OP_deref)), !dbg !5621
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5631
  call void @llvm.dbg.value(metadata i32 %18, metadata !5620, metadata !DIExpression()), !dbg !5621
  %19 = icmp eq i32 %18, 0, !dbg !5632
  br i1 %19, label %21, label %20, !dbg !5634

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5635
  unreachable, !dbg !5635

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5637
  call void @llvm.dbg.value(metadata i32 %22, metadata !5618, metadata !DIExpression()), !dbg !5621
  %23 = icmp ult i32 %22, %2, !dbg !5639
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5617, metadata !DIExpression()), !dbg !5621
  call void @llvm.dbg.value(metadata i32 0, metadata !5619, metadata !DIExpression()), !dbg !5621
  %25 = icmp eq i32 %24, 0, !dbg !5640
  br i1 %25, label %37, label %28, !dbg !5643

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !5619, metadata !DIExpression()), !dbg !5621
  %27 = icmp eq i32 %33, %24, !dbg !5640
  br i1 %27, label %35, label %28, !dbg !5643, !llvm.loop !5644

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5619, metadata !DIExpression()), !dbg !5621
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5646
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !5648
  call void @llvm.dbg.value(metadata i32 %31, metadata !5620, metadata !DIExpression()), !dbg !5621
  %32 = icmp eq i32 %31, 0, !dbg !5649
  %33 = add nuw i32 %29, 1, !dbg !5651
  call void @llvm.dbg.value(metadata i32 %33, metadata !5619, metadata !DIExpression()), !dbg !5621
  br i1 %32, label %26, label %34, !dbg !5652

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5653
  unreachable, !dbg !5653

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !5655
  br label %37, !dbg !5655

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !5655
  call void @llvm.dbg.value(metadata i32 %38, metadata !5618, metadata !DIExpression()), !dbg !5621
  %39 = icmp eq i32 %24, %38, !dbg !5657
  br i1 %39, label %40, label %44, !dbg !5658

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5659
  call void @llvm.dbg.value(metadata i32 %41, metadata !5620, metadata !DIExpression()), !dbg !5621
  %42 = icmp eq i32 %41, 0, !dbg !5661
  br i1 %42, label %44, label %43, !dbg !5663

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5664
  unreachable, !dbg !5664

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !5621
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5666
  ret i32 %45, !dbg !5666
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !5667 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5669, metadata !DIExpression()), !dbg !5673
  %3 = bitcast i32* %2 to i8*, !dbg !5674
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5674
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5675
  br i1 %4, label %5, label %16, !dbg !5677

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5678
  %7 = load volatile i32, i32* %6, align 4, !dbg !5678
  %8 = icmp eq i32 %7, 2, !dbg !5680
  br i1 %8, label %9, label %16, !dbg !5681

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5682
  call void @llvm.dbg.value(metadata i32 %10, metadata !5670, metadata !DIExpression()), !dbg !5673
  call void @llvm.dbg.value(metadata i32* %2, metadata !5671, metadata !DIExpression(DW_OP_deref)), !dbg !5673
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5683
  call void @llvm.dbg.value(metadata i32 %11, metadata !5672, metadata !DIExpression()), !dbg !5673
  %12 = icmp eq i32 %11, 0, !dbg !5684
  br i1 %12, label %14, label %13, !dbg !5686

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5687
  unreachable, !dbg !5687

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5689
  call void @llvm.dbg.value(metadata i32 %15, metadata !5671, metadata !DIExpression()), !dbg !5673
  br label %16, !dbg !5690

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5673
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5691
  ret i32 %17, !dbg !5691
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !5692 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5694, metadata !DIExpression()), !dbg !5698
  %3 = bitcast i32* %2 to i8*, !dbg !5699
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5699
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5700
  br i1 %4, label %5, label %16, !dbg !5702

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5703
  %7 = load volatile i32, i32* %6, align 4, !dbg !5703
  %8 = icmp eq i32 %7, 2, !dbg !5705
  br i1 %8, label %9, label %16, !dbg !5706

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5707
  call void @llvm.dbg.value(metadata i32 %10, metadata !5695, metadata !DIExpression()), !dbg !5698
  call void @llvm.dbg.value(metadata i32* %2, metadata !5696, metadata !DIExpression(DW_OP_deref)), !dbg !5698
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5708
  call void @llvm.dbg.value(metadata i32 %11, metadata !5697, metadata !DIExpression()), !dbg !5698
  %12 = icmp eq i32 %11, 0, !dbg !5709
  br i1 %12, label %14, label %13, !dbg !5711

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.39, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.40, i32 0, i32 0)) #23, !dbg !5712
  unreachable, !dbg !5712

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5714
  call void @llvm.dbg.value(metadata i32 %15, metadata !5696, metadata !DIExpression()), !dbg !5698
  br label %16, !dbg !5715

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5698
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5716
  ret i32 %17, !dbg !5716
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5717 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5719, metadata !DIExpression()), !dbg !5721
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5722
  br i1 %2, label %3, label %11, !dbg !5724

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5725
  %5 = load volatile i32, i32* %4, align 4, !dbg !5725
  %6 = icmp eq i32 %5, 0, !dbg !5727
  br i1 %6, label %11, label %7, !dbg !5728

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5729
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5729
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5720, metadata !DIExpression()), !dbg !5721
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5730
  %10 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_flowcontrol_status, i32 0, i32 %0, !dbg !5731
  store i32 0, i32* %10, align 4, !dbg !5732
  br label %11, !dbg !5733

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5721
  ret i32 %12, !dbg !5734
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5735 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5794, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i32 %1, metadata !5795, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5804, metadata !DIExpression()), !dbg !5810
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5811
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5811
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5808, metadata !DIExpression()), !dbg !5812
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5812
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5812
  store i32 1, i32* %5, align 4, !dbg !5812
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5812
  store i32 1, i32* %6, align 4, !dbg !5812
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5812
  store i32 1, i32* %7, align 4, !dbg !5812
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5812
  store i32 1, i32* %8, align 4, !dbg !5812
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5812
  store i32 1, i32* %9, align 4, !dbg !5812
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5813
  store volatile i32 0, i32* %10, align 4, !dbg !5814
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5815
  store volatile i32 0, i32* %11, align 4, !dbg !5816
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5817
  store volatile i32 0, i32* %12, align 4, !dbg !5818
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !5819
  br i1 %13, label %14, label %17, !dbg !5821

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !5822
  %16 = mul i32 %15, 1000, !dbg !5824
  call void @llvm.dbg.value(metadata i32 %16, metadata !5796, metadata !DIExpression()), !dbg !5809
  br label %17, !dbg !5825

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5826
  call void @llvm.dbg.value(metadata i32 %18, metadata !5796, metadata !DIExpression()), !dbg !5809
  %19 = shl i32 %1, 8, !dbg !5827
  %20 = udiv i32 %18, %19, !dbg !5828
  call void @llvm.dbg.value(metadata i32 %20, metadata !5797, metadata !DIExpression()), !dbg !5809
  %21 = mul i32 %18, 10, !dbg !5829
  %22 = udiv i32 %21, %19, !dbg !5830
  %23 = urem i32 %22, 10, !dbg !5831
  call void @llvm.dbg.value(metadata i32 %23, metadata !5798, metadata !DIExpression()), !dbg !5809
  %24 = icmp ne i32 %23, 0, !dbg !5832
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5834
  %27 = zext i1 %26 to i32, !dbg !5834
  %28 = add i32 %20, %27, !dbg !5834
  call void @llvm.dbg.value(metadata i32 %28, metadata !5797, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i32 %28, metadata !5800, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i32 undef, metadata !5801, metadata !DIExpression()), !dbg !5809
  br label %29, !dbg !5835

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5809
  %31 = mul i32 %30, %1, !dbg !5809
  %32 = udiv i32 %18, %31, !dbg !5809
  call void @llvm.dbg.value(metadata i32 %32, metadata !5801, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i32 %30, metadata !5800, metadata !DIExpression()), !dbg !5809
  %33 = icmp ugt i32 %32, 256, !dbg !5836
  %34 = add i32 %30, 1, !dbg !5837
  call void @llvm.dbg.value(metadata i32 %34, metadata !5800, metadata !DIExpression()), !dbg !5809
  call void @llvm.dbg.value(metadata i32 undef, metadata !5801, metadata !DIExpression()), !dbg !5809
  br i1 %33, label %29, label %35, !dbg !5835, !llvm.loop !5839

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5841
  %37 = urem i32 %36, 10, !dbg !5842
  call void @llvm.dbg.value(metadata i32 %37, metadata !5799, metadata !DIExpression()), !dbg !5809
  %38 = add nsw i32 %32, -1, !dbg !5843
  call void @llvm.dbg.value(metadata i32 %38, metadata !5801, metadata !DIExpression()), !dbg !5809
  %39 = add nsw i32 %32, -2, !dbg !5844
  %40 = lshr i32 %39, 1, !dbg !5845
  call void @llvm.dbg.value(metadata i32 %40, metadata !5802, metadata !DIExpression()), !dbg !5809
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5846
  store volatile i32 3, i32* %41, align 4, !dbg !5847
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5848
  %43 = load volatile i32, i32* %42, align 4, !dbg !5848
  call void @llvm.dbg.value(metadata i32 %43, metadata !5803, metadata !DIExpression()), !dbg !5809
  %44 = or i32 %43, 128, !dbg !5849
  store volatile i32 %44, i32* %42, align 4, !dbg !5850
  %45 = and i32 %30, 255, !dbg !5851
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5852
  store volatile i32 %45, i32* %46, align 4, !dbg !5853
  %47 = lshr i32 %30, 8, !dbg !5854
  %48 = and i32 %47, 255, !dbg !5855
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5856
  store volatile i32 %48, i32* %49, align 4, !dbg !5857
  store volatile i32 %43, i32* %42, align 4, !dbg !5858
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5859
  store volatile i32 %38, i32* %50, align 4, !dbg !5860
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5861
  store volatile i32 %40, i32* %51, align 4, !dbg !5862
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5863
  %53 = load i32, i32* %52, align 4, !dbg !5863
  store volatile i32 %53, i32* %11, align 4, !dbg !5864
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5865
  %55 = load i32, i32* %54, align 4, !dbg !5865
  store volatile i32 %55, i32* %12, align 4, !dbg !5866
  %56 = icmp ugt i32 %1, 2999999, !dbg !5867
  br i1 %56, label %57, label %59, !dbg !5869

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5870
  store volatile i32 18, i32* %58, align 4, !dbg !5872
  br label %59, !dbg !5873

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5874
  ret void, !dbg !5874
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !5875 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5879, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata i32 %1, metadata !5880, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata i32 %2, metadata !5881, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.value(metadata i32 %3, metadata !5882, metadata !DIExpression()), !dbg !5884
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5885
  %6 = load volatile i32, i32* %5, align 4, !dbg !5885
  call void @llvm.dbg.value(metadata i32 %6, metadata !5883, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5884
  store volatile i32 128, i32* %5, align 4, !dbg !5886
  %7 = trunc i32 %6 to i16, !dbg !5887
  %8 = and i16 %7, -4, !dbg !5887
  call void @llvm.dbg.value(metadata i16 %7, metadata !5883, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5884
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5888

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5889
  call void @llvm.dbg.value(metadata i16 %10, metadata !5883, metadata !DIExpression()), !dbg !5884
  br label %15, !dbg !5891

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5892
  call void @llvm.dbg.value(metadata i16 %12, metadata !5883, metadata !DIExpression()), !dbg !5884
  br label %15, !dbg !5893

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5894
  call void @llvm.dbg.value(metadata i16 %14, metadata !5883, metadata !DIExpression()), !dbg !5884
  br label %15, !dbg !5895

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5884
  call void @llvm.dbg.value(metadata i16 %16, metadata !5883, metadata !DIExpression()), !dbg !5884
  %17 = and i16 %16, -61, !dbg !5896
  call void @llvm.dbg.value(metadata i16 %16, metadata !5883, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5884
  %18 = icmp eq i32 %2, 1, !dbg !5897
  %19 = select i1 %18, i16 4, i16 0, !dbg !5897
  %20 = or i16 %17, %19, !dbg !5897
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5883, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5884
  call void @llvm.dbg.value(metadata i16 %20, metadata !5883, metadata !DIExpression()), !dbg !5884
  %21 = icmp eq i32 %3, 2, !dbg !5898
  %22 = or i16 %20, 16, !dbg !5898
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5898
  call void @llvm.dbg.value(metadata i16 %23, metadata !5883, metadata !DIExpression()), !dbg !5884
  %24 = zext i16 %23 to i32, !dbg !5899
  store volatile i32 %24, i32* %5, align 4, !dbg !5900
  ret void, !dbg !5901
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5902 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5906, metadata !DIExpression()), !dbg !5909
  call void @llvm.dbg.value(metadata i8 %1, metadata !5907, metadata !DIExpression()), !dbg !5909
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5910

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5911
  call void @llvm.dbg.value(metadata i32 %5, metadata !5908, metadata !DIExpression()), !dbg !5909
  %6 = and i32 %5, 32, !dbg !5913
  %7 = icmp eq i32 %6, 0, !dbg !5913
  br i1 %7, label %4, label %8, !dbg !5915, !llvm.loop !5916

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5918
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5920
  store volatile i32 %9, i32* %10, align 4, !dbg !5921
  ret void, !dbg !5922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5923 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5927, metadata !DIExpression()), !dbg !5930
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5931

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5932
  call void @llvm.dbg.value(metadata i32 %4, metadata !5928, metadata !DIExpression()), !dbg !5930
  %5 = and i32 %4, 1, !dbg !5934
  %6 = icmp eq i32 %5, 0, !dbg !5934
  br i1 %6, label %3, label %7, !dbg !5936, !llvm.loop !5937

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5939
  %9 = load volatile i32, i32* %8, align 4, !dbg !5939
  %10 = trunc i32 %9 to i8, !dbg !5941
  call void @llvm.dbg.value(metadata i8 %10, metadata !5929, metadata !DIExpression()), !dbg !5930
  ret i8 %10, !dbg !5942
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5943 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5947, metadata !DIExpression()), !dbg !5950
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5951
  %3 = load volatile i32, i32* %2, align 4, !dbg !5951
  call void @llvm.dbg.value(metadata i32 %3, metadata !5948, metadata !DIExpression()), !dbg !5950
  %4 = and i32 %3, 1, !dbg !5952
  %5 = icmp eq i32 %4, 0, !dbg !5952
  br i1 %5, label %9, label %6, !dbg !5954

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5955
  %8 = load volatile i32, i32* %7, align 4, !dbg !5955
  call void @llvm.dbg.value(metadata i32 %8, metadata !5949, metadata !DIExpression()), !dbg !5950
  br label %9, !dbg !5957

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !5958
  call void @llvm.dbg.value(metadata i32 %10, metadata !5949, metadata !DIExpression()), !dbg !5950
  ret i32 %10, !dbg !5959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5960 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5964, metadata !DIExpression()), !dbg !5967
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5968
  %3 = load volatile i32, i32* %2, align 4, !dbg !5968
  call void @llvm.dbg.value(metadata i32 %3, metadata !5966, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5967
  store volatile i32 191, i32* %2, align 4, !dbg !5969
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5970
  %5 = load volatile i32, i32* %4, align 4, !dbg !5970
  call void @llvm.dbg.value(metadata i32 %5, metadata !5965, metadata !DIExpression()), !dbg !5967
  %6 = and i32 %5, 65343, !dbg !5971
  %7 = or i32 %6, 192, !dbg !5971
  call void @llvm.dbg.value(metadata i32 %5, metadata !5965, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !5967
  store volatile i32 %7, i32* %4, align 4, !dbg !5972
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5973
  store volatile i32 0, i32* %8, align 4, !dbg !5974
  store volatile i32 0, i32* %2, align 4, !dbg !5975
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5976
  store volatile i32 2, i32* %9, align 4, !dbg !5977
  %10 = and i32 %3, 65535, !dbg !5978
  store volatile i32 %10, i32* %2, align 4, !dbg !5979
  ret void, !dbg !5980
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !5981 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5985, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.value(metadata i8 %1, metadata !5986, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.value(metadata i8 %2, metadata !5987, metadata !DIExpression()), !dbg !5991
  call void @llvm.dbg.value(metadata i8 %3, metadata !5988, metadata !DIExpression()), !dbg !5991
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5992
  %6 = load volatile i32, i32* %5, align 4, !dbg !5992
  call void @llvm.dbg.value(metadata i32 %6, metadata !5990, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5991
  store volatile i32 191, i32* %5, align 4, !dbg !5993
  %7 = zext i8 %1 to i32, !dbg !5994
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5995
  store volatile i32 %7, i32* %8, align 4, !dbg !5996
  %9 = zext i8 %2 to i32, !dbg !5997
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5998
  store volatile i32 %9, i32* %10, align 4, !dbg !5999
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6000
  %12 = load volatile i32, i32* %11, align 4, !dbg !6000
  call void @llvm.dbg.value(metadata i32 %12, metadata !5989, metadata !DIExpression()), !dbg !5991
  %13 = and i32 %12, 65509, !dbg !6001
  %14 = or i32 %13, 26, !dbg !6001
  call void @llvm.dbg.value(metadata i32 %12, metadata !5989, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !5991
  store volatile i32 %14, i32* %11, align 4, !dbg !6002
  %15 = zext i8 %3 to i32, !dbg !6003
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6004
  store volatile i32 %15, i32* %16, align 4, !dbg !6005
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6006
  store volatile i32 1, i32* %17, align 4, !dbg !6007
  %18 = and i32 %6, 65535, !dbg !6008
  store volatile i32 %18, i32* %5, align 4, !dbg !6009
  ret void, !dbg !6010
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6011 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6013, metadata !DIExpression()), !dbg !6015
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6016
  %3 = load volatile i32, i32* %2, align 4, !dbg !6016
  call void @llvm.dbg.value(metadata i32 %3, metadata !6014, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6015
  store volatile i32 191, i32* %2, align 4, !dbg !6017
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6018
  store volatile i32 0, i32* %4, align 4, !dbg !6019
  store volatile i32 0, i32* %2, align 4, !dbg !6020
  %5 = and i32 %3, 65535, !dbg !6021
  store volatile i32 %5, i32* %2, align 4, !dbg !6022
  ret void, !dbg !6023
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6024 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6026, metadata !DIExpression()), !dbg !6029
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6030
  %3 = load volatile i32, i32* %2, align 4, !dbg !6030
  call void @llvm.dbg.value(metadata i32 %3, metadata !6028, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6029
  store volatile i32 191, i32* %2, align 4, !dbg !6031
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6032
  %5 = load volatile i32, i32* %4, align 4, !dbg !6032
  call void @llvm.dbg.value(metadata i32 %5, metadata !6027, metadata !DIExpression()), !dbg !6029
  %6 = and i32 %5, 65519, !dbg !6033
  %7 = or i32 %6, 16, !dbg !6033
  call void @llvm.dbg.value(metadata i32 %5, metadata !6027, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !6029
  store volatile i32 %7, i32* %4, align 4, !dbg !6034
  store volatile i32 0, i32* %2, align 4, !dbg !6035
  store volatile i32 135, i32* %4, align 4, !dbg !6036
  %8 = and i32 %3, 65535, !dbg !6037
  store volatile i32 %8, i32* %2, align 4, !dbg !6038
  ret void, !dbg !6039
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_sleep_mode(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6040 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6042, metadata !DIExpression()), !dbg !6043
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6044
  store volatile i32 1, i32* %2, align 4, !dbg !6045
  ret void, !dbg !6046
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_send_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6047 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6049, metadata !DIExpression()), !dbg !6052
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6053
  %3 = load volatile i32, i32* %2, align 4, !dbg !6053
  call void @llvm.dbg.value(metadata i32 %3, metadata !6051, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6052
  %4 = load volatile i32, i32* %2, align 4, !dbg !6054
  %5 = and i32 %4, -129, !dbg !6054
  store volatile i32 %5, i32* %2, align 4, !dbg !6054
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6055
  %7 = load volatile i32, i32* %6, align 4, !dbg !6055
  call void @llvm.dbg.value(metadata i32 %7, metadata !6050, metadata !DIExpression()), !dbg !6052
  %8 = and i32 %7, 65533, !dbg !6056
  %9 = or i32 %8, 2, !dbg !6056
  call void @llvm.dbg.value(metadata i32 %7, metadata !6050, metadata !DIExpression(DW_OP_constu, 2, DW_OP_or, DW_OP_stack_value)), !dbg !6052
  store volatile i32 %9, i32* %6, align 4, !dbg !6057
  %10 = and i32 %3, 65535, !dbg !6058
  %11 = load volatile i32, i32* %2, align 4, !dbg !6059
  %12 = and i32 %10, %11, !dbg !6059
  store volatile i32 %12, i32* %2, align 4, !dbg !6059
  ret void, !dbg !6060
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6061 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6063, metadata !DIExpression()), !dbg !6066
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6067
  %3 = load volatile i32, i32* %2, align 4, !dbg !6067
  call void @llvm.dbg.value(metadata i32 %3, metadata !6065, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6066
  %4 = load volatile i32, i32* %2, align 4, !dbg !6068
  %5 = and i32 %4, -129, !dbg !6068
  store volatile i32 %5, i32* %2, align 4, !dbg !6068
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6069
  %7 = load volatile i32, i32* %6, align 4, !dbg !6069
  call void @llvm.dbg.value(metadata i32 %7, metadata !6064, metadata !DIExpression()), !dbg !6066
  %8 = and i32 %7, 65530, !dbg !6070
  %9 = or i32 %8, 5, !dbg !6070
  call void @llvm.dbg.value(metadata i32 %7, metadata !6064, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !6066
  store volatile i32 %9, i32* %6, align 4, !dbg !6071
  %10 = and i32 %3, 65535, !dbg !6072
  %11 = load volatile i32, i32* %2, align 4, !dbg !6073
  %12 = and i32 %10, %11, !dbg !6073
  store volatile i32 %12, i32* %2, align 4, !dbg !6073
  ret void, !dbg !6074
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6075 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6079, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i32 %1, metadata !6080, metadata !DIExpression()), !dbg !6082
  call void @llvm.dbg.value(metadata i16 145, metadata !6081, metadata !DIExpression()), !dbg !6082
  %3 = icmp eq i32 %1, 0, !dbg !6083
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !6081, metadata !DIExpression()), !dbg !6082
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6085
  store volatile i32 %4, i32* %5, align 4, !dbg !6086
  ret void, !dbg !6087
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6088 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6093, metadata !DIExpression()), !dbg !6097
  call void @llvm.dbg.value(metadata i32 0, metadata !6096, metadata !DIExpression()), !dbg !6097
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6098
  %3 = load volatile i32, i32* %2, align 4, !dbg !6098
  call void @llvm.dbg.value(metadata i32 %3, metadata !6094, metadata !DIExpression()), !dbg !6097
  %4 = and i32 %3, 1, !dbg !6099
  %5 = icmp eq i32 %4, 0, !dbg !6099
  br i1 %5, label %6, label %16, !dbg !6101

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !6102
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !6103

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !6096, metadata !DIExpression()), !dbg !6097
  br label %16, !dbg !6104

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6106
  %11 = load volatile i32, i32* %10, align 4, !dbg !6106
  call void @llvm.dbg.value(metadata i32 %11, metadata !6095, metadata !DIExpression()), !dbg !6097
  %12 = and i32 %11, 16, !dbg !6107
  %13 = icmp eq i32 %12, 0, !dbg !6107
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !6096, metadata !DIExpression()), !dbg !6097
  br label %16, !dbg !6109

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !6097
  ret i32 %17, !dbg !6110
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6111 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6115, metadata !DIExpression()), !dbg !6118
  call void @llvm.dbg.value(metadata i32 0, metadata !6117, metadata !DIExpression()), !dbg !6118
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !6119
  %3 = load volatile i32, i32* %2, align 4, !dbg !6119
  call void @llvm.dbg.value(metadata i32 %3, metadata !6116, metadata !DIExpression()), !dbg !6118
  %4 = and i32 %3, 14, !dbg !6120
  %5 = icmp eq i32 %4, 0, !dbg !6120
  %6 = sext i1 %5 to i32, !dbg !6122
  call void @llvm.dbg.value(metadata i32 %6, metadata !6117, metadata !DIExpression()), !dbg !6118
  ret i32 %6, !dbg !6123
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6124 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6126, metadata !DIExpression()), !dbg !6128
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6129
  %3 = load volatile i32, i32* %2, align 4, !dbg !6129
  call void @llvm.dbg.value(metadata i32 %3, metadata !6127, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6128
  call void @llvm.dbg.value(metadata i32 %3, metadata !6127, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6128
  ret void, !dbg !6130
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6131 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6133, metadata !DIExpression()), !dbg !6134
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6135
  store volatile i32 191, i32* %2, align 4, !dbg !6136
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6137
  store volatile i32 16, i32* %3, align 4, !dbg !6138
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6139
  store volatile i32 0, i32* %4, align 4, !dbg !6140
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6141
  store volatile i32 0, i32* %5, align 4, !dbg !6142
  store volatile i32 128, i32* %2, align 4, !dbg !6143
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6144
  store volatile i32 0, i32* %6, align 4, !dbg !6145
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6146
  store volatile i32 0, i32* %7, align 4, !dbg !6147
  store volatile i32 0, i32* %2, align 4, !dbg !6148
  store volatile i32 0, i32* %7, align 4, !dbg !6149
  store volatile i32 0, i32* %3, align 4, !dbg !6150
  store volatile i32 191, i32* %2, align 4, !dbg !6151
  store volatile i32 0, i32* %3, align 4, !dbg !6152
  store volatile i32 0, i32* %2, align 4, !dbg !6153
  store volatile i32 0, i32* %4, align 4, !dbg !6154
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !6155
  store volatile i32 0, i32* %8, align 4, !dbg !6156
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !6157
  store volatile i32 0, i32* %9, align 4, !dbg !6158
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6159
  store volatile i32 0, i32* %10, align 4, !dbg !6160
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6161
  store volatile i32 0, i32* %11, align 4, !dbg !6162
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6163
  store volatile i32 0, i32* %12, align 4, !dbg !6164
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6165
  store volatile i32 0, i32* %13, align 4, !dbg !6166
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !6167
  store volatile i32 0, i32* %14, align 4, !dbg !6168
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6169
  store volatile i32 0, i32* %15, align 4, !dbg !6170
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6171
  store volatile i32 0, i32* %16, align 4, !dbg !6172
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6173
  store volatile i32 0, i32* %17, align 4, !dbg !6174
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6175
  store volatile i32 0, i32* %18, align 4, !dbg !6176
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6177
  store volatile i32 0, i32* %19, align 4, !dbg !6178
  store volatile i32 0, i32* %13, align 4, !dbg !6179
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6180
  store volatile i32 0, i32* %20, align 4, !dbg !6181
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6182
  store volatile i32 0, i32* %21, align 4, !dbg !6183
  ret void, !dbg !6184
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6185 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6187, metadata !DIExpression()), !dbg !6188
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6189

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6190
  %5 = and i32 %4, 64, !dbg !6191
  %6 = icmp eq i32 %5, 0, !dbg !6192
  br i1 %6, label %3, label %7, !dbg !6189, !llvm.loop !6193

7:                                                ; preds = %3
  ret void, !dbg !6195
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6196 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6200, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 %1, metadata !6201, metadata !DIExpression()), !dbg !6203
  call void @llvm.dbg.value(metadata i32 15, metadata !6202, metadata !DIExpression()), !dbg !6203
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !6204

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !6205
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !6208
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !6210
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !6212
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !6203
  call void @llvm.dbg.value(metadata i32 %16, metadata !6202, metadata !DIExpression()), !dbg !6203
  ret i32 %16, !dbg !6214
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !6215 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6225, metadata !DIExpression()), !dbg !6227
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !6226, metadata !DIExpression()), !dbg !6227
  %3 = add i32 %0, -8, !dbg !6228
  %4 = icmp ult i32 %3, 8, !dbg !6228
  br i1 %4, label %5, label %12, !dbg !6228

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !6228
  %7 = load i8, i8* %6, align 1, !dbg !6228
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.6, i32 0, i32 %3, !dbg !6228
  %9 = load i32, i32* %8, align 4, !dbg !6228
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !6229
  store i8 %7, i8* %10, align 4, !dbg !6229
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !6229
  store i32 %9, i32* %11, align 4, !dbg !6229
  br label %12, !dbg !6231

12:                                               ; preds = %2, %5
  ret void, !dbg !6231
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6232 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6236, metadata !DIExpression()), !dbg !6237
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6238
  store volatile i32 3, i32* %2, align 4, !dbg !6239
  ret void, !dbg !6240
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !6241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6243, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !6246, metadata !DIExpression()), !dbg !6247
  %2 = add i32 %0, -30, !dbg !6248
  %3 = icmp ult i32 %2, 3, !dbg !6248
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !6248
  call void @llvm.dbg.value(metadata i32 %5, metadata !6244, metadata !DIExpression()), !dbg !6247
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !6249
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !6249
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !6246, metadata !DIExpression()), !dbg !6247
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !6250
  call void @llvm.dbg.value(metadata i32 %8, metadata !6245, metadata !DIExpression()), !dbg !6247
  switch i32 %8, label %13 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %14
    i32 0, label %14
    i32 3, label %11
    i32 5, label %12
  ], !dbg !6251

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !6252
  br label %14, !dbg !6254

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !6255
  br label %14, !dbg !6256

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !6257
  br label %14, !dbg !6258

12:                                               ; preds = %1
  tail call void @uart_send_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !6259
  br label %14, !dbg !6260

13:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.4.95, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5.96, i32 0, i32 0)) #23, !dbg !6261
  unreachable, !dbg !6261

14:                                               ; preds = %12, %11, %1, %1, %10, %9
  ret void, !dbg !6262
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !960 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !6263
  br i1 %1, label %9, label %2, !dbg !6265

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1053, metadata !DIExpression()), !dbg !6266
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !6267
  %5 = load i32, i32* %4, align 4, !dbg !6267
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !6272
  %6 = add nuw nsw i32 %3, 1, !dbg !6273
  call void @llvm.dbg.value(metadata i32 %6, metadata !1053, metadata !DIExpression()), !dbg !6266
  %7 = icmp eq i32 %6, 64, !dbg !6274
  br i1 %7, label %8, label %2, !dbg !6275, !llvm.loop !6276

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !6278
  br label %9, !dbg !6279

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !6280
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !6281 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6285, metadata !DIExpression()), !dbg !6287
  call void @llvm.dbg.value(metadata i32 %1, metadata !6286, metadata !DIExpression()), !dbg !6287
  %3 = trunc i32 %1 to i8, !dbg !6288
  %4 = shl i8 %3, 2, !dbg !6288
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6291
  store volatile i8 %4, i8* %5, align 1, !dbg !6292
  ret void, !dbg !6293
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6294 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6298, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i32 -1, metadata !6299, metadata !DIExpression()), !dbg !6300
  %2 = icmp ugt i32 %0, 63, !dbg !6301
  br i1 %2, label %4, label %3, !dbg !6301

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !6303
  call void @llvm.dbg.value(metadata i32 0, metadata !6299, metadata !DIExpression()), !dbg !6300
  br label %4, !dbg !6305

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6300
  ret i32 %5, !dbg !6306
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6307 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6311, metadata !DIExpression()), !dbg !6312
  %2 = and i32 %0, 31, !dbg !6313
  %3 = shl nuw i32 1, %2, !dbg !6314
  %4 = lshr i32 %0, 5, !dbg !6315
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6316
  store volatile i32 %3, i32* %5, align 4, !dbg !6317
  ret void, !dbg !6318
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6319 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i32 -1, metadata !6322, metadata !DIExpression()), !dbg !6323
  %2 = icmp ugt i32 %0, 63, !dbg !6324
  br i1 %2, label %4, label %3, !dbg !6324

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !6326
  call void @llvm.dbg.value(metadata i32 0, metadata !6322, metadata !DIExpression()), !dbg !6323
  br label %4, !dbg !6328

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6323
  ret i32 %5, !dbg !6329
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6332, metadata !DIExpression()), !dbg !6333
  %2 = and i32 %0, 31, !dbg !6334
  %3 = shl nuw i32 1, %2, !dbg !6335
  %4 = lshr i32 %0, 5, !dbg !6336
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6337
  store volatile i32 %3, i32* %5, align 4, !dbg !6338
  ret void, !dbg !6339
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !6340 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6344, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata i32 255, metadata !6345, metadata !DIExpression()), !dbg !6346
  %2 = icmp ugt i32 %0, 63, !dbg !6347
  br i1 %2, label %5, label %3, !dbg !6347

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !6349
  call void @llvm.dbg.value(metadata i32 %4, metadata !6345, metadata !DIExpression()), !dbg !6346
  br label %5, !dbg !6351

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !6346
  ret i32 %6, !dbg !6352
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !6353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6357, metadata !DIExpression()), !dbg !6358
  %2 = lshr i32 %0, 5, !dbg !6359
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !6360
  %4 = load volatile i32, i32* %3, align 4, !dbg !6360
  %5 = and i32 %0, 31, !dbg !6361
  %6 = lshr i32 %4, %5, !dbg !6362
  %7 = and i32 %6, 1, !dbg !6362
  ret i32 %7, !dbg !6363
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6366, metadata !DIExpression()), !dbg !6368
  call void @llvm.dbg.value(metadata i32 -1, metadata !6367, metadata !DIExpression()), !dbg !6368
  %2 = icmp ugt i32 %0, 63, !dbg !6369
  br i1 %2, label %4, label %3, !dbg !6369

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !6371
  call void @llvm.dbg.value(metadata i32 0, metadata !6367, metadata !DIExpression()), !dbg !6368
  br label %4, !dbg !6373

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6368
  ret i32 %5, !dbg !6374
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6375 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6377, metadata !DIExpression()), !dbg !6378
  %2 = and i32 %0, 31, !dbg !6379
  %3 = shl nuw i32 1, %2, !dbg !6380
  %4 = lshr i32 %0, 5, !dbg !6381
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !6382
  store volatile i32 %3, i32* %5, align 4, !dbg !6383
  ret void, !dbg !6384
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6385 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6387, metadata !DIExpression()), !dbg !6389
  call void @llvm.dbg.value(metadata i32 -1, metadata !6388, metadata !DIExpression()), !dbg !6389
  %2 = icmp ugt i32 %0, 63, !dbg !6390
  br i1 %2, label %4, label %3, !dbg !6390

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !6392
  call void @llvm.dbg.value(metadata i32 0, metadata !6388, metadata !DIExpression()), !dbg !6389
  br label %4, !dbg !6394

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6389
  ret i32 %5, !dbg !6395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6398, metadata !DIExpression()), !dbg !6399
  %2 = and i32 %0, 31, !dbg !6400
  %3 = shl nuw i32 1, %2, !dbg !6401
  %4 = lshr i32 %0, 5, !dbg !6402
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6403
  store volatile i32 %3, i32* %5, align 4, !dbg !6404
  ret void, !dbg !6405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6410, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata i32 %1, metadata !6411, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.value(metadata i32 -1, metadata !6412, metadata !DIExpression()), !dbg !6413
  %3 = icmp ugt i32 %0, 63, !dbg !6414
  br i1 %3, label %5, label %4, !dbg !6414

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !6416
  call void @llvm.dbg.value(metadata i32 0, metadata !6412, metadata !DIExpression()), !dbg !6413
  br label %5, !dbg !6418

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !6413
  ret i32 %6, !dbg !6419
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !6420 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6422, metadata !DIExpression()), !dbg !6424
  call void @llvm.dbg.value(metadata i32 68, metadata !6423, metadata !DIExpression()), !dbg !6424
  %2 = icmp ugt i32 %0, 63, !dbg !6425
  br i1 %2, label %5, label %3, !dbg !6425

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !6427
  call void @llvm.dbg.value(metadata i32 %4, metadata !6423, metadata !DIExpression()), !dbg !6424
  br label %5, !dbg !6429

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !6424
  ret i32 %6, !dbg !6430
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !6431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6433, metadata !DIExpression()), !dbg !6434
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6435
  %3 = load volatile i8, i8* %2, align 1, !dbg !6435
  %4 = lshr i8 %3, 2, !dbg !6438
  %5 = zext i8 %4 to i32, !dbg !6438
  ret i32 %5, !dbg !6439
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !6440 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !6442, metadata !DIExpression()), !dbg !6444
  tail call void @Flash_ReturnReady() #20, !dbg !6445
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !6446
  call void @llvm.dbg.value(metadata i32 %1, metadata !6443, metadata !DIExpression()), !dbg !6444
  %2 = icmp ugt i32 %1, 63, !dbg !6447
  br i1 %2, label %12, label %3, !dbg !6447

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !6449
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !6449
  %6 = icmp eq void (i32)* %5, null, !dbg !6451
  br i1 %6, label %7, label %8, !dbg !6452

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !6442, metadata !DIExpression()), !dbg !6444
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.103, i32 0, i32 0)) #20, !dbg !6453
  br label %12, !dbg !6455

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !6456
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !6458
  store i32 %9, i32* %10, align 4, !dbg !6459
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !6460
  tail call void %11(i32 noundef %1) #20, !dbg !6461
  call void @llvm.dbg.value(metadata i32 0, metadata !6442, metadata !DIExpression()), !dbg !6444
  br label %12, !dbg !6462

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !6444
  ret i32 %13, !dbg !6463
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !6464 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6467
  %2 = and i32 %1, 511, !dbg !6468
  call void @llvm.dbg.value(metadata i32 %2, metadata !6466, metadata !DIExpression()), !dbg !6469
  %3 = add nsw i32 %2, -16, !dbg !6470
  ret i32 %3, !dbg !6471
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !6472 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6473
  %2 = lshr i32 %1, 22, !dbg !6474
  %3 = and i32 %2, 1, !dbg !6474
  ret i32 %3, !dbg !6475
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !6476 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6481, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !6482, metadata !DIExpression()), !dbg !6484
  %3 = icmp ugt i32 %0, 63, !dbg !6485
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !6485
  br i1 %5, label %10, label %6, !dbg !6485

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6487
  call void @llvm.dbg.value(metadata i32 %7, metadata !6483, metadata !DIExpression()), !dbg !6484
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !6488
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !6489
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !6490
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !6491
  store i32 0, i32* %9, align 4, !dbg !6492
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6493
  br label %10, !dbg !6494

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !6484
  ret i32 %11, !dbg !6495
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !6496 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6500, metadata !DIExpression()), !dbg !6501
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6502
  store i32 %2, i32* %0, align 4, !dbg !6503
  ret i32 0, !dbg !6504
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !6505 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6509, metadata !DIExpression()), !dbg !6510
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !6511
  ret i32 0, !dbg !6512
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !6513 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !6517, !srcloc !6523
  call void @llvm.dbg.value(metadata i32 %1, metadata !6521, metadata !DIExpression()) #22, !dbg !6524
  call void @llvm.dbg.value(metadata i32 %1, metadata !6515, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.value(metadata i32 1, metadata !6516, metadata !DIExpression()), !dbg !6525
  call void @llvm.dbg.value(metadata i32 4, metadata !6526, metadata !DIExpression()) #22, !dbg !6531
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !6533, !srcloc !6534
  tail call void asm sideeffect "dmb", ""() #22, !dbg !6535, !srcloc !6538
  tail call void asm sideeffect "isb", ""() #22, !dbg !6539, !srcloc !6542
  ret i32 %1, !dbg !6543
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6546, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i32 %0, metadata !6526, metadata !DIExpression()) #22, !dbg !6548
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !6550, !srcloc !6534
  tail call void asm sideeffect "dmb", ""() #22, !dbg !6551, !srcloc !6538
  tail call void asm sideeffect "isb", ""() #22, !dbg !6553, !srcloc !6542
  ret void, !dbg !6555
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !6556 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6560
  call void @llvm.dbg.value(metadata i32 %1, metadata !6559, metadata !DIExpression()), !dbg !6561
  call void @llvm.dbg.value(metadata i32 0, metadata !6558, metadata !DIExpression()), !dbg !6561
  br label %2, !dbg !6562

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6558, metadata !DIExpression()), !dbg !6561
  tail call fastcc void @NVIC_DisableIRQ.110(i32 noundef %3) #21, !dbg !6564
  %4 = add nuw nsw i32 %3, 1, !dbg !6567
  call void @llvm.dbg.value(metadata i32 %4, metadata !6558, metadata !DIExpression()), !dbg !6561
  %5 = icmp eq i32 %4, 64, !dbg !6568
  br i1 %5, label %6, label %2, !dbg !6562, !llvm.loop !6569

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6571
  ret void, !dbg !6572
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.110(i32 noundef %0) unnamed_addr #2 !dbg !6573 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6575, metadata !DIExpression()), !dbg !6576
  %2 = and i32 %0, 31, !dbg !6577
  %3 = shl nuw i32 1, %2, !dbg !6578
  %4 = lshr i32 %0, 5, !dbg !6579
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6580
  store volatile i32 %3, i32* %5, align 4, !dbg !6581
  ret void, !dbg !6582
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !6583 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6587
  call void @llvm.dbg.value(metadata i32 %1, metadata !6586, metadata !DIExpression()), !dbg !6588
  call void @llvm.dbg.value(metadata i32 0, metadata !6585, metadata !DIExpression()), !dbg !6588
  br label %2, !dbg !6589

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6585, metadata !DIExpression()), !dbg !6588
  tail call fastcc void @NVIC_EnableIRQ.111(i32 noundef %3) #21, !dbg !6591
  %4 = add nuw nsw i32 %3, 1, !dbg !6594
  call void @llvm.dbg.value(metadata i32 %4, metadata !6585, metadata !DIExpression()), !dbg !6588
  %5 = icmp eq i32 %4, 64, !dbg !6595
  br i1 %5, label %6, label %2, !dbg !6589, !llvm.loop !6596

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6598
  ret void, !dbg !6599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.111(i32 noundef %0) unnamed_addr #2 !dbg !6600 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6602, metadata !DIExpression()), !dbg !6603
  %2 = and i32 %0, 31, !dbg !6604
  %3 = shl nuw i32 1, %2, !dbg !6605
  %4 = lshr i32 %0, 5, !dbg !6606
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6607
  store volatile i32 %3, i32* %5, align 4, !dbg !6608
  ret void, !dbg !6609
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !6610 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6612, metadata !DIExpression()), !dbg !6613
  br label %1, !dbg !6614

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6612, metadata !DIExpression()), !dbg !6613
  tail call fastcc void @NVIC_ClearPendingIRQ.112(i32 noundef %2) #21, !dbg !6616
  %3 = add nuw nsw i32 %2, 1, !dbg !6619
  call void @llvm.dbg.value(metadata i32 %3, metadata !6612, metadata !DIExpression()), !dbg !6613
  %4 = icmp eq i32 %3, 64, !dbg !6620
  br i1 %4, label %5, label %1, !dbg !6614, !llvm.loop !6621

5:                                                ; preds = %1
  ret void, !dbg !6623
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.112(i32 noundef %0) unnamed_addr #2 !dbg !6624 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6626, metadata !DIExpression()), !dbg !6627
  %2 = and i32 %0, 31, !dbg !6628
  %3 = shl nuw i32 1, %2, !dbg !6629
  %4 = lshr i32 %0, 5, !dbg !6630
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6631
  store volatile i32 %3, i32* %5, align 4, !dbg !6632
  ret void, !dbg !6633
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !6634 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6636, metadata !DIExpression()), !dbg !6637
  %2 = icmp ugt i32 %0, 63, !dbg !6638
  br i1 %2, label %4, label %3, !dbg !6638

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !6640
  br label %4, !dbg !6641

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6637
  ret i32 %5, !dbg !6642
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !6643 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6645, metadata !DIExpression()), !dbg !6646
  %2 = and i32 %0, 511, !dbg !6647
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !6648
  tail call void asm sideeffect "dsb", ""() #22, !dbg !6649, !srcloc !6652
  ret void, !dbg !6653
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !6654 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6655
  %2 = and i32 %1, 511, !dbg !6656
  ret i32 %2, !dbg !6657
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !6658 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6662, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata i32 %1, metadata !6663, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata i8* %0, metadata !6664, metadata !DIExpression()), !dbg !6761
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !6762
  call void @llvm.dbg.value(metadata i32 %3, metadata !6759, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !6761
  call void @llvm.dbg.value(metadata i32 0, metadata !6758, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata i32* undef, metadata !6760, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata i32 0, metadata !6758, metadata !DIExpression()), !dbg !6761
  %4 = icmp ult i32 %3, 4, !dbg !6763
  br i1 %4, label %20, label %5, !dbg !6766

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !6767
  %7 = bitcast i8* %6 to i32**, !dbg !6767
  %8 = load i32*, i32** %7, align 4, !dbg !6767
  call void @llvm.dbg.value(metadata i32* %8, metadata !6760, metadata !DIExpression()), !dbg !6761
  %9 = lshr i32 %3, 2, !dbg !6768
  call void @llvm.dbg.value(metadata i32 %9, metadata !6759, metadata !DIExpression()), !dbg !6761
  br label %10, !dbg !6766

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !6760, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata i32 %12, metadata !6758, metadata !DIExpression()), !dbg !6761
  %13 = load i32, i32* %11, align 4, !dbg !6769
  %14 = icmp eq i32 %13, -1, !dbg !6772
  br i1 %14, label %16, label %15, !dbg !6773

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !6774
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.113, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0)) #23, !dbg !6774
  unreachable, !dbg !6774

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !6779
  call void @llvm.dbg.value(metadata i32 %17, metadata !6758, metadata !DIExpression()), !dbg !6761
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !6780
  call void @llvm.dbg.value(metadata i32* %18, metadata !6760, metadata !DIExpression()), !dbg !6761
  %19 = icmp eq i32 %17, %9, !dbg !6763
  br i1 %19, label %20, label %10, !dbg !6766, !llvm.loop !6781

20:                                               ; preds = %16, %2
  ret void, !dbg !6783
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !6784 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6786, metadata !DIExpression()), !dbg !6788
  call void @llvm.dbg.value(metadata i32 0, metadata !6787, metadata !DIExpression()), !dbg !6788
  call void @llvm.dbg.value(metadata i32 %0, metadata !6787, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !6788
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !6787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6788
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !6787, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6788
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !6789
  call void @llvm.dbg.value(metadata i32 %2, metadata !6787, metadata !DIExpression()), !dbg !6788
  ret i32 %2, !dbg !6790
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6791 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6796, metadata !DIExpression()), !dbg !6798
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6799
  %3 = or i32 %2, 512, !dbg !6799
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6799
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6802
  call void @llvm.dbg.value(metadata i32 %4, metadata !6797, metadata !DIExpression()), !dbg !6798
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !6803

5:                                                ; preds = %1
  br label %7, !dbg !6804

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !6808
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.113, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.114, i32 0, i32 0)) #23, !dbg !6808
  unreachable, !dbg !6808

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !6813
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6797, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6798
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6797, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6798
  br label %10, !dbg !6814

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6815
  %12 = and i32 %11, 8192, !dbg !6816
  %13 = icmp eq i32 %12, 0, !dbg !6817
  br i1 %13, label %10, label %14, !dbg !6814, !llvm.loop !6818

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6820
  %16 = and i32 %15, 256, !dbg !6821
  %17 = icmp eq i32 %16, 0, !dbg !6822
  br i1 %17, label %14, label %18, !dbg !6823, !llvm.loop !6824

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !6813
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !6797, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6798
  %20 = and i32 %19, 16, !dbg !6813
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !6797, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6798
  call void @llvm.dbg.value(metadata i32 undef, metadata !6797, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6798
  %21 = or i32 %4, %20, !dbg !6826
  %22 = or i32 %21, 8, !dbg !6826
  call void @llvm.dbg.value(metadata i32 %22, metadata !6797, metadata !DIExpression()), !dbg !6798
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6827
  ret void, !dbg !6828
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6829 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !6831, metadata !DIExpression()), !dbg !6833
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6834
  call void @llvm.dbg.value(metadata i32 %2, metadata !6832, metadata !DIExpression()), !dbg !6833
  %3 = and i32 %2, -268435477, !dbg !6835
  call void @llvm.dbg.value(metadata i32 %3, metadata !6832, metadata !DIExpression()), !dbg !6833
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6836
  br label %4, !dbg !6837

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6838
  %6 = and i32 %5, 2, !dbg !6839
  %7 = icmp eq i32 %6, 0, !dbg !6837
  br i1 %7, label %8, label %4, !dbg !6837, !llvm.loop !6840

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6842
  call void @llvm.dbg.value(metadata i32 %9, metadata !6832, metadata !DIExpression()), !dbg !6833
  %10 = and i32 %9, -9, !dbg !6843
  call void @llvm.dbg.value(metadata i32 %10, metadata !6832, metadata !DIExpression()), !dbg !6833
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6844
  br label %11, !dbg !6845

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6846
  %13 = and i32 %12, 8, !dbg !6847
  %14 = icmp eq i32 %13, 0, !dbg !6845
  br i1 %14, label %15, label %11, !dbg !6845, !llvm.loop !6848

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !6850, !range !2650
  %17 = icmp eq i8 %16, 0, !dbg !6852
  br i1 %17, label %18, label %21, !dbg !6853

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6854
  %20 = and i32 %19, -513, !dbg !6854
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6854
  br label %21, !dbg !6858

21:                                               ; preds = %18, %15
  ret void, !dbg !6859
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6860 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6864, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i32 0, metadata !6865, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i32 0, metadata !6866, metadata !DIExpression()), !dbg !6867
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6868
  call void @llvm.dbg.value(metadata i32 %2, metadata !6865, metadata !DIExpression()), !dbg !6867
  call void @llvm.dbg.value(metadata i32 %2, metadata !6865, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !6867
  %3 = icmp eq i16 %0, 1, !dbg !6869
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !6871
  %5 = or i32 %2, %4, !dbg !6871
  call void @llvm.dbg.value(metadata i32 %5, metadata !6865, metadata !DIExpression()), !dbg !6867
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6872
  br label %6, !dbg !6873

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6874
  %8 = and i32 %7, 2, !dbg !6875
  %9 = icmp eq i32 %8, 0, !dbg !6876
  br i1 %9, label %6, label %10, !dbg !6873, !llvm.loop !6877

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6879
  %12 = and i32 %11, 1, !dbg !6880
  %13 = icmp eq i32 %12, 0, !dbg !6881
  br i1 %13, label %14, label %10, !dbg !6881, !llvm.loop !6882

14:                                               ; preds = %10
  ret i32 0, !dbg !6884
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !6885 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6887, metadata !DIExpression()), !dbg !6888
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !6889
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !6890
  ret void, !dbg !6891
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !6892 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6896, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata i32 %1, metadata !6897, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata i32 %1, metadata !6898, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata i8 0, metadata !6900, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata i32 0, metadata !6899, metadata !DIExpression()), !dbg !6901
  %3 = icmp eq i32 %1, 0, !dbg !6902
  br i1 %3, label %16, label %4, !dbg !6905

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !6900, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata i32 %6, metadata !6899, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.value(metadata i32 %7, metadata !6898, metadata !DIExpression()), !dbg !6901
  %8 = shl i32 %6, 8, !dbg !6906
  %9 = and i32 %7, 255, !dbg !6908
  %10 = or i32 %8, %9, !dbg !6909
  call void @llvm.dbg.value(metadata i32 %10, metadata !6899, metadata !DIExpression()), !dbg !6901
  %11 = lshr i32 %7, 8, !dbg !6910
  call void @llvm.dbg.value(metadata i32 %11, metadata !6898, metadata !DIExpression()), !dbg !6901
  %12 = add nuw nsw i8 %5, 1, !dbg !6911
  call void @llvm.dbg.value(metadata i8 %12, metadata !6900, metadata !DIExpression()), !dbg !6901
  %13 = icmp ult i32 %7, 256, !dbg !6902
  br i1 %13, label %14, label %4, !dbg !6905, !llvm.loop !6912

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !6914
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !6916
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6917
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6918
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6919
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !6920
  br label %16, !dbg !6921

16:                                               ; preds = %2, %14
  ret void, !dbg !6922
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !6923 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6927, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.value(metadata i8 %1, metadata !6928, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.value(metadata i32 %2, metadata !6929, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.value(metadata i32 %3, metadata !6930, metadata !DIExpression()), !dbg !6933
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !6934
  call void @llvm.dbg.value(metadata i32 %5, metadata !6932, metadata !DIExpression()), !dbg !6933
  %6 = icmp eq i32 %3, 3, !dbg !6935
  br i1 %6, label %7, label %11, !dbg !6937

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !6938
  %9 = zext i8 %1 to i32, !dbg !6940
  %10 = or i32 %8, %9, !dbg !6941
  call void @llvm.dbg.value(metadata i32 %10, metadata !6931, metadata !DIExpression()), !dbg !6933
  br label %16, !dbg !6942

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !6943
  %13 = zext i8 %1 to i32, !dbg !6945
  %14 = or i32 %12, %13, !dbg !6946
  call void @llvm.dbg.value(metadata i32 %14, metadata !6931, metadata !DIExpression()), !dbg !6933
  %15 = lshr i32 %5, 24, !dbg !6947
  call void @llvm.dbg.value(metadata i32 %15, metadata !6932, metadata !DIExpression()), !dbg !6933
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !6948
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !6933
  call void @llvm.dbg.value(metadata i32 %18, metadata !6932, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.value(metadata i32 %17, metadata !6931, metadata !DIExpression()), !dbg !6933
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6949
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6950
  %19 = add i32 %3, 1, !dbg !6951
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6952
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6953
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !6954
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !6955
  ret void, !dbg !6956
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !6957 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6961, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.value(metadata i32 %1, metadata !6962, metadata !DIExpression()), !dbg !6963
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !6964
  %4 = and i32 %3, -256, !dbg !6965
  %5 = and i32 %0, 255, !dbg !6966
  %6 = or i32 %4, %5, !dbg !6967
  ret i32 %6, !dbg !6968
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !6969 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6974, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.value(metadata i32 %1, metadata !6975, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.value(metadata i8** %2, metadata !6976, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.value(metadata i32* %3, metadata !6977, metadata !DIExpression()), !dbg !6989
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !6990
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !6990
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !6978, metadata !DIExpression()), !dbg !6991
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !6992
  call void @llvm.dbg.value(metadata i32 %7, metadata !6987, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !6986, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6989
  %8 = lshr i32 %7, 24, !dbg !6993
  call void @llvm.dbg.value(metadata i32 %8, metadata !6987, metadata !DIExpression()), !dbg !6989
  %9 = trunc i32 %8 to i8, !dbg !6994
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !6995
  store i8 %9, i8* %6, align 4, !dbg !6996
  call void @llvm.dbg.value(metadata i32 1, metadata !6988, metadata !DIExpression()), !dbg !6989
  %11 = load i8*, i8** %2, align 4, !dbg !6997
  br label %12, !dbg !7001

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !6997
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6988, metadata !DIExpression()), !dbg !6989
  %15 = load i8, i8* %13, align 1, !dbg !7002
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !7003
  store i8 %15, i8* %16, align 1, !dbg !7004
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7005
  store i8* %17, i8** %2, align 4, !dbg !7005
  %18 = add nuw nsw i32 %14, 1, !dbg !7006
  call void @llvm.dbg.value(metadata i32 %18, metadata !6988, metadata !DIExpression()), !dbg !6989
  %19 = icmp eq i32 %18, 4, !dbg !7007
  br i1 %19, label %20, label %12, !dbg !7001, !llvm.loop !7008

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !7010
  %22 = load i32, i32* %21, align 4, !dbg !7010
  call void @llvm.dbg.value(metadata i32 %22, metadata !6987, metadata !DIExpression()), !dbg !6989
  %23 = load i32, i32* %3, align 4, !dbg !7011
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !7012
  %25 = shl i32 %7, 8, !dbg !7013
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !6986, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6989
  %26 = and i32 %0, 255, !dbg !7014
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !6986, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6989
  %27 = or i32 %25, %26, !dbg !7015
  call void @llvm.dbg.value(metadata i32 %27, metadata !6986, metadata !DIExpression()), !dbg !6989
  store i32 %24, i32* %3, align 4, !dbg !7016
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7017
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !7018
  ret i32 %27, !dbg !7019
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !7020 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7024, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i8* %1, metadata !7025, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %2, metadata !7026, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i8* %1, metadata !7028, metadata !DIExpression()), !dbg !7030
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !7031
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !7031
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !7029, metadata !DIExpression()), !dbg !7032
  %6 = add i32 %0, -1610348544, !dbg !7033
  call void @llvm.dbg.value(metadata i32 %6, metadata !7024, metadata !DIExpression()), !dbg !7030
  %7 = ptrtoint i8* %1 to i32, !dbg !7034
  %8 = and i32 %7, 3, !dbg !7036
  %9 = icmp eq i32 %8, 0, !dbg !7037
  br i1 %9, label %10, label %23, !dbg !7038

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %2, metadata !7026, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %6, metadata !7024, metadata !DIExpression()), !dbg !7030
  %11 = icmp sgt i32 %2, 0, !dbg !7039
  br i1 %11, label %12, label %72, !dbg !7043

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %14, metadata !7026, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %15, metadata !7024, metadata !DIExpression()), !dbg !7030
  %16 = bitcast i8* %13 to i32*, !dbg !7044
  %17 = load i32, i32* %16, align 4, !dbg !7044
  %18 = inttoptr i32 %15 to i32*, !dbg !7044
  store volatile i32 %17, i32* %18, align 4, !dbg !7044
  %19 = add i32 %15, 4, !dbg !7046
  call void @llvm.dbg.value(metadata i32 %19, metadata !7024, metadata !DIExpression()), !dbg !7030
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !7047
  call void @llvm.dbg.value(metadata i8* %20, metadata !7028, metadata !DIExpression()), !dbg !7030
  %21 = add nsw i32 %14, -4, !dbg !7048
  call void @llvm.dbg.value(metadata i32 %21, metadata !7026, metadata !DIExpression()), !dbg !7030
  %22 = icmp ugt i32 %14, 4, !dbg !7039
  br i1 %22, label %12, label %72, !dbg !7043, !llvm.loop !7049

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !7051
  %25 = icmp eq i32 %24, 0, !dbg !7053
  call void @llvm.dbg.value(metadata i8* %1, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i8* %1, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %2, metadata !7026, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %2, metadata !7026, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %6, metadata !7024, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %6, metadata !7024, metadata !DIExpression()), !dbg !7030
  %26 = icmp sgt i32 %2, 0, !dbg !7054
  br i1 %25, label %31, label %27, !dbg !7055

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !7056

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !7056

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !7059

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !7059

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %39, metadata !7026, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %40, metadata !7024, metadata !DIExpression()), !dbg !7030
  %41 = bitcast i8* %38 to i16*, !dbg !7062
  %42 = load i16, i16* %41, align 2, !dbg !7062
  store i16 %42, i16* %34, align 4, !dbg !7065
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !7066
  %44 = bitcast i8* %43 to i16*, !dbg !7066
  %45 = load i16, i16* %44, align 2, !dbg !7067
  store i16 %45, i16* %35, align 2, !dbg !7068
  %46 = load i32, i32* %36, align 4, !dbg !7069
  %47 = inttoptr i32 %40 to i32*, !dbg !7069
  store volatile i32 %46, i32* %47, align 4, !dbg !7069
  %48 = add i32 %40, 4, !dbg !7070
  call void @llvm.dbg.value(metadata i32 %48, metadata !7024, metadata !DIExpression()), !dbg !7030
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !7071
  call void @llvm.dbg.value(metadata i8* %49, metadata !7028, metadata !DIExpression()), !dbg !7030
  %50 = add nsw i32 %39, -4, !dbg !7072
  call void @llvm.dbg.value(metadata i32 %50, metadata !7026, metadata !DIExpression()), !dbg !7030
  %51 = icmp ugt i32 %39, 4, !dbg !7073
  br i1 %51, label %37, label %72, !dbg !7059, !llvm.loop !7074

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %54, metadata !7026, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %55, metadata !7024, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i8* %53, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 0, metadata !7027, metadata !DIExpression()), !dbg !7030
  br label %56, !dbg !7076

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %58, metadata !7027, metadata !DIExpression()), !dbg !7030
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !7080
  call void @llvm.dbg.value(metadata i8* %59, metadata !7028, metadata !DIExpression()), !dbg !7030
  %60 = load i8, i8* %57, align 1, !dbg !7083
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !7084
  store i8 %60, i8* %61, align 1, !dbg !7085
  %62 = add nuw nsw i32 %58, 1, !dbg !7086
  call void @llvm.dbg.value(metadata i32 %62, metadata !7027, metadata !DIExpression()), !dbg !7030
  %63 = icmp ult i32 %58, 3, !dbg !7087
  %64 = icmp ult i32 %62, %54, !dbg !7088
  %65 = select i1 %63, i1 %64, i1 false, !dbg !7088
  br i1 %65, label %56, label %66, !dbg !7076, !llvm.loop !7089

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !7091
  %68 = inttoptr i32 %55 to i32*, !dbg !7091
  store volatile i32 %67, i32* %68, align 4, !dbg !7091
  %69 = add i32 %55, 4, !dbg !7092
  call void @llvm.dbg.value(metadata i32 %69, metadata !7024, metadata !DIExpression()), !dbg !7030
  %70 = add nsw i32 %54, -4, !dbg !7093
  call void @llvm.dbg.value(metadata i8* %59, metadata !7028, metadata !DIExpression()), !dbg !7030
  call void @llvm.dbg.value(metadata i32 %70, metadata !7026, metadata !DIExpression()), !dbg !7030
  %71 = icmp sgt i32 %54, 4, !dbg !7094
  br i1 %71, label %52, label %72, !dbg !7056, !llvm.loop !7095

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !7097
  ret void, !dbg !7097
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !7098 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !7102, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i8* %1, metadata !7103, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i8* %2, metadata !7104, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i16 %3, metadata !7105, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i16 %4, metadata !7106, metadata !DIExpression()), !dbg !7112
  %7 = bitcast i32* %6 to i8*, !dbg !7113
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7113
  call void @llvm.dbg.value(metadata i8* %7, metadata !7111, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 0, metadata !7108, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7110, metadata !DIExpression()), !dbg !7112
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7110, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 0, metadata !7108, metadata !DIExpression()), !dbg !7112
  %9 = icmp eq i16 %3, 0, !dbg !7114
  br i1 %9, label %33, label %10, !dbg !7117

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !7110, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 %12, metadata !7108, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 0, metadata !7109, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 0, metadata !7107, metadata !DIExpression()), !dbg !7112
  store i32 0, i32* %6, align 4, !dbg !7118
  call void @llvm.dbg.value(metadata i32 0, metadata !7109, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 %12, metadata !7108, metadata !DIExpression()), !dbg !7112
  %13 = icmp ult i32 %12, %8, !dbg !7121
  br i1 %13, label %14, label %27, !dbg !7123

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7109, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 %16, metadata !7108, metadata !DIExpression()), !dbg !7112
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7124
  %18 = load i8, i8* %17, align 1, !dbg !7124
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !7126
  store i8 %18, i8* %19, align 1, !dbg !7127
  %20 = add nuw nsw i32 %16, 1, !dbg !7128
  call void @llvm.dbg.value(metadata i32 %20, metadata !7108, metadata !DIExpression()), !dbg !7112
  %21 = add nuw nsw i32 %15, 1, !dbg !7129
  call void @llvm.dbg.value(metadata i32 %21, metadata !7109, metadata !DIExpression()), !dbg !7112
  %22 = icmp ult i32 %20, %8, !dbg !7121
  %23 = icmp ult i32 %15, 3, !dbg !7130
  %24 = select i1 %22, i1 %23, i1 false, !dbg !7130
  br i1 %24, label %14, label %25, !dbg !7123, !llvm.loop !7131

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !7133
  br label %27, !dbg !7133

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !7133
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !7134
  call void @llvm.dbg.value(metadata i32 %28, metadata !7107, metadata !DIExpression()), !dbg !7112
  %30 = bitcast i8* %11 to i32*, !dbg !7133
  store volatile i32 %28, i32* %30, align 4, !dbg !7133
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !7135
  call void @llvm.dbg.value(metadata i8* %31, metadata !7110, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 %29, metadata !7108, metadata !DIExpression()), !dbg !7112
  %32 = icmp ult i32 %29, %8, !dbg !7114
  br i1 %32, label %10, label %33, !dbg !7117, !llvm.loop !7136

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7138
  %34 = zext i16 %4 to i32, !dbg !7139
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7140
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !7141
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !7142
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !7110, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7112
  call void @llvm.dbg.value(metadata i8* %2, metadata !7104, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 0, metadata !7108, metadata !DIExpression()), !dbg !7112
  %35 = icmp eq i16 %4, 0, !dbg !7143
  br i1 %35, label %47, label %36, !dbg !7146

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !7147
  call void @llvm.dbg.value(metadata i8* %37, metadata !7110, metadata !DIExpression()), !dbg !7112
  br label %38, !dbg !7146

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !7104, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i8* %40, metadata !7110, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.value(metadata i32 %41, metadata !7108, metadata !DIExpression()), !dbg !7112
  %42 = load volatile i8, i8* %40, align 1, !dbg !7148
  store i8 %42, i8* %39, align 1, !dbg !7150
  %43 = add nuw nsw i32 %41, 1, !dbg !7151
  call void @llvm.dbg.value(metadata i32 %43, metadata !7108, metadata !DIExpression()), !dbg !7112
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !7152
  call void @llvm.dbg.value(metadata i8* %44, metadata !7104, metadata !DIExpression()), !dbg !7112
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !7153
  call void @llvm.dbg.value(metadata i8* %45, metadata !7110, metadata !DIExpression()), !dbg !7112
  %46 = icmp eq i32 %43, %34, !dbg !7143
  br i1 %46, label %47, label %38, !dbg !7146, !llvm.loop !7154

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7156
  ret void, !dbg !7156
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7157 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7161, metadata !DIExpression()), !dbg !7169
  call void @llvm.dbg.value(metadata i8* %1, metadata !7162, metadata !DIExpression()), !dbg !7169
  call void @llvm.dbg.value(metadata i32 0, metadata !7163, metadata !DIExpression()), !dbg !7169
  %4 = icmp eq i8* %1, null, !dbg !7170
  br i1 %4, label %67, label %5, !dbg !7172

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %27, metadata !7164, metadata !DIExpression()), !dbg !7169
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !7174

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !7169
  call void @llvm.dbg.value(metadata i32 %9, metadata !7163, metadata !DIExpression()), !dbg !7169
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !7175
  %11 = load i8, i8* %10, align 1, !dbg !7175
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !7176

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !7177

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7180
  %15 = and i32 %14, -2, !dbg !7180
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7180
  br label %41, !dbg !7184

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7185
  %18 = and i32 %17, -2, !dbg !7185
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7185
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !7188

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7190
  %22 = or i32 %21, 1, !dbg !7190
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7190
  br label %41, !dbg !7194

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7195
  %25 = or i32 %24, 1, !dbg !7195
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7195
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !7173
  %28 = icmp eq i32 %27, 0, !dbg !7198
  br i1 %7, label %29, label %35, !dbg !7201

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7202
  br i1 %28, label %33, label %31, !dbg !7205

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !7202
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7202
  br label %67, !dbg !7202

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !7202
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7202
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7206
  br i1 %28, label %39, label %37, !dbg !7209

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !7206
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7206
  br label %67, !dbg !7206

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !7206
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7206
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !7210
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !7211
  %44 = load i8, i8* %43, align 1, !dbg !7211
  %45 = icmp eq i8 %44, 5, !dbg !7212
  br i1 %45, label %46, label %56, !dbg !7213

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7214
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !7215

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !7165, metadata !DIExpression(DW_OP_deref)), !dbg !7216
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !7217
  %50 = load i8, i8* %3, align 1, !dbg !7219
  call void @llvm.dbg.value(metadata i8 %50, metadata !7165, metadata !DIExpression()), !dbg !7216
  %51 = load i8, i8* %48, align 1, !dbg !7220
  %52 = and i8 %51, %50, !dbg !7221
  %53 = icmp eq i8 %52, 0, !dbg !7222
  br i1 %53, label %54, label %49, !dbg !7222, !llvm.loop !7223

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7225
  %55 = add i32 %9, 1, !dbg !7226
  br label %61, !dbg !7227

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !7228
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !7230
  %59 = load i8, i8* %58, align 1, !dbg !7230
  %60 = zext i8 %59 to i16, !dbg !7230
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !7231
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !7226
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !7232
  %64 = load i8, i8* %63, align 1, !dbg !7232
  %65 = zext i8 %64 to i32, !dbg !7232
  %66 = add i32 %42, %65, !dbg !7233
  call void @llvm.dbg.value(metadata i32 %66, metadata !7163, metadata !DIExpression()), !dbg !7169
  br label %8, !dbg !7174, !llvm.loop !7234

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !7236
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7237 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7241, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.value(metadata i8* %1, metadata !7242, metadata !DIExpression()), !dbg !7244
  call void @llvm.dbg.value(metadata i8 %2, metadata !7243, metadata !DIExpression()), !dbg !7244
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !7243, metadata !DIExpression(DW_OP_deref)), !dbg !7244
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !7245
  ret void, !dbg !7246
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7247 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7251, metadata !DIExpression()), !dbg !7253
  call void @llvm.dbg.value(metadata i8* %1, metadata !7252, metadata !DIExpression()), !dbg !7253
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !7254
  ret void, !dbg !7255
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !7256 {
  ret i32 78, !dbg !7260
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !7261 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7265
  %2 = and i32 %1, 7340032, !dbg !7267
  %3 = icmp ult i32 %2, 2097153, !dbg !7268
  %4 = select i1 %3, i32 30, i32 18, !dbg !7269
  ret i32 %4, !dbg !7270
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !7271 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7275, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i32 0, metadata !7276, metadata !DIExpression()), !dbg !7277
  call void @llvm.dbg.value(metadata i32 0, metadata !7276, metadata !DIExpression()), !dbg !7277
  br label %2, !dbg !7278

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7276, metadata !DIExpression()), !dbg !7277
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7280
  store i8 -1, i8* %4, align 1, !dbg !7283
  %5 = add nuw nsw i32 %3, 1, !dbg !7284
  call void @llvm.dbg.value(metadata i32 %5, metadata !7276, metadata !DIExpression()), !dbg !7277
  %6 = icmp eq i32 %5, 8, !dbg !7285
  br i1 %6, label %7, label %2, !dbg !7278, !llvm.loop !7286

7:                                                ; preds = %2
  ret i1 true, !dbg !7288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !7289 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !7291, metadata !DIExpression()), !dbg !7292
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7293
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !7294
  %3 = load i8, i8* %2, align 1, !dbg !7294
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7295
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !7296
  %5 = ptrtoint i8* %4 to i32, !dbg !7297
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7298
  %6 = bitcast i8* %4 to i32*, !dbg !7299
  %7 = load volatile i32, i32* %6, align 4, !dbg !7300
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7301
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7302
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7303
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7304
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7305
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7306
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7307
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7308
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7309
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7310
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7311
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7312
  %14 = or i32 %13, 986880, !dbg !7313
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7314
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7315
  %16 = or i32 %15, 252645135, !dbg !7316
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7317
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !7318
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7319
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !7320
  %20 = load i8, i8* %19, align 1, !dbg !7320
  %21 = zext i8 %20 to i32, !dbg !7321
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !7322
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !7323
  ret void, !dbg !7324
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !7325 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7326
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7327
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7328
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7329
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7330
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7331
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7332
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7333
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7334
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7335
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7336
  %7 = and i32 %6, -252645136, !dbg !7337
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7338
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7339
  %9 = zext i8 %8 to i32, !dbg !7339
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !7340
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !7341
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7342
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7344
  %13 = inttoptr i32 %12 to i32*, !dbg !7345
  %14 = load volatile i32, i32* %13, align 4, !dbg !7346
  %15 = icmp eq i32 %11, %14, !dbg !7347
  br i1 %15, label %17, label %16, !dbg !7348

16:                                               ; preds = %0, %16
  br label %16, !dbg !7349, !llvm.loop !7350

17:                                               ; preds = %0
  ret void, !dbg !7352
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7353 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7354
  %2 = icmp eq i32 %1, 0, !dbg !7356
  br i1 %2, label %3, label %5, !dbg !7357

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7358
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7360
  br label %5, !dbg !7361

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7362
  %7 = icmp eq i32 %6, 0, !dbg !7364
  br i1 %7, label %8, label %10, !dbg !7365

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7366
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7368
  br label %10, !dbg !7369

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7370
  %12 = and i32 %11, -256, !dbg !7371
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7372
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7373
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !7374
  ret void, !dbg !7375
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7376 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7377
  %2 = icmp eq i32 %1, 0, !dbg !7379
  br i1 %2, label %4, label %3, !dbg !7380

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7381
  br label %4, !dbg !7383

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7384
  %6 = icmp eq i32 %5, 0, !dbg !7386
  br i1 %6, label %8, label %7, !dbg !7387

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7388
  br label %8, !dbg !7390

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !7391
  ret void, !dbg !7392
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !7393 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7395, metadata !DIExpression()), !dbg !7396
  ret i32 0, !dbg !7397
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !7398 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7400, metadata !DIExpression()), !dbg !7401
  ret i32 0, !dbg !7402
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7403 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7405, metadata !DIExpression()), !dbg !7406
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !7407
  ret void, !dbg !7408
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !7409 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7412
  call void @llvm.dbg.value(metadata i32 %1, metadata !7411, metadata !DIExpression()), !dbg !7413
  ret i32 %1, !dbg !7414
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7415 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7417, metadata !DIExpression()), !dbg !7418
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !7419
  ret void, !dbg !7420
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !7421 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !7423, metadata !DIExpression()), !dbg !7424
  ret i32 0, !dbg !7425
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !7426 {
  ret i32 0, !dbg !7429
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !7430 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7434, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.value(metadata i8* %1, metadata !7435, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.value(metadata i32 %2, metadata !7436, metadata !DIExpression()), !dbg !7449
  %4 = ptrtoint i8* %0 to i32, !dbg !7450
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !7451
  %7 = and i32 %6, 3, !dbg !7451
  %8 = icmp eq i32 %7, 0, !dbg !7451
  br i1 %8, label %9, label %26, !dbg !7451

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !7452
  call void @llvm.dbg.value(metadata i32* %10, metadata !7438, metadata !DIExpression()), !dbg !7453
  %11 = bitcast i8* %1 to i32*, !dbg !7454
  call void @llvm.dbg.value(metadata i32* %11, metadata !7441, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.value(metadata i32 0, metadata !7437, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.value(metadata i32 0, metadata !7437, metadata !DIExpression()), !dbg !7449
  %12 = icmp ult i32 %2, 4, !dbg !7455
  br i1 %12, label %65, label %13, !dbg !7458

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !7458

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7437, metadata !DIExpression()), !dbg !7449
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !7459
  %18 = load i32, i32* %17, align 4, !dbg !7459
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !7462
  %20 = load i32, i32* %19, align 4, !dbg !7462
  %21 = icmp eq i32 %18, %20, !dbg !7463
  %22 = add nuw nsw i32 %16, 1, !dbg !7464
  call void @llvm.dbg.value(metadata i32 %22, metadata !7437, metadata !DIExpression()), !dbg !7449
  %23 = xor i1 %21, true, !dbg !7465
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !7465
  call void @llvm.dbg.value(metadata i32 %22, metadata !7437, metadata !DIExpression()), !dbg !7449
  br i1 %25, label %59, label %15, !dbg !7465, !llvm.loop !7466

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !7468
  %28 = icmp eq i32 %27, 0, !dbg !7468
  br i1 %28, label %31, label %29, !dbg !7468

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !7437, metadata !DIExpression()), !dbg !7449
  %30 = icmp eq i32 %2, 0, !dbg !7469
  br i1 %30, label %65, label %48, !dbg !7472

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !7473
  call void @llvm.dbg.value(metadata i16* %32, metadata !7442, metadata !DIExpression()), !dbg !7474
  %33 = bitcast i8* %1 to i16*, !dbg !7475
  call void @llvm.dbg.value(metadata i16* %33, metadata !7445, metadata !DIExpression()), !dbg !7474
  call void @llvm.dbg.value(metadata i32 0, metadata !7437, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.value(metadata i32 0, metadata !7437, metadata !DIExpression()), !dbg !7449
  %34 = icmp ult i32 %2, 2, !dbg !7476
  br i1 %34, label %65, label %35, !dbg !7479

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !7479

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7437, metadata !DIExpression()), !dbg !7449
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !7480
  %40 = load i16, i16* %39, align 2, !dbg !7480
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !7483
  %42 = load i16, i16* %41, align 2, !dbg !7483
  %43 = icmp eq i16 %40, %42, !dbg !7484
  %44 = add nuw nsw i32 %38, 1, !dbg !7485
  call void @llvm.dbg.value(metadata i32 %44, metadata !7437, metadata !DIExpression()), !dbg !7449
  %45 = xor i1 %43, true, !dbg !7486
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !7486
  call void @llvm.dbg.value(metadata i32 %44, metadata !7437, metadata !DIExpression()), !dbg !7449
  br i1 %47, label %61, label %37, !dbg !7486, !llvm.loop !7487

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7437, metadata !DIExpression()), !dbg !7449
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !7489
  %51 = load i8, i8* %50, align 1, !dbg !7489
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !7492
  %53 = load i8, i8* %52, align 1, !dbg !7492
  %54 = icmp eq i8 %51, %53, !dbg !7493
  %55 = add nuw i32 %49, 1, !dbg !7494
  call void @llvm.dbg.value(metadata i32 %55, metadata !7437, metadata !DIExpression()), !dbg !7449
  %56 = xor i1 %54, true, !dbg !7495
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !7495
  call void @llvm.dbg.value(metadata i32 %55, metadata !7437, metadata !DIExpression()), !dbg !7449
  br i1 %58, label %63, label %48, !dbg !7495, !llvm.loop !7496

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !7498
  br label %65, !dbg !7498

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !7498
  br label %65, !dbg !7498

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !7498
  br label %65, !dbg !7498

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !7449
  ret i1 %66, !dbg !7498
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !7499 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7503, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i8* %1, metadata !7504, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i32 %2, metadata !7505, metadata !DIExpression()), !dbg !7514
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7515
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !7506, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i8* %0, metadata !7507, metadata !DIExpression()), !dbg !7514
  %7 = bitcast i8** %4 to i8*, !dbg !7516
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7516
  call void @llvm.dbg.value(metadata i8* %1, metadata !7508, metadata !DIExpression()), !dbg !7514
  store i8* %1, i8** %4, align 4, !dbg !7517
  call void @llvm.dbg.value(metadata i32 0, metadata !7509, metadata !DIExpression()), !dbg !7514
  %8 = bitcast i32* %5 to i8*, !dbg !7518
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7518
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7519
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !7520
  store i8 1, i8* %9, align 4, !dbg !7521
  call void @llvm.dbg.value(metadata i32 %2, metadata !7505, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i8* %0, metadata !7507, metadata !DIExpression()), !dbg !7514
  %10 = icmp eq i32 %2, 0, !dbg !7522
  br i1 %10, label %73, label %11, !dbg !7523

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !7524
  call void @llvm.dbg.value(metadata i32 %12, metadata !7507, metadata !DIExpression()), !dbg !7514
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !7523

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !7505, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i32 %20, metadata !7507, metadata !DIExpression()), !dbg !7514
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7525
  %22 = shl i32 %21, 1, !dbg !7527
  %23 = add i32 %22, -1, !dbg !7528
  %24 = and i32 %23, %20, !dbg !7529
  %25 = sub i32 %22, %24, !dbg !7530
  %26 = icmp ugt i32 %19, %25, !dbg !7531
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !7532
  call void @llvm.dbg.value(metadata i32 %27, metadata !7511, metadata !DIExpression()), !dbg !7514
  call void @llvm.dbg.value(metadata i32 %27, metadata !7510, metadata !DIExpression()), !dbg !7514
  store i32 %27, i32* %5, align 4, !dbg !7533
  %28 = load i32, i32* %13, align 4, !dbg !7534
  %29 = and i32 %28, 16, !dbg !7536
  %30 = icmp eq i32 %29, 0, !dbg !7536
  br i1 %30, label %31, label %32, !dbg !7537

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !7538
  br label %32, !dbg !7540

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !7541
  %34 = icmp eq i8 %33, 4, !dbg !7543
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7544
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !7544
  %37 = load i8, i8* %36, align 1, !dbg !7544
  %38 = zext i8 %37 to i32, !dbg !7544
  br i1 %34, label %39, label %43, !dbg !7545

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !7508, metadata !DIExpression(DW_OP_deref)), !dbg !7514
  call void @llvm.dbg.value(metadata i32* %5, metadata !7510, metadata !DIExpression(DW_OP_deref)), !dbg !7514
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !7546
  call void @llvm.dbg.value(metadata i32 %40, metadata !7509, metadata !DIExpression()), !dbg !7514
  %41 = load i8*, i8** %4, align 4, !dbg !7548
  call void @llvm.dbg.value(metadata i8* %41, metadata !7508, metadata !DIExpression()), !dbg !7514
  %42 = load i32, i32* %5, align 4, !dbg !7549
  call void @llvm.dbg.value(metadata i32 %42, metadata !7510, metadata !DIExpression()), !dbg !7514
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !7550
  br label %47, !dbg !7551

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !7552
  call void @llvm.dbg.value(metadata i32 %44, metadata !7509, metadata !DIExpression()), !dbg !7514
  %45 = load i8*, i8** %4, align 4, !dbg !7554
  call void @llvm.dbg.value(metadata i8* %45, metadata !7508, metadata !DIExpression()), !dbg !7514
  %46 = load i32, i32* %5, align 4, !dbg !7555
  call void @llvm.dbg.value(metadata i32 %46, metadata !7510, metadata !DIExpression()), !dbg !7514
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !7556
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !7544
  call void @llvm.dbg.value(metadata i32 %48, metadata !7509, metadata !DIExpression()), !dbg !7514
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !7557
  call void @llvm.dbg.value(metadata i32 %49, metadata !7513, metadata !DIExpression()), !dbg !7514
  %50 = load i8, i8* %14, align 1, !dbg !7558
  %51 = zext i8 %50 to i32, !dbg !7559
  %52 = add i32 %27, 1, !dbg !7560
  %53 = add i32 %52, %51, !dbg !7561
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7562
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7563
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7564
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !7565
  %54 = load i16, i16* %16, align 2, !dbg !7566
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !7567
  %55 = load i16, i16* %16, align 2, !dbg !7568
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !7569
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !7570
  br label %56, !dbg !7571

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7572
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !7574
  %59 = load i8, i8* %58, align 1, !dbg !7574
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !7575
  call void @llvm.dbg.value(metadata i32 %60, metadata !7512, metadata !DIExpression()), !dbg !7514
  %61 = load i8*, i8** %17, align 4, !dbg !7576
  %62 = load i8, i8* %61, align 1, !dbg !7578
  %63 = zext i8 %62 to i32, !dbg !7578
  %64 = and i32 %60, %63, !dbg !7579
  %65 = icmp eq i32 %64, 0, !dbg !7580
  br i1 %65, label %66, label %56, !dbg !7581, !llvm.loop !7582

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7584
  %67 = load i32, i32* %5, align 4, !dbg !7585
  call void @llvm.dbg.value(metadata i32 %67, metadata !7510, metadata !DIExpression()), !dbg !7514
  %68 = load i8*, i8** %4, align 4, !dbg !7586
  call void @llvm.dbg.value(metadata i8* %68, metadata !7508, metadata !DIExpression()), !dbg !7514
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !7586
  call void @llvm.dbg.value(metadata i8* %69, metadata !7508, metadata !DIExpression()), !dbg !7514
  store i8* %69, i8** %4, align 4, !dbg !7586
  %70 = sub i32 %19, %27, !dbg !7587
  call void @llvm.dbg.value(metadata i32 %70, metadata !7505, metadata !DIExpression()), !dbg !7514
  %71 = add i32 %27, %20, !dbg !7588
  call void @llvm.dbg.value(metadata i32 %71, metadata !7507, metadata !DIExpression()), !dbg !7514
  %72 = icmp eq i32 %70, 0, !dbg !7522
  br i1 %72, label %73, label %18, !dbg !7523, !llvm.loop !7589

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !7591
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7592
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7593
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7593
  ret void, !dbg !7593
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7594 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7598, metadata !DIExpression()), !dbg !7600
  br label %2, !dbg !7601

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !7602
  call void @llvm.dbg.value(metadata i32 %3, metadata !7599, metadata !DIExpression()), !dbg !7600
  %4 = icmp eq i32 %3, 0, !dbg !7604
  br i1 %4, label %5, label %2, !dbg !7605, !llvm.loop !7606

5:                                                ; preds = %2
  ret void, !dbg !7608
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7609 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7611, metadata !DIExpression()), !dbg !7612
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7613
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !7613
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !7614
  %5 = load i8, i8* %4, align 1, !dbg !7614
  %6 = zext i8 %5 to i32, !dbg !7615
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !7616
  ret void, !dbg !7617
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7618 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7621
  call void @llvm.dbg.value(metadata i32 %1, metadata !7620, metadata !DIExpression()), !dbg !7622
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !7623
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7624
  ret void, !dbg !7625
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !7626 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7630, metadata !DIExpression()), !dbg !7634
  call void @llvm.dbg.value(metadata i8 %1, metadata !7631, metadata !DIExpression()), !dbg !7634
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7635
  call void @llvm.dbg.value(metadata i32 %3, metadata !7632, metadata !DIExpression()), !dbg !7634
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7636
  %5 = load i16, i16* %4, align 2, !dbg !7636
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !7637
  %6 = zext i8 %1 to i32, !dbg !7638
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7639
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7640
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7641
  %7 = load i16, i16* %4, align 2, !dbg !7642
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !7643
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7644
  %9 = lshr i32 %8, 8, !dbg !7645
  %10 = and i32 %9, 255, !dbg !7646
  call void @llvm.dbg.value(metadata i32 %10, metadata !7633, metadata !DIExpression()), !dbg !7634
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !7647
  ret i32 %10, !dbg !7648
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7649 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7652
  call void @llvm.dbg.value(metadata i32 %1, metadata !7651, metadata !DIExpression()), !dbg !7653
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !7654
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7655
  %3 = and i32 %2, -513, !dbg !7655
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7655
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7658
  ret void, !dbg !7659
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7660 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7662, metadata !DIExpression()), !dbg !7664
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7665
  call void @llvm.dbg.value(metadata i32 %2, metadata !7663, metadata !DIExpression()), !dbg !7664
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !7666
  br i1 %3, label %4, label %5, !dbg !7668

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !7669
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7671
  ret void, !dbg !7672

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7673
  tail call void @Flash_ReturnReady() #21, !dbg !7675
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !7675
  unreachable, !dbg !7675
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !7679 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !7681, metadata !DIExpression()), !dbg !7686
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7687
  call void @llvm.dbg.value(metadata i32 %1, metadata !7683, metadata !DIExpression()), !dbg !7686
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !7688
  %3 = icmp eq i32 %2, 0, !dbg !7690
  br i1 %3, label %4, label %125, !dbg !7691

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7692
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7693
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !7681, metadata !DIExpression()), !dbg !7686
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !7695
  %7 = load i32, i32* %6, align 4, !dbg !7695
  %8 = xor i32 %7, -1, !dbg !7695
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !7695
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !7695
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !7695
  %12 = icmp eq i32 %8, %11, !dbg !7695
  br i1 %12, label %14, label %13, !dbg !7698

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !7699
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !7699
  unreachable, !dbg !7699

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7701
  %16 = icmp ult i32 %15, 16, !dbg !7703
  br i1 %16, label %17, label %34, !dbg !7704

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7705
  %19 = load i8, i8* %18, align 4, !dbg !7705
  %20 = icmp eq i8 %19, 1, !dbg !7706
  br i1 %20, label %21, label %34, !dbg !7707

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !7708

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7710
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !7712
  %27 = load i8, i8* %26, align 1, !dbg !7712
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !7713
  call void @llvm.dbg.value(metadata i32 %28, metadata !7682, metadata !DIExpression()), !dbg !7686
  %29 = load i8*, i8** %23, align 4, !dbg !7714
  %30 = load i8, i8* %29, align 1, !dbg !7716
  %31 = zext i8 %30 to i32, !dbg !7716
  %32 = and i32 %28, %31, !dbg !7717
  %33 = icmp eq i32 %32, 0, !dbg !7718
  br i1 %33, label %34, label %24, !dbg !7719, !llvm.loop !7720

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7722, !range !2650
  %36 = icmp ne i8 %35, 0, !dbg !7722
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !7724
  br i1 %39, label %116, label %40, !dbg !7724

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !7725
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7725
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !7727
  %44 = load i8, i8* %43, align 1, !dbg !7727
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !7728
  call void @llvm.dbg.value(metadata i32 %45, metadata !7682, metadata !DIExpression()), !dbg !7686
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !7729
  %47 = load i8*, i8** %46, align 4, !dbg !7729
  %48 = load i8, i8* %47, align 1, !dbg !7731
  %49 = zext i8 %48 to i32, !dbg !7731
  %50 = and i32 %45, %49, !dbg !7732
  %51 = icmp eq i32 %50, 0, !dbg !7733
  br i1 %51, label %85, label %52, !dbg !7734

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !7735
  br label %53, !dbg !7737

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7738
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !7740
  %56 = load i8, i8* %55, align 1, !dbg !7740
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !7741
  call void @llvm.dbg.value(metadata i32 %57, metadata !7682, metadata !DIExpression()), !dbg !7686
  %58 = load i8*, i8** %46, align 4, !dbg !7742
  %59 = load i8, i8* %58, align 1, !dbg !7744
  %60 = zext i8 %59 to i32, !dbg !7744
  %61 = and i32 %57, %60, !dbg !7745
  %62 = icmp eq i32 %61, 0, !dbg !7746
  br i1 %62, label %63, label %53, !dbg !7747, !llvm.loop !7748

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7750
  %65 = load i32, i32* %64, align 4, !dbg !7750
  %66 = and i32 %65, 4, !dbg !7752
  %67 = icmp eq i32 %66, 0, !dbg !7752
  br i1 %67, label %84, label %68, !dbg !7753

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7754
  %70 = load i8, i8* %69, align 4, !dbg !7754
  %71 = icmp eq i8 %70, 2, !dbg !7755
  br i1 %71, label %72, label %84, !dbg !7756

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7757
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7759
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7760
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7761
  %74 = load i16, i16* %73, align 2, !dbg !7761
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !7762
  %75 = load i16, i16* %73, align 2, !dbg !7763
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !7764
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7765
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7766
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7767
  %76 = load i16, i16* %73, align 2, !dbg !7768
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !7769
  %77 = load i16, i16* %73, align 2, !dbg !7770
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !7771
  br label %78, !dbg !7772

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7773
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7775
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7776
  %79 = load i16, i16* %73, align 2, !dbg !7777
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !7778
  %80 = load i16, i16* %73, align 2, !dbg !7779
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !7780
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7781
  call void @llvm.dbg.value(metadata i32 %81, metadata !7682, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !7686
  %82 = and i32 %81, 256, !dbg !7782
  %83 = icmp eq i32 %82, 0, !dbg !7782
  br i1 %83, label %84, label %78, !dbg !7782, !llvm.loop !7783

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !7785
  br label %116, !dbg !7786

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7787
  %87 = load i32, i32* %86, align 4, !dbg !7787
  %88 = and i32 %87, 2, !dbg !7790
  %89 = icmp eq i32 %88, 0, !dbg !7790
  br i1 %89, label %115, label %90, !dbg !7791

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !7792
  %92 = load %struct.anon.9*, %struct.anon.9** %91, align 4, !dbg !7792
  %93 = icmp eq %struct.anon.9* %92, null, !dbg !7793
  br i1 %93, label %94, label %115, !dbg !7794

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7795
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !7797
  %97 = load i8, i8* %96, align 1, !dbg !7797
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !7798
  call void @llvm.dbg.value(metadata i32 %98, metadata !7682, metadata !DIExpression()), !dbg !7686
  %99 = load i8*, i8** %46, align 4, !dbg !7799
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !7801
  %101 = load i8, i8* %100, align 1, !dbg !7801
  %102 = zext i8 %101 to i32, !dbg !7801
  %103 = and i32 %98, %102, !dbg !7802
  %104 = icmp eq i32 %103, 0, !dbg !7803
  br i1 %104, label %105, label %115, !dbg !7804

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !7805
  %107 = load i8, i8* %106, align 1, !dbg !7805
  %108 = zext i8 %107 to i32, !dbg !7805
  %109 = and i32 %98, %108, !dbg !7806
  %110 = icmp eq i32 %109, 0, !dbg !7807
  br i1 %110, label %111, label %115, !dbg !7808

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7809
  %113 = load i16, i16* %112, align 2, !dbg !7809
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !7811
  %114 = load i16, i16* %112, align 2, !dbg !7812
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !7813
  br label %115, !dbg !7814

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7815
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !7816
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7817
  %118 = sub i32 0, %117, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %118, metadata !7684, metadata !DIExpression()), !dbg !7818
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7819
  %120 = icmp ult i32 %119, %118, !dbg !7821
  br i1 %120, label %121, label %122, !dbg !7822

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7823
  br label %122, !dbg !7825

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7826
  %124 = and i32 %123, -513, !dbg !7826
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7826
  br label %125, !dbg !7829

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7686
  ret void, !dbg !7830
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7831 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7833, metadata !DIExpression()), !dbg !7837
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !7838
  %3 = icmp eq i32 %2, -1, !dbg !7840
  br i1 %3, label %12, label %4, !dbg !7841

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !7835, metadata !DIExpression()), !dbg !7837
  %5 = sub i32 0, %2, !dbg !7842
  call void @llvm.dbg.value(metadata i32 %5, metadata !7836, metadata !DIExpression()), !dbg !7837
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7844
  %7 = load i8, i8* %6, align 4, !dbg !7844
  %8 = zext i8 %7 to i32, !dbg !7846
  %9 = icmp ugt i32 %8, %5, !dbg !7847
  br i1 %9, label %10, label %12, !dbg !7848

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !7849
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !7851
  br label %12, !dbg !7852

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7853
  call void @llvm.dbg.value(metadata i32 %13, metadata !7834, metadata !DIExpression()), !dbg !7837
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7854
  %15 = load i16, i16* %14, align 2, !dbg !7854
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7855
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !7855
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !7856
  %19 = load i8, i8* %18, align 1, !dbg !7856
  %20 = zext i8 %19 to i32, !dbg !7857
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !7858
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !7859
  ret void, !dbg !7860
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7861 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7864
  call void @llvm.dbg.value(metadata i32 %1, metadata !7863, metadata !DIExpression()), !dbg !7865
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7866
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7867
  %3 = and i32 %2, -513, !dbg !7867
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7867
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7870
  ret void, !dbg !7871
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7872 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7876, metadata !DIExpression()), !dbg !7880
  call void @llvm.dbg.value(metadata i32 %1, metadata !7877, metadata !DIExpression()), !dbg !7880
  call void @llvm.dbg.value(metadata i8 %2, metadata !7878, metadata !DIExpression()), !dbg !7880
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7881
  call void @llvm.dbg.value(metadata i32 %4, metadata !7879, metadata !DIExpression()), !dbg !7880
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7882
  %6 = load i16, i16* %5, align 2, !dbg !7882
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !7883
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7884
  %7 = zext i8 %2 to i32, !dbg !7885
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7886
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7887
  %8 = load i16, i16* %5, align 2, !dbg !7888
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !7889
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !7890
  ret void, !dbg !7891
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !7892 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7897
  call void @llvm.dbg.value(metadata i32 %1, metadata !7896, metadata !DIExpression()), !dbg !7898
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !7899
  br i1 %2, label %4, label %3, !dbg !7901

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !7902
  br label %4, !dbg !7904

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !7905
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7905
  ret i32 %5, !dbg !7906
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !7907 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7914
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7911, metadata !DIExpression()), !dbg !7915
  call void @llvm.dbg.value(metadata i8 0, metadata !7913, metadata !DIExpression()), !dbg !7915
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7916
  %3 = load i32, i32* %2, align 4, !dbg !7916
  %4 = xor i32 %3, -1, !dbg !7916
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7916
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !7916
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !7916
  %8 = icmp eq i32 %4, %7, !dbg !7916
  br i1 %8, label %10, label %9, !dbg !7919

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7920
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !7920
  unreachable, !dbg !7920

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7922
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7923
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7923
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !7924
  %14 = load i8, i8* %13, align 1, !dbg !7924
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !7925
  call void @llvm.dbg.value(metadata i32 %15, metadata !7912, metadata !DIExpression()), !dbg !7915
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7926
  %17 = load i8*, i8** %16, align 4, !dbg !7926
  %18 = load i8, i8* %17, align 1, !dbg !7928
  %19 = zext i8 %18 to i32, !dbg !7928
  %20 = and i32 %15, %19, !dbg !7929
  %21 = icmp eq i32 %20, 0, !dbg !7930
  br i1 %21, label %22, label %23, !dbg !7931

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7932
  call void @llvm.dbg.value(metadata i8 1, metadata !7913, metadata !DIExpression()), !dbg !7915
  br label %23, !dbg !7934

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !7913, metadata !DIExpression()), !dbg !7915
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7935
  ret i1 %21, !dbg !7936
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7937 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7939, metadata !DIExpression()), !dbg !7940
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7941, !range !2650
  %2 = icmp eq i8 %1, 0, !dbg !7941
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7941
  %4 = icmp eq i8 %3, 0, !dbg !7941
  %5 = select i1 %2, i1 true, i1 %4, !dbg !7941
  br i1 %5, label %6, label %7, !dbg !7941

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7944
  tail call void @Flash_ReturnReady() #21, !dbg !7946
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !7946
  unreachable, !dbg !7946

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7950
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !7939, metadata !DIExpression()), !dbg !7940
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !7951
  ret void, !dbg !7952
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7953 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7955, metadata !DIExpression()), !dbg !7957
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7958
  call void @llvm.dbg.value(metadata i32 %2, metadata !7956, metadata !DIExpression()), !dbg !7957
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7959
  %4 = load i16, i16* %3, align 2, !dbg !7959
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7960
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !7960
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !7961
  %8 = load i8, i8* %7, align 1, !dbg !7961
  %9 = zext i8 %8 to i32, !dbg !7962
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !7963
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7964
  %11 = load i8, i8* %10, align 4, !dbg !7964
  %12 = icmp eq i8 %11, 0, !dbg !7966
  br i1 %12, label %14, label %13, !dbg !7967

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !7968
  br label %14, !dbg !7970

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !7971
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7972
  ret void, !dbg !7973
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7974 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7977
  call void @llvm.dbg.value(metadata i32 %1, metadata !7976, metadata !DIExpression()), !dbg !7978
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7979
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7980
  ret void, !dbg !7981
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7982 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7986
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7984, metadata !DIExpression()), !dbg !7987
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7988, !range !2650
  %3 = icmp ne i8 %2, 0, !dbg !7988
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7988
  %5 = icmp eq i8 %4, 0, !dbg !7988
  %6 = select i1 %3, i1 %5, i1 false, !dbg !7988
  br i1 %6, label %8, label %7, !dbg !7988

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7991
  tail call void @Flash_ReturnReady() #21, !dbg !7993
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !7993
  unreachable, !dbg !7993

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7997
  %10 = load i32, i32* %9, align 4, !dbg !7997
  %11 = xor i32 %10, -1, !dbg !7997
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7997
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !7997
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !7997
  %15 = icmp eq i32 %11, %14, !dbg !7997
  br i1 %15, label %17, label %16, !dbg !8000

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !8001
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !8001
  unreachable, !dbg !8001

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8003
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !8004

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !8005
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !8007
  %23 = load i8, i8* %22, align 1, !dbg !8007
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !8008
  call void @llvm.dbg.value(metadata i32 %24, metadata !7985, metadata !DIExpression()), !dbg !7987
  %25 = load i8*, i8** %19, align 4, !dbg !8009
  %26 = load i8, i8* %25, align 1, !dbg !8011
  %27 = zext i8 %26 to i32, !dbg !8011
  %28 = and i32 %24, %27, !dbg !8012
  %29 = icmp eq i32 %28, 0, !dbg !8013
  br i1 %29, label %30, label %20, !dbg !8014, !llvm.loop !8015

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8017
  ret void, !dbg !8018
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !8019 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8021, metadata !DIExpression()), !dbg !8022
  ret void, !dbg !8023
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !8024 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8047, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8048, metadata !DIExpression()), !dbg !8050
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8051
  %4 = load i8*, i8** %3, align 4, !dbg !8051
  call void @llvm.dbg.value(metadata i8* %4, metadata !8049, metadata !DIExpression()), !dbg !8050
  store i8 1, i8* %4, align 1, !dbg !8052
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8053
  store i8 2, i8* %5, align 1, !dbg !8054
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8055
  store i8 8, i8* %6, align 1, !dbg !8056
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !8057
  store i8 4, i8* %7, align 1, !dbg !8058
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !8059
  store i8 60, i8* %8, align 1, !dbg !8060
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !8061
  store i8 -128, i8* %9, align 1, !dbg !8062
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !8063
  store i8 96, i8* %10, align 1, !dbg !8064
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8065
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8065
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !8066
  store i8 43, i8* %13, align 1, !dbg !8067
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8068
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !8069
  store i8 43, i8* %15, align 1, !dbg !8070
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8071
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !8072
  store i8 47, i8* %17, align 1, !dbg !8073
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8074
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !8075
  store i8 5, i8* %19, align 1, !dbg !8076
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8077
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !8078
  store i8 1, i8* %21, align 1, !dbg !8079
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8080
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !8081
  store i8 43, i8* %23, align 1, !dbg !8082
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8083
  store i8 22, i8* %24, align 4, !dbg !8084
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !8085
  %26 = load i8, i8* %25, align 1, !dbg !8085
  %27 = icmp eq i8 %26, 32, !dbg !8087
  br i1 %27, label %28, label %49, !dbg !8088

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !8089
  %30 = load i8, i8* %29, align 1, !dbg !8089
  %31 = icmp eq i8 %30, 24, !dbg !8090
  br i1 %31, label %32, label %41, !dbg !8091

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8092
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !8094
  store i8 117, i8* %34, align 1, !dbg !8095
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8096
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !8097
  store i8 122, i8* %36, align 1, !dbg !8098
  %37 = load i8, i8* %25, align 1, !dbg !8099
  %38 = icmp eq i8 %37, 32, !dbg !8101
  br i1 %38, label %39, label %49, !dbg !8102

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !8104
  br label %41, !dbg !8104

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !8104
  %43 = icmp eq i8 %42, 22, !dbg !8105
  br i1 %43, label %44, label %49, !dbg !8106

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8107
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !8109
  store i8 117, i8* %46, align 1, !dbg !8110
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8111
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !8112
  store i8 122, i8* %48, align 1, !dbg !8113
  br label %49, !dbg !8114

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8115
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !8116
  ret i32 0, !dbg !8117
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !8118 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8120, metadata !DIExpression()), !dbg !8124
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8125
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8121, metadata !DIExpression()), !dbg !8124
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8126
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8127
  %5 = load i8, i8* %4, align 1, !dbg !8129
  %6 = icmp eq i8 %5, -62, !dbg !8130
  br i1 %6, label %7, label %15, !dbg !8131

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !8132
  %9 = load i8, i8* %8, align 1, !dbg !8132
  %10 = icmp eq i8 %9, 32, !dbg !8133
  br i1 %10, label %11, label %15, !dbg !8134

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !8135
  %13 = load i8, i8* %12, align 1, !dbg !8135
  %14 = icmp eq i8 %13, 22, !dbg !8136
  br i1 %14, label %48, label %15, !dbg !8137

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8138
  %17 = bitcast i8* %16 to i16*, !dbg !8138
  %18 = load i16, i16* %17, align 2, !dbg !8138
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8139
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !8139
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8139
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !8140
  %23 = load i8, i8* %22, align 1, !dbg !8140
  %24 = zext i8 %23 to i32, !dbg !8141
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !8142
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8143
  %25 = load i16, i16* %17, align 2, !dbg !8144
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8145
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !8146
  call void @llvm.dbg.value(metadata i8* %2, metadata !8123, metadata !DIExpression(DW_OP_deref)), !dbg !8124
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !8147
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8148
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !8149
  %30 = load i8, i8* %29, align 1, !dbg !8149
  %31 = zext i8 %30 to i32, !dbg !8150
  call void @llvm.dbg.value(metadata i32 %31, metadata !8122, metadata !DIExpression()), !dbg !8124
  %32 = shl nuw nsw i32 %31, 8, !dbg !8151
  %33 = load i8, i8* %2, align 1, !dbg !8152
  call void @llvm.dbg.value(metadata i8 %33, metadata !8123, metadata !DIExpression()), !dbg !8124
  %34 = zext i8 %33 to i32, !dbg !8152
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8153
  %36 = bitcast i8* %35 to i8**, !dbg !8153
  %37 = load i8*, i8** %36, align 4, !dbg !8153
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !8154
  %39 = load i8, i8* %38, align 1, !dbg !8154
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !8155
  %41 = load i8, i8* %40, align 1, !dbg !8155
  %42 = or i8 %41, %39, !dbg !8156
  %43 = zext i8 %42 to i32, !dbg !8156
  %44 = xor i32 %43, -1, !dbg !8157
  %45 = and i32 %44, %34, !dbg !8158
  %46 = or i32 %45, %32, !dbg !8159
  call void @llvm.dbg.value(metadata i32 %46, metadata !8122, metadata !DIExpression()), !dbg !8124
  %47 = load i16, i16* %17, align 2, !dbg !8160
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !8161
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8162
  br label %48, !dbg !8163

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8164
  ret i32 0, !dbg !8164
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8165 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8167, metadata !DIExpression()), !dbg !8169
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8170
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !8171

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !8172
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8174
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !8175
  call void @llvm.dbg.value(metadata i8* %2, metadata !8168, metadata !DIExpression(DW_OP_deref)), !dbg !8169
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !8176
  %10 = load i8, i8* %2, align 1, !dbg !8177
  call void @llvm.dbg.value(metadata i8 %10, metadata !8168, metadata !DIExpression()), !dbg !8169
  %11 = load i8*, i8** %5, align 4, !dbg !8178
  %12 = load i8, i8* %11, align 1, !dbg !8179
  %13 = and i8 %12, %10, !dbg !8180
  %14 = icmp eq i8 %13, 0, !dbg !8181
  br i1 %14, label %15, label %6, !dbg !8182, !llvm.loop !8183

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8185
  ret void, !dbg !8185
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !8186 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8188, metadata !DIExpression()), !dbg !8191
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8189, metadata !DIExpression()), !dbg !8191
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8192
  %4 = load i8*, i8** %3, align 4, !dbg !8192
  call void @llvm.dbg.value(metadata i8* %4, metadata !8190, metadata !DIExpression()), !dbg !8191
  store i8 1, i8* %4, align 1, !dbg !8193
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8194
  store i8 2, i8* %5, align 1, !dbg !8195
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8196
  store i8 -128, i8* %6, align 1, !dbg !8197
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !8198
  store i8 -128, i8* %7, align 1, !dbg !8199
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !8200
  store i8 60, i8* %8, align 1, !dbg !8201
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !8202
  store i8 -128, i8* %9, align 1, !dbg !8203
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8204
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8204
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !8205
  store i8 -97, i8* %12, align 1, !dbg !8206
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8207
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !8208
  store i8 53, i8* %14, align 1, !dbg !8209
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8210
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !8211
  store i8 53, i8* %16, align 1, !dbg !8212
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8213
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !8214
  store i8 5, i8* %18, align 1, !dbg !8215
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8216
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !8217
  store i8 1, i8* %20, align 1, !dbg !8218
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8219
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !8220
  store i8 117, i8* %22, align 1, !dbg !8221
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8222
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !8223
  store i8 122, i8* %24, align 1, !dbg !8224
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8225
  store i8 22, i8* %25, align 4, !dbg !8226
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8227
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !8228
  ret i32 0, !dbg !8229
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !8230 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8232, metadata !DIExpression()), !dbg !8234
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8233, metadata !DIExpression()), !dbg !8234
  ret i32 0, !dbg !8235
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8236 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8238, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8239, metadata !DIExpression()), !dbg !8240
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !8241
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !8242
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !8243
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !8244
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !8245
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !8246
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !8247
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !8248
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !8249
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !8250
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !8251
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !8252
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !8253
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !8254
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !8255
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !8256
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !8257
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !8258
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !8259
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !8260
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !8261
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !8262
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !8263
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !8264
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !8265
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !8266
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !8267
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !8268
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !8269
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !8270
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !8271
  %19 = icmp ugt i32 %18, 16777216, !dbg !8273
  %20 = select i1 %19, i8 4, i8 3, !dbg !8274
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !8275
  store i8 %20, i8* %21, align 1, !dbg !8277
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8278
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8278
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !8279
  store i8 0, i8* %24, align 1, !dbg !8280
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8281
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !8282
  store i8 -81, i8* %26, align 1, !dbg !8283
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8284
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !8285
  store i8 -97, i8* %28, align 1, !dbg !8286
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8287
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !8288
  store i8 2, i8* %30, align 1, !dbg !8289
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8290
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !8291
  store i8 32, i8* %32, align 1, !dbg !8292
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8293
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !8294
  store i8 82, i8* %34, align 1, !dbg !8295
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8296
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !8297
  store i8 -40, i8* %36, align 1, !dbg !8298
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8299
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !8300
  store i8 -80, i8* %38, align 1, !dbg !8301
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8302
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !8303
  store i8 48, i8* %40, align 1, !dbg !8304
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8305
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !8306
  store i8 6, i8* %42, align 1, !dbg !8307
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8308
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !8309
  store i8 -71, i8* %44, align 1, !dbg !8310
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8311
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !8312
  store i8 -85, i8* %46, align 1, !dbg !8313
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8314
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !8315
  store i8 5, i8* %48, align 1, !dbg !8316
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !8317
  store i16 0, i16* %49, align 4, !dbg !8318
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !8319
  store %struct.anon.9* null, %struct.anon.9** %50, align 4, !dbg !8320
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !8321
  store %struct.anon.9* null, %struct.anon.9** %51, align 4, !dbg !8322
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !8323
  store i8 0, i8* %52, align 4, !dbg !8324
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8325
  store i8 5, i8* %53, align 4, !dbg !8326
  ret i32 0, !dbg !8327
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !8328 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8330, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i8* %1, metadata !8331, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i8* %1, metadata !8332, metadata !DIExpression()), !dbg !8348
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8349
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8345, metadata !DIExpression()), !dbg !8348
  call void @llvm.dbg.value(metadata i32 0, metadata !8346, metadata !DIExpression()), !dbg !8348
  %4 = bitcast i8* %1 to i32*, !dbg !8350
  store i32 0, i32* %4, align 4, !dbg !8351
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !8346, metadata !DIExpression()), !dbg !8348
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8352
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !8353
  %9 = load i32, i32* %8, align 4, !dbg !8353
  %10 = icmp eq i32 %9, 0, !dbg !8354
  br i1 %10, label %34, label %11, !dbg !8355

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !8355

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !8346, metadata !DIExpression()), !dbg !8348
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !8356
  store i32 %17, i32* %19, align 4, !dbg !8358
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8359
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !8360
  %22 = load i32, i32* %21, align 4, !dbg !8360
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !8361
  store i32 %22, i32* %23, align 4, !dbg !8362
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8363
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !8364
  %26 = load i32, i32* %25, align 4, !dbg !8364
  %27 = load i32, i32* %4, align 4, !dbg !8365
  %28 = add i32 %27, %26, !dbg !8365
  store i32 %28, i32* %4, align 4, !dbg !8365
  %29 = add i32 %18, 1, !dbg !8366
  call void @llvm.dbg.value(metadata i32 %29, metadata !8346, metadata !DIExpression()), !dbg !8348
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8352
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !8353
  %32 = load i32, i32* %31, align 4, !dbg !8353
  %33 = icmp eq i32 %32, 0, !dbg !8354
  br i1 %33, label %34, label %16, !dbg !8355, !llvm.loop !8367

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !8348
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !8369
  %37 = bitcast i8* %36 to i32*, !dbg !8369
  store i32 %35, i32* %37, align 4, !dbg !8370
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !8371
  %39 = bitcast i8* %38 to i16*, !dbg !8371
  store i16 512, i16* %39, align 4, !dbg !8372
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8373
  br label %40, !dbg !8374

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8375
  call void @llvm.dbg.value(metadata i32 %41, metadata !8347, metadata !DIExpression()), !dbg !8348
  %42 = icmp eq i32 %41, -121, !dbg !8377
  br i1 %42, label %40, label %43, !dbg !8378, !llvm.loop !8379

43:                                               ; preds = %40
  ret i32 0, !dbg !8381
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !8382 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8384, metadata !DIExpression()), !dbg !8388
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8389
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !8385, metadata !DIExpression()), !dbg !8388
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8390
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !8391

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8392
  call void @llvm.dbg.value(metadata i32 %8, metadata !8387, metadata !DIExpression()), !dbg !8388
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8394, !range !2650
  %10 = icmp eq i8 %9, 0, !dbg !8394
  br i1 %10, label %12, label %11, !dbg !8396

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !8397
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8399
  br label %12, !dbg !8400

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8401
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !8402
  %15 = load i8, i8* %14, align 1, !dbg !8402
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !8403
  call void @llvm.dbg.value(metadata i32 %16, metadata !8386, metadata !DIExpression()), !dbg !8388
  %17 = load i8*, i8** %6, align 4, !dbg !8404
  %18 = load i8, i8* %17, align 1, !dbg !8406
  %19 = zext i8 %18 to i32, !dbg !8406
  %20 = and i32 %16, %19, !dbg !8407
  %21 = icmp eq i32 %20, 0, !dbg !8408
  br i1 %21, label %22, label %25, !dbg !8409

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8410
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8412
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8413
  %24 = bitcast i8* %23 to i8**, !dbg !8413
  store i8* null, i8** %24, align 4, !dbg !8414
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8415
  ret i32 0, !dbg !8416

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8417
  br label %7, !dbg !8391, !llvm.loop !8419
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !8421 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8423, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %1, metadata !8424, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 0, metadata !8425, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 1, metadata !8429, metadata !DIExpression()), !dbg !8437
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8438
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8430, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 0, metadata !8431, metadata !DIExpression()), !dbg !8437
  %4 = bitcast i8* %0 to i32*, !dbg !8439
  %5 = load i32, i32* %4, align 4, !dbg !8439
  %6 = xor i32 %5, -1, !dbg !8439
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8439
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !8439
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !8439
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !8439
  %11 = icmp eq i32 %6, %10, !dbg !8439
  br i1 %11, label %13, label %12, !dbg !8442

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !8443
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !8443
  unreachable, !dbg !8443

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8445
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8446
  store i8 2, i8* %14, align 4, !dbg !8447
  call void @llvm.dbg.value(metadata i32 %19, metadata !8431, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %1, metadata !8424, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !8437
  br label %15, !dbg !8448

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8449
  call void @llvm.dbg.value(metadata i32 %16, metadata !8425, metadata !DIExpression()), !dbg !8437
  %17 = icmp eq i32 %16, -121, !dbg !8451
  br i1 %17, label %15, label %18, !dbg !8452, !llvm.loop !8453

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !8455
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8456
  %21 = bitcast i8* %20 to i8**, !dbg !8456
  %22 = load i8*, i8** %21, align 4, !dbg !8456
  %23 = ptrtoint i8* %22 to i32, !dbg !8457
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !8458
  call void @llvm.dbg.value(metadata i32 %24, metadata !8426, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %24, metadata !8427, metadata !DIExpression()), !dbg !8437
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !8459
  %26 = bitcast i8* %25 to i16*, !dbg !8459
  %27 = load i16, i16* %26, align 2, !dbg !8459
  %28 = zext i16 %27 to i32, !dbg !8460
  call void @llvm.dbg.value(metadata i32 %28, metadata !8432, metadata !DIExpression()), !dbg !8461
  %29 = lshr i32 %24, 10, !dbg !8462
  call void @llvm.dbg.value(metadata i32 %29, metadata !8435, metadata !DIExpression()), !dbg !8461
  %30 = and i32 %29, %28, !dbg !8463
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !8465
  %33 = icmp eq i32 %32, 0, !dbg !8465
  call void @llvm.dbg.value(metadata i32 0, metadata !8436, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %29, metadata !8435, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %28, metadata !8432, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 1, metadata !8429, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %24, metadata !8427, metadata !DIExpression()), !dbg !8437
  br i1 %33, label %34, label %51, !dbg !8465

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !8436, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %36, metadata !8435, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %37, metadata !8432, metadata !DIExpression()), !dbg !8461
  call void @llvm.dbg.value(metadata i32 %38, metadata !8429, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %39, metadata !8427, metadata !DIExpression()), !dbg !8437
  %40 = and i32 %37, 1, !dbg !8466
  %41 = icmp eq i32 %40, 0, !dbg !8466
  %42 = add i32 %35, 10, !dbg !8472
  %43 = shl nuw i32 1, %42, !dbg !8472
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !8472
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !8472
  call void @llvm.dbg.value(metadata i32 %45, metadata !8429, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %44, metadata !8427, metadata !DIExpression()), !dbg !8437
  %46 = lshr i32 %37, 1, !dbg !8473
  call void @llvm.dbg.value(metadata i32 %46, metadata !8432, metadata !DIExpression()), !dbg !8461
  %47 = lshr i32 %36, 1, !dbg !8474
  call void @llvm.dbg.value(metadata i32 %47, metadata !8435, metadata !DIExpression()), !dbg !8461
  %48 = add i32 %35, 1, !dbg !8475
  call void @llvm.dbg.value(metadata i32 %48, metadata !8436, metadata !DIExpression()), !dbg !8461
  %49 = and i32 %36, 2, !dbg !8476
  %50 = icmp eq i32 %49, 0, !dbg !8476
  br i1 %50, label %34, label %51, !dbg !8477, !llvm.loop !8478

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !8480
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !8481
  call void @llvm.dbg.value(metadata i32 %53, metadata !8429, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %52, metadata !8427, metadata !DIExpression()), !dbg !8437
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !8482

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8483
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !8483
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !8483
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !8485
  br label %70, !dbg !8486

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8487
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !8487
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !8487
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !8488
  br label %70, !dbg !8489

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8490
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !8490
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !8490
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !8491
  br label %70, !dbg !8492

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !8493
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !8493
  unreachable, !dbg !8493

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !8497
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !8497
  store i8 %73, i8* %74, align 1, !dbg !8497
  call void @llvm.dbg.value(metadata i32 %53, metadata !8429, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %52, metadata !8427, metadata !DIExpression()), !dbg !8437
  %75 = trunc i32 %19 to i8, !dbg !8498
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !8498

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8499
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !8499
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !8499
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !8501
  br label %91, !dbg !8502

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8503
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !8503
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !8503
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !8504
  br label %91, !dbg !8505

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8506
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !8506
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !8506
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !8507
  br label %91, !dbg !8508

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !8509
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !8509
  store i8 %94, i8* %95, align 1, !dbg !8509
  br label %96, !dbg !8510

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !8428, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %53, metadata !8429, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %16, metadata !8425, metadata !DIExpression()), !dbg !8437
  %97 = icmp eq i32 %53, 0, !dbg !8510
  br i1 %97, label %111, label %98, !dbg !8513

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !8514
  call void @llvm.dbg.value(metadata i8* %99, metadata !8428, metadata !DIExpression()), !dbg !8437
  %100 = ptrtoint i8* %99 to i32, !dbg !8515
  call void @llvm.dbg.value(metadata i32 %100, metadata !8428, metadata !DIExpression()), !dbg !8437
  br label %101, !dbg !8513

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !8429, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %103, metadata !8428, metadata !DIExpression()), !dbg !8437
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !8516
  br label %104, !dbg !8518

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8519
  call void @llvm.dbg.value(metadata i32 %105, metadata !8425, metadata !DIExpression()), !dbg !8437
  %106 = icmp eq i32 %105, -121, !dbg !8521
  br i1 %106, label %104, label %107, !dbg !8523, !llvm.loop !8524

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !8526
  call void @llvm.dbg.value(metadata i32 %108, metadata !8429, metadata !DIExpression()), !dbg !8437
  %109 = add i32 %103, %52, !dbg !8527
  call void @llvm.dbg.value(metadata i32 %109, metadata !8428, metadata !DIExpression()), !dbg !8437
  call void @llvm.dbg.value(metadata i32 %105, metadata !8425, metadata !DIExpression()), !dbg !8437
  %110 = icmp eq i32 %108, 0, !dbg !8510
  br i1 %110, label %111, label %101, !dbg !8513, !llvm.loop !8528

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !8437
  store i8 0, i8* %14, align 4, !dbg !8530
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8531
  ret i32 %112, !dbg !8532
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !8533 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8535, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i8* %1, metadata !8536, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i8* %2, metadata !8537, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i32 %3, metadata !8538, metadata !DIExpression()), !dbg !8552
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8553
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !8539, metadata !DIExpression()), !dbg !8552
  %8 = ptrtoint i8* %1 to i32, !dbg !8554
  call void @llvm.dbg.value(metadata i32 %8, metadata !8541, metadata !DIExpression()), !dbg !8552
  %9 = bitcast i8** %5 to i8*, !dbg !8555
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !8555
  call void @llvm.dbg.value(metadata i8* %2, metadata !8542, metadata !DIExpression()), !dbg !8552
  store i8* %2, i8** %5, align 4, !dbg !8556
  call void @llvm.dbg.value(metadata i32 0, metadata !8544, metadata !DIExpression()), !dbg !8552
  %10 = bitcast i32* %6 to i8*, !dbg !8557
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !8557
  %11 = bitcast i8* %0 to i32*, !dbg !8558
  %12 = load i32, i32* %11, align 4, !dbg !8558
  %13 = xor i32 %12, -1, !dbg !8558
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8558
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !8558
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !8558
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !8558
  %18 = icmp eq i32 %13, %17, !dbg !8558
  br i1 %18, label %20, label %19, !dbg !8561

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8562
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !8562
  unreachable, !dbg !8562

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8564
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8565
  store i8 1, i8* %21, align 4, !dbg !8566
  br label %22, !dbg !8567

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8568
  call void @llvm.dbg.value(metadata i32 %23, metadata !8544, metadata !DIExpression()), !dbg !8552
  %24 = icmp eq i32 %23, -121, !dbg !8570
  br i1 %24, label %22, label %25, !dbg !8571, !llvm.loop !8572

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !8574
  br i1 %26, label %104, label %27, !dbg !8575

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !8575

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !8576
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !8552
  call void @llvm.dbg.value(metadata i32 %38, metadata !8541, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i32 %37, metadata !8538, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i8* %36, metadata !8542, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i8* %36, metadata !8543, metadata !DIExpression()), !dbg !8552
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8577
  %40 = shl i32 %39, 1, !dbg !8578
  %41 = add i32 %40, -1, !dbg !8579
  %42 = and i32 %41, %38, !dbg !8580
  %43 = sub i32 %40, %42, !dbg !8581
  %44 = icmp ugt i32 %37, %43, !dbg !8582
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !8583
  call void @llvm.dbg.value(metadata i32 %45, metadata !8545, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i32 %45, metadata !8546, metadata !DIExpression()), !dbg !8552
  store i32 %45, i32* %6, align 4, !dbg !8584
  call void @llvm.dbg.value(metadata i8* %36, metadata !8542, metadata !DIExpression()), !dbg !8552
  %46 = ptrtoint i8* %36 to i32, !dbg !8585
  %47 = and i32 %46, 134217728, !dbg !8586
  %48 = icmp eq i32 %47, 0, !dbg !8586
  br i1 %48, label %58, label %49, !dbg !8587

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !8548, metadata !DIExpression()), !dbg !8588
  call void @llvm.dbg.value(metadata i32 %45, metadata !8546, metadata !DIExpression()), !dbg !8552
  %50 = icmp eq i32 %45, 0, !dbg !8589
  br i1 %50, label %58, label %51, !dbg !8592

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !8548, metadata !DIExpression()), !dbg !8588
  call void @llvm.dbg.value(metadata i8* %36, metadata !8542, metadata !DIExpression()), !dbg !8552
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !8593
  %54 = load i8, i8* %53, align 1, !dbg !8593
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !8595
  store i8 %54, i8* %55, align 1, !dbg !8596
  %56 = add nuw i32 %52, 1, !dbg !8597
  call void @llvm.dbg.value(metadata i32 %56, metadata !8548, metadata !DIExpression()), !dbg !8588
  call void @llvm.dbg.value(metadata i32 %45, metadata !8546, metadata !DIExpression()), !dbg !8552
  %57 = icmp eq i32 %56, %45, !dbg !8589
  br i1 %57, label %58, label %51, !dbg !8592, !llvm.loop !8598

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !8600
  call void @llvm.dbg.value(metadata i8* %59, metadata !8543, metadata !DIExpression()), !dbg !8552
  %60 = load i32, i32* %29, align 4, !dbg !8601
  %61 = and i32 %60, 16, !dbg !8603
  %62 = icmp eq i32 %61, 0, !dbg !8603
  br i1 %62, label %63, label %64, !dbg !8604

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !8605
  br label %64, !dbg !8607

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !8608
  %66 = icmp eq i8 %65, 4, !dbg !8610
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !8611
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !8611
  %69 = load i8, i8* %68, align 1, !dbg !8611
  %70 = zext i8 %69 to i32, !dbg !8611
  br i1 %66, label %71, label %75, !dbg !8612

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !8542, metadata !DIExpression(DW_OP_deref)), !dbg !8552
  call void @llvm.dbg.value(metadata i32* %6, metadata !8546, metadata !DIExpression(DW_OP_deref)), !dbg !8552
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !8613
  call void @llvm.dbg.value(metadata i32 %72, metadata !8547, metadata !DIExpression()), !dbg !8552
  %73 = load i8*, i8** %5, align 4, !dbg !8615
  call void @llvm.dbg.value(metadata i8* %73, metadata !8542, metadata !DIExpression()), !dbg !8552
  %74 = load i32, i32* %6, align 4, !dbg !8616
  call void @llvm.dbg.value(metadata i32 %74, metadata !8546, metadata !DIExpression()), !dbg !8552
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !8617
  br label %79, !dbg !8618

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !8619
  call void @llvm.dbg.value(metadata i32 %76, metadata !8547, metadata !DIExpression()), !dbg !8552
  %77 = load i8*, i8** %5, align 4, !dbg !8621
  call void @llvm.dbg.value(metadata i8* %77, metadata !8542, metadata !DIExpression()), !dbg !8552
  %78 = load i32, i32* %6, align 4, !dbg !8622
  call void @llvm.dbg.value(metadata i32 %78, metadata !8546, metadata !DIExpression()), !dbg !8552
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !8623
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !8611
  call void @llvm.dbg.value(metadata i32 %80, metadata !8547, metadata !DIExpression()), !dbg !8552
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !8624
  call void @llvm.dbg.value(metadata i32 %81, metadata !8540, metadata !DIExpression()), !dbg !8552
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8625
  %82 = load i8, i8* %30, align 1, !dbg !8626
  %83 = zext i8 %82 to i32, !dbg !8627
  %84 = add i32 %45, 1, !dbg !8628
  %85 = add i32 %84, %83, !dbg !8629
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8630
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8631
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8632
  %86 = load i16, i16* %34, align 2, !dbg !8633
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !8634
  %87 = load i16, i16* %34, align 2, !dbg !8635
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !8636
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !8637
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !8638

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !8639
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !8641
  call void @llvm.dbg.value(metadata i32 %94, metadata !8544, metadata !DIExpression()), !dbg !8552
  %95 = icmp eq i32 %94, 0, !dbg !8642
  br i1 %95, label %92, label %96, !dbg !8643, !llvm.loop !8644

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !8646
  call void @llvm.dbg.value(metadata i32 %97, metadata !8546, metadata !DIExpression()), !dbg !8552
  %98 = load i8*, i8** %5, align 4, !dbg !8647
  call void @llvm.dbg.value(metadata i8* %98, metadata !8542, metadata !DIExpression()), !dbg !8552
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !8647
  call void @llvm.dbg.value(metadata i8* %99, metadata !8542, metadata !DIExpression()), !dbg !8552
  store i8* %99, i8** %5, align 4, !dbg !8647
  %100 = sub i32 %37, %45, !dbg !8648
  call void @llvm.dbg.value(metadata i32 %100, metadata !8538, metadata !DIExpression()), !dbg !8552
  call void @llvm.dbg.value(metadata i32 undef, metadata !8541, metadata !DIExpression()), !dbg !8552
  %101 = icmp eq i32 %94, 1, !dbg !8649
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !8651
  br i1 %103, label %35, label %104, !dbg !8651, !llvm.loop !8652

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !8552
  call void @llvm.dbg.value(metadata i32 %105, metadata !8544, metadata !DIExpression()), !dbg !8552
  store i8 0, i8* %21, align 4, !dbg !8654
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8655
  %106 = icmp eq i32 %105, 1, !dbg !8656
  %107 = select i1 %106, i32 0, i32 %105, !dbg !8552
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !8658
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !8658
  ret i32 %107, !dbg !8658
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !8659 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8661, metadata !DIExpression()), !dbg !8663
  call void @llvm.dbg.value(metadata i32 undef, metadata !8662, metadata !DIExpression()), !dbg !8663
  ret i32 -12, !dbg !8664
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8665 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8667, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i32 undef, metadata !8668, metadata !DIExpression()), !dbg !8677
  call void @llvm.dbg.value(metadata i32 0, metadata !8670, metadata !DIExpression()), !dbg !8677
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8678
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8671, metadata !DIExpression()), !dbg !8677
  %4 = bitcast i8* %0 to i32*, !dbg !8679
  %5 = load i32, i32* %4, align 4, !dbg !8679
  %6 = xor i32 %5, -1, !dbg !8679
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8679
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !8679
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !8679
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !8679
  %11 = icmp eq i32 %6, %10, !dbg !8679
  br i1 %11, label %13, label %12, !dbg !8682

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !8683
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !8683
  unreachable, !dbg !8683

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8685
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !8685
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8685
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !8686
  %18 = load i8, i8* %17, align 1, !dbg !8686
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !8687
  call void @llvm.dbg.value(metadata i32 %19, metadata !8672, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8677
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8688
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !8689
  %22 = load i8, i8* %21, align 1, !dbg !8689
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !8690
  call void @llvm.dbg.value(metadata i32 %23, metadata !8673, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8677
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8691
  call void @llvm.dbg.value(metadata i32 %24, metadata !8670, metadata !DIExpression()), !dbg !8677
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8692
  %26 = bitcast i8* %25 to i8**, !dbg !8692
  %27 = load i8*, i8** %26, align 4, !dbg !8692
  %28 = load i8, i8* %27, align 1, !dbg !8693
  %29 = zext i8 %28 to i32, !dbg !8693
  %30 = and i32 %19, %29, !dbg !8694
  %31 = icmp eq i32 %30, 0, !dbg !8695
  br i1 %31, label %32, label %62, !dbg !8696

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !8673, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8677
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !8697
  %34 = load i8, i8* %33, align 1, !dbg !8697
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !8698
  %36 = load i8, i8* %35, align 1, !dbg !8698
  %37 = or i8 %36, %34, !dbg !8699
  call void @llvm.dbg.value(metadata i8 %37, metadata !8674, metadata !DIExpression()), !dbg !8700
  %38 = zext i8 %37 to i32, !dbg !8701
  %39 = and i32 %23, %38, !dbg !8703
  %40 = icmp eq i32 %39, 0, !dbg !8704
  br i1 %40, label %41, label %46, !dbg !8705

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !8706
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !8707
  br i1 %45, label %51, label %46, !dbg !8707

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8708, !range !2650
  %48 = icmp eq i8 %47, 0, !dbg !8708
  br i1 %48, label %49, label %50, !dbg !8712

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !8713
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !8713
  unreachable, !dbg !8713

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8715
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8716
  call void @llvm.dbg.value(metadata i32 -121, metadata !8669, metadata !DIExpression()), !dbg !8677
  br label %62, !dbg !8717

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !8718
  %53 = bitcast i8* %52 to i32*, !dbg !8718
  %54 = load i32, i32* %53, align 4, !dbg !8718
  %55 = and i32 %54, 2, !dbg !8721
  %56 = icmp eq i32 %55, 0, !dbg !8721
  br i1 %56, label %63, label %57, !dbg !8722

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8723
  %59 = bitcast i8* %58 to i16*, !dbg !8723
  %60 = load i16, i16* %59, align 2, !dbg !8723
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !8725
  %61 = load i16, i16* %59, align 2, !dbg !8726
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !8727
  br label %63, !dbg !8728

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !8669, metadata !DIExpression()), !dbg !8677
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !8729
  br label %65, !dbg !8730

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8731
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !8732
  call void @llvm.dbg.value(metadata i32 0, metadata !8669, metadata !DIExpression()), !dbg !8677
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !8729
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !8733
  call void @llvm.dbg.value(metadata i32 %64, metadata !8669, metadata !DIExpression()), !dbg !8677
  br label %65, !dbg !8736

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !8677
  call void @llvm.dbg.value(metadata i32 %66, metadata !8669, metadata !DIExpression()), !dbg !8677
  ret i32 %66, !dbg !8737
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8738 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8740, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata i32 undef, metadata !8741, metadata !DIExpression()), !dbg !8745
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8746
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8742, metadata !DIExpression()), !dbg !8745
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8747
  call void @llvm.dbg.value(metadata i32 %4, metadata !8744, metadata !DIExpression()), !dbg !8745
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !8748
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !8749

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8750
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !8752
  %12 = load i8, i8* %11, align 1, !dbg !8752
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !8753
  call void @llvm.dbg.value(metadata i32 %13, metadata !8743, metadata !DIExpression()), !dbg !8745
  %14 = load i8*, i8** %8, align 4, !dbg !8754
  %15 = load i8, i8* %14, align 1, !dbg !8756
  %16 = zext i8 %15 to i32, !dbg !8756
  %17 = and i32 %13, %16, !dbg !8757
  %18 = icmp eq i32 %17, 0, !dbg !8758
  br i1 %18, label %19, label %9, !dbg !8759, !llvm.loop !8760

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8762
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !8763
  ret i32 0, !dbg !8764
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8765 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8767, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.value(metadata i32 undef, metadata !8768, metadata !DIExpression()), !dbg !8770
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8771
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8769, metadata !DIExpression()), !dbg !8770
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8772
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !8773
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8774
  ret i32 0, !dbg !8775
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !8776 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8778, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i8* undef, metadata !8779, metadata !DIExpression()), !dbg !8781
  call void @llvm.dbg.value(metadata i32 undef, metadata !8780, metadata !DIExpression()), !dbg !8781
  ret i32 0, !dbg !8782
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !8783 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8785, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i32 %1, metadata !8786, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i8* undef, metadata !8787, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.value(metadata i8* %0, metadata !8788, metadata !DIExpression()), !dbg !8789
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !8790

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !8788, metadata !DIExpression()), !dbg !8789
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !8791
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !8791
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !8791
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !8794
  br label %21, !dbg !8795

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8796
  %11 = load i8, i8* %10, align 1, !dbg !8800
  %12 = icmp eq i8 %11, -62, !dbg !8801
  br i1 %12, label %13, label %21, !dbg !8802

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8803
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !8803
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !8803
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !8804
  %18 = load i32, i32* %17, align 4, !dbg !8804
  %19 = icmp eq i32 %18, 262144, !dbg !8805
  br i1 %19, label %22, label %21, !dbg !8806

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !8807
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !8807
  unreachable, !dbg !8807

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !8812

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !8789
  ret i32 %23, !dbg !8813
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8814 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8816, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.value(metadata i8* %0, metadata !8817, metadata !DIExpression()), !dbg !8819
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8820
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !8820
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !8820
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !8822
  %6 = load i8, i8* %5, align 1, !dbg !8822
  %7 = icmp eq i8 %6, 0, !dbg !8823
  br i1 %7, label %19, label %8, !dbg !8824

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8825
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !8817, metadata !DIExpression()), !dbg !8819
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !8826
  call void @llvm.dbg.value(metadata i32 %10, metadata !8818, metadata !DIExpression()), !dbg !8819
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8828
  %12 = bitcast i8* %11 to i8**, !dbg !8828
  %13 = load i8*, i8** %12, align 4, !dbg !8828
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !8830
  %15 = load i8, i8* %14, align 1, !dbg !8830
  %16 = zext i8 %15 to i32, !dbg !8830
  %17 = and i32 %10, %16, !dbg !8831
  %18 = icmp eq i32 %17, 0, !dbg !8831
  br i1 %18, label %19, label %20, !dbg !8832

19:                                               ; preds = %8, %1
  br label %20, !dbg !8833

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !8819
  ret i32 %21, !dbg !8834
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8835 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8839, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.value(metadata i32 %1, metadata !8840, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.value(metadata i8 %2, metadata !8841, metadata !DIExpression()), !dbg !8847
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8848
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !8843, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.value(metadata i32 0, metadata !8844, metadata !DIExpression()), !dbg !8847
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8849
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !8849
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8849
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !8850
  %9 = load i8, i8* %8, align 1, !dbg !8850
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !8851
  call void @llvm.dbg.value(metadata i32 %10, metadata !8846, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8847
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8852, !range !2650
  %12 = icmp eq i8 %11, 0, !dbg !8852
  br i1 %12, label %18, label %13, !dbg !8854

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8855, !range !2650
  %15 = icmp eq i8 %14, 0, !dbg !8855
  br i1 %15, label %16, label %17, !dbg !8859

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !8860
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !8860
  unreachable, !dbg !8860

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !8862
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8863
  br label %42, !dbg !8864

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !8846, metadata !DIExpression()), !dbg !8847
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8865
  %20 = bitcast i8* %19 to i8**, !dbg !8865
  %21 = load i8*, i8** %20, align 4, !dbg !8865
  %22 = load i8, i8* %21, align 1, !dbg !8867
  %23 = zext i8 %22 to i32, !dbg !8867
  %24 = and i32 %10, %23, !dbg !8868
  %25 = icmp eq i32 %24, 0, !dbg !8869
  br i1 %25, label %26, label %42, !dbg !8870

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8871
  call void @llvm.dbg.value(metadata i32 %27, metadata !8842, metadata !DIExpression()), !dbg !8847
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8873
  %28 = inttoptr i32 %1 to i8*, !dbg !8874
  %29 = load volatile i8, i8* %28, align 1, !dbg !8875
  call void @llvm.dbg.value(metadata i8 %29, metadata !8845, metadata !DIExpression()), !dbg !8847
  %30 = icmp eq i8 %29, %2, !dbg !8876
  br i1 %30, label %39, label %31, !dbg !8878

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !8844, metadata !DIExpression()), !dbg !8847
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !8879
  br i1 %32, label %33, label %38, !dbg !8882

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !8883
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !8885
  %36 = load volatile i8, i8* %28, align 1, !dbg !8886
  %37 = icmp eq i8 %36, %2, !dbg !8888
  br i1 %37, label %39, label %38, !dbg !8889

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !8844, metadata !DIExpression()), !dbg !8847
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !8890
  br label %42, !dbg !8891

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !8844, metadata !DIExpression()), !dbg !8847
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !8890
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !8892
  %41 = icmp eq i32 %40, 0, !dbg !8895
  br i1 %41, label %42, label %44, !dbg !8896

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !8897

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !8847
  ret i32 %45, !dbg !8898
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8899 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8903, metadata !DIExpression()), !dbg !8906
  call void @llvm.dbg.value(metadata i32 %1, metadata !8904, metadata !DIExpression()), !dbg !8906
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !8907
  %4 = load i32, i32* %3, align 4, !dbg !8907
  %5 = and i32 %4, 16, !dbg !8909
  %6 = icmp eq i32 %5, 0, !dbg !8909
  br i1 %6, label %7, label %8, !dbg !8910

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !8911
  br label %8, !dbg !8913

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8914
  call void @llvm.dbg.value(metadata i32 %9, metadata !8905, metadata !DIExpression()), !dbg !8906
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8915
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8916
  %11 = load i16, i16* %10, align 2, !dbg !8916
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8917
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !8917
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !8918
  %15 = load i8, i8* %14, align 1, !dbg !8918
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !8919
  %17 = load i8, i8* %16, align 1, !dbg !8919
  %18 = zext i8 %17 to i32, !dbg !8920
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !8921
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !8922
  ret void, !dbg !8923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8924 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8926, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8927, metadata !DIExpression()), !dbg !8929
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8930
  %4 = load i8, i8* %3, align 1, !dbg !8930
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !8931

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8932
  %7 = load i32, i32* %6, align 4, !dbg !8934
  %8 = or i32 %7, 4, !dbg !8934
  store i32 %8, i32* %6, align 4, !dbg !8934
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8935
  call void @llvm.dbg.value(metadata i32 0, metadata !8928, metadata !DIExpression()), !dbg !8929
  br label %18, !dbg !8936

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8937
  %12 = load i32, i32* %11, align 4, !dbg !8938
  %13 = or i32 %12, 2, !dbg !8938
  store i32 %13, i32* %11, align 4, !dbg !8938
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8939
  call void @llvm.dbg.value(metadata i32 0, metadata !8928, metadata !DIExpression()), !dbg !8929
  call void @llvm.dbg.value(metadata i32 0, metadata !8928, metadata !DIExpression()), !dbg !8929
  br label %18, !dbg !8940

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8941
  call void @llvm.dbg.value(metadata i32 0, metadata !8928, metadata !DIExpression()), !dbg !8929
  br label %18, !dbg !8942

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !8928, metadata !DIExpression()), !dbg !8929
  tail call void @Flash_ReturnReady() #21, !dbg !8943
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.117, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.118, i32 0, i32 0)) #23, !dbg !8943
  unreachable, !dbg !8943

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !8928, metadata !DIExpression()), !dbg !8929
  ret i32 0, !dbg !8947
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !8948 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8952, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8953, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata i32 %2, metadata !8954, metadata !DIExpression()), !dbg !8957
  call void @llvm.dbg.value(metadata i32 %3, metadata !8955, metadata !DIExpression()), !dbg !8957
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !8958
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !8960
  br i1 %7, label %33, label %8, !dbg !8960

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8961
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8961
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !8963
  br i1 %11, label %33, label %12, !dbg !8964

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8965
  %14 = load i8*, i8** %13, align 4, !dbg !8965
  %15 = icmp eq i8* %14, null, !dbg !8966
  br i1 %15, label %33, label %16, !dbg !8967

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !8968
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !8969
  store i8* %17, i8** %18, align 4, !dbg !8970
  %19 = trunc i32 %3 to i16, !dbg !8971
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !8972
  store i16 %19, i16* %20, align 2, !dbg !8973
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8974
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8975
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !8976
  store i8 -81, i8* %23, align 1, !dbg !8977
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8978
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !8979
  %25 = load i8, i8* %24, align 1, !dbg !8980
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !8982

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !8983
  br i1 %27, label %31, label %28, !dbg !8984

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8985
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !8987
  store i8 -97, i8* %30, align 1, !dbg !8988
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !8989
  br label %31, !dbg !8990

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8991
  call void @llvm.dbg.value(metadata i32 0, metadata !8956, metadata !DIExpression()), !dbg !8957
  br label %33, !dbg !8992

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !8957
  ret i32 %34, !dbg !8993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8994 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8998, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.value(metadata i8* %1, metadata !8999, metadata !DIExpression()), !dbg !9001
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9002
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9003
  %5 = and i32 %4, 1, !dbg !9003
  %6 = icmp eq i32 %5, 0, !dbg !9005
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9006
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !9006
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !9007
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !9007
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !9007
  %12 = load i8, i8* %11, align 1, !dbg !9006
  store i8 %12, i8* %3, align 1, !dbg !9006
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9008
  %14 = load i16, i16* %13, align 2, !dbg !9008
  call void @llvm.dbg.value(metadata i8* %3, metadata !9000, metadata !DIExpression(DW_OP_deref)), !dbg !9001
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !9009
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9010
  ret void, !dbg !9010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !9011 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9015, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata i8* %1, metadata !9016, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata i8* %2, metadata !9017, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata i16 %3, metadata !9018, metadata !DIExpression()), !dbg !9021
  call void @llvm.dbg.value(metadata i16 %4, metadata !9019, metadata !DIExpression()), !dbg !9021
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9022
  call void @llvm.dbg.value(metadata i32 %6, metadata !9020, metadata !DIExpression()), !dbg !9021
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !9023
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !9024
  ret void, !dbg !9025
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !9026 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9028, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9031, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.value(metadata i32 0, metadata !9029, metadata !DIExpression()), !dbg !9034
  br label %6, !dbg !9035

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !9037
  call void @llvm.dbg.value(metadata i32 %3, metadata !9029, metadata !DIExpression()), !dbg !9034
  call void @llvm.dbg.value(metadata i32 %8, metadata !9029, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9034
  %4 = icmp ult i32 %8, 4, !dbg !9039
  %5 = icmp eq i32 %3, 5, !dbg !9039
  br i1 %5, label %26, label %6, !dbg !9035, !llvm.loop !9040

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9029, metadata !DIExpression()), !dbg !9034
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9030, metadata !DIExpression()), !dbg !9034
  %12 = icmp eq i8 %10, 0, !dbg !9042
  br i1 %12, label %23, label %13, !dbg !9046

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9030, metadata !DIExpression()), !dbg !9034
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9047
  %16 = load i8, i8* %15, align 1, !dbg !9047
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9050
  %18 = load i8, i8* %17, align 1, !dbg !9050
  %19 = icmp eq i8 %16, %18, !dbg !9051
  br i1 %19, label %20, label %23, !dbg !9052

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !9053
  call void @llvm.dbg.value(metadata i32 %21, metadata !9030, metadata !DIExpression()), !dbg !9034
  %22 = icmp eq i32 %21, %11, !dbg !9042
  br i1 %22, label %26, label %13, !dbg !9046, !llvm.loop !9054

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !9056
  %25 = icmp eq i32 %24, %11, !dbg !9057
  call void @llvm.dbg.value(metadata i32 %8, metadata !9029, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9034
  br i1 %25, label %26, label %2, !dbg !9059

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !9039
  ret i1 %27, !dbg !9060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !9061 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !9073
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9073
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !9065, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9072, metadata !DIExpression()), !dbg !9075
  %3 = load i16, i16* @cmem_index, align 2, !dbg !9076
  %4 = icmp sgt i16 %3, -1, !dbg !9078
  br i1 %4, label %34, label %5, !dbg !9079

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !9080
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !9081
  call void @llvm.dbg.value(metadata i32 0, metadata !9063, metadata !DIExpression()), !dbg !9075
  br label %7, !dbg !9082

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9063, metadata !DIExpression()), !dbg !9075
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9064, metadata !DIExpression()), !dbg !9075
  %12 = icmp eq i8 %10, 0, !dbg !9084
  br i1 %12, label %24, label %13, !dbg !9089

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9064, metadata !DIExpression()), !dbg !9075
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9090
  %16 = load i8, i8* %15, align 1, !dbg !9090
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !9093
  %18 = load i16, i16* %17, align 2, !dbg !9093
  %19 = zext i8 %16 to i16, !dbg !9094
  %20 = icmp eq i16 %18, %19, !dbg !9094
  br i1 %20, label %21, label %24, !dbg !9095

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !9096
  call void @llvm.dbg.value(metadata i32 %22, metadata !9064, metadata !DIExpression()), !dbg !9075
  %23 = icmp eq i32 %22, %11, !dbg !9084
  br i1 %23, label %27, label %13, !dbg !9089, !llvm.loop !9097

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !9099
  %26 = icmp eq i32 %25, %11, !dbg !9100
  br i1 %26, label %27, label %29, !dbg !9102

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !9103
  store i16 %28, i16* @cmem_index, align 2, !dbg !9105
  br label %34, !dbg !9106

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !9107
  call void @llvm.dbg.value(metadata i32 %30, metadata !9063, metadata !DIExpression()), !dbg !9075
  %31 = icmp eq i32 %30, 5, !dbg !9108
  br i1 %31, label %32, label %7, !dbg !9082, !llvm.loop !9109

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !9111
  br label %34, !dbg !9111

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !9075
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9112
  ret i32 %36, !dbg !9112
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !9113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9117, metadata !DIExpression()), !dbg !9118
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !9119
  ret %struct.CMEMEntryID* %2, !dbg !9120
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9121 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9125, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i8* undef, metadata !9126, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i16* %2, metadata !9127, metadata !DIExpression()), !dbg !9132
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9133
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9133
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9133
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9130, metadata !DIExpression()), !dbg !9134
  call void @llvm.dbg.value(metadata i8 -81, metadata !9128, metadata !DIExpression()), !dbg !9135
  store i8 -81, i8* %4, align 1, !dbg !9136
  call void @llvm.dbg.value(metadata i8* %4, metadata !9128, metadata !DIExpression(DW_OP_deref)), !dbg !9135
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9137
  %7 = load i8, i8* %6, align 1, !dbg !9138
  %8 = add i8 %7, 1, !dbg !9140
  %9 = icmp ult i8 %8, 2, !dbg !9140
  br i1 %9, label %12, label %10, !dbg !9140

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !9141
  br i1 %11, label %13, label %12, !dbg !9142

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9128, metadata !DIExpression()), !dbg !9135
  store i8 -97, i8* %4, align 1, !dbg !9143
  call void @llvm.dbg.value(metadata i8* %4, metadata !9128, metadata !DIExpression(DW_OP_deref)), !dbg !9135
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9145
  br label %13, !dbg !9146

13:                                               ; preds = %12, %10
  br label %14, !dbg !9147

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !9131, metadata !DIExpression()), !dbg !9135
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !9149
  %17 = load i8, i8* %16, align 1, !dbg !9149
  %18 = zext i8 %17 to i16, !dbg !9149
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !9152
  store i16 %18, i16* %19, align 2, !dbg !9153
  %20 = add nuw nsw i32 %15, 1, !dbg !9154
  call void @llvm.dbg.value(metadata i32 %20, metadata !9131, metadata !DIExpression()), !dbg !9135
  %21 = icmp eq i32 %20, 3, !dbg !9155
  br i1 %21, label %22, label %14, !dbg !9147, !llvm.loop !9156

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9158
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9158
  ret void, !dbg !9159
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !9160 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9162, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9165, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i32 0, metadata !9163, metadata !DIExpression()), !dbg !9166
  br label %6, !dbg !9167

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !9169
  call void @llvm.dbg.value(metadata i32 %3, metadata !9163, metadata !DIExpression()), !dbg !9166
  call void @llvm.dbg.value(metadata i32 %8, metadata !9163, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9166
  %4 = icmp ult i32 %8, 4, !dbg !9171
  %5 = icmp eq i32 %3, 5, !dbg !9171
  br i1 %5, label %26, label %6, !dbg !9167, !llvm.loop !9172

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9163, metadata !DIExpression()), !dbg !9166
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9164, metadata !DIExpression()), !dbg !9166
  %12 = icmp eq i8 %10, 0, !dbg !9174
  br i1 %12, label %23, label %13, !dbg !9178

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9164, metadata !DIExpression()), !dbg !9166
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9179
  %16 = load i8, i8* %15, align 1, !dbg !9179
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9182
  %18 = load i8, i8* %17, align 1, !dbg !9182
  %19 = icmp eq i8 %16, %18, !dbg !9183
  br i1 %19, label %20, label %23, !dbg !9184

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !9185
  call void @llvm.dbg.value(metadata i32 %21, metadata !9164, metadata !DIExpression()), !dbg !9166
  %22 = icmp eq i32 %21, %11, !dbg !9174
  br i1 %22, label %26, label %13, !dbg !9178, !llvm.loop !9186

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !9188
  %25 = icmp eq i32 %24, %11, !dbg !9189
  call void @llvm.dbg.value(metadata i32 %8, metadata !9163, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9166
  br i1 %25, label %26, label %2, !dbg !9191

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !9171
  ret i1 %27, !dbg !9192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !9193 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !9199
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9199
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !9197, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9198, metadata !DIExpression()), !dbg !9201
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9202
  %4 = icmp sgt i16 %3, -1, !dbg !9204
  br i1 %4, label %34, label %5, !dbg !9205

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !9206
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !9207
  call void @llvm.dbg.value(metadata i32 0, metadata !9195, metadata !DIExpression()), !dbg !9201
  br label %7, !dbg !9208

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9195, metadata !DIExpression()), !dbg !9201
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9196, metadata !DIExpression()), !dbg !9201
  %12 = icmp eq i8 %10, 0, !dbg !9210
  br i1 %12, label %24, label %13, !dbg !9215

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9196, metadata !DIExpression()), !dbg !9201
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9216
  %16 = load i8, i8* %15, align 1, !dbg !9216
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !9219
  %18 = load i16, i16* %17, align 2, !dbg !9219
  %19 = zext i8 %16 to i16, !dbg !9220
  %20 = icmp eq i16 %18, %19, !dbg !9220
  br i1 %20, label %21, label %24, !dbg !9221

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !9222
  call void @llvm.dbg.value(metadata i32 %22, metadata !9196, metadata !DIExpression()), !dbg !9201
  %23 = icmp eq i32 %22, %11, !dbg !9210
  br i1 %23, label %27, label %13, !dbg !9215, !llvm.loop !9223

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !9225
  %26 = icmp eq i32 %25, %11, !dbg !9226
  br i1 %26, label %27, label %29, !dbg !9228

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !9229
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !9231
  br label %34, !dbg !9232

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !9233
  call void @llvm.dbg.value(metadata i32 %30, metadata !9195, metadata !DIExpression()), !dbg !9201
  %31 = icmp eq i32 %30, 5, !dbg !9234
  br i1 %31, label %32, label %7, !dbg !9208, !llvm.loop !9235

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9237
  br label %34, !dbg !9237

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !9201
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9238
  ret i32 %36, !dbg !9238
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9239 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9247, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata i16* %1, metadata !9248, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata i16* %2, metadata !9249, metadata !DIExpression()), !dbg !9255
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9256
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9256
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9256
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9253, metadata !DIExpression()), !dbg !9257
  call void @llvm.dbg.value(metadata i8 -81, metadata !9251, metadata !DIExpression()), !dbg !9258
  store i8 -81, i8* %4, align 1, !dbg !9259
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9260
  call void @llvm.dbg.value(metadata i32 %7, metadata !9250, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata i8* %4, metadata !9251, metadata !DIExpression(DW_OP_deref)), !dbg !9258
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9261
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !9262
  %8 = load i8, i8* %6, align 1, !dbg !9263
  %9 = add i8 %8, 1, !dbg !9265
  %10 = icmp ult i8 %9, 2, !dbg !9265
  br i1 %10, label %13, label %11, !dbg !9265

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !9266
  br i1 %12, label %15, label %13, !dbg !9267

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9251, metadata !DIExpression()), !dbg !9258
  store i8 -97, i8* %4, align 1, !dbg !9268
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !9270
  call void @llvm.dbg.value(metadata i32 %14, metadata !9250, metadata !DIExpression()), !dbg !9255
  call void @llvm.dbg.value(metadata i8* %4, metadata !9251, metadata !DIExpression(DW_OP_deref)), !dbg !9258
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9271
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !9272
  br label %15, !dbg !9273

15:                                               ; preds = %13, %11
  br label %16, !dbg !9274

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !9254, metadata !DIExpression()), !dbg !9258
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !9276
  %19 = load i8, i8* %18, align 1, !dbg !9276
  %20 = zext i8 %19 to i16, !dbg !9276
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !9279
  store i16 %20, i16* %21, align 2, !dbg !9280
  %22 = add nuw nsw i32 %17, 1, !dbg !9281
  call void @llvm.dbg.value(metadata i32 %22, metadata !9254, metadata !DIExpression()), !dbg !9258
  %23 = icmp eq i32 %22, 3, !dbg !9282
  br i1 %23, label %24, label %16, !dbg !9274, !llvm.loop !9283

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9285
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9285
  ret void, !dbg !9286
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !9287 {
  ret i32 3932160, !dbg !9288
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !9289 {
  ret i32 4194304, !dbg !9290
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !9291 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !9292
  ret void, !dbg !9293
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !9294 {
  ret void, !dbg !9295
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !9296 {
  ret void, !dbg !9297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !9298 {
  ret i32 3932160, !dbg !9299
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !9300 {
  ret i32 262144, !dbg !9301
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !9302 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !9303
  ret void, !dbg !9304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !9305 {
  ret i32 134217728, !dbg !9306
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !9307 {
  ret i32 4194304, !dbg !9308
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !9309 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9310
  ret i32 134217728, !dbg !9311
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !9312 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !9313
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9314
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9315
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9316
  %4 = load i16, i16* %3, align 2, !dbg !9316
  %5 = zext i16 %4 to i32, !dbg !9314
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9317
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !9318
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !9319
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !9320
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !9321
  ret i32 0, !dbg !9322
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !9323 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !9326
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !9327
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !9328
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !9329
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !9330
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9331
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !9332
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !9333
  %5 = load i32, i32* %4, align 4, !dbg !9333
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !9334
  call void @llvm.dbg.value(metadata i32 %6, metadata !9325, metadata !DIExpression()), !dbg !9335
  %7 = icmp eq i32 %6, -120, !dbg !9336
  %8 = select i1 %7, i32 5, i32 0, !dbg !9335
  ret i32 %8, !dbg !9338
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !9339 {
  ret i8 1, !dbg !9341
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !9342 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9346, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9348, metadata !DIExpression()), !dbg !9349
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9350
  call void @llvm.dbg.value(metadata i32 %2, metadata !9347, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9348, metadata !DIExpression()), !dbg !9349
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !9351
  %4 = load i32, i32* %3, align 4, !dbg !9351
  ret i32 %4, !dbg !9352
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !9353 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9357, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !9358, metadata !DIExpression()), !dbg !9360
  %3 = and i32 %0, 134217727, !dbg !9361
  call void @llvm.dbg.value(metadata i32 %3, metadata !9357, metadata !DIExpression()), !dbg !9360
  call void @llvm.dbg.value(metadata i16 0, metadata !9359, metadata !DIExpression()), !dbg !9360
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !9362
  %5 = load i32, i32* %4, align 4, !dbg !9362
  %6 = icmp eq i32 %5, 0, !dbg !9365
  br i1 %6, label %25, label %7, !dbg !9366

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !9359, metadata !DIExpression()), !dbg !9360
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !9367
  %12 = load i32, i32* %11, align 4, !dbg !9367
  %13 = icmp ult i32 %3, %12, !dbg !9370
  br i1 %13, label %18, label %14, !dbg !9371

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !9372
  %16 = load i32, i32* %15, align 4, !dbg !9372
  %17 = icmp ult i32 %3, %16, !dbg !9373
  br i1 %17, label %25, label %18, !dbg !9374

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !9375
  call void @llvm.dbg.value(metadata i16 %19, metadata !9359, metadata !DIExpression()), !dbg !9360
  %20 = zext i16 %19 to i32, !dbg !9376
  %21 = add nuw nsw i32 %20, 1, !dbg !9377
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !9362
  %23 = load i32, i32* %22, align 4, !dbg !9362
  %24 = icmp eq i32 %23, 0, !dbg !9365
  br i1 %24, label %25, label %7, !dbg !9366, !llvm.loop !9378

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !9376
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !9380
  %28 = load i32, i32* %27, align 4, !dbg !9380
  ret i32 %28, !dbg !9381
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !9382 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9384, metadata !DIExpression()), !dbg !9385
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9386
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !9387
  ret i32 %3, !dbg !9388
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9389 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9391, metadata !DIExpression()), !dbg !9394
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9395
  call void @llvm.dbg.value(metadata i32 %2, metadata !9392, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9393, metadata !DIExpression()), !dbg !9394
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9393, metadata !DIExpression()), !dbg !9394
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !9396
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !9397
  ret i32 %4, !dbg !9398
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !9399 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9405, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 0, metadata !9406, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 0, metadata !9407, metadata !DIExpression()), !dbg !9408
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !9409
  %3 = load i32, i32* %2, align 4, !dbg !9409
  %4 = icmp eq i32 %3, 0, !dbg !9412
  br i1 %4, label %17, label %5, !dbg !9413

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9407, metadata !DIExpression()), !dbg !9408
  call void @llvm.dbg.value(metadata i32 %8, metadata !9406, metadata !DIExpression()), !dbg !9408
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !9414
  %10 = load i32, i32* %9, align 4, !dbg !9414
  %11 = mul i32 %10, %6, !dbg !9416
  %12 = add i32 %11, %8, !dbg !9417
  call void @llvm.dbg.value(metadata i32 %12, metadata !9406, metadata !DIExpression()), !dbg !9408
  %13 = add i32 %7, 1, !dbg !9418
  call void @llvm.dbg.value(metadata i32 %13, metadata !9407, metadata !DIExpression()), !dbg !9408
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !9409
  %15 = load i32, i32* %14, align 4, !dbg !9409
  %16 = icmp eq i32 %15, 0, !dbg !9412
  br i1 %16, label %17, label %5, !dbg !9413, !llvm.loop !9419

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !9408
  ret i32 %18, !dbg !9421
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !9422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9426, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata i32 %1, metadata !9427, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9428, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9429, metadata !DIExpression()), !dbg !9435
  %5 = add i32 %1, %0, !dbg !9436
  call void @llvm.dbg.value(metadata i32 %5, metadata !9434, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata i32 %0, metadata !9430, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata i32 0, metadata !9431, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata i32 0, metadata !9433, metadata !DIExpression()), !dbg !9435
  %6 = icmp ugt i32 %5, %0, !dbg !9437
  br i1 %6, label %7, label %34, !dbg !9440

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9433, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata i32 %9, metadata !9430, metadata !DIExpression()), !dbg !9435
  call void @llvm.dbg.value(metadata i32 %10, metadata !9431, metadata !DIExpression()), !dbg !9435
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !9441
  call void @llvm.dbg.value(metadata i32 %11, metadata !9432, metadata !DIExpression()), !dbg !9435
  %12 = icmp eq i32 %8, 0, !dbg !9443
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !9445
  br i1 %12, label %14, label %16, !dbg !9446

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !9447
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9449
  store i32 1, i32* %15, align 4, !dbg !9450
  br label %29, !dbg !9451

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !9452
  %18 = icmp eq i32 %11, %17, !dbg !9454
  br i1 %18, label %19, label %23, !dbg !9455

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9456
  %21 = load i32, i32* %20, align 4, !dbg !9458
  %22 = add i32 %21, 1, !dbg !9458
  store i32 %22, i32* %20, align 4, !dbg !9458
  br label %29, !dbg !9459

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !9460
  call void @llvm.dbg.value(metadata i32 %24, metadata !9431, metadata !DIExpression()), !dbg !9435
  %25 = icmp eq i32 %24, 9, !dbg !9462
  br i1 %25, label %34, label %26, !dbg !9464

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !9465
  store i32 %11, i32* %27, align 4, !dbg !9466
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !9467
  store i32 1, i32* %28, align 4, !dbg !9468
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !9469
  call void @llvm.dbg.value(metadata i32 %30, metadata !9431, metadata !DIExpression()), !dbg !9435
  %31 = add i32 %11, %9, !dbg !9470
  call void @llvm.dbg.value(metadata i32 %31, metadata !9430, metadata !DIExpression()), !dbg !9435
  %32 = add i32 %8, 1, !dbg !9471
  call void @llvm.dbg.value(metadata i32 %32, metadata !9433, metadata !DIExpression()), !dbg !9435
  %33 = icmp ult i32 %31, %5, !dbg !9437
  br i1 %33, label %7, label %34, !dbg !9440, !llvm.loop !9472

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !9435
  ret i32 %35, !dbg !9474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !9475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9479, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata i32 %1, metadata !9480, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9481, metadata !DIExpression()), !dbg !9482
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9483
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !9484
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9485
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !9486
  ret i32 %7, !dbg !9487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9488 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9490, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata i32 %1, metadata !9491, metadata !DIExpression()), !dbg !9493
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9492, metadata !DIExpression()), !dbg !9493
  ret i32 0, !dbg !9494
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !9495 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9497, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata i32 %1, metadata !9498, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9499, metadata !DIExpression()), !dbg !9502
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9503
  call void @llvm.dbg.value(metadata i32 %4, metadata !9500, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9501, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9501, metadata !DIExpression()), !dbg !9502
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !9504
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !9505
  ret i32 %6, !dbg !9506
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9507 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9509, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata i32 %1, metadata !9510, metadata !DIExpression()), !dbg !9512
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9511, metadata !DIExpression()), !dbg !9512
  ret i32 0, !dbg !9513
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !9514 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9516, metadata !DIExpression()), !dbg !9519
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9520
  call void @llvm.dbg.value(metadata i32 %2, metadata !9517, metadata !DIExpression()), !dbg !9519
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9518, metadata !DIExpression()), !dbg !9519
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9518, metadata !DIExpression()), !dbg !9519
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !9521
  %4 = load i32, i32* %3, align 4, !dbg !9521
  ret i32 %4, !dbg !9522
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !9523 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9527, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32* %1, metadata !9528, metadata !DIExpression()), !dbg !9530
  call void @llvm.dbg.value(metadata i32 %2, metadata !9529, metadata !DIExpression()), !dbg !9530
  %4 = load i32, i32* %1, align 4, !dbg !9531
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !9533
  %6 = load i32, i32* %5, align 4, !dbg !9533
  %7 = icmp eq i32 %6, %2, !dbg !9534
  br i1 %7, label %8, label %12, !dbg !9535

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !9536
  %10 = load i32, i32* %9, align 4, !dbg !9538
  %11 = add i32 %10, 1, !dbg !9538
  store i32 %11, i32* %9, align 4, !dbg !9538
  br label %17, !dbg !9539

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !9540
  store i32 %13, i32* %1, align 4, !dbg !9540
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !9542
  store i32 1, i32* %14, align 4, !dbg !9543
  %15 = load i32, i32* %1, align 4, !dbg !9544
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !9545
  store i32 %2, i32* %16, align 4, !dbg !9546
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !9547
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !9548 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9552, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %1, metadata !9553, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9554, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9555, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 0, metadata !9556, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 0, metadata !9557, metadata !DIExpression()), !dbg !9561
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9562
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !9563
  call void @llvm.dbg.value(metadata i32 0, metadata !9560, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 0, metadata !9559, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 0, metadata !9557, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 0, metadata !9556, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %0, metadata !9552, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %1, metadata !9553, metadata !DIExpression()), !dbg !9561
  %7 = icmp eq i32 %1, 0, !dbg !9564
  br i1 %7, label %53, label %8, !dbg !9567

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9560, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %10, metadata !9559, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %11, metadata !9557, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %12, metadata !9556, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %13, metadata !9552, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %14, metadata !9553, metadata !DIExpression()), !dbg !9561
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !9568
  %16 = load i32, i32* %15, align 4, !dbg !9568
  %17 = icmp ult i32 %9, %16, !dbg !9571
  %18 = xor i1 %17, true, !dbg !9572
  %19 = zext i1 %18 to i32, !dbg !9572
  %20 = add i32 %12, %19, !dbg !9572
  call void @llvm.dbg.value(metadata i32 undef, metadata !9560, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %20, metadata !9556, metadata !DIExpression()), !dbg !9561
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !9573
  %22 = load i32, i32* %21, align 4, !dbg !9573
  %23 = add i32 %22, %10, !dbg !9574
  call void @llvm.dbg.value(metadata i32 %23, metadata !9559, metadata !DIExpression()), !dbg !9561
  %24 = icmp ult i32 %23, %13, !dbg !9575
  br i1 %24, label %46, label %25, !dbg !9577

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !9578
  call void @llvm.dbg.value(metadata i32 %26, metadata !9558, metadata !DIExpression()), !dbg !9561
  %27 = icmp ult i32 %14, %26, !dbg !9580
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !9582
  call void @llvm.dbg.value(metadata i32 %28, metadata !9558, metadata !DIExpression()), !dbg !9561
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !9583
  %30 = load i32, i32* %29, align 4, !dbg !9583
  %31 = icmp eq i32 %30, %28, !dbg !9585
  br i1 %31, label %32, label %36, !dbg !9586

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !9587
  %34 = load i32, i32* %33, align 4, !dbg !9589
  %35 = add i32 %34, 1, !dbg !9589
  store i32 %35, i32* %33, align 4, !dbg !9589
  br label %42, !dbg !9590

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !9591
  %38 = zext i1 %37 to i32, !dbg !9594
  %39 = add nsw i32 %11, %38, !dbg !9594
  call void @llvm.dbg.value(metadata i32 %39, metadata !9557, metadata !DIExpression()), !dbg !9561
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !9595
  store i32 1, i32* %40, align 4, !dbg !9596
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !9597
  store i32 %28, i32* %41, align 4, !dbg !9598
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !9561
  call void @llvm.dbg.value(metadata i32 %43, metadata !9557, metadata !DIExpression()), !dbg !9561
  %44 = add i32 %28, %13, !dbg !9599
  call void @llvm.dbg.value(metadata i32 %44, metadata !9552, metadata !DIExpression()), !dbg !9561
  %45 = sub i32 %14, %28, !dbg !9600
  call void @llvm.dbg.value(metadata i32 %45, metadata !9553, metadata !DIExpression()), !dbg !9561
  br label %46, !dbg !9601

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !9602
  call void @llvm.dbg.value(metadata i32 %49, metadata !9557, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %48, metadata !9552, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %47, metadata !9553, metadata !DIExpression()), !dbg !9561
  %50 = add nuw i32 %9, 1, !dbg !9603
  %51 = select i1 %17, i32 %50, i32 1, !dbg !9603
  call void @llvm.dbg.value(metadata i32 %51, metadata !9560, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %23, metadata !9559, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i32 %20, metadata !9556, metadata !DIExpression()), !dbg !9561
  %52 = icmp eq i32 %47, 0, !dbg !9564
  br i1 %52, label %53, label %8, !dbg !9567, !llvm.loop !9604

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !9606
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !9607 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9611
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9612
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9611
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9613
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !9614
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !9615
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9616
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !9617
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !9616
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !9618
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !9619
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !9620
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %12, metadata !9609, metadata !DIExpression()), !dbg !9622
  %13 = icmp eq i32 %12, 0, !dbg !9623
  br i1 %13, label %14, label %46, !dbg !9625

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !9610, metadata !DIExpression()), !dbg !9622
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !9626
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9628
  call void @llvm.dbg.value(metadata i32 0, metadata !9610, metadata !DIExpression()), !dbg !9622
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !9629
  %16 = icmp eq i32 %15, 0, !dbg !9631
  br i1 %16, label %34, label %17, !dbg !9632

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !9610, metadata !DIExpression()), !dbg !9622
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !9633
  %23 = load i32, i32* %22, align 4, !dbg !9633
  %24 = add i32 %20, %23, !dbg !9635
  %25 = icmp ugt i32 %18, %21, !dbg !9636
  br i1 %25, label %26, label %27, !dbg !9638

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9639
  br label %27, !dbg !9641

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !9642
  call void @llvm.dbg.value(metadata i32 %29, metadata !9610, metadata !DIExpression()), !dbg !9622
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !9629
  %31 = load i32, i32* %30, align 4, !dbg !9629
  %32 = icmp eq i32 %31, 0, !dbg !9631
  br i1 %32, label %33, label %17, !dbg !9632, !llvm.loop !9643

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !9635
  br label %34, !dbg !9632

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !9645
  %36 = mul i32 %35, -5, !dbg !9646
  %37 = add i32 %36, 262144, !dbg !9647
  %38 = lshr i32 %37, 9, !dbg !9648
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !9649
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !9650
  call void @llvm.dbg.value(metadata i32 0, metadata !9609, metadata !DIExpression()), !dbg !9622
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9651
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !9652
  %42 = load i8, i8* %41, align 1, !dbg !9652
  %43 = icmp eq i8 %42, 3, !dbg !9653
  br i1 %43, label %44, label %46, !dbg !9653

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !9654
  call void @llvm.dbg.value(metadata i32 %45, metadata !9609, metadata !DIExpression()), !dbg !9622
  br label %46, !dbg !9656

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !9622
  ret i32 %47, !dbg !9657
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !9658 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9662, metadata !DIExpression()), !dbg !9663
  %2 = icmp eq i32 %0, 0, !dbg !9664
  br i1 %2, label %3, label %9, !dbg !9666

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !9667
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !9669
  %5 = icmp slt i32 %4, 0, !dbg !9670
  br i1 %5, label %6, label %7, !dbg !9672

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !9673
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.133, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.134, i32 0, i32 0)) #23, !dbg !9673
  unreachable, !dbg !9673

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !9678
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9679
  br label %9, !dbg !9680

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9681
  ret void, !dbg !9682
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !9683 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !9684
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !9685
  ret i32 %1, !dbg !9686
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !9687 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !9690
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9691
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9692
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9693
  %4 = load i16, i16* %3, align 2, !dbg !9693
  %5 = zext i16 %4 to i32, !dbg !9691
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9694
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9695
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9696
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !9697
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !9697
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !9698
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !9699
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !9700
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !9701
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !9702
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9703
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9704
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !9705
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !9706
  %13 = load i32, i32* %12, align 4, !dbg !9706
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !9707
  call void @llvm.dbg.value(metadata i32 %14, metadata !9689, metadata !DIExpression()), !dbg !9708
  %15 = icmp eq i32 %14, -120, !dbg !9709
  br i1 %15, label %16, label %17, !dbg !9712

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !9713
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.133, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.134, i32 0, i32 0)) #23, !dbg !9713
  unreachable, !dbg !9713

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !9715
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !9716
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !9717
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !9718
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !9719
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9720
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !9721
  ret i32 0, !dbg !9722
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !9723 {
  ret void, !dbg !9724
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !9725 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9728
  call void @llvm.dbg.value(metadata i32 %1, metadata !9727, metadata !DIExpression()), !dbg !9729
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9730
  br i1 %2, label %4, label %3, !dbg !9732

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !9733
  br label %4, !dbg !9735

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9736
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9736
  ret i32 %5, !dbg !9737
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !9738 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9741
  call void @llvm.dbg.value(metadata i32 %1, metadata !9740, metadata !DIExpression()), !dbg !9742
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9743
  br i1 %2, label %3, label %4, !dbg !9745

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !9746
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9748
  ret void, !dbg !9749

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !9750
  tail call void @Flash_ReturnReady() #20, !dbg !9752
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.139, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.140, i32 0, i32 0)) #23, !dbg !9752
  unreachable, !dbg !9752
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !9756 {
  ret void, !dbg !9757
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !9758 {
  br label %1, !dbg !9761

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !9762
  call void @llvm.dbg.value(metadata i32 %2, metadata !9760, metadata !DIExpression()), !dbg !9764
  %3 = icmp eq i32 %2, 0, !dbg !9765
  br i1 %3, label %4, label %1, !dbg !9766, !llvm.loop !9767

4:                                                ; preds = %1
  ret void, !dbg !9769
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !9770 {
  tail call void @FreeFDMLock() #21, !dbg !9771
  ret void, !dbg !9772
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9773 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9816, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.value(metadata i32 %1, metadata !9817, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.value(metadata i8* %2, metadata !9818, metadata !DIExpression()), !dbg !9822
  call void @llvm.dbg.value(metadata i32 %3, metadata !9819, metadata !DIExpression()), !dbg !9822
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9823
  %6 = load i32, i32* %5, align 4, !dbg !9823
  call void @llvm.dbg.value(metadata i32 %6, metadata !9821, metadata !DIExpression()), !dbg !9822
  %7 = icmp ule i32 %6, %1, !dbg !9824
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !9826
  br i1 %10, label %26, label %11, !dbg !9826

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9827
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !9827
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !9827
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !9828
  %16 = load i8*, i8** %15, align 4, !dbg !9828
  %17 = ptrtoint i8* %16 to i32, !dbg !9829
  %18 = add i32 %17, %1, !dbg !9830
  call void @llvm.dbg.value(metadata i32 %18, metadata !9820, metadata !DIExpression()), !dbg !9822
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9831
  %20 = load i8, i8* %19, align 4, !dbg !9831, !range !2650
  %21 = icmp eq i8 %20, 0, !dbg !9831
  br i1 %21, label %22, label %23, !dbg !9833

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9834
  br label %23, !dbg !9836

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !9837
  %24 = inttoptr i32 %18 to i8*, !dbg !9838
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !9839
  tail call void @release_FDM_lock() #21, !dbg !9840
  br label %26, !dbg !9841

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !9822
  ret i32 %27, !dbg !9842
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !9843 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9847, metadata !DIExpression()), !dbg !9849
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9850
  %3 = load i8, i8* %2, align 4, !dbg !9850, !range !2650
  %4 = icmp eq i8 %3, 0, !dbg !9850
  br i1 %4, label %5, label %18, !dbg !9852

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !9853
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9854
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !9854
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !9855
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !9855
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9856
  %11 = load i8*, i8** %10, align 4, !dbg !9856
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !9857
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !9858
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !9859
  call void @llvm.dbg.value(metadata i32 %14, metadata !9848, metadata !DIExpression()), !dbg !9849
  tail call void @release_FDM_lock() #21, !dbg !9860
  %15 = icmp slt i32 %14, 0, !dbg !9861
  br i1 %15, label %16, label %17, !dbg !9863

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !9864
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.139, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.140, i32 0, i32 0)) #23, !dbg !9864
  unreachable, !dbg !9864

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !9869
  br label %18, !dbg !9870

18:                                               ; preds = %1, %17
  ret void, !dbg !9870
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9871 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9873, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32 %1, metadata !9874, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i8* %2, metadata !9875, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32 %3, metadata !9876, metadata !DIExpression()), !dbg !9894
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9895
  %7 = load i32, i32* %6, align 4, !dbg !9895
  call void @llvm.dbg.value(metadata i32 %7, metadata !9879, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32 0, metadata !9880, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32 0, metadata !9881, metadata !DIExpression()), !dbg !9894
  %8 = icmp ugt i32 %7, %1, !dbg !9896
  br i1 %8, label %9, label %101, !dbg !9898

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !9899
  %11 = icmp ugt i32 %10, %7, !dbg !9901
  br i1 %11, label %101, label %12, !dbg !9902

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9903
  %14 = load i8, i8* %13, align 4, !dbg !9903, !range !2650
  %15 = icmp eq i8 %14, 0, !dbg !9903
  br i1 %15, label %16, label %17, !dbg !9905

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9906
  br label %17, !dbg !9908

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !9909
  %18 = bitcast i16* %5 to i8*, !dbg !9910
  call void @llvm.dbg.value(metadata i32 0, metadata !9880, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32 0, metadata !9881, metadata !DIExpression()), !dbg !9894
  %19 = icmp eq i32 %3, 0, !dbg !9911
  br i1 %19, label %99, label %20, !dbg !9912

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !9912

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !9881, metadata !DIExpression()), !dbg !9894
  %27 = load i8*, i8** %21, align 4, !dbg !9913
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !9914
  %29 = bitcast i8* %28 to i8**, !dbg !9914
  %30 = load i8*, i8** %29, align 4, !dbg !9914
  %31 = ptrtoint i8* %30 to i32, !dbg !9915
  %32 = add i32 %31, %1, !dbg !9916
  %33 = add i32 %32, %26, !dbg !9917
  call void @llvm.dbg.value(metadata i32 %33, metadata !9877, metadata !DIExpression()), !dbg !9894
  %34 = add i32 %26, %22, !dbg !9918
  call void @llvm.dbg.value(metadata i32 %34, metadata !9878, metadata !DIExpression()), !dbg !9894
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9919
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !9920
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !9920
  %38 = add i32 %26, %1, !dbg !9921
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !9922
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !9923
  %41 = and i32 %33, 1, !dbg !9924
  %42 = icmp eq i32 %41, 0, !dbg !9924
  br i1 %42, label %43, label %46, !dbg !9925

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !9926
  %45 = icmp eq i32 %44, 1, !dbg !9927
  br i1 %45, label %46, label %57, !dbg !9928

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9929
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !9931
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !9931
  %50 = load i8*, i8** %21, align 4, !dbg !9932
  %51 = inttoptr i32 %33 to i8*, !dbg !9933
  %52 = inttoptr i32 %34 to i8*, !dbg !9934
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !9935
  call void @llvm.dbg.value(metadata i32 %53, metadata !9880, metadata !DIExpression()), !dbg !9894
  %54 = icmp eq i32 %53, 0, !dbg !9936
  br i1 %54, label %55, label %99, !dbg !9938

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !9939
  call void @llvm.dbg.value(metadata i32 %56, metadata !9881, metadata !DIExpression()), !dbg !9894
  br label %96, !dbg !9940

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !9941
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !9942
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !9943
  call void @llvm.dbg.value(metadata i32 %60, metadata !9882, metadata !DIExpression()), !dbg !9944
  call void @llvm.dbg.value(metadata i32 %44, metadata !9886, metadata !DIExpression()), !dbg !9944
  %61 = add i32 %60, %33, !dbg !9945
  %62 = sub i32 0, %60, !dbg !9946
  %63 = and i32 %61, %62, !dbg !9947
  call void @llvm.dbg.value(metadata i32 %63, metadata !9887, metadata !DIExpression()), !dbg !9944
  %64 = add i32 %32, %3, !dbg !9948
  %65 = icmp ugt i32 %64, %63, !dbg !9950
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !9951
  call void @llvm.dbg.value(metadata i32 %67, metadata !9886, metadata !DIExpression()), !dbg !9944
  %68 = and i32 %67, -2, !dbg !9952
  call void @llvm.dbg.value(metadata i32 %68, metadata !9886, metadata !DIExpression()), !dbg !9944
  %69 = icmp ne i32 %68, 2, !dbg !9953
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !9954
  br i1 %72, label %85, label %73, !dbg !9954

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9910
  call void @llvm.dbg.value(metadata i8* %18, metadata !9893, metadata !DIExpression()), !dbg !9955
  %74 = inttoptr i32 %34 to i8*, !dbg !9956
  %75 = load i8, i8* %74, align 1, !dbg !9957
  call void @llvm.dbg.value(metadata i8 undef, metadata !9888, metadata !DIExpression()), !dbg !9955
  store i8 %75, i8* %18, align 2, !dbg !9958
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !9959
  %77 = load i8, i8* %76, align 1, !dbg !9960
  store i8 %77, i8* %24, align 1, !dbg !9961
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9962
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !9963
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !9963
  %81 = load i8*, i8** %21, align 4, !dbg !9964
  %82 = inttoptr i32 %33 to i8*, !dbg !9965
  call void @llvm.dbg.value(metadata i16* %5, metadata !9888, metadata !DIExpression(DW_OP_deref)), !dbg !9955
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !9966
  call void @llvm.dbg.value(metadata i32 %83, metadata !9880, metadata !DIExpression()), !dbg !9894
  %84 = icmp eq i32 %83, 0, !dbg !9967
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !9969
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9970
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !9974
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !9974
  %89 = load i8*, i8** %21, align 4, !dbg !9975
  %90 = inttoptr i32 %33 to i8*, !dbg !9976
  %91 = inttoptr i32 %34 to i8*, !dbg !9977
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !9978
  call void @llvm.dbg.value(metadata i32 %92, metadata !9880, metadata !DIExpression()), !dbg !9894
  %93 = icmp eq i32 %92, 0, !dbg !9979
  br i1 %93, label %94, label %99, !dbg !9981

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !9880, metadata !DIExpression()), !dbg !9894
  %95 = add i32 %68, %26, !dbg !9982
  call void @llvm.dbg.value(metadata i32 %83, metadata !9880, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32 %26, metadata !9881, metadata !DIExpression()), !dbg !9894
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !9983
  call void @llvm.dbg.value(metadata i32 0, metadata !9880, metadata !DIExpression()), !dbg !9894
  call void @llvm.dbg.value(metadata i32 %97, metadata !9881, metadata !DIExpression()), !dbg !9894
  %98 = icmp ult i32 %97, %3, !dbg !9911
  br i1 %98, label %25, label %99, !dbg !9912, !llvm.loop !9984

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !9986
  br label %101, !dbg !9987

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !9894
  ret i32 %102, !dbg !9987
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9988 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9992, metadata !DIExpression()), !dbg !9996
  call void @llvm.dbg.value(metadata i32 %1, metadata !9993, metadata !DIExpression()), !dbg !9996
  %3 = and i32 %1, 16777215, !dbg !9997
  call void @llvm.dbg.value(metadata i32 %3, metadata !9995, metadata !DIExpression()), !dbg !9996
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9998
  %5 = load i8, i8* %4, align 4, !dbg !9998, !range !2650
  %6 = icmp eq i8 %5, 0, !dbg !9998
  br i1 %6, label %7, label %8, !dbg !10000

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !10001
  br label %8, !dbg !10003

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !10004
  %10 = load i32, i32* %9, align 4, !dbg !10004
  %11 = icmp ult i32 %3, %10, !dbg !10006
  br i1 %11, label %12, label %27, !dbg !10007

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !10008
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !10009
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10009
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !10010
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !10010
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10011
  %18 = load i8*, i8** %17, align 4, !dbg !10011
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !10012
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10013
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !10014
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !10014
  %23 = load i8*, i8** %17, align 4, !dbg !10015
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !10016
  call void @llvm.dbg.value(metadata i32 %24, metadata !9994, metadata !DIExpression()), !dbg !9996
  tail call void @release_FDM_lock() #21, !dbg !10017
  %25 = icmp eq i32 %24, 0, !dbg !10018
  %26 = select i1 %25, i32 0, i32 6, !dbg !9996
  br label %27, !dbg !9996

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !9996
  ret i32 %28, !dbg !10020
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !10021 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10022
  br i1 %1, label %3, label %2, !dbg !10024

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !10025
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !10027
  store i1 true, i1* @flash_init_status, align 4, !dbg !10028
  br label %3, !dbg !10029

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !10030
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !10031 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10032
  %2 = select i1 %1, i32 0, i32 -5, !dbg !10032
  ret i32 %2, !dbg !10033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !10034 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10038, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata i32 %1, metadata !10039, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata i8* %2, metadata !10040, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10041, metadata !DIExpression()), !dbg !10045
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10046
  call void @llvm.dbg.value(metadata i8* %4, metadata !10042, metadata !DIExpression()), !dbg !10045
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10047
  %6 = ptrtoint i8* %5 to i32, !dbg !10048
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10049
  %8 = bitcast i8* %7 to i8**, !dbg !10049
  %9 = load i8*, i8** %8, align 4, !dbg !10049
  %10 = ptrtoint i8* %9 to i32, !dbg !10050
  %11 = shl i32 %1, 9, !dbg !10051
  %12 = add i32 %11, %6, !dbg !10052
  %13 = sub i32 %12, %10, !dbg !10053
  call void @llvm.dbg.value(metadata i32 %13, metadata !10044, metadata !DIExpression()), !dbg !10045
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !10054
  call void @llvm.dbg.value(metadata i32 %14, metadata !10043, metadata !DIExpression()), !dbg !10045
  %15 = icmp eq i32 %14, 0, !dbg !10055
  %16 = select i1 %15, i32 0, i32 -13, !dbg !10045
  ret i32 %16, !dbg !10057
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !10058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10060, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.value(metadata i32 %1, metadata !10061, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.value(metadata i8* %2, metadata !10062, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10063, metadata !DIExpression()), !dbg !10067
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10068
  call void @llvm.dbg.value(metadata i8* %4, metadata !10064, metadata !DIExpression()), !dbg !10067
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10069
  %6 = ptrtoint i8* %5 to i32, !dbg !10070
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10071
  %8 = bitcast i8* %7 to i8**, !dbg !10071
  %9 = load i8*, i8** %8, align 4, !dbg !10071
  %10 = ptrtoint i8* %9 to i32, !dbg !10072
  %11 = shl i32 %1, 9, !dbg !10073
  %12 = add i32 %11, %6, !dbg !10074
  %13 = sub i32 %12, %10, !dbg !10075
  call void @llvm.dbg.value(metadata i32 %13, metadata !10066, metadata !DIExpression()), !dbg !10067
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !10076
  call void @llvm.dbg.value(metadata i32 %14, metadata !10065, metadata !DIExpression()), !dbg !10067
  %15 = icmp eq i32 %14, 0, !dbg !10077
  %16 = select i1 %15, i32 0, i32 -14, !dbg !10067
  ret i32 %16, !dbg !10079
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !10080 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10084, metadata !DIExpression()), !dbg !10086
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !10087
  call void @llvm.dbg.value(metadata i32 %2, metadata !10085, metadata !DIExpression()), !dbg !10086
  %3 = icmp eq i32 %2, 0, !dbg !10088
  %4 = select i1 %3, i32 0, i32 -15, !dbg !10086
  ret i32 %4, !dbg !10090
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10091 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10093, metadata !DIExpression()), !dbg !10096
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10094, metadata !DIExpression()), !dbg !10096
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10097
  call void @llvm.dbg.value(metadata i8* %2, metadata !10095, metadata !DIExpression()), !dbg !10096
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !10098
  ret i32 %3, !dbg !10099
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !10100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10102, metadata !DIExpression()), !dbg !10105
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10103, metadata !DIExpression()), !dbg !10105
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10106
  call void @llvm.dbg.value(metadata i8* %2, metadata !10104, metadata !DIExpression()), !dbg !10105
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !10107
  ret i32 %3, !dbg !10108
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10109 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10113, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata i32* %1, metadata !10114, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata i32* %2, metadata !10115, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10116, metadata !DIExpression()), !dbg !10118
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10119
  call void @llvm.dbg.value(metadata i8* %4, metadata !10117, metadata !DIExpression()), !dbg !10118
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !10120
  store i32 %5, i32* %1, align 4, !dbg !10121
  %6 = icmp eq i32 %5, -1, !dbg !10122
  br i1 %6, label %10, label %7, !dbg !10124

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !10125
  %9 = urem i32 %0, %8, !dbg !10126
  store i32 %9, i32* %2, align 4, !dbg !10127
  br label %10, !dbg !10128

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !10118
  ret i32 %11, !dbg !10129
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10130 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10134, metadata !DIExpression()), !dbg !10139
  call void @llvm.dbg.value(metadata i32 %1, metadata !10135, metadata !DIExpression()), !dbg !10139
  call void @llvm.dbg.value(metadata i32* %2, metadata !10136, metadata !DIExpression()), !dbg !10139
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10137, metadata !DIExpression()), !dbg !10139
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10140
  call void @llvm.dbg.value(metadata i8* %4, metadata !10138, metadata !DIExpression()), !dbg !10139
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10141
  %6 = ptrtoint i8* %5 to i32, !dbg !10142
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10143
  %8 = bitcast i8* %7 to i8**, !dbg !10143
  %9 = load i8*, i8** %8, align 4, !dbg !10143
  %10 = ptrtoint i8* %9 to i32, !dbg !10144
  %11 = add i32 %6, %1, !dbg !10145
  %12 = sub i32 %11, %10, !dbg !10146
  store i32 %12, i32* %2, align 4, !dbg !10147
  ret i32 0, !dbg !10148
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !10149 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10153, metadata !DIExpression()), !dbg !10154
  %2 = add i32 %0, 2, !dbg !10155
  %3 = icmp ult i32 %2, 9, !dbg !10155
  br i1 %3, label %5, label %4, !dbg !10155

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !10156
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.139, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.140, i32 0, i32 0)) #23, !dbg !10156
  unreachable, !dbg !10156

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !10155
  %7 = lshr i16 433, %6, !dbg !10155
  %8 = and i16 %7, 1, !dbg !10155
  %9 = icmp eq i16 %8, 0, !dbg !10155
  br i1 %9, label %4, label %10, !dbg !10155

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !10155
  %12 = load i32, i32* %11, align 4, !dbg !10155
  ret i32 %12, !dbg !10166
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !10167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10172, metadata !DIExpression()), !dbg !10175
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !10176
  call void @llvm.dbg.value(metadata i32 %2, metadata !10174, metadata !DIExpression()), !dbg !10175
  %3 = icmp eq i32 %2, -1, !dbg !10177
  br i1 %3, label %4, label %5, !dbg !10179

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !10180
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.139, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.140, i32 0, i32 0)) #23, !dbg !10180
  unreachable, !dbg !10180

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !10185
  call void @llvm.dbg.value(metadata i32 %6, metadata !10173, metadata !DIExpression()), !dbg !10175
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !10186

7:                                                ; preds = %5
  br label %10, !dbg !10187

8:                                                ; preds = %5
  br label %10, !dbg !10191

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !10194
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.139, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.140, i32 0, i32 0)) #23, !dbg !10194
  unreachable, !dbg !10194

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !10199
  ret i32 %11, !dbg !10200
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !10201 {
  %1 = tail call i32 @NOR_init() #21, !dbg !10202
  ret i32 0, !dbg !10203
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !10204 {
  ret i32 0, !dbg !10205
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10206 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10210, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 %1, metadata !10211, metadata !DIExpression()), !dbg !10215
  call void @llvm.dbg.value(metadata i32 0, metadata !10214, metadata !DIExpression()), !dbg !10215
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !10216

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !10217
  %5 = icmp eq i32 %4, 0, !dbg !10221
  br i1 %5, label %12, label %22, !dbg !10222

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !10223
  %8 = icmp eq i32 %7, 0, !dbg !10227
  br i1 %8, label %12, label %22, !dbg !10228

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !10229
  %11 = icmp eq i32 %10, 0, !dbg !10233
  br i1 %11, label %12, label %22, !dbg !10234

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !10235
  call void @llvm.dbg.value(metadata i32 %13, metadata !10214, metadata !DIExpression()), !dbg !10215
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !10236
  call void @llvm.dbg.value(metadata i32 %14, metadata !10213, metadata !DIExpression()), !dbg !10215
  %15 = icmp eq i32 %14, -1, !dbg !10237
  br i1 %15, label %22, label %16, !dbg !10239

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !10240
  call void @llvm.dbg.value(metadata i32 %17, metadata !10213, metadata !DIExpression()), !dbg !10215
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !10241
  call void @llvm.dbg.value(metadata i32 %18, metadata !10212, metadata !DIExpression()), !dbg !10215
  %19 = icmp eq i32 %18, 0, !dbg !10242
  br i1 %19, label %22, label %20, !dbg !10244

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !10245
  br label %22, !dbg !10247

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !10215
  ret i32 %23, !dbg !10248
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10253, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata i8* %1, metadata !10254, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata i32 %2, metadata !10255, metadata !DIExpression()), !dbg !10258
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10256, metadata !DIExpression()), !dbg !10258
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !10259
  call void @llvm.dbg.value(metadata i32 %4, metadata !10257, metadata !DIExpression()), !dbg !10258
  %5 = icmp eq i32 %4, 0, !dbg !10260
  br i1 %5, label %8, label %6, !dbg !10262

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !10263
  br label %8, !dbg !10265

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !10258
  ret i32 %9, !dbg !10266
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10267 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10271, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.value(metadata i8* %1, metadata !10272, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.value(metadata i32 %2, metadata !10273, metadata !DIExpression()), !dbg !10279
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10274, metadata !DIExpression()), !dbg !10279
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !10280
  call void @llvm.dbg.value(metadata i32 %4, metadata !10275, metadata !DIExpression()), !dbg !10279
  %5 = icmp eq i32 %4, 0, !dbg !10281
  br i1 %5, label %8, label %6, !dbg !10283

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !10284
  br label %21, !dbg !10286

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !10287
  br i1 %9, label %10, label %21, !dbg !10288

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !10289
  call void @llvm.dbg.value(metadata i32 %11, metadata !10276, metadata !DIExpression()), !dbg !10291
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !10276, metadata !DIExpression()), !dbg !10291
  %15 = icmp ugt i32 %11, %14, !dbg !10292
  br i1 %15, label %21, label %16, !dbg !10294

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10276, metadata !DIExpression()), !dbg !10291
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !10295
  %19 = add i32 %17, 32, !dbg !10297
  call void @llvm.dbg.value(metadata i32 %19, metadata !10276, metadata !DIExpression()), !dbg !10291
  %20 = icmp ugt i32 %19, %14, !dbg !10292
  br i1 %20, label %21, label %16, !dbg !10294, !llvm.loop !10298

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !10279
  ret i32 %22, !dbg !10300
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10301 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10305, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 %1, metadata !10306, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i8* %0, metadata !10307, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 0, metadata !10308, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 0, metadata !10309, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 0, metadata !10310, metadata !DIExpression()), !dbg !10311
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10312
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10312
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10312
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10313
  %7 = load i32, i32* %6, align 4, !dbg !10313
  call void @llvm.dbg.value(metadata i32 %7, metadata !10310, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 0, metadata !10309, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 0, metadata !10308, metadata !DIExpression()), !dbg !10311
  %8 = icmp ugt i32 %7, %1, !dbg !10314
  br i1 %8, label %23, label %9, !dbg !10315

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !10316
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10310, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 %12, metadata !10309, metadata !DIExpression()), !dbg !10311
  call void @llvm.dbg.value(metadata i32 %13, metadata !10308, metadata !DIExpression()), !dbg !10311
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !10318
  %15 = load i32, i32* %14, align 4, !dbg !10318
  %16 = mul i32 %15, %10, !dbg !10319
  %17 = add i32 %16, %13, !dbg !10320
  call void @llvm.dbg.value(metadata i32 %17, metadata !10308, metadata !DIExpression()), !dbg !10311
  %18 = add i32 %12, 1, !dbg !10321
  call void @llvm.dbg.value(metadata i32 %18, metadata !10309, metadata !DIExpression()), !dbg !10311
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !10322
  %20 = load i32, i32* %19, align 4, !dbg !10322
  %21 = add i32 %20, %11, !dbg !10323
  call void @llvm.dbg.value(metadata i32 %21, metadata !10310, metadata !DIExpression()), !dbg !10311
  %22 = icmp ugt i32 %21, %1, !dbg !10314
  br i1 %22, label %23, label %9, !dbg !10315, !llvm.loop !10324

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !10326
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !10311
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !10311
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !10311
  call void @llvm.dbg.value(metadata i8* %0, metadata !10307, metadata !DIExpression()), !dbg !10311
  %28 = sub i32 %1, %27, !dbg !10327
  %29 = add i32 %28, %24, !dbg !10328
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !10329
  %31 = load i32, i32* %30, align 4, !dbg !10329
  %32 = mul i32 %29, %31, !dbg !10330
  %33 = add i32 %32, %25, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %33, metadata !10308, metadata !DIExpression()), !dbg !10311
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10332
  %35 = bitcast i8* %34 to i8**, !dbg !10332
  %36 = load i8*, i8** %35, align 4, !dbg !10332
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !10333
  ret i8* %37, !dbg !10334
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !10335 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10337, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i32 %1, metadata !10338, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i32 %2, metadata !10339, metadata !DIExpression()), !dbg !10341
  call void @llvm.dbg.value(metadata i8* %0, metadata !10340, metadata !DIExpression()), !dbg !10341
  %4 = icmp eq i32 %2, 0, !dbg !10342
  br i1 %4, label %6, label %5, !dbg !10345

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10346
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.155, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.156, i32 0, i32 0)) #23, !dbg !10346
  unreachable, !dbg !10346

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10340, metadata !DIExpression()), !dbg !10341
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !10348
  %8 = inttoptr i32 %7 to i8*, !dbg !10349
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10350
  %10 = bitcast i8* %9 to i8**, !dbg !10350
  store i8* %8, i8** %10, align 4, !dbg !10351
  ret i8* %8, !dbg !10352
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !2011 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2015, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 %1, metadata !2016, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i8* %0, metadata !2017, metadata !DIExpression()), !dbg !10353
  call void @llvm.dbg.value(metadata i32 0, metadata !2062, metadata !DIExpression()), !dbg !10353
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10354
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !10354
  %5 = and i32 %1, 7, !dbg !10356
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !10357
  %7 = load i32, i32* %6, align 4, !dbg !10357
  %8 = icmp eq i32 %7, -1, !dbg !10358
  br i1 %8, label %62, label %9, !dbg !10359

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !10360
  br i1 %10, label %54, label %11, !dbg !10363

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !10364
  %13 = load i32, i32* %12, align 4, !dbg !10364
  %14 = icmp eq i32 %13, -1, !dbg !10367
  br i1 %14, label %44, label %15, !dbg !10368

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !10369
  br i1 %16, label %35, label %17, !dbg !10372

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10373
  %19 = add i32 %18, 1, !dbg !10373
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !10373
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10375
  %21 = shl nuw nsw i32 1, %5, !dbg !10377
  %22 = and i32 %20, %21, !dbg !10378
  %23 = icmp eq i32 %22, 0, !dbg !10378
  br i1 %23, label %30, label %24, !dbg !10379

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !10380
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10382
  %26 = ptrtoint i8* %25 to i32, !dbg !10383
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10384
  store i32 %26, i32* %27, align 4, !dbg !10385
  call void @llvm.dbg.value(metadata i32 %26, metadata !2062, metadata !DIExpression()), !dbg !10353
  %28 = xor i32 %21, -1, !dbg !10386
  %29 = and i32 %20, %28, !dbg !10387
  br label %71, !dbg !10388

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !10389
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10391
  %32 = ptrtoint i8* %31 to i32, !dbg !10392
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10393
  store i32 %32, i32* %33, align 4, !dbg !10394
  call void @llvm.dbg.value(metadata i32 %32, metadata !2062, metadata !DIExpression()), !dbg !10353
  %34 = or i32 %20, %21, !dbg !10395
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10396
  %37 = add i32 %36, 1, !dbg !10396
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !10396
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10398
  %39 = load i32, i32* %38, align 4, !dbg !10398
  call void @llvm.dbg.value(metadata i32 %39, metadata !2062, metadata !DIExpression()), !dbg !10353
  %40 = shl nuw nsw i32 1, %5, !dbg !10399
  %41 = xor i32 %40, -1, !dbg !10400
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10401
  %43 = and i32 %42, %41, !dbg !10401
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10402
  %46 = add i32 %45, 1, !dbg !10402
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !10402
  store i32 %1, i32* %12, align 4, !dbg !10404
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10405
  %48 = ptrtoint i8* %47 to i32, !dbg !10406
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10407
  store i32 %48, i32* %49, align 4, !dbg !10408
  call void @llvm.dbg.value(metadata i32 %48, metadata !2062, metadata !DIExpression()), !dbg !10353
  %50 = shl nuw nsw i32 1, %5, !dbg !10409
  %51 = xor i32 %50, -1, !dbg !10410
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10411
  %53 = and i32 %52, %51, !dbg !10411
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10412
  %56 = add i32 %55, 1, !dbg !10412
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !10412
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10414
  %58 = load i32, i32* %57, align 4, !dbg !10414
  call void @llvm.dbg.value(metadata i32 %58, metadata !2062, metadata !DIExpression()), !dbg !10353
  %59 = shl nuw nsw i32 1, %5, !dbg !10415
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10416
  %61 = or i32 %60, %59, !dbg !10416
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10417
  %64 = add i32 %63, 1, !dbg !10417
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !10417
  store i32 %1, i32* %6, align 4, !dbg !10419
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10420
  %66 = ptrtoint i8* %65 to i32, !dbg !10421
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10422
  store i32 %66, i32* %67, align 4, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %66, metadata !2062, metadata !DIExpression()), !dbg !10353
  %68 = shl nuw nsw i32 1, %5, !dbg !10424
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10425
  %70 = or i32 %69, %68, !dbg !10425
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !10426
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !10426
  call void @llvm.dbg.value(metadata i32 %73, metadata !2062, metadata !DIExpression()), !dbg !10353
  ret i32 %73, !dbg !10427
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10428 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10430, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.value(metadata i32 %1, metadata !10431, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.value(metadata i8* %0, metadata !10432, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.value(metadata i32 0, metadata !10433, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.value(metadata i32 0, metadata !10434, metadata !DIExpression()), !dbg !10435
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10436
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10436
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10436
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10437
  %7 = load i32, i32* %6, align 4, !dbg !10437
  call void @llvm.dbg.value(metadata i32 %7, metadata !10434, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.value(metadata i32 0, metadata !10433, metadata !DIExpression()), !dbg !10435
  %8 = icmp ugt i32 %7, %1, !dbg !10438
  br i1 %8, label %17, label %9, !dbg !10439

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10434, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.value(metadata i32 %11, metadata !10433, metadata !DIExpression()), !dbg !10435
  %12 = add i32 %11, 1, !dbg !10440
  call void @llvm.dbg.value(metadata i32 %12, metadata !10433, metadata !DIExpression()), !dbg !10435
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !10442
  %14 = load i32, i32* %13, align 4, !dbg !10442
  %15 = add i32 %14, %10, !dbg !10443
  call void @llvm.dbg.value(metadata i32 %15, metadata !10434, metadata !DIExpression()), !dbg !10435
  %16 = icmp ugt i32 %15, %1, !dbg !10438
  br i1 %16, label %17, label %9, !dbg !10439, !llvm.loop !10444

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !10435
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !10446
  %20 = load i32, i32* %19, align 4, !dbg !10446
  ret i32 %20, !dbg !10447
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10448 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10450, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 %1, metadata !10451, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i8* %0, metadata !10452, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 0, metadata !10453, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 0, metadata !10454, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 0, metadata !10455, metadata !DIExpression()), !dbg !10456
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10457
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10457
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10457
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10458
  %7 = load i32, i32* %6, align 4, !dbg !10458
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !10459
  %9 = load i32, i32* %8, align 4, !dbg !10459
  %10 = mul i32 %9, %7, !dbg !10460
  call void @llvm.dbg.value(metadata i32 %10, metadata !10454, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 0, metadata !10455, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 0, metadata !10453, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 %1, metadata !10451, metadata !DIExpression()), !dbg !10456
  %11 = icmp ult i32 %10, %1, !dbg !10461
  br i1 %11, label %12, label %30, !dbg !10462

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !10463
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10455, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 %16, metadata !10454, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 %17, metadata !10453, metadata !DIExpression()), !dbg !10456
  call void @llvm.dbg.value(metadata i32 %18, metadata !10451, metadata !DIExpression()), !dbg !10456
  %19 = icmp eq i32 %14, 0, !dbg !10462
  br i1 %19, label %36, label %20, !dbg !10464

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !10465
  call void @llvm.dbg.value(metadata i32 %21, metadata !10455, metadata !DIExpression()), !dbg !10456
  %22 = sub i32 %18, %16, !dbg !10467
  call void @llvm.dbg.value(metadata i32 %22, metadata !10451, metadata !DIExpression()), !dbg !10456
  %23 = add i32 %17, 1, !dbg !10468
  call void @llvm.dbg.value(metadata i32 %23, metadata !10453, metadata !DIExpression()), !dbg !10456
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !10469
  %25 = load i32, i32* %24, align 4, !dbg !10469
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !10470
  %27 = load i32, i32* %26, align 4, !dbg !10470
  %28 = mul i32 %27, %25, !dbg !10471
  call void @llvm.dbg.value(metadata i32 %28, metadata !10454, metadata !DIExpression()), !dbg !10456
  %29 = icmp ugt i32 %22, %28, !dbg !10461
  br i1 %29, label %12, label %30, !dbg !10462, !llvm.loop !10472

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !10474
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !10456
  %34 = udiv i32 %32, %31, !dbg !10477
  %35 = add i32 %34, %33, !dbg !10478
  call void @llvm.dbg.value(metadata i32 %35, metadata !10455, metadata !DIExpression()), !dbg !10456
  br label %36, !dbg !10479

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !10480
  call void @llvm.dbg.value(metadata i32 %37, metadata !10455, metadata !DIExpression()), !dbg !10456
  ret i32 %37, !dbg !10481
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !10482 {
  ret i32 134217728, !dbg !10483
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !10484 {
  ret i32 3932160, !dbg !10485
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !10486 {
  ret i32 0, !dbg !10487
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !10488 {
  ret i32 262144, !dbg !10489
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !10490 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10492, metadata !DIExpression()), !dbg !10494
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !10495
  call void @llvm.dbg.value(metadata i32 %2, metadata !10493, metadata !DIExpression()), !dbg !10494
  %3 = icmp eq i32 %2, 0, !dbg !10496
  br i1 %3, label %5, label %4, !dbg !10498

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !10499
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.155, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.156, i32 0, i32 0)) #23, !dbg !10499
  unreachable, !dbg !10499

5:                                                ; preds = %1
  ret void, !dbg !10504
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10505 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10509, metadata !DIExpression()), !dbg !10522
  call void @llvm.dbg.value(metadata i32 %1, metadata !10510, metadata !DIExpression()), !dbg !10522
  call void @llvm.dbg.value(metadata i8* %2, metadata !10511, metadata !DIExpression()), !dbg !10522
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10523
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10523
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10512, metadata !DIExpression()), !dbg !10524
  %7 = bitcast i32* %5 to i8*, !dbg !10525
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10525
  call void @llvm.dbg.value(metadata i32* %5, metadata !10521, metadata !DIExpression(DW_OP_deref)), !dbg !10522
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10526
  call void @llvm.va_start(i8* nonnull %6), !dbg !10527
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10528
  %10 = load i32, i32* %9, align 4, !dbg !10528
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10528
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10528
  call void @llvm.va_end(i8* nonnull %6), !dbg !10529
  %13 = load i32, i32* %5, align 4, !dbg !10530
  call void @llvm.dbg.value(metadata i32 %13, metadata !10521, metadata !DIExpression()), !dbg !10522
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10531
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10532
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10532
  ret void, !dbg !10532
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10533 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10535, metadata !DIExpression()), !dbg !10540
  call void @llvm.dbg.value(metadata i32 %1, metadata !10536, metadata !DIExpression()), !dbg !10540
  call void @llvm.dbg.value(metadata i8* %2, metadata !10537, metadata !DIExpression()), !dbg !10540
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10541
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10541
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10538, metadata !DIExpression()), !dbg !10542
  %7 = bitcast i32* %5 to i8*, !dbg !10543
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10543
  call void @llvm.dbg.value(metadata i32* %5, metadata !10539, metadata !DIExpression(DW_OP_deref)), !dbg !10540
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10544
  call void @llvm.va_start(i8* nonnull %6), !dbg !10545
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10546
  %10 = load i32, i32* %9, align 4, !dbg !10546
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10546
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10546
  call void @llvm.va_end(i8* nonnull %6), !dbg !10547
  %13 = load i32, i32* %5, align 4, !dbg !10548
  call void @llvm.dbg.value(metadata i32 %13, metadata !10539, metadata !DIExpression()), !dbg !10540
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10549
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10550
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10550
  ret void, !dbg !10550
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10551 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10553, metadata !DIExpression()), !dbg !10558
  call void @llvm.dbg.value(metadata i32 %1, metadata !10554, metadata !DIExpression()), !dbg !10558
  call void @llvm.dbg.value(metadata i8* %2, metadata !10555, metadata !DIExpression()), !dbg !10558
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10559
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10559
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10556, metadata !DIExpression()), !dbg !10560
  %7 = bitcast i32* %5 to i8*, !dbg !10561
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10561
  call void @llvm.dbg.value(metadata i32* %5, metadata !10557, metadata !DIExpression(DW_OP_deref)), !dbg !10558
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10562
  call void @llvm.va_start(i8* nonnull %6), !dbg !10563
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10564
  %10 = load i32, i32* %9, align 4, !dbg !10564
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10564
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10564
  call void @llvm.va_end(i8* nonnull %6), !dbg !10565
  %13 = load i32, i32* %5, align 4, !dbg !10566
  call void @llvm.dbg.value(metadata i32 %13, metadata !10557, metadata !DIExpression()), !dbg !10558
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10567
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10568
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10568
  ret void, !dbg !10568
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !10569 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10575, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i32 %1, metadata !10576, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i8* %2, metadata !10577, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i8* %3, metadata !10578, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.value(metadata i32 %4, metadata !10579, metadata !DIExpression()), !dbg !10580
  ret void, !dbg !10581
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !10582 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10584, metadata !DIExpression()), !dbg !10586
  %2 = shl i32 %0, 20, !dbg !10587
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10588
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !10589
  store volatile i32 %2, i32* %4, align 4, !dbg !10590
  %5 = load volatile i32, i32* %4, align 4, !dbg !10591
  %6 = or i32 %5, 65536, !dbg !10592
  store volatile i32 %6, i32* %4, align 4, !dbg !10593
  br label %7, !dbg !10594

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !10595
  %9 = and i32 %8, 1, !dbg !10596
  %10 = icmp eq i32 %9, 0, !dbg !10597
  br i1 %10, label %7, label %11, !dbg !10594, !llvm.loop !10598

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !10600
  %13 = lshr i32 %12, 8, !dbg !10601
  %14 = and i32 %13, 255, !dbg !10601
  call void @llvm.dbg.value(metadata i32 %14, metadata !10585, metadata !DIExpression()), !dbg !10586
  ret i32 %14, !dbg !10602
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !10603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10607, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata i32 %1, metadata !10608, metadata !DIExpression()), !dbg !10609
  call void @llvm.dbg.value(metadata i32 %1, metadata !10608, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10609
  %3 = shl i32 %1, 24, !dbg !10610
  %4 = shl i32 %0, 20, !dbg !10611
  %5 = or i32 %4, %3, !dbg !10612
  %6 = or i32 %5, 131072, !dbg !10612
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10613
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !10614
  store volatile i32 %6, i32* %8, align 4, !dbg !10615
  %9 = load volatile i32, i32* %8, align 4, !dbg !10616
  %10 = or i32 %9, 65536, !dbg !10617
  store volatile i32 %10, i32* %8, align 4, !dbg !10618
  br label %11, !dbg !10619

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !10620
  %13 = and i32 %12, 1, !dbg !10621
  %14 = icmp eq i32 %13, 0, !dbg !10622
  br i1 %14, label %11, label %15, !dbg !10619, !llvm.loop !10623

15:                                               ; preds = %11
  ret void, !dbg !10625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !10626 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !10627
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !10628
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !10629
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !10630
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !10631
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !10632
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !10633
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !10634
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !10635
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !10636
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !10637
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !10638
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !10639
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !10640
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !10641
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !10642
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !10643
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !10644
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !10645
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !10646
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !10647
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !10648
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !10649
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !10650
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !10651
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !10652
  ret void, !dbg !10653
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !10654 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10657
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10658
  store volatile i32 21553, i32* %2, align 4, !dbg !10659
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10660
  store volatile i32 20489, i32* %3, align 4, !dbg !10661
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10662
  store volatile i32 20550, i32* %4, align 4, !dbg !10663
  ret i32 0, !dbg !10664
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !10665 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !10669, metadata !DIExpression()), !dbg !10673
  call void @llvm.dbg.value(metadata i32 0, metadata !10667, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata i32 16384, metadata !10668, metadata !DIExpression()), !dbg !10674
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10675
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !10676
  store volatile i32 0, i32* %2, align 4, !dbg !10677
  call void @llvm.dbg.value(metadata i32 0, metadata !10671, metadata !DIExpression()), !dbg !10674
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !10671, metadata !DIExpression()), !dbg !10674
  br label %5, !dbg !10678

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !10671, metadata !DIExpression()), !dbg !10674
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !10670, metadata !DIExpression()), !dbg !10674
  br label %8, !dbg !10680

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10670, metadata !DIExpression()), !dbg !10674
  call void @llvm.dbg.value(metadata i32 0, metadata !10672, metadata !DIExpression()), !dbg !10674
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !10684

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !10672, metadata !DIExpression()), !dbg !10674
  %12 = icmp eq i32 %30, 2, !dbg !10688
  br i1 %12, label %31, label %13, !dbg !10684, !llvm.loop !10690

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10672, metadata !DIExpression()), !dbg !10674
  store volatile i32 0, i32* %2, align 4, !dbg !10692
  store volatile i32 63, i32* %3, align 4, !dbg !10694
  %15 = load i32, i32* %10, align 4, !dbg !10695
  %16 = shl i32 %15, 16, !dbg !10696
  %17 = shl nuw nsw i32 %14, 13, !dbg !10697
  %18 = or i32 %17, %7, !dbg !10698
  %19 = or i32 %18, %16, !dbg !10699
  store volatile i32 %19, i32* %2, align 4, !dbg !10700
  %20 = load volatile i32, i32* %2, align 4, !dbg !10701
  %21 = or i32 %20, 805, !dbg !10701
  store volatile i32 %21, i32* %2, align 4, !dbg !10701
  br label %22, !dbg !10702

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !10703
  %24 = and i32 %23, 2, !dbg !10704
  %25 = icmp eq i32 %24, 0, !dbg !10705
  br i1 %25, label %22, label %26, !dbg !10702, !llvm.loop !10706

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !10708
  %28 = and i32 %27, 1, !dbg !10710
  %29 = icmp eq i32 %28, 0, !dbg !10711
  %30 = add nuw nsw i32 %14, 1, !dbg !10712
  call void @llvm.dbg.value(metadata i32 %30, metadata !10672, metadata !DIExpression()), !dbg !10674
  br i1 %29, label %11, label %37, !dbg !10713

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !10714
  call void @llvm.dbg.value(metadata i32 %32, metadata !10670, metadata !DIExpression()), !dbg !10674
  %33 = icmp eq i32 %32, 2, !dbg !10715
  br i1 %33, label %34, label %8, !dbg !10680, !llvm.loop !10716

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !10718
  call void @llvm.dbg.value(metadata i32 %35, metadata !10671, metadata !DIExpression()), !dbg !10674
  %36 = icmp eq i32 %35, 2, !dbg !10719
  br i1 %36, label %37, label %5, !dbg !10678, !llvm.loop !10720

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !10674
  store volatile i32 0, i32* %2, align 4, !dbg !10674
  ret i32 %38, !dbg !10722
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !10723 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !10724
  %2 = icmp ne i32 %1, 0, !dbg !10726
  %3 = sext i1 %2 to i32, !dbg !10727
  ret i32 %3, !dbg !10728
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !10729 {
  call void @llvm.dbg.value(metadata i32 31, metadata !10731, metadata !DIExpression()), !dbg !10733
  call void @llvm.dbg.value(metadata i32 0, metadata !10732, metadata !DIExpression()), !dbg !10733
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10734
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10735
  store volatile i32 0, i32* %2, align 4, !dbg !10736
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10737
  store volatile i32 0, i32* %3, align 4, !dbg !10738
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10739
  store volatile i32 0, i32* %4, align 4, !dbg !10740
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10741
  store volatile i32 0, i32* %5, align 4, !dbg !10742
  call void @llvm.dbg.value(metadata i32 31, metadata !10731, metadata !DIExpression()), !dbg !10733
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10743
  store volatile i32 522133279, i32* %6, align 4, !dbg !10747
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10748
  store volatile i32 522133279, i32* %7, align 4, !dbg !10749
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10750
  %9 = icmp eq i32 %8, 0, !dbg !10752
  call void @llvm.dbg.value(metadata i32 31, metadata !10731, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10733
  br i1 %9, label %36, label %10, !dbg !10753

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10731, metadata !DIExpression()), !dbg !10733
  call void @llvm.dbg.value(metadata i32 %11, metadata !10731, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10733
  call void @llvm.dbg.value(metadata i32 %11, metadata !10731, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10733
  %12 = icmp eq i32 %11, 0, !dbg !10754
  br i1 %12, label %26, label %13, !dbg !10755, !llvm.loop !10756

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !10758
  call void @llvm.dbg.value(metadata i32 %14, metadata !10731, metadata !DIExpression()), !dbg !10733
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10759
  %16 = shl i32 %14, 24, !dbg !10760
  %17 = shl i32 %14, 16, !dbg !10761
  %18 = shl i32 %14, 8, !dbg !10762
  %19 = or i32 %17, %14, !dbg !10763
  %20 = or i32 %19, %16, !dbg !10764
  %21 = or i32 %20, %18, !dbg !10765
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !10743
  store volatile i32 %21, i32* %22, align 4, !dbg !10747
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !10748
  store volatile i32 %21, i32* %23, align 4, !dbg !10749
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10750
  %25 = icmp eq i32 %24, 0, !dbg !10752
  call void @llvm.dbg.value(metadata i32 %14, metadata !10731, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10733
  br i1 %25, label %36, label %10, !dbg !10753

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !10732, metadata !DIExpression()), !dbg !10733
  %28 = shl nuw nsw i32 %27, 16, !dbg !10766
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10772
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !10773
  store volatile i32 %28, i32* %30, align 4, !dbg !10774
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10775
  %32 = icmp eq i32 %31, 0, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %27, metadata !10732, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10733
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !10778
  call void @llvm.dbg.value(metadata i32 %33, metadata !10732, metadata !DIExpression()), !dbg !10733
  call void @llvm.dbg.value(metadata i32 %27, metadata !10732, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10733
  br i1 %35, label %36, label %26, !dbg !10778, !llvm.loop !10779

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !10782
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !10783 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !10784
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10785
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10786
  store volatile i32 1, i32* %2, align 4, !dbg !10787
  br label %3, !dbg !10788

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10789
  %5 = and i32 %4, 2, !dbg !10790
  %6 = icmp eq i32 %5, 0, !dbg !10790
  br i1 %6, label %3, label %7, !dbg !10788, !llvm.loop !10791

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !10793
  br label %8, !dbg !10794

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !10795
  %10 = and i32 %9, 2, !dbg !10796
  %11 = icmp eq i32 %10, 0, !dbg !10796
  br i1 %11, label %12, label %8, !dbg !10794, !llvm.loop !10797

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !10799
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !10800
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !10801

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !10802
  %17 = and i32 %16, 1, !dbg !10803
  %18 = icmp eq i32 %17, 0, !dbg !10804
  br i1 %18, label %15, label %19, !dbg !10801, !llvm.loop !10805

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !10807
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !10808
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !10809

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !10810
  %24 = and i32 %23, 1, !dbg !10811
  %25 = icmp eq i32 %24, 0, !dbg !10812
  br i1 %25, label %22, label %26, !dbg !10809, !llvm.loop !10813

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !10815
  %28 = icmp eq i32 %27, 9507, !dbg !10817
  br i1 %28, label %29, label %37, !dbg !10818

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !10819
  %31 = and i32 %30, 15, !dbg !10822
  %32 = icmp eq i32 %31, 2, !dbg !10823
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10824
  %34 = and i32 %33, -128, !dbg !10824
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !10824
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10824
  br label %37, !dbg !10825

37:                                               ; preds = %29, %26
  ret void, !dbg !10825
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !10826 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !10829
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !10830
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !10831
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !10832
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !10833
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !10834
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !10835
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !10836
  ret i8 0, !dbg !10837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !10838 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !10839
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10840
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !10841
  store volatile i32 %1, i32* %3, align 4, !dbg !10842
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !10843
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !10844
  store volatile i32 %4, i32* %5, align 4, !dbg !10845
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !10846
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !10847
  store volatile i32 %6, i32* %7, align 4, !dbg !10848
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !10849
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !10850
  store volatile i32 %8, i32* %9, align 4, !dbg !10851
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !10852
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !10853
  store volatile i32 %10, i32* %11, align 4, !dbg !10854
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !10855
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !10856
  store volatile i32 %12, i32* %13, align 4, !dbg !10857
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !10858
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !10859
  store volatile i32 %14, i32* %15, align 4, !dbg !10860
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !10861
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !10862
  store volatile i32 %16, i32* %17, align 4, !dbg !10863
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !10864
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !10865
  store volatile i32 %18, i32* %19, align 4, !dbg !10866
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !10867
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !10868
  store volatile i32 %20, i32* %21, align 4, !dbg !10869
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !10870
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !10871
  store volatile i32 %22, i32* %23, align 4, !dbg !10872
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !10873
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !10874
  store volatile i32 %24, i32* %25, align 4, !dbg !10875
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !10876
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !10877
  store volatile i32 %26, i32* %27, align 4, !dbg !10878
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !10879
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10880
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !10881
  store volatile i32 806289408, i32* %29, align 4, !dbg !10882
  br label %30, !dbg !10883

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !10884
  %32 = and i32 %31, 128, !dbg !10885
  %33 = icmp eq i32 %32, 0, !dbg !10885
  br i1 %33, label %30, label %34, !dbg !10883, !llvm.loop !10886

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !10888
  br label %35, !dbg !10889

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !10890
  %37 = and i32 %36, 128, !dbg !10891
  %38 = icmp eq i32 %37, 0, !dbg !10891
  br i1 %38, label %39, label %35, !dbg !10889, !llvm.loop !10892

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !10894
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !10895
  ret i8 0, !dbg !10896
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !10897 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10898
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10899
  %3 = load volatile i32, i32* %2, align 4, !dbg !10899
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10900
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10901
  %5 = load volatile i32, i32* %4, align 4, !dbg !10901
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10902
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10903
  %7 = load volatile i32, i32* %6, align 4, !dbg !10903
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10904
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10905
  %9 = load volatile i32, i32* %8, align 4, !dbg !10905
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10906
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10907
  %11 = load volatile i32, i32* %10, align 4, !dbg !10907
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10908
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10909
  %13 = load volatile i32, i32* %12, align 4, !dbg !10909
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10910
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10911
  %15 = load volatile i32, i32* %14, align 4, !dbg !10911
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10912
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10913
  %17 = load volatile i32, i32* %16, align 4, !dbg !10913
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10914
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10915
  %19 = load volatile i32, i32* %18, align 4, !dbg !10915
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10916
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10917
  %21 = load volatile i32, i32* %20, align 4, !dbg !10917
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10918
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10919
  %23 = load volatile i32, i32* %22, align 4, !dbg !10919
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10920
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10921
  %25 = load volatile i32, i32* %24, align 4, !dbg !10921
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10922
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10923
  %27 = load volatile i32, i32* %26, align 4, !dbg !10923
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10924
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10925
  %29 = load volatile i32, i32* %28, align 4, !dbg !10925
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10926
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10927
  %31 = load volatile i32, i32* %30, align 4, !dbg !10927
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10928
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10929
  %33 = load volatile i32, i32* %32, align 4, !dbg !10929
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10930
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10931
  %35 = load volatile i32, i32* %34, align 4, !dbg !10931
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10932
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10933
  %37 = load volatile i32, i32* %36, align 4, !dbg !10933
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10934
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10935
  %39 = load volatile i32, i32* %38, align 4, !dbg !10935
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10936
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10937
  %41 = load volatile i32, i32* %40, align 4, !dbg !10937
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10938
  ret void, !dbg !10939
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !10940 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10941

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10942
  %5 = and i32 %4, 17, !dbg !10943
  %6 = icmp eq i32 %5, 17, !dbg !10944
  br i1 %6, label %7, label %3, !dbg !10941, !llvm.loop !10945

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10947
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10948
  store volatile i32 %8, i32* %9, align 4, !dbg !10949
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10950
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10951
  store volatile i32 %10, i32* %11, align 4, !dbg !10952
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10953
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10954
  store volatile i32 %12, i32* %13, align 4, !dbg !10955
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10956
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10957
  store volatile i32 %14, i32* %15, align 4, !dbg !10958
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10959
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10960
  store volatile i32 %16, i32* %17, align 4, !dbg !10961
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10962
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10963
  store volatile i32 %18, i32* %19, align 4, !dbg !10964
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10965
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10966
  store volatile i32 %20, i32* %21, align 4, !dbg !10967
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10968
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10969
  store volatile i32 %22, i32* %23, align 4, !dbg !10970
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10971
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10972
  store volatile i32 %24, i32* %25, align 4, !dbg !10973
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10974
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10975
  store volatile i32 %26, i32* %27, align 4, !dbg !10976
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10977
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10978
  store volatile i32 %28, i32* %29, align 4, !dbg !10979
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10980
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10981
  store volatile i32 %30, i32* %31, align 4, !dbg !10982
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10983
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10984
  store volatile i32 %32, i32* %33, align 4, !dbg !10985
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10986
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10987
  store volatile i32 %34, i32* %35, align 4, !dbg !10988
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10989
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10990
  store volatile i32 %36, i32* %37, align 4, !dbg !10991
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10992
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10993
  store volatile i32 %38, i32* %39, align 4, !dbg !10994
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10995
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10996
  store volatile i32 %40, i32* %41, align 4, !dbg !10997
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10998
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10999
  store volatile i32 %42, i32* %43, align 4, !dbg !11000
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !11001
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !11002
  store volatile i32 %44, i32* %45, align 4, !dbg !11003
  ret void, !dbg !11004
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !11005 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11006
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11007
  %3 = load volatile i32, i32* %2, align 4, !dbg !11007
  %4 = and i32 %3, -2097185, !dbg !11008
  store volatile i32 %4, i32* %2, align 4, !dbg !11009
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !11010
  store volatile i32 1, i32* %5, align 4, !dbg !11011
  br label %6, !dbg !11012

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !11013
  %8 = and i32 %7, 2, !dbg !11014
  %9 = icmp eq i32 %8, 0, !dbg !11014
  br i1 %9, label %6, label %10, !dbg !11012, !llvm.loop !11015

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !11017
  br label %11, !dbg !11018

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !11019
  %13 = and i32 %12, 2, !dbg !11020
  %14 = icmp eq i32 %13, 0, !dbg !11020
  br i1 %14, label %15, label %11, !dbg !11018, !llvm.loop !11021

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !11023
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11024
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !11025
  store volatile i32 806289408, i32* %17, align 4, !dbg !11026
  br label %18, !dbg !11027

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !11028
  %20 = and i32 %19, 128, !dbg !11029
  %21 = icmp eq i32 %20, 0, !dbg !11029
  br i1 %21, label %18, label %22, !dbg !11027, !llvm.loop !11030

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !11032
  br label %23, !dbg !11033

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !11034
  %25 = and i32 %24, 128, !dbg !11035
  %26 = icmp eq i32 %25, 0, !dbg !11035
  br i1 %26, label %27, label %23, !dbg !11033, !llvm.loop !11036

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !11038
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !11039
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !11040
  store volatile i32 %28, i32* %29, align 4, !dbg !11041
  ret void, !dbg !11042
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !11043 {
  tail call void @EMI_Setting_Save() #21, !dbg !11044
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !11045

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !11046
  %5 = and i32 %4, 17, !dbg !11047
  %6 = icmp eq i32 %5, 17, !dbg !11048
  br i1 %6, label %7, label %3, !dbg !11045, !llvm.loop !11049

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !11051
  %9 = or i32 %8, 1792, !dbg !11052
  store volatile i32 %9, i32* %2, align 4, !dbg !11053
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !11054
  store volatile i32 -261685248, i32* %10, align 4, !dbg !11055
  br label %11, !dbg !11056

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !11057
  %13 = and i32 %12, 1, !dbg !11058
  %14 = icmp eq i32 %13, 0, !dbg !11059
  br i1 %14, label %11, label %15, !dbg !11056, !llvm.loop !11060

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !11062
  store volatile i32 0, i32* %16, align 4, !dbg !11063
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !11064

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !11065
  %20 = and i32 %19, 16, !dbg !11066
  %21 = icmp eq i32 %20, 0, !dbg !11066
  br i1 %21, label %18, label %22, !dbg !11064, !llvm.loop !11067

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11069
  %24 = load volatile i32, i32* %23, align 4, !dbg !11069
  %25 = or i32 %24, 2097184, !dbg !11070
  store volatile i32 %25, i32* %23, align 4, !dbg !11071
  ret void, !dbg !11072
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !11073 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11078, metadata !DIExpression()), !dbg !11080
  %3 = bitcast i32* %2 to i8*, !dbg !11081
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11081
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11079, metadata !DIExpression()), !dbg !11082
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !11083

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11084
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !11087
  store volatile i32 0, i32* %6, align 4, !dbg !11088
  store volatile i32 806289408, i32* %6, align 4, !dbg !11089
  br label %7, !dbg !11090

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !11091
  %9 = and i32 %8, 128, !dbg !11092
  %10 = icmp eq i32 %9, 0, !dbg !11092
  br i1 %10, label %7, label %11, !dbg !11090, !llvm.loop !11093

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !11095
  br label %12, !dbg !11096

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !11097
  %14 = and i32 %13, 128, !dbg !11098
  %15 = icmp eq i32 %14, 0, !dbg !11098
  br i1 %15, label %16, label %12, !dbg !11096, !llvm.loop !11099

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !11101
  store volatile i32 0, i32* %2, align 4, !dbg !11102
  %17 = load volatile i32, i32* %2, align 4, !dbg !11104
  %18 = icmp ult i32 %17, 255, !dbg !11106
  br i1 %18, label %19, label %25, !dbg !11107

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !11108
  %21 = add i32 %20, 1, !dbg !11108
  store volatile i32 %21, i32* %2, align 4, !dbg !11108
  %22 = load volatile i32, i32* %2, align 4, !dbg !11104
  %23 = icmp ult i32 %22, 255, !dbg !11106
  br i1 %23, label %19, label %25, !dbg !11107, !llvm.loop !11109

24:                                               ; preds = %1
  br label %25, !dbg !11111

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !11080
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11114
  ret i32 %26, !dbg !11114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !11115 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11116
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11117
  %3 = load volatile i32, i32* %2, align 4, !dbg !11117
  %4 = or i32 %3, 1792, !dbg !11118
  store volatile i32 %4, i32* %2, align 4, !dbg !11119
  ret void, !dbg !11120
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !11121 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11122
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11123
  %3 = load volatile i32, i32* %2, align 4, !dbg !11123
  %4 = and i32 %3, -1793, !dbg !11124
  store volatile i32 %4, i32* %2, align 4, !dbg !11125
  ret void, !dbg !11126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !11127 {
  ret i1 false, !dbg !11128
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !11129 {
  ret i1 false, !dbg !11130
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !11131 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !11132
  ret void, !dbg !11135
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !11136 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !11137
  ret void, !dbg !11140
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !11141 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !11142
  ret void, !dbg !11145
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !11146 {
  tail call void @peri_26m_dcxo() #20, !dbg !11147
  ret void, !dbg !11150
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !11151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11155, metadata !DIExpression()), !dbg !11156
  %2 = trunc i32 %0 to i8, !dbg !11157
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #20, !dbg !11158
  ret i32 %0, !dbg !11159
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !11160 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !11161
  tail call void @SystemCoreClockUpdate() #20, !dbg !11162
  tail call fastcc void @prvSetupHardware() #21, !dbg !11163
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !11164, !srcloc !11167
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !11168, !srcloc !11171
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.167, i32 0, i32 0)) #20, !dbg !11172
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.168, i32 0, i32 0)) #20, !dbg !11173
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2.169, i32 0, i32 0)) #20, !dbg !11174
  %4 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.167, i32 0, i32 0)) #20, !dbg !11175
  %5 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3.170, i32 0, i32 0)) #20, !dbg !11176
  br label %6, !dbg !11177

6:                                                ; preds = %0, %6
  br label %6, !dbg !11177, !llvm.loop !11178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !11180 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !11181
  ret void, !dbg !11182
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !11183 {
  tail call fastcc void @plain_log_uart_init() #21, !dbg !11184
  %1 = tail call i32 @hal_flash_init() #20, !dbg !11185
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !11186
  ret void, !dbg !11187
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !11188 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !11198
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11198
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !11190, metadata !DIExpression()), !dbg !11199
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !11200
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !11201
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !11202
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !11203
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !11204
  store i32 9, i32* %7, align 4, !dbg !11205
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !11206
  store i32 3, i32* %8, align 4, !dbg !11207
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !11208
  store i32 0, i32* %9, align 4, !dbg !11209
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !11210
  store i32 0, i32* %10, align 4, !dbg !11211
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !11212
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11213
  ret void, !dbg !11213
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !11214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11216, metadata !DIExpression()), !dbg !11217
  ret i32 -1, !dbg !11218
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @_stat(i8* nocapture noundef readnone %0, %struct.stat* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !11219 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11269, metadata !DIExpression()), !dbg !11271
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !11270, metadata !DIExpression()), !dbg !11271
  %3 = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 2, !dbg !11272
  store i32 8192, i32* %3, align 4, !dbg !11273
  ret i32 0, !dbg !11274
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !11275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11279, metadata !DIExpression()), !dbg !11281
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !11280, metadata !DIExpression()), !dbg !11281
  %3 = getelementptr inbounds %struct.stat, %struct.stat* %1, i32 0, i32 2, !dbg !11282
  store i32 8192, i32* %3, align 4, !dbg !11283
  ret i32 0, !dbg !11284
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !11285 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11287, metadata !DIExpression()), !dbg !11288
  ret i32 1, !dbg !11289
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11290 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11294, metadata !DIExpression()), !dbg !11297
  call void @llvm.dbg.value(metadata i32 %1, metadata !11295, metadata !DIExpression()), !dbg !11297
  call void @llvm.dbg.value(metadata i32 %2, metadata !11296, metadata !DIExpression()), !dbg !11297
  ret i32 0, !dbg !11298
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11299 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11303, metadata !DIExpression()), !dbg !11306
  call void @llvm.dbg.value(metadata i32 %1, metadata !11304, metadata !DIExpression()), !dbg !11306
  call void @llvm.dbg.value(metadata i32 %2, metadata !11305, metadata !DIExpression()), !dbg !11306
  ret i32 -1, !dbg !11307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef writeonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !11308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11312, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i8* %1, metadata !11313, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i32 %2, metadata !11314, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i32 0, metadata !11315, metadata !DIExpression()), !dbg !11316
  %4 = icmp sgt i32 %2, 0, !dbg !11317
  br i1 %4, label %5, label %13, !dbg !11320

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %11, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %10, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11315, metadata !DIExpression()), !dbg !11316
  call void @llvm.dbg.value(metadata i8* %7, metadata !11313, metadata !DIExpression()), !dbg !11316
  %8 = tail call i32 @__io_getchar() #20, !dbg !11321
  %9 = trunc i32 %8 to i8, !dbg !11321
  %10 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !11323
  call void @llvm.dbg.value(metadata i8* %10, metadata !11313, metadata !DIExpression()), !dbg !11316
  store i8 %9, i8* %7, align 1, !dbg !11324
  %11 = add nuw nsw i32 %6, 1, !dbg !11325
  call void @llvm.dbg.value(metadata i32 %11, metadata !11315, metadata !DIExpression()), !dbg !11316
  %12 = icmp eq i32 %11, %2, !dbg !11317
  br i1 %12, label %13, label %5, !dbg !11320, !llvm.loop !11326

13:                                               ; preds = %5, %3
  ret i32 %2, !dbg !11328
}

; Function Attrs: optsize
declare extern_weak dso_local i32 @__io_getchar() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !11329 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11331, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i8* %1, metadata !11332, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 %2, metadata !11333, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i32 0, metadata !11334, metadata !DIExpression()), !dbg !11335
  %4 = icmp sgt i32 %2, 0, !dbg !11336
  br i1 %4, label %5, label %14, !dbg !11339

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11334, metadata !DIExpression()), !dbg !11335
  call void @llvm.dbg.value(metadata i8* %7, metadata !11332, metadata !DIExpression()), !dbg !11335
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !11340
  call void @llvm.dbg.value(metadata i8* %8, metadata !11332, metadata !DIExpression()), !dbg !11335
  %9 = load i8, i8* %7, align 1, !dbg !11342
  %10 = zext i8 %9 to i32, !dbg !11342
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !11343
  %12 = add nuw nsw i32 %6, 1, !dbg !11344
  call void @llvm.dbg.value(metadata i32 %12, metadata !11334, metadata !DIExpression()), !dbg !11335
  %13 = icmp eq i32 %12, %2, !dbg !11336
  br i1 %13, label %14, label %5, !dbg !11339, !llvm.loop !11345

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !11347
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2247 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2443, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.value(metadata i32 %1, metadata !2444, metadata !DIExpression()), !dbg !11348
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !11349, !srcloc !11350
  call void @llvm.dbg.value(metadata i8* %3, metadata !2446, metadata !DIExpression()), !dbg !11348
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !11351
  %5 = icmp eq i8* %4, null, !dbg !11353
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !11354
  call void @llvm.dbg.value(metadata i8* %6, metadata !2445, metadata !DIExpression()), !dbg !11348
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !11355
  %8 = icmp ult i8* %3, %7, !dbg !11357
  %9 = xor i1 %8, true, !dbg !11358
  %10 = or i1 %5, %9, !dbg !11358
  br i1 %10, label %11, label %13, !dbg !11358

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !11359
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !11358
  br label %13, !dbg !11358

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !11359
  ret i8* %14, !dbg !11358
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @_execve(i8* nocapture noundef readnone %0, i8** nocapture noundef readnone %1, i8** nocapture noundef readnone %2) local_unnamed_addr #6 !dbg !11360 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11365, metadata !DIExpression()), !dbg !11368
  call void @llvm.dbg.value(metadata i8** %1, metadata !11366, metadata !DIExpression()), !dbg !11368
  call void @llvm.dbg.value(metadata i8** %2, metadata !11367, metadata !DIExpression()), !dbg !11368
  store i32 134, i32* @errno, align 4, !dbg !11369
  ret i32 -1, !dbg !11370
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @_fork() local_unnamed_addr #6 !dbg !11371 {
  store i32 134, i32* @errno, align 4, !dbg !11372
  ret i32 -1, !dbg !11373
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @_getpid() local_unnamed_addr #6 !dbg !11374 {
  store i32 134, i32* @errno, align 4, !dbg !11375
  ret i32 -1, !dbg !11376
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #6 !dbg !11377 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11381, metadata !DIExpression()), !dbg !11383
  call void @llvm.dbg.value(metadata i32 %1, metadata !11382, metadata !DIExpression()), !dbg !11383
  store i32 134, i32* @errno, align 4, !dbg !11384
  ret i32 -1, !dbg !11385
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @_wait(i32* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !11386 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !11391, metadata !DIExpression()), !dbg !11392
  store i32 134, i32* @errno, align 4, !dbg !11393
  ret i32 -1, !dbg !11394
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #6 !dbg !11395 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11397, metadata !DIExpression()), !dbg !11398
  store i32 134, i32* @errno, align 4, !dbg !11399
  ret i32 -1, !dbg !11400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @_link(i8* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #6 !dbg !11401 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11405, metadata !DIExpression()), !dbg !11407
  call void @llvm.dbg.value(metadata i8* %1, metadata !11406, metadata !DIExpression()), !dbg !11407
  store i32 31, i32* @errno, align 4, !dbg !11408
  ret i32 -1, !dbg !11409
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @_unlink(i8* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !11410 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11414, metadata !DIExpression()), !dbg !11415
  store i32 31, i32* @errno, align 4, !dbg !11416
  ret i32 -1, !dbg !11417
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_gettimeofday(%struct.timespec* nocapture noundef readnone %0, i8* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !11418 {
  call void @llvm.dbg.value(metadata %struct.timespec* %0, metadata !11429, metadata !DIExpression()), !dbg !11431
  call void @llvm.dbg.value(metadata i8* %1, metadata !11430, metadata !DIExpression()), !dbg !11431
  ret i32 -1, !dbg !11432
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @_times(%struct.hal_uart_config_t* nocapture noundef readnone %0) local_unnamed_addr #6 !dbg !11433 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !11446, metadata !DIExpression()), !dbg !11447
  store i32 134, i32* @errno, align 4, !dbg !11448
  ret i32 -1, !dbg !11449
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !11450 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11452, metadata !DIExpression()), !dbg !11454
  %2 = add i32 %0, -1, !dbg !11455
  %3 = icmp ugt i32 %2, 16777215, !dbg !11457
  br i1 %3, label %8, label %4, !dbg !11458

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11459
  call void @llvm.dbg.value(metadata i32 %5, metadata !11453, metadata !DIExpression()), !dbg !11454
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11460
  %7 = and i32 %6, -4, !dbg !11460
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11460
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11461
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11462
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11463
  br label %8, !dbg !11464

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !11454
  ret i32 %9, !dbg !11465
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !11466 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !11467
  ret void, !dbg !11468
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !11469 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !11470
  ret i32 %1, !dbg !11471
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !11472 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !11475
  %2 = lshr i32 %1, 3, !dbg !11476
  %3 = and i32 %2, 15, !dbg !11476
  call void @llvm.dbg.value(metadata i32 %3, metadata !11474, metadata !DIExpression()), !dbg !11477
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !11478

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !11479

5:                                                ; preds = %0, %0
  br label %9, !dbg !11481

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !11482
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11483
  br label %15, !dbg !11485

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !11482
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11483
  %12 = and i32 %11, 1024, !dbg !11486
  %13 = icmp eq i32 %12, 0, !dbg !11486
  br i1 %13, label %15, label %14, !dbg !11485

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !11487
  br label %15, !dbg !11489

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !11490
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11491 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11492
  %2 = or i32 %1, 15728640, !dbg !11492
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11492
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !11493
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11494
  %4 = or i32 %3, 458752, !dbg !11494
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11494
  ret void, !dbg !11495
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !11496 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11497
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11498
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11499
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !11500
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !11501
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11502
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11503
  ret void, !dbg !11504
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !94, !170, !391, !671, !2571, !871, !965, !2575, !1056, !1155, !1480, !2621, !1568, !1577, !1935, !1996, !2623, !2069, !2235, !2625, !2438, !2449, !2559}
!llvm.ident = !{!2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628, !2628}
!llvm.module.flags = !{!2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gpt_lock_sleep_name", scope: !94, file: !95, line: 46, type: !164, isLocal: true, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !150, globals: !155, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!96 = !{!97, !105, !115, !119, !123, !142, !146}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 387, baseType: !7, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!99 = !{!100, !101, !102, !103, !104}
!100 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!101 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!102 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!103 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!104 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!105 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 846, baseType: !18, size: 32, elements: !107)
!106 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!107 = !{!108, !109, !110, !111, !112, !113, !114}
!108 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!109 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!110 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!111 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!112 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!113 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!114 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 397, baseType: !18, size: 32, elements: !116)
!116 = !{!117, !118}
!117 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!118 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!119 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 857, baseType: !18, size: 32, elements: !120)
!120 = !{!121, !122}
!121 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!122 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 87, baseType: !18, size: 32, elements: !125)
!124 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!125 = !{!126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141}
!126 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!127 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!128 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!129 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!130 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!131 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!132 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!133 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!134 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!135 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!136 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!137 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!138 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!139 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!140 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!141 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!142 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 380, baseType: !18, size: 32, elements: !143)
!143 = !{!144, !145}
!144 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!145 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 82, baseType: !18, size: 32, elements: !147)
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!149 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!150 = !{!61, !88, !151}
!151 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !98, line: 371, baseType: !152)
!152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 32)
!153 = !DISubroutineType(types: !154)
!154 = !{null, !88}
!155 = !{!156, !92}
!156 = !DIGlobalVariableExpression(var: !157, expr: !DIExpression())
!157 = distinct !DIGlobalVariable(name: "gpt_lock_sleep_handle", scope: !94, file: !95, line: 47, type: !158, isLocal: true, isDefinition: true)
!158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 48, elements: !162)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !160)
!160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !161)
!161 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!162 = !{!163}
!163 = !DISubrange(count: 6)
!164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !165, size: 192, elements: !162)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 32)
!166 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!167 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!168 = !DIGlobalVariableExpression(var: !169, expr: !DIExpression())
!169 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !170, file: !171, line: 48, type: !387, isLocal: false, isDefinition: true)
!170 = distinct !DICompileUnit(language: DW_LANG_C99, file: !171, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !172, retainedTypes: !315, globals: !330, splitDebugInlining: false, nameTableKind: None)
!171 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!172 = !{!173, !146, !232, !238, !105, !142, !115}
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 1170, baseType: !18, size: 32, elements: !174)
!174 = !{!175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231}
!175 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!176 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!177 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!178 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!179 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!180 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!181 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!182 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!183 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!184 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!185 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!186 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!187 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!188 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!189 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!190 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!191 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!192 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!193 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!194 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!195 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!196 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!197 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!198 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!199 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!200 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!201 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!202 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!203 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!204 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!205 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!206 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!207 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!208 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!209 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!210 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!211 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!212 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!213 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!214 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!215 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!216 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!217 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!218 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!219 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!220 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!221 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!222 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!223 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!224 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!225 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!226 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!227 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!228 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!229 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!230 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!231 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!232 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !124, line: 75, baseType: !18, size: 32, elements: !233)
!233 = !{!234, !235, !236, !237}
!234 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!235 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!236 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!237 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !239)
!239 = !{!240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314}
!240 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!241 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!242 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!243 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!244 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!245 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!246 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!247 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!248 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!249 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!250 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!251 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!252 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!253 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!254 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!255 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!256 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!257 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!258 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!259 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!260 = !DIEnumerator(name: "KP_IRQn", value: 10)
!261 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!262 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!263 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!264 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!265 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!266 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!267 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!268 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!269 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!270 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!271 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!272 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!273 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!274 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!275 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!276 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!277 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!278 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!279 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!280 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!281 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!282 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!283 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!284 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!285 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!286 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!287 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!288 = !DIEnumerator(name: "SF_IRQn", value: 38)
!289 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!290 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!291 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!292 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!293 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!294 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!295 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!296 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!297 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!298 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!299 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!300 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!301 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!302 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!303 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!304 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!305 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!306 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!307 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!308 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!309 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!310 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!311 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!312 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!313 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!314 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!315 = !{!61, !316, !88}
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 32)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !318)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !319)
!319 = !{!320, !321, !322, !323, !325, !326, !327, !328, !329}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !318, file: !56, line: 1263, baseType: !60, size: 32)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !318, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !318, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !318, file: !56, line: 1266, baseType: !324, size: 32, offset: 96)
!324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !318, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !318, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !318, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !318, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !318, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!330 = !{!168, !331, !340, !346, !362, !385}
!331 = !DIGlobalVariableExpression(var: !332, expr: !DIExpression())
!332 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !170, file: !171, line: 49, type: !333, isLocal: false, isDefinition: true)
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 32)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !335)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !336)
!336 = !{!337, !338, !339}
!337 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !335, file: !56, line: 1257, baseType: !324, size: 32)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !335, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !335, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!340 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression())
!341 = distinct !DIGlobalVariable(name: "flag", scope: !342, file: !171, line: 88, type: !91, isLocal: true, isDefinition: true)
!342 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !171, file: !171, line: 86, type: !343, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !345)
!343 = !DISubroutineType(types: !344)
!344 = !{null}
!345 = !{}
!346 = !DIGlobalVariableExpression(var: !347, expr: !DIExpression())
!347 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !170, file: !171, line: 51, type: !348, isLocal: false, isDefinition: true)
!348 = !DICompositeType(tag: DW_TAG_array_type, baseType: !349, size: 768, elements: !162)
!349 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !124, line: 116, baseType: !350)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 111, size: 128, elements: !351)
!351 = !{!352, !354, !360, !361}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !350, file: !124, line: 112, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !98, line: 400, baseType: !115)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !350, file: !124, line: 113, baseType: !355, size: 64, offset: 32)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !124, line: 109, baseType: !356)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 106, size: 64, elements: !357)
!357 = !{!358, !359}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !356, file: !124, line: 107, baseType: !151, size: 32)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !356, file: !124, line: 108, baseType: !88, size: 32, offset: 32)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !350, file: !124, line: 114, baseType: !91, size: 8, offset: 96)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !350, file: !124, line: 115, baseType: !91, size: 8, offset: 104)
!362 = !DIGlobalVariableExpression(var: !363, expr: !DIExpression())
!363 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !170, file: !171, line: 52, type: !364, isLocal: false, isDefinition: true)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !124, line: 134, baseType: !365)
!365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 125, size: 4256, elements: !366)
!366 = !{!367, !378, !379, !380, !381, !382, !383, !384}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !365, file: !124, line: 126, baseType: !368, size: 4096)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !369, size: 4096, elements: !376)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !124, line: 123, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !124, line: 118, size: 128, elements: !371)
!371 = !{!372, !373, !374, !375}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !370, file: !124, line: 119, baseType: !355, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !370, file: !124, line: 120, baseType: !61, size: 32, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !370, file: !124, line: 121, baseType: !91, size: 8, offset: 96)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !370, file: !124, line: 122, baseType: !91, size: 8, offset: 104)
!376 = !{!377}
!377 = !DISubrange(count: 32)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !365, file: !124, line: 127, baseType: !61, size: 32, offset: 4096)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !365, file: !124, line: 128, baseType: !61, size: 32, offset: 4128)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !365, file: !124, line: 129, baseType: !61, size: 32, offset: 4160)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !365, file: !124, line: 130, baseType: !61, size: 32, offset: 4192)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !365, file: !124, line: 131, baseType: !91, size: 8, offset: 4224)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !365, file: !124, line: 132, baseType: !91, size: 8, offset: 4232)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !365, file: !124, line: 133, baseType: !91, size: 8, offset: 4240)
!385 = !DIGlobalVariableExpression(var: !386, expr: !DIExpression())
!386 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !170, file: !171, line: 53, type: !61, isLocal: false, isDefinition: true)
!387 = !DICompositeType(tag: DW_TAG_array_type, baseType: !316, size: 192, elements: !162)
!388 = !DIGlobalVariableExpression(var: !341, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!389 = !DIGlobalVariableExpression(var: !390, expr: !DIExpression())
!390 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !391, file: !392, line: 64, type: !492, isLocal: false, isDefinition: true)
!391 = distinct !DICompileUnit(language: DW_LANG_C99, file: !392, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !393, retainedTypes: !487, globals: !491, splitDebugInlining: false, nameTableKind: None)
!392 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!393 = !{!394, !446, !453, !457, !463, !467, !476, !481}
!394 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 339, baseType: !18, size: 32, elements: !395)
!395 = !{!396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445}
!396 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!397 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!398 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!399 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!400 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!401 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!402 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!403 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!404 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!405 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!406 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!407 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!408 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!409 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!410 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!411 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!412 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!413 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!414 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!415 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!416 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!417 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!418 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!419 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!420 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!421 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!422 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!423 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!424 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!425 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!426 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!427 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!428 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!429 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!430 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!431 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!432 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!433 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!434 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!435 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!436 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!437 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!438 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!439 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!440 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!441 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!442 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!443 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!444 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!445 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!446 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 224, baseType: !7, size: 32, elements: !448)
!447 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!448 = !{!449, !450, !451, !452}
!449 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!450 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!451 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!452 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!453 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 210, baseType: !18, size: 32, elements: !454)
!454 = !{!455, !456}
!455 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!456 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!457 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 233, baseType: !7, size: 32, elements: !458)
!458 = !{!459, !460, !461, !462}
!459 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!460 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!461 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!462 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!463 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 217, baseType: !18, size: 32, elements: !464)
!464 = !{!465, !466}
!465 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!466 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!467 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 415, baseType: !18, size: 32, elements: !468)
!468 = !{!469, !470, !471, !472, !473, !474, !475}
!469 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!470 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!471 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!472 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!473 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!474 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!475 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!476 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 427, baseType: !18, size: 32, elements: !477)
!477 = !{!478, !479, !480}
!478 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!479 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!480 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!481 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 242, baseType: !18, size: 32, elements: !482)
!482 = !{!483, !484, !485, !486}
!483 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!484 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!485 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!486 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!487 = !{!88, !488, !489, !490}
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !447, line: 213, baseType: !453)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !447, line: 220, baseType: !463)
!490 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !447, line: 247, baseType: !481)
!491 = !{!389}
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 32)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !495)
!495 = !{!496, !510, !514, !523, !524, !533, !534, !543, !544, !554, !555, !564, !565, !574, !575, !584, !585, !594, !598, !607, !608, !617, !618, !627, !636, !637, !648, !652, !661, !662}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !494, file: !56, line: 1523, baseType: !497, size: 256)
!497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !498, size: 256, elements: !508)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !499)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !500)
!500 = !{!501, !502, !503, !504}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !499, file: !56, line: 1396, baseType: !60, size: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !499, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !499, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !499, file: !56, line: 1399, baseType: !505, size: 32, offset: 96)
!505 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 32, elements: !506)
!506 = !{!507}
!507 = !DISubrange(count: 4)
!508 = !{!509}
!509 = !DISubrange(count: 2)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !494, file: !56, line: 1524, baseType: !511, size: 1792, offset: 256)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1792, elements: !512)
!512 = !{!513}
!513 = !DISubrange(count: 224)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !494, file: !56, line: 1525, baseType: !515, size: 256, offset: 2048)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !516, size: 256, elements: !508)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !518)
!518 = !{!519, !520, !521, !522}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !517, file: !56, line: 1405, baseType: !60, size: 32)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !517, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !517, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !517, file: !56, line: 1408, baseType: !505, size: 32, offset: 96)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !494, file: !56, line: 1526, baseType: !511, size: 1792, offset: 2304)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !494, file: !56, line: 1527, baseType: !525, size: 256, offset: 4096)
!525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !526, size: 256, elements: !508)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !527)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !528)
!528 = !{!529, !530, !531, !532}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !527, file: !56, line: 1413, baseType: !60, size: 32)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !527, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !527, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !527, file: !56, line: 1416, baseType: !505, size: 32, offset: 96)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !494, file: !56, line: 1528, baseType: !511, size: 1792, offset: 4352)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !494, file: !56, line: 1529, baseType: !535, size: 256, offset: 6144)
!535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !536, size: 256, elements: !508)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !538)
!538 = !{!539, !540, !541, !542}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !537, file: !56, line: 1422, baseType: !60, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !537, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !537, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !537, file: !56, line: 1425, baseType: !505, size: 32, offset: 96)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !494, file: !56, line: 1530, baseType: !511, size: 1792, offset: 6400)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !494, file: !56, line: 1531, baseType: !545, size: 256, offset: 8192)
!545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !546, size: 256, elements: !508)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !547)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !548)
!548 = !{!549, !550}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !547, file: !56, line: 1430, baseType: !60, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !547, file: !56, line: 1431, baseType: !551, size: 96, offset: 32)
!551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 96, elements: !552)
!552 = !{!553}
!553 = !DISubrange(count: 12)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !494, file: !56, line: 1532, baseType: !511, size: 1792, offset: 8448)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !494, file: !56, line: 1533, baseType: !556, size: 256, offset: 10240)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 256, elements: !508)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !559)
!559 = !{!560, !561, !562, !563}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !558, file: !56, line: 1436, baseType: !60, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !558, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !558, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !558, file: !56, line: 1439, baseType: !505, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !494, file: !56, line: 1534, baseType: !511, size: 1792, offset: 10496)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !494, file: !56, line: 1535, baseType: !566, size: 256, offset: 12288)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 256, elements: !508)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !569)
!569 = !{!570, !571, !572, !573}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !568, file: !56, line: 1444, baseType: !60, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !568, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !568, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !568, file: !56, line: 1447, baseType: !505, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !494, file: !56, line: 1536, baseType: !511, size: 1792, offset: 12544)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !494, file: !56, line: 1537, baseType: !576, size: 256, offset: 14336)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 256, elements: !508)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !579)
!579 = !{!580, !581, !582, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !578, file: !56, line: 1451, baseType: !60, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !578, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !578, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !578, file: !56, line: 1454, baseType: !505, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !494, file: !56, line: 1538, baseType: !511, size: 1792, offset: 14592)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !494, file: !56, line: 1539, baseType: !586, size: 512, offset: 16384)
!586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !587, size: 512, elements: !506)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !588)
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !589)
!589 = !{!590, !591, !592, !593}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !588, file: !56, line: 1459, baseType: !60, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !588, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !588, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !588, file: !56, line: 1462, baseType: !505, size: 32, offset: 96)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !494, file: !56, line: 1540, baseType: !595, size: 1536, offset: 16896)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1536, elements: !596)
!596 = !{!597}
!597 = !DISubrange(count: 192)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !494, file: !56, line: 1541, baseType: !599, size: 256, offset: 18432)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !600, size: 256, elements: !508)
!600 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !601)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !602)
!602 = !{!603, !604, !605, !606}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !601, file: !56, line: 1467, baseType: !60, size: 32)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !601, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !601, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !601, file: !56, line: 1470, baseType: !505, size: 32, offset: 96)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !494, file: !56, line: 1542, baseType: !511, size: 1792, offset: 18688)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !494, file: !56, line: 1543, baseType: !609, size: 256, offset: 20480)
!609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !610, size: 256, elements: !508)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !612)
!612 = !{!613, !614, !615, !616}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !611, file: !56, line: 1476, baseType: !60, size: 32)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !611, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !611, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !611, file: !56, line: 1479, baseType: !505, size: 32, offset: 96)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !494, file: !56, line: 1544, baseType: !511, size: 1792, offset: 20736)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !494, file: !56, line: 1545, baseType: !619, size: 256, offset: 22528)
!619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 256, elements: !508)
!620 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !621)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !622)
!622 = !{!623, !624, !625, !626}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !621, file: !56, line: 1485, baseType: !60, size: 32)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !621, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !621, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !621, file: !56, line: 1488, baseType: !505, size: 32, offset: 96)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !494, file: !56, line: 1546, baseType: !628, size: 256, offset: 22784)
!628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !629, size: 256, elements: !508)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !630)
!630 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !631)
!631 = !{!632, !633, !634, !635}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !630, file: !56, line: 1493, baseType: !60, size: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !630, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !630, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !630, file: !56, line: 1496, baseType: !505, size: 32, offset: 96)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !494, file: !56, line: 1547, baseType: !595, size: 1536, offset: 23040)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !494, file: !56, line: 1548, baseType: !638, size: 896, offset: 24576)
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !639, size: 896, elements: !646)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !640)
!640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !641)
!641 = !{!642, !643, !644, !645}
!642 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !640, file: !56, line: 1501, baseType: !60, size: 32)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !640, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !640, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !640, file: !56, line: 1504, baseType: !505, size: 32, offset: 96)
!646 = !{!647}
!647 = !DISubrange(count: 7)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !494, file: !56, line: 1549, baseType: !649, size: 1152, offset: 25472)
!649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1152, elements: !650)
!650 = !{!651}
!651 = !DISubrange(count: 144)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !494, file: !56, line: 1550, baseType: !653, size: 512, offset: 26624)
!653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !654, size: 512, elements: !506)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !656)
!656 = !{!657, !658, !659, !660}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !655, file: !56, line: 1509, baseType: !60, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !655, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !655, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !655, file: !56, line: 1512, baseType: !505, size: 32, offset: 96)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !494, file: !56, line: 1551, baseType: !595, size: 1536, offset: 27136)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !494, file: !56, line: 1552, baseType: !663, size: 768, offset: 28672)
!663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !664, size: 768, elements: !162)
!664 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !665)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !666)
!666 = !{!667, !668}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !665, file: !56, line: 1517, baseType: !60, size: 32)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !665, file: !56, line: 1518, baseType: !551, size: 96, offset: 32)
!669 = !DIGlobalVariableExpression(var: !670, expr: !DIExpression())
!670 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !671, file: !672, line: 101, type: !864, isLocal: true, isDefinition: true)
!671 = distinct !DICompileUnit(language: DW_LANG_C99, file: !672, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !673, retainedTypes: !775, globals: !785, splitDebugInlining: false, nameTableKind: None)
!672 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!673 = !{!674, !681, !696, !702, !708, !713, !718, !725, !741, !747, !751, !756, !763, !771}
!674 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !106, line: 180, baseType: !18, size: 32, elements: !675)
!675 = !{!676, !677, !678, !679, !680}
!676 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!677 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!678 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!679 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!680 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!681 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !682, line: 189, baseType: !18, size: 32, elements: !683)
!682 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!683 = !{!684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695}
!684 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!685 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!686 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!687 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!688 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!689 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!690 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!691 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!692 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!693 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!694 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!695 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!696 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 355, baseType: !7, size: 32, elements: !698)
!697 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!698 = !{!699, !700, !701}
!699 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!700 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!701 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!702 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !682, line: 206, baseType: !7, size: 32, elements: !703)
!703 = !{!704, !705, !706, !707}
!704 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!705 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!706 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!707 = !DIEnumerator(name: "VDMA_OK", value: 0)
!708 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !672, line: 65, baseType: !18, size: 32, elements: !709)
!709 = !{!710, !711, !712}
!710 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!711 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!712 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!713 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !672, line: 77, baseType: !18, size: 32, elements: !714)
!714 = !{!715, !716, !717}
!715 = !DIEnumerator(name: "UART_FLOWCONTROL_NONE", value: 0)
!716 = !DIEnumerator(name: "UART_FLOWCONTROL_SOFTWARE", value: 1)
!717 = !DIEnumerator(name: "UART_FLOWCONTROL_HARDWARE", value: 2)
!718 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 345, baseType: !7, size: 32, elements: !719)
!719 = !{!720, !721, !722, !723, !724}
!720 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!721 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!722 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!723 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!724 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!725 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 302, baseType: !18, size: 32, elements: !726)
!726 = !{!727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740}
!727 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!728 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!729 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!730 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!731 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!732 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!733 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!734 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!735 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!736 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!737 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!738 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!739 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!740 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!741 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 321, baseType: !18, size: 32, elements: !742)
!742 = !{!743, !744, !745, !746}
!743 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!744 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!745 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!746 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!747 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 330, baseType: !18, size: 32, elements: !748)
!748 = !{!749, !750}
!749 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!750 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!751 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !697, line: 337, baseType: !18, size: 32, elements: !752)
!752 = !{!753, !754, !755}
!753 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!754 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!755 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!756 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !757, line: 101, baseType: !7, size: 32, elements: !758)
!757 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!758 = !{!759, !760, !761, !762}
!759 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!760 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!761 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!762 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!763 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !764, line: 152, baseType: !7, size: 32, elements: !765)
!764 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!765 = !{!766, !767, !768, !769, !770}
!766 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!767 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!768 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!769 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!770 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!771 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !682, line: 222, baseType: !7, size: 32, elements: !772)
!772 = !{!773, !774}
!773 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!774 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!775 = !{!88, !776, !61, !777}
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 32)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !779, line: 96, baseType: !780)
!779 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!780 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !779, line: 93, size: 64, elements: !781)
!781 = !{!782, !783}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !780, file: !779, line: 94, baseType: !91, size: 8)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !780, file: !779, line: 95, baseType: !784, size: 32, offset: 32)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !106, line: 186, baseType: !674)
!785 = !{!786, !789, !791, !793, !795, !799, !808, !822, !669, !824, !837, !842, !856, !862}
!786 = !DIGlobalVariableExpression(var: !787, expr: !DIExpression())
!787 = distinct !DIGlobalVariable(name: "g_uart_frist_send_complete_interrupt", scope: !671, file: !672, line: 92, type: !788, isLocal: true, isDefinition: true)
!788 = !DICompositeType(tag: DW_TAG_array_type, baseType: !91, size: 32, elements: !506)
!789 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression())
!790 = distinct !DIGlobalVariable(name: "g_uart_restore_init", scope: !671, file: !672, line: 93, type: !91, isLocal: true, isDefinition: true)
!791 = !DIGlobalVariableExpression(var: !792, expr: !DIExpression())
!792 = distinct !DIGlobalVariable(name: "g_uart_send_lock_status", scope: !671, file: !672, line: 94, type: !788, isLocal: true, isDefinition: true)
!793 = !DIGlobalVariableExpression(var: !794, expr: !DIExpression())
!794 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler", scope: !671, file: !672, line: 95, type: !505, isLocal: true, isDefinition: true)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "g_uart_flowcontrol_status", scope: !671, file: !672, line: 96, type: !797, isLocal: true, isDefinition: true)
!797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 128, elements: !506)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_flowcontrol_t", file: !672, line: 81, baseType: !713)
!799 = !DIGlobalVariableExpression(var: !800, expr: !DIExpression())
!800 = distinct !DIGlobalVariable(name: "g_uart_sw_flowcontrol_config", scope: !671, file: !672, line: 97, type: !801, isLocal: true, isDefinition: true)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !802, size: 96, elements: !506)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_sw_flowcontrol_config_t", file: !672, line: 87, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !672, line: 83, size: 24, elements: !804)
!804 = !{!805, !806, !807}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "xon", scope: !803, file: !672, line: 84, baseType: !159, size: 8)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "xoff", scope: !803, file: !672, line: 85, baseType: !159, size: 8, offset: 8)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "escape_character", scope: !803, file: !672, line: 86, baseType: !159, size: 8, offset: 16)
!808 = !DIGlobalVariableExpression(var: !809, expr: !DIExpression())
!809 = distinct !DIGlobalVariable(name: "g_uart_config", scope: !671, file: !672, line: 98, type: !810, isLocal: true, isDefinition: true)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !811, size: 512, elements: !506)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !697, line: 378, baseType: !812)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 373, size: 128, elements: !813)
!813 = !{!814, !816, !818, !820}
!814 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !812, file: !697, line: 374, baseType: !815, size: 32)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !697, line: 317, baseType: !725)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !812, file: !697, line: 375, baseType: !817, size: 32, offset: 32)
!817 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !697, line: 326, baseType: !741)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !812, file: !697, line: 376, baseType: !819, size: 32, offset: 64)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !697, line: 333, baseType: !747)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !812, file: !697, line: 377, baseType: !821, size: 32, offset: 96)
!821 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !697, line: 341, baseType: !751)
!822 = !DIGlobalVariableExpression(var: !823, expr: !DIExpression())
!823 = distinct !DIGlobalVariable(name: "g_uart_irq_pending_status", scope: !671, file: !672, line: 99, type: !788, isLocal: true, isDefinition: true)
!824 = !DIGlobalVariableExpression(var: !825, expr: !DIExpression())
!825 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !671, file: !672, line: 102, type: !826, isLocal: true, isDefinition: true)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !827, size: 256, elements: !506)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !672, line: 74, baseType: !828)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !672, line: 71, size: 64, elements: !829)
!829 = !{!830, !836}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !828, file: !672, line: 72, baseType: !831, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !697, line: 410, baseType: !832)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 32)
!833 = !DISubroutineType(types: !834)
!834 = !{null, !835, !88}
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !697, line: 359, baseType: !696)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !828, file: !672, line: 73, baseType: !88, size: 32, offset: 32)
!837 = !DIGlobalVariableExpression(var: !838, expr: !DIExpression())
!838 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !671, file: !672, line: 103, type: !839, isLocal: true, isDefinition: true)
!839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 512, elements: !840)
!840 = !{!841}
!841 = !DISubrange(count: 8)
!842 = !DIGlobalVariableExpression(var: !843, expr: !DIExpression())
!843 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !671, file: !672, line: 104, type: !844, isLocal: true, isDefinition: true)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !845, size: 896, elements: !506)
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !697, line: 390, baseType: !846)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 382, size: 224, elements: !847)
!847 = !{!848, !850, !851, !852, !853, !854, !855}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !846, file: !697, line: 383, baseType: !849, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !846, file: !697, line: 384, baseType: !61, size: 32, offset: 32)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !846, file: !697, line: 385, baseType: !61, size: 32, offset: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !846, file: !697, line: 386, baseType: !849, size: 32, offset: 96)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !846, file: !697, line: 387, baseType: !61, size: 32, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !846, file: !697, line: 388, baseType: !61, size: 32, offset: 160)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !846, file: !697, line: 389, baseType: !61, size: 32, offset: 192)
!856 = !DIGlobalVariableExpression(var: !857, expr: !DIExpression())
!857 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !671, file: !672, line: 105, type: !858, isLocal: true, isDefinition: true)
!858 = !DICompositeType(tag: DW_TAG_array_type, baseType: !859, size: 416, elements: !860)
!859 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!860 = !{!861}
!861 = !DISubrange(count: 13)
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !671, file: !672, line: 90, type: !91, isLocal: true, isDefinition: true)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 128, elements: !506)
!865 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !866)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !672, line: 69, baseType: !708)
!867 = !DIGlobalVariableExpression(var: !790, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!868 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!869 = !DIGlobalVariableExpression(var: !870, expr: !DIExpression())
!870 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !871, file: !872, line: 53, type: !956, isLocal: false, isDefinition: true)
!871 = distinct !DICompileUnit(language: DW_LANG_C99, file: !872, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !873, retainedTypes: !884, globals: !940, splitDebugInlining: false, nameTableKind: None)
!872 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!873 = !{!173, !238, !681, !674, !874}
!874 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !779, line: 46, baseType: !18, size: 32, elements: !875)
!875 = !{!876, !877, !878, !879, !880, !881, !882, !883}
!876 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!877 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!878 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!879 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!880 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!881 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!882 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!883 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!884 = !{!885}
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 32)
!886 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !888)
!888 = !{!889, !895, !900, !906, !907, !912, !917, !918, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !887, file: !56, line: 547, baseType: !890, size: 32)
!890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 543, size: 32, elements: !891)
!891 = !{!892, !893, !894}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !890, file: !56, line: 544, baseType: !324, size: 32)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !890, file: !56, line: 545, baseType: !60, size: 32)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !890, file: !56, line: 546, baseType: !60, size: 32)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !887, file: !56, line: 551, baseType: !896, size: 32, offset: 32)
!896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 548, size: 32, elements: !897)
!897 = !{!898, !899}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !896, file: !56, line: 549, baseType: !60, size: 32)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !896, file: !56, line: 550, baseType: !60, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !887, file: !56, line: 556, baseType: !901, size: 32, offset: 64)
!901 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 552, size: 32, elements: !902)
!902 = !{!903, !904, !905}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !901, file: !56, line: 553, baseType: !324, size: 32)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !901, file: !56, line: 554, baseType: !60, size: 32)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !901, file: !56, line: 555, baseType: !60, size: 32)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !887, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !887, file: !56, line: 561, baseType: !908, size: 32, offset: 128)
!908 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 558, size: 32, elements: !909)
!909 = !{!910, !911}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !908, file: !56, line: 559, baseType: !60, size: 32)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !908, file: !56, line: 560, baseType: !60, size: 32)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !887, file: !56, line: 565, baseType: !913, size: 32, offset: 160)
!913 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 562, size: 32, elements: !914)
!914 = !{!915, !916}
!915 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !913, file: !56, line: 563, baseType: !324, size: 32)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !913, file: !56, line: 564, baseType: !60, size: 32)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !887, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !887, file: !56, line: 570, baseType: !919, size: 32, offset: 224)
!919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !56, line: 567, size: 32, elements: !920)
!920 = !{!921, !922}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !919, file: !56, line: 568, baseType: !60, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !919, file: !56, line: 569, baseType: !60, size: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !887, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !887, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !887, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !887, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !887, file: !56, line: 575, baseType: !324, size: 32, offset: 384)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !887, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !887, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !887, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !887, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !887, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !887, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !887, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !887, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !887, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !887, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !887, file: !56, line: 586, baseType: !324, size: 32, offset: 736)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !887, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!940 = !{!869, !941, !946, !952}
!941 = !DIGlobalVariableExpression(var: !942, expr: !DIExpression())
!942 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !871, file: !872, line: 54, type: !943, isLocal: false, isDefinition: true)
!943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !944, size: 128, elements: !506)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !945)
!945 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !106, line: 1237, baseType: !173)
!946 = !DIGlobalVariableExpression(var: !947, expr: !DIExpression())
!947 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !871, file: !872, line: 55, type: !948, isLocal: false, isDefinition: true)
!948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, size: 128, elements: !506)
!949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !950)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !951)
!951 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !238)
!952 = !DIGlobalVariableExpression(var: !953, expr: !DIExpression())
!953 = distinct !DIGlobalVariable(name: "g_uart_sleep_handler_name", scope: !871, file: !872, line: 57, type: !954, isLocal: false, isDefinition: true)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !955, size: 128, elements: !506)
!955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !957, size: 128, elements: !506)
!957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !885)
!958 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!959 = distinct !DIGlobalVariable(name: "priority_set", scope: !960, file: !961, line: 128, type: !61, isLocal: true, isDefinition: true)
!960 = distinct !DISubprogram(name: "hal_nvic_init", scope: !961, file: !961, line: 126, type: !962, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !1052)
!961 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!962 = !DISubroutineType(types: !963)
!963 = !{!964}
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !764, line: 158, baseType: !763)
!965 = distinct !DICompileUnit(language: DW_LANG_C99, file: !961, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !966, retainedTypes: !967, globals: !1034, splitDebugInlining: false, nameTableKind: None)
!966 = !{!763, !238}
!967 = !{!950, !968, !61, !1002, !1032}
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 32)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !970, line: 418, baseType: !971)
!970 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!971 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !970, line: 395, size: 1120, elements: !972)
!972 = !{!973, !974, !975, !976, !977, !978, !979, !982, !983, !984, !985, !986, !987, !988, !989, !991, !992, !993, !995, !999, !1001}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !971, file: !970, line: 397, baseType: !324, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !971, file: !970, line: 398, baseType: !60, size: 32, offset: 32)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !971, file: !970, line: 399, baseType: !60, size: 32, offset: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !971, file: !970, line: 400, baseType: !60, size: 32, offset: 96)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !971, file: !970, line: 401, baseType: !60, size: 32, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !971, file: !970, line: 402, baseType: !60, size: 32, offset: 160)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !971, file: !970, line: 403, baseType: !980, size: 96, offset: 192)
!980 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 96, elements: !552)
!981 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !159)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !971, file: !970, line: 404, baseType: !60, size: 32, offset: 288)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !971, file: !970, line: 405, baseType: !60, size: 32, offset: 320)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !971, file: !970, line: 406, baseType: !60, size: 32, offset: 352)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !971, file: !970, line: 407, baseType: !60, size: 32, offset: 384)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !971, file: !970, line: 408, baseType: !60, size: 32, offset: 416)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !971, file: !970, line: 409, baseType: !60, size: 32, offset: 448)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !971, file: !970, line: 410, baseType: !60, size: 32, offset: 480)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !971, file: !970, line: 411, baseType: !990, size: 64, offset: 512)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 64, elements: !508)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !971, file: !970, line: 412, baseType: !324, size: 32, offset: 576)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !971, file: !970, line: 413, baseType: !324, size: 32, offset: 608)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !971, file: !970, line: 414, baseType: !994, size: 128, offset: 640)
!994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 128, elements: !506)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !971, file: !970, line: 415, baseType: !996, size: 160, offset: 768)
!996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !324, size: 160, elements: !997)
!997 = !{!998}
!998 = !DISubrange(count: 5)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !971, file: !970, line: 416, baseType: !1000, size: 160, offset: 928)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !997)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !971, file: !970, line: 417, baseType: !60, size: 32, offset: 1088)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 32)
!1003 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !970, line: 378, baseType: !1004)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !970, line: 363, size: 28704, elements: !1005)
!1005 = !{!1006, !1008, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1023, !1027, !1031}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1004, file: !970, line: 365, baseType: !1007, size: 256)
!1007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !840)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1004, file: !970, line: 366, baseType: !1009, size: 768, offset: 256)
!1009 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !1010)
!1010 = !{!1011}
!1011 = !DISubrange(count: 24)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1004, file: !970, line: 367, baseType: !1007, size: 256, offset: 1024)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1004, file: !970, line: 368, baseType: !1009, size: 768, offset: 1280)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1004, file: !970, line: 369, baseType: !1007, size: 256, offset: 2048)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1004, file: !970, line: 370, baseType: !1009, size: 768, offset: 2304)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1004, file: !970, line: 371, baseType: !1007, size: 256, offset: 3072)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1004, file: !970, line: 372, baseType: !1009, size: 768, offset: 3328)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1004, file: !970, line: 373, baseType: !1007, size: 256, offset: 4096)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1004, file: !970, line: 374, baseType: !1020, size: 1792, offset: 4352)
!1020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !1021)
!1021 = !{!1022}
!1022 = !DISubrange(count: 56)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1004, file: !970, line: 375, baseType: !1024, size: 1920, offset: 6144)
!1024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 1920, elements: !1025)
!1025 = !{!1026}
!1026 = !DISubrange(count: 240)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1004, file: !970, line: 376, baseType: !1028, size: 20608, offset: 8064)
!1028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !1029)
!1029 = !{!1030}
!1030 = !DISubrange(count: 644)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1004, file: !970, line: 377, baseType: !60, size: 32, offset: 28672)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !1033)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!1034 = !{!1035, !1036, !1049}
!1035 = !DIGlobalVariableExpression(var: !959, expr: !DIExpression())
!1036 = !DIGlobalVariableExpression(var: !1037, expr: !DIExpression())
!1037 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !965, file: !961, line: 119, type: !1038, isLocal: false, isDefinition: true)
!1038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1039, size: 4096, elements: !1047)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !961, line: 50, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !961, line: 47, size: 64, elements: !1041)
!1041 = !{!1042, !1046}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1040, file: !961, line: 48, baseType: !1043, size: 32)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 32)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{null, !950}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1040, file: !961, line: 49, baseType: !61, size: 32, offset: 32)
!1047 = !{!1048}
!1048 = !DISubrange(count: 64)
!1049 = !DIGlobalVariableExpression(var: !1050, expr: !DIExpression())
!1050 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !965, file: !961, line: 52, type: !1051, isLocal: true, isDefinition: true)
!1051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !859, size: 2048, elements: !1047)
!1052 = !{!1053}
!1053 = !DILocalVariable(name: "i", scope: !960, file: !961, line: 129, type: !61)
!1054 = !DIGlobalVariableExpression(var: !1055, expr: !DIExpression())
!1055 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1056, file: !1057, line: 55, type: !91, isLocal: false, isDefinition: true)
!1056 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1057, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1058, retainedTypes: !1093, globals: !1132, splitDebugInlining: false, nameTableKind: None)
!1057 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1058 = !{!1059, !1067, !1072}
!1059 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1060, line: 51, baseType: !18, size: 32, elements: !1061)
!1060 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1061 = !{!1062, !1063, !1064, !1065, !1066}
!1062 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1063 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1064 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1065 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1066 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1067 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1060, line: 62, baseType: !18, size: 32, elements: !1068)
!1068 = !{!1069, !1070, !1071}
!1069 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1070 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1071 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1072 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1073, line: 228, baseType: !18, size: 32, elements: !1074)
!1073 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1074 = !{!1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092}
!1075 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1076 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1077 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1078 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1079 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1080 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1081 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1082 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1083 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1084 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1085 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1086 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1087 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1088 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1089 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1090 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1091 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1092 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1093 = !{!1094, !1095, !1117, !849, !61, !18, !1123, !1125, !1129, !1131}
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 32)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1097)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1098)
!1098 = !{!1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1097, file: !56, line: 2759, baseType: !60, size: 32)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1097, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1097, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1097, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1097, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1097, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1097, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1097, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1097, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1097, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1097, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1097, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1097, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1097, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1097, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1097, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1097, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1097, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 32)
!1118 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1119)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1120)
!1120 = !{!1121, !1122}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1119, file: !56, line: 2799, baseType: !60, size: 32)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1119, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 32)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1127)
!1127 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1128)
!1128 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !161)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1132 = !{!1054, !1133, !1135, !1137, !1139, !1141, !1143, !1145, !1147, !1149, !1151}
!1133 = !DIGlobalVariableExpression(var: !1134, expr: !DIExpression())
!1134 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1056, file: !1057, line: 604, type: !159, isLocal: false, isDefinition: true)
!1135 = !DIGlobalVariableExpression(var: !1136, expr: !DIExpression())
!1136 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1056, file: !1057, line: 605, type: !61, isLocal: false, isDefinition: true)
!1137 = !DIGlobalVariableExpression(var: !1138, expr: !DIExpression())
!1138 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1056, file: !1057, line: 606, type: !61, isLocal: false, isDefinition: true)
!1139 = !DIGlobalVariableExpression(var: !1140, expr: !DIExpression())
!1140 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1056, file: !1057, line: 607, type: !61, isLocal: false, isDefinition: true)
!1141 = !DIGlobalVariableExpression(var: !1142, expr: !DIExpression())
!1142 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1056, file: !1057, line: 608, type: !61, isLocal: false, isDefinition: true)
!1143 = !DIGlobalVariableExpression(var: !1144, expr: !DIExpression())
!1144 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1056, file: !1057, line: 609, type: !61, isLocal: false, isDefinition: true)
!1145 = !DIGlobalVariableExpression(var: !1146, expr: !DIExpression())
!1146 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1056, file: !1057, line: 610, type: !61, isLocal: false, isDefinition: true)
!1147 = !DIGlobalVariableExpression(var: !1148, expr: !DIExpression())
!1148 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1056, file: !1057, line: 611, type: !61, isLocal: false, isDefinition: true)
!1149 = !DIGlobalVariableExpression(var: !1150, expr: !DIExpression())
!1150 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1056, file: !1057, line: 665, type: !61, isLocal: false, isDefinition: true)
!1151 = !DIGlobalVariableExpression(var: !1152, expr: !DIExpression())
!1152 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1056, file: !1057, line: 666, type: !61, isLocal: false, isDefinition: true)
!1153 = !DIGlobalVariableExpression(var: !1154, expr: !DIExpression())
!1154 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1155, file: !1156, line: 334, type: !91, isLocal: false, isDefinition: true)
!1155 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1156, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1157, retainedTypes: !1325, globals: !1465, splitDebugInlining: false, nameTableKind: None)
!1156 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1157 = !{!1158, !1249, !1255, !1262, !1274, !1285, !1294, !1303, !1307, !1311}
!1158 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1159, line: 58, baseType: !7, size: 32, elements: !1160)
!1159 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1160 = !{!1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248}
!1161 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1162 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1163 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1164 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1165 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1166 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1167 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1168 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1169 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1170 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1171 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1172 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1173 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1174 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1175 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1176 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1177 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1178 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1179 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1180 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1181 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1182 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1183 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1184 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1185 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1186 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1187 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1188 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1189 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1190 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1191 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1192 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1193 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1194 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1195 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1196 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1197 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1198 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1199 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1200 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1201 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1202 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1203 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1204 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1205 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1206 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1207 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1208 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1209 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1210 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1211 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1212 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1213 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1214 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1215 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1216 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1217 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1218 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1219 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1220 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1221 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1222 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1223 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1224 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1225 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1226 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1227 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1228 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1229 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1230 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1231 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1232 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1233 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1234 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1235 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1236 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1237 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1238 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1239 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1240 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1241 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1242 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1243 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1244 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1245 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1246 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1247 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1248 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1249 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1250, line: 81, baseType: !18, size: 32, elements: !1251)
!1250 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1251 = !{!1252, !1253, !1254}
!1252 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1253 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1254 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1255 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1156, line: 298, baseType: !18, size: 32, elements: !1256)
!1256 = !{!1257, !1258, !1259, !1260, !1261}
!1257 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1258 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1259 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1260 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1261 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1262 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1263, line: 51, baseType: !18, size: 32, elements: !1264)
!1263 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1264 = !{!1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273}
!1265 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1266 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1267 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1268 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1269 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1270 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1271 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1272 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1273 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1274 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1275, line: 110, baseType: !7, size: 32, elements: !1276)
!1275 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1276 = !{!1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284}
!1277 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1278 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1279 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1280 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1281 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1282 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1283 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1284 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1285 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1263, line: 73, baseType: !18, size: 32, elements: !1286)
!1286 = !{!1287, !1288, !1289, !1290, !1291, !1292, !1293}
!1287 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1288 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1289 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1290 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1291 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1292 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1293 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1294 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1263, line: 83, baseType: !18, size: 32, elements: !1295)
!1295 = !{!1296, !1297, !1298, !1299, !1300, !1301, !1302}
!1296 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1297 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1298 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1299 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1300 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1301 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1302 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1303 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1263, line: 98, baseType: !18, size: 32, elements: !1304)
!1304 = !{!1305, !1306}
!1305 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1306 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1307 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1250, line: 76, baseType: !18, size: 32, elements: !1308)
!1308 = !{!1309, !1310}
!1309 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1310 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1311 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1250, line: 208, baseType: !18, size: 32, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324}
!1313 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1314 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1315 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1316 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1317 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1318 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1319 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1320 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1321 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1322 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1323 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1324 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1325 = !{!61, !1094, !1125, !849, !1326, !1436, !1458, !88, !1464, !161}
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 32)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1250, line: 193, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1250, line: 134, size: 1824, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1339, !1345, !1349, !1357, !1358, !1365, !1366, !1367, !1368, !1376, !1379, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1430, !1431, !1435}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1328, file: !1250, line: 136, baseType: !61, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1328, file: !1250, line: 137, baseType: !849, size: 32, offset: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1328, file: !1250, line: 138, baseType: !1333, size: 32, offset: 64)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1334, line: 56, baseType: !1335)
!1334 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1334, line: 54, size: 8, elements: !1337)
!1337 = !{!1338}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1336, file: !1334, line: 55, baseType: !159, size: 8)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1328, file: !1250, line: 139, baseType: !1340, size: 32, offset: 96)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1334, line: 46, baseType: !1341)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 32)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1334, line: 44, size: 8, elements: !1343)
!1343 = !{!1344}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1342, file: !1334, line: 45, baseType: !159, size: 8)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1328, file: !1250, line: 140, baseType: !1346, size: 8, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1347)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1348)
!1348 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1328, file: !1250, line: 143, baseType: !1350, size: 32, offset: 160)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 32)
!1351 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1352, line: 146, baseType: !1353)
!1352 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 143, size: 64, elements: !1354)
!1354 = !{!1355, !1356}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1353, file: !1352, line: 144, baseType: !61, size: 32)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1353, file: !1352, line: 145, baseType: !61, size: 32, offset: 32)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1328, file: !1250, line: 144, baseType: !849, size: 32, offset: 192)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1328, file: !1250, line: 145, baseType: !1359, size: 32, offset: 224)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1352, line: 152, baseType: !1361)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 149, size: 64, elements: !1362)
!1362 = !{!1363, !1364}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1361, file: !1352, line: 150, baseType: !61, size: 32)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1361, file: !1352, line: 151, baseType: !61, size: 32, offset: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1328, file: !1250, line: 146, baseType: !849, size: 32, offset: 256)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1328, file: !1250, line: 147, baseType: !61, size: 32, offset: 288)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1328, file: !1250, line: 148, baseType: !849, size: 32, offset: 320)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1328, file: !1250, line: 151, baseType: !1369, size: 1024, offset: 352)
!1369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1370, size: 1024, elements: !1375)
!1370 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1352, line: 170, baseType: !1371)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 167, size: 64, elements: !1372)
!1372 = !{!1373, !1374}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1371, file: !1352, line: 168, baseType: !61, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1371, file: !1352, line: 169, baseType: !61, size: 32, offset: 32)
!1375 = !{!841, !509}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1328, file: !1250, line: 155, baseType: !1377, size: 32, offset: 1376)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1263, line: 120, baseType: !159)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1328, file: !1250, line: 156, baseType: !1380, size: 32, offset: 1408)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1381, size: 32)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1250, line: 124, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1250, line: 90, size: 200, elements: !1383)
!1383 = !{!1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1382, file: !1250, line: 91, baseType: !159, size: 8)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1382, file: !1250, line: 92, baseType: !159, size: 8, offset: 8)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1382, file: !1250, line: 94, baseType: !159, size: 8, offset: 16)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1382, file: !1250, line: 95, baseType: !159, size: 8, offset: 24)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1382, file: !1250, line: 96, baseType: !159, size: 8, offset: 32)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1382, file: !1250, line: 98, baseType: !159, size: 8, offset: 40)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1382, file: !1250, line: 99, baseType: !159, size: 8, offset: 48)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1382, file: !1250, line: 100, baseType: !159, size: 8, offset: 56)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1382, file: !1250, line: 101, baseType: !159, size: 8, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1382, file: !1250, line: 103, baseType: !159, size: 8, offset: 72)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1382, file: !1250, line: 104, baseType: !159, size: 8, offset: 80)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1382, file: !1250, line: 106, baseType: !159, size: 8, offset: 88)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1382, file: !1250, line: 107, baseType: !159, size: 8, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1382, file: !1250, line: 108, baseType: !159, size: 8, offset: 104)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1382, file: !1250, line: 109, baseType: !159, size: 8, offset: 112)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1382, file: !1250, line: 110, baseType: !159, size: 8, offset: 120)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1382, file: !1250, line: 111, baseType: !159, size: 8, offset: 128)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1382, file: !1250, line: 112, baseType: !159, size: 8, offset: 136)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1382, file: !1250, line: 114, baseType: !159, size: 8, offset: 144)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1382, file: !1250, line: 115, baseType: !159, size: 8, offset: 152)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1382, file: !1250, line: 118, baseType: !159, size: 8, offset: 160)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1382, file: !1250, line: 119, baseType: !159, size: 8, offset: 168)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1382, file: !1250, line: 120, baseType: !159, size: 8, offset: 176)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1382, file: !1250, line: 121, baseType: !159, size: 8, offset: 184)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1382, file: !1250, line: 122, baseType: !159, size: 8, offset: 192)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1328, file: !1250, line: 157, baseType: !61, size: 32, offset: 1440)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1328, file: !1250, line: 158, baseType: !1126, size: 16, offset: 1472)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1328, file: !1250, line: 159, baseType: !1126, size: 16, offset: 1488)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1328, file: !1250, line: 163, baseType: !1126, size: 16, offset: 1504)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1328, file: !1250, line: 164, baseType: !1126, size: 16, offset: 1520)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1328, file: !1250, line: 167, baseType: !159, size: 8, offset: 1536)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1328, file: !1250, line: 168, baseType: !1416, size: 24, offset: 1544)
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 24, elements: !1417)
!1417 = !{!1418}
!1418 = !DISubrange(count: 3)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1328, file: !1250, line: 169, baseType: !159, size: 8, offset: 1568)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1328, file: !1250, line: 170, baseType: !159, size: 8, offset: 1576)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1328, file: !1250, line: 173, baseType: !1126, size: 16, offset: 1584)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1328, file: !1250, line: 174, baseType: !61, size: 32, offset: 1600)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1328, file: !1250, line: 175, baseType: !61, size: 32, offset: 1632)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1328, file: !1250, line: 178, baseType: !91, size: 8, offset: 1664)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1328, file: !1250, line: 179, baseType: !91, size: 8, offset: 1672)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1328, file: !1250, line: 182, baseType: !1427, size: 32, offset: 1696)
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 32)
!1428 = !DISubroutineType(types: !1429)
!1429 = !{!7, !88}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1328, file: !1250, line: 186, baseType: !1427, size: 32, offset: 1728)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1328, file: !1250, line: 187, baseType: !1432, size: 32, offset: 1760)
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 32)
!1433 = !DISubroutineType(types: !1434)
!1434 = !{!7, !88, !61, !88, !61}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1328, file: !1250, line: 188, baseType: !1432, size: 32, offset: 1792)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1438, file: !56, line: 2759, baseType: !60, size: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1438, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1438, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1438, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1438, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1438, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1438, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1438, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1438, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1438, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1438, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1438, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1438, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1438, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1438, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1438, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1438, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1438, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1459, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1460)
!1460 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1461)
!1461 = !{!1462, !1463}
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1460, file: !56, line: 2799, baseType: !60, size: 32)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1460, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 32)
!1465 = !{!1153, !1466, !1468, !1470, !1475}
!1466 = !DIGlobalVariableExpression(var: !1467, expr: !DIExpression())
!1467 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1155, file: !1156, line: 382, type: !61, isLocal: false, isDefinition: true)
!1468 = !DIGlobalVariableExpression(var: !1469, expr: !DIExpression())
!1469 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1155, file: !1156, line: 383, type: !61, isLocal: false, isDefinition: true)
!1470 = !DIGlobalVariableExpression(var: !1471, expr: !DIExpression())
!1471 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1155, file: !1156, line: 369, type: !1472, isLocal: true, isDefinition: true)
!1472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 1024, elements: !1473)
!1473 = !{!1474}
!1474 = !DISubrange(count: 128)
!1475 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression())
!1476 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1155, file: !1156, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1477 = !DIGlobalVariableExpression(var: !1476, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1478 = !DIGlobalVariableExpression(var: !1479, expr: !DIExpression())
!1479 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1480, file: !1535, line: 35, type: !1536, isLocal: false, isDefinition: true)
!1480 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1481, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1482, retainedTypes: !1528, globals: !1529, splitDebugInlining: false, nameTableKind: None)
!1481 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1482 = !{!1483}
!1483 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1484, line: 77, baseType: !18, size: 32, elements: !1485)
!1484 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1485 = !{!1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527}
!1486 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1487 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1488 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1489 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1490 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1491 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1492 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1493 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1494 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1495 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1496 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1497 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1498 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1499 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1500 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1501 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1502 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1503 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1504 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1505 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1506 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1507 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1508 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1509 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1510 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1511 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1512 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1513 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1514 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1515 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1516 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1517 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1518 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1519 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1520 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1521 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1522 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1523 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1524 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1525 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1526 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1527 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1528 = !{!88}
!1529 = !{!1478, !1530, !1533}
!1530 = !DIGlobalVariableExpression(var: !1531, expr: !DIExpression())
!1531 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1480, file: !1481, line: 96, type: !1532, isLocal: true, isDefinition: true)
!1532 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1533 = !DIGlobalVariableExpression(var: !1534, expr: !DIExpression())
!1534 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1480, file: !1481, line: 94, type: !1532, isLocal: true, isDefinition: true)
!1535 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1536 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1481, line: 54, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1481, line: 51, size: 576, elements: !1539)
!1539 = !{!1540, !1550}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1538, file: !1481, line: 52, baseType: !1541, size: 96)
!1541 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1484, line: 152, baseType: !1542)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1484, line: 144, size: 96, elements: !1543)
!1543 = !{!1544, !1546, !1548}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1542, file: !1484, line: 145, baseType: !1545, size: 32)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1484, line: 61, baseType: !18)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1542, file: !1484, line: 146, baseType: !1547, size: 16, offset: 32)
!1547 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1484, line: 62, baseType: !1128)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1542, file: !1484, line: 150, baseType: !1549, size: 32, offset: 64)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1484, line: 127, baseType: !1483)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1538, file: !1481, line: 53, baseType: !1551, size: 480, offset: 96)
!1551 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1552, line: 107, baseType: !1553)
!1552 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 103, size: 480, elements: !1554)
!1554 = !{!1555, !1556, !1557}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1553, file: !1552, line: 104, baseType: !18, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1553, file: !1552, line: 105, baseType: !18, size: 32, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1553, file: !1552, line: 106, baseType: !1558, size: 400, offset: 64)
!1558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1559, size: 400, elements: !997)
!1559 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1552, line: 100, baseType: !1560)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 92, size: 80, elements: !1561)
!1561 = !{!1562, !1563, !1564}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1560, file: !1552, line: 93, baseType: !159, size: 8)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1560, file: !1552, line: 94, baseType: !159, size: 8, offset: 8)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1560, file: !1552, line: 96, baseType: !1565, size: 64, offset: 16)
!1565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 64, elements: !840)
!1566 = !DIGlobalVariableExpression(var: !1567, expr: !DIExpression())
!1567 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1568, file: !1571, line: 96, type: !1572, isLocal: false, isDefinition: true)
!1568 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1569, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1570, splitDebugInlining: false, nameTableKind: None)
!1569 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1570 = !{!1566}
!1571 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 152, elements: !1573)
!1573 = !{!1574}
!1574 = !DISubrange(count: 19)
!1575 = !DIGlobalVariableExpression(var: !1576, expr: !DIExpression())
!1576 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1577, file: !1578, line: 168, type: !1928, isLocal: false, isDefinition: true)
!1577 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1578, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1579, retainedTypes: !1590, globals: !1599, splitDebugInlining: false, nameTableKind: None)
!1578 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1579 = !{!1580, !1158, !1483}
!1580 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1581, line: 49, baseType: !18, size: 32, elements: !1582)
!1581 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1582 = !{!1583, !1584, !1585, !1586, !1587, !1588, !1589}
!1583 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1584 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1585 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1586 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1587 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1588 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1589 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1590 = !{!1591, !61, !1593}
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1592, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1159, line: 47, baseType: !161)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 32)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1352, line: 146, baseType: !1595)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 143, size: 64, elements: !1596)
!1596 = !{!1597, !1598}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1595, file: !1352, line: 144, baseType: !61, size: 32)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1595, file: !1352, line: 145, baseType: !61, size: 32, offset: 32)
!1599 = !{!1575, !1600, !1602, !1612, !1749, !1751, !1753, !1755, !1757, !1762, !1765, !1774, !1776, !1778, !1786, !1788, !1790, !1873, !1876, !1878, !1880, !1891, !1893, !1906}
!1600 = !DIGlobalVariableExpression(var: !1601, expr: !DIExpression())
!1601 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1577, file: !1578, line: 94, type: !1032, isLocal: true, isDefinition: true)
!1602 = !DIGlobalVariableExpression(var: !1603, expr: !DIExpression())
!1603 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1577, file: !1578, line: 95, type: !1604, isLocal: false, isDefinition: true)
!1604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1605, size: 32)
!1605 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1606)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1552, line: 100, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 92, size: 80, elements: !1608)
!1608 = !{!1609, !1610, !1611}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1607, file: !1552, line: 93, baseType: !159, size: 8)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1607, file: !1552, line: 94, baseType: !159, size: 8, offset: 8)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1607, file: !1552, line: 96, baseType: !1565, size: 64, offset: 16)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1577, file: !1578, line: 127, type: !1614, isLocal: false, isDefinition: true)
!1614 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1352, line: 317, baseType: !1615)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1352, line: 237, size: 2720, elements: !1616)
!1616 = !{!1617, !1618, !1670, !1671, !1674, !1675, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1716, !1717, !1718, !1723, !1724, !1725, !1726, !1727, !1731, !1735, !1742, !1743, !1744, !1745, !1746, !1747, !1748}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1615, file: !1352, line: 238, baseType: !61, size: 32)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1615, file: !1352, line: 239, baseType: !1619, size: 32, offset: 32)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 32)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1352, line: 121, baseType: !1621)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 105, size: 480, elements: !1622)
!1622 = !{!1623, !1627, !1628, !1632, !1636, !1640, !1641, !1645, !1646, !1647, !1648, !1653, !1658, !1662, !1666}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1621, file: !1352, line: 106, baseType: !1624, size: 32)
!1624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1625, size: 32)
!1625 = !DISubroutineType(types: !1626)
!1626 = !{!7, !88, !88}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1621, file: !1352, line: 107, baseType: !1427, size: 32, offset: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1621, file: !1352, line: 108, baseType: !1629, size: 32, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{!88, !88, !61, !61}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1621, file: !1352, line: 109, baseType: !1633, size: 32, offset: 96)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 32)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{!7, !88, !61}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1621, file: !1352, line: 110, baseType: !1637, size: 32, offset: 128)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 32)
!1638 = !DISubroutineType(types: !1639)
!1639 = !{!7, !88, !88, !88, !61}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1621, file: !1352, line: 111, baseType: !1633, size: 32, offset: 160)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1621, file: !1352, line: 112, baseType: !1642, size: 32, offset: 192)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 32)
!1643 = !DISubroutineType(types: !1644)
!1644 = !{!1032, !88, !61}
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1621, file: !1352, line: 113, baseType: !1633, size: 32, offset: 224)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1621, file: !1352, line: 114, baseType: !1633, size: 32, offset: 256)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1621, file: !1352, line: 115, baseType: !1633, size: 32, offset: 288)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1621, file: !1352, line: 116, baseType: !1649, size: 32, offset: 320)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!7, !88, !7, !1652, !88, !1652}
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1159, line: 50, baseType: !18)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1621, file: !1352, line: 117, baseType: !1654, size: 32, offset: 352)
!1654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1655, size: 32)
!1655 = !DISubroutineType(types: !1656)
!1656 = !{!7, !88, !1657}
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1621, file: !1352, line: 118, baseType: !1659, size: 32, offset: 384)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 32)
!1660 = !DISubroutineType(types: !1661)
!1661 = !{!7, !88, !88, !61}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1621, file: !1352, line: 119, baseType: !1663, size: 32, offset: 416)
!1663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1664, size: 32)
!1664 = !DISubroutineType(types: !1665)
!1665 = !{!91, !88, !61}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1621, file: !1352, line: 120, baseType: !1667, size: 32, offset: 448)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 32)
!1668 = !DISubroutineType(types: !1669)
!1669 = !{!7, !88, !61, !88}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1615, file: !1352, line: 240, baseType: !88, size: 32, offset: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1615, file: !1352, line: 241, baseType: !1672, size: 32, offset: 96)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1159, line: 46, baseType: !1128)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1615, file: !1352, line: 242, baseType: !1672, size: 32, offset: 128)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1615, file: !1352, line: 243, baseType: !1676, size: 928, offset: 160)
!1676 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1352, line: 99, baseType: !1677)
!1677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 90, size: 928, elements: !1678)
!1678 = !{!1679, !1680, !1682, !1683, !1684, !1685, !1686, !1687}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1677, file: !1352, line: 91, baseType: !61, size: 32)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1677, file: !1352, line: 92, baseType: !1681, size: 256, offset: 32)
!1681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !840)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1677, file: !1352, line: 93, baseType: !1681, size: 256, offset: 288)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1677, file: !1352, line: 94, baseType: !1681, size: 256, offset: 544)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1677, file: !1352, line: 95, baseType: !61, size: 32, offset: 800)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1677, file: !1352, line: 96, baseType: !1673, size: 16, offset: 832)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1677, file: !1352, line: 97, baseType: !61, size: 32, offset: 864)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1677, file: !1352, line: 98, baseType: !61, size: 32, offset: 896)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1615, file: !1352, line: 244, baseType: !1681, size: 256, offset: 1088)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1615, file: !1352, line: 245, baseType: !1681, size: 256, offset: 1344)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1615, file: !1352, line: 246, baseType: !61, size: 32, offset: 1600)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1615, file: !1352, line: 247, baseType: !61, size: 32, offset: 1632)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1615, file: !1352, line: 248, baseType: !61, size: 32, offset: 1664)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1615, file: !1352, line: 249, baseType: !61, size: 32, offset: 1696)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1615, file: !1352, line: 250, baseType: !61, size: 32, offset: 1728)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1615, file: !1352, line: 252, baseType: !61, size: 32, offset: 1760)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1615, file: !1352, line: 255, baseType: !61, size: 32, offset: 1792)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1615, file: !1352, line: 256, baseType: !61, size: 32, offset: 1824)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1615, file: !1352, line: 257, baseType: !61, size: 32, offset: 1856)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1615, file: !1352, line: 261, baseType: !61, size: 32, offset: 1888)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1615, file: !1352, line: 262, baseType: !61, size: 32, offset: 1920)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1615, file: !1352, line: 263, baseType: !61, size: 32, offset: 1952)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1615, file: !1352, line: 264, baseType: !61, size: 32, offset: 1984)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1615, file: !1352, line: 265, baseType: !61, size: 32, offset: 2016)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1615, file: !1352, line: 266, baseType: !61, size: 32, offset: 2048)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1615, file: !1352, line: 267, baseType: !61, size: 32, offset: 2080)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1615, file: !1352, line: 268, baseType: !61, size: 32, offset: 2112)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1615, file: !1352, line: 270, baseType: !61, size: 32, offset: 2144)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1615, file: !1352, line: 271, baseType: !61, size: 32, offset: 2176)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1615, file: !1352, line: 272, baseType: !1710, size: 32, offset: 2208)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 32)
!1711 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1352, line: 229, baseType: !1712)
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 226, size: 64, elements: !1713)
!1713 = !{!1714, !1715}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1712, file: !1352, line: 227, baseType: !61, size: 32)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1712, file: !1352, line: 228, baseType: !61, size: 32, offset: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1615, file: !1352, line: 273, baseType: !1591, size: 32, offset: 2240)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1615, file: !1352, line: 274, baseType: !1591, size: 32, offset: 2272)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1615, file: !1352, line: 276, baseType: !1719, size: 32, offset: 2304)
!1719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 32)
!1720 = !DISubroutineType(types: !1721)
!1721 = !{null, !1722}
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1615, file: !1352, line: 278, baseType: !61, size: 32, offset: 2336)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1615, file: !1352, line: 280, baseType: !1719, size: 32, offset: 2368)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1615, file: !1352, line: 281, baseType: !1719, size: 32, offset: 2400)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1615, file: !1352, line: 283, baseType: !61, size: 32, offset: 2432)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1615, file: !1352, line: 284, baseType: !1728, size: 32, offset: 2464)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 32)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!61, !1722}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1615, file: !1352, line: 285, baseType: !1732, size: 32, offset: 2496)
!1732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1733, size: 32)
!1733 = !DISubroutineType(types: !1734)
!1734 = !{!61, !1722, !61, !61}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1615, file: !1352, line: 293, baseType: !1736, size: 32, offset: 2528)
!1736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1737, size: 32)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1352, line: 162, baseType: !1738)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 159, size: 64, elements: !1739)
!1739 = !{!1740, !1741}
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1738, file: !1352, line: 160, baseType: !61, size: 32)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1738, file: !1352, line: 161, baseType: !61, size: 32, offset: 32)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1615, file: !1352, line: 295, baseType: !61, size: 32, offset: 2560)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1615, file: !1352, line: 296, baseType: !61, size: 32, offset: 2592)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1615, file: !1352, line: 297, baseType: !61, size: 32, offset: 2624)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1615, file: !1352, line: 298, baseType: !1673, size: 16, offset: 2656)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1615, file: !1352, line: 302, baseType: !1673, size: 16, offset: 2672)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1615, file: !1352, line: 310, baseType: !91, size: 8, offset: 2688)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1615, file: !1352, line: 313, baseType: !91, size: 8, offset: 2696)
!1749 = !DIGlobalVariableExpression(var: !1750, expr: !DIExpression())
!1750 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1577, file: !1578, line: 129, type: !61, isLocal: false, isDefinition: true)
!1751 = !DIGlobalVariableExpression(var: !1752, expr: !DIExpression())
!1752 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1577, file: !1578, line: 130, type: !61, isLocal: false, isDefinition: true)
!1753 = !DIGlobalVariableExpression(var: !1754, expr: !DIExpression())
!1754 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1577, file: !1578, line: 131, type: !61, isLocal: false, isDefinition: true)
!1755 = !DIGlobalVariableExpression(var: !1756, expr: !DIExpression())
!1756 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1577, file: !1578, line: 132, type: !1126, isLocal: true, isDefinition: true)
!1757 = !DIGlobalVariableExpression(var: !1758, expr: !DIExpression())
!1758 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1577, file: !1578, line: 136, type: !1759, isLocal: false, isDefinition: true)
!1759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 4096, elements: !1760)
!1760 = !{!1761}
!1761 = !DISubrange(count: 512)
!1762 = !DIGlobalVariableExpression(var: !1763, expr: !DIExpression())
!1763 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1577, file: !1578, line: 146, type: !1764, isLocal: true, isDefinition: true)
!1764 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1594, size: 512, elements: !840)
!1765 = !DIGlobalVariableExpression(var: !1766, expr: !DIExpression())
!1766 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1577, file: !1578, line: 152, type: !1767, isLocal: true, isDefinition: true)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1769)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1552, line: 116, baseType: !1770)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 113, size: 64, elements: !1771)
!1771 = !{!1772, !1773}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1770, file: !1552, line: 114, baseType: !61, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1770, file: !1552, line: 115, baseType: !61, size: 32, offset: 32)
!1774 = !DIGlobalVariableExpression(var: !1775, expr: !DIExpression())
!1775 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1577, file: !1578, line: 156, type: !61, isLocal: false, isDefinition: true)
!1776 = !DIGlobalVariableExpression(var: !1777, expr: !DIExpression())
!1777 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1577, file: !1578, line: 157, type: !61, isLocal: false, isDefinition: true)
!1778 = !DIGlobalVariableExpression(var: !1779, expr: !DIExpression())
!1779 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1577, file: !1578, line: 160, type: !1780, isLocal: true, isDefinition: true)
!1780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1781, size: 512, elements: !840)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1352, line: 152, baseType: !1782)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 149, size: 64, elements: !1783)
!1783 = !{!1784, !1785}
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1782, file: !1352, line: 150, baseType: !61, size: 32)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1782, file: !1352, line: 151, baseType: !61, size: 32, offset: 32)
!1786 = !DIGlobalVariableExpression(var: !1787, expr: !DIExpression())
!1787 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1577, file: !1578, line: 173, type: !61, isLocal: false, isDefinition: true)
!1788 = !DIGlobalVariableExpression(var: !1789, expr: !DIExpression())
!1789 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1577, file: !1578, line: 176, type: !1620, isLocal: false, isDefinition: true)
!1790 = !DIGlobalVariableExpression(var: !1791, expr: !DIExpression())
!1791 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1577, file: !1578, line: 177, type: !1792, isLocal: false, isDefinition: true)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1250, line: 193, baseType: !1793)
!1793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1250, line: 134, size: 1824, elements: !1794)
!1794 = !{!1795, !1796, !1797, !1803, !1809, !1810, !1811, !1812, !1814, !1815, !1816, !1817, !1824, !1825, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1793, file: !1250, line: 136, baseType: !61, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1793, file: !1250, line: 137, baseType: !849, size: 32, offset: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1793, file: !1250, line: 138, baseType: !1798, size: 32, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1334, line: 56, baseType: !1799)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 32)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1334, line: 54, size: 8, elements: !1801)
!1801 = !{!1802}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1800, file: !1334, line: 55, baseType: !159, size: 8)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1793, file: !1250, line: 139, baseType: !1804, size: 32, offset: 96)
!1804 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1334, line: 46, baseType: !1805)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1334, line: 44, size: 8, elements: !1807)
!1807 = !{!1808}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1806, file: !1334, line: 45, baseType: !159, size: 8)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1793, file: !1250, line: 140, baseType: !1346, size: 8, offset: 128)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1793, file: !1250, line: 143, baseType: !1593, size: 32, offset: 160)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1793, file: !1250, line: 144, baseType: !849, size: 32, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1793, file: !1250, line: 145, baseType: !1813, size: 32, offset: 224)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1793, file: !1250, line: 146, baseType: !849, size: 32, offset: 256)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1793, file: !1250, line: 147, baseType: !61, size: 32, offset: 288)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1793, file: !1250, line: 148, baseType: !849, size: 32, offset: 320)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1793, file: !1250, line: 151, baseType: !1818, size: 1024, offset: 352)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1819, size: 1024, elements: !1375)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1352, line: 170, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 167, size: 64, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1820, file: !1352, line: 168, baseType: !61, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1820, file: !1352, line: 169, baseType: !61, size: 32, offset: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1793, file: !1250, line: 155, baseType: !1377, size: 32, offset: 1376)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1793, file: !1250, line: 156, baseType: !1826, size: 32, offset: 1408)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1827, size: 32)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1250, line: 124, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1250, line: 90, size: 200, elements: !1829)
!1829 = !{!1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1828, file: !1250, line: 91, baseType: !159, size: 8)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1828, file: !1250, line: 92, baseType: !159, size: 8, offset: 8)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1828, file: !1250, line: 94, baseType: !159, size: 8, offset: 16)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1828, file: !1250, line: 95, baseType: !159, size: 8, offset: 24)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1828, file: !1250, line: 96, baseType: !159, size: 8, offset: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1828, file: !1250, line: 98, baseType: !159, size: 8, offset: 40)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1828, file: !1250, line: 99, baseType: !159, size: 8, offset: 48)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1828, file: !1250, line: 100, baseType: !159, size: 8, offset: 56)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1828, file: !1250, line: 101, baseType: !159, size: 8, offset: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1828, file: !1250, line: 103, baseType: !159, size: 8, offset: 72)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1828, file: !1250, line: 104, baseType: !159, size: 8, offset: 80)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1828, file: !1250, line: 106, baseType: !159, size: 8, offset: 88)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1828, file: !1250, line: 107, baseType: !159, size: 8, offset: 96)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1828, file: !1250, line: 108, baseType: !159, size: 8, offset: 104)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1828, file: !1250, line: 109, baseType: !159, size: 8, offset: 112)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1828, file: !1250, line: 110, baseType: !159, size: 8, offset: 120)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1828, file: !1250, line: 111, baseType: !159, size: 8, offset: 128)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1828, file: !1250, line: 112, baseType: !159, size: 8, offset: 136)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1828, file: !1250, line: 114, baseType: !159, size: 8, offset: 144)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1828, file: !1250, line: 115, baseType: !159, size: 8, offset: 152)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1828, file: !1250, line: 118, baseType: !159, size: 8, offset: 160)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1828, file: !1250, line: 119, baseType: !159, size: 8, offset: 168)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1828, file: !1250, line: 120, baseType: !159, size: 8, offset: 176)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1828, file: !1250, line: 121, baseType: !159, size: 8, offset: 184)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1828, file: !1250, line: 122, baseType: !159, size: 8, offset: 192)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1793, file: !1250, line: 157, baseType: !61, size: 32, offset: 1440)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1793, file: !1250, line: 158, baseType: !1126, size: 16, offset: 1472)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1793, file: !1250, line: 159, baseType: !1126, size: 16, offset: 1488)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1793, file: !1250, line: 163, baseType: !1126, size: 16, offset: 1504)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1793, file: !1250, line: 164, baseType: !1126, size: 16, offset: 1520)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1793, file: !1250, line: 167, baseType: !159, size: 8, offset: 1536)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1793, file: !1250, line: 168, baseType: !1416, size: 24, offset: 1544)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1793, file: !1250, line: 169, baseType: !159, size: 8, offset: 1568)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1793, file: !1250, line: 170, baseType: !159, size: 8, offset: 1576)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1793, file: !1250, line: 173, baseType: !1126, size: 16, offset: 1584)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1793, file: !1250, line: 174, baseType: !61, size: 32, offset: 1600)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1793, file: !1250, line: 175, baseType: !61, size: 32, offset: 1632)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1793, file: !1250, line: 178, baseType: !91, size: 8, offset: 1664)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1793, file: !1250, line: 179, baseType: !91, size: 8, offset: 1672)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1793, file: !1250, line: 182, baseType: !1427, size: 32, offset: 1696)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1793, file: !1250, line: 186, baseType: !1427, size: 32, offset: 1728)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1793, file: !1250, line: 187, baseType: !1432, size: 32, offset: 1760)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1793, file: !1250, line: 188, baseType: !1432, size: 32, offset: 1792)
!1873 = !DIGlobalVariableExpression(var: !1874, expr: !DIExpression())
!1874 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1577, file: !1578, line: 178, type: !1875, isLocal: false, isDefinition: true)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1378, size: 64, elements: !840)
!1876 = !DIGlobalVariableExpression(var: !1877, expr: !DIExpression())
!1877 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1577, file: !1578, line: 179, type: !1827, isLocal: false, isDefinition: true)
!1878 = !DIGlobalVariableExpression(var: !1879, expr: !DIExpression())
!1879 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1577, file: !1578, line: 204, type: !1764, isLocal: true, isDefinition: true)
!1880 = !DIGlobalVariableExpression(var: !1881, expr: !DIExpression())
!1881 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1577, file: !1578, line: 205, type: !1882, isLocal: false, isDefinition: true)
!1882 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1883, line: 93, baseType: !1884)
!1883 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1883, line: 83, size: 1056, elements: !1885)
!1885 = !{!1886, !1887, !1888, !1889, !1890}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1884, file: !1883, line: 84, baseType: !61, size: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1884, file: !1883, line: 85, baseType: !1619, size: 32, offset: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1884, file: !1883, line: 86, baseType: !88, size: 32, offset: 64)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1884, file: !1883, line: 87, baseType: !1676, size: 928, offset: 96)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1884, file: !1883, line: 92, baseType: !91, size: 8, offset: 1024)
!1891 = !DIGlobalVariableExpression(var: !1892, expr: !DIExpression())
!1892 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1577, file: !1578, line: 208, type: !1792, isLocal: false, isDefinition: true)
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(name: "nor_list", scope: !1577, file: !1578, line: 114, type: !1895, isLocal: true, isDefinition: true)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1897)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1552, line: 125, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 119, size: 1088, elements: !1899)
!1899 = !{!1900, !1901, !1902, !1903, !1905}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1898, file: !1552, line: 120, baseType: !1126, size: 16)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1898, file: !1552, line: 121, baseType: !1126, size: 16, offset: 16)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1898, file: !1552, line: 122, baseType: !61, size: 32, offset: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1898, file: !1552, line: 123, baseType: !1904, size: 512, offset: 64)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1769, size: 512, elements: !840)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1898, file: !1552, line: 124, baseType: !1780, size: 512, offset: 576)
!1906 = !DIGlobalVariableExpression(var: !1907, expr: !DIExpression())
!1907 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1577, file: !1908, line: 42, type: !1909, isLocal: true, isDefinition: true)
!1908 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1910)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1578, line: 66, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1578, line: 63, size: 5600, elements: !1912)
!1912 = !{!1913, !1920}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1911, file: !1578, line: 64, baseType: !1914, size: 96)
!1914 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1484, line: 152, baseType: !1915)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1484, line: 144, size: 96, elements: !1916)
!1916 = !{!1917, !1918, !1919}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1915, file: !1484, line: 145, baseType: !1545, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1915, file: !1484, line: 146, baseType: !1547, size: 16, offset: 32)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1915, file: !1484, line: 150, baseType: !1549, size: 32, offset: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1911, file: !1578, line: 65, baseType: !1921, size: 5504, offset: 96)
!1921 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1552, line: 132, baseType: !1922)
!1922 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1552, line: 128, size: 5504, elements: !1923)
!1923 = !{!1924, !1925, !1926}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1922, file: !1552, line: 129, baseType: !18, size: 32)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1922, file: !1552, line: 130, baseType: !18, size: 32, offset: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1922, file: !1552, line: 131, baseType: !1927, size: 5440, offset: 64)
!1927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1897, size: 5440, elements: !997)
!1928 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1334, line: 79, baseType: !1929)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 32)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1334, line: 77, size: 8, elements: !1931)
!1931 = !{!1932}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1930, file: !1334, line: 78, baseType: !159, size: 8)
!1933 = !DIGlobalVariableExpression(var: !1934, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1934 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !1935, file: !1936, line: 82, type: !7, isLocal: true, isDefinition: true)
!1935 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1936, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1937, retainedTypes: !1943, globals: !1988, splitDebugInlining: false, nameTableKind: None)
!1936 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1937 = !{!1274, !1158, !1938}
!1938 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1275, line: 123, baseType: !18, size: 32, elements: !1939)
!1939 = !{!1940, !1941, !1942}
!1940 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!1941 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!1942 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!1943 = !{!61, !1944, !88, !849}
!1944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1945, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1352, line: 190, baseType: !1946)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 173, size: 1376, elements: !1947)
!1947 = !{!1948, !1949, !1950, !1956, !1962, !1963, !1970, !1971, !1978, !1979, !1980, !1981}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1946, file: !1352, line: 174, baseType: !61, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1946, file: !1352, line: 175, baseType: !1591, size: 32, offset: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1946, file: !1352, line: 176, baseType: !1951, size: 32, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1334, line: 56, baseType: !1952)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 32)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1334, line: 54, size: 8, elements: !1954)
!1954 = !{!1955}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1953, file: !1334, line: 55, baseType: !159, size: 8)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1946, file: !1352, line: 177, baseType: !1957, size: 32, offset: 96)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1334, line: 46, baseType: !1958)
!1958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1959, size: 32)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1334, line: 44, size: 8, elements: !1960)
!1960 = !{!1961}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1959, file: !1334, line: 45, baseType: !159, size: 8)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1946, file: !1352, line: 178, baseType: !1346, size: 8, offset: 128)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1946, file: !1352, line: 180, baseType: !1964, size: 32, offset: 160)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1352, line: 146, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 143, size: 64, elements: !1967)
!1967 = !{!1968, !1969}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1966, file: !1352, line: 144, baseType: !61, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1966, file: !1352, line: 145, baseType: !61, size: 32, offset: 32)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1946, file: !1352, line: 181, baseType: !1591, size: 32, offset: 192)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1946, file: !1352, line: 182, baseType: !1972, size: 32, offset: 224)
!1972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1973, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1352, line: 152, baseType: !1974)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 149, size: 64, elements: !1975)
!1975 = !{!1976, !1977}
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1974, file: !1352, line: 150, baseType: !61, size: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1974, file: !1352, line: 151, baseType: !61, size: 32, offset: 32)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1946, file: !1352, line: 183, baseType: !1591, size: 32, offset: 256)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1946, file: !1352, line: 184, baseType: !61, size: 32, offset: 288)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1946, file: !1352, line: 185, baseType: !1591, size: 32, offset: 320)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1946, file: !1352, line: 188, baseType: !1982, size: 1024, offset: 352)
!1982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1983, size: 1024, elements: !1375)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1352, line: 170, baseType: !1984)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 167, size: 64, elements: !1985)
!1985 = !{!1986, !1987}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1984, file: !1352, line: 168, baseType: !61, size: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1984, file: !1352, line: 169, baseType: !61, size: 32, offset: 32)
!1988 = !{!1989, !1990}
!1989 = !DIGlobalVariableExpression(var: !1934, expr: !DIExpression())
!1990 = !DIGlobalVariableExpression(var: !1991, expr: !DIExpression())
!1991 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1935, file: !1936, line: 432, type: !1992, isLocal: true, isDefinition: true)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1275, line: 119, baseType: !1274)
!1993 = !DIGlobalVariableExpression(var: !1991, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!1994 = !DIGlobalVariableExpression(var: !1995, expr: !DIExpression())
!1995 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !1996, file: !1997, line: 60, type: !61, isLocal: false, isDefinition: true)
!1996 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1997, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1998, retainedTypes: !1999, globals: !2000, splitDebugInlining: false, nameTableKind: None)
!1997 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!1998 = !{!97}
!1999 = !{!88, !61}
!2000 = !{!1994, !2001, !2003, !2005, !2007, !2009, !2063, !2065}
!2001 = !DIGlobalVariableExpression(var: !2002, expr: !DIExpression())
!2002 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !1996, file: !1997, line: 61, type: !61, isLocal: false, isDefinition: true)
!2003 = !DIGlobalVariableExpression(var: !2004, expr: !DIExpression())
!2004 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !1996, file: !1997, line: 107, type: !61, isLocal: false, isDefinition: true)
!2005 = !DIGlobalVariableExpression(var: !2006, expr: !DIExpression())
!2006 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !1996, file: !1997, line: 132, type: !91, isLocal: false, isDefinition: true)
!2007 = !DIGlobalVariableExpression(var: !2008, expr: !DIExpression())
!2008 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !1996, file: !1997, line: 133, type: !91, isLocal: false, isDefinition: true)
!2009 = !DIGlobalVariableExpression(var: !2010, expr: !DIExpression())
!2010 = distinct !DIGlobalVariable(name: "replaced", scope: !2011, file: !1997, line: 139, type: !61, isLocal: true, isDefinition: true)
!2011 = distinct !DISubprogram(name: "LookupAddress", scope: !1997, file: !1997, line: 135, type: !2012, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1996, retainedNodes: !2014)
!2012 = !DISubroutineType(types: !2013)
!2013 = !{!61, !88, !61}
!2014 = !{!2015, !2016, !2017, !2062}
!2015 = !DILocalVariable(name: "DriveData", arg: 1, scope: !2011, file: !1997, line: 135, type: !88)
!2016 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2011, file: !1997, line: 135, type: !61)
!2017 = !DILocalVariable(name: "D", scope: !2011, file: !1997, line: 137, type: !2018)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1352, line: 190, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 173, size: 1376, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2030, !2036, !2037, !2044, !2045, !2052, !2053, !2054, !2055}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2020, file: !1352, line: 174, baseType: !61, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2020, file: !1352, line: 175, baseType: !1591, size: 32, offset: 32)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2020, file: !1352, line: 176, baseType: !2025, size: 32, offset: 64)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1334, line: 56, baseType: !2026)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 32)
!2027 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1334, line: 54, size: 8, elements: !2028)
!2028 = !{!2029}
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2027, file: !1334, line: 55, baseType: !159, size: 8)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2020, file: !1352, line: 177, baseType: !2031, size: 32, offset: 96)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1334, line: 46, baseType: !2032)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 32)
!2033 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1334, line: 44, size: 8, elements: !2034)
!2034 = !{!2035}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2033, file: !1334, line: 45, baseType: !159, size: 8)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2020, file: !1352, line: 178, baseType: !1346, size: 8, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2020, file: !1352, line: 180, baseType: !2038, size: 32, offset: 160)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1352, line: 146, baseType: !2040)
!2040 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 143, size: 64, elements: !2041)
!2041 = !{!2042, !2043}
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2040, file: !1352, line: 144, baseType: !61, size: 32)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2040, file: !1352, line: 145, baseType: !61, size: 32, offset: 32)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2020, file: !1352, line: 181, baseType: !1591, size: 32, offset: 192)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2020, file: !1352, line: 182, baseType: !2046, size: 32, offset: 224)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 32)
!2047 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1352, line: 152, baseType: !2048)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 149, size: 64, elements: !2049)
!2049 = !{!2050, !2051}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2048, file: !1352, line: 150, baseType: !61, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2048, file: !1352, line: 151, baseType: !61, size: 32, offset: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2020, file: !1352, line: 183, baseType: !1591, size: 32, offset: 256)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2020, file: !1352, line: 184, baseType: !61, size: 32, offset: 288)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2020, file: !1352, line: 185, baseType: !1591, size: 32, offset: 320)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2020, file: !1352, line: 188, baseType: !2056, size: 1024, offset: 352)
!2056 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2057, size: 1024, elements: !1375)
!2057 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1352, line: 170, baseType: !2058)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 167, size: 64, elements: !2059)
!2059 = !{!2060, !2061}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2058, file: !1352, line: 168, baseType: !61, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2058, file: !1352, line: 169, baseType: !61, size: 32, offset: 32)
!2062 = !DILocalVariable(name: "addr", scope: !2011, file: !1997, line: 138, type: !61)
!2063 = !DIGlobalVariableExpression(var: !2064, expr: !DIExpression())
!2064 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !2011, file: !1997, line: 140, type: !61, isLocal: true, isDefinition: true)
!2065 = !DIGlobalVariableExpression(var: !2066, expr: !DIExpression())
!2066 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !2011, file: !1997, line: 141, type: !61, isLocal: true, isDefinition: true)
!2067 = !DIGlobalVariableExpression(var: !2068, expr: !DIExpression())
!2068 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2069, file: !2070, line: 44, type: !2216, isLocal: false, isDefinition: true)
!2069 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2070, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2071, retainedTypes: !2077, globals: !2078, splitDebugInlining: false, nameTableKind: None)
!2070 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2071 = !{!2072}
!2072 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2073, line: 40, baseType: !18, size: 32, elements: !2074)
!2073 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2074 = !{!2075, !2076}
!2075 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2076 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2077 = !{!1131}
!2078 = !{!2067, !2079, !2081, !2083, !2085, !2186, !2188, !2190, !2192, !2194, !2196, !2198, !2200, !2202, !2204, !2206, !2208, !2210, !2212, !2214}
!2079 = !DIGlobalVariableExpression(var: !2080, expr: !DIExpression())
!2080 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2069, file: !2070, line: 65, type: !61, isLocal: false, isDefinition: true)
!2081 = !DIGlobalVariableExpression(var: !2082, expr: !DIExpression())
!2082 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2069, file: !2070, line: 66, type: !61, isLocal: false, isDefinition: true)
!2083 = !DIGlobalVariableExpression(var: !2084, expr: !DIExpression())
!2084 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2069, file: !2070, line: 67, type: !61, isLocal: false, isDefinition: true)
!2085 = !DIGlobalVariableExpression(var: !2086, expr: !DIExpression())
!2086 = distinct !DIGlobalVariable(name: "emi_register", scope: !2069, file: !2070, line: 83, type: !2087, isLocal: false, isDefinition: true)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2089)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2090)
!2090 = !{!2091, !2095, !2096, !2097, !2098, !2102, !2103, !2105, !2106, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2089, file: !56, line: 2448, baseType: !2092, size: 768)
!2092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 768, elements: !2093)
!2093 = !{!2094}
!2094 = !DISubrange(count: 96)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2089, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2089, file: !56, line: 2450, baseType: !980, size: 96, offset: 800)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2089, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2089, file: !56, line: 2452, baseType: !2099, size: 160, offset: 928)
!2099 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 160, elements: !2100)
!2100 = !{!2101}
!2101 = !DISubrange(count: 20)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2089, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2089, file: !56, line: 2454, baseType: !2104, size: 32, offset: 1120)
!2104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 32, elements: !506)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2089, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2089, file: !56, line: 2456, baseType: !2107, size: 480, offset: 1184)
!2107 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 480, elements: !2108)
!2108 = !{!2109}
!2109 = !DISubrange(count: 60)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2089, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2089, file: !56, line: 2458, baseType: !2104, size: 32, offset: 1696)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2089, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2089, file: !56, line: 2460, baseType: !2104, size: 32, offset: 1760)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2089, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2089, file: !56, line: 2462, baseType: !2099, size: 160, offset: 1824)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2089, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2089, file: !56, line: 2464, baseType: !2104, size: 32, offset: 2016)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2089, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2089, file: !56, line: 2466, baseType: !2104, size: 32, offset: 2080)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2089, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2089, file: !56, line: 2468, baseType: !2104, size: 32, offset: 2144)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2089, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2089, file: !56, line: 2470, baseType: !2124, size: 224, offset: 2208)
!2124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 224, elements: !2125)
!2125 = !{!2126}
!2126 = !DISubrange(count: 28)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2089, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2089, file: !56, line: 2472, baseType: !2104, size: 32, offset: 2464)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2089, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2089, file: !56, line: 2474, baseType: !980, size: 96, offset: 2528)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2089, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2089, file: !56, line: 2476, baseType: !2104, size: 32, offset: 2656)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2089, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2089, file: !56, line: 2478, baseType: !2104, size: 32, offset: 2720)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2089, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2089, file: !56, line: 2480, baseType: !2104, size: 32, offset: 2784)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2089, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2089, file: !56, line: 2482, baseType: !980, size: 96, offset: 2848)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2089, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2089, file: !56, line: 2484, baseType: !2104, size: 32, offset: 2976)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2089, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2089, file: !56, line: 2486, baseType: !2104, size: 32, offset: 3040)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2089, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2089, file: !56, line: 2488, baseType: !2099, size: 160, offset: 3104)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2089, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2089, file: !56, line: 2490, baseType: !2104, size: 32, offset: 3296)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2089, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2089, file: !56, line: 2492, baseType: !2149, size: 736, offset: 3360)
!2149 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 736, elements: !2150)
!2150 = !{!2151}
!2151 = !DISubrange(count: 92)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2089, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2089, file: !56, line: 2494, baseType: !2104, size: 32, offset: 4128)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2089, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2089, file: !56, line: 2496, baseType: !2104, size: 32, offset: 4192)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2089, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2089, file: !56, line: 2498, baseType: !2104, size: 32, offset: 4256)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2089, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2089, file: !56, line: 2500, baseType: !2104, size: 32, offset: 4320)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2089, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2089, file: !56, line: 2502, baseType: !2104, size: 32, offset: 4384)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2089, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2089, file: !56, line: 2504, baseType: !2104, size: 32, offset: 4448)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2089, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2089, file: !56, line: 2506, baseType: !2104, size: 32, offset: 4512)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2089, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2089, file: !56, line: 2508, baseType: !2104, size: 32, offset: 4576)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2089, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2089, file: !56, line: 2510, baseType: !2107, size: 480, offset: 4640)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2089, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2089, file: !56, line: 2512, baseType: !2172, size: 992, offset: 5152)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !981, size: 992, elements: !2173)
!2173 = !{!2174}
!2174 = !DISubrange(count: 124)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2089, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2089, file: !56, line: 2514, baseType: !2104, size: 32, offset: 6176)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2089, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2089, file: !56, line: 2516, baseType: !2104, size: 32, offset: 6240)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2089, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2089, file: !56, line: 2518, baseType: !2104, size: 32, offset: 6304)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2089, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2089, file: !56, line: 2520, baseType: !2099, size: 160, offset: 6368)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2089, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2089, file: !56, line: 2522, baseType: !2099, size: 160, offset: 6560)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2089, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2186 = !DIGlobalVariableExpression(var: !2187, expr: !DIExpression())
!2187 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2069, file: !2070, line: 485, type: !60, isLocal: false, isDefinition: true)
!2188 = !DIGlobalVariableExpression(var: !2189, expr: !DIExpression())
!2189 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2069, file: !2070, line: 68, type: !61, isLocal: false, isDefinition: true)
!2190 = !DIGlobalVariableExpression(var: !2191, expr: !DIExpression())
!2191 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2069, file: !2070, line: 69, type: !61, isLocal: false, isDefinition: true)
!2192 = !DIGlobalVariableExpression(var: !2193, expr: !DIExpression())
!2193 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2069, file: !2070, line: 70, type: !61, isLocal: false, isDefinition: true)
!2194 = !DIGlobalVariableExpression(var: !2195, expr: !DIExpression())
!2195 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2069, file: !2070, line: 71, type: !61, isLocal: false, isDefinition: true)
!2196 = !DIGlobalVariableExpression(var: !2197, expr: !DIExpression())
!2197 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2069, file: !2070, line: 72, type: !61, isLocal: false, isDefinition: true)
!2198 = !DIGlobalVariableExpression(var: !2199, expr: !DIExpression())
!2199 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2069, file: !2070, line: 73, type: !61, isLocal: false, isDefinition: true)
!2200 = !DIGlobalVariableExpression(var: !2201, expr: !DIExpression())
!2201 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2069, file: !2070, line: 74, type: !61, isLocal: false, isDefinition: true)
!2202 = !DIGlobalVariableExpression(var: !2203, expr: !DIExpression())
!2203 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2069, file: !2070, line: 75, type: !61, isLocal: false, isDefinition: true)
!2204 = !DIGlobalVariableExpression(var: !2205, expr: !DIExpression())
!2205 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2069, file: !2070, line: 76, type: !61, isLocal: false, isDefinition: true)
!2206 = !DIGlobalVariableExpression(var: !2207, expr: !DIExpression())
!2207 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2069, file: !2070, line: 77, type: !61, isLocal: false, isDefinition: true)
!2208 = !DIGlobalVariableExpression(var: !2209, expr: !DIExpression())
!2209 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2069, file: !2070, line: 78, type: !61, isLocal: false, isDefinition: true)
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2069, file: !2070, line: 79, type: !61, isLocal: false, isDefinition: true)
!2212 = !DIGlobalVariableExpression(var: !2213, expr: !DIExpression())
!2213 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2069, file: !2070, line: 80, type: !61, isLocal: false, isDefinition: true)
!2214 = !DIGlobalVariableExpression(var: !2215, expr: !DIExpression())
!2215 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2069, file: !2070, line: 84, type: !2088, isLocal: false, isDefinition: true)
!2216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2217, size: 416, elements: !76)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2073, line: 60, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2073, line: 45, size: 416, elements: !2219)
!2219 = !{!2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2218, file: !2073, line: 46, baseType: !61, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2218, file: !2073, line: 47, baseType: !61, size: 32, offset: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2218, file: !2073, line: 48, baseType: !61, size: 32, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2218, file: !2073, line: 49, baseType: !61, size: 32, offset: 96)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2218, file: !2073, line: 50, baseType: !61, size: 32, offset: 128)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2218, file: !2073, line: 51, baseType: !61, size: 32, offset: 160)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2218, file: !2073, line: 52, baseType: !61, size: 32, offset: 192)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2218, file: !2073, line: 53, baseType: !61, size: 32, offset: 224)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2218, file: !2073, line: 54, baseType: !61, size: 32, offset: 256)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2218, file: !2073, line: 55, baseType: !61, size: 32, offset: 288)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2218, file: !2073, line: 56, baseType: !61, size: 32, offset: 320)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2218, file: !2073, line: 57, baseType: !61, size: 32, offset: 352)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2218, file: !2073, line: 58, baseType: !61, size: 32, offset: 384)
!2233 = !DIGlobalVariableExpression(var: !2234, expr: !DIExpression())
!2234 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2235, file: !2236, line: 48, type: !2244, isLocal: false, isDefinition: true)
!2235 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2236, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2237, globals: !2243, splitDebugInlining: false, nameTableKind: None)
!2236 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2237 = !{!2238}
!2238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1073, line: 100, baseType: !18, size: 32, elements: !2239)
!2239 = !{!2240, !2241, !2242}
!2240 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2241 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2242 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2243 = !{!2233}
!2244 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1073, line: 104, baseType: !2238)
!2245 = !DIGlobalVariableExpression(var: !2246, expr: !DIExpression())
!2246 = distinct !DIGlobalVariable(name: "heap_end", scope: !2247, file: !2248, line: 101, type: !776, isLocal: true, isDefinition: true)
!2247 = distinct !DISubprogram(name: "_sbrk_r", scope: !2248, file: !2248, line: 98, type: !2249, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !2442)
!2248 = !DIFile(filename: "../../../../../project/mt2523_hdk/templates/no_rtos_initialize_system/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2249 = !DISubroutineType(types: !2250)
!2250 = !{!2251, !2253, !2437}
!2251 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2252, line: 123, baseType: !776)
!2252 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 32)
!2254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2255, line: 377, size: 1920, elements: !2256)
!2255 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2256 = !{!2257, !2258, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2336, !2357, !2361, !2362, !2363, !2364, !2374, !2387, !2388, !2393, !2411, !2412, !2419, !2420, !2436}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2254, file: !2255, line: 381, baseType: !7, size: 32)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2254, file: !2255, line: 386, baseType: !2259, size: 32, offset: 32)
!2259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2260, size: 32)
!2260 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2255, line: 292, baseType: !2261)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2255, line: 186, size: 832, elements: !2262)
!2262 = !{!2263, !2265, !2266, !2267, !2268, !2269, !2274, !2275, !2276, !2277, !2281, !2285, !2292, !2296, !2297, !2298, !2299, !2301, !2303, !2304, !2305, !2307, !2313, !2326}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2261, file: !2255, line: 187, baseType: !2264, size: 32)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !161, size: 32)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2261, file: !2255, line: 188, baseType: !7, size: 32, offset: 32)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2261, file: !2255, line: 189, baseType: !7, size: 32, offset: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2261, file: !2255, line: 190, baseType: !1532, size: 16, offset: 96)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2261, file: !2255, line: 191, baseType: !1532, size: 16, offset: 112)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2261, file: !2255, line: 192, baseType: !2270, size: 64, offset: 128)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2255, line: 122, size: 64, elements: !2271)
!2271 = !{!2272, !2273}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2270, file: !2255, line: 123, baseType: !2264, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2270, file: !2255, line: 124, baseType: !7, size: 32, offset: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2261, file: !2255, line: 193, baseType: !7, size: 32, offset: 192)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2261, file: !2255, line: 196, baseType: !2253, size: 32, offset: 224)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2261, file: !2255, line: 200, baseType: !88, size: 32, offset: 256)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2261, file: !2255, line: 202, baseType: !2278, size: 32, offset: 288)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2279 = !DISubroutineType(types: !2280)
!2280 = !{!7, !2253, !88, !776, !7}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2261, file: !2255, line: 204, baseType: !2282, size: 32, offset: 320)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 32)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!7, !2253, !88, !165, !7}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2261, file: !2255, line: 207, baseType: !2286, size: 32, offset: 352)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 32)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{!2289, !2253, !88, !2289, !7}
!2289 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2290, line: 116, baseType: !2291)
!2290 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2291 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2261, file: !2255, line: 208, baseType: !2293, size: 32, offset: 384)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 32)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{!7, !2253, !88}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2261, file: !2255, line: 211, baseType: !2270, size: 64, offset: 416)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2261, file: !2255, line: 212, baseType: !2264, size: 32, offset: 480)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2261, file: !2255, line: 213, baseType: !7, size: 32, offset: 512)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2261, file: !2255, line: 216, baseType: !2300, size: 24, offset: 544)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 24, elements: !1417)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2261, file: !2255, line: 217, baseType: !2302, size: 8, offset: 568)
!2302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 8, elements: !76)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2261, file: !2255, line: 220, baseType: !2270, size: 64, offset: 576)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2261, file: !2255, line: 223, baseType: !7, size: 32, offset: 640)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2261, file: !2255, line: 224, baseType: !2306, size: 32, offset: 672)
!2306 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2290, line: 46, baseType: !2291)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2261, file: !2255, line: 231, baseType: !2308, size: 32, offset: 704)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2255, line: 35, baseType: !2309)
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2310, line: 34, baseType: !2311)
!2310 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 32)
!2312 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2310, line: 33, flags: DIFlagFwdDecl)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2261, file: !2255, line: 233, baseType: !2314, size: 64, offset: 736)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2290, line: 170, baseType: !2315)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2290, line: 162, size: 64, elements: !2316)
!2316 = !{!2317, !2318}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2315, file: !2290, line: 164, baseType: !7, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2315, file: !2290, line: 169, baseType: !2319, size: 32, offset: 32)
!2319 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2315, file: !2290, line: 165, size: 32, elements: !2320)
!2320 = !{!2321, !2324}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2319, file: !2290, line: 167, baseType: !2322, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2323, line: 116, baseType: !7)
!2323 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2319, file: !2290, line: 168, baseType: !2325, size: 32)
!2325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !161, size: 32, elements: !506)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2261, file: !2255, line: 234, baseType: !7, size: 32, offset: 800)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2254, file: !2255, line: 386, baseType: !2259, size: 32, offset: 64)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2254, file: !2255, line: 386, baseType: !2259, size: 32, offset: 96)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2254, file: !2255, line: 388, baseType: !7, size: 32, offset: 128)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2254, file: !2255, line: 390, baseType: !776, size: 32, offset: 160)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2254, file: !2255, line: 392, baseType: !7, size: 32, offset: 192)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2254, file: !2255, line: 394, baseType: !7, size: 32, offset: 224)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2254, file: !2255, line: 395, baseType: !2334, size: 32, offset: 256)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 32)
!2335 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2255, line: 45, flags: DIFlagFwdDecl)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2254, file: !2255, line: 397, baseType: !2337, size: 32, offset: 288)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 32)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2255, line: 349, size: 128, elements: !2339)
!2339 = !{!2340, !2353, !2354, !2355}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2338, file: !2255, line: 352, baseType: !2341, size: 32)
!2341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2342, size: 32)
!2342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2255, line: 52, size: 192, elements: !2343)
!2343 = !{!2344, !2345, !2346, !2347, !2348, !2349}
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2342, file: !2255, line: 54, baseType: !2341, size: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2342, file: !2255, line: 55, baseType: !7, size: 32, offset: 32)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2342, file: !2255, line: 55, baseType: !7, size: 32, offset: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2342, file: !2255, line: 55, baseType: !7, size: 32, offset: 96)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2342, file: !2255, line: 55, baseType: !7, size: 32, offset: 128)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2342, file: !2255, line: 56, baseType: !2350, size: 32, offset: 160)
!2350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2351, size: 32, elements: !76)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2255, line: 22, baseType: !2352)
!2352 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2338, file: !2255, line: 353, baseType: !7, size: 32, offset: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2338, file: !2255, line: 354, baseType: !2341, size: 32, offset: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2338, file: !2255, line: 355, baseType: !2356, size: 32, offset: 96)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2254, file: !2255, line: 399, baseType: !2358, size: 32, offset: 320)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 32)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{null, !2253}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2254, file: !2255, line: 401, baseType: !7, size: 32, offset: 352)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2254, file: !2255, line: 404, baseType: !7, size: 32, offset: 384)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2254, file: !2255, line: 405, baseType: !776, size: 32, offset: 416)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2254, file: !2255, line: 407, baseType: !2365, size: 32, offset: 448)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 32)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2255, line: 324, size: 192, elements: !2367)
!2367 = !{!2368, !2370, !2371, !2372}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2366, file: !2255, line: 325, baseType: !2369, size: 48)
!2369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1128, size: 48, elements: !1417)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2366, file: !2255, line: 326, baseType: !2369, size: 48, offset: 48)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2366, file: !2255, line: 327, baseType: !1128, size: 16, offset: 96)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2366, file: !2255, line: 330, baseType: !2373, size: 64, offset: 128)
!2373 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2254, file: !2255, line: 408, baseType: !2375, size: 32, offset: 480)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2376, size: 32)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2255, line: 60, size: 288, elements: !2377)
!2377 = !{!2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2376, file: !2255, line: 62, baseType: !7, size: 32)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2376, file: !2255, line: 63, baseType: !7, size: 32, offset: 32)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2376, file: !2255, line: 64, baseType: !7, size: 32, offset: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2376, file: !2255, line: 65, baseType: !7, size: 32, offset: 96)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2376, file: !2255, line: 66, baseType: !7, size: 32, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2376, file: !2255, line: 67, baseType: !7, size: 32, offset: 160)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2376, file: !2255, line: 68, baseType: !7, size: 32, offset: 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2376, file: !2255, line: 69, baseType: !7, size: 32, offset: 224)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2376, file: !2255, line: 70, baseType: !7, size: 32, offset: 256)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2254, file: !2255, line: 409, baseType: !776, size: 32, offset: 512)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2254, file: !2255, line: 412, baseType: !2389, size: 32, offset: 544)
!2389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2390, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2391, size: 32)
!2391 = !DISubroutineType(types: !2392)
!2392 = !{null, !7}
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2254, file: !2255, line: 416, baseType: !2394, size: 32, offset: 576)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 32)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2255, line: 90, size: 1120, elements: !2396)
!2396 = !{!2397, !2398, !2399, !2402}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2395, file: !2255, line: 91, baseType: !2394, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2395, file: !2255, line: 92, baseType: !7, size: 32, offset: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2395, file: !2255, line: 93, baseType: !2400, size: 1024, offset: 64)
!2400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2401, size: 1024, elements: !376)
!2401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 32)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2395, file: !2255, line: 94, baseType: !2403, size: 32, offset: 1088)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2255, line: 79, size: 2112, elements: !2405)
!2405 = !{!2406, !2408, !2409, !2410}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2404, file: !2255, line: 80, baseType: !2407, size: 1024)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !376)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2404, file: !2255, line: 81, baseType: !2407, size: 1024, offset: 1024)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2404, file: !2255, line: 83, baseType: !2351, size: 32, offset: 2048)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2404, file: !2255, line: 86, baseType: !2351, size: 32, offset: 2080)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2254, file: !2255, line: 417, baseType: !2395, size: 1120, offset: 608)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2254, file: !2255, line: 420, baseType: !2413, size: 96, offset: 1728)
!2413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2255, line: 296, size: 96, elements: !2414)
!2414 = !{!2415, !2417, !2418}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2413, file: !2255, line: 298, baseType: !2416, size: 32)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2413, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2413, file: !2255, line: 299, baseType: !7, size: 32, offset: 32)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2413, file: !2255, line: 300, baseType: !2259, size: 32, offset: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2254, file: !2255, line: 421, baseType: !2259, size: 32, offset: 1824)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2254, file: !2255, line: 422, baseType: !2421, size: 32, offset: 1856)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2422, size: 32)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2255, line: 359, size: 640, elements: !2423)
!2423 = !{!2424, !2425, !2426, !2427, !2428, !2430, !2431, !2432, !2433, !2434, !2435}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2422, file: !2255, line: 362, baseType: !776, size: 32)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2422, file: !2255, line: 363, baseType: !2314, size: 64, offset: 32)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2422, file: !2255, line: 364, baseType: !2314, size: 64, offset: 96)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2422, file: !2255, line: 365, baseType: !2314, size: 64, offset: 160)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2422, file: !2255, line: 366, baseType: !2429, size: 64, offset: 224)
!2429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 64, elements: !840)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2422, file: !2255, line: 367, baseType: !7, size: 32, offset: 288)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2422, file: !2255, line: 368, baseType: !2314, size: 64, offset: 320)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2422, file: !2255, line: 369, baseType: !2314, size: 64, offset: 384)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2422, file: !2255, line: 370, baseType: !2314, size: 64, offset: 448)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2422, file: !2255, line: 371, baseType: !2314, size: 64, offset: 512)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2422, file: !2255, line: 372, baseType: !2314, size: 64, offset: 576)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2254, file: !2255, line: 423, baseType: !776, size: 32, offset: 1888)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2323, line: 46, baseType: !18)
!2438 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2439, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2440, globals: !2441, splitDebugInlining: false, nameTableKind: None)
!2439 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2440 = !{!776, !2251}
!2441 = !{!2245}
!2442 = !{!2443, !2444, !2445, !2446}
!2443 = !DILocalVariable(name: "r", arg: 1, scope: !2247, file: !2248, line: 98, type: !2253)
!2444 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2247, file: !2248, line: 98, type: !2437)
!2445 = !DILocalVariable(name: "prev_heap_end", scope: !2247, file: !2248, line: 102, type: !776)
!2446 = !DILocalVariable(name: "stack", scope: !2247, file: !2248, line: 103, type: !776)
!2447 = !DIGlobalVariableExpression(var: !2448, expr: !DIExpression())
!2448 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2449, file: !2450, line: 52, type: !60, isLocal: true, isDefinition: true)
!2449 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2450, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2451, globals: !2554, splitDebugInlining: false, nameTableKind: None)
!2450 = !DIFile(filename: "../../../../../project/mt2523_hdk/templates/no_rtos_initialize_system/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2451 = !{!2452, !2460, !61, !2505, !2510, !2535}
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !970, line: 656, baseType: !2454)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !970, line: 650, size: 128, elements: !2455)
!2455 = !{!2456, !2457, !2458, !2459}
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2454, file: !970, line: 652, baseType: !60, size: 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2454, file: !970, line: 653, baseType: !60, size: 32, offset: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2454, file: !970, line: 654, baseType: !60, size: 32, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2454, file: !970, line: 655, baseType: !324, size: 32, offset: 96)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 32)
!2461 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2462)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2463)
!2463 = !{!2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2474, !2475, !2479, !2480, !2482, !2483, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2502, !2503, !2504}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2462, file: !56, line: 1922, baseType: !60, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2462, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2462, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2462, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2462, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2462, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2462, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2462, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2462, file: !56, line: 1930, baseType: !2473, size: 768, offset: 256)
!2473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !1010)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2462, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2462, file: !56, line: 1932, baseType: !2476, size: 992, offset: 1056)
!2476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2477)
!2477 = !{!2478}
!2478 = !DISubrange(count: 31)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2462, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2462, file: !56, line: 1934, baseType: !2481, size: 416, offset: 2080)
!2481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !860)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2462, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2462, file: !56, line: 1936, baseType: !2484, size: 1568, offset: 2528)
!2484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2485)
!2485 = !{!2486}
!2486 = !DISubrange(count: 49)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2462, file: !56, line: 1937, baseType: !324, size: 32, offset: 4096)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2462, file: !56, line: 1938, baseType: !324, size: 32, offset: 4128)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2462, file: !56, line: 1939, baseType: !324, size: 32, offset: 4160)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2462, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2462, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2462, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2462, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2462, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2462, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2462, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2462, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2462, file: !56, line: 1948, baseType: !2499, size: 3744, offset: 4448)
!2499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2500)
!2500 = !{!2501}
!2501 = !DISubrange(count: 117)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2462, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2462, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2462, file: !56, line: 1951, baseType: !324, size: 32, offset: 8256)
!2505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2506, size: 32)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2507)
!2507 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2508)
!2508 = !{!2509}
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2507, file: !56, line: 2157, baseType: !60, size: 32)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 32)
!2511 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !970, line: 418, baseType: !2512)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !970, line: 395, size: 1120, elements: !2513)
!2513 = !{!2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2512, file: !970, line: 397, baseType: !324, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2512, file: !970, line: 398, baseType: !60, size: 32, offset: 32)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2512, file: !970, line: 399, baseType: !60, size: 32, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2512, file: !970, line: 400, baseType: !60, size: 32, offset: 96)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2512, file: !970, line: 401, baseType: !60, size: 32, offset: 128)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2512, file: !970, line: 402, baseType: !60, size: 32, offset: 160)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2512, file: !970, line: 403, baseType: !980, size: 96, offset: 192)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2512, file: !970, line: 404, baseType: !60, size: 32, offset: 288)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2512, file: !970, line: 405, baseType: !60, size: 32, offset: 320)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2512, file: !970, line: 406, baseType: !60, size: 32, offset: 352)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2512, file: !970, line: 407, baseType: !60, size: 32, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2512, file: !970, line: 408, baseType: !60, size: 32, offset: 416)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2512, file: !970, line: 409, baseType: !60, size: 32, offset: 448)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2512, file: !970, line: 410, baseType: !60, size: 32, offset: 480)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2512, file: !970, line: 411, baseType: !990, size: 64, offset: 512)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2512, file: !970, line: 412, baseType: !324, size: 32, offset: 576)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2512, file: !970, line: 413, baseType: !324, size: 32, offset: 608)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2512, file: !970, line: 414, baseType: !994, size: 128, offset: 640)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2512, file: !970, line: 415, baseType: !996, size: 160, offset: 768)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2512, file: !970, line: 416, baseType: !1000, size: 160, offset: 928)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2512, file: !970, line: 417, baseType: !60, size: 32, offset: 1088)
!2535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2536, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2537)
!2537 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2538)
!2538 = !{!2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2537, file: !56, line: 261, baseType: !60, size: 32)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2537, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2537, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2537, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2537, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2537, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2537, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2537, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2537, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2537, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2537, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2537, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2537, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2537, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2537, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2554 = !{!2555, !2447}
!2555 = !DIGlobalVariableExpression(var: !2556, expr: !DIExpression())
!2556 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2449, file: !2450, line: 50, type: !61, isLocal: false, isDefinition: true)
!2557 = !DIGlobalVariableExpression(var: !2558, expr: !DIExpression())
!2558 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2559, file: !2564, line: 4, type: !2570, isLocal: false, isDefinition: true)
!2559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2560, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2561, splitDebugInlining: false, nameTableKind: None)
!2560 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2561 = !{!2557, !2562, !2568}
!2562 = !DIGlobalVariableExpression(var: !2563, expr: !DIExpression())
!2563 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2559, file: !2564, line: 5, type: !2565, isLocal: false, isDefinition: true)
!2564 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 88, elements: !2566)
!2566 = !{!2567}
!2567 = !DISubrange(count: 11)
!2568 = !DIGlobalVariableExpression(var: !2569, expr: !DIExpression())
!2569 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2559, file: !2564, line: 6, type: !2565, isLocal: false, isDefinition: true)
!2570 = !DICompositeType(tag: DW_TAG_array_type, baseType: !167, size: 248, elements: !2477)
!2571 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2572, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2573, retainedTypes: !2574, splitDebugInlining: false, nameTableKind: None)
!2572 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2573 = !{!741, !747, !751, !874}
!2574 = !{!159}
!2575 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2576, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2577, retainedTypes: !2578, splitDebugInlining: false, nameTableKind: None)
!2576 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2577 = !{!238, !763}
!2578 = !{!950, !2579, !61, !2604, !1032}
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 32)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !970, line: 418, baseType: !2581)
!2581 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !970, line: 395, size: 1120, elements: !2582)
!2582 = !{!2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603}
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2581, file: !970, line: 397, baseType: !324, size: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2581, file: !970, line: 398, baseType: !60, size: 32, offset: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2581, file: !970, line: 399, baseType: !60, size: 32, offset: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2581, file: !970, line: 400, baseType: !60, size: 32, offset: 96)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2581, file: !970, line: 401, baseType: !60, size: 32, offset: 128)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2581, file: !970, line: 402, baseType: !60, size: 32, offset: 160)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2581, file: !970, line: 403, baseType: !980, size: 96, offset: 192)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2581, file: !970, line: 404, baseType: !60, size: 32, offset: 288)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2581, file: !970, line: 405, baseType: !60, size: 32, offset: 320)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2581, file: !970, line: 406, baseType: !60, size: 32, offset: 352)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2581, file: !970, line: 407, baseType: !60, size: 32, offset: 384)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2581, file: !970, line: 408, baseType: !60, size: 32, offset: 416)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2581, file: !970, line: 409, baseType: !60, size: 32, offset: 448)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2581, file: !970, line: 410, baseType: !60, size: 32, offset: 480)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2581, file: !970, line: 411, baseType: !990, size: 64, offset: 512)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2581, file: !970, line: 412, baseType: !324, size: 32, offset: 576)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2581, file: !970, line: 413, baseType: !324, size: 32, offset: 608)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2581, file: !970, line: 414, baseType: !994, size: 128, offset: 640)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2581, file: !970, line: 415, baseType: !996, size: 160, offset: 768)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2581, file: !970, line: 416, baseType: !1000, size: 160, offset: 928)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2581, file: !970, line: 417, baseType: !60, size: 32, offset: 1088)
!2604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2605, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !970, line: 378, baseType: !2606)
!2606 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !970, line: 363, size: 28704, elements: !2607)
!2607 = !{!2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2606, file: !970, line: 365, baseType: !1007, size: 256)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2606, file: !970, line: 366, baseType: !1009, size: 768, offset: 256)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2606, file: !970, line: 367, baseType: !1007, size: 256, offset: 1024)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2606, file: !970, line: 368, baseType: !1009, size: 768, offset: 1280)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2606, file: !970, line: 369, baseType: !1007, size: 256, offset: 2048)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2606, file: !970, line: 370, baseType: !1009, size: 768, offset: 2304)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2606, file: !970, line: 371, baseType: !1007, size: 256, offset: 3072)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2606, file: !970, line: 372, baseType: !1009, size: 768, offset: 3328)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2606, file: !970, line: 373, baseType: !1007, size: 256, offset: 4096)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2606, file: !970, line: 374, baseType: !1020, size: 1792, offset: 4352)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2606, file: !970, line: 375, baseType: !1024, size: 1920, offset: 6144)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2606, file: !970, line: 376, baseType: !1028, size: 20608, offset: 8064)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2606, file: !970, line: 377, baseType: !60, size: 32, offset: 28672)
!2621 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2622, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2622 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2623 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2624, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2624 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2625 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2626, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2627, splitDebugInlining: false, nameTableKind: None)
!2626 = !DIFile(filename: "../../../../../project/mt2523_hdk/templates/no_rtos_initialize_system/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2627 = !{!674, !725, !741, !747, !751, !394}
!2628 = !{!"Ubuntu clang version 14.0.6"}
!2629 = !{i32 7, !"Dwarf Version", i32 2}
!2630 = !{i32 2, !"Debug Info Version", i32 3}
!2631 = !{i32 1, !"wchar_size", i32 4}
!2632 = !{i32 1, !"min_enum_size", i32 4}
!2633 = !{i32 1, !"branch-target-enforcement", i32 0}
!2634 = !{i32 1, !"sign-return-address", i32 0}
!2635 = !{i32 1, !"sign-return-address-all", i32 0}
!2636 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2637 = !{i32 7, !"frame-pointer", i32 2}
!2638 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2639, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2642)
!2639 = !DISubroutineType(types: !2640)
!2640 = !{!2641}
!2641 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2642 = !{!2643, !2645}
!2643 = !DILocalVariable(name: "region", scope: !2638, file: !3, line: 55, type: !2644)
!2644 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2645 = !DILocalVariable(name: "irq_flag", scope: !2638, file: !3, line: 56, type: !61)
!2646 = !DILocation(line: 59, column: 16, scope: !2638)
!2647 = !DILocation(line: 0, scope: !2638)
!2648 = !DILocation(line: 62, column: 9, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 62, column: 9)
!2650 = !{i8 0, i8 2}
!2651 = !DILocation(line: 62, column: 9, scope: !2638)
!2652 = !DILocation(line: 64, column: 9, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 62, column: 39)
!2654 = !DILocation(line: 66, column: 9, scope: !2653)
!2655 = !DILocation(line: 69, column: 24, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2649, file: !3, line: 67, column: 12)
!2657 = !DILocation(line: 72, column: 9, scope: !2656)
!2658 = !DILocation(line: 77, column: 5, scope: !2638)
!2659 = !DILocation(line: 80, column: 22, scope: !2638)
!2660 = !DILocation(line: 81, column: 28, scope: !2638)
!2661 = !DILocation(line: 84, column: 19, scope: !2638)
!2662 = !DILocation(line: 85, column: 23, scope: !2638)
!2663 = !DILocation(line: 88, column: 5, scope: !2664)
!2664 = distinct !DILexicalBlock(scope: !2638, file: !3, line: 88, column: 5)
!2665 = !DILocation(line: 90, column: 9, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 88, column: 81)
!2667 = distinct !DILexicalBlock(scope: !2664, file: !3, line: 88, column: 5)
!2668 = !DILocation(line: 90, column: 38, scope: !2666)
!2669 = !DILocation(line: 91, column: 9, scope: !2666)
!2670 = !DILocation(line: 91, column: 42, scope: !2666)
!2671 = !DILocation(line: 94, column: 45, scope: !2666)
!2672 = !DILocation(line: 94, column: 47, scope: !2666)
!2673 = !DILocation(line: 95, column: 49, scope: !2666)
!2674 = !DILocation(line: 95, column: 51, scope: !2666)
!2675 = !DILocation(line: 88, column: 77, scope: !2667)
!2676 = !DILocation(line: 88, column: 46, scope: !2667)
!2677 = distinct !{!2677, !2663, !2678}
!2678 = !DILocation(line: 96, column: 5, scope: !2664)
!2679 = !DILocation(line: 99, column: 1, scope: !2638)
!2680 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2639, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2681)
!2681 = !{!2682}
!2682 = !DILocalVariable(name: "irq_flag", scope: !2680, file: !3, line: 329, type: !61)
!2683 = !DILocation(line: 332, column: 16, scope: !2680)
!2684 = !DILocation(line: 0, scope: !2680)
!2685 = !DILocation(line: 335, column: 21, scope: !2680)
!2686 = !DILocation(line: 336, column: 21, scope: !2680)
!2687 = !DILocation(line: 339, column: 21, scope: !2680)
!2688 = !DILocation(line: 340, column: 21, scope: !2680)
!2689 = !DILocation(line: 434, column: 3, scope: !2690, inlinedAt: !2692)
!2690 = distinct !DISubprogram(name: "__ISB", scope: !2691, file: !2691, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !345)
!2691 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!2692 = distinct !DILocation(line: 343, column: 5, scope: !2680)
!2693 = !{i64 442757}
!2694 = !DILocation(line: 346, column: 5, scope: !2680)
!2695 = !DILocation(line: 348, column: 5, scope: !2680)
!2696 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2639, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2697)
!2697 = !{!2698}
!2698 = !DILocalVariable(name: "region", scope: !2696, file: !3, line: 103, type: !2644)
!2699 = !DILocation(line: 107, column: 5, scope: !2696)
!2700 = !DILocation(line: 110, column: 22, scope: !2696)
!2701 = !DILocation(line: 111, column: 28, scope: !2696)
!2702 = !DILocation(line: 114, column: 19, scope: !2696)
!2703 = !DILocation(line: 115, column: 23, scope: !2696)
!2704 = !DILocation(line: 0, scope: !2696)
!2705 = !DILocation(line: 118, column: 5, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2696, file: !3, line: 118, column: 5)
!2707 = !DILocation(line: 120, column: 9, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 118, column: 81)
!2709 = distinct !DILexicalBlock(scope: !2706, file: !3, line: 118, column: 5)
!2710 = !DILocation(line: 120, column: 38, scope: !2708)
!2711 = !DILocation(line: 121, column: 9, scope: !2708)
!2712 = !DILocation(line: 121, column: 42, scope: !2708)
!2713 = !DILocation(line: 124, column: 45, scope: !2708)
!2714 = !DILocation(line: 124, column: 47, scope: !2708)
!2715 = !DILocation(line: 125, column: 49, scope: !2708)
!2716 = !DILocation(line: 125, column: 51, scope: !2708)
!2717 = !DILocation(line: 118, column: 77, scope: !2709)
!2718 = !DILocation(line: 118, column: 46, scope: !2709)
!2719 = distinct !{!2719, !2705, !2720}
!2720 = !DILocation(line: 126, column: 5, scope: !2706)
!2721 = !DILocation(line: 129, column: 20, scope: !2696)
!2722 = !DILocation(line: 131, column: 5, scope: !2696)
!2723 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2639, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !345)
!2724 = !DILocation(line: 137, column: 45, scope: !2725)
!2725 = distinct !DILexicalBlock(scope: !2723, file: !3, line: 137, column: 9)
!2726 = !DILocation(line: 137, column: 28, scope: !2725)
!2727 = !DILocation(line: 137, column: 9, scope: !2723)
!2728 = !DILocation(line: 142, column: 22, scope: !2723)
!2729 = !DILocation(line: 145, column: 28, scope: !2723)
!2730 = !DILocation(line: 145, column: 19, scope: !2723)
!2731 = !DILocation(line: 147, column: 5, scope: !2723)
!2732 = !DILocation(line: 0, scope: !2723)
!2733 = !DILocation(line: 148, column: 1, scope: !2723)
!2734 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2639, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2735)
!2735 = !{!2736}
!2736 = !DILocalVariable(name: "irq_flag", scope: !2734, file: !3, line: 152, type: !61)
!2737 = !DILocation(line: 155, column: 16, scope: !2734)
!2738 = !DILocation(line: 0, scope: !2734)
!2739 = !DILocation(line: 158, column: 16, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2734, file: !3, line: 158, column: 9)
!2741 = !DILocation(line: 158, column: 26, scope: !2740)
!2742 = !DILocation(line: 158, column: 9, scope: !2734)
!2743 = !DILocation(line: 160, column: 9, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2740, file: !3, line: 158, column: 49)
!2745 = !DILocation(line: 161, column: 5, scope: !2744)
!2746 = !DILocation(line: 164, column: 22, scope: !2734)
!2747 = !DILocation(line: 167, column: 28, scope: !2734)
!2748 = !DILocation(line: 167, column: 19, scope: !2734)
!2749 = !DILocation(line: 170, column: 5, scope: !2734)
!2750 = !DILocation(line: 172, column: 5, scope: !2734)
!2751 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !2752, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2754)
!2752 = !DISubroutineType(types: !2753)
!2753 = !{!2641, !2644}
!2754 = !{!2755}
!2755 = !DILocalVariable(name: "region", arg: 1, scope: !2751, file: !3, line: 175, type: !2644)
!2756 = !DILocation(line: 0, scope: !2751)
!2757 = !DILocation(line: 178, column: 16, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2751, file: !3, line: 178, column: 9)
!2759 = !DILocation(line: 178, column: 9, scope: !2751)
!2760 = !DILocation(line: 183, column: 9, scope: !2761)
!2761 = distinct !DILexicalBlock(scope: !2751, file: !3, line: 183, column: 9)
!2762 = !DILocation(line: 183, column: 38, scope: !2761)
!2763 = !DILocation(line: 183, column: 9, scope: !2751)
!2764 = !DILocation(line: 184, column: 38, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2761, file: !3, line: 183, column: 62)
!2766 = !DILocation(line: 184, column: 32, scope: !2765)
!2767 = !DILocation(line: 190, column: 32, scope: !2751)
!2768 = !DILocation(line: 190, column: 23, scope: !2751)
!2769 = !DILocation(line: 192, column: 5, scope: !2751)
!2770 = !DILocation(line: 193, column: 1, scope: !2751)
!2771 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !2752, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2772)
!2772 = !{!2773}
!2773 = !DILocalVariable(name: "region", arg: 1, scope: !2771, file: !3, line: 195, type: !2644)
!2774 = !DILocation(line: 0, scope: !2771)
!2775 = !DILocation(line: 198, column: 16, scope: !2776)
!2776 = distinct !DILexicalBlock(scope: !2771, file: !3, line: 198, column: 9)
!2777 = !DILocation(line: 198, column: 9, scope: !2771)
!2778 = !DILocation(line: 203, column: 35, scope: !2771)
!2779 = !DILocation(line: 203, column: 31, scope: !2771)
!2780 = !DILocation(line: 203, column: 28, scope: !2771)
!2781 = !DILocation(line: 206, column: 32, scope: !2771)
!2782 = !DILocation(line: 206, column: 23, scope: !2771)
!2783 = !DILocation(line: 209, column: 41, scope: !2771)
!2784 = !DILocation(line: 209, column: 43, scope: !2771)
!2785 = !DILocation(line: 210, column: 45, scope: !2771)
!2786 = !DILocation(line: 210, column: 47, scope: !2771)
!2787 = !DILocation(line: 212, column: 5, scope: !2771)
!2788 = !DILocation(line: 213, column: 1, scope: !2771)
!2789 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !2790, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2793)
!2790 = !DISubroutineType(types: !2791)
!2791 = !{!2641, !2792}
!2792 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!2793 = !{!2794}
!2794 = !DILocalVariable(name: "cache_size", arg: 1, scope: !2789, file: !3, line: 215, type: !2792)
!2795 = !DILocation(line: 0, scope: !2789)
!2796 = !DILocation(line: 218, column: 20, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2789, file: !3, line: 218, column: 9)
!2798 = !DILocation(line: 218, column: 9, scope: !2789)
!2799 = !DILocation(line: 223, column: 22, scope: !2789)
!2800 = !DILocation(line: 224, column: 37, scope: !2789)
!2801 = !DILocation(line: 224, column: 22, scope: !2789)
!2802 = !DILocation(line: 227, column: 20, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2789, file: !3, line: 227, column: 9)
!2804 = !DILocation(line: 227, column: 9, scope: !2789)
!2805 = !DILocation(line: 228, column: 26, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 227, column: 43)
!2807 = !DILocation(line: 229, column: 5, scope: !2806)
!2808 = !DILocation(line: 232, column: 28, scope: !2789)
!2809 = !DILocation(line: 232, column: 19, scope: !2789)
!2810 = !DILocation(line: 234, column: 5, scope: !2789)
!2811 = !DILocation(line: 235, column: 1, scope: !2789)
!2812 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !2813, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2822)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!2641, !2644, !2815}
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2817)
!2817 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !2818)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !2819)
!2819 = !{!2820, !2821}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !2818, file: !6, line: 220, baseType: !61, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !2818, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!2822 = !{!2823, !2824}
!2823 = !DILocalVariable(name: "region", arg: 1, scope: !2812, file: !3, line: 237, type: !2644)
!2824 = !DILocalVariable(name: "region_config", arg: 2, scope: !2812, file: !3, line: 237, type: !2815)
!2825 = !DILocation(line: 0, scope: !2812)
!2826 = !DILocation(line: 240, column: 16, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 240, column: 9)
!2828 = !DILocation(line: 240, column: 9, scope: !2812)
!2829 = !DILocation(line: 245, column: 23, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 245, column: 9)
!2831 = !DILocation(line: 245, column: 9, scope: !2812)
!2832 = !DILocation(line: 250, column: 24, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 250, column: 9)
!2834 = !DILocation(line: 250, column: 45, scope: !2833)
!2835 = !DILocation(line: 250, column: 9, scope: !2812)
!2836 = !DILocation(line: 251, column: 9, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2833, file: !3, line: 250, column: 81)
!2838 = !DILocation(line: 256, column: 24, scope: !2839)
!2839 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 256, column: 9)
!2840 = !DILocation(line: 256, column: 42, scope: !2839)
!2841 = !DILocation(line: 256, column: 9, scope: !2812)
!2842 = !DILocation(line: 257, column: 9, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 256, column: 78)
!2844 = !DILocation(line: 262, column: 5, scope: !2812)
!2845 = !DILocation(line: 262, column: 34, scope: !2812)
!2846 = !DILocation(line: 263, column: 55, scope: !2812)
!2847 = !DILocation(line: 263, column: 93, scope: !2812)
!2848 = !DILocation(line: 263, column: 76, scope: !2812)
!2849 = !DILocation(line: 263, column: 5, scope: !2812)
!2850 = !DILocation(line: 263, column: 38, scope: !2812)
!2851 = !DILocation(line: 266, column: 34, scope: !2812)
!2852 = !DILocation(line: 269, column: 45, scope: !2812)
!2853 = !DILocation(line: 269, column: 41, scope: !2812)
!2854 = !DILocation(line: 269, column: 43, scope: !2812)
!2855 = !DILocation(line: 270, column: 49, scope: !2812)
!2856 = !DILocation(line: 270, column: 45, scope: !2812)
!2857 = !DILocation(line: 270, column: 47, scope: !2812)
!2858 = !DILocation(line: 272, column: 5, scope: !2812)
!2859 = !DILocation(line: 273, column: 1, scope: !2812)
!2860 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !2861, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2863)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!2641, !61}
!2863 = !{!2864, !2865}
!2864 = !DILocalVariable(name: "address", arg: 1, scope: !2860, file: !3, line: 275, type: !61)
!2865 = !DILocalVariable(name: "irq_flag", scope: !2860, file: !3, line: 277, type: !61)
!2866 = !DILocation(line: 0, scope: !2860)
!2867 = !DILocation(line: 280, column: 17, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2860, file: !3, line: 280, column: 9)
!2869 = !DILocation(line: 280, column: 9, scope: !2860)
!2870 = !DILocation(line: 284, column: 16, scope: !2860)
!2871 = !DILocation(line: 287, column: 32, scope: !2860)
!2872 = !DILocation(line: 287, column: 21, scope: !2860)
!2873 = !DILocation(line: 288, column: 21, scope: !2860)
!2874 = !DILocation(line: 434, column: 3, scope: !2690, inlinedAt: !2875)
!2875 = distinct !DILocation(line: 291, column: 5, scope: !2860)
!2876 = !DILocation(line: 294, column: 5, scope: !2860)
!2877 = !DILocation(line: 296, column: 5, scope: !2860)
!2878 = !DILocation(line: 297, column: 1, scope: !2860)
!2879 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !2880, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2882)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{!2641, !61, !61}
!2882 = !{!2883, !2884, !2885, !2886}
!2883 = !DILocalVariable(name: "address", arg: 1, scope: !2879, file: !3, line: 299, type: !61)
!2884 = !DILocalVariable(name: "length", arg: 2, scope: !2879, file: !3, line: 299, type: !61)
!2885 = !DILocalVariable(name: "irq_flag", scope: !2879, file: !3, line: 301, type: !61)
!2886 = !DILocalVariable(name: "end_address", scope: !2879, file: !3, line: 302, type: !61)
!2887 = !DILocation(line: 0, scope: !2879)
!2888 = !DILocation(line: 302, column: 36, scope: !2879)
!2889 = !DILocation(line: 305, column: 47, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 305, column: 9)
!2891 = !DILocation(line: 310, column: 16, scope: !2879)
!2892 = !DILocation(line: 313, column: 20, scope: !2879)
!2893 = !DILocation(line: 313, column: 5, scope: !2879)
!2894 = !DILocation(line: 314, column: 9, scope: !2895)
!2895 = distinct !DILexicalBlock(scope: !2879, file: !3, line: 313, column: 35)
!2896 = !DILocation(line: 315, column: 17, scope: !2895)
!2897 = distinct !{!2897, !2893, !2898}
!2898 = !DILocation(line: 316, column: 5, scope: !2879)
!2899 = !DILocation(line: 434, column: 3, scope: !2690, inlinedAt: !2900)
!2900 = distinct !DILocation(line: 319, column: 5, scope: !2879)
!2901 = !DILocation(line: 322, column: 5, scope: !2879)
!2902 = !DILocation(line: 324, column: 5, scope: !2879)
!2903 = !DILocation(line: 325, column: 1, scope: !2879)
!2904 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !2861, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2905)
!2905 = !{!2906, !2907}
!2906 = !DILocalVariable(name: "address", arg: 1, scope: !2904, file: !3, line: 351, type: !61)
!2907 = !DILocalVariable(name: "irq_flag", scope: !2904, file: !3, line: 353, type: !61)
!2908 = !DILocation(line: 0, scope: !2904)
!2909 = !DILocation(line: 356, column: 17, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 356, column: 9)
!2911 = !DILocation(line: 356, column: 9, scope: !2904)
!2912 = !DILocation(line: 361, column: 16, scope: !2904)
!2913 = !DILocation(line: 364, column: 32, scope: !2904)
!2914 = !DILocation(line: 364, column: 21, scope: !2904)
!2915 = !DILocation(line: 365, column: 21, scope: !2904)
!2916 = !DILocation(line: 434, column: 3, scope: !2690, inlinedAt: !2917)
!2917 = distinct !DILocation(line: 368, column: 5, scope: !2904)
!2918 = !DILocation(line: 371, column: 5, scope: !2904)
!2919 = !DILocation(line: 373, column: 5, scope: !2904)
!2920 = !DILocation(line: 374, column: 1, scope: !2904)
!2921 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !2880, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2922)
!2922 = !{!2923, !2924, !2925, !2926}
!2923 = !DILocalVariable(name: "address", arg: 1, scope: !2921, file: !3, line: 376, type: !61)
!2924 = !DILocalVariable(name: "length", arg: 2, scope: !2921, file: !3, line: 376, type: !61)
!2925 = !DILocalVariable(name: "irq_flag", scope: !2921, file: !3, line: 378, type: !61)
!2926 = !DILocalVariable(name: "end_address", scope: !2921, file: !3, line: 379, type: !61)
!2927 = !DILocation(line: 0, scope: !2921)
!2928 = !DILocation(line: 379, column: 36, scope: !2921)
!2929 = !DILocation(line: 382, column: 47, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2921, file: !3, line: 382, column: 9)
!2931 = !DILocation(line: 387, column: 16, scope: !2921)
!2932 = !DILocation(line: 390, column: 20, scope: !2921)
!2933 = !DILocation(line: 390, column: 5, scope: !2921)
!2934 = !DILocation(line: 391, column: 9, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2921, file: !3, line: 390, column: 35)
!2936 = !DILocation(line: 392, column: 17, scope: !2935)
!2937 = distinct !{!2937, !2933, !2938}
!2938 = !DILocation(line: 393, column: 5, scope: !2921)
!2939 = !DILocation(line: 434, column: 3, scope: !2690, inlinedAt: !2940)
!2940 = distinct !DILocation(line: 396, column: 5, scope: !2921)
!2941 = !DILocation(line: 399, column: 5, scope: !2921)
!2942 = !DILocation(line: 401, column: 5, scope: !2921)
!2943 = !DILocation(line: 402, column: 1, scope: !2921)
!2944 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2639, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2945)
!2945 = !{!2946}
!2946 = !DILocalVariable(name: "irq_flag", scope: !2944, file: !3, line: 406, type: !61)
!2947 = !DILocation(line: 409, column: 16, scope: !2944)
!2948 = !DILocation(line: 0, scope: !2944)
!2949 = !DILocation(line: 412, column: 21, scope: !2944)
!2950 = !DILocation(line: 413, column: 21, scope: !2944)
!2951 = !DILocation(line: 434, column: 3, scope: !2690, inlinedAt: !2952)
!2952 = distinct !DILocation(line: 416, column: 5, scope: !2944)
!2953 = !DILocation(line: 419, column: 5, scope: !2944)
!2954 = !DILocation(line: 421, column: 5, scope: !2944)
!2955 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !2956, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2958)
!2956 = !DISubroutineType(types: !2957)
!2957 = !{!91, !61}
!2958 = !{!2959, !2960}
!2959 = !DILocalVariable(name: "address", arg: 1, scope: !2955, file: !3, line: 424, type: !61)
!2960 = !DILocalVariable(name: "region", scope: !2955, file: !3, line: 426, type: !2644)
!2961 = !DILocation(line: 0, scope: !2955)
!2962 = !DILocation(line: 429, column: 18, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 429, column: 9)
!2964 = !DILocation(line: 429, column: 28, scope: !2963)
!2965 = !DILocation(line: 429, column: 9, scope: !2955)
!2966 = !DILocation(line: 435, column: 20, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2968, file: !3, line: 435, column: 13)
!2968 = distinct !DILexicalBlock(scope: !2969, file: !3, line: 433, column: 81)
!2969 = distinct !DILexicalBlock(scope: !2970, file: !3, line: 433, column: 5)
!2970 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 433, column: 5)
!2971 = !DILocation(line: 435, column: 41, scope: !2967)
!2972 = !DILocation(line: 435, column: 36, scope: !2967)
!2973 = !DILocation(line: 435, column: 13, scope: !2968)
!2974 = !DILocation(line: 436, column: 30, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 436, column: 17)
!2976 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 435, column: 53)
!2977 = !DILocation(line: 436, column: 59, scope: !2975)
!2978 = !DILocation(line: 436, column: 26, scope: !2975)
!2979 = !DILocation(line: 436, column: 85, scope: !2975)
!2980 = !DILocation(line: 436, column: 99, scope: !2975)
!2981 = !DILocation(line: 436, column: 97, scope: !2975)
!2982 = !DILocation(line: 436, column: 17, scope: !2976)
!2983 = !DILocation(line: 433, column: 77, scope: !2969)
!2984 = !DILocation(line: 433, column: 46, scope: !2969)
!2985 = !DILocation(line: 433, column: 5, scope: !2970)
!2986 = distinct !{!2986, !2985, !2987}
!2987 = !DILocation(line: 440, column: 5, scope: !2970)
!2988 = !DILocation(line: 442, column: 1, scope: !2955)
!2989 = distinct !DISubprogram(name: "hal_gpt_init", scope: !95, file: !95, line: 95, type: !2990, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !2994)
!2990 = !DISubroutineType(types: !2991)
!2991 = !{!2992, !2993}
!2992 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !98, line: 393, baseType: !97)
!2993 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !106, line: 854, baseType: !105)
!2994 = !{!2995}
!2995 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2989, file: !95, line: 95, type: !2993)
!2996 = !DILocation(line: 0, scope: !2989)
!2997 = !DILocation(line: 98, column: 9, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2989, file: !95, line: 98, column: 9)
!2999 = !DILocation(line: 98, column: 9, scope: !2989)
!3000 = !DILocation(line: 102, column: 10, scope: !3001)
!3001 = distinct !DILexicalBlock(scope: !2989, file: !95, line: 102, column: 9)
!3002 = !DILocation(line: 102, column: 34, scope: !3001)
!3003 = !DILocation(line: 102, column: 49, scope: !3001)
!3004 = !DILocation(line: 102, column: 69, scope: !3001)
!3005 = !DILocation(line: 103, column: 38, scope: !3001)
!3006 = !DILocation(line: 102, column: 9, scope: !2989)
!3007 = !DILocation(line: 109, column: 12, scope: !2989)
!3008 = !DILocation(line: 109, column: 5, scope: !2989)
!3009 = !DILocation(line: 112, column: 5, scope: !2989)
!3010 = !DILocation(line: 115, column: 44, scope: !2989)
!3011 = !DILocation(line: 118, column: 5, scope: !2989)
!3012 = !DILocation(line: 118, column: 23, scope: !2989)
!3013 = !DILocation(line: 118, column: 35, scope: !2989)
!3014 = !DILocation(line: 121, column: 42, scope: !2989)
!3015 = !DILocation(line: 121, column: 38, scope: !2989)
!3016 = !DILocation(line: 121, column: 5, scope: !2989)
!3017 = !DILocation(line: 121, column: 17, scope: !2989)
!3018 = !DILocation(line: 121, column: 35, scope: !2989)
!3019 = !DILocation(line: 123, column: 5, scope: !3020)
!3020 = distinct !DILexicalBlock(scope: !2989, file: !95, line: 123, column: 5)
!3021 = !DILocation(line: 123, column: 5, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3020, file: !95, line: 123, column: 5)
!3023 = !DILocation(line: 123, column: 5, scope: !3024)
!3024 = distinct !DILexicalBlock(scope: !3022, file: !95, line: 123, column: 5)
!3025 = !DILocation(line: 131, column: 1, scope: !2989)
!3026 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !95, file: !95, line: 81, type: !3027, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3029)
!3027 = !DISubroutineType(types: !3028)
!3028 = !{!91, !2993}
!3029 = !{!3030}
!3030 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3026, file: !95, line: 81, type: !2993)
!3031 = !DILocation(line: 0, scope: !3026)
!3032 = !DILocation(line: 84, column: 25, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3026, file: !95, line: 84, column: 9)
!3034 = !DILocation(line: 84, column: 35, scope: !3033)
!3035 = !DILocation(line: 84, column: 45, scope: !3033)
!3036 = !DILocation(line: 93, column: 1, scope: !3026)
!3037 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !95, file: !95, line: 133, type: !2990, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3038)
!3038 = !{!3039}
!3039 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3037, file: !95, line: 133, type: !2993)
!3040 = !DILocation(line: 0, scope: !3037)
!3041 = !DILocation(line: 136, column: 9, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3037, file: !95, line: 136, column: 9)
!3043 = !DILocation(line: 136, column: 9, scope: !3037)
!3044 = !DILocation(line: 140, column: 9, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3037, file: !95, line: 140, column: 9)
!3046 = !DILocation(line: 140, column: 33, scope: !3045)
!3047 = !DILocation(line: 140, column: 48, scope: !3045)
!3048 = !DILocation(line: 140, column: 9, scope: !3037)
!3049 = !DILocation(line: 146, column: 12, scope: !3037)
!3050 = !DILocation(line: 146, column: 5, scope: !3037)
!3051 = !DILocation(line: 149, column: 29, scope: !3037)
!3052 = !DILocation(line: 149, column: 44, scope: !3037)
!3053 = !DILocation(line: 151, column: 29, scope: !3037)
!3054 = !DILocation(line: 151, column: 5, scope: !3037)
!3055 = !DILocation(line: 153, column: 5, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3037, file: !95, line: 153, column: 5)
!3057 = !DILocation(line: 159, column: 5, scope: !3037)
!3058 = !DILocation(line: 160, column: 1, scope: !3037)
!3059 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !95, file: !95, line: 163, type: !3060, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3063)
!3060 = !DISubroutineType(types: !3061)
!3061 = !{!2992, !3062, !1094}
!3062 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !106, line: 860, baseType: !119)
!3063 = !{!3064, !3065}
!3064 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3059, file: !95, line: 163, type: !3062)
!3065 = !DILocalVariable(name: "count", arg: 2, scope: !3059, file: !95, line: 163, type: !1094)
!3066 = !DILocation(line: 0, scope: !3059)
!3067 = !DILocation(line: 166, column: 9, scope: !3059)
!3068 = !DILocation(line: 167, column: 44, scope: !3069)
!3069 = distinct !DILexicalBlock(scope: !3070, file: !95, line: 167, column: 13)
!3070 = distinct !DILexicalBlock(scope: !3071, file: !95, line: 166, column: 51)
!3071 = distinct !DILexicalBlock(scope: !3059, file: !95, line: 166, column: 9)
!3072 = !DILocation(line: 167, column: 59, scope: !3069)
!3073 = !DILocation(line: 167, column: 13, scope: !3070)
!3074 = !DILocation(line: 170, column: 38, scope: !3075)
!3075 = distinct !DILexicalBlock(scope: !3069, file: !95, line: 167, column: 79)
!3076 = !DILocation(line: 170, column: 13, scope: !3075)
!3077 = !DILocation(line: 172, column: 59, scope: !3075)
!3078 = !DILocation(line: 173, column: 9, scope: !3075)
!3079 = !DILocation(line: 175, column: 36, scope: !3070)
!3080 = !DILocation(line: 175, column: 18, scope: !3070)
!3081 = !DILocation(line: 177, column: 5, scope: !3070)
!3082 = !DILocation(line: 179, column: 44, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !95, line: 179, column: 13)
!3084 = distinct !DILexicalBlock(scope: !3085, file: !95, line: 178, column: 55)
!3085 = distinct !DILexicalBlock(scope: !3071, file: !95, line: 178, column: 14)
!3086 = !DILocation(line: 179, column: 59, scope: !3083)
!3087 = !DILocation(line: 179, column: 13, scope: !3084)
!3088 = !DILocation(line: 182, column: 38, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3083, file: !95, line: 179, column: 79)
!3090 = !DILocation(line: 182, column: 13, scope: !3089)
!3091 = !DILocation(line: 184, column: 59, scope: !3089)
!3092 = !DILocation(line: 186, column: 9, scope: !3089)
!3093 = !DILocation(line: 188, column: 68, scope: !3084)
!3094 = !DILocation(line: 188, column: 50, scope: !3084)
!3095 = !DILocation(line: 188, column: 18, scope: !3084)
!3096 = !DILocation(line: 0, scope: !3071)
!3097 = !DILocation(line: 193, column: 5, scope: !3059)
!3098 = !DILocation(line: 194, column: 1, scope: !3059)
!3099 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !95, file: !95, line: 196, type: !3100, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3102)
!3100 = !DISubroutineType(types: !3101)
!3101 = !{!2992, !61, !61, !1094}
!3102 = !{!3103, !3104, !3105}
!3103 = !DILocalVariable(name: "start_count", arg: 1, scope: !3099, file: !95, line: 196, type: !61)
!3104 = !DILocalVariable(name: "end_count", arg: 2, scope: !3099, file: !95, line: 196, type: !61)
!3105 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3099, file: !95, line: 196, type: !1094)
!3106 = !DILocation(line: 0, scope: !3099)
!3107 = !DILocation(line: 198, column: 24, scope: !3108)
!3108 = distinct !DILexicalBlock(scope: !3099, file: !95, line: 198, column: 9)
!3109 = !DILocation(line: 198, column: 9, scope: !3099)
!3110 = !DILocation(line: 0, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3099, file: !95, line: 202, column: 9)
!3112 = !DILocation(line: 208, column: 5, scope: !3099)
!3113 = !DILocation(line: 209, column: 1, scope: !3099)
!3114 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !95, file: !95, line: 211, type: !3115, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3118)
!3115 = !DISubroutineType(types: !3116)
!3116 = !{!2992, !2993, !3117}
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 32)
!3118 = !{!3119, !3120}
!3119 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3114, file: !95, line: 211, type: !2993)
!3120 = !DILocalVariable(name: "running_status", arg: 2, scope: !3114, file: !95, line: 211, type: !3117)
!3121 = !DILocation(line: 0, scope: !3114)
!3122 = !DILocation(line: 213, column: 18, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3114, file: !95, line: 213, column: 9)
!3124 = !DILocation(line: 213, column: 9, scope: !3114)
!3125 = !DILocation(line: 217, column: 47, scope: !3114)
!3126 = !DILocation(line: 217, column: 21, scope: !3114)
!3127 = !DILocation(line: 219, column: 5, scope: !3114)
!3128 = !DILocation(line: 220, column: 1, scope: !3114)
!3129 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !95, file: !95, line: 222, type: !3130, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3132)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!2992, !2993, !151, !88}
!3132 = !{!3133, !3134, !3135}
!3133 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3129, file: !95, line: 222, type: !2993)
!3134 = !DILocalVariable(name: "callback", arg: 2, scope: !3129, file: !95, line: 223, type: !151)
!3135 = !DILocalVariable(name: "user_data", arg: 3, scope: !3129, file: !95, line: 224, type: !88)
!3136 = !DILocation(line: 0, scope: !3129)
!3137 = !DILocation(line: 227, column: 9, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3129, file: !95, line: 227, column: 9)
!3139 = !DILocation(line: 227, column: 9, scope: !3129)
!3140 = !DILocation(line: 231, column: 34, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3129, file: !95, line: 231, column: 9)
!3142 = !DILocation(line: 231, column: 49, scope: !3141)
!3143 = !DILocation(line: 231, column: 69, scope: !3141)
!3144 = !DILocation(line: 232, column: 38, scope: !3141)
!3145 = !DILocation(line: 232, column: 53, scope: !3141)
!3146 = !DILocation(line: 231, column: 9, scope: !3129)
!3147 = !DILocation(line: 237, column: 18, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3129, file: !95, line: 237, column: 9)
!3149 = !DILocation(line: 237, column: 9, scope: !3129)
!3150 = !DILocation(line: 245, column: 46, scope: !3129)
!3151 = !DILocation(line: 245, column: 56, scope: !3129)
!3152 = !DILocation(line: 246, column: 46, scope: !3129)
!3153 = !DILocation(line: 246, column: 56, scope: !3129)
!3154 = !DILocation(line: 248, column: 5, scope: !3129)
!3155 = !DILocation(line: 250, column: 5, scope: !3129)
!3156 = !DILocation(line: 252, column: 1, scope: !3129)
!3157 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !95, file: !95, line: 256, type: !3158, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3161)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{!2992, !2993, !61, !3160}
!3160 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !98, line: 383, baseType: !142)
!3161 = !{!3162, !3163, !3164, !3165}
!3162 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3157, file: !95, line: 256, type: !2993)
!3163 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3157, file: !95, line: 256, type: !61)
!3164 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3157, file: !95, line: 256, type: !3160)
!3165 = !DILocalVariable(name: "mask", scope: !3157, file: !95, line: 259, type: !60)
!3166 = !DILocation(line: 0, scope: !3157)
!3167 = !DILocation(line: 259, column: 5, scope: !3157)
!3168 = !DILocation(line: 259, column: 23, scope: !3157)
!3169 = !DILocation(line: 261, column: 9, scope: !3170)
!3170 = distinct !DILexicalBlock(scope: !3157, file: !95, line: 261, column: 9)
!3171 = !DILocation(line: 261, column: 9, scope: !3157)
!3172 = !DILocation(line: 265, column: 34, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3157, file: !95, line: 265, column: 9)
!3174 = !DILocation(line: 265, column: 49, scope: !3173)
!3175 = !DILocation(line: 266, column: 13, scope: !3173)
!3176 = !DILocation(line: 266, column: 41, scope: !3173)
!3177 = !DILocation(line: 266, column: 56, scope: !3173)
!3178 = !DILocation(line: 265, column: 9, scope: !3157)
!3179 = !DILocation(line: 271, column: 25, scope: !3180)
!3180 = distinct !DILexicalBlock(scope: !3157, file: !95, line: 271, column: 9)
!3181 = !DILocation(line: 271, column: 9, scope: !3157)
!3182 = !DILocation(line: 282, column: 12, scope: !3157)
!3183 = !DILocation(line: 282, column: 10, scope: !3157)
!3184 = !DILocation(line: 284, column: 5, scope: !3157)
!3185 = !DILocation(line: 286, column: 5, scope: !3157)
!3186 = !DILocation(line: 286, column: 23, scope: !3157)
!3187 = !DILocation(line: 286, column: 34, scope: !3157)
!3188 = !DILocation(line: 287, column: 5, scope: !3157)
!3189 = !DILocation(line: 287, column: 23, scope: !3157)
!3190 = !DILocation(line: 287, column: 34, scope: !3157)
!3191 = !DILocation(line: 290, column: 5, scope: !3157)
!3192 = !DILocation(line: 290, column: 23, scope: !3157)
!3193 = !DILocation(line: 290, column: 37, scope: !3157)
!3194 = !DILocation(line: 291, column: 39, scope: !3157)
!3195 = !DILocation(line: 291, column: 5, scope: !3157)
!3196 = !DILocation(line: 291, column: 23, scope: !3157)
!3197 = !DILocation(line: 291, column: 37, scope: !3157)
!3198 = !DILocation(line: 292, column: 5, scope: !3157)
!3199 = !DILocation(line: 292, column: 23, scope: !3157)
!3200 = !DILocation(line: 292, column: 37, scope: !3157)
!3201 = !DILocation(line: 297, column: 47, scope: !3157)
!3202 = !DILocation(line: 298, column: 33, scope: !3157)
!3203 = !DILocation(line: 296, column: 5, scope: !3157)
!3204 = !DILocation(line: 296, column: 23, scope: !3157)
!3205 = !DILocation(line: 296, column: 31, scope: !3157)
!3206 = !DILocation(line: 300, column: 5, scope: !3157)
!3207 = !DILocation(line: 300, column: 29, scope: !3157)
!3208 = distinct !{!3208, !3206, !3209}
!3209 = !DILocation(line: 300, column: 39, scope: !3157)
!3210 = !DILocation(line: 301, column: 23, scope: !3157)
!3211 = !DILocation(line: 301, column: 33, scope: !3157)
!3212 = !DILocation(line: 302, column: 5, scope: !3157)
!3213 = !DILocation(line: 302, column: 23, scope: !3157)
!3214 = !DILocation(line: 302, column: 34, scope: !3157)
!3215 = !DILocation(line: 303, column: 44, scope: !3157)
!3216 = !DILocation(line: 305, column: 28, scope: !3157)
!3217 = !DILocation(line: 305, column: 5, scope: !3157)
!3218 = !DILocation(line: 306, column: 5, scope: !3157)
!3219 = !DILocation(line: 307, column: 1, scope: !3157)
!3220 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !95, file: !95, line: 310, type: !3221, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3223)
!3221 = !DISubroutineType(types: !3222)
!3222 = !{!2992, !61}
!3223 = !{!3224}
!3224 = !DILocalVariable(name: "ms", arg: 1, scope: !3220, file: !95, line: 310, type: !61)
!3225 = !DILocation(line: 0, scope: !3220)
!3226 = !DILocation(line: 313, column: 40, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3220, file: !95, line: 313, column: 9)
!3228 = !DILocation(line: 313, column: 55, scope: !3227)
!3229 = !DILocation(line: 313, column: 9, scope: !3220)
!3230 = !DILocation(line: 316, column: 34, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3227, file: !95, line: 313, column: 75)
!3232 = !DILocation(line: 316, column: 9, scope: !3231)
!3233 = !DILocation(line: 317, column: 55, scope: !3231)
!3234 = !DILocation(line: 318, column: 5, scope: !3231)
!3235 = !DILocation(line: 320, column: 20, scope: !3220)
!3236 = !DILocation(line: 320, column: 45, scope: !3220)
!3237 = !DILocation(line: 320, column: 5, scope: !3220)
!3238 = !DILocation(line: 322, column: 5, scope: !3220)
!3239 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !95, file: !95, line: 327, type: !3158, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3240)
!3240 = !{!3241, !3242, !3243, !3244}
!3241 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3239, file: !95, line: 327, type: !2993)
!3242 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3239, file: !95, line: 327, type: !61)
!3243 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3239, file: !95, line: 327, type: !3160)
!3244 = !DILocalVariable(name: "mask", scope: !3239, file: !95, line: 329, type: !60)
!3245 = !DILocation(line: 0, scope: !3239)
!3246 = !DILocation(line: 329, column: 5, scope: !3239)
!3247 = !DILocation(line: 329, column: 23, scope: !3239)
!3248 = !DILocation(line: 331, column: 9, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3239, file: !95, line: 331, column: 9)
!3250 = !DILocation(line: 331, column: 9, scope: !3239)
!3251 = !DILocation(line: 336, column: 34, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3239, file: !95, line: 336, column: 9)
!3253 = !DILocation(line: 336, column: 49, scope: !3252)
!3254 = !DILocation(line: 337, column: 13, scope: !3252)
!3255 = !DILocation(line: 337, column: 41, scope: !3252)
!3256 = !DILocation(line: 337, column: 56, scope: !3252)
!3257 = !DILocation(line: 336, column: 9, scope: !3239)
!3258 = !DILocation(line: 348, column: 5, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3239, file: !95, line: 348, column: 5)
!3260 = !DILocation(line: 349, column: 29, scope: !3239)
!3261 = !DILocation(line: 349, column: 49, scope: !3239)
!3262 = !DILocation(line: 351, column: 12, scope: !3239)
!3263 = !DILocation(line: 351, column: 10, scope: !3239)
!3264 = !DILocation(line: 353, column: 5, scope: !3239)
!3265 = !DILocation(line: 355, column: 5, scope: !3239)
!3266 = !DILocation(line: 355, column: 23, scope: !3239)
!3267 = !DILocation(line: 355, column: 34, scope: !3239)
!3268 = !DILocation(line: 356, column: 5, scope: !3239)
!3269 = !DILocation(line: 356, column: 23, scope: !3239)
!3270 = !DILocation(line: 356, column: 34, scope: !3239)
!3271 = !DILocation(line: 359, column: 5, scope: !3239)
!3272 = !DILocation(line: 359, column: 23, scope: !3239)
!3273 = !DILocation(line: 359, column: 37, scope: !3239)
!3274 = !DILocation(line: 360, column: 39, scope: !3239)
!3275 = !DILocation(line: 360, column: 5, scope: !3239)
!3276 = !DILocation(line: 360, column: 23, scope: !3239)
!3277 = !DILocation(line: 360, column: 37, scope: !3239)
!3278 = !DILocation(line: 361, column: 5, scope: !3239)
!3279 = !DILocation(line: 361, column: 23, scope: !3239)
!3280 = !DILocation(line: 361, column: 37, scope: !3239)
!3281 = !DILocation(line: 366, column: 47, scope: !3239)
!3282 = !DILocation(line: 367, column: 33, scope: !3239)
!3283 = !DILocation(line: 365, column: 5, scope: !3239)
!3284 = !DILocation(line: 365, column: 23, scope: !3239)
!3285 = !DILocation(line: 365, column: 31, scope: !3239)
!3286 = !DILocation(line: 369, column: 5, scope: !3239)
!3287 = !DILocation(line: 369, column: 29, scope: !3239)
!3288 = distinct !{!3288, !3286, !3289}
!3289 = !DILocation(line: 369, column: 39, scope: !3239)
!3290 = !DILocation(line: 370, column: 23, scope: !3239)
!3291 = !DILocation(line: 370, column: 33, scope: !3239)
!3292 = !DILocation(line: 371, column: 5, scope: !3239)
!3293 = !DILocation(line: 371, column: 23, scope: !3239)
!3294 = !DILocation(line: 371, column: 34, scope: !3239)
!3295 = !DILocation(line: 373, column: 28, scope: !3239)
!3296 = !DILocation(line: 373, column: 5, scope: !3239)
!3297 = !DILocation(line: 375, column: 44, scope: !3239)
!3298 = !DILocation(line: 377, column: 5, scope: !3239)
!3299 = !DILocation(line: 378, column: 1, scope: !3239)
!3300 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !95, file: !95, line: 382, type: !3221, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3301)
!3301 = !{!3302}
!3302 = !DILocalVariable(name: "us", arg: 1, scope: !3300, file: !95, line: 382, type: !61)
!3303 = !DILocation(line: 0, scope: !3300)
!3304 = !DILocation(line: 385, column: 40, scope: !3305)
!3305 = distinct !DILexicalBlock(scope: !3300, file: !95, line: 385, column: 9)
!3306 = !DILocation(line: 385, column: 55, scope: !3305)
!3307 = !DILocation(line: 385, column: 9, scope: !3300)
!3308 = !DILocation(line: 388, column: 34, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3305, file: !95, line: 385, column: 75)
!3310 = !DILocation(line: 388, column: 9, scope: !3309)
!3311 = !DILocation(line: 390, column: 55, scope: !3309)
!3312 = !DILocation(line: 391, column: 5, scope: !3309)
!3313 = !DILocation(line: 392, column: 20, scope: !3300)
!3314 = !DILocation(line: 392, column: 45, scope: !3300)
!3315 = !DILocation(line: 392, column: 5, scope: !3300)
!3316 = !DILocation(line: 394, column: 5, scope: !3300)
!3317 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !95, file: !95, line: 398, type: !2990, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3318)
!3318 = !{!3319, !3320}
!3319 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3317, file: !95, line: 398, type: !2993)
!3320 = !DILocalVariable(name: "mask", scope: !3317, file: !95, line: 400, type: !60)
!3321 = !DILocation(line: 0, scope: !3317)
!3322 = !DILocation(line: 400, column: 5, scope: !3317)
!3323 = !DILocation(line: 400, column: 23, scope: !3317)
!3324 = !DILocation(line: 402, column: 9, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3317, file: !95, line: 402, column: 9)
!3326 = !DILocation(line: 402, column: 9, scope: !3317)
!3327 = !DILocation(line: 413, column: 12, scope: !3317)
!3328 = !DILocation(line: 413, column: 10, scope: !3317)
!3329 = !DILocation(line: 415, column: 5, scope: !3317)
!3330 = !DILocation(line: 415, column: 23, scope: !3317)
!3331 = !DILocation(line: 415, column: 34, scope: !3317)
!3332 = !DILocation(line: 418, column: 5, scope: !3317)
!3333 = !DILocation(line: 418, column: 23, scope: !3317)
!3334 = !DILocation(line: 418, column: 34, scope: !3317)
!3335 = !DILocation(line: 420, column: 5, scope: !3317)
!3336 = !DILocation(line: 420, column: 23, scope: !3317)
!3337 = !DILocation(line: 420, column: 35, scope: !3317)
!3338 = !DILocation(line: 422, column: 29, scope: !3317)
!3339 = !DILocation(line: 422, column: 44, scope: !3317)
!3340 = !DILocation(line: 423, column: 28, scope: !3317)
!3341 = !DILocation(line: 423, column: 5, scope: !3317)
!3342 = !DILocation(line: 425, column: 33, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3317, file: !95, line: 425, column: 9)
!3344 = !DILocation(line: 425, column: 9, scope: !3317)
!3345 = !DILocation(line: 426, column: 9, scope: !3346)
!3346 = distinct !DILexicalBlock(scope: !3347, file: !95, line: 426, column: 9)
!3347 = distinct !DILexicalBlock(scope: !3343, file: !95, line: 425, column: 62)
!3348 = !DILocation(line: 427, column: 53, scope: !3347)
!3349 = !DILocation(line: 428, column: 5, scope: !3347)
!3350 = !DILocation(line: 430, column: 1, scope: !3317)
!3351 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !95, file: !95, line: 434, type: !3352, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3354)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!2992, !1094}
!3354 = !{!3355, !3356, !3357}
!3355 = !DILocalVariable(name: "handle", arg: 1, scope: !3351, file: !95, line: 434, type: !1094)
!3356 = !DILocalVariable(name: "timer", scope: !3351, file: !95, line: 436, type: !61)
!3357 = !DILocalVariable(name: "mask", scope: !3351, file: !95, line: 437, type: !61)
!3358 = !DILocation(line: 0, scope: !3351)
!3359 = !DILocation(line: 439, column: 24, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3351, file: !95, line: 439, column: 9)
!3361 = !DILocation(line: 439, column: 41, scope: !3360)
!3362 = !DILocation(line: 439, column: 9, scope: !3351)
!3363 = !DILocation(line: 443, column: 16, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3351, file: !95, line: 443, column: 9)
!3365 = !DILocation(line: 443, column: 9, scope: !3351)
!3366 = !DILocation(line: 448, column: 12, scope: !3351)
!3367 = !DILocation(line: 450, column: 15, scope: !3351)
!3368 = !DILocation(line: 451, column: 21, scope: !3351)
!3369 = !DILocation(line: 451, column: 13, scope: !3351)
!3370 = !DILocation(line: 452, column: 33, scope: !3351)
!3371 = !DILocation(line: 452, column: 41, scope: !3351)
!3372 = !DILocation(line: 453, column: 36, scope: !3351)
!3373 = !DILocation(line: 455, column: 5, scope: !3351)
!3374 = !DILocation(line: 456, column: 5, scope: !3351)
!3375 = !DILocation(line: 457, column: 1, scope: !3351)
!3376 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !95, file: !95, line: 459, type: !3221, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3377)
!3377 = !{!3378, !3379}
!3378 = !DILocalVariable(name: "handle", arg: 1, scope: !3376, file: !95, line: 459, type: !61)
!3379 = !DILocalVariable(name: "timer", scope: !3376, file: !95, line: 461, type: !60)
!3380 = !DILocation(line: 0, scope: !3376)
!3381 = !DILocation(line: 461, column: 5, scope: !3376)
!3382 = !DILocation(line: 461, column: 23, scope: !3376)
!3383 = !DILocation(line: 463, column: 17, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3376, file: !95, line: 463, column: 9)
!3385 = !DILocation(line: 463, column: 37, scope: !3384)
!3386 = !DILocation(line: 463, column: 9, scope: !3376)
!3387 = !DILocation(line: 467, column: 20, scope: !3376)
!3388 = !DILocation(line: 467, column: 11, scope: !3376)
!3389 = !DILocation(line: 469, column: 24, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3376, file: !95, line: 469, column: 9)
!3391 = !DILocation(line: 469, column: 41, scope: !3390)
!3392 = !DILocation(line: 469, column: 9, scope: !3376)
!3393 = !DILocation(line: 473, column: 30, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3376, file: !95, line: 473, column: 9)
!3395 = !DILocation(line: 473, column: 37, scope: !3394)
!3396 = !DILocation(line: 473, column: 9, scope: !3376)
!3397 = !DILocation(line: 477, column: 30, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3376, file: !95, line: 477, column: 9)
!3399 = !DILocation(line: 477, column: 37, scope: !3398)
!3400 = !DILocation(line: 477, column: 45, scope: !3398)
!3401 = !DILocation(line: 477, column: 9, scope: !3376)
!3402 = !DILocation(line: 481, column: 26, scope: !3376)
!3403 = !DILocation(line: 481, column: 33, scope: !3376)
!3404 = !DILocation(line: 481, column: 41, scope: !3376)
!3405 = !DILocation(line: 482, column: 36, scope: !3376)
!3406 = !DILocation(line: 484, column: 5, scope: !3376)
!3407 = !DILocation(line: 485, column: 1, scope: !3376)
!3408 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !95, file: !95, line: 487, type: !3409, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3411)
!3409 = !DISubroutineType(types: !3410)
!3410 = !{!2992, !61, !61, !151, !88}
!3411 = !{!3412, !3413, !3414, !3415, !3416, !3417, !3418}
!3412 = !DILocalVariable(name: "handle", arg: 1, scope: !3408, file: !95, line: 487, type: !61)
!3413 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3408, file: !95, line: 487, type: !61)
!3414 = !DILocalVariable(name: "callback", arg: 3, scope: !3408, file: !95, line: 487, type: !151)
!3415 = !DILocalVariable(name: "user_data", arg: 4, scope: !3408, file: !95, line: 487, type: !88)
!3416 = !DILocalVariable(name: "current_time", scope: !3408, file: !95, line: 489, type: !61)
!3417 = !DILocalVariable(name: "mask", scope: !3408, file: !95, line: 490, type: !61)
!3418 = !DILocalVariable(name: "timer", scope: !3408, file: !95, line: 491, type: !61)
!3419 = !DILocation(line: 0, scope: !3408)
!3420 = !DILocation(line: 493, column: 17, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3408, file: !95, line: 493, column: 9)
!3422 = !DILocation(line: 493, column: 37, scope: !3421)
!3423 = !DILocation(line: 493, column: 9, scope: !3408)
!3424 = !DILocation(line: 497, column: 20, scope: !3408)
!3425 = !DILocation(line: 503, column: 37, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3408, file: !95, line: 503, column: 9)
!3427 = !DILocation(line: 503, column: 9, scope: !3408)
!3428 = !DILocation(line: 507, column: 37, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3408, file: !95, line: 507, column: 9)
!3430 = !DILocation(line: 507, column: 45, scope: !3429)
!3431 = !DILocation(line: 507, column: 9, scope: !3408)
!3432 = !DILocation(line: 511, column: 25, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3408, file: !95, line: 511, column: 9)
!3434 = !DILocation(line: 511, column: 9, scope: !3408)
!3435 = !DILocation(line: 516, column: 12, scope: !3408)
!3436 = !DILocation(line: 519, column: 30, scope: !3408)
!3437 = !DILocation(line: 521, column: 24, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3408, file: !95, line: 521, column: 9)
!3439 = !DILocation(line: 521, column: 38, scope: !3438)
!3440 = !DILocation(line: 521, column: 9, scope: !3408)
!3441 = !DILocation(line: 522, column: 9, scope: !3442)
!3442 = distinct !DILexicalBlock(scope: !3438, file: !95, line: 521, column: 48)
!3443 = !DILocation(line: 523, column: 9, scope: !3442)
!3444 = !DILocation(line: 524, column: 38, scope: !3442)
!3445 = !DILocation(line: 525, column: 5, scope: !3442)
!3446 = !DILocation(line: 526, column: 5, scope: !3408)
!3447 = !DILocation(line: 528, column: 23, scope: !3448)
!3448 = distinct !DILexicalBlock(scope: !3408, file: !95, line: 528, column: 8)
!3449 = !DILocation(line: 528, column: 41, scope: !3448)
!3450 = !DILocation(line: 528, column: 8, scope: !3408)
!3451 = !DILocation(line: 529, column: 51, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3448, file: !95, line: 528, column: 51)
!3453 = !DILocation(line: 529, column: 24, scope: !3452)
!3454 = !DILocation(line: 530, column: 5, scope: !3452)
!3455 = !DILocation(line: 0, scope: !3448)
!3456 = !DILocation(line: 534, column: 34, scope: !3408)
!3457 = !DILocation(line: 535, column: 39, scope: !3408)
!3458 = !DILocation(line: 537, column: 49, scope: !3408)
!3459 = !DILocation(line: 538, column: 80, scope: !3408)
!3460 = !DILocation(line: 538, column: 33, scope: !3408)
!3461 = !DILocation(line: 538, column: 49, scope: !3408)
!3462 = !DILocation(line: 539, column: 50, scope: !3408)
!3463 = !DILocation(line: 539, column: 61, scope: !3408)
!3464 = !DILocation(line: 540, column: 50, scope: !3408)
!3465 = !DILocation(line: 540, column: 61, scope: !3408)
!3466 = !DILocation(line: 542, column: 5, scope: !3408)
!3467 = !DILocation(line: 546, column: 30, scope: !3408)
!3468 = !DILocation(line: 548, column: 5, scope: !3408)
!3469 = !DILocation(line: 550, column: 5, scope: !3408)
!3470 = !DILocation(line: 551, column: 1, scope: !3408)
!3471 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !95, file: !95, line: 553, type: !3221, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3472)
!3472 = !{!3473, !3474, !3475, !3476}
!3473 = !DILocalVariable(name: "handle", arg: 1, scope: !3471, file: !95, line: 553, type: !61)
!3474 = !DILocalVariable(name: "current_time", scope: !3471, file: !95, line: 555, type: !61)
!3475 = !DILocalVariable(name: "mask", scope: !3471, file: !95, line: 556, type: !61)
!3476 = !DILocalVariable(name: "timer", scope: !3471, file: !95, line: 557, type: !61)
!3477 = !DILocation(line: 0, scope: !3471)
!3478 = !DILocation(line: 559, column: 17, scope: !3479)
!3479 = distinct !DILexicalBlock(scope: !3471, file: !95, line: 559, column: 9)
!3480 = !DILocation(line: 559, column: 37, scope: !3479)
!3481 = !DILocation(line: 559, column: 9, scope: !3471)
!3482 = !DILocation(line: 563, column: 20, scope: !3471)
!3483 = !DILocation(line: 565, column: 37, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3471, file: !95, line: 565, column: 9)
!3485 = !DILocation(line: 565, column: 48, scope: !3484)
!3486 = !DILocation(line: 565, column: 9, scope: !3471)
!3487 = !DILocation(line: 569, column: 37, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3471, file: !95, line: 569, column: 9)
!3489 = !DILocation(line: 569, column: 45, scope: !3488)
!3490 = !DILocation(line: 569, column: 9, scope: !3471)
!3491 = !DILocation(line: 574, column: 12, scope: !3471)
!3492 = !DILocation(line: 577, column: 30, scope: !3471)
!3493 = !DILocation(line: 578, column: 5, scope: !3471)
!3494 = !DILocation(line: 579, column: 30, scope: !3471)
!3495 = !DILocation(line: 581, column: 23, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3471, file: !95, line: 581, column: 8)
!3497 = !DILocation(line: 581, column: 41, scope: !3496)
!3498 = !DILocation(line: 581, column: 8, scope: !3471)
!3499 = !DILocation(line: 582, column: 51, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3496, file: !95, line: 581, column: 51)
!3501 = !DILocation(line: 582, column: 24, scope: !3500)
!3502 = !DILocation(line: 583, column: 5, scope: !3500)
!3503 = !DILocation(line: 0, scope: !3496)
!3504 = !DILocation(line: 587, column: 34, scope: !3471)
!3505 = !DILocation(line: 588, column: 39, scope: !3471)
!3506 = !DILocation(line: 590, column: 44, scope: !3471)
!3507 = !DILocation(line: 592, column: 24, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3471, file: !95, line: 592, column: 9)
!3509 = !DILocation(line: 592, column: 44, scope: !3508)
!3510 = !DILocation(line: 592, column: 9, scope: !3471)
!3511 = !DILocation(line: 593, column: 9, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3508, file: !95, line: 592, column: 50)
!3513 = !DILocation(line: 594, column: 5, scope: !3512)
!3514 = !DILocation(line: 598, column: 30, scope: !3471)
!3515 = !DILocation(line: 599, column: 5, scope: !3471)
!3516 = !DILocation(line: 601, column: 5, scope: !3471)
!3517 = !DILocation(line: 603, column: 1, scope: !3471)
!3518 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !95, file: !95, line: 605, type: !3519, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3521)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!2992, !61, !1094}
!3521 = !{!3522, !3523, !3524, !3525, !3526}
!3522 = !DILocalVariable(name: "handle", arg: 1, scope: !3518, file: !95, line: 605, type: !61)
!3523 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3518, file: !95, line: 605, type: !1094)
!3524 = !DILocalVariable(name: "current_time", scope: !3518, file: !95, line: 607, type: !61)
!3525 = !DILocalVariable(name: "mask", scope: !3518, file: !95, line: 608, type: !61)
!3526 = !DILocalVariable(name: "timer", scope: !3518, file: !95, line: 609, type: !61)
!3527 = !DILocation(line: 0, scope: !3518)
!3528 = !DILocation(line: 611, column: 17, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3518, file: !95, line: 611, column: 9)
!3530 = !DILocation(line: 611, column: 37, scope: !3529)
!3531 = !DILocation(line: 611, column: 9, scope: !3518)
!3532 = !DILocation(line: 615, column: 20, scope: !3518)
!3533 = !DILocation(line: 617, column: 37, scope: !3534)
!3534 = distinct !DILexicalBlock(scope: !3518, file: !95, line: 617, column: 9)
!3535 = !DILocation(line: 617, column: 45, scope: !3534)
!3536 = !DILocation(line: 617, column: 9, scope: !3518)
!3537 = !DILocation(line: 622, column: 12, scope: !3518)
!3538 = !DILocation(line: 624, column: 35, scope: !3518)
!3539 = !DILocation(line: 624, column: 51, scope: !3518)
!3540 = !DILocation(line: 624, column: 76, scope: !3518)
!3541 = !DILocation(line: 624, column: 49, scope: !3518)
!3542 = !DILocation(line: 626, column: 37, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3518, file: !95, line: 626, column: 9)
!3544 = !DILocation(line: 626, column: 9, scope: !3518)
!3545 = !DILocation(line: 0, scope: !3543)
!3546 = !DILocation(line: 632, column: 5, scope: !3518)
!3547 = !DILocation(line: 634, column: 5, scope: !3518)
!3548 = !DILocation(line: 636, column: 1, scope: !3518)
!3549 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !171, file: !171, line: 56, type: !3550, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3552)
!3550 = !DISubroutineType(types: !3551)
!3551 = !{!61, !61, !61, !61}
!3552 = !{!3553, !3554, !3555, !3556, !3558, !3559}
!3553 = !DILocalVariable(name: "mul1", arg: 1, scope: !3549, file: !171, line: 56, type: !61)
!3554 = !DILocalVariable(name: "mul2", arg: 2, scope: !3549, file: !171, line: 56, type: !61)
!3555 = !DILocalVariable(name: "div", arg: 3, scope: !3549, file: !171, line: 56, type: !61)
!3556 = !DILocalVariable(name: "data1", scope: !3549, file: !171, line: 58, type: !3557)
!3557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !508)
!3558 = !DILocalVariable(name: "data2", scope: !3549, file: !171, line: 59, type: !3557)
!3559 = !DILocalVariable(name: "result", scope: !3549, file: !171, line: 60, type: !3557)
!3560 = !DILocation(line: 0, scope: !3549)
!3561 = !DILocation(line: 63, column: 22, scope: !3549)
!3562 = !DILocation(line: 63, column: 32, scope: !3549)
!3563 = !DILocation(line: 64, column: 23, scope: !3549)
!3564 = !DILocation(line: 64, column: 40, scope: !3549)
!3565 = !DILocation(line: 66, column: 27, scope: !3549)
!3566 = !DILocation(line: 67, column: 27, scope: !3549)
!3567 = !DILocation(line: 67, column: 44, scope: !3549)
!3568 = !DILocation(line: 69, column: 26, scope: !3549)
!3569 = !DILocation(line: 70, column: 36, scope: !3549)
!3570 = !DILocation(line: 70, column: 43, scope: !3549)
!3571 = !DILocation(line: 70, column: 55, scope: !3549)
!3572 = !DILocation(line: 72, column: 34, scope: !3549)
!3573 = !DILocation(line: 72, column: 41, scope: !3549)
!3574 = !DILocation(line: 72, column: 5, scope: !3549)
!3575 = distinct !DISubprogram(name: "gpt_current_count", scope: !171, file: !171, line: 75, type: !3576, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3578)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{!61, !316}
!3578 = !{!3579}
!3579 = !DILocalVariable(name: "gpt", arg: 1, scope: !3575, file: !171, line: 75, type: !316)
!3580 = !DILocation(line: 0, scope: !3575)
!3581 = !DILocation(line: 77, column: 17, scope: !3575)
!3582 = !DILocation(line: 77, column: 5, scope: !3575)
!3583 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !171, file: !171, line: 81, type: !3584, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3586)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{!61, !61}
!3586 = !{!3587}
!3587 = !DILocalVariable(name: "ms", arg: 1, scope: !3583, file: !171, line: 81, type: !61)
!3588 = !DILocation(line: 0, scope: !3583)
!3589 = !DILocation(line: 83, column: 27, scope: !3583)
!3590 = !DILocation(line: 83, column: 37, scope: !3583)
!3591 = !DILocation(line: 83, column: 43, scope: !3583)
!3592 = !DILocation(line: 83, column: 32, scope: !3583)
!3593 = !DILocation(line: 83, column: 53, scope: !3583)
!3594 = !DILocation(line: 83, column: 59, scope: !3583)
!3595 = !DILocation(line: 83, column: 48, scope: !3583)
!3596 = !DILocation(line: 83, column: 70, scope: !3583)
!3597 = !DILocation(line: 83, column: 76, scope: !3583)
!3598 = !DILocation(line: 83, column: 65, scope: !3583)
!3599 = !DILocation(line: 83, column: 5, scope: !3583)
!3600 = !DILocation(line: 90, column: 9, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !342, file: !171, line: 90, column: 9)
!3602 = !DILocation(line: 90, column: 9, scope: !342)
!3603 = !DILocation(line: 91, column: 13, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3605, file: !171, line: 91, column: 13)
!3605 = distinct !DILexicalBlock(scope: !3601, file: !171, line: 90, column: 24)
!3606 = !DILocation(line: 91, column: 13, scope: !3605)
!3607 = !DILocation(line: 92, column: 32, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3604, file: !171, line: 91, column: 41)
!3609 = !DILocation(line: 92, column: 30, scope: !3608)
!3610 = !DILocation(line: 93, column: 41, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3608, file: !171, line: 93, column: 17)
!3612 = !DILocation(line: 0, scope: !3604)
!3613 = !DILocation(line: 105, column: 1, scope: !342)
!3614 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !171, file: !171, line: 107, type: !343, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !345)
!3615 = !DILocation(line: 109, column: 9, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3614, file: !171, line: 109, column: 9)
!3617 = !DILocation(line: 109, column: 9, scope: !3614)
!3618 = !DILocation(line: 110, column: 9, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3616, file: !171, line: 109, column: 61)
!3620 = !DILocation(line: 111, column: 5, scope: !3619)
!3621 = !DILocation(line: 112, column: 1, scope: !3614)
!3622 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !171, file: !171, line: 114, type: !3584, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3623)
!3623 = !{!3624}
!3624 = !DILocalVariable(name: "time_us", arg: 1, scope: !3622, file: !171, line: 114, type: !61)
!3625 = !DILocation(line: 0, scope: !3622)
!3626 = !DILocation(line: 116, column: 5, scope: !3622)
!3627 = !DILocation(line: 118, column: 9, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3622, file: !171, line: 118, column: 9)
!3629 = !DILocation(line: 118, column: 9, scope: !3622)
!3630 = !DILocation(line: 120, column: 49, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3628, file: !171, line: 118, column: 37)
!3632 = !DILocation(line: 120, column: 16, scope: !3631)
!3633 = !DILocation(line: 120, column: 9, scope: !3631)
!3634 = !DILocation(line: 0, scope: !3628)
!3635 = !DILocation(line: 125, column: 1, scope: !3622)
!3636 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !171, file: !171, line: 127, type: !3584, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3637)
!3637 = !{!3638}
!3638 = !DILocalVariable(name: "count", arg: 1, scope: !3636, file: !171, line: 127, type: !61)
!3639 = !DILocation(line: 0, scope: !3636)
!3640 = !DILocation(line: 129, column: 5, scope: !3636)
!3641 = !DILocation(line: 131, column: 9, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3636, file: !171, line: 131, column: 9)
!3643 = !DILocation(line: 131, column: 9, scope: !3636)
!3644 = !DILocation(line: 133, column: 69, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3642, file: !171, line: 131, column: 37)
!3646 = !DILocation(line: 133, column: 16, scope: !3645)
!3647 = !DILocation(line: 133, column: 9, scope: !3645)
!3648 = !DILocation(line: 0, scope: !3642)
!3649 = !DILocation(line: 138, column: 1, scope: !3636)
!3650 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !171, file: !171, line: 141, type: !3651, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3653)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{null, !316, !61, !61}
!3653 = !{!3654, !3655, !3656}
!3654 = !DILocalVariable(name: "gpt", arg: 1, scope: !3650, file: !171, line: 141, type: !316)
!3655 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3650, file: !171, line: 141, type: !61)
!3656 = !DILocalVariable(name: "divide", arg: 3, scope: !3650, file: !171, line: 141, type: !61)
!3657 = !DILocation(line: 0, scope: !3650)
!3658 = !DILocation(line: 143, column: 5, scope: !3650)
!3659 = !DILocation(line: 145, column: 33, scope: !3650)
!3660 = !DILocation(line: 145, column: 10, scope: !3650)
!3661 = !DILocation(line: 145, column: 18, scope: !3650)
!3662 = !DILocation(line: 148, column: 10, scope: !3650)
!3663 = !DILocation(line: 148, column: 18, scope: !3650)
!3664 = !DILocation(line: 149, column: 1, scope: !3650)
!3665 = distinct !DISubprogram(name: "gpt_delay_time", scope: !171, file: !171, line: 151, type: !3666, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3668)
!3666 = !DISubroutineType(types: !3667)
!3667 = !{null, !316, !859}
!3668 = !{!3669, !3670, !3671, !3672}
!3669 = !DILocalVariable(name: "gpt", arg: 1, scope: !3665, file: !171, line: 151, type: !316)
!3670 = !DILocalVariable(name: "count", arg: 2, scope: !3665, file: !171, line: 151, type: !859)
!3671 = !DILocalVariable(name: "end_count", scope: !3665, file: !171, line: 153, type: !61)
!3672 = !DILocalVariable(name: "current", scope: !3665, file: !171, line: 153, type: !61)
!3673 = !DILocation(line: 0, scope: !3665)
!3674 = !DILocation(line: 155, column: 17, scope: !3665)
!3675 = !DILocation(line: 156, column: 25, scope: !3665)
!3676 = !DILocation(line: 156, column: 33, scope: !3665)
!3677 = !DILocation(line: 159, column: 19, scope: !3678)
!3678 = distinct !DILexicalBlock(scope: !3665, file: !171, line: 159, column: 9)
!3679 = !DILocation(line: 159, column: 9, scope: !3665)
!3680 = !DILocation(line: 160, column: 16, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3678, file: !171, line: 159, column: 30)
!3682 = !DILocation(line: 160, column: 39, scope: !3681)
!3683 = !DILocation(line: 160, column: 9, scope: !3681)
!3684 = distinct !{!3684, !3683, !3685}
!3685 = !DILocation(line: 160, column: 51, scope: !3681)
!3686 = !DILocation(line: 162, column: 16, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3678, file: !171, line: 161, column: 12)
!3688 = !DILocation(line: 162, column: 39, scope: !3687)
!3689 = !DILocation(line: 162, column: 9, scope: !3687)
!3690 = distinct !{!3690, !3689, !3691}
!3691 = !DILocation(line: 162, column: 50, scope: !3687)
!3692 = !DILocation(line: 163, column: 16, scope: !3687)
!3693 = !DILocation(line: 163, column: 39, scope: !3687)
!3694 = !DILocation(line: 163, column: 9, scope: !3687)
!3695 = distinct !{!3695, !3694, !3696}
!3696 = !DILocation(line: 163, column: 51, scope: !3687)
!3697 = !DILocation(line: 165, column: 1, scope: !3665)
!3698 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !171, file: !171, line: 166, type: !3699, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3701)
!3699 = !DISubroutineType(types: !3700)
!3700 = !{null, !316}
!3701 = !{!3702}
!3702 = !DILocalVariable(name: "gpt", arg: 1, scope: !3698, file: !171, line: 166, type: !316)
!3703 = !DILocation(line: 0, scope: !3698)
!3704 = !DILocation(line: 168, column: 10, scope: !3698)
!3705 = !DILocation(line: 168, column: 22, scope: !3698)
!3706 = !DILocation(line: 169, column: 10, scope: !3698)
!3707 = !DILocation(line: 169, column: 22, scope: !3698)
!3708 = !DILocation(line: 170, column: 21, scope: !3698)
!3709 = !DILocation(line: 171, column: 5, scope: !3698)
!3710 = !DILocation(line: 171, column: 16, scope: !3698)
!3711 = distinct !{!3711, !3709, !3712}
!3712 = !DILocation(line: 171, column: 26, scope: !3698)
!3713 = !DILocation(line: 172, column: 10, scope: !3698)
!3714 = !DILocation(line: 172, column: 22, scope: !3698)
!3715 = !DILocation(line: 173, column: 10, scope: !3698)
!3716 = !DILocation(line: 173, column: 22, scope: !3698)
!3717 = !DILocation(line: 174, column: 10, scope: !3698)
!3718 = !DILocation(line: 174, column: 22, scope: !3698)
!3719 = !DILocation(line: 176, column: 13, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3698, file: !171, line: 176, column: 9)
!3721 = !DILocation(line: 176, column: 9, scope: !3698)
!3722 = !DILocation(line: 177, column: 27, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3720, file: !171, line: 176, column: 22)
!3724 = !DILocation(line: 178, column: 5, scope: !3723)
!3725 = !DILocation(line: 179, column: 1, scope: !3698)
!3726 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !171, file: !171, line: 181, type: !3576, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3727)
!3727 = !{!3728, !3729}
!3728 = !DILocalVariable(name: "gpt", arg: 1, scope: !3726, file: !171, line: 181, type: !316)
!3729 = !DILocalVariable(name: "mask", scope: !3726, file: !171, line: 183, type: !60)
!3730 = !DILocation(line: 0, scope: !3726)
!3731 = !DILocation(line: 183, column: 5, scope: !3726)
!3732 = !DILocation(line: 183, column: 23, scope: !3726)
!3733 = !DILocation(line: 185, column: 17, scope: !3726)
!3734 = !DILocation(line: 185, column: 10, scope: !3726)
!3735 = !DILocation(line: 187, column: 22, scope: !3726)
!3736 = !DILocation(line: 189, column: 12, scope: !3726)
!3737 = !DILocation(line: 190, column: 1, scope: !3726)
!3738 = !DILocation(line: 189, column: 5, scope: !3726)
!3739 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !171, file: !171, line: 192, type: !3740, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3742)
!3740 = !DISubroutineType(types: !3741)
!3741 = !{null, !316, !61}
!3742 = !{!3743, !3744}
!3743 = !DILocalVariable(name: "gpt", arg: 1, scope: !3739, file: !171, line: 192, type: !316)
!3744 = !DILocalVariable(name: "mask", arg: 2, scope: !3739, file: !171, line: 192, type: !61)
!3745 = !DILocation(line: 0, scope: !3739)
!3746 = !DILocation(line: 194, column: 10, scope: !3739)
!3747 = !DILocation(line: 194, column: 21, scope: !3739)
!3748 = !DILocation(line: 195, column: 1, scope: !3739)
!3749 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !171, file: !171, line: 197, type: !1044, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3750)
!3750 = !{!3751, !3752, !3753, !3754, !3755}
!3751 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3749, file: !171, line: 197, type: !950)
!3752 = !DILocalVariable(name: "i", scope: !3749, file: !171, line: 199, type: !61)
!3753 = !DILocalVariable(name: "mask", scope: !3749, file: !171, line: 200, type: !60)
!3754 = !DILocalVariable(name: "state", scope: !3749, file: !171, line: 201, type: !60)
!3755 = !DILocalVariable(name: "enable", scope: !3749, file: !171, line: 202, type: !60)
!3756 = !DILocation(line: 0, scope: !3749)
!3757 = !DILocation(line: 200, column: 5, scope: !3749)
!3758 = !DILocation(line: 200, column: 23, scope: !3749)
!3759 = !DILocation(line: 201, column: 5, scope: !3749)
!3760 = !DILocation(line: 201, column: 23, scope: !3749)
!3761 = !DILocation(line: 202, column: 5, scope: !3749)
!3762 = !DILocation(line: 202, column: 23, scope: !3749)
!3763 = !DILocation(line: 207, column: 5, scope: !3764)
!3764 = distinct !DILexicalBlock(scope: !3749, file: !171, line: 207, column: 5)
!3765 = !DILocation(line: 209, column: 18, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3767, file: !171, line: 207, column: 44)
!3767 = distinct !DILexicalBlock(scope: !3764, file: !171, line: 207, column: 5)
!3768 = !DILocation(line: 209, column: 29, scope: !3766)
!3769 = !DILocation(line: 209, column: 16, scope: !3766)
!3770 = !DILocation(line: 210, column: 29, scope: !3766)
!3771 = !DILocation(line: 210, column: 16, scope: !3766)
!3772 = !DILocation(line: 212, column: 16, scope: !3766)
!3773 = !DILocation(line: 212, column: 14, scope: !3766)
!3774 = !DILocation(line: 214, column: 9, scope: !3766)
!3775 = !DILocation(line: 214, column: 20, scope: !3766)
!3776 = !DILocation(line: 214, column: 32, scope: !3766)
!3777 = !DILocation(line: 216, column: 14, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3766, file: !171, line: 216, column: 13)
!3779 = !DILocation(line: 216, column: 20, scope: !3778)
!3780 = !DILocation(line: 216, column: 40, scope: !3778)
!3781 = !DILocation(line: 216, column: 44, scope: !3778)
!3782 = !DILocation(line: 216, column: 51, scope: !3778)
!3783 = !DILocation(line: 216, column: 13, scope: !3766)
!3784 = !DILocation(line: 224, column: 51, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !171, line: 224, column: 17)
!3786 = distinct !DILexicalBlock(scope: !3778, file: !171, line: 216, column: 70)
!3787 = !DILocation(line: 224, column: 60, scope: !3785)
!3788 = !DILocation(line: 224, column: 17, scope: !3786)
!3789 = !DILocation(line: 225, column: 94, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3785, file: !171, line: 224, column: 69)
!3791 = !DILocation(line: 225, column: 17, scope: !3790)
!3792 = !DILocation(line: 226, column: 13, scope: !3790)
!3793 = !DILocation(line: 229, column: 31, scope: !3766)
!3794 = !DILocation(line: 229, column: 42, scope: !3766)
!3795 = !DILocation(line: 229, column: 9, scope: !3766)
!3796 = !DILocation(line: 207, column: 40, scope: !3767)
!3797 = !DILocation(line: 207, column: 19, scope: !3767)
!3798 = distinct !{!3798, !3763, !3799}
!3799 = !DILocation(line: 231, column: 5, scope: !3764)
!3800 = !DILocation(line: 233, column: 1, scope: !3749)
!3801 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !171, file: !171, line: 236, type: !343, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !345)
!3802 = !DILocation(line: 238, column: 5, scope: !3801)
!3803 = !DILocation(line: 239, column: 5, scope: !3801)
!3804 = !DILocation(line: 240, column: 5, scope: !3801)
!3805 = !DILocation(line: 241, column: 1, scope: !3801)
!3806 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !171, file: !171, line: 242, type: !3576, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3807)
!3807 = !{!3808, !3809, !3810, !3811, !3812}
!3808 = !DILocalVariable(name: "gpt", arg: 1, scope: !3806, file: !171, line: 242, type: !316)
!3809 = !DILocalVariable(name: "time", scope: !3806, file: !171, line: 244, type: !60)
!3810 = !DILocalVariable(name: "count", scope: !3806, file: !171, line: 245, type: !61)
!3811 = !DILocalVariable(name: "time_s", scope: !3806, file: !171, line: 245, type: !61)
!3812 = !DILocalVariable(name: "time_ms", scope: !3806, file: !171, line: 245, type: !61)
!3813 = !DILocation(line: 0, scope: !3806)
!3814 = !DILocation(line: 244, column: 5, scope: !3806)
!3815 = !DILocation(line: 244, column: 23, scope: !3806)
!3816 = !DILocation(line: 247, column: 13, scope: !3806)
!3817 = !DILocation(line: 248, column: 20, scope: !3806)
!3818 = !DILocation(line: 249, column: 23, scope: !3806)
!3819 = !DILocation(line: 249, column: 32, scope: !3806)
!3820 = !DILocation(line: 249, column: 39, scope: !3806)
!3821 = !DILocation(line: 249, column: 48, scope: !3806)
!3822 = !DILocation(line: 250, column: 19, scope: !3806)
!3823 = !DILocation(line: 250, column: 26, scope: !3806)
!3824 = !DILocation(line: 250, column: 10, scope: !3806)
!3825 = !DILocation(line: 253, column: 5, scope: !3806)
!3826 = !DILocation(line: 253, column: 30, scope: !3806)
!3827 = !DILocation(line: 253, column: 38, scope: !3806)
!3828 = !DILocation(line: 254, column: 5, scope: !3806)
!3829 = !DILocation(line: 254, column: 36, scope: !3806)
!3830 = distinct !{!3830, !3828, !3831}
!3831 = !DILocation(line: 254, column: 46, scope: !3806)
!3832 = !DILocation(line: 255, column: 12, scope: !3806)
!3833 = !DILocation(line: 256, column: 1, scope: !3806)
!3834 = !DILocation(line: 255, column: 5, scope: !3806)
!3835 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !171, file: !171, line: 258, type: !3836, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3838)
!3836 = !DISubroutineType(types: !3837)
!3837 = !{!61}
!3838 = !{!3839}
!3839 = !DILocalVariable(name: "i", scope: !3835, file: !171, line: 260, type: !61)
!3840 = !DILocation(line: 0, scope: !3835)
!3841 = !DILocation(line: 262, column: 5, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3835, file: !171, line: 262, column: 5)
!3843 = !DILocation(line: 263, column: 37, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !171, line: 263, column: 13)
!3845 = distinct !DILexicalBlock(scope: !3846, file: !171, line: 262, column: 45)
!3846 = distinct !DILexicalBlock(scope: !3842, file: !171, line: 262, column: 5)
!3847 = !DILocation(line: 263, column: 45, scope: !3844)
!3848 = !DILocation(line: 263, column: 13, scope: !3845)
!3849 = !DILocation(line: 262, column: 41, scope: !3846)
!3850 = !DILocation(line: 262, column: 19, scope: !3846)
!3851 = distinct !{!3851, !3841, !3852}
!3852 = !DILocation(line: 266, column: 5, scope: !3842)
!3853 = !DILocation(line: 269, column: 1, scope: !3835)
!3854 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !171, file: !171, line: 271, type: !343, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3855)
!3855 = !{!3856, !3857}
!3856 = !DILocalVariable(name: "minimum_time", scope: !3854, file: !171, line: 273, type: !61)
!3857 = !DILocalVariable(name: "current_timer", scope: !3854, file: !171, line: 273, type: !61)
!3858 = !DILocation(line: 273, column: 5, scope: !3854)
!3859 = !DILocation(line: 275, column: 24, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3854, file: !171, line: 275, column: 9)
!3861 = !DILocation(line: 275, column: 9, scope: !3854)
!3862 = !DILocation(line: 0, scope: !3854)
!3863 = !DILocation(line: 279, column: 5, scope: !3854)
!3864 = !DILocation(line: 282, column: 56, scope: !3854)
!3865 = !DILocation(line: 282, column: 39, scope: !3854)
!3866 = !DILocation(line: 284, column: 30, scope: !3854)
!3867 = !DILocation(line: 285, column: 45, scope: !3854)
!3868 = !DILocation(line: 285, column: 5, scope: !3854)
!3869 = !DILocation(line: 286, column: 30, scope: !3854)
!3870 = !DILocation(line: 287, column: 1, scope: !3854)
!3871 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !171, file: !171, line: 308, type: !3872, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3874)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{null, !1094, !1094}
!3874 = !{!3875, !3876, !3877, !3878, !3879}
!3875 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !3871, file: !171, line: 308, type: !1094)
!3876 = !DILocalVariable(name: "number", arg: 2, scope: !3871, file: !171, line: 308, type: !1094)
!3877 = !DILocalVariable(name: "i", scope: !3871, file: !171, line: 310, type: !61)
!3878 = !DILocalVariable(name: "minimum", scope: !3871, file: !171, line: 311, type: !61)
!3879 = !DILocalVariable(name: "data", scope: !3871, file: !171, line: 312, type: !61)
!3880 = !DILocation(line: 0, scope: !3871)
!3881 = !DILocation(line: 314, column: 5, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3871, file: !171, line: 314, column: 5)
!3883 = !DILocation(line: 315, column: 37, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3885, file: !171, line: 315, column: 13)
!3885 = distinct !DILexicalBlock(scope: !3886, file: !171, line: 314, column: 45)
!3886 = distinct !DILexicalBlock(scope: !3882, file: !171, line: 314, column: 5)
!3887 = !DILocation(line: 315, column: 13, scope: !3885)
!3888 = !DILocation(line: 316, column: 20, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3884, file: !171, line: 315, column: 57)
!3890 = !DILocation(line: 318, column: 22, scope: !3891)
!3891 = distinct !DILexicalBlock(scope: !3889, file: !171, line: 318, column: 17)
!3892 = !DILocation(line: 318, column: 17, scope: !3889)
!3893 = !DILocation(line: 320, column: 25, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3891, file: !171, line: 318, column: 33)
!3895 = !DILocation(line: 321, column: 13, scope: !3894)
!3896 = !DILocation(line: 314, column: 41, scope: !3886)
!3897 = !DILocation(line: 314, column: 19, scope: !3886)
!3898 = distinct !{!3898, !3881, !3899}
!3899 = !DILocation(line: 323, column: 5, scope: !3882)
!3900 = !DILocation(line: 325, column: 19, scope: !3871)
!3901 = !DILocation(line: 326, column: 1, scope: !3871)
!3902 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !171, file: !171, line: 289, type: !3584, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3903)
!3903 = !{!3904, !3905, !3906, !3907}
!3904 = !DILocalVariable(name: "timer_number", arg: 1, scope: !3902, file: !171, line: 289, type: !61)
!3905 = !DILocalVariable(name: "time_out_delta", scope: !3902, file: !171, line: 291, type: !61)
!3906 = !DILocalVariable(name: "current_delta", scope: !3902, file: !171, line: 292, type: !61)
!3907 = !DILocalVariable(name: "ret_value", scope: !3902, file: !171, line: 293, type: !61)
!3908 = !DILocation(line: 0, scope: !3902)
!3909 = !DILocation(line: 295, column: 22, scope: !3902)
!3910 = !DILocation(line: 296, column: 22, scope: !3902)
!3911 = !DILocation(line: 298, column: 24, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3902, file: !171, line: 298, column: 9)
!3913 = !DILocation(line: 298, column: 9, scope: !3902)
!3914 = !DILocation(line: 306, column: 5, scope: !3902)
!3915 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !171, file: !171, line: 329, type: !153, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !170, retainedNodes: !3916)
!3916 = !{!3917, !3918, !3919, !3920}
!3917 = !DILocalVariable(name: "parameter", arg: 1, scope: !3915, file: !171, line: 329, type: !88)
!3918 = !DILocalVariable(name: "i", scope: !3915, file: !171, line: 331, type: !61)
!3919 = !DILocalVariable(name: "time_ms", scope: !3915, file: !171, line: 332, type: !60)
!3920 = !DILocalVariable(name: "data", scope: !3915, file: !171, line: 333, type: !60)
!3921 = !DILocation(line: 0, scope: !3915)
!3922 = !DILocation(line: 332, column: 5, scope: !3915)
!3923 = !DILocation(line: 332, column: 23, scope: !3915)
!3924 = !DILocation(line: 333, column: 5, scope: !3915)
!3925 = !DILocation(line: 333, column: 23, scope: !3915)
!3926 = !DILocation(line: 336, column: 24, scope: !3927)
!3927 = distinct !DILexicalBlock(scope: !3915, file: !171, line: 336, column: 9)
!3928 = !DILocation(line: 336, column: 41, scope: !3927)
!3929 = !DILocation(line: 336, column: 9, scope: !3915)
!3930 = !DILocation(line: 338, column: 34, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3927, file: !171, line: 336, column: 47)
!3932 = !DILocation(line: 339, column: 9, scope: !3931)
!3933 = !DILocation(line: 340, column: 34, scope: !3931)
!3934 = !DILocation(line: 342, column: 46, scope: !3931)
!3935 = !DILocation(line: 342, column: 19, scope: !3931)
!3936 = !DILocation(line: 342, column: 17, scope: !3931)
!3937 = !DILocation(line: 344, column: 41, scope: !3931)
!3938 = !DILocation(line: 344, column: 38, scope: !3931)
!3939 = !DILocation(line: 345, column: 42, scope: !3931)
!3940 = !DILocation(line: 347, column: 9, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3931, file: !171, line: 347, column: 9)
!3942 = !DILocation(line: 348, column: 41, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3944, file: !171, line: 348, column: 17)
!3944 = distinct !DILexicalBlock(scope: !3945, file: !171, line: 347, column: 49)
!3945 = distinct !DILexicalBlock(scope: !3941, file: !171, line: 347, column: 9)
!3946 = !DILocation(line: 348, column: 17, scope: !3944)
!3947 = !DILocation(line: 350, column: 24, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3943, file: !171, line: 348, column: 61)
!3949 = !DILocation(line: 350, column: 22, scope: !3948)
!3950 = !DILocation(line: 352, column: 21, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3948, file: !171, line: 352, column: 21)
!3952 = !DILocation(line: 352, column: 26, scope: !3951)
!3953 = !DILocation(line: 352, column: 21, scope: !3948)
!3954 = !DILocation(line: 353, column: 56, scope: !3955)
!3955 = distinct !DILexicalBlock(scope: !3951, file: !171, line: 352, column: 32)
!3956 = !DILocation(line: 354, column: 55, scope: !3955)
!3957 = !DILocation(line: 356, column: 62, scope: !3955)
!3958 = !DILocation(line: 356, column: 112, scope: !3955)
!3959 = !DILocation(line: 356, column: 21, scope: !3955)
!3960 = !DILocation(line: 357, column: 17, scope: !3955)
!3961 = !DILocation(line: 347, column: 45, scope: !3945)
!3962 = !DILocation(line: 347, column: 23, scope: !3945)
!3963 = distinct !{!3963, !3940, !3964}
!3964 = !DILocation(line: 360, column: 9, scope: !3941)
!3965 = !DILocation(line: 362, column: 42, scope: !3931)
!3966 = !DILocation(line: 364, column: 28, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3931, file: !171, line: 364, column: 13)
!3968 = !DILocation(line: 364, column: 48, scope: !3967)
!3969 = !DILocation(line: 364, column: 13, scope: !3931)
!3970 = !DILocation(line: 365, column: 13, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3967, file: !171, line: 364, column: 54)
!3972 = !DILocation(line: 366, column: 9, scope: !3971)
!3973 = !DILocation(line: 369, column: 1, scope: !3915)
!3974 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !392, file: !392, line: 50, type: !3975, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !3978)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!61, !3977}
!3977 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !106, line: 390, baseType: !394)
!3978 = !{!3979, !3980, !3981}
!3979 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3974, file: !392, line: 50, type: !3977)
!3980 = !DILocalVariable(name: "i", scope: !3974, file: !392, line: 52, type: !61)
!3981 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !3974, file: !392, line: 53, type: !1000)
!3982 = !DILocation(line: 0, scope: !3974)
!3983 = !DILocation(line: 53, column: 14, scope: !3974)
!3984 = !DILocation(line: 55, column: 5, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3974, file: !392, line: 55, column: 5)
!3986 = !DILocation(line: 55, column: 25, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3985, file: !392, line: 55, column: 5)
!3988 = !DILocation(line: 55, column: 19, scope: !3987)
!3989 = distinct !{!3989, !3984, !3990}
!3990 = !DILocation(line: 59, column: 5, scope: !3985)
!3991 = !DILocation(line: 56, column: 13, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3993, file: !392, line: 56, column: 13)
!3993 = distinct !DILexicalBlock(scope: !3987, file: !392, line: 55, column: 29)
!3994 = !DILocation(line: 56, column: 40, scope: !3992)
!3995 = !DILocation(line: 56, column: 13, scope: !3993)
!3996 = !DILocation(line: 61, column: 1, scope: !3974)
!3997 = distinct !DISubprogram(name: "hal_gpio_init", scope: !392, file: !392, line: 66, type: !3998, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4001)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!4000, !3977}
!4000 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !447, line: 229, baseType: !446)
!4001 = !{!4002}
!4002 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3997, file: !392, line: 66, type: !3977)
!4003 = !DILocation(line: 0, scope: !3997)
!4004 = !DILocation(line: 68, column: 5, scope: !3997)
!4005 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !392, file: !392, line: 72, type: !3998, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4006)
!4006 = !{!4007}
!4007 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4005, file: !392, line: 72, type: !3977)
!4008 = !DILocation(line: 0, scope: !4005)
!4009 = !DILocation(line: 74, column: 5, scope: !4005)
!4010 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !392, file: !392, line: 79, type: !4011, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4013)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!4000, !3977, !488}
!4013 = !{!4014, !4015, !4016, !4017}
!4014 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4010, file: !392, line: 79, type: !3977)
!4015 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4010, file: !392, line: 79, type: !488)
!4016 = !DILocalVariable(name: "no", scope: !4010, file: !392, line: 81, type: !61)
!4017 = !DILocalVariable(name: "remainder", scope: !4010, file: !392, line: 82, type: !61)
!4018 = !DILocation(line: 0, scope: !4010)
!4019 = !DILocation(line: 84, column: 18, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4010, file: !392, line: 84, column: 9)
!4021 = !DILocation(line: 84, column: 9, scope: !4010)
!4022 = !DILocation(line: 89, column: 19, scope: !4010)
!4023 = !DILocation(line: 92, column: 26, scope: !4010)
!4024 = !DILocation(line: 94, column: 24, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !4010, file: !392, line: 94, column: 9)
!4026 = !DILocation(line: 0, scope: !4025)
!4027 = !DILocation(line: 94, column: 9, scope: !4010)
!4028 = !DILocation(line: 101, column: 1, scope: !4010)
!4029 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !392, file: !392, line: 105, type: !4030, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4033)
!4030 = !DISubroutineType(types: !4031)
!4031 = !{!4000, !3977, !4032}
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 32)
!4033 = !{!4034, !4035, !4036, !4037, !4038}
!4034 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4029, file: !392, line: 105, type: !3977)
!4035 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4029, file: !392, line: 105, type: !4032)
!4036 = !DILocalVariable(name: "no", scope: !4029, file: !392, line: 107, type: !61)
!4037 = !DILocalVariable(name: "remainder", scope: !4029, file: !392, line: 108, type: !61)
!4038 = !DILocalVariable(name: "temp", scope: !4029, file: !392, line: 109, type: !61)
!4039 = !DILocation(line: 0, scope: !4029)
!4040 = !DILocation(line: 111, column: 18, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4029, file: !392, line: 111, column: 9)
!4042 = !DILocation(line: 111, column: 9, scope: !4029)
!4043 = !DILocation(line: 115, column: 14, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4029, file: !392, line: 115, column: 9)
!4045 = !DILocation(line: 115, column: 9, scope: !4029)
!4046 = !DILocation(line: 120, column: 19, scope: !4029)
!4047 = !DILocation(line: 123, column: 26, scope: !4029)
!4048 = !DILocation(line: 125, column: 12, scope: !4029)
!4049 = !DILocation(line: 125, column: 54, scope: !4029)
!4050 = !DILocation(line: 126, column: 45, scope: !4029)
!4051 = !DILocation(line: 126, column: 17, scope: !4029)
!4052 = !DILocation(line: 127, column: 51, scope: !4029)
!4053 = !DILocation(line: 127, column: 21, scope: !4029)
!4054 = !DILocation(line: 128, column: 5, scope: !4029)
!4055 = !DILocation(line: 130, column: 1, scope: !4029)
!4056 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !392, file: !392, line: 134, type: !4057, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4060)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!4059, !3977, !159}
!4059 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !447, line: 238, baseType: !457)
!4060 = !{!4061, !4062, !4063, !4064, !4065}
!4061 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4056, file: !392, line: 134, type: !3977)
!4062 = !DILocalVariable(name: "function_index", arg: 2, scope: !4056, file: !392, line: 134, type: !159)
!4063 = !DILocalVariable(name: "no", scope: !4056, file: !392, line: 136, type: !61)
!4064 = !DILocalVariable(name: "remainder", scope: !4056, file: !392, line: 137, type: !61)
!4065 = !DILocalVariable(name: "irq_status", scope: !4056, file: !392, line: 138, type: !61)
!4066 = !DILocation(line: 0, scope: !4056)
!4067 = !DILocation(line: 140, column: 18, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4056, file: !392, line: 140, column: 9)
!4069 = !DILocation(line: 140, column: 9, scope: !4056)
!4070 = !DILocation(line: 145, column: 24, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4056, file: !392, line: 145, column: 9)
!4072 = !DILocation(line: 145, column: 9, scope: !4056)
!4073 = !DILocation(line: 145, column: 9, scope: !4071)
!4074 = !DILocation(line: 150, column: 19, scope: !4056)
!4075 = !DILocation(line: 156, column: 18, scope: !4056)
!4076 = !DILocation(line: 157, column: 105, scope: !4056)
!4077 = !DILocation(line: 157, column: 91, scope: !4056)
!4078 = !DILocation(line: 157, column: 5, scope: !4056)
!4079 = !DILocation(line: 157, column: 48, scope: !4056)
!4080 = !DILocation(line: 157, column: 62, scope: !4056)
!4081 = !DILocation(line: 158, column: 80, scope: !4056)
!4082 = !DILocation(line: 158, column: 5, scope: !4056)
!4083 = !DILocation(line: 158, column: 48, scope: !4056)
!4084 = !DILocation(line: 158, column: 62, scope: !4056)
!4085 = !DILocation(line: 159, column: 5, scope: !4056)
!4086 = !DILocation(line: 160, column: 5, scope: !4056)
!4087 = !DILocation(line: 162, column: 1, scope: !4056)
!4088 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !392, file: !392, line: 166, type: !4089, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4092)
!4089 = !DISubroutineType(types: !4090)
!4090 = !{!4000, !3977, !4091}
!4091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 32)
!4092 = !{!4093, !4094, !4095, !4096, !4097}
!4093 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4088, file: !392, line: 166, type: !3977)
!4094 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4088, file: !392, line: 166, type: !4091)
!4095 = !DILocalVariable(name: "no", scope: !4088, file: !392, line: 168, type: !61)
!4096 = !DILocalVariable(name: "remainder", scope: !4088, file: !392, line: 169, type: !61)
!4097 = !DILocalVariable(name: "temp", scope: !4088, file: !392, line: 170, type: !61)
!4098 = !DILocation(line: 0, scope: !4088)
!4099 = !DILocation(line: 172, column: 18, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4088, file: !392, line: 172, column: 9)
!4101 = !DILocation(line: 172, column: 9, scope: !4088)
!4102 = !DILocation(line: 176, column: 14, scope: !4103)
!4103 = distinct !DILexicalBlock(scope: !4088, file: !392, line: 176, column: 9)
!4104 = !DILocation(line: 176, column: 9, scope: !4088)
!4105 = !DILocation(line: 181, column: 19, scope: !4088)
!4106 = !DILocation(line: 184, column: 26, scope: !4088)
!4107 = !DILocation(line: 186, column: 12, scope: !4088)
!4108 = !DILocation(line: 186, column: 54, scope: !4088)
!4109 = !DILocation(line: 187, column: 45, scope: !4088)
!4110 = !DILocation(line: 187, column: 17, scope: !4088)
!4111 = !DILocation(line: 188, column: 41, scope: !4088)
!4112 = !DILocation(line: 188, column: 16, scope: !4088)
!4113 = !DILocation(line: 189, column: 5, scope: !4088)
!4114 = !DILocation(line: 191, column: 1, scope: !4088)
!4115 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !392, file: !392, line: 195, type: !4116, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4118)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{!4000, !3977, !489}
!4118 = !{!4119, !4120, !4121, !4122}
!4119 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4115, file: !392, line: 195, type: !3977)
!4120 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4115, file: !392, line: 195, type: !489)
!4121 = !DILocalVariable(name: "no", scope: !4115, file: !392, line: 197, type: !61)
!4122 = !DILocalVariable(name: "remainder", scope: !4115, file: !392, line: 198, type: !61)
!4123 = !DILocation(line: 0, scope: !4115)
!4124 = !DILocation(line: 200, column: 18, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4115, file: !392, line: 200, column: 9)
!4126 = !DILocation(line: 200, column: 9, scope: !4115)
!4127 = !DILocation(line: 205, column: 19, scope: !4115)
!4128 = !DILocation(line: 208, column: 26, scope: !4115)
!4129 = !DILocation(line: 210, column: 9, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4115, file: !392, line: 210, column: 9)
!4131 = !DILocation(line: 0, scope: !4130)
!4132 = !DILocation(line: 210, column: 9, scope: !4115)
!4133 = !DILocation(line: 216, column: 1, scope: !4115)
!4134 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !392, file: !392, line: 220, type: !4089, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4135)
!4135 = !{!4136, !4137, !4138, !4139, !4140}
!4136 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4134, file: !392, line: 220, type: !3977)
!4137 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4134, file: !392, line: 220, type: !4091)
!4138 = !DILocalVariable(name: "no", scope: !4134, file: !392, line: 222, type: !61)
!4139 = !DILocalVariable(name: "remainder", scope: !4134, file: !392, line: 223, type: !61)
!4140 = !DILocalVariable(name: "temp", scope: !4134, file: !392, line: 224, type: !61)
!4141 = !DILocation(line: 0, scope: !4134)
!4142 = !DILocation(line: 226, column: 18, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4134, file: !392, line: 226, column: 9)
!4144 = !DILocation(line: 226, column: 9, scope: !4134)
!4145 = !DILocation(line: 230, column: 14, scope: !4146)
!4146 = distinct !DILexicalBlock(scope: !4134, file: !392, line: 230, column: 9)
!4147 = !DILocation(line: 230, column: 9, scope: !4134)
!4148 = !DILocation(line: 235, column: 19, scope: !4134)
!4149 = !DILocation(line: 238, column: 26, scope: !4134)
!4150 = !DILocation(line: 240, column: 12, scope: !4134)
!4151 = !DILocation(line: 240, column: 55, scope: !4134)
!4152 = !DILocation(line: 241, column: 45, scope: !4134)
!4153 = !DILocation(line: 241, column: 17, scope: !4134)
!4154 = !DILocation(line: 242, column: 41, scope: !4134)
!4155 = !DILocation(line: 242, column: 16, scope: !4134)
!4156 = !DILocation(line: 243, column: 5, scope: !4134)
!4157 = !DILocation(line: 245, column: 1, scope: !4134)
!4158 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !392, file: !392, line: 249, type: !3998, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4159)
!4159 = !{!4160, !4161, !4162, !4163}
!4160 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4158, file: !392, line: 249, type: !3977)
!4161 = !DILocalVariable(name: "no", scope: !4158, file: !392, line: 251, type: !61)
!4162 = !DILocalVariable(name: "remainder", scope: !4158, file: !392, line: 252, type: !61)
!4163 = !DILocalVariable(name: "temp", scope: !4158, file: !392, line: 253, type: !61)
!4164 = !DILocation(line: 0, scope: !4158)
!4165 = !DILocation(line: 255, column: 18, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4158, file: !392, line: 255, column: 9)
!4167 = !DILocation(line: 255, column: 9, scope: !4158)
!4168 = !DILocation(line: 260, column: 19, scope: !4158)
!4169 = !DILocation(line: 263, column: 26, scope: !4158)
!4170 = !DILocation(line: 265, column: 12, scope: !4158)
!4171 = !DILocation(line: 265, column: 55, scope: !4158)
!4172 = !DILocation(line: 266, column: 45, scope: !4158)
!4173 = !DILocation(line: 266, column: 17, scope: !4158)
!4174 = !DILocation(line: 267, column: 15, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4158, file: !392, line: 267, column: 9)
!4176 = !DILocation(line: 267, column: 9, scope: !4158)
!4177 = !DILocation(line: 0, scope: !4175)
!4178 = !DILocation(line: 273, column: 1, scope: !4158)
!4179 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !392, file: !392, line: 278, type: !3998, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4180)
!4180 = !{!4181, !4182, !4183}
!4181 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4179, file: !392, line: 278, type: !3977)
!4182 = !DILocalVariable(name: "no", scope: !4179, file: !392, line: 280, type: !61)
!4183 = !DILocalVariable(name: "remainder", scope: !4179, file: !392, line: 281, type: !61)
!4184 = !DILocation(line: 0, scope: !4179)
!4185 = !DILocation(line: 283, column: 18, scope: !4186)
!4186 = distinct !DILexicalBlock(scope: !4179, file: !392, line: 283, column: 9)
!4187 = !DILocation(line: 283, column: 9, scope: !4179)
!4188 = !DILocation(line: 288, column: 19, scope: !4179)
!4189 = !DILocation(line: 291, column: 26, scope: !4179)
!4190 = !DILocation(line: 293, column: 90, scope: !4179)
!4191 = !DILocation(line: 293, column: 5, scope: !4179)
!4192 = !DILocation(line: 293, column: 48, scope: !4179)
!4193 = !DILocation(line: 293, column: 62, scope: !4179)
!4194 = !DILocation(line: 294, column: 5, scope: !4179)
!4195 = !DILocation(line: 295, column: 1, scope: !4179)
!4196 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !392, file: !392, line: 299, type: !3998, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4197)
!4197 = !{!4198, !4199, !4200}
!4198 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4196, file: !392, line: 299, type: !3977)
!4199 = !DILocalVariable(name: "no", scope: !4196, file: !392, line: 301, type: !61)
!4200 = !DILocalVariable(name: "remainder", scope: !4196, file: !392, line: 302, type: !61)
!4201 = !DILocation(line: 0, scope: !4196)
!4202 = !DILocation(line: 304, column: 18, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4196, file: !392, line: 304, column: 9)
!4204 = !DILocation(line: 304, column: 9, scope: !4196)
!4205 = !DILocation(line: 309, column: 19, scope: !4196)
!4206 = !DILocation(line: 312, column: 26, scope: !4196)
!4207 = !DILocation(line: 314, column: 90, scope: !4196)
!4208 = !DILocation(line: 314, column: 5, scope: !4196)
!4209 = !DILocation(line: 314, column: 48, scope: !4196)
!4210 = !DILocation(line: 314, column: 62, scope: !4196)
!4211 = !DILocation(line: 315, column: 5, scope: !4196)
!4212 = !DILocation(line: 316, column: 1, scope: !4196)
!4213 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !392, file: !392, line: 321, type: !3998, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4214)
!4214 = !{!4215, !4216, !4217}
!4215 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4213, file: !392, line: 321, type: !3977)
!4216 = !DILocalVariable(name: "no", scope: !4213, file: !392, line: 323, type: !61)
!4217 = !DILocalVariable(name: "remainder", scope: !4213, file: !392, line: 324, type: !61)
!4218 = !DILocation(line: 0, scope: !4213)
!4219 = !DILocation(line: 326, column: 19, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4213, file: !392, line: 326, column: 9)
!4221 = !DILocation(line: 326, column: 36, scope: !4220)
!4222 = !DILocation(line: 326, column: 41, scope: !4220)
!4223 = !DILocation(line: 326, column: 9, scope: !4213)
!4224 = !DILocation(line: 331, column: 19, scope: !4213)
!4225 = !DILocation(line: 334, column: 26, scope: !4213)
!4226 = !DILocation(line: 336, column: 94, scope: !4213)
!4227 = !DILocation(line: 336, column: 5, scope: !4213)
!4228 = !DILocation(line: 336, column: 50, scope: !4213)
!4229 = !DILocation(line: 336, column: 66, scope: !4213)
!4230 = !DILocation(line: 337, column: 5, scope: !4213)
!4231 = !DILocation(line: 337, column: 51, scope: !4213)
!4232 = !DILocation(line: 337, column: 68, scope: !4213)
!4233 = !DILocation(line: 338, column: 5, scope: !4213)
!4234 = !DILocation(line: 339, column: 1, scope: !4213)
!4235 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !392, file: !392, line: 343, type: !3998, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4236)
!4236 = !{!4237, !4238, !4239}
!4237 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4235, file: !392, line: 343, type: !3977)
!4238 = !DILocalVariable(name: "no", scope: !4235, file: !392, line: 345, type: !61)
!4239 = !DILocalVariable(name: "remainder", scope: !4235, file: !392, line: 346, type: !61)
!4240 = !DILocation(line: 0, scope: !4235)
!4241 = !DILocation(line: 348, column: 19, scope: !4242)
!4242 = distinct !DILexicalBlock(scope: !4235, file: !392, line: 348, column: 9)
!4243 = !DILocation(line: 348, column: 36, scope: !4242)
!4244 = !DILocation(line: 348, column: 41, scope: !4242)
!4245 = !DILocation(line: 348, column: 9, scope: !4235)
!4246 = !DILocation(line: 353, column: 19, scope: !4235)
!4247 = !DILocation(line: 356, column: 26, scope: !4235)
!4248 = !DILocation(line: 358, column: 94, scope: !4235)
!4249 = !DILocation(line: 358, column: 5, scope: !4235)
!4250 = !DILocation(line: 358, column: 50, scope: !4235)
!4251 = !DILocation(line: 358, column: 66, scope: !4235)
!4252 = !DILocation(line: 359, column: 5, scope: !4235)
!4253 = !DILocation(line: 359, column: 51, scope: !4235)
!4254 = !DILocation(line: 359, column: 68, scope: !4235)
!4255 = !DILocation(line: 360, column: 5, scope: !4235)
!4256 = !DILocation(line: 361, column: 1, scope: !4235)
!4257 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !392, file: !392, line: 365, type: !3998, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4258)
!4258 = !{!4259, !4260, !4261}
!4259 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4257, file: !392, line: 365, type: !3977)
!4260 = !DILocalVariable(name: "no", scope: !4257, file: !392, line: 367, type: !61)
!4261 = !DILocalVariable(name: "remainder", scope: !4257, file: !392, line: 368, type: !61)
!4262 = !DILocation(line: 0, scope: !4257)
!4263 = !DILocation(line: 370, column: 19, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4257, file: !392, line: 370, column: 9)
!4265 = !DILocation(line: 370, column: 36, scope: !4264)
!4266 = !DILocation(line: 370, column: 41, scope: !4264)
!4267 = !DILocation(line: 370, column: 9, scope: !4257)
!4268 = !DILocation(line: 375, column: 19, scope: !4257)
!4269 = !DILocation(line: 378, column: 26, scope: !4257)
!4270 = !DILocation(line: 380, column: 94, scope: !4257)
!4271 = !DILocation(line: 380, column: 5, scope: !4257)
!4272 = !DILocation(line: 380, column: 50, scope: !4257)
!4273 = !DILocation(line: 380, column: 66, scope: !4257)
!4274 = !DILocation(line: 381, column: 5, scope: !4257)
!4275 = !DILocation(line: 382, column: 1, scope: !4257)
!4276 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !392, file: !392, line: 387, type: !4277, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4281)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{!4000, !4279, !4280}
!4279 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !106, line: 423, baseType: !467)
!4280 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !106, line: 431, baseType: !476)
!4281 = !{!4282, !4283}
!4282 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !4276, file: !392, line: 387, type: !4279)
!4283 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !4276, file: !392, line: 387, type: !4280)
!4284 = !DILocation(line: 0, scope: !4276)
!4285 = !DILocation(line: 390, column: 24, scope: !4286)
!4286 = distinct !DILexicalBlock(scope: !4276, file: !392, line: 390, column: 9)
!4287 = !DILocation(line: 390, column: 9, scope: !4276)
!4288 = !DILocation(line: 394, column: 5, scope: !4276)
!4289 = !DILocation(line: 394, column: 62, scope: !4276)
!4290 = !DILocation(line: 394, column: 74, scope: !4276)
!4291 = !DILocation(line: 395, column: 5, scope: !4276)
!4292 = !DILocation(line: 396, column: 1, scope: !4276)
!4293 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !392, file: !392, line: 403, type: !4294, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4296)
!4294 = !DISubroutineType(types: !4295)
!4295 = !{!4000, !3977, !159, !159, !159}
!4296 = !{!4297, !4298, !4299, !4300, !4301, !4302}
!4297 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4293, file: !392, line: 403, type: !3977)
!4298 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !4293, file: !392, line: 403, type: !159)
!4299 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !4293, file: !392, line: 403, type: !159)
!4300 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !4293, file: !392, line: 403, type: !159)
!4301 = !DILocalVariable(name: "no", scope: !4293, file: !392, line: 405, type: !61)
!4302 = !DILocalVariable(name: "remainder", scope: !4293, file: !392, line: 406, type: !61)
!4303 = !DILocation(line: 0, scope: !4293)
!4304 = !DILocation(line: 408, column: 19, scope: !4305)
!4305 = distinct !DILexicalBlock(scope: !4293, file: !392, line: 408, column: 9)
!4306 = !DILocation(line: 408, column: 36, scope: !4305)
!4307 = !DILocation(line: 408, column: 40, scope: !4305)
!4308 = !DILocation(line: 408, column: 9, scope: !4293)
!4309 = !DILocation(line: 413, column: 19, scope: !4293)
!4310 = !DILocation(line: 416, column: 26, scope: !4293)
!4311 = !DILocation(line: 418, column: 9, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4293, file: !392, line: 418, column: 9)
!4313 = !DILocation(line: 0, scope: !4312)
!4314 = !DILocation(line: 418, column: 9, scope: !4293)
!4315 = !DILocation(line: 424, column: 9, scope: !4316)
!4316 = distinct !DILexicalBlock(scope: !4293, file: !392, line: 424, column: 9)
!4317 = !DILocation(line: 0, scope: !4316)
!4318 = !DILocation(line: 424, column: 9, scope: !4293)
!4319 = !DILocation(line: 430, column: 9, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4293, file: !392, line: 430, column: 9)
!4321 = !DILocation(line: 0, scope: !4320)
!4322 = !DILocation(line: 430, column: 9, scope: !4293)
!4323 = !DILocation(line: 436, column: 1, scope: !4293)
!4324 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !392, file: !392, line: 441, type: !3998, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4325)
!4325 = !{!4326, !4327, !4328, !4329, !4330, !4331, !4332}
!4326 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4324, file: !392, line: 441, type: !3977)
!4327 = !DILocalVariable(name: "no1", scope: !4324, file: !392, line: 443, type: !61)
!4328 = !DILocalVariable(name: "no2", scope: !4324, file: !392, line: 443, type: !61)
!4329 = !DILocalVariable(name: "no3", scope: !4324, file: !392, line: 443, type: !61)
!4330 = !DILocalVariable(name: "remainder1", scope: !4324, file: !392, line: 444, type: !61)
!4331 = !DILocalVariable(name: "remainder2", scope: !4324, file: !392, line: 444, type: !61)
!4332 = !DILocalVariable(name: "remainder3", scope: !4324, file: !392, line: 444, type: !61)
!4333 = !DILocation(line: 0, scope: !4324)
!4334 = !DILocation(line: 446, column: 18, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4324, file: !392, line: 446, column: 9)
!4336 = !DILocation(line: 446, column: 9, scope: !4324)
!4337 = !DILocation(line: 451, column: 20, scope: !4324)
!4338 = !DILocation(line: 454, column: 27, scope: !4324)
!4339 = !DILocation(line: 457, column: 20, scope: !4324)
!4340 = !DILocation(line: 463, column: 20, scope: !4324)
!4341 = !DILocation(line: 469, column: 107, scope: !4324)
!4342 = !DILocation(line: 469, column: 92, scope: !4324)
!4343 = !DILocation(line: 469, column: 5, scope: !4324)
!4344 = !DILocation(line: 469, column: 49, scope: !4324)
!4345 = !DILocation(line: 469, column: 63, scope: !4324)
!4346 = !DILocation(line: 472, column: 89, scope: !4324)
!4347 = !DILocation(line: 472, column: 5, scope: !4324)
!4348 = !DILocation(line: 472, column: 48, scope: !4324)
!4349 = !DILocation(line: 472, column: 61, scope: !4324)
!4350 = !DILocation(line: 475, column: 5, scope: !4324)
!4351 = !DILocation(line: 475, column: 48, scope: !4324)
!4352 = !DILocation(line: 475, column: 61, scope: !4324)
!4353 = !DILocation(line: 478, column: 9, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4324, file: !392, line: 478, column: 9)
!4355 = !DILocation(line: 0, scope: !4354)
!4356 = !DILocation(line: 478, column: 9, scope: !4324)
!4357 = !DILocation(line: 479, column: 55, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4354, file: !392, line: 478, column: 40)
!4359 = !DILocation(line: 480, column: 5, scope: !4358)
!4360 = !DILocation(line: 483, column: 53, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4354, file: !392, line: 482, column: 10)
!4362 = !DILocation(line: 483, column: 67, scope: !4361)
!4363 = !DILocation(line: 484, column: 9, scope: !4361)
!4364 = !DILocation(line: 484, column: 55, scope: !4361)
!4365 = !DILocation(line: 484, column: 71, scope: !4361)
!4366 = !DILocation(line: 485, column: 9, scope: !4361)
!4367 = !DILocation(line: 485, column: 55, scope: !4361)
!4368 = !DILocation(line: 490, column: 5, scope: !4324)
!4369 = !DILocation(line: 490, column: 48, scope: !4324)
!4370 = !DILocation(line: 490, column: 61, scope: !4324)
!4371 = !DILocation(line: 493, column: 5, scope: !4324)
!4372 = !DILocation(line: 493, column: 47, scope: !4324)
!4373 = !DILocation(line: 493, column: 59, scope: !4324)
!4374 = !DILocation(line: 496, column: 108, scope: !4324)
!4375 = !DILocation(line: 496, column: 93, scope: !4324)
!4376 = !DILocation(line: 496, column: 5, scope: !4324)
!4377 = !DILocation(line: 496, column: 50, scope: !4324)
!4378 = !DILocation(line: 496, column: 65, scope: !4324)
!4379 = !DILocation(line: 498, column: 5, scope: !4324)
!4380 = !DILocation(line: 499, column: 1, scope: !4324)
!4381 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !392, file: !392, line: 502, type: !3998, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4382)
!4382 = !{!4383, !4384, !4385, !4386, !4387}
!4383 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4381, file: !392, line: 502, type: !3977)
!4384 = !DILocalVariable(name: "no1", scope: !4381, file: !392, line: 504, type: !61)
!4385 = !DILocalVariable(name: "no2", scope: !4381, file: !392, line: 504, type: !61)
!4386 = !DILocalVariable(name: "remainder1", scope: !4381, file: !392, line: 505, type: !61)
!4387 = !DILocalVariable(name: "remainder2", scope: !4381, file: !392, line: 505, type: !61)
!4388 = !DILocation(line: 0, scope: !4381)
!4389 = !DILocation(line: 507, column: 18, scope: !4390)
!4390 = distinct !DILexicalBlock(scope: !4381, file: !392, line: 507, column: 9)
!4391 = !DILocation(line: 507, column: 9, scope: !4381)
!4392 = !DILocation(line: 512, column: 20, scope: !4381)
!4393 = !DILocation(line: 515, column: 27, scope: !4381)
!4394 = !DILocation(line: 518, column: 20, scope: !4381)
!4395 = !DILocation(line: 524, column: 107, scope: !4381)
!4396 = !DILocation(line: 524, column: 92, scope: !4381)
!4397 = !DILocation(line: 524, column: 5, scope: !4381)
!4398 = !DILocation(line: 524, column: 49, scope: !4381)
!4399 = !DILocation(line: 524, column: 63, scope: !4381)
!4400 = !DILocation(line: 527, column: 89, scope: !4381)
!4401 = !DILocation(line: 527, column: 5, scope: !4381)
!4402 = !DILocation(line: 527, column: 48, scope: !4381)
!4403 = !DILocation(line: 527, column: 61, scope: !4381)
!4404 = !DILocation(line: 530, column: 9, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4381, file: !392, line: 530, column: 9)
!4406 = !DILocation(line: 0, scope: !4405)
!4407 = !DILocation(line: 530, column: 9, scope: !4381)
!4408 = !DILocation(line: 531, column: 55, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4405, file: !392, line: 530, column: 40)
!4410 = !DILocation(line: 531, column: 71, scope: !4409)
!4411 = !DILocation(line: 532, column: 9, scope: !4409)
!4412 = !DILocation(line: 532, column: 56, scope: !4409)
!4413 = !DILocation(line: 533, column: 5, scope: !4409)
!4414 = !DILocation(line: 536, column: 53, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4405, file: !392, line: 535, column: 10)
!4416 = !DILocation(line: 536, column: 67, scope: !4415)
!4417 = !DILocation(line: 537, column: 9, scope: !4415)
!4418 = !DILocation(line: 537, column: 55, scope: !4415)
!4419 = !DILocation(line: 537, column: 71, scope: !4415)
!4420 = !DILocation(line: 538, column: 9, scope: !4415)
!4421 = !DILocation(line: 538, column: 55, scope: !4415)
!4422 = !DILocation(line: 543, column: 5, scope: !4381)
!4423 = !DILocation(line: 543, column: 48, scope: !4381)
!4424 = !DILocation(line: 543, column: 61, scope: !4381)
!4425 = !DILocation(line: 546, column: 5, scope: !4381)
!4426 = !DILocation(line: 546, column: 47, scope: !4381)
!4427 = !DILocation(line: 546, column: 59, scope: !4381)
!4428 = !DILocation(line: 549, column: 5, scope: !4381)
!4429 = !DILocation(line: 550, column: 1, scope: !4381)
!4430 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !392, file: !392, line: 554, type: !4431, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4433)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{!4000, !3977, !490}
!4433 = !{!4434, !4435, !4436, !4437}
!4434 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4430, file: !392, line: 554, type: !3977)
!4435 = !DILocalVariable(name: "driving", arg: 2, scope: !4430, file: !392, line: 554, type: !490)
!4436 = !DILocalVariable(name: "no", scope: !4430, file: !392, line: 556, type: !61)
!4437 = !DILocalVariable(name: "remainder", scope: !4430, file: !392, line: 557, type: !61)
!4438 = !DILocation(line: 0, scope: !4430)
!4439 = !DILocation(line: 559, column: 19, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4430, file: !392, line: 559, column: 9)
!4441 = !DILocation(line: 559, column: 9, scope: !4430)
!4442 = !DILocation(line: 564, column: 19, scope: !4430)
!4443 = !DILocation(line: 569, column: 102, scope: !4430)
!4444 = !DILocation(line: 569, column: 88, scope: !4430)
!4445 = !DILocation(line: 569, column: 5, scope: !4430)
!4446 = !DILocation(line: 569, column: 47, scope: !4430)
!4447 = !DILocation(line: 569, column: 60, scope: !4430)
!4448 = !DILocation(line: 570, column: 71, scope: !4430)
!4449 = !DILocation(line: 570, column: 5, scope: !4430)
!4450 = !DILocation(line: 570, column: 47, scope: !4430)
!4451 = !DILocation(line: 570, column: 60, scope: !4430)
!4452 = !DILocation(line: 571, column: 5, scope: !4430)
!4453 = !DILocation(line: 572, column: 1, scope: !4430)
!4454 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !392, file: !392, line: 575, type: !4455, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !391, retainedNodes: !4458)
!4455 = !DISubroutineType(types: !4456)
!4456 = !{!4000, !3977, !4457}
!4457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 32)
!4458 = !{!4459, !4460, !4461, !4462, !4463}
!4459 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4454, file: !392, line: 575, type: !3977)
!4460 = !DILocalVariable(name: "driving", arg: 2, scope: !4454, file: !392, line: 575, type: !4457)
!4461 = !DILocalVariable(name: "no", scope: !4454, file: !392, line: 577, type: !61)
!4462 = !DILocalVariable(name: "remainder", scope: !4454, file: !392, line: 578, type: !61)
!4463 = !DILocalVariable(name: "temp", scope: !4454, file: !392, line: 579, type: !61)
!4464 = !DILocation(line: 0, scope: !4454)
!4465 = !DILocation(line: 581, column: 19, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4454, file: !392, line: 581, column: 9)
!4467 = !DILocation(line: 581, column: 9, scope: !4454)
!4468 = !DILocation(line: 585, column: 14, scope: !4469)
!4469 = distinct !DILexicalBlock(scope: !4454, file: !392, line: 585, column: 9)
!4470 = !DILocation(line: 585, column: 9, scope: !4454)
!4471 = !DILocation(line: 590, column: 19, scope: !4454)
!4472 = !DILocation(line: 595, column: 12, scope: !4454)
!4473 = !DILocation(line: 595, column: 54, scope: !4454)
!4474 = !DILocation(line: 596, column: 59, scope: !4454)
!4475 = !DILocation(line: 596, column: 45, scope: !4454)
!4476 = !DILocation(line: 596, column: 17, scope: !4454)
!4477 = !DILocation(line: 597, column: 18, scope: !4454)
!4478 = !DILocation(line: 600, column: 56, scope: !4454)
!4479 = !DILocation(line: 600, column: 14, scope: !4454)
!4480 = !DILocation(line: 602, column: 5, scope: !4454)
!4481 = !DILocation(line: 603, column: 1, scope: !4454)
!4482 = distinct !DISubprogram(name: "uart_receive_handler", scope: !672, file: !672, line: 146, type: !4483, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !4485)
!4483 = !DISubroutineType(types: !4484)
!4484 = !{null, !784, !91}
!4485 = !{!4486, !4487, !4488, !4490, !4491, !4492, !4493, !4549}
!4486 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4482, file: !672, line: 146, type: !784)
!4487 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4482, file: !672, line: 146, type: !91)
!4488 = !DILocalVariable(name: "channel", scope: !4482, file: !672, line: 148, type: !4489)
!4489 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !682, line: 203, baseType: !681)
!4490 = !DILocalVariable(name: "avail_bytes", scope: !4482, file: !672, line: 149, type: !61)
!4491 = !DILocalVariable(name: "callback", scope: !4482, file: !672, line: 150, type: !831)
!4492 = !DILocalVariable(name: "arg", scope: !4482, file: !672, line: 151, type: !88)
!4493 = !DILocalVariable(name: "uartx", scope: !4482, file: !672, line: 152, type: !4494)
!4494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4495, size: 32)
!4495 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !4496)
!4496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !4497)
!4497 = !{!4498, !4504, !4509, !4515, !4516, !4521, !4526, !4527, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548}
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4496, file: !56, line: 547, baseType: !4499, size: 32)
!4499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4496, file: !56, line: 543, size: 32, elements: !4500)
!4500 = !{!4501, !4502, !4503}
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4499, file: !56, line: 544, baseType: !324, size: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4499, file: !56, line: 545, baseType: !60, size: 32)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4499, file: !56, line: 546, baseType: !60, size: 32)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4496, file: !56, line: 551, baseType: !4505, size: 32, offset: 32)
!4505 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4496, file: !56, line: 548, size: 32, elements: !4506)
!4506 = !{!4507, !4508}
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4505, file: !56, line: 549, baseType: !60, size: 32)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4505, file: !56, line: 550, baseType: !60, size: 32)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4496, file: !56, line: 556, baseType: !4510, size: 32, offset: 64)
!4510 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4496, file: !56, line: 552, size: 32, elements: !4511)
!4511 = !{!4512, !4513, !4514}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4510, file: !56, line: 553, baseType: !324, size: 32)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4510, file: !56, line: 554, baseType: !60, size: 32)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4510, file: !56, line: 555, baseType: !60, size: 32)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4496, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4496, file: !56, line: 561, baseType: !4517, size: 32, offset: 128)
!4517 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4496, file: !56, line: 558, size: 32, elements: !4518)
!4518 = !{!4519, !4520}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4517, file: !56, line: 559, baseType: !60, size: 32)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4517, file: !56, line: 560, baseType: !60, size: 32)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4496, file: !56, line: 565, baseType: !4522, size: 32, offset: 160)
!4522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4496, file: !56, line: 562, size: 32, elements: !4523)
!4523 = !{!4524, !4525}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4522, file: !56, line: 563, baseType: !324, size: 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4522, file: !56, line: 564, baseType: !60, size: 32)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4496, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4496, file: !56, line: 570, baseType: !4528, size: 32, offset: 224)
!4528 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4496, file: !56, line: 567, size: 32, elements: !4529)
!4529 = !{!4530, !4531}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4528, file: !56, line: 568, baseType: !60, size: 32)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4528, file: !56, line: 569, baseType: !60, size: 32)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4496, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4496, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4496, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4496, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4496, file: !56, line: 575, baseType: !324, size: 32, offset: 384)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4496, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4496, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4496, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4496, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4496, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4496, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4496, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4496, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4496, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4496, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4496, file: !56, line: 586, baseType: !324, size: 32, offset: 736)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4496, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!4549 = !DILocalVariable(name: "status", scope: !4482, file: !672, line: 153, type: !4550)
!4550 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !682, line: 211, baseType: !702)
!4551 = !DILocation(line: 0, scope: !4482)
!4552 = !DILocation(line: 149, column: 5, scope: !4482)
!4553 = !DILocation(line: 155, column: 9, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4482, file: !672, line: 155, column: 9)
!4555 = !DILocation(line: 155, column: 36, scope: !4554)
!4556 = !DILocation(line: 155, column: 9, scope: !4482)
!4557 = !DILocation(line: 156, column: 9, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4554, file: !672, line: 155, column: 70)
!4559 = !DILocation(line: 160, column: 13, scope: !4482)
!4560 = !DILocation(line: 161, column: 15, scope: !4482)
!4561 = !DILocation(line: 163, column: 9, scope: !4482)
!4562 = !DILocation(line: 164, column: 9, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4564, file: !672, line: 163, column: 29)
!4564 = distinct !DILexicalBlock(scope: !4482, file: !672, line: 163, column: 9)
!4565 = !DILocation(line: 165, column: 5, scope: !4563)
!4566 = !DILocation(line: 167, column: 14, scope: !4482)
!4567 = !DILocation(line: 168, column: 16, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4482, file: !672, line: 168, column: 9)
!4569 = !DILocation(line: 168, column: 9, scope: !4482)
!4570 = !DILocation(line: 169, column: 9, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4568, file: !672, line: 168, column: 28)
!4572 = !DILocation(line: 172, column: 9, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4482, file: !672, line: 172, column: 9)
!4574 = !DILocation(line: 172, column: 21, scope: !4573)
!4575 = !DILocation(line: 172, column: 9, scope: !4482)
!4576 = !DILocation(line: 176, column: 43, scope: !4482)
!4577 = !DILocation(line: 178, column: 18, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4482, file: !672, line: 178, column: 9)
!4579 = !DILocation(line: 178, column: 9, scope: !4482)
!4580 = !DILocation(line: 179, column: 9, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4578, file: !672, line: 178, column: 27)
!4582 = !DILocation(line: 177, column: 38, scope: !4482)
!4583 = !DILocation(line: 183, column: 5, scope: !4482)
!4584 = !DILocation(line: 184, column: 5, scope: !4482)
!4585 = !DILocation(line: 185, column: 5, scope: !4482)
!4586 = !DILocation(line: 187, column: 14, scope: !4482)
!4587 = !DILocation(line: 188, column: 16, scope: !4588)
!4588 = distinct !DILexicalBlock(scope: !4482, file: !672, line: 188, column: 9)
!4589 = !DILocation(line: 188, column: 9, scope: !4482)
!4590 = !DILocation(line: 189, column: 9, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4588, file: !672, line: 188, column: 28)
!4592 = !DILocation(line: 192, column: 9, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4482, file: !672, line: 192, column: 9)
!4594 = !DILocation(line: 192, column: 53, scope: !4593)
!4595 = !DILocation(line: 192, column: 21, scope: !4593)
!4596 = !DILocation(line: 192, column: 9, scope: !4482)
!4597 = !DILocation(line: 193, column: 18, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4593, file: !672, line: 192, column: 83)
!4599 = !DILocation(line: 194, column: 20, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4598, file: !672, line: 194, column: 13)
!4601 = !DILocation(line: 194, column: 13, scope: !4598)
!4602 = !DILocation(line: 195, column: 13, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4600, file: !672, line: 194, column: 32)
!4604 = !DILocation(line: 199, column: 1, scope: !4482)
!4605 = distinct !DISubprogram(name: "uart_send_handler", scope: !672, file: !672, line: 210, type: !4483, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !4606)
!4606 = !{!4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615}
!4607 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4605, file: !672, line: 210, type: !784)
!4608 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4605, file: !672, line: 210, type: !91)
!4609 = !DILocalVariable(name: "channel", scope: !4605, file: !672, line: 212, type: !4489)
!4610 = !DILocalVariable(name: "status", scope: !4605, file: !672, line: 213, type: !4550)
!4611 = !DILocalVariable(name: "compare_space", scope: !4605, file: !672, line: 214, type: !61)
!4612 = !DILocalVariable(name: "avail_space", scope: !4605, file: !672, line: 214, type: !61)
!4613 = !DILocalVariable(name: "callback", scope: !4605, file: !672, line: 215, type: !831)
!4614 = !DILocalVariable(name: "arg", scope: !4605, file: !672, line: 216, type: !88)
!4615 = !DILocalVariable(name: "irq_status", scope: !4605, file: !672, line: 218, type: !61)
!4616 = !DILocation(line: 0, scope: !4605)
!4617 = !DILocation(line: 214, column: 5, scope: !4605)
!4618 = !DILocation(line: 221, column: 9, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4605, file: !672, line: 221, column: 9)
!4620 = !DILocation(line: 221, column: 36, scope: !4619)
!4621 = !DILocation(line: 221, column: 9, scope: !4605)
!4622 = !DILocation(line: 222, column: 9, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4619, file: !672, line: 221, column: 70)
!4624 = !DILocation(line: 226, column: 15, scope: !4605)
!4625 = !DILocation(line: 228, column: 9, scope: !4605)
!4626 = !DILocation(line: 230, column: 13, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4628, file: !672, line: 230, column: 13)
!4628 = distinct !DILexicalBlock(scope: !4629, file: !672, line: 228, column: 43)
!4629 = distinct !DILexicalBlock(scope: !4605, file: !672, line: 228, column: 9)
!4630 = !DILocation(line: 230, column: 61, scope: !4627)
!4631 = !DILocation(line: 230, column: 13, scope: !4628)
!4632 = !DILocation(line: 231, column: 26, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4627, file: !672, line: 230, column: 71)
!4634 = !DILocation(line: 232, column: 22, scope: !4633)
!4635 = !DILocation(line: 233, column: 24, scope: !4636)
!4636 = distinct !DILexicalBlock(scope: !4633, file: !672, line: 233, column: 17)
!4637 = !DILocation(line: 233, column: 17, scope: !4633)
!4638 = !DILocation(line: 234, column: 17, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4636, file: !672, line: 233, column: 36)
!4640 = !DILocation(line: 237, column: 46, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4633, file: !672, line: 237, column: 17)
!4642 = !DILocation(line: 237, column: 71, scope: !4641)
!4643 = !DILocation(line: 237, column: 83, scope: !4641)
!4644 = !DILocation(line: 237, column: 17, scope: !4633)
!4645 = !DILocation(line: 238, column: 21, scope: !4646)
!4646 = distinct !DILexicalBlock(scope: !4647, file: !672, line: 238, column: 21)
!4647 = distinct !DILexicalBlock(scope: !4641, file: !672, line: 237, column: 89)
!4648 = !DILocation(line: 238, column: 21, scope: !4647)
!4649 = !DILocation(line: 240, column: 65, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4651, file: !672, line: 240, column: 25)
!4651 = distinct !DILexicalBlock(scope: !4646, file: !672, line: 238, column: 65)
!4652 = !DILocation(line: 240, column: 25, scope: !4650)
!4653 = !DILocation(line: 240, column: 25, scope: !4651)
!4654 = !DILocation(line: 241, column: 56, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4650, file: !672, line: 240, column: 107)
!4656 = !DILocation(line: 241, column: 25, scope: !4655)
!4657 = !DILocation(line: 242, column: 21, scope: !4655)
!4658 = !DILocation(line: 243, column: 56, scope: !4651)
!4659 = !DILocation(line: 244, column: 17, scope: !4651)
!4660 = !DILocation(line: 246, column: 13, scope: !4633)
!4661 = !DILocation(line: 247, column: 9, scope: !4633)
!4662 = !DILocation(line: 248, column: 61, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4627, file: !672, line: 247, column: 16)
!4664 = !DILocation(line: 253, column: 47, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4629, file: !672, line: 252, column: 12)
!4666 = !DILocation(line: 255, column: 22, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4665, file: !672, line: 255, column: 13)
!4668 = !DILocation(line: 255, column: 13, scope: !4665)
!4669 = !DILocation(line: 256, column: 13, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4667, file: !672, line: 255, column: 31)
!4671 = !DILocation(line: 254, column: 42, scope: !4665)
!4672 = !DILocation(line: 260, column: 9, scope: !4665)
!4673 = !DILocation(line: 261, column: 9, scope: !4665)
!4674 = !DILocation(line: 262, column: 9, scope: !4665)
!4675 = !DILocation(line: 264, column: 18, scope: !4665)
!4676 = !DILocation(line: 265, column: 20, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4665, file: !672, line: 265, column: 13)
!4678 = !DILocation(line: 265, column: 13, scope: !4665)
!4679 = !DILocation(line: 266, column: 13, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4677, file: !672, line: 265, column: 32)
!4681 = !DILocation(line: 269, column: 54, scope: !4665)
!4682 = !DILocation(line: 270, column: 56, scope: !4665)
!4683 = !DILocation(line: 270, column: 25, scope: !4665)
!4684 = !DILocation(line: 271, column: 13, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4665, file: !672, line: 271, column: 13)
!4686 = !DILocation(line: 271, column: 25, scope: !4685)
!4687 = !DILocation(line: 271, column: 13, scope: !4665)
!4688 = !DILocation(line: 272, column: 22, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4685, file: !672, line: 271, column: 43)
!4690 = !DILocation(line: 273, column: 24, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4689, file: !672, line: 273, column: 17)
!4692 = !DILocation(line: 273, column: 17, scope: !4689)
!4693 = !DILocation(line: 274, column: 17, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4691, file: !672, line: 273, column: 36)
!4695 = !DILocation(line: 279, column: 1, scope: !4605)
!4696 = distinct !DISubprogram(name: "uart_error_handler", scope: !672, file: !672, line: 282, type: !4697, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !4699)
!4697 = !DISubroutineType(types: !4698)
!4698 = !{null, !784}
!4699 = !{!4700, !4701, !4702, !4703}
!4700 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4696, file: !672, line: 282, type: !784)
!4701 = !DILocalVariable(name: "uartx", scope: !4696, file: !672, line: 284, type: !4494)
!4702 = !DILocalVariable(name: "callback", scope: !4696, file: !672, line: 285, type: !831)
!4703 = !DILocalVariable(name: "arg", scope: !4696, file: !672, line: 286, type: !88)
!4704 = !DILocation(line: 0, scope: !4696)
!4705 = !DILocation(line: 288, column: 13, scope: !4696)
!4706 = !DILocation(line: 290, column: 10, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4696, file: !672, line: 290, column: 9)
!4708 = !DILocation(line: 290, column: 9, scope: !4696)
!4709 = !DILocation(line: 291, column: 9, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4707, file: !672, line: 290, column: 36)
!4711 = !DILocation(line: 292, column: 9, scope: !4710)
!4712 = !DILocation(line: 293, column: 47, scope: !4710)
!4713 = !DILocation(line: 295, column: 22, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4710, file: !672, line: 295, column: 13)
!4715 = !DILocation(line: 295, column: 13, scope: !4710)
!4716 = !DILocation(line: 296, column: 13, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4714, file: !672, line: 295, column: 31)
!4718 = !DILocation(line: 294, column: 42, scope: !4710)
!4719 = !DILocation(line: 299, column: 9, scope: !4710)
!4720 = !DILocation(line: 300, column: 5, scope: !4710)
!4721 = !DILocation(line: 301, column: 1, scope: !4696)
!4722 = distinct !DISubprogram(name: "uart_backup_all_registers", scope: !672, file: !672, line: 315, type: !343, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !4723)
!4723 = !{!4724, !4725, !4726, !4727, !4728}
!4724 = !DILocalVariable(name: "uart_port", scope: !4722, file: !672, line: 317, type: !784)
!4725 = !DILocalVariable(name: "uart_hwstatus", scope: !4722, file: !672, line: 318, type: !866)
!4726 = !DILocalVariable(name: "uart_flowcontrol", scope: !4722, file: !672, line: 319, type: !798)
!4727 = !DILocalVariable(name: "uart_callback", scope: !4722, file: !672, line: 320, type: !831)
!4728 = !DILocalVariable(name: "uart_callback_arg", scope: !4722, file: !672, line: 321, type: !88)
!4729 = !DILocation(line: 0, scope: !4722)
!4730 = !DILocation(line: 329, column: 5, scope: !4731)
!4731 = distinct !DILexicalBlock(scope: !4722, file: !672, line: 329, column: 5)
!4732 = !DILocation(line: 330, column: 13, scope: !4733)
!4733 = distinct !DILexicalBlock(scope: !4734, file: !672, line: 330, column: 13)
!4734 = distinct !DILexicalBlock(scope: !4735, file: !672, line: 329, column: 73)
!4735 = distinct !DILexicalBlock(scope: !4731, file: !672, line: 329, column: 5)
!4736 = !DILocation(line: 330, column: 40, scope: !4733)
!4737 = !DILocation(line: 330, column: 13, scope: !4734)
!4738 = !DILocation(line: 331, column: 29, scope: !4739)
!4739 = distinct !DILexicalBlock(scope: !4733, file: !672, line: 330, column: 72)
!4740 = !DILocation(line: 332, column: 32, scope: !4739)
!4741 = !DILocation(line: 333, column: 56, scope: !4739)
!4742 = !DILocation(line: 334, column: 60, scope: !4739)
!4743 = !DILocation(line: 345, column: 13, scope: !4739)
!4744 = !DILocation(line: 346, column: 40, scope: !4739)
!4745 = !DILocation(line: 347, column: 50, scope: !4739)
!4746 = !DILocation(line: 348, column: 45, scope: !4739)
!4747 = !DILocation(line: 349, column: 44, scope: !4739)
!4748 = !DILocation(line: 350, column: 77, scope: !4739)
!4749 = !DILocation(line: 350, column: 52, scope: !4739)
!4750 = !DILocation(line: 350, column: 13, scope: !4739)
!4751 = !DILocation(line: 350, column: 50, scope: !4739)
!4752 = !DILocation(line: 358, column: 9, scope: !4739)
!4753 = !DILocation(line: 329, column: 69, scope: !4735)
!4754 = !DILocation(line: 329, column: 44, scope: !4735)
!4755 = distinct !{!4755, !4730, !4756}
!4756 = !DILocation(line: 359, column: 5, scope: !4731)
!4757 = !DILocation(line: 360, column: 1, scope: !4722)
!4758 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !672, file: !672, line: 544, type: !4759, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !4762)
!4759 = !DISubroutineType(types: !4760)
!4760 = !{!4761, !784}
!4761 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !697, line: 351, baseType: !718)
!4762 = !{!4763, !4764, !4765, !4766, !4767, !4768, !4769}
!4763 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4758, file: !672, line: 544, type: !784)
!4764 = !DILocalVariable(name: "uartx", scope: !4758, file: !672, line: 546, type: !4494)
!4765 = !DILocalVariable(name: "tx_dma_channel", scope: !4758, file: !672, line: 547, type: !4489)
!4766 = !DILocalVariable(name: "rx_dma_channel", scope: !4758, file: !672, line: 547, type: !4489)
!4767 = !DILocalVariable(name: "irq_status", scope: !4758, file: !672, line: 548, type: !61)
!4768 = !DILocalVariable(name: "status", scope: !4758, file: !672, line: 549, type: !4550)
!4769 = !DILocalVariable(name: "clock_status", scope: !4758, file: !672, line: 550, type: !4770)
!4770 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !757, line: 106, baseType: !756)
!4771 = !DILocation(line: 0, scope: !4758)
!4772 = !DILocation(line: 552, column: 10, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4758, file: !672, line: 552, column: 9)
!4774 = !DILocation(line: 552, column: 9, scope: !4758)
!4775 = !DILocation(line: 556, column: 18, scope: !4758)
!4776 = !DILocation(line: 557, column: 9, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4758, file: !672, line: 557, column: 9)
!4778 = !DILocation(line: 557, column: 36, scope: !4777)
!4779 = !DILocation(line: 557, column: 9, scope: !4758)
!4780 = !DILocation(line: 562, column: 13, scope: !4758)
!4781 = !DILocation(line: 565, column: 5, scope: !4758)
!4782 = !DILocation(line: 568, column: 9, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4758, file: !672, line: 568, column: 9)
!4784 = !DILocation(line: 568, column: 36, scope: !4783)
!4785 = !DILocation(line: 568, column: 9, scope: !4758)
!4786 = !DILocation(line: 569, column: 26, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4783, file: !672, line: 568, column: 70)
!4788 = !DILocation(line: 570, column: 26, scope: !4787)
!4789 = !DILocation(line: 572, column: 18, scope: !4787)
!4790 = !DILocation(line: 573, column: 20, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4787, file: !672, line: 573, column: 13)
!4792 = !DILocation(line: 573, column: 13, scope: !4787)
!4793 = !DILocation(line: 574, column: 13, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4791, file: !672, line: 573, column: 32)
!4795 = !DILocation(line: 575, column: 13, scope: !4794)
!4796 = !DILocation(line: 578, column: 18, scope: !4787)
!4797 = !DILocation(line: 579, column: 20, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4787, file: !672, line: 579, column: 13)
!4799 = !DILocation(line: 579, column: 13, scope: !4787)
!4800 = !DILocation(line: 580, column: 13, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4798, file: !672, line: 579, column: 32)
!4802 = !DILocation(line: 581, column: 13, scope: !4801)
!4803 = !DILocation(line: 584, column: 18, scope: !4787)
!4804 = !DILocation(line: 585, column: 20, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4787, file: !672, line: 585, column: 13)
!4806 = !DILocation(line: 585, column: 13, scope: !4787)
!4807 = !DILocation(line: 586, column: 13, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4805, file: !672, line: 585, column: 32)
!4809 = !DILocation(line: 587, column: 13, scope: !4808)
!4810 = !DILocation(line: 590, column: 18, scope: !4787)
!4811 = !DILocation(line: 591, column: 20, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4787, file: !672, line: 591, column: 13)
!4813 = !DILocation(line: 591, column: 13, scope: !4787)
!4814 = !DILocation(line: 592, column: 13, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4812, file: !672, line: 591, column: 32)
!4816 = !DILocation(line: 593, column: 13, scope: !4815)
!4817 = !DILocation(line: 596, column: 18, scope: !4787)
!4818 = !DILocation(line: 597, column: 20, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4787, file: !672, line: 597, column: 13)
!4820 = !DILocation(line: 597, column: 13, scope: !4787)
!4821 = !DILocation(line: 598, column: 13, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4819, file: !672, line: 597, column: 32)
!4823 = !DILocation(line: 599, column: 13, scope: !4822)
!4824 = !DILocation(line: 602, column: 18, scope: !4787)
!4825 = !DILocation(line: 603, column: 20, scope: !4826)
!4826 = distinct !DILexicalBlock(scope: !4787, file: !672, line: 603, column: 13)
!4827 = !DILocation(line: 603, column: 13, scope: !4787)
!4828 = !DILocation(line: 604, column: 13, scope: !4829)
!4829 = distinct !DILexicalBlock(scope: !4826, file: !672, line: 603, column: 32)
!4830 = !DILocation(line: 605, column: 13, scope: !4829)
!4831 = !DILocation(line: 608, column: 30, scope: !4787)
!4832 = !DILocation(line: 608, column: 9, scope: !4787)
!4833 = !DILocation(line: 609, column: 5, scope: !4787)
!4834 = !DILocation(line: 610, column: 5, scope: !4758)
!4835 = !DILocation(line: 611, column: 38, scope: !4758)
!4836 = !DILocation(line: 611, column: 20, scope: !4758)
!4837 = !DILocation(line: 612, column: 22, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4758, file: !672, line: 612, column: 9)
!4839 = !DILocation(line: 612, column: 9, scope: !4758)
!4840 = !DILocation(line: 613, column: 9, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4838, file: !672, line: 612, column: 46)
!4842 = !DILocation(line: 614, column: 9, scope: !4841)
!4843 = !DILocation(line: 618, column: 32, scope: !4758)
!4844 = !DILocation(line: 618, column: 37, scope: !4758)
!4845 = !DILocation(line: 619, column: 32, scope: !4758)
!4846 = !DILocation(line: 619, column: 36, scope: !4758)
!4847 = !DILocation(line: 622, column: 5, scope: !4758)
!4848 = !DILocation(line: 622, column: 53, scope: !4758)
!4849 = !DILocation(line: 623, column: 5, scope: !4758)
!4850 = !DILocation(line: 623, column: 42, scope: !4758)
!4851 = !DILocation(line: 635, column: 32, scope: !4758)
!4852 = !DILocation(line: 639, column: 5, scope: !4758)
!4853 = !DILocation(line: 640, column: 1, scope: !4758)
!4854 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !672, file: !672, line: 120, type: !4855, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !4857)
!4855 = !DISubroutineType(types: !4856)
!4856 = !{!91, !784}
!4857 = !{!4858}
!4858 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4854, file: !672, line: 120, type: !784)
!4859 = !DILocation(line: 0, scope: !4854)
!4860 = !DILocation(line: 122, column: 23, scope: !4854)
!4861 = !DILocation(line: 122, column: 5, scope: !4854)
!4862 = distinct !DISubprogram(name: "uart_restore_all_registers", scope: !672, file: !672, line: 362, type: !343, scopeLine: 363, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !4863)
!4863 = !{!4864, !4865, !4866, !4867, !4868}
!4864 = !DILocalVariable(name: "delay", scope: !4862, file: !672, line: 364, type: !61)
!4865 = !DILocalVariable(name: "uart_port", scope: !4862, file: !672, line: 365, type: !784)
!4866 = !DILocalVariable(name: "uartx", scope: !4862, file: !672, line: 366, type: !4494)
!4867 = !DILocalVariable(name: "uart_hwstatus", scope: !4862, file: !672, line: 367, type: !866)
!4868 = !DILocalVariable(name: "sleep_lock_status", scope: !4862, file: !672, line: 368, type: !91)
!4869 = !DILocation(line: 369, column: 25, scope: !4862)
!4870 = !DILocation(line: 0, scope: !4862)
!4871 = !DILocation(line: 371, column: 5, scope: !4872)
!4872 = distinct !DILexicalBlock(scope: !4862, file: !672, line: 371, column: 5)
!4873 = !DILocation(line: 372, column: 25, scope: !4874)
!4874 = distinct !DILexicalBlock(scope: !4875, file: !672, line: 371, column: 73)
!4875 = distinct !DILexicalBlock(scope: !4872, file: !672, line: 371, column: 5)
!4876 = !DILocation(line: 373, column: 27, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4874, file: !672, line: 373, column: 13)
!4878 = !DILocation(line: 373, column: 13, scope: !4874)
!4879 = !DILocation(line: 374, column: 40, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4877, file: !672, line: 373, column: 59)
!4881 = !DILocation(line: 375, column: 39, scope: !4880)
!4882 = !DILocation(line: 375, column: 13, scope: !4880)
!4883 = !DILocation(line: 376, column: 9, scope: !4880)
!4884 = !DILocation(line: 380, column: 13, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4874, file: !672, line: 380, column: 13)
!4886 = !DILocation(line: 380, column: 13, scope: !4874)
!4887 = !DILocation(line: 381, column: 21, scope: !4888)
!4888 = distinct !DILexicalBlock(scope: !4885, file: !672, line: 380, column: 80)
!4889 = !DILocation(line: 382, column: 80, scope: !4888)
!4890 = !DILocation(line: 382, column: 13, scope: !4888)
!4891 = !DILocation(line: 384, column: 64, scope: !4888)
!4892 = !DILocation(line: 384, column: 37, scope: !4888)
!4893 = !DILocation(line: 384, column: 74, scope: !4888)
!4894 = !DILocation(line: 385, column: 13, scope: !4888)
!4895 = !DILocation(line: 387, column: 87, scope: !4888)
!4896 = !DILocation(line: 388, column: 87, scope: !4888)
!4897 = !DILocation(line: 389, column: 87, scope: !4888)
!4898 = !DILocation(line: 386, column: 13, scope: !4888)
!4899 = !DILocation(line: 390, column: 9, scope: !4888)
!4900 = !DILocation(line: 391, column: 13, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4902, file: !672, line: 390, column: 87)
!4902 = distinct !DILexicalBlock(scope: !4885, file: !672, line: 390, column: 20)
!4903 = !DILocation(line: 392, column: 9, scope: !4901)
!4904 = !DILocation(line: 394, column: 27, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4874, file: !672, line: 394, column: 13)
!4906 = !DILocation(line: 394, column: 13, scope: !4874)
!4907 = !DILocation(line: 395, column: 42, scope: !4908)
!4908 = distinct !DILexicalBlock(scope: !4905, file: !672, line: 394, column: 61)
!4909 = !DILocation(line: 395, column: 13, scope: !4908)
!4910 = !DILocation(line: 396, column: 78, scope: !4908)
!4911 = !DILocation(line: 396, column: 111, scope: !4908)
!4912 = !DILocation(line: 396, column: 13, scope: !4908)
!4913 = !DILocation(line: 397, column: 9, scope: !4908)
!4914 = !DILocation(line: 399, column: 69, scope: !4874)
!4915 = !DILocation(line: 399, column: 29, scope: !4874)
!4916 = !DILocation(line: 400, column: 41, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4874, file: !672, line: 400, column: 13)
!4918 = !DILocation(line: 400, column: 45, scope: !4917)
!4919 = !DILocation(line: 400, column: 13, scope: !4874)
!4920 = !DILocation(line: 402, column: 44, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4917, file: !672, line: 400, column: 89)
!4922 = !DILocation(line: 402, column: 13, scope: !4921)
!4923 = !DILocation(line: 403, column: 9, scope: !4921)
!4924 = !DILocation(line: 371, column: 69, scope: !4875)
!4925 = !DILocation(line: 371, column: 44, scope: !4875)
!4926 = distinct !{!4926, !4871, !4927}
!4927 = !DILocation(line: 411, column: 5, scope: !4872)
!4928 = !DILocation(line: 412, column: 25, scope: !4862)
!4929 = !DILocation(line: 413, column: 1, scope: !4862)
!4930 = distinct !DISubprogram(name: "hal_uart_init", scope: !672, file: !672, line: 476, type: !4931, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !4934)
!4931 = !DISubroutineType(types: !4932)
!4932 = !{!4761, !784, !4933}
!4933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 32)
!4934 = !{!4935, !4936, !4937, !4938, !4939, !4940, !4941}
!4935 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4930, file: !672, line: 476, type: !784)
!4936 = !DILocalVariable(name: "uart_config", arg: 2, scope: !4930, file: !672, line: 476, type: !4933)
!4937 = !DILocalVariable(name: "uartx", scope: !4930, file: !672, line: 478, type: !4494)
!4938 = !DILocalVariable(name: "i", scope: !4930, file: !672, line: 479, type: !61)
!4939 = !DILocalVariable(name: "actual_baudrate", scope: !4930, file: !672, line: 479, type: !61)
!4940 = !DILocalVariable(name: "irq_status", scope: !4930, file: !672, line: 479, type: !61)
!4941 = !DILocalVariable(name: "status", scope: !4930, file: !672, line: 480, type: !4770)
!4942 = !DILocation(line: 0, scope: !4930)
!4943 = !DILocation(line: 482, column: 11, scope: !4944)
!4944 = distinct !DILexicalBlock(scope: !4930, file: !672, line: 482, column: 9)
!4945 = !DILocation(line: 482, column: 42, scope: !4944)
!4946 = !DILocation(line: 483, column: 11, scope: !4944)
!4947 = !DILocation(line: 482, column: 9, scope: !4930)
!4948 = !DILocation(line: 487, column: 18, scope: !4930)
!4949 = !DILocation(line: 488, column: 9, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4930, file: !672, line: 488, column: 9)
!4951 = !DILocation(line: 488, column: 36, scope: !4950)
!4952 = !DILocation(line: 488, column: 9, scope: !4930)
!4953 = !DILocation(line: 489, column: 9, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4950, file: !672, line: 488, column: 68)
!4955 = !DILocation(line: 490, column: 9, scope: !4954)
!4956 = !DILocation(line: 497, column: 9, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4930, file: !672, line: 497, column: 9)
!4958 = !DILocation(line: 497, column: 9, scope: !4930)
!4959 = !DILocation(line: 498, column: 86, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4957, file: !672, line: 497, column: 39)
!4961 = !DILocation(line: 498, column: 43, scope: !4960)
!4962 = !DILocation(line: 498, column: 9, scope: !4960)
!4963 = !DILocation(line: 498, column: 41, scope: !4960)
!4964 = !DILocation(line: 499, column: 5, scope: !4960)
!4965 = !DILocation(line: 502, column: 9, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4930, file: !672, line: 502, column: 9)
!4967 = !DILocation(line: 502, column: 9, scope: !4930)
!4968 = !DILocation(line: 504, column: 13, scope: !4969)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !672, line: 503, column: 44)
!4970 = distinct !DILexicalBlock(scope: !4971, file: !672, line: 503, column: 9)
!4971 = distinct !DILexicalBlock(scope: !4972, file: !672, line: 503, column: 9)
!4972 = distinct !DILexicalBlock(scope: !4966, file: !672, line: 502, column: 50)
!4973 = !DILocation(line: 504, column: 32, scope: !4969)
!4974 = !DILocation(line: 506, column: 13, scope: !4969)
!4975 = !DILocation(line: 506, column: 42, scope: !4969)
!4976 = !DILocation(line: 507, column: 13, scope: !4969)
!4977 = !DILocation(line: 507, column: 53, scope: !4969)
!4978 = !DILocation(line: 508, column: 13, scope: !4969)
!4979 = !DILocation(line: 508, column: 40, scope: !4969)
!4980 = !DILocation(line: 510, column: 32, scope: !4969)
!4981 = !DILocation(line: 510, column: 36, scope: !4969)
!4982 = !DILocation(line: 511, column: 32, scope: !4969)
!4983 = !DILocation(line: 511, column: 37, scope: !4969)
!4984 = !DILocation(line: 503, column: 40, scope: !4970)
!4985 = !DILocation(line: 503, column: 23, scope: !4970)
!4986 = !DILocation(line: 503, column: 9, scope: !4971)
!4987 = distinct !{!4987, !4986, !4988}
!4988 = !DILocation(line: 512, column: 9, scope: !4971)
!4989 = !DILocation(line: 513, column: 40, scope: !4972)
!4990 = !DILocation(line: 514, column: 5, scope: !4972)
!4991 = !DILocation(line: 516, column: 54, scope: !4930)
!4992 = !DILocation(line: 516, column: 30, scope: !4930)
!4993 = !DILocation(line: 516, column: 39, scope: !4930)
!4994 = !DILocation(line: 517, column: 57, scope: !4930)
!4995 = !DILocation(line: 517, column: 30, scope: !4930)
!4996 = !DILocation(line: 517, column: 42, scope: !4930)
!4997 = !DILocation(line: 518, column: 54, scope: !4930)
!4998 = !DILocation(line: 518, column: 30, scope: !4930)
!4999 = !DILocation(line: 518, column: 39, scope: !4930)
!5000 = !DILocation(line: 519, column: 52, scope: !4930)
!5001 = !DILocation(line: 519, column: 30, scope: !4930)
!5002 = !DILocation(line: 519, column: 37, scope: !4930)
!5003 = !DILocation(line: 521, column: 32, scope: !4930)
!5004 = !DILocation(line: 522, column: 5, scope: !4930)
!5005 = !DILocation(line: 524, column: 31, scope: !4930)
!5006 = !DILocation(line: 524, column: 14, scope: !4930)
!5007 = !DILocation(line: 525, column: 16, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4930, file: !672, line: 525, column: 9)
!5009 = !DILocation(line: 525, column: 9, scope: !4930)
!5010 = !DILocation(line: 526, column: 9, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5008, file: !672, line: 525, column: 40)
!5012 = !DILocation(line: 530, column: 13, scope: !4930)
!5013 = !DILocation(line: 532, column: 5, scope: !4930)
!5014 = !DILocation(line: 533, column: 56, scope: !4930)
!5015 = !DILocation(line: 533, column: 23, scope: !4930)
!5016 = !DILocation(line: 534, column: 5, scope: !4930)
!5017 = !DILocation(line: 535, column: 41, scope: !4930)
!5018 = !DILocation(line: 535, column: 67, scope: !4930)
!5019 = !DILocation(line: 535, column: 90, scope: !4930)
!5020 = !DILocation(line: 535, column: 5, scope: !4930)
!5021 = !DILocation(line: 536, column: 5, scope: !4930)
!5022 = !DILocation(line: 538, column: 5, scope: !4930)
!5023 = !DILocation(line: 541, column: 5, scope: !4930)
!5024 = !DILocation(line: 542, column: 1, scope: !4930)
!5025 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !672, file: !672, line: 1018, type: !5026, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5028)
!5026 = !DISubroutineType(types: !5027)
!5027 = !{!4761, !784, !159, !159, !159}
!5028 = !{!5029, !5030, !5031, !5032, !5033}
!5029 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5025, file: !672, line: 1018, type: !784)
!5030 = !DILocalVariable(name: "xon", arg: 2, scope: !5025, file: !672, line: 1019, type: !159)
!5031 = !DILocalVariable(name: "xoff", arg: 3, scope: !5025, file: !672, line: 1020, type: !159)
!5032 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5025, file: !672, line: 1021, type: !159)
!5033 = !DILocalVariable(name: "uartx", scope: !5025, file: !672, line: 1023, type: !4494)
!5034 = !DILocation(line: 0, scope: !5025)
!5035 = !DILocation(line: 1025, column: 10, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5025, file: !672, line: 1025, column: 9)
!5037 = !DILocation(line: 1025, column: 9, scope: !5025)
!5038 = !DILocation(line: 1029, column: 9, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5025, file: !672, line: 1029, column: 9)
!5040 = !DILocation(line: 1029, column: 36, scope: !5039)
!5041 = !DILocation(line: 1029, column: 9, scope: !5025)
!5042 = !DILocation(line: 1033, column: 13, scope: !5025)
!5043 = !DILocation(line: 1035, column: 5, scope: !5025)
!5044 = !DILocation(line: 1038, column: 5, scope: !5025)
!5045 = !DILocation(line: 1038, column: 42, scope: !5025)
!5046 = !DILocation(line: 1039, column: 45, scope: !5025)
!5047 = !DILocation(line: 1039, column: 49, scope: !5025)
!5048 = !DILocation(line: 1040, column: 45, scope: !5025)
!5049 = !DILocation(line: 1040, column: 50, scope: !5025)
!5050 = !DILocation(line: 1041, column: 45, scope: !5025)
!5051 = !DILocation(line: 1041, column: 62, scope: !5025)
!5052 = !DILocation(line: 1044, column: 5, scope: !5025)
!5053 = !DILocation(line: 1045, column: 1, scope: !5025)
!5054 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !672, file: !672, line: 995, type: !4759, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5055)
!5055 = !{!5056, !5057}
!5056 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5054, file: !672, line: 995, type: !784)
!5057 = !DILocalVariable(name: "uartx", scope: !5054, file: !672, line: 997, type: !4494)
!5058 = !DILocation(line: 0, scope: !5054)
!5059 = !DILocation(line: 999, column: 10, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5054, file: !672, line: 999, column: 9)
!5061 = !DILocation(line: 999, column: 9, scope: !5054)
!5062 = !DILocation(line: 1003, column: 9, scope: !5063)
!5063 = distinct !DILexicalBlock(scope: !5054, file: !672, line: 1003, column: 9)
!5064 = !DILocation(line: 1003, column: 36, scope: !5063)
!5065 = !DILocation(line: 1003, column: 9, scope: !5054)
!5066 = !DILocation(line: 1007, column: 13, scope: !5054)
!5067 = !DILocation(line: 1009, column: 5, scope: !5054)
!5068 = !DILocation(line: 1012, column: 5, scope: !5054)
!5069 = !DILocation(line: 1012, column: 42, scope: !5054)
!5070 = !DILocation(line: 1015, column: 5, scope: !5054)
!5071 = !DILocation(line: 1016, column: 1, scope: !5054)
!5072 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !672, file: !672, line: 1071, type: !5073, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5077)
!5073 = !DISubroutineType(types: !5074)
!5074 = !{!4761, !784, !5075}
!5075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5076, size: 32)
!5076 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !845)
!5077 = !{!5078, !5079, !5080, !5081, !5087, !5088, !5089}
!5078 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5072, file: !672, line: 1071, type: !784)
!5079 = !DILocalVariable(name: "dma_config", arg: 2, scope: !5072, file: !672, line: 1071, type: !5075)
!5080 = !DILocalVariable(name: "irq_status", scope: !5072, file: !672, line: 1073, type: !61)
!5081 = !DILocalVariable(name: "internal_dma_config", scope: !5072, file: !672, line: 1074, type: !5082)
!5082 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !682, line: 283, baseType: !5083)
!5083 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !682, line: 280, size: 64, elements: !5084)
!5084 = !{!5085, !5086}
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5083, file: !682, line: 281, baseType: !61, size: 32)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5083, file: !682, line: 282, baseType: !61, size: 32, offset: 32)
!5087 = !DILocalVariable(name: "tx_dma_channel", scope: !5072, file: !672, line: 1075, type: !4489)
!5088 = !DILocalVariable(name: "rx_dma_channel", scope: !5072, file: !672, line: 1075, type: !4489)
!5089 = !DILocalVariable(name: "status", scope: !5072, file: !672, line: 1076, type: !4550)
!5090 = !DILocation(line: 0, scope: !5072)
!5091 = !DILocation(line: 1074, column: 5, scope: !5072)
!5092 = !DILocation(line: 1074, column: 19, scope: !5072)
!5093 = !DILocation(line: 1078, column: 10, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1078, column: 9)
!5095 = !DILocation(line: 1078, column: 9, scope: !5072)
!5096 = !DILocation(line: 1081, column: 22, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1081, column: 9)
!5098 = !DILocation(line: 1081, column: 40, scope: !5097)
!5099 = !DILocation(line: 1081, column: 49, scope: !5097)
!5100 = !DILocation(line: 1082, column: 22, scope: !5097)
!5101 = !DILocation(line: 1082, column: 43, scope: !5097)
!5102 = !DILocation(line: 1081, column: 9, scope: !5072)
!5103 = !DILocation(line: 1085, column: 22, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1085, column: 9)
!5105 = !DILocation(line: 1085, column: 45, scope: !5104)
!5106 = !DILocation(line: 1085, column: 76, scope: !5104)
!5107 = !DILocation(line: 1086, column: 22, scope: !5104)
!5108 = !DILocation(line: 1086, column: 48, scope: !5104)
!5109 = !DILocation(line: 1086, column: 79, scope: !5104)
!5110 = !DILocation(line: 1090, column: 22, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1090, column: 9)
!5112 = !DILocation(line: 1090, column: 48, scope: !5111)
!5113 = !DILocation(line: 1090, column: 79, scope: !5111)
!5114 = !DILocation(line: 1091, column: 22, scope: !5111)
!5115 = !DILocation(line: 1091, column: 51, scope: !5111)
!5116 = !DILocation(line: 1091, column: 82, scope: !5111)
!5117 = !DILocation(line: 1092, column: 22, scope: !5111)
!5118 = !DILocation(line: 1092, column: 47, scope: !5111)
!5119 = !DILocation(line: 1092, column: 78, scope: !5111)
!5120 = !DILocation(line: 1098, column: 9, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1098, column: 9)
!5122 = !DILocation(line: 1098, column: 36, scope: !5121)
!5123 = !DILocation(line: 1098, column: 9, scope: !5072)
!5124 = !DILocation(line: 1102, column: 22, scope: !5072)
!5125 = !DILocation(line: 1103, column: 22, scope: !5072)
!5126 = !DILocation(line: 1105, column: 14, scope: !5072)
!5127 = !DILocation(line: 1106, column: 16, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1106, column: 9)
!5129 = !DILocation(line: 1106, column: 9, scope: !5072)
!5130 = !DILocation(line: 1107, column: 9, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5128, file: !672, line: 1106, column: 28)
!5132 = !DILocation(line: 1110, column: 62, scope: !5072)
!5133 = !DILocation(line: 1110, column: 40, scope: !5072)
!5134 = !DILocation(line: 1110, column: 25, scope: !5072)
!5135 = !DILocation(line: 1110, column: 38, scope: !5072)
!5136 = !DILocation(line: 1111, column: 44, scope: !5072)
!5137 = !DILocation(line: 1111, column: 25, scope: !5072)
!5138 = !DILocation(line: 1111, column: 30, scope: !5072)
!5139 = !DILocation(line: 1112, column: 14, scope: !5072)
!5140 = !DILocation(line: 1113, column: 16, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1113, column: 9)
!5142 = !DILocation(line: 1113, column: 9, scope: !5072)
!5143 = !DILocation(line: 1114, column: 9, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5141, file: !672, line: 1113, column: 28)
!5145 = !DILocation(line: 1117, column: 61, scope: !5072)
!5146 = !DILocation(line: 1117, column: 14, scope: !5072)
!5147 = !DILocation(line: 1118, column: 16, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1118, column: 9)
!5149 = !DILocation(line: 1118, column: 9, scope: !5072)
!5150 = !DILocation(line: 1119, column: 9, scope: !5151)
!5151 = distinct !DILexicalBlock(scope: !5148, file: !672, line: 1118, column: 28)
!5152 = !DILocation(line: 1123, column: 14, scope: !5072)
!5153 = !DILocation(line: 1124, column: 16, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1124, column: 9)
!5155 = !DILocation(line: 1124, column: 9, scope: !5072)
!5156 = !DILocation(line: 1125, column: 9, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5154, file: !672, line: 1124, column: 28)
!5158 = !DILocation(line: 1128, column: 62, scope: !5072)
!5159 = !DILocation(line: 1128, column: 40, scope: !5072)
!5160 = !DILocation(line: 1128, column: 38, scope: !5072)
!5161 = !DILocation(line: 1129, column: 44, scope: !5072)
!5162 = !DILocation(line: 1129, column: 30, scope: !5072)
!5163 = !DILocation(line: 1130, column: 14, scope: !5072)
!5164 = !DILocation(line: 1131, column: 16, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1131, column: 9)
!5166 = !DILocation(line: 1131, column: 9, scope: !5072)
!5167 = !DILocation(line: 1132, column: 9, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5165, file: !672, line: 1131, column: 28)
!5169 = !DILocation(line: 1135, column: 61, scope: !5072)
!5170 = !DILocation(line: 1135, column: 14, scope: !5072)
!5171 = !DILocation(line: 1136, column: 16, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1136, column: 9)
!5173 = !DILocation(line: 1136, column: 9, scope: !5072)
!5174 = !DILocation(line: 1137, column: 9, scope: !5175)
!5175 = distinct !DILexicalBlock(scope: !5172, file: !672, line: 1136, column: 28)
!5176 = !DILocation(line: 1140, column: 64, scope: !5072)
!5177 = !DILocation(line: 1140, column: 14, scope: !5072)
!5178 = !DILocation(line: 1141, column: 16, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5072, file: !672, line: 1141, column: 9)
!5180 = !DILocation(line: 1141, column: 9, scope: !5072)
!5181 = !DILocation(line: 1142, column: 9, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5179, file: !672, line: 1141, column: 28)
!5183 = !DILocation(line: 1146, column: 18, scope: !5072)
!5184 = !DILocation(line: 1147, column: 66, scope: !5072)
!5185 = !DILocation(line: 1147, column: 34, scope: !5072)
!5186 = !DILocation(line: 1147, column: 52, scope: !5072)
!5187 = !DILocation(line: 1148, column: 71, scope: !5072)
!5188 = !DILocation(line: 1148, column: 34, scope: !5072)
!5189 = !DILocation(line: 1148, column: 57, scope: !5072)
!5190 = !DILocation(line: 1149, column: 74, scope: !5072)
!5191 = !DILocation(line: 1149, column: 34, scope: !5072)
!5192 = !DILocation(line: 1149, column: 60, scope: !5072)
!5193 = !DILocation(line: 1150, column: 73, scope: !5072)
!5194 = !DILocation(line: 1150, column: 34, scope: !5072)
!5195 = !DILocation(line: 1150, column: 59, scope: !5072)
!5196 = !DILocation(line: 1151, column: 69, scope: !5072)
!5197 = !DILocation(line: 1151, column: 34, scope: !5072)
!5198 = !DILocation(line: 1151, column: 55, scope: !5072)
!5199 = !DILocation(line: 1152, column: 74, scope: !5072)
!5200 = !DILocation(line: 1152, column: 34, scope: !5072)
!5201 = !DILocation(line: 1152, column: 60, scope: !5072)
!5202 = !DILocation(line: 1153, column: 77, scope: !5072)
!5203 = !DILocation(line: 1153, column: 34, scope: !5072)
!5204 = !DILocation(line: 1153, column: 63, scope: !5072)
!5205 = !DILocation(line: 1154, column: 5, scope: !5072)
!5206 = !DILocation(line: 1156, column: 5, scope: !5072)
!5207 = !DILocation(line: 1157, column: 1, scope: !5072)
!5208 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !672, file: !672, line: 891, type: !5209, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5211)
!5209 = !DISubroutineType(types: !5210)
!5210 = !{!4761, !784, !831, !88}
!5211 = !{!5212, !5213, !5214, !5215, !5216, !5217, !5218, !5219}
!5212 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5208, file: !672, line: 891, type: !784)
!5213 = !DILocalVariable(name: "user_callback", arg: 2, scope: !5208, file: !672, line: 892, type: !831)
!5214 = !DILocalVariable(name: "user_data", arg: 3, scope: !5208, file: !672, line: 893, type: !88)
!5215 = !DILocalVariable(name: "tx_dma_channel", scope: !5208, file: !672, line: 895, type: !4489)
!5216 = !DILocalVariable(name: "rx_dma_channel", scope: !5208, file: !672, line: 895, type: !4489)
!5217 = !DILocalVariable(name: "irq_status", scope: !5208, file: !672, line: 896, type: !61)
!5218 = !DILocalVariable(name: "status", scope: !5208, file: !672, line: 897, type: !4550)
!5219 = !DILocalVariable(name: "nvic_status", scope: !5208, file: !672, line: 898, type: !964)
!5220 = !DILocation(line: 0, scope: !5208)
!5221 = !DILocation(line: 900, column: 11, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5208, file: !672, line: 900, column: 9)
!5223 = !DILocation(line: 900, column: 42, scope: !5222)
!5224 = !DILocation(line: 905, column: 18, scope: !5208)
!5225 = !DILocation(line: 906, column: 9, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5208, file: !672, line: 906, column: 9)
!5227 = !DILocation(line: 906, column: 36, scope: !5226)
!5228 = !DILocation(line: 906, column: 9, scope: !5208)
!5229 = !DILocation(line: 911, column: 22, scope: !5208)
!5230 = !DILocation(line: 912, column: 22, scope: !5208)
!5231 = !DILocation(line: 914, column: 32, scope: !5208)
!5232 = !DILocation(line: 914, column: 37, scope: !5208)
!5233 = !DILocation(line: 915, column: 32, scope: !5208)
!5234 = !DILocation(line: 915, column: 36, scope: !5208)
!5235 = !DILocation(line: 917, column: 91, scope: !5208)
!5236 = !DILocation(line: 917, column: 56, scope: !5208)
!5237 = !DILocation(line: 917, column: 5, scope: !5208)
!5238 = !DILocation(line: 918, column: 80, scope: !5208)
!5239 = !DILocation(line: 918, column: 14, scope: !5208)
!5240 = !DILocation(line: 919, column: 16, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5208, file: !672, line: 919, column: 9)
!5242 = !DILocation(line: 919, column: 9, scope: !5208)
!5243 = !DILocation(line: 920, column: 9, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5241, file: !672, line: 919, column: 28)
!5245 = !DILocation(line: 921, column: 9, scope: !5244)
!5246 = !DILocation(line: 924, column: 97, scope: !5208)
!5247 = !DILocation(line: 924, column: 56, scope: !5208)
!5248 = !DILocation(line: 924, column: 5, scope: !5208)
!5249 = !DILocation(line: 925, column: 80, scope: !5208)
!5250 = !DILocation(line: 925, column: 14, scope: !5208)
!5251 = !DILocation(line: 926, column: 16, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5208, file: !672, line: 926, column: 9)
!5253 = !DILocation(line: 926, column: 9, scope: !5208)
!5254 = !DILocation(line: 927, column: 9, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5252, file: !672, line: 926, column: 28)
!5256 = !DILocation(line: 928, column: 9, scope: !5255)
!5257 = !DILocation(line: 931, column: 49, scope: !5208)
!5258 = !DILocation(line: 931, column: 19, scope: !5208)
!5259 = !DILocation(line: 932, column: 21, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5208, file: !672, line: 932, column: 9)
!5261 = !DILocation(line: 932, column: 9, scope: !5208)
!5262 = !DILocation(line: 933, column: 9, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5260, file: !672, line: 932, column: 44)
!5264 = !DILocation(line: 934, column: 9, scope: !5263)
!5265 = !DILocation(line: 938, column: 5, scope: !5208)
!5266 = !DILocation(line: 940, column: 32, scope: !5208)
!5267 = !DILocation(line: 944, column: 5, scope: !5208)
!5268 = !DILocation(line: 945, column: 1, scope: !5208)
!5269 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !672, file: !672, line: 303, type: !5270, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5273)
!5270 = !DISubroutineType(types: !5271)
!5271 = !{null, !5272, !88}
!5272 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !682, line: 225, baseType: !771)
!5273 = !{!5274, !5275, !5276}
!5274 = !DILocalVariable(name: "event", arg: 1, scope: !5269, file: !672, line: 303, type: !5272)
!5275 = !DILocalVariable(name: "user_data", arg: 2, scope: !5269, file: !672, line: 303, type: !88)
!5276 = !DILocalVariable(name: "callback_data", scope: !5269, file: !672, line: 305, type: !777)
!5277 = !DILocation(line: 0, scope: !5269)
!5278 = !DILocation(line: 307, column: 24, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5269, file: !672, line: 307, column: 9)
!5280 = !DILocation(line: 0, scope: !5279)
!5281 = !DILocation(line: 307, column: 9, scope: !5269)
!5282 = !DILocation(line: 308, column: 9, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5279, file: !672, line: 307, column: 39)
!5284 = !DILocation(line: 309, column: 5, scope: !5283)
!5285 = !DILocation(line: 310, column: 9, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5279, file: !672, line: 309, column: 12)
!5287 = !DILocation(line: 312, column: 1, scope: !5269)
!5288 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !672, file: !672, line: 852, type: !4697, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5289)
!5289 = !{!5290, !5291, !5292, !5293, !5294}
!5290 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5288, file: !672, line: 852, type: !784)
!5291 = !DILocalVariable(name: "uartx", scope: !5288, file: !672, line: 854, type: !4494)
!5292 = !DILocalVariable(name: "tx_dma_channel", scope: !5288, file: !672, line: 855, type: !4489)
!5293 = !DILocalVariable(name: "rx_dma_channel", scope: !5288, file: !672, line: 855, type: !4489)
!5294 = !DILocalVariable(name: "status", scope: !5288, file: !672, line: 856, type: !4550)
!5295 = !DILocation(line: 0, scope: !5288)
!5296 = !DILocation(line: 858, column: 13, scope: !5288)
!5297 = !DILocation(line: 859, column: 22, scope: !5288)
!5298 = !DILocation(line: 860, column: 22, scope: !5288)
!5299 = !DILocation(line: 863, column: 5, scope: !5288)
!5300 = !DILocation(line: 864, column: 5, scope: !5288)
!5301 = !DILocation(line: 864, column: 53, scope: !5288)
!5302 = !DILocation(line: 866, column: 5, scope: !5288)
!5303 = !DILocation(line: 867, column: 25, scope: !5288)
!5304 = !DILocation(line: 867, column: 5, scope: !5288)
!5305 = !DILocation(line: 868, column: 14, scope: !5288)
!5306 = !DILocation(line: 869, column: 16, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5288, file: !672, line: 869, column: 9)
!5308 = !DILocation(line: 869, column: 9, scope: !5288)
!5309 = !DILocation(line: 870, column: 9, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5307, file: !672, line: 869, column: 28)
!5311 = !DILocation(line: 873, column: 14, scope: !5288)
!5312 = !DILocation(line: 874, column: 16, scope: !5313)
!5313 = distinct !DILexicalBlock(scope: !5288, file: !672, line: 874, column: 9)
!5314 = !DILocation(line: 874, column: 9, scope: !5288)
!5315 = !DILocation(line: 875, column: 9, scope: !5316)
!5316 = distinct !DILexicalBlock(scope: !5313, file: !672, line: 874, column: 28)
!5317 = !DILocation(line: 878, column: 14, scope: !5288)
!5318 = !DILocation(line: 879, column: 16, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5288, file: !672, line: 879, column: 9)
!5320 = !DILocation(line: 879, column: 9, scope: !5288)
!5321 = !DILocation(line: 880, column: 9, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5319, file: !672, line: 879, column: 28)
!5323 = !DILocation(line: 883, column: 14, scope: !5288)
!5324 = !DILocation(line: 884, column: 16, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5288, file: !672, line: 884, column: 9)
!5326 = !DILocation(line: 884, column: 9, scope: !5288)
!5327 = !DILocation(line: 885, column: 9, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5325, file: !672, line: 884, column: 28)
!5329 = !DILocation(line: 888, column: 5, scope: !5288)
!5330 = !DILocation(line: 889, column: 1, scope: !5288)
!5331 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !672, file: !672, line: 130, type: !5332, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5336)
!5332 = !DISubroutineType(types: !5333)
!5333 = !{!91, !5334}
!5334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5335, size: 32)
!5335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !811)
!5336 = !{!5337}
!5337 = !DILocalVariable(name: "config", arg: 1, scope: !5331, file: !672, line: 130, type: !5334)
!5338 = !DILocation(line: 0, scope: !5331)
!5339 = !DILocation(line: 132, column: 22, scope: !5331)
!5340 = !DILocation(line: 132, column: 31, scope: !5331)
!5341 = !DILocation(line: 132, column: 56, scope: !5331)
!5342 = !DILocation(line: 133, column: 22, scope: !5331)
!5343 = !DILocation(line: 133, column: 34, scope: !5331)
!5344 = !DILocation(line: 133, column: 61, scope: !5331)
!5345 = !DILocation(line: 134, column: 22, scope: !5331)
!5346 = !DILocation(line: 134, column: 31, scope: !5331)
!5347 = !DILocation(line: 134, column: 55, scope: !5331)
!5348 = !DILocation(line: 135, column: 22, scope: !5331)
!5349 = !DILocation(line: 135, column: 29, scope: !5331)
!5350 = !DILocation(line: 132, column: 5, scope: !5331)
!5351 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !672, file: !672, line: 416, type: !5352, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5354)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{!4761, !784, !815}
!5354 = !{!5355, !5356, !5357, !5358, !5359}
!5355 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5351, file: !672, line: 416, type: !784)
!5356 = !DILocalVariable(name: "baudrate", arg: 2, scope: !5351, file: !672, line: 416, type: !815)
!5357 = !DILocalVariable(name: "actual_baudrate", scope: !5351, file: !672, line: 418, type: !61)
!5358 = !DILocalVariable(name: "irq_status", scope: !5351, file: !672, line: 418, type: !61)
!5359 = !DILocalVariable(name: "uartx", scope: !5351, file: !672, line: 419, type: !4494)
!5360 = !DILocation(line: 0, scope: !5351)
!5361 = !DILocation(line: 421, column: 11, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5351, file: !672, line: 421, column: 9)
!5363 = !DILocation(line: 421, column: 42, scope: !5362)
!5364 = !DILocation(line: 422, column: 11, scope: !5362)
!5365 = !DILocation(line: 421, column: 9, scope: !5351)
!5366 = !DILocation(line: 426, column: 9, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5351, file: !672, line: 426, column: 9)
!5368 = !DILocation(line: 426, column: 36, scope: !5367)
!5369 = !DILocation(line: 426, column: 9, scope: !5351)
!5370 = !DILocation(line: 430, column: 18, scope: !5351)
!5371 = !DILocation(line: 432, column: 30, scope: !5351)
!5372 = !DILocation(line: 432, column: 39, scope: !5351)
!5373 = !DILocation(line: 434, column: 5, scope: !5351)
!5374 = !DILocation(line: 436, column: 13, scope: !5351)
!5375 = !DILocation(line: 437, column: 23, scope: !5351)
!5376 = !DILocation(line: 439, column: 5, scope: !5351)
!5377 = !DILocation(line: 441, column: 5, scope: !5351)
!5378 = !DILocation(line: 442, column: 1, scope: !5351)
!5379 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !672, file: !672, line: 125, type: !5380, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5382)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{!91, !815}
!5382 = !{!5383}
!5383 = !DILocalVariable(name: "baudrate", arg: 1, scope: !5379, file: !672, line: 125, type: !815)
!5384 = !DILocation(line: 0, scope: !5379)
!5385 = !DILocation(line: 127, column: 22, scope: !5379)
!5386 = !DILocation(line: 127, column: 5, scope: !5379)
!5387 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !672, file: !672, line: 444, type: !5388, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5390)
!5388 = !DISubroutineType(types: !5389)
!5389 = !{!4761, !784, !5334}
!5390 = !{!5391, !5392, !5393, !5394}
!5391 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5387, file: !672, line: 444, type: !784)
!5392 = !DILocalVariable(name: "config", arg: 2, scope: !5387, file: !672, line: 445, type: !5334)
!5393 = !DILocalVariable(name: "irq_status", scope: !5387, file: !672, line: 447, type: !61)
!5394 = !DILocalVariable(name: "uartx", scope: !5387, file: !672, line: 448, type: !4494)
!5395 = !DILocation(line: 0, scope: !5387)
!5396 = !DILocation(line: 450, column: 11, scope: !5397)
!5397 = distinct !DILexicalBlock(scope: !5387, file: !672, line: 450, column: 9)
!5398 = !DILocation(line: 450, column: 42, scope: !5397)
!5399 = !DILocation(line: 451, column: 11, scope: !5397)
!5400 = !DILocation(line: 450, column: 9, scope: !5387)
!5401 = !DILocation(line: 455, column: 9, scope: !5402)
!5402 = distinct !DILexicalBlock(scope: !5387, file: !672, line: 455, column: 9)
!5403 = !DILocation(line: 455, column: 36, scope: !5402)
!5404 = !DILocation(line: 455, column: 9, scope: !5387)
!5405 = !DILocation(line: 459, column: 18, scope: !5387)
!5406 = !DILocation(line: 461, column: 49, scope: !5387)
!5407 = !DILocation(line: 461, column: 30, scope: !5387)
!5408 = !DILocation(line: 461, column: 39, scope: !5387)
!5409 = !DILocation(line: 462, column: 52, scope: !5387)
!5410 = !DILocation(line: 462, column: 30, scope: !5387)
!5411 = !DILocation(line: 462, column: 42, scope: !5387)
!5412 = !DILocation(line: 463, column: 49, scope: !5387)
!5413 = !DILocation(line: 463, column: 30, scope: !5387)
!5414 = !DILocation(line: 463, column: 39, scope: !5387)
!5415 = !DILocation(line: 464, column: 47, scope: !5387)
!5416 = !DILocation(line: 464, column: 30, scope: !5387)
!5417 = !DILocation(line: 464, column: 37, scope: !5387)
!5418 = !DILocation(line: 466, column: 5, scope: !5387)
!5419 = !DILocation(line: 468, column: 13, scope: !5387)
!5420 = !DILocation(line: 470, column: 46, scope: !5387)
!5421 = !DILocation(line: 470, column: 5, scope: !5387)
!5422 = !DILocation(line: 471, column: 36, scope: !5387)
!5423 = !DILocation(line: 471, column: 57, scope: !5387)
!5424 = !DILocation(line: 471, column: 75, scope: !5387)
!5425 = !DILocation(line: 471, column: 5, scope: !5387)
!5426 = !DILocation(line: 473, column: 5, scope: !5387)
!5427 = !DILocation(line: 474, column: 1, scope: !5387)
!5428 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !672, file: !672, line: 642, type: !5429, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5431)
!5429 = !DISubroutineType(types: !5430)
!5430 = !{null, !784, !167}
!5431 = !{!5432, !5433, !5434}
!5432 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5428, file: !672, line: 642, type: !784)
!5433 = !DILocalVariable(name: "byte", arg: 2, scope: !5428, file: !672, line: 642, type: !167)
!5434 = !DILocalVariable(name: "uartx", scope: !5428, file: !672, line: 644, type: !4494)
!5435 = !DILocation(line: 0, scope: !5428)
!5436 = !DILocation(line: 646, column: 10, scope: !5437)
!5437 = distinct !DILexicalBlock(scope: !5428, file: !672, line: 646, column: 9)
!5438 = !DILocation(line: 646, column: 9, scope: !5428)
!5439 = !DILocation(line: 650, column: 9, scope: !5440)
!5440 = distinct !DILexicalBlock(scope: !5428, file: !672, line: 650, column: 9)
!5441 = !DILocation(line: 650, column: 36, scope: !5440)
!5442 = !DILocation(line: 650, column: 9, scope: !5428)
!5443 = !DILocation(line: 654, column: 13, scope: !5428)
!5444 = !DILocation(line: 655, column: 5, scope: !5428)
!5445 = !DILocation(line: 656, column: 1, scope: !5428)
!5446 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !672, file: !672, line: 658, type: !5447, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5451)
!5447 = !DISubroutineType(types: !5448)
!5448 = !{!61, !784, !5449, !61}
!5449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5450, size: 32)
!5450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !159)
!5451 = !{!5452, !5453, !5454, !5455}
!5452 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5446, file: !672, line: 658, type: !784)
!5453 = !DILocalVariable(name: "data", arg: 2, scope: !5446, file: !672, line: 658, type: !5449)
!5454 = !DILocalVariable(name: "size", arg: 3, scope: !5446, file: !672, line: 658, type: !61)
!5455 = !DILocalVariable(name: "i", scope: !5446, file: !672, line: 660, type: !61)
!5456 = !DILocation(line: 0, scope: !5446)
!5457 = !DILocation(line: 662, column: 11, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5446, file: !672, line: 662, column: 9)
!5459 = !DILocation(line: 662, column: 42, scope: !5458)
!5460 = !DILocation(line: 666, column: 9, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5446, file: !672, line: 666, column: 9)
!5462 = !DILocation(line: 666, column: 36, scope: !5461)
!5463 = !DILocation(line: 666, column: 9, scope: !5446)
!5464 = !DILocation(line: 671, column: 38, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5466, file: !672, line: 670, column: 32)
!5466 = distinct !DILexicalBlock(scope: !5467, file: !672, line: 670, column: 5)
!5467 = distinct !DILexicalBlock(scope: !5446, file: !672, line: 670, column: 5)
!5468 = !DILocation(line: 671, column: 9, scope: !5465)
!5469 = !DILocation(line: 672, column: 13, scope: !5465)
!5470 = !DILocation(line: 670, column: 28, scope: !5466)
!5471 = !DILocation(line: 670, column: 19, scope: !5466)
!5472 = !DILocation(line: 670, column: 5, scope: !5467)
!5473 = distinct !{!5473, !5472, !5474}
!5474 = !DILocation(line: 673, column: 5, scope: !5467)
!5475 = !DILocation(line: 676, column: 1, scope: !5446)
!5476 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !672, file: !672, line: 678, type: !5447, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5477)
!5477 = !{!5478, !5479, !5480, !5481, !5482, !5483, !5484, !5485, !5486}
!5478 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5476, file: !672, line: 678, type: !784)
!5479 = !DILocalVariable(name: "data", arg: 2, scope: !5476, file: !672, line: 678, type: !5449)
!5480 = !DILocalVariable(name: "size", arg: 3, scope: !5476, file: !672, line: 678, type: !61)
!5481 = !DILocalVariable(name: "channel", scope: !5476, file: !672, line: 680, type: !4489)
!5482 = !DILocalVariable(name: "i", scope: !5476, file: !672, line: 681, type: !61)
!5483 = !DILocalVariable(name: "real_count", scope: !5476, file: !672, line: 681, type: !61)
!5484 = !DILocalVariable(name: "avail_space", scope: !5476, file: !672, line: 681, type: !61)
!5485 = !DILocalVariable(name: "status", scope: !5476, file: !672, line: 682, type: !4550)
!5486 = !DILocalVariable(name: "irq_status", scope: !5476, file: !672, line: 684, type: !61)
!5487 = !DILocation(line: 0, scope: !5476)
!5488 = !DILocation(line: 681, column: 5, scope: !5476)
!5489 = !DILocation(line: 687, column: 11, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5476, file: !672, line: 687, column: 9)
!5491 = !DILocation(line: 687, column: 42, scope: !5490)
!5492 = !DILocation(line: 691, column: 9, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5476, file: !672, line: 691, column: 9)
!5494 = !DILocation(line: 691, column: 36, scope: !5493)
!5495 = !DILocation(line: 691, column: 9, scope: !5476)
!5496 = !DILocation(line: 696, column: 18, scope: !5476)
!5497 = !DILocation(line: 697, column: 9, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5476, file: !672, line: 697, column: 9)
!5499 = !DILocation(line: 697, column: 44, scope: !5498)
!5500 = !DILocation(line: 697, column: 9, scope: !5476)
!5501 = !DILocation(line: 698, column: 38, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5498, file: !672, line: 697, column: 54)
!5503 = !DILocation(line: 698, column: 9, scope: !5502)
!5504 = !DILocation(line: 699, column: 44, scope: !5502)
!5505 = !DILocation(line: 700, column: 5, scope: !5502)
!5506 = !DILocation(line: 701, column: 5, scope: !5476)
!5507 = !DILocation(line: 704, column: 15, scope: !5476)
!5508 = !DILocation(line: 706, column: 14, scope: !5476)
!5509 = !DILocation(line: 707, column: 16, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5476, file: !672, line: 707, column: 9)
!5511 = !DILocation(line: 707, column: 9, scope: !5476)
!5512 = !DILocation(line: 708, column: 9, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5510, file: !672, line: 707, column: 28)
!5514 = !DILocation(line: 712, column: 9, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5476, file: !672, line: 712, column: 9)
!5516 = !DILocation(line: 712, column: 21, scope: !5515)
!5517 = !DILocation(line: 717, column: 19, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5519, file: !672, line: 717, column: 5)
!5519 = distinct !DILexicalBlock(scope: !5476, file: !672, line: 717, column: 5)
!5520 = !DILocation(line: 717, column: 5, scope: !5519)
!5521 = distinct !{!5521, !5520, !5522}
!5522 = !DILocation(line: 723, column: 5, scope: !5519)
!5523 = !DILocation(line: 718, column: 42, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5518, file: !672, line: 717, column: 38)
!5525 = !DILocation(line: 718, column: 18, scope: !5524)
!5526 = !DILocation(line: 719, column: 20, scope: !5527)
!5527 = distinct !DILexicalBlock(scope: !5524, file: !672, line: 719, column: 13)
!5528 = !DILocation(line: 717, column: 34, scope: !5518)
!5529 = !DILocation(line: 719, column: 13, scope: !5524)
!5530 = !DILocation(line: 720, column: 13, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5527, file: !672, line: 719, column: 32)
!5532 = !DILocation(line: 728, column: 23, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5476, file: !672, line: 728, column: 9)
!5534 = !DILocation(line: 728, column: 20, scope: !5533)
!5535 = !DILocation(line: 728, column: 9, scope: !5476)
!5536 = !DILocation(line: 729, column: 18, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5533, file: !672, line: 728, column: 36)
!5538 = !DILocation(line: 730, column: 20, scope: !5539)
!5539 = distinct !DILexicalBlock(scope: !5537, file: !672, line: 730, column: 13)
!5540 = !DILocation(line: 730, column: 13, scope: !5537)
!5541 = !DILocation(line: 731, column: 13, scope: !5542)
!5542 = distinct !DILexicalBlock(scope: !5539, file: !672, line: 730, column: 32)
!5543 = !DILocation(line: 737, column: 1, scope: !5476)
!5544 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !672, file: !672, line: 739, type: !5545, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5547)
!5545 = !DISubroutineType(types: !5546)
!5546 = !{!167, !784}
!5547 = !{!5548, !5549, !5550}
!5548 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5544, file: !672, line: 739, type: !784)
!5549 = !DILocalVariable(name: "data", scope: !5544, file: !672, line: 741, type: !167)
!5550 = !DILocalVariable(name: "uartx", scope: !5544, file: !672, line: 742, type: !4494)
!5551 = !DILocation(line: 0, scope: !5544)
!5552 = !DILocation(line: 744, column: 10, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5544, file: !672, line: 744, column: 9)
!5554 = !DILocation(line: 744, column: 9, scope: !5544)
!5555 = !DILocation(line: 748, column: 9, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5544, file: !672, line: 748, column: 9)
!5557 = !DILocation(line: 748, column: 36, scope: !5556)
!5558 = !DILocation(line: 748, column: 9, scope: !5544)
!5559 = !DILocation(line: 752, column: 13, scope: !5544)
!5560 = !DILocation(line: 754, column: 12, scope: !5544)
!5561 = !DILocation(line: 756, column: 5, scope: !5544)
!5562 = !DILocation(line: 757, column: 1, scope: !5544)
!5563 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !672, file: !672, line: 759, type: !5564, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5566)
!5564 = !DISubroutineType(types: !5565)
!5565 = !{!61, !784}
!5566 = !{!5567, !5568, !5569}
!5567 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5563, file: !672, line: 759, type: !784)
!5568 = !DILocalVariable(name: "data", scope: !5563, file: !672, line: 761, type: !61)
!5569 = !DILocalVariable(name: "uartx", scope: !5563, file: !672, line: 762, type: !4494)
!5570 = !DILocation(line: 0, scope: !5563)
!5571 = !DILocation(line: 764, column: 10, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5563, file: !672, line: 764, column: 9)
!5573 = !DILocation(line: 764, column: 9, scope: !5563)
!5574 = !DILocation(line: 768, column: 9, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5563, file: !672, line: 768, column: 9)
!5576 = !DILocation(line: 768, column: 36, scope: !5575)
!5577 = !DILocation(line: 768, column: 9, scope: !5563)
!5578 = !DILocation(line: 772, column: 13, scope: !5563)
!5579 = !DILocation(line: 774, column: 12, scope: !5563)
!5580 = !DILocation(line: 776, column: 5, scope: !5563)
!5581 = !DILocation(line: 777, column: 1, scope: !5563)
!5582 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !672, file: !672, line: 779, type: !5583, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5585)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{!61, !784, !849, !61}
!5585 = !{!5586, !5587, !5588, !5589, !5590}
!5586 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5582, file: !672, line: 779, type: !784)
!5587 = !DILocalVariable(name: "buffer", arg: 2, scope: !5582, file: !672, line: 779, type: !849)
!5588 = !DILocalVariable(name: "size", arg: 3, scope: !5582, file: !672, line: 779, type: !61)
!5589 = !DILocalVariable(name: "i", scope: !5582, file: !672, line: 781, type: !61)
!5590 = !DILocalVariable(name: "pbuf", scope: !5582, file: !672, line: 782, type: !849)
!5591 = !DILocation(line: 0, scope: !5582)
!5592 = !DILocation(line: 784, column: 11, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5582, file: !672, line: 784, column: 9)
!5594 = !DILocation(line: 784, column: 42, scope: !5593)
!5595 = !DILocation(line: 789, column: 9, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5582, file: !672, line: 789, column: 9)
!5597 = !DILocation(line: 789, column: 36, scope: !5596)
!5598 = !DILocation(line: 789, column: 9, scope: !5582)
!5599 = !DILocation(line: 794, column: 19, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5601, file: !672, line: 793, column: 32)
!5601 = distinct !DILexicalBlock(scope: !5602, file: !672, line: 793, column: 5)
!5602 = distinct !DILexicalBlock(scope: !5582, file: !672, line: 793, column: 5)
!5603 = !DILocation(line: 794, column: 9, scope: !5600)
!5604 = !DILocation(line: 794, column: 17, scope: !5600)
!5605 = !DILocation(line: 793, column: 28, scope: !5601)
!5606 = !DILocation(line: 793, column: 19, scope: !5601)
!5607 = !DILocation(line: 793, column: 5, scope: !5602)
!5608 = distinct !{!5608, !5607, !5609}
!5609 = !DILocation(line: 795, column: 5, scope: !5602)
!5610 = !DILocation(line: 798, column: 1, scope: !5582)
!5611 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !672, file: !672, line: 800, type: !5583, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5612)
!5612 = !{!5613, !5614, !5615, !5616, !5617, !5618, !5619, !5620}
!5613 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5611, file: !672, line: 800, type: !784)
!5614 = !DILocalVariable(name: "buffer", arg: 2, scope: !5611, file: !672, line: 800, type: !849)
!5615 = !DILocalVariable(name: "size", arg: 3, scope: !5611, file: !672, line: 800, type: !61)
!5616 = !DILocalVariable(name: "channel", scope: !5611, file: !672, line: 802, type: !4489)
!5617 = !DILocalVariable(name: "receive_count", scope: !5611, file: !672, line: 803, type: !61)
!5618 = !DILocalVariable(name: "avail_count", scope: !5611, file: !672, line: 803, type: !61)
!5619 = !DILocalVariable(name: "index", scope: !5611, file: !672, line: 804, type: !61)
!5620 = !DILocalVariable(name: "status", scope: !5611, file: !672, line: 805, type: !4550)
!5621 = !DILocation(line: 0, scope: !5611)
!5622 = !DILocation(line: 803, column: 5, scope: !5611)
!5623 = !DILocation(line: 807, column: 11, scope: !5624)
!5624 = distinct !DILexicalBlock(scope: !5611, file: !672, line: 807, column: 9)
!5625 = !DILocation(line: 807, column: 42, scope: !5624)
!5626 = !DILocation(line: 813, column: 9, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5611, file: !672, line: 813, column: 9)
!5628 = !DILocation(line: 813, column: 36, scope: !5627)
!5629 = !DILocation(line: 813, column: 9, scope: !5611)
!5630 = !DILocation(line: 817, column: 15, scope: !5611)
!5631 = !DILocation(line: 819, column: 14, scope: !5611)
!5632 = !DILocation(line: 820, column: 16, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5611, file: !672, line: 820, column: 9)
!5634 = !DILocation(line: 820, column: 9, scope: !5611)
!5635 = !DILocation(line: 821, column: 9, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5633, file: !672, line: 820, column: 28)
!5637 = !DILocation(line: 825, column: 9, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5611, file: !672, line: 825, column: 9)
!5639 = !DILocation(line: 825, column: 21, scope: !5638)
!5640 = !DILocation(line: 830, column: 27, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5642, file: !672, line: 830, column: 5)
!5642 = distinct !DILexicalBlock(scope: !5611, file: !672, line: 830, column: 5)
!5643 = !DILocation(line: 830, column: 5, scope: !5642)
!5644 = distinct !{!5644, !5643, !5645}
!5645 = !DILocation(line: 836, column: 5, scope: !5642)
!5646 = !DILocation(line: 831, column: 42, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5641, file: !672, line: 830, column: 53)
!5648 = !DILocation(line: 831, column: 18, scope: !5647)
!5649 = !DILocation(line: 832, column: 20, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5647, file: !672, line: 832, column: 13)
!5651 = !DILocation(line: 830, column: 49, scope: !5641)
!5652 = !DILocation(line: 832, column: 13, scope: !5647)
!5653 = !DILocation(line: 833, column: 13, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5650, file: !672, line: 832, column: 32)
!5655 = !DILocation(line: 841, column: 26, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5611, file: !672, line: 841, column: 9)
!5657 = !DILocation(line: 841, column: 23, scope: !5656)
!5658 = !DILocation(line: 841, column: 9, scope: !5611)
!5659 = !DILocation(line: 842, column: 18, scope: !5660)
!5660 = distinct !DILexicalBlock(scope: !5656, file: !672, line: 841, column: 39)
!5661 = !DILocation(line: 843, column: 20, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5660, file: !672, line: 843, column: 13)
!5663 = !DILocation(line: 843, column: 13, scope: !5660)
!5664 = !DILocation(line: 844, column: 13, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5662, file: !672, line: 843, column: 32)
!5666 = !DILocation(line: 850, column: 1, scope: !5611)
!5667 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !672, file: !672, line: 947, type: !5564, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5668)
!5668 = !{!5669, !5670, !5671, !5672}
!5669 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5667, file: !672, line: 947, type: !784)
!5670 = !DILocalVariable(name: "channel", scope: !5667, file: !672, line: 949, type: !4489)
!5671 = !DILocalVariable(name: "roomleft", scope: !5667, file: !672, line: 950, type: !61)
!5672 = !DILocalVariable(name: "status", scope: !5667, file: !672, line: 951, type: !4550)
!5673 = !DILocation(line: 0, scope: !5667)
!5674 = !DILocation(line: 950, column: 5, scope: !5667)
!5675 = !DILocation(line: 953, column: 10, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5667, file: !672, line: 953, column: 9)
!5677 = !DILocation(line: 953, column: 9, scope: !5667)
!5678 = !DILocation(line: 957, column: 9, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5667, file: !672, line: 957, column: 9)
!5680 = !DILocation(line: 957, column: 36, scope: !5679)
!5681 = !DILocation(line: 957, column: 9, scope: !5667)
!5682 = !DILocation(line: 961, column: 15, scope: !5667)
!5683 = !DILocation(line: 962, column: 14, scope: !5667)
!5684 = !DILocation(line: 963, column: 16, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5667, file: !672, line: 963, column: 9)
!5686 = !DILocation(line: 963, column: 9, scope: !5667)
!5687 = !DILocation(line: 964, column: 9, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5685, file: !672, line: 963, column: 28)
!5689 = !DILocation(line: 968, column: 12, scope: !5667)
!5690 = !DILocation(line: 968, column: 5, scope: !5667)
!5691 = !DILocation(line: 969, column: 1, scope: !5667)
!5692 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !672, file: !672, line: 971, type: !5564, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5693)
!5693 = !{!5694, !5695, !5696, !5697}
!5694 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5692, file: !672, line: 971, type: !784)
!5695 = !DILocalVariable(name: "channel", scope: !5692, file: !672, line: 973, type: !4489)
!5696 = !DILocalVariable(name: "avail", scope: !5692, file: !672, line: 974, type: !61)
!5697 = !DILocalVariable(name: "status", scope: !5692, file: !672, line: 975, type: !4550)
!5698 = !DILocation(line: 0, scope: !5692)
!5699 = !DILocation(line: 974, column: 5, scope: !5692)
!5700 = !DILocation(line: 977, column: 10, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5692, file: !672, line: 977, column: 9)
!5702 = !DILocation(line: 977, column: 9, scope: !5692)
!5703 = !DILocation(line: 981, column: 9, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5692, file: !672, line: 981, column: 9)
!5705 = !DILocation(line: 981, column: 36, scope: !5704)
!5706 = !DILocation(line: 981, column: 9, scope: !5692)
!5707 = !DILocation(line: 985, column: 15, scope: !5692)
!5708 = !DILocation(line: 986, column: 14, scope: !5692)
!5709 = !DILocation(line: 987, column: 16, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5692, file: !672, line: 987, column: 9)
!5711 = !DILocation(line: 987, column: 9, scope: !5692)
!5712 = !DILocation(line: 988, column: 9, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5710, file: !672, line: 987, column: 28)
!5714 = !DILocation(line: 992, column: 12, scope: !5692)
!5715 = !DILocation(line: 992, column: 5, scope: !5692)
!5716 = !DILocation(line: 993, column: 1, scope: !5692)
!5717 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !672, file: !672, line: 1047, type: !4759, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !671, retainedNodes: !5718)
!5718 = !{!5719, !5720}
!5719 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5717, file: !672, line: 1047, type: !784)
!5720 = !DILocalVariable(name: "uartx", scope: !5717, file: !672, line: 1049, type: !4494)
!5721 = !DILocation(line: 0, scope: !5717)
!5722 = !DILocation(line: 1051, column: 10, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5717, file: !672, line: 1051, column: 9)
!5724 = !DILocation(line: 1051, column: 9, scope: !5717)
!5725 = !DILocation(line: 1055, column: 9, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5717, file: !672, line: 1055, column: 9)
!5727 = !DILocation(line: 1055, column: 36, scope: !5726)
!5728 = !DILocation(line: 1055, column: 9, scope: !5717)
!5729 = !DILocation(line: 1059, column: 13, scope: !5717)
!5730 = !DILocation(line: 1061, column: 5, scope: !5717)
!5731 = !DILocation(line: 1064, column: 5, scope: !5717)
!5732 = !DILocation(line: 1064, column: 42, scope: !5717)
!5733 = !DILocation(line: 1067, column: 5, scope: !5717)
!5734 = !DILocation(line: 1068, column: 1, scope: !5717)
!5735 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2572, file: !2572, line: 52, type: !5736, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5793)
!5736 = !DISubroutineType(types: !5737)
!5737 = !{null, !5738, !61}
!5738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5739, size: 32)
!5739 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5740)
!5740 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5741)
!5741 = !{!5742, !5748, !5753, !5759, !5760, !5765, !5770, !5771, !5776, !5777, !5778, !5779, !5780, !5781, !5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5790, !5791, !5792}
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5740, file: !56, line: 547, baseType: !5743, size: 32)
!5743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5740, file: !56, line: 543, size: 32, elements: !5744)
!5744 = !{!5745, !5746, !5747}
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5743, file: !56, line: 544, baseType: !324, size: 32)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5743, file: !56, line: 545, baseType: !60, size: 32)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5743, file: !56, line: 546, baseType: !60, size: 32)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5740, file: !56, line: 551, baseType: !5749, size: 32, offset: 32)
!5749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5740, file: !56, line: 548, size: 32, elements: !5750)
!5750 = !{!5751, !5752}
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5749, file: !56, line: 549, baseType: !60, size: 32)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5749, file: !56, line: 550, baseType: !60, size: 32)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5740, file: !56, line: 556, baseType: !5754, size: 32, offset: 64)
!5754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5740, file: !56, line: 552, size: 32, elements: !5755)
!5755 = !{!5756, !5757, !5758}
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5754, file: !56, line: 553, baseType: !324, size: 32)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5754, file: !56, line: 554, baseType: !60, size: 32)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5754, file: !56, line: 555, baseType: !60, size: 32)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5740, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5740, file: !56, line: 561, baseType: !5761, size: 32, offset: 128)
!5761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5740, file: !56, line: 558, size: 32, elements: !5762)
!5762 = !{!5763, !5764}
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5761, file: !56, line: 559, baseType: !60, size: 32)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5761, file: !56, line: 560, baseType: !60, size: 32)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5740, file: !56, line: 565, baseType: !5766, size: 32, offset: 160)
!5766 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5740, file: !56, line: 562, size: 32, elements: !5767)
!5767 = !{!5768, !5769}
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5766, file: !56, line: 563, baseType: !324, size: 32)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5766, file: !56, line: 564, baseType: !60, size: 32)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5740, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5740, file: !56, line: 570, baseType: !5772, size: 32, offset: 224)
!5772 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5740, file: !56, line: 567, size: 32, elements: !5773)
!5773 = !{!5774, !5775}
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5772, file: !56, line: 568, baseType: !60, size: 32)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5772, file: !56, line: 569, baseType: !60, size: 32)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5740, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5740, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5740, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5740, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5740, file: !56, line: 575, baseType: !324, size: 32, offset: 384)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5740, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5740, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5740, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5740, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5740, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5740, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5740, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5740, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5740, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5740, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5740, file: !56, line: 586, baseType: !324, size: 32, offset: 736)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5740, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5793 = !{!5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804, !5808}
!5794 = !DILocalVariable(name: "uartx", arg: 1, scope: !5735, file: !2572, line: 52, type: !5738)
!5795 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5735, file: !2572, line: 52, type: !61)
!5796 = !DILocalVariable(name: "uart_clock", scope: !5735, file: !2572, line: 54, type: !61)
!5797 = !DILocalVariable(name: "integer", scope: !5735, file: !2572, line: 54, type: !61)
!5798 = !DILocalVariable(name: "remainder", scope: !5735, file: !2572, line: 54, type: !61)
!5799 = !DILocalVariable(name: "fraction", scope: !5735, file: !2572, line: 54, type: !61)
!5800 = !DILocalVariable(name: "dll_dlm", scope: !5735, file: !2572, line: 55, type: !61)
!5801 = !DILocalVariable(name: "sample_count", scope: !5735, file: !2572, line: 55, type: !61)
!5802 = !DILocalVariable(name: "sample_point", scope: !5735, file: !2572, line: 55, type: !61)
!5803 = !DILocalVariable(name: "temp_lcr", scope: !5735, file: !2572, line: 55, type: !61)
!5804 = !DILocalVariable(name: "fraction_L_mapping", scope: !5735, file: !2572, line: 56, type: !5805)
!5805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !5806)
!5806 = !{!5807}
!5807 = !DISubrange(count: 10)
!5808 = !DILocalVariable(name: "fraction_M_mapping", scope: !5735, file: !2572, line: 57, type: !5805)
!5809 = !DILocation(line: 0, scope: !5735)
!5810 = !DILocation(line: 56, column: 14, scope: !5735)
!5811 = !DILocation(line: 57, column: 5, scope: !5735)
!5812 = !DILocation(line: 57, column: 14, scope: !5735)
!5813 = !DILocation(line: 59, column: 12, scope: !5735)
!5814 = !DILocation(line: 59, column: 23, scope: !5735)
!5815 = !DILocation(line: 60, column: 12, scope: !5735)
!5816 = !DILocation(line: 60, column: 22, scope: !5735)
!5817 = !DILocation(line: 61, column: 12, scope: !5735)
!5818 = !DILocation(line: 61, column: 22, scope: !5735)
!5819 = !DILocation(line: 63, column: 9, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5735, file: !2572, line: 63, column: 9)
!5821 = !DILocation(line: 63, column: 9, scope: !5735)
!5822 = !DILocation(line: 64, column: 22, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5820, file: !2572, line: 63, column: 37)
!5824 = !DILocation(line: 64, column: 45, scope: !5823)
!5825 = !DILocation(line: 65, column: 5, scope: !5823)
!5826 = !DILocation(line: 0, scope: !5820)
!5827 = !DILocation(line: 69, column: 45, scope: !5735)
!5828 = !DILocation(line: 69, column: 26, scope: !5735)
!5829 = !DILocation(line: 70, column: 30, scope: !5735)
!5830 = !DILocation(line: 70, column: 36, scope: !5735)
!5831 = !DILocation(line: 70, column: 63, scope: !5735)
!5832 = !DILocation(line: 71, column: 20, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5735, file: !2572, line: 71, column: 9)
!5834 = !DILocation(line: 71, column: 26, scope: !5833)
!5835 = !DILocation(line: 77, column: 5, scope: !5735)
!5836 = !DILocation(line: 77, column: 25, scope: !5735)
!5837 = !DILocation(line: 78, column: 16, scope: !5838)
!5838 = distinct !DILexicalBlock(scope: !5735, file: !2572, line: 77, column: 32)
!5839 = distinct !{!5839, !5835, !5840}
!5840 = !DILocation(line: 80, column: 5, scope: !5735)
!5841 = !DILocation(line: 82, column: 35, scope: !5735)
!5842 = !DILocation(line: 82, column: 66, scope: !5735)
!5843 = !DILocation(line: 84, column: 18, scope: !5735)
!5844 = !DILocation(line: 85, column: 34, scope: !5735)
!5845 = !DILocation(line: 85, column: 39, scope: !5735)
!5846 = !DILocation(line: 87, column: 12, scope: !5735)
!5847 = !DILocation(line: 87, column: 22, scope: !5735)
!5848 = !DILocation(line: 89, column: 23, scope: !5735)
!5849 = !DILocation(line: 90, column: 27, scope: !5735)
!5850 = !DILocation(line: 90, column: 16, scope: !5735)
!5851 = !DILocation(line: 91, column: 38, scope: !5735)
!5852 = !DILocation(line: 91, column: 24, scope: !5735)
!5853 = !DILocation(line: 91, column: 28, scope: !5735)
!5854 = !DILocation(line: 92, column: 35, scope: !5735)
!5855 = !DILocation(line: 92, column: 41, scope: !5735)
!5856 = !DILocation(line: 92, column: 20, scope: !5735)
!5857 = !DILocation(line: 92, column: 24, scope: !5735)
!5858 = !DILocation(line: 93, column: 16, scope: !5735)
!5859 = !DILocation(line: 95, column: 12, scope: !5735)
!5860 = !DILocation(line: 95, column: 25, scope: !5735)
!5861 = !DILocation(line: 96, column: 12, scope: !5735)
!5862 = !DILocation(line: 96, column: 25, scope: !5735)
!5863 = !DILocation(line: 98, column: 24, scope: !5735)
!5864 = !DILocation(line: 98, column: 22, scope: !5735)
!5865 = !DILocation(line: 99, column: 24, scope: !5735)
!5866 = !DILocation(line: 99, column: 22, scope: !5735)
!5867 = !DILocation(line: 101, column: 25, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5735, file: !2572, line: 101, column: 9)
!5869 = !DILocation(line: 101, column: 9, scope: !5735)
!5870 = !DILocation(line: 102, column: 16, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5868, file: !2572, line: 101, column: 37)
!5872 = !DILocation(line: 102, column: 22, scope: !5871)
!5873 = !DILocation(line: 103, column: 5, scope: !5871)
!5874 = !DILocation(line: 104, column: 1, scope: !5735)
!5875 = distinct !DISubprogram(name: "uart_set_format", scope: !2572, file: !2572, line: 106, type: !5876, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5878)
!5876 = !DISubroutineType(types: !5877)
!5877 = !{null, !5738, !817, !819, !821}
!5878 = !{!5879, !5880, !5881, !5882, !5883}
!5879 = !DILocalVariable(name: "uartx", arg: 1, scope: !5875, file: !2572, line: 106, type: !5738)
!5880 = !DILocalVariable(name: "word_length", arg: 2, scope: !5875, file: !2572, line: 107, type: !817)
!5881 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5875, file: !2572, line: 108, type: !819)
!5882 = !DILocalVariable(name: "parity", arg: 4, scope: !5875, file: !2572, line: 109, type: !821)
!5883 = !DILocalVariable(name: "byte", scope: !5875, file: !2572, line: 111, type: !1126)
!5884 = !DILocation(line: 0, scope: !5875)
!5885 = !DILocation(line: 114, column: 19, scope: !5875)
!5886 = !DILocation(line: 115, column: 16, scope: !5875)
!5887 = !DILocation(line: 118, column: 10, scope: !5875)
!5888 = !DILocation(line: 119, column: 5, scope: !5875)
!5889 = !DILocation(line: 124, column: 18, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5875, file: !2572, line: 119, column: 26)
!5891 = !DILocation(line: 125, column: 13, scope: !5890)
!5892 = !DILocation(line: 127, column: 18, scope: !5890)
!5893 = !DILocation(line: 128, column: 13, scope: !5890)
!5894 = !DILocation(line: 130, column: 18, scope: !5890)
!5895 = !DILocation(line: 131, column: 13, scope: !5890)
!5896 = !DILocation(line: 137, column: 10, scope: !5875)
!5897 = !DILocation(line: 138, column: 5, scope: !5875)
!5898 = !DILocation(line: 151, column: 5, scope: !5875)
!5899 = !DILocation(line: 166, column: 18, scope: !5875)
!5900 = !DILocation(line: 166, column: 16, scope: !5875)
!5901 = !DILocation(line: 167, column: 1, scope: !5875)
!5902 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2572, file: !2572, line: 169, type: !5903, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5905)
!5903 = !DISubroutineType(types: !5904)
!5904 = !{null, !5738, !159}
!5905 = !{!5906, !5907, !5908}
!5906 = !DILocalVariable(name: "uartx", arg: 1, scope: !5902, file: !2572, line: 169, type: !5738)
!5907 = !DILocalVariable(name: "byte", arg: 2, scope: !5902, file: !2572, line: 169, type: !159)
!5908 = !DILocalVariable(name: "LSR", scope: !5902, file: !2572, line: 171, type: !1126)
!5909 = !DILocation(line: 0, scope: !5902)
!5910 = !DILocation(line: 173, column: 5, scope: !5902)
!5911 = !DILocation(line: 174, column: 31, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5902, file: !2572, line: 173, column: 15)
!5913 = !DILocation(line: 175, column: 17, scope: !5914)
!5914 = distinct !DILexicalBlock(scope: !5912, file: !2572, line: 175, column: 13)
!5915 = !DILocation(line: 175, column: 13, scope: !5912)
!5916 = distinct !{!5916, !5910, !5917}
!5917 = !DILocation(line: 179, column: 5, scope: !5902)
!5918 = !DILocation(line: 176, column: 38, scope: !5919)
!5919 = distinct !DILexicalBlock(scope: !5914, file: !2572, line: 175, column: 39)
!5920 = !DILocation(line: 176, column: 32, scope: !5919)
!5921 = !DILocation(line: 176, column: 36, scope: !5919)
!5922 = !DILocation(line: 180, column: 1, scope: !5902)
!5923 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2572, file: !2572, line: 182, type: !5924, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5926)
!5924 = !DISubroutineType(types: !5925)
!5925 = !{!159, !5738}
!5926 = !{!5927, !5928, !5929}
!5927 = !DILocalVariable(name: "uartx", arg: 1, scope: !5923, file: !2572, line: 182, type: !5738)
!5928 = !DILocalVariable(name: "LSR", scope: !5923, file: !2572, line: 184, type: !1126)
!5929 = !DILocalVariable(name: "byte", scope: !5923, file: !2572, line: 185, type: !159)
!5930 = !DILocation(line: 0, scope: !5923)
!5931 = !DILocation(line: 187, column: 5, scope: !5923)
!5932 = !DILocation(line: 188, column: 31, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5923, file: !2572, line: 187, column: 15)
!5934 = !DILocation(line: 189, column: 17, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5933, file: !2572, line: 189, column: 13)
!5936 = !DILocation(line: 189, column: 13, scope: !5933)
!5937 = distinct !{!5937, !5931, !5938}
!5938 = !DILocation(line: 193, column: 5, scope: !5923)
!5939 = !DILocation(line: 190, column: 48, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5935, file: !2572, line: 189, column: 37)
!5941 = !DILocation(line: 190, column: 20, scope: !5940)
!5942 = !DILocation(line: 195, column: 5, scope: !5923)
!5943 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2572, file: !2572, line: 198, type: !5944, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5946)
!5944 = !DISubroutineType(types: !5945)
!5945 = !{!61, !5738}
!5946 = !{!5947, !5948, !5949}
!5947 = !DILocalVariable(name: "uartx", arg: 1, scope: !5943, file: !2572, line: 198, type: !5738)
!5948 = !DILocalVariable(name: "LSR", scope: !5943, file: !2572, line: 200, type: !1126)
!5949 = !DILocalVariable(name: "value", scope: !5943, file: !2572, line: 201, type: !61)
!5950 = !DILocation(line: 0, scope: !5943)
!5951 = !DILocation(line: 203, column: 27, scope: !5943)
!5952 = !DILocation(line: 204, column: 13, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5943, file: !2572, line: 204, column: 9)
!5954 = !DILocation(line: 204, column: 9, scope: !5943)
!5955 = !DILocation(line: 205, column: 36, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5953, file: !2572, line: 204, column: 33)
!5957 = !DILocation(line: 206, column: 5, scope: !5956)
!5958 = !DILocation(line: 0, scope: !5953)
!5959 = !DILocation(line: 210, column: 5, scope: !5943)
!5960 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2572, file: !2572, line: 213, type: !5961, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5963)
!5961 = !DISubroutineType(types: !5962)
!5962 = !{null, !5738}
!5963 = !{!5964, !5965, !5966}
!5964 = !DILocalVariable(name: "uartx", arg: 1, scope: !5960, file: !2572, line: 213, type: !5738)
!5965 = !DILocalVariable(name: "EFR", scope: !5960, file: !2572, line: 215, type: !1126)
!5966 = !DILocalVariable(name: "LCR", scope: !5960, file: !2572, line: 215, type: !1126)
!5967 = !DILocation(line: 0, scope: !5960)
!5968 = !DILocation(line: 217, column: 18, scope: !5960)
!5969 = !DILocation(line: 219, column: 16, scope: !5960)
!5970 = !DILocation(line: 220, column: 30, scope: !5960)
!5971 = !DILocation(line: 222, column: 30, scope: !5960)
!5972 = !DILocation(line: 222, column: 28, scope: !5960)
!5973 = !DILocation(line: 223, column: 12, scope: !5960)
!5974 = !DILocation(line: 223, column: 22, scope: !5960)
!5975 = !DILocation(line: 225, column: 16, scope: !5960)
!5976 = !DILocation(line: 226, column: 21, scope: !5960)
!5977 = !DILocation(line: 226, column: 25, scope: !5960)
!5978 = !DILocation(line: 228, column: 18, scope: !5960)
!5979 = !DILocation(line: 228, column: 16, scope: !5960)
!5980 = !DILocation(line: 229, column: 1, scope: !5960)
!5981 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2572, file: !2572, line: 231, type: !5982, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !5984)
!5982 = !DISubroutineType(types: !5983)
!5983 = !{null, !5738, !159, !159, !159}
!5984 = !{!5985, !5986, !5987, !5988, !5989, !5990}
!5985 = !DILocalVariable(name: "uartx", arg: 1, scope: !5981, file: !2572, line: 231, type: !5738)
!5986 = !DILocalVariable(name: "xon", arg: 2, scope: !5981, file: !2572, line: 232, type: !159)
!5987 = !DILocalVariable(name: "xoff", arg: 3, scope: !5981, file: !2572, line: 233, type: !159)
!5988 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5981, file: !2572, line: 234, type: !159)
!5989 = !DILocalVariable(name: "EFR", scope: !5981, file: !2572, line: 236, type: !1126)
!5990 = !DILocalVariable(name: "LCR", scope: !5981, file: !2572, line: 236, type: !1126)
!5991 = !DILocation(line: 0, scope: !5981)
!5992 = !DILocation(line: 238, column: 18, scope: !5981)
!5993 = !DILocation(line: 240, column: 16, scope: !5981)
!5994 = !DILocation(line: 241, column: 28, scope: !5981)
!5995 = !DILocation(line: 241, column: 21, scope: !5981)
!5996 = !DILocation(line: 241, column: 26, scope: !5981)
!5997 = !DILocation(line: 242, column: 20, scope: !5981)
!5998 = !DILocation(line: 242, column: 12, scope: !5981)
!5999 = !DILocation(line: 242, column: 18, scope: !5981)
!6000 = !DILocation(line: 243, column: 30, scope: !5981)
!6001 = !DILocation(line: 245, column: 30, scope: !5981)
!6002 = !DILocation(line: 245, column: 28, scope: !5981)
!6003 = !DILocation(line: 246, column: 25, scope: !5981)
!6004 = !DILocation(line: 246, column: 12, scope: !5981)
!6005 = !DILocation(line: 246, column: 23, scope: !5981)
!6006 = !DILocation(line: 247, column: 12, scope: !5981)
!6007 = !DILocation(line: 247, column: 22, scope: !5981)
!6008 = !DILocation(line: 249, column: 18, scope: !5981)
!6009 = !DILocation(line: 249, column: 16, scope: !5981)
!6010 = !DILocation(line: 250, column: 1, scope: !5981)
!6011 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2572, file: !2572, line: 252, type: !5961, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6012)
!6012 = !{!6013, !6014}
!6013 = !DILocalVariable(name: "uartx", arg: 1, scope: !6011, file: !2572, line: 252, type: !5738)
!6014 = !DILocalVariable(name: "LCR", scope: !6011, file: !2572, line: 254, type: !1126)
!6015 = !DILocation(line: 0, scope: !6011)
!6016 = !DILocation(line: 256, column: 18, scope: !6011)
!6017 = !DILocation(line: 258, column: 16, scope: !6011)
!6018 = !DILocation(line: 259, column: 24, scope: !6011)
!6019 = !DILocation(line: 259, column: 28, scope: !6011)
!6020 = !DILocation(line: 261, column: 16, scope: !6011)
!6021 = !DILocation(line: 262, column: 18, scope: !6011)
!6022 = !DILocation(line: 262, column: 16, scope: !6011)
!6023 = !DILocation(line: 263, column: 1, scope: !6011)
!6024 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2572, file: !2572, line: 265, type: !5961, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6025)
!6025 = !{!6026, !6027, !6028}
!6026 = !DILocalVariable(name: "uartx", arg: 1, scope: !6024, file: !2572, line: 265, type: !5738)
!6027 = !DILocalVariable(name: "EFR", scope: !6024, file: !2572, line: 267, type: !1126)
!6028 = !DILocalVariable(name: "LCR", scope: !6024, file: !2572, line: 267, type: !1126)
!6029 = !DILocation(line: 0, scope: !6024)
!6030 = !DILocation(line: 269, column: 18, scope: !6024)
!6031 = !DILocation(line: 271, column: 16, scope: !6024)
!6032 = !DILocation(line: 272, column: 30, scope: !6024)
!6033 = !DILocation(line: 274, column: 30, scope: !6024)
!6034 = !DILocation(line: 274, column: 28, scope: !6024)
!6035 = !DILocation(line: 276, column: 16, scope: !6024)
!6036 = !DILocation(line: 277, column: 28, scope: !6024)
!6037 = !DILocation(line: 283, column: 18, scope: !6024)
!6038 = !DILocation(line: 283, column: 16, scope: !6024)
!6039 = !DILocation(line: 284, column: 1, scope: !6024)
!6040 = distinct !DISubprogram(name: "uart_set_sleep_mode", scope: !2572, file: !2572, line: 287, type: !5961, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6041)
!6041 = !{!6042}
!6042 = !DILocalVariable(name: "uartx", arg: 1, scope: !6040, file: !2572, line: 287, type: !5738)
!6043 = !DILocation(line: 0, scope: !6040)
!6044 = !DILocation(line: 289, column: 12, scope: !6040)
!6045 = !DILocation(line: 289, column: 21, scope: !6040)
!6046 = !DILocation(line: 290, column: 1, scope: !6040)
!6047 = distinct !DISubprogram(name: "uart_unmask_send_interrupt", scope: !2572, file: !2572, line: 292, type: !5961, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6048)
!6048 = !{!6049, !6050, !6051}
!6049 = !DILocalVariable(name: "uartx", arg: 1, scope: !6047, file: !2572, line: 292, type: !5738)
!6050 = !DILocalVariable(name: "IER", scope: !6047, file: !2572, line: 294, type: !1126)
!6051 = !DILocalVariable(name: "LCR", scope: !6047, file: !2572, line: 294, type: !1126)
!6052 = !DILocation(line: 0, scope: !6047)
!6053 = !DILocation(line: 296, column: 18, scope: !6047)
!6054 = !DILocation(line: 298, column: 16, scope: !6047)
!6055 = !DILocation(line: 299, column: 26, scope: !6047)
!6056 = !DILocation(line: 301, column: 26, scope: !6047)
!6057 = !DILocation(line: 301, column: 24, scope: !6047)
!6058 = !DILocation(line: 303, column: 19, scope: !6047)
!6059 = !DILocation(line: 303, column: 16, scope: !6047)
!6060 = !DILocation(line: 304, column: 1, scope: !6047)
!6061 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2572, file: !2572, line: 307, type: !5961, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6062)
!6062 = !{!6063, !6064, !6065}
!6063 = !DILocalVariable(name: "uartx", arg: 1, scope: !6061, file: !2572, line: 307, type: !5738)
!6064 = !DILocalVariable(name: "IER", scope: !6061, file: !2572, line: 309, type: !1126)
!6065 = !DILocalVariable(name: "LCR", scope: !6061, file: !2572, line: 309, type: !1126)
!6066 = !DILocation(line: 0, scope: !6061)
!6067 = !DILocation(line: 311, column: 18, scope: !6061)
!6068 = !DILocation(line: 313, column: 16, scope: !6061)
!6069 = !DILocation(line: 314, column: 26, scope: !6061)
!6070 = !DILocation(line: 316, column: 26, scope: !6061)
!6071 = !DILocation(line: 316, column: 24, scope: !6061)
!6072 = !DILocation(line: 318, column: 19, scope: !6061)
!6073 = !DILocation(line: 318, column: 16, scope: !6061)
!6074 = !DILocation(line: 319, column: 1, scope: !6061)
!6075 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2572, file: !2572, line: 321, type: !6076, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6078)
!6076 = !DISubroutineType(types: !6077)
!6077 = !{null, !5738, !1032}
!6078 = !{!6079, !6080, !6081}
!6079 = !DILocalVariable(name: "uartx", arg: 1, scope: !6075, file: !2572, line: 321, type: !5738)
!6080 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6075, file: !2572, line: 321, type: !1032)
!6081 = !DILocalVariable(name: "FCR", scope: !6075, file: !2572, line: 323, type: !1126)
!6082 = !DILocation(line: 0, scope: !6075)
!6083 = !DILocation(line: 327, column: 9, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6075, file: !2572, line: 327, column: 9)
!6085 = !DILocation(line: 333, column: 24, scope: !6075)
!6086 = !DILocation(line: 333, column: 28, scope: !6075)
!6087 = !DILocation(line: 334, column: 1, scope: !6075)
!6088 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2572, file: !2572, line: 336, type: !6089, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6092)
!6089 = !DISubroutineType(types: !6090)
!6090 = !{!6091, !5738}
!6091 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !779, line: 55, baseType: !874)
!6092 = !{!6093, !6094, !6095, !6096}
!6093 = !DILocalVariable(name: "uartx", arg: 1, scope: !6088, file: !2572, line: 336, type: !5738)
!6094 = !DILocalVariable(name: "IIR", scope: !6088, file: !2572, line: 338, type: !1126)
!6095 = !DILocalVariable(name: "LSR", scope: !6088, file: !2572, line: 338, type: !1126)
!6096 = !DILocalVariable(name: "type", scope: !6088, file: !2572, line: 339, type: !6091)
!6097 = !DILocation(line: 0, scope: !6088)
!6098 = !DILocation(line: 341, column: 30, scope: !6088)
!6099 = !DILocation(line: 342, column: 13, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6088, file: !2572, line: 342, column: 9)
!6101 = !DILocation(line: 342, column: 9, scope: !6088)
!6102 = !DILocation(line: 346, column: 17, scope: !6088)
!6103 = !DILocation(line: 346, column: 5, scope: !6088)
!6104 = !DILocation(line: 350, column: 13, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6088, file: !2572, line: 346, column: 37)
!6106 = !DILocation(line: 353, column: 35, scope: !6105)
!6107 = !DILocation(line: 354, column: 21, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6105, file: !2572, line: 354, column: 17)
!6109 = !DILocation(line: 363, column: 13, scope: !6105)
!6110 = !DILocation(line: 369, column: 1, scope: !6088)
!6111 = distinct !DISubprogram(name: "uart_verify_error", scope: !2572, file: !2572, line: 371, type: !6112, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6114)
!6112 = !DISubroutineType(types: !6113)
!6113 = !{!1032, !5738}
!6114 = !{!6115, !6116, !6117}
!6115 = !DILocalVariable(name: "uartx", arg: 1, scope: !6111, file: !2572, line: 371, type: !5738)
!6116 = !DILocalVariable(name: "LSR", scope: !6111, file: !2572, line: 373, type: !1126)
!6117 = !DILocalVariable(name: "ret", scope: !6111, file: !2572, line: 374, type: !1032)
!6118 = !DILocation(line: 0, scope: !6111)
!6119 = !DILocation(line: 376, column: 27, scope: !6111)
!6120 = !DILocation(line: 377, column: 15, scope: !6121)
!6121 = distinct !DILexicalBlock(scope: !6111, file: !2572, line: 377, column: 9)
!6122 = !DILocation(line: 377, column: 9, scope: !6111)
!6123 = !DILocation(line: 381, column: 5, scope: !6111)
!6124 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2572, file: !2572, line: 384, type: !5961, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6125)
!6125 = !{!6126, !6127}
!6126 = !DILocalVariable(name: "uartx", arg: 1, scope: !6124, file: !2572, line: 384, type: !5738)
!6127 = !DILocalVariable(name: "DMA_EN", scope: !6124, file: !2572, line: 386, type: !1126)
!6128 = !DILocation(line: 0, scope: !6124)
!6129 = !DILocation(line: 388, column: 21, scope: !6124)
!6130 = !DILocation(line: 390, column: 1, scope: !6124)
!6131 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2572, file: !2572, line: 392, type: !5961, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6132)
!6132 = !{!6133}
!6133 = !DILocalVariable(name: "uartx", arg: 1, scope: !6131, file: !2572, line: 392, type: !5738)
!6134 = !DILocation(line: 0, scope: !6131)
!6135 = !DILocation(line: 394, column: 12, scope: !6131)
!6136 = !DILocation(line: 394, column: 16, scope: !6131)
!6137 = !DILocation(line: 395, column: 24, scope: !6131)
!6138 = !DILocation(line: 395, column: 28, scope: !6131)
!6139 = !DILocation(line: 396, column: 21, scope: !6131)
!6140 = !DILocation(line: 396, column: 26, scope: !6131)
!6141 = !DILocation(line: 397, column: 12, scope: !6131)
!6142 = !DILocation(line: 397, column: 18, scope: !6131)
!6143 = !DILocation(line: 399, column: 16, scope: !6131)
!6144 = !DILocation(line: 400, column: 24, scope: !6131)
!6145 = !DILocation(line: 400, column: 28, scope: !6131)
!6146 = !DILocation(line: 401, column: 20, scope: !6131)
!6147 = !DILocation(line: 401, column: 24, scope: !6131)
!6148 = !DILocation(line: 403, column: 16, scope: !6131)
!6149 = !DILocation(line: 404, column: 24, scope: !6131)
!6150 = !DILocation(line: 405, column: 28, scope: !6131)
!6151 = !DILocation(line: 407, column: 16, scope: !6131)
!6152 = !DILocation(line: 408, column: 28, scope: !6131)
!6153 = !DILocation(line: 409, column: 16, scope: !6131)
!6154 = !DILocation(line: 411, column: 25, scope: !6131)
!6155 = !DILocation(line: 412, column: 22, scope: !6131)
!6156 = !DILocation(line: 412, column: 26, scope: !6131)
!6157 = !DILocation(line: 413, column: 12, scope: !6131)
!6158 = !DILocation(line: 413, column: 24, scope: !6131)
!6159 = !DILocation(line: 414, column: 12, scope: !6131)
!6160 = !DILocation(line: 414, column: 22, scope: !6131)
!6161 = !DILocation(line: 415, column: 12, scope: !6131)
!6162 = !DILocation(line: 415, column: 25, scope: !6131)
!6163 = !DILocation(line: 416, column: 12, scope: !6131)
!6164 = !DILocation(line: 416, column: 25, scope: !6131)
!6165 = !DILocation(line: 417, column: 12, scope: !6131)
!6166 = !DILocation(line: 417, column: 23, scope: !6131)
!6167 = !DILocation(line: 418, column: 12, scope: !6131)
!6168 = !DILocation(line: 418, column: 27, scope: !6131)
!6169 = !DILocation(line: 419, column: 12, scope: !6131)
!6170 = !DILocation(line: 419, column: 18, scope: !6131)
!6171 = !DILocation(line: 420, column: 12, scope: !6131)
!6172 = !DILocation(line: 420, column: 23, scope: !6131)
!6173 = !DILocation(line: 421, column: 12, scope: !6131)
!6174 = !DILocation(line: 421, column: 22, scope: !6131)
!6175 = !DILocation(line: 422, column: 12, scope: !6131)
!6176 = !DILocation(line: 422, column: 21, scope: !6131)
!6177 = !DILocation(line: 423, column: 12, scope: !6131)
!6178 = !DILocation(line: 423, column: 19, scope: !6131)
!6179 = !DILocation(line: 424, column: 23, scope: !6131)
!6180 = !DILocation(line: 425, column: 12, scope: !6131)
!6181 = !DILocation(line: 425, column: 22, scope: !6131)
!6182 = !DILocation(line: 426, column: 12, scope: !6131)
!6183 = !DILocation(line: 426, column: 22, scope: !6131)
!6184 = !DILocation(line: 427, column: 1, scope: !6131)
!6185 = distinct !DISubprogram(name: "uart_query_empty", scope: !2572, file: !2572, line: 429, type: !5961, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2571, retainedNodes: !6186)
!6186 = !{!6187}
!6187 = !DILocalVariable(name: "uartx", arg: 1, scope: !6185, file: !2572, line: 429, type: !5738)
!6188 = !DILocation(line: 0, scope: !6185)
!6189 = !DILocation(line: 431, column: 5, scope: !6185)
!6190 = !DILocation(line: 431, column: 31, scope: !6185)
!6191 = !DILocation(line: 431, column: 36, scope: !6185)
!6192 = !DILocation(line: 431, column: 12, scope: !6185)
!6193 = distinct !{!6193, !6189, !6194}
!6194 = !DILocation(line: 431, column: 44, scope: !6185)
!6195 = !DILocation(line: 432, column: 1, scope: !6185)
!6196 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !872, file: !872, line: 134, type: !6197, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !6199)
!6197 = !DISubroutineType(types: !6198)
!6198 = !{!4489, !784, !1032}
!6199 = !{!6200, !6201, !6202}
!6200 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6196, file: !872, line: 134, type: !784)
!6201 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6196, file: !872, line: 134, type: !1032)
!6202 = !DILocalVariable(name: "dma_channel", scope: !6196, file: !872, line: 136, type: !4489)
!6203 = !DILocation(line: 0, scope: !6196)
!6204 = !DILocation(line: 138, column: 5, scope: !6196)
!6205 = !DILocation(line: 140, column: 17, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6207, file: !872, line: 140, column: 17)
!6207 = distinct !DILexicalBlock(scope: !6196, file: !872, line: 138, column: 24)
!6208 = !DILocation(line: 147, column: 17, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6207, file: !872, line: 147, column: 17)
!6210 = !DILocation(line: 154, column: 17, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6207, file: !872, line: 154, column: 17)
!6212 = !DILocation(line: 161, column: 17, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6207, file: !872, line: 161, column: 17)
!6214 = !DILocation(line: 171, column: 5, scope: !6196)
!6215 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !872, file: !872, line: 174, type: !6216, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !6224)
!6216 = !DISubroutineType(types: !6217)
!6217 = !{null, !4489, !6218}
!6218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6219, size: 32)
!6219 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !779, line: 96, baseType: !6220)
!6220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !779, line: 93, size: 64, elements: !6221)
!6221 = !{!6222, !6223}
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !6220, file: !779, line: 94, baseType: !91, size: 8)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !6220, file: !779, line: 95, baseType: !784, size: 32, offset: 32)
!6224 = !{!6225, !6226}
!6225 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !6215, file: !872, line: 174, type: !4489)
!6226 = !DILocalVariable(name: "user_data", arg: 2, scope: !6215, file: !872, line: 174, type: !6218)
!6227 = !DILocation(line: 0, scope: !6215)
!6228 = !DILocation(line: 176, column: 5, scope: !6215)
!6229 = !DILocation(line: 0, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6215, file: !872, line: 176, column: 26)
!6231 = !DILocation(line: 212, column: 1, scope: !6215)
!6232 = distinct !DISubprogram(name: "uart_enable_dma", scope: !872, file: !872, line: 214, type: !6233, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !6235)
!6233 = !DISubroutineType(types: !6234)
!6234 = !{null, !885}
!6235 = !{!6236}
!6236 = !DILocalVariable(name: "uartx", arg: 1, scope: !6232, file: !872, line: 214, type: !885)
!6237 = !DILocation(line: 0, scope: !6232)
!6238 = !DILocation(line: 216, column: 12, scope: !6232)
!6239 = !DILocation(line: 216, column: 19, scope: !6232)
!6240 = !DILocation(line: 217, column: 1, scope: !6232)
!6241 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !872, file: !872, line: 219, type: !1044, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !871, retainedNodes: !6242)
!6242 = !{!6243, !6244, !6245, !6246}
!6243 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6241, file: !872, line: 219, type: !950)
!6244 = !DILocalVariable(name: "uart_port", scope: !6241, file: !872, line: 221, type: !784)
!6245 = !DILocalVariable(name: "type", scope: !6241, file: !872, line: 222, type: !6091)
!6246 = !DILocalVariable(name: "uartx", scope: !6241, file: !872, line: 223, type: !885)
!6247 = !DILocation(line: 0, scope: !6241)
!6248 = !DILocation(line: 225, column: 5, scope: !6241)
!6249 = !DILocation(line: 242, column: 13, scope: !6241)
!6250 = !DILocation(line: 243, column: 12, scope: !6241)
!6251 = !DILocation(line: 245, column: 5, scope: !6241)
!6252 = !DILocation(line: 248, column: 13, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !6241, file: !872, line: 245, column: 19)
!6254 = !DILocation(line: 249, column: 13, scope: !6253)
!6255 = !DILocation(line: 252, column: 13, scope: !6253)
!6256 = !DILocation(line: 253, column: 13, scope: !6253)
!6257 = !DILocation(line: 263, column: 13, scope: !6253)
!6258 = !DILocation(line: 264, column: 13, scope: !6253)
!6259 = !DILocation(line: 268, column: 13, scope: !6253)
!6260 = !DILocation(line: 269, column: 13, scope: !6253)
!6261 = !DILocation(line: 276, column: 13, scope: !6253)
!6262 = !DILocation(line: 278, column: 1, scope: !6241)
!6263 = !DILocation(line: 131, column: 9, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !960, file: !961, line: 131, column: 9)
!6265 = !DILocation(line: 131, column: 9, scope: !960)
!6266 = !DILocation(line: 0, scope: !960)
!6267 = !DILocation(line: 134, column: 49, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6269, file: !961, line: 133, column: 46)
!6269 = distinct !DILexicalBlock(scope: !6270, file: !961, line: 133, column: 9)
!6270 = distinct !DILexicalBlock(scope: !6271, file: !961, line: 133, column: 9)
!6271 = distinct !DILexicalBlock(scope: !6264, file: !961, line: 131, column: 28)
!6272 = !DILocation(line: 134, column: 13, scope: !6268)
!6273 = !DILocation(line: 133, column: 42, scope: !6269)
!6274 = !DILocation(line: 133, column: 23, scope: !6269)
!6275 = !DILocation(line: 133, column: 9, scope: !6270)
!6276 = distinct !{!6276, !6275, !6277}
!6277 = !DILocation(line: 135, column: 9, scope: !6270)
!6278 = !DILocation(line: 136, column: 22, scope: !6271)
!6279 = !DILocation(line: 137, column: 5, scope: !6271)
!6280 = !DILocation(line: 138, column: 5, scope: !960)
!6281 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !970, file: !970, line: 1577, type: !6282, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6284)
!6282 = !DISubroutineType(types: !6283)
!6283 = !{null, !951, !61}
!6284 = !{!6285, !6286}
!6285 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6281, file: !970, line: 1577, type: !951)
!6286 = !DILocalVariable(name: "priority", arg: 2, scope: !6281, file: !970, line: 1577, type: !61)
!6287 = !DILocation(line: 0, scope: !6281)
!6288 = !DILocation(line: 1582, column: 34, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6290, file: !970, line: 1581, column: 8)
!6290 = distinct !DILexicalBlock(scope: !6281, file: !970, line: 1579, column: 6)
!6291 = !DILocation(line: 1582, column: 5, scope: !6289)
!6292 = !DILocation(line: 1582, column: 32, scope: !6289)
!6293 = !DILocation(line: 1583, column: 1, scope: !6281)
!6294 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !961, file: !961, line: 141, type: !6295, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6297)
!6295 = !DISubroutineType(types: !6296)
!6296 = !{!964, !950}
!6297 = !{!6298, !6299}
!6298 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6294, file: !961, line: 141, type: !950)
!6299 = !DILocalVariable(name: "status", scope: !6294, file: !961, line: 143, type: !964)
!6300 = !DILocation(line: 0, scope: !6294)
!6301 = !DILocation(line: 145, column: 40, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6294, file: !961, line: 145, column: 9)
!6303 = !DILocation(line: 149, column: 9, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6302, file: !961, line: 148, column: 12)
!6305 = !DILocation(line: 153, column: 5, scope: !6294)
!6306 = !DILocation(line: 154, column: 1, scope: !6294)
!6307 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !970, file: !970, line: 1494, type: !6308, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6310)
!6308 = !DISubroutineType(types: !6309)
!6309 = !{null, !951}
!6310 = !{!6311}
!6311 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6307, file: !970, line: 1494, type: !951)
!6312 = !DILocation(line: 0, scope: !6307)
!6313 = !DILocation(line: 1497, column: 91, scope: !6307)
!6314 = !DILocation(line: 1497, column: 61, scope: !6307)
!6315 = !DILocation(line: 1497, column: 40, scope: !6307)
!6316 = !DILocation(line: 1497, column: 3, scope: !6307)
!6317 = !DILocation(line: 1497, column: 46, scope: !6307)
!6318 = !DILocation(line: 1498, column: 1, scope: !6307)
!6319 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !961, file: !961, line: 156, type: !6295, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6320)
!6320 = !{!6321, !6322}
!6321 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6319, file: !961, line: 156, type: !950)
!6322 = !DILocalVariable(name: "status", scope: !6319, file: !961, line: 158, type: !964)
!6323 = !DILocation(line: 0, scope: !6319)
!6324 = !DILocation(line: 160, column: 40, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6319, file: !961, line: 160, column: 9)
!6326 = !DILocation(line: 164, column: 9, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6325, file: !961, line: 163, column: 12)
!6328 = !DILocation(line: 168, column: 5, scope: !6319)
!6329 = !DILocation(line: 169, column: 1, scope: !6319)
!6330 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !970, file: !970, line: 1507, type: !6308, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6331)
!6331 = !{!6332}
!6332 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6330, file: !970, line: 1507, type: !951)
!6333 = !DILocation(line: 0, scope: !6330)
!6334 = !DILocation(line: 1509, column: 65, scope: !6330)
!6335 = !DILocation(line: 1509, column: 44, scope: !6330)
!6336 = !DILocation(line: 1509, column: 32, scope: !6330)
!6337 = !DILocation(line: 1509, column: 3, scope: !6330)
!6338 = !DILocation(line: 1509, column: 39, scope: !6330)
!6339 = !DILocation(line: 1510, column: 1, scope: !6330)
!6340 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !961, file: !961, line: 171, type: !6341, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6343)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{!61, !950}
!6343 = !{!6344, !6345}
!6344 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6340, file: !961, line: 171, type: !950)
!6345 = !DILocalVariable(name: "ret", scope: !6340, file: !961, line: 173, type: !61)
!6346 = !DILocation(line: 0, scope: !6340)
!6347 = !DILocation(line: 175, column: 40, scope: !6348)
!6348 = distinct !DILexicalBlock(scope: !6340, file: !961, line: 175, column: 9)
!6349 = !DILocation(line: 178, column: 15, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6348, file: !961, line: 177, column: 12)
!6351 = !DILocation(line: 181, column: 5, scope: !6340)
!6352 = !DILocation(line: 182, column: 1, scope: !6340)
!6353 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !970, file: !970, line: 1523, type: !6354, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6356)
!6354 = !DISubroutineType(types: !6355)
!6355 = !{!61, !951}
!6356 = !{!6357}
!6357 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6353, file: !970, line: 1523, type: !951)
!6358 = !DILocation(line: 0, scope: !6353)
!6359 = !DILocation(line: 1525, column: 51, scope: !6353)
!6360 = !DILocation(line: 1525, column: 23, scope: !6353)
!6361 = !DILocation(line: 1525, column: 83, scope: !6353)
!6362 = !DILocation(line: 1525, column: 22, scope: !6353)
!6363 = !DILocation(line: 1525, column: 3, scope: !6353)
!6364 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !961, file: !961, line: 184, type: !6295, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6365)
!6365 = !{!6366, !6367}
!6366 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6364, file: !961, line: 184, type: !950)
!6367 = !DILocalVariable(name: "status", scope: !6364, file: !961, line: 186, type: !964)
!6368 = !DILocation(line: 0, scope: !6364)
!6369 = !DILocation(line: 188, column: 40, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6364, file: !961, line: 188, column: 9)
!6371 = !DILocation(line: 192, column: 9, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6370, file: !961, line: 191, column: 12)
!6373 = !DILocation(line: 196, column: 5, scope: !6364)
!6374 = !DILocation(line: 197, column: 1, scope: !6364)
!6375 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !970, file: !970, line: 1535, type: !6308, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6376)
!6376 = !{!6377}
!6377 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6375, file: !970, line: 1535, type: !951)
!6378 = !DILocation(line: 0, scope: !6375)
!6379 = !DILocation(line: 1537, column: 65, scope: !6375)
!6380 = !DILocation(line: 1537, column: 44, scope: !6375)
!6381 = !DILocation(line: 1537, column: 32, scope: !6375)
!6382 = !DILocation(line: 1537, column: 3, scope: !6375)
!6383 = !DILocation(line: 1537, column: 39, scope: !6375)
!6384 = !DILocation(line: 1538, column: 1, scope: !6375)
!6385 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !961, file: !961, line: 199, type: !6295, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6386)
!6386 = !{!6387, !6388}
!6387 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6385, file: !961, line: 199, type: !950)
!6388 = !DILocalVariable(name: "status", scope: !6385, file: !961, line: 201, type: !964)
!6389 = !DILocation(line: 0, scope: !6385)
!6390 = !DILocation(line: 203, column: 40, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6385, file: !961, line: 203, column: 9)
!6392 = !DILocation(line: 207, column: 9, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6391, file: !961, line: 206, column: 12)
!6394 = !DILocation(line: 211, column: 5, scope: !6385)
!6395 = !DILocation(line: 212, column: 1, scope: !6385)
!6396 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !970, file: !970, line: 1547, type: !6308, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6397)
!6397 = !{!6398}
!6398 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6396, file: !970, line: 1547, type: !951)
!6399 = !DILocation(line: 0, scope: !6396)
!6400 = !DILocation(line: 1549, column: 65, scope: !6396)
!6401 = !DILocation(line: 1549, column: 44, scope: !6396)
!6402 = !DILocation(line: 1549, column: 32, scope: !6396)
!6403 = !DILocation(line: 1549, column: 3, scope: !6396)
!6404 = !DILocation(line: 1549, column: 39, scope: !6396)
!6405 = !DILocation(line: 1550, column: 1, scope: !6396)
!6406 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !961, file: !961, line: 214, type: !6407, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6409)
!6407 = !DISubroutineType(types: !6408)
!6408 = !{!964, !950, !61}
!6409 = !{!6410, !6411, !6412}
!6410 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6406, file: !961, line: 214, type: !950)
!6411 = !DILocalVariable(name: "priority", arg: 2, scope: !6406, file: !961, line: 214, type: !61)
!6412 = !DILocalVariable(name: "status", scope: !6406, file: !961, line: 216, type: !964)
!6413 = !DILocation(line: 0, scope: !6406)
!6414 = !DILocation(line: 218, column: 40, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6406, file: !961, line: 218, column: 9)
!6416 = !DILocation(line: 222, column: 9, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6415, file: !961, line: 221, column: 12)
!6418 = !DILocation(line: 226, column: 5, scope: !6406)
!6419 = !DILocation(line: 227, column: 1, scope: !6406)
!6420 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !961, file: !961, line: 229, type: !6341, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6421)
!6421 = !{!6422, !6423}
!6422 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6420, file: !961, line: 229, type: !950)
!6423 = !DILocalVariable(name: "ret", scope: !6420, file: !961, line: 231, type: !61)
!6424 = !DILocation(line: 0, scope: !6420)
!6425 = !DILocation(line: 233, column: 40, scope: !6426)
!6426 = distinct !DILexicalBlock(scope: !6420, file: !961, line: 233, column: 9)
!6427 = !DILocation(line: 236, column: 15, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6426, file: !961, line: 235, column: 12)
!6429 = !DILocation(line: 239, column: 5, scope: !6420)
!6430 = !DILocation(line: 240, column: 1, scope: !6420)
!6431 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !970, file: !970, line: 1597, type: !6354, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6432)
!6432 = !{!6433}
!6433 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6431, file: !970, line: 1597, type: !951)
!6434 = !DILocation(line: 0, scope: !6431)
!6435 = !DILocation(line: 1603, column: 23, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !970, line: 1602, column: 8)
!6437 = distinct !DILexicalBlock(scope: !6431, file: !970, line: 1600, column: 6)
!6438 = !DILocation(line: 1603, column: 60, scope: !6436)
!6439 = !DILocation(line: 1604, column: 1, scope: !6431)
!6440 = distinct !DISubprogram(name: "isrC_main", scope: !961, file: !961, line: 248, type: !962, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6441)
!6441 = !{!6442, !6443}
!6442 = !DILocalVariable(name: "status", scope: !6440, file: !961, line: 250, type: !964)
!6443 = !DILocalVariable(name: "irq_number", scope: !6440, file: !961, line: 251, type: !950)
!6444 = !DILocation(line: 0, scope: !6440)
!6445 = !DILocation(line: 253, column: 5, scope: !6440)
!6446 = !DILocation(line: 255, column: 35, scope: !6440)
!6447 = !DILocation(line: 256, column: 40, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6440, file: !961, line: 256, column: 9)
!6449 = !DILocation(line: 259, column: 48, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6448, file: !961, line: 259, column: 16)
!6451 = !DILocation(line: 259, column: 62, scope: !6450)
!6452 = !DILocation(line: 259, column: 16, scope: !6448)
!6453 = !DILocation(line: 261, column: 9, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6450, file: !961, line: 259, column: 71)
!6455 = !DILocation(line: 262, column: 9, scope: !6454)
!6456 = !DILocation(line: 264, column: 55, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6450, file: !961, line: 263, column: 12)
!6458 = !DILocation(line: 264, column: 41, scope: !6457)
!6459 = !DILocation(line: 264, column: 53, scope: !6457)
!6460 = !DILocation(line: 265, column: 41, scope: !6457)
!6461 = !DILocation(line: 265, column: 9, scope: !6457)
!6462 = !DILocation(line: 269, column: 5, scope: !6440)
!6463 = !DILocation(line: 270, column: 1, scope: !6440)
!6464 = distinct !DISubprogram(name: "get_current_irq", scope: !961, file: !961, line: 242, type: !3836, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6465)
!6465 = !{!6466}
!6466 = !DILocalVariable(name: "irq_num", scope: !6464, file: !961, line: 244, type: !61)
!6467 = !DILocation(line: 244, column: 31, scope: !6464)
!6468 = !DILocation(line: 244, column: 36, scope: !6464)
!6469 = !DILocation(line: 0, scope: !6464)
!6470 = !DILocation(line: 245, column: 21, scope: !6464)
!6471 = !DILocation(line: 245, column: 5, scope: !6464)
!6472 = distinct !DISubprogram(name: "get_pending_irq", scope: !961, file: !961, line: 121, type: !3836, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !345)
!6473 = !DILocation(line: 123, column: 19, scope: !6472)
!6474 = !DILocation(line: 123, column: 51, scope: !6472)
!6475 = !DILocation(line: 123, column: 5, scope: !6472)
!6476 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !961, file: !961, line: 272, type: !6477, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6480)
!6477 = !DISubroutineType(types: !6478)
!6478 = !{!964, !950, !6479}
!6479 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !764, line: 175, baseType: !1043)
!6480 = !{!6481, !6482, !6483}
!6481 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6476, file: !961, line: 272, type: !950)
!6482 = !DILocalVariable(name: "callback", arg: 2, scope: !6476, file: !961, line: 272, type: !6479)
!6483 = !DILocalVariable(name: "mask", scope: !6476, file: !961, line: 274, type: !61)
!6484 = !DILocation(line: 0, scope: !6476)
!6485 = !DILocation(line: 276, column: 40, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6476, file: !961, line: 276, column: 9)
!6487 = !DILocation(line: 280, column: 12, scope: !6476)
!6488 = !DILocation(line: 281, column: 5, scope: !6476)
!6489 = !DILocation(line: 282, column: 37, scope: !6476)
!6490 = !DILocation(line: 282, column: 51, scope: !6476)
!6491 = !DILocation(line: 283, column: 37, scope: !6476)
!6492 = !DILocation(line: 283, column: 49, scope: !6476)
!6493 = !DILocation(line: 284, column: 5, scope: !6476)
!6494 = !DILocation(line: 286, column: 5, scope: !6476)
!6495 = !DILocation(line: 287, column: 1, scope: !6476)
!6496 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !961, file: !961, line: 289, type: !6497, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6499)
!6497 = !DISubroutineType(types: !6498)
!6498 = !{!964, !1094}
!6499 = !{!6500}
!6500 = !DILocalVariable(name: "mask", arg: 1, scope: !6496, file: !961, line: 289, type: !1094)
!6501 = !DILocation(line: 0, scope: !6496)
!6502 = !DILocation(line: 291, column: 13, scope: !6496)
!6503 = !DILocation(line: 291, column: 11, scope: !6496)
!6504 = !DILocation(line: 292, column: 5, scope: !6496)
!6505 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !961, file: !961, line: 295, type: !6506, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !965, retainedNodes: !6508)
!6506 = !DISubroutineType(types: !6507)
!6507 = !{!964, !61}
!6508 = !{!6509}
!6509 = !DILocalVariable(name: "mask", arg: 1, scope: !6505, file: !961, line: 295, type: !61)
!6510 = !DILocation(line: 0, scope: !6505)
!6511 = !DILocation(line: 297, column: 5, scope: !6505)
!6512 = !DILocation(line: 298, column: 5, scope: !6505)
!6513 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2576, file: !2576, line: 51, type: !3836, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6514)
!6514 = !{!6515, !6516}
!6515 = !DILocalVariable(name: "mask", scope: !6513, file: !2576, line: 53, type: !61)
!6516 = !DILocalVariable(name: "priority", scope: !6513, file: !2576, line: 55, type: !61)
!6517 = !DILocation(line: 521, column: 3, scope: !6518, inlinedAt: !6522)
!6518 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !6519, file: !6519, line: 517, type: !3836, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6520)
!6519 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!6520 = !{!6521}
!6521 = !DILocalVariable(name: "result", scope: !6518, file: !6519, line: 519, type: !61)
!6522 = distinct !DILocation(line: 53, column: 21, scope: !6513)
!6523 = !{i64 457521}
!6524 = !DILocation(line: 0, scope: !6518, inlinedAt: !6522)
!6525 = !DILocation(line: 0, scope: !6513)
!6526 = !DILocalVariable(name: "value", arg: 1, scope: !6527, file: !6519, line: 532, type: !61)
!6527 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !6519, file: !6519, line: 532, type: !6528, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6530)
!6528 = !DISubroutineType(types: !6529)
!6529 = !{null, !61}
!6530 = !{!6526}
!6531 = !DILocation(line: 0, scope: !6527, inlinedAt: !6532)
!6532 = distinct !DILocation(line: 56, column: 5, scope: !6513)
!6533 = !DILocation(line: 534, column: 3, scope: !6527, inlinedAt: !6532)
!6534 = !{i64 457854}
!6535 = !DILocation(line: 456, column: 3, scope: !6536, inlinedAt: !6537)
!6536 = distinct !DISubprogram(name: "__DMB", scope: !2691, file: !2691, line: 454, type: !343, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !345)
!6537 = distinct !DILocation(line: 57, column: 5, scope: !6513)
!6538 = !{i64 430610}
!6539 = !DILocation(line: 434, column: 3, scope: !6540, inlinedAt: !6541)
!6540 = distinct !DISubprogram(name: "__ISB", scope: !2691, file: !2691, line: 432, type: !343, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !345)
!6541 = distinct !DILocation(line: 58, column: 5, scope: !6513)
!6542 = !{i64 430025}
!6543 = !DILocation(line: 59, column: 5, scope: !6513)
!6544 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2576, file: !2576, line: 62, type: !6528, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6545)
!6545 = !{!6546}
!6546 = !DILocalVariable(name: "mask", arg: 1, scope: !6544, file: !2576, line: 62, type: !61)
!6547 = !DILocation(line: 0, scope: !6544)
!6548 = !DILocation(line: 0, scope: !6527, inlinedAt: !6549)
!6549 = distinct !DILocation(line: 64, column: 5, scope: !6544)
!6550 = !DILocation(line: 534, column: 3, scope: !6527, inlinedAt: !6549)
!6551 = !DILocation(line: 456, column: 3, scope: !6536, inlinedAt: !6552)
!6552 = distinct !DILocation(line: 65, column: 5, scope: !6544)
!6553 = !DILocation(line: 434, column: 3, scope: !6540, inlinedAt: !6554)
!6554 = distinct !DILocation(line: 66, column: 5, scope: !6544)
!6555 = !DILocation(line: 67, column: 1, scope: !6544)
!6556 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2576, file: !2576, line: 69, type: !343, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6557)
!6557 = !{!6558, !6559}
!6558 = !DILocalVariable(name: "irq_number", scope: !6556, file: !2576, line: 71, type: !950)
!6559 = !DILocalVariable(name: "mask", scope: !6556, file: !2576, line: 72, type: !61)
!6560 = !DILocation(line: 72, column: 21, scope: !6556)
!6561 = !DILocation(line: 0, scope: !6556)
!6562 = !DILocation(line: 73, column: 5, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6556, file: !2576, line: 73, column: 5)
!6564 = !DILocation(line: 74, column: 9, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6566, file: !2576, line: 73, column: 85)
!6566 = distinct !DILexicalBlock(scope: !6563, file: !2576, line: 73, column: 5)
!6567 = !DILocation(line: 73, column: 81, scope: !6566)
!6568 = !DILocation(line: 73, column: 53, scope: !6566)
!6569 = distinct !{!6569, !6562, !6570}
!6570 = !DILocation(line: 75, column: 5, scope: !6563)
!6571 = !DILocation(line: 76, column: 5, scope: !6556)
!6572 = !DILocation(line: 77, column: 1, scope: !6556)
!6573 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !970, file: !970, line: 1507, type: !6308, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6574)
!6574 = !{!6575}
!6575 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6573, file: !970, line: 1507, type: !951)
!6576 = !DILocation(line: 0, scope: !6573)
!6577 = !DILocation(line: 1509, column: 65, scope: !6573)
!6578 = !DILocation(line: 1509, column: 44, scope: !6573)
!6579 = !DILocation(line: 1509, column: 32, scope: !6573)
!6580 = !DILocation(line: 1509, column: 3, scope: !6573)
!6581 = !DILocation(line: 1509, column: 39, scope: !6573)
!6582 = !DILocation(line: 1510, column: 1, scope: !6573)
!6583 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2576, file: !2576, line: 79, type: !343, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6584)
!6584 = !{!6585, !6586}
!6585 = !DILocalVariable(name: "irq_number", scope: !6583, file: !2576, line: 81, type: !950)
!6586 = !DILocalVariable(name: "mask", scope: !6583, file: !2576, line: 82, type: !61)
!6587 = !DILocation(line: 82, column: 21, scope: !6583)
!6588 = !DILocation(line: 0, scope: !6583)
!6589 = !DILocation(line: 84, column: 5, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6583, file: !2576, line: 84, column: 5)
!6591 = !DILocation(line: 85, column: 9, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6593, file: !2576, line: 84, column: 85)
!6593 = distinct !DILexicalBlock(scope: !6590, file: !2576, line: 84, column: 5)
!6594 = !DILocation(line: 84, column: 81, scope: !6593)
!6595 = !DILocation(line: 84, column: 53, scope: !6593)
!6596 = distinct !{!6596, !6589, !6597}
!6597 = !DILocation(line: 86, column: 5, scope: !6590)
!6598 = !DILocation(line: 87, column: 5, scope: !6583)
!6599 = !DILocation(line: 88, column: 1, scope: !6583)
!6600 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !970, file: !970, line: 1494, type: !6308, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6601)
!6601 = !{!6602}
!6602 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6600, file: !970, line: 1494, type: !951)
!6603 = !DILocation(line: 0, scope: !6600)
!6604 = !DILocation(line: 1497, column: 91, scope: !6600)
!6605 = !DILocation(line: 1497, column: 61, scope: !6600)
!6606 = !DILocation(line: 1497, column: 40, scope: !6600)
!6607 = !DILocation(line: 1497, column: 3, scope: !6600)
!6608 = !DILocation(line: 1497, column: 46, scope: !6600)
!6609 = !DILocation(line: 1498, column: 1, scope: !6600)
!6610 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2576, file: !2576, line: 90, type: !343, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6611)
!6611 = !{!6612}
!6612 = !DILocalVariable(name: "irq_number", scope: !6610, file: !2576, line: 92, type: !950)
!6613 = !DILocation(line: 0, scope: !6610)
!6614 = !DILocation(line: 93, column: 5, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6610, file: !2576, line: 93, column: 5)
!6616 = !DILocation(line: 94, column: 9, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6618, file: !2576, line: 93, column: 85)
!6618 = distinct !DILexicalBlock(scope: !6615, file: !2576, line: 93, column: 5)
!6619 = !DILocation(line: 93, column: 81, scope: !6618)
!6620 = !DILocation(line: 93, column: 53, scope: !6618)
!6621 = distinct !{!6621, !6614, !6622}
!6622 = !DILocation(line: 95, column: 5, scope: !6615)
!6623 = !DILocation(line: 96, column: 1, scope: !6610)
!6624 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !970, file: !970, line: 1547, type: !6308, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6625)
!6625 = !{!6626}
!6626 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6624, file: !970, line: 1547, type: !951)
!6627 = !DILocation(line: 0, scope: !6624)
!6628 = !DILocation(line: 1549, column: 65, scope: !6624)
!6629 = !DILocation(line: 1549, column: 44, scope: !6624)
!6630 = !DILocation(line: 1549, column: 32, scope: !6624)
!6631 = !DILocation(line: 1549, column: 3, scope: !6624)
!6632 = !DILocation(line: 1549, column: 39, scope: !6624)
!6633 = !DILocation(line: 1550, column: 1, scope: !6624)
!6634 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2576, file: !2576, line: 98, type: !6295, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6635)
!6635 = !{!6636}
!6636 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6634, file: !2576, line: 98, type: !950)
!6637 = !DILocation(line: 0, scope: !6634)
!6638 = !DILocation(line: 100, column: 24, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6634, file: !2576, line: 100, column: 9)
!6640 = !DILocation(line: 104, column: 5, scope: !6634)
!6641 = !DILocation(line: 105, column: 5, scope: !6634)
!6642 = !DILocation(line: 106, column: 1, scope: !6634)
!6643 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2576, file: !2576, line: 45, type: !1044, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !6644)
!6644 = !{!6645}
!6645 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6643, file: !2576, line: 45, type: !950)
!6646 = !DILocation(line: 0, scope: !6643)
!6647 = !DILocation(line: 47, column: 54, scope: !6643)
!6648 = !DILocation(line: 47, column: 16, scope: !6643)
!6649 = !DILocation(line: 445, column: 3, scope: !6650, inlinedAt: !6651)
!6650 = distinct !DISubprogram(name: "__DSB", scope: !2691, file: !2691, line: 443, type: !343, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !345)
!6651 = distinct !DILocation(line: 48, column: 5, scope: !6643)
!6652 = !{i64 430321}
!6653 = !DILocation(line: 49, column: 1, scope: !6643)
!6654 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2576, file: !2576, line: 114, type: !3836, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2575, retainedNodes: !345)
!6655 = !DILocation(line: 116, column: 19, scope: !6654)
!6656 = !DILocation(line: 116, column: 24, scope: !6654)
!6657 = !DILocation(line: 116, column: 5, scope: !6654)
!6658 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1057, file: !1057, line: 71, type: !6659, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !6661)
!6659 = !DISubroutineType(types: !6660)
!6660 = !{null, !88, !61}
!6661 = !{!6662, !6663, !6664, !6758, !6759, !6760}
!6662 = !DILocalVariable(name: "MTDData", arg: 1, scope: !6658, file: !1057, line: 71, type: !88)
!6663 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !6658, file: !1057, line: 71, type: !61)
!6664 = !DILocalVariable(name: "D", scope: !6658, file: !1057, line: 73, type: !6665)
!6665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6666, size: 32)
!6666 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1250, line: 193, baseType: !6667)
!6667 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1250, line: 134, size: 1824, elements: !6668)
!6668 = !{!6669, !6670, !6671, !6677, !6683, !6684, !6691, !6692, !6699, !6700, !6701, !6702, !6709, !6710, !6740, !6741, !6742, !6743, !6744, !6745, !6746, !6747, !6748, !6749, !6750, !6751, !6752, !6753, !6754, !6755, !6756, !6757}
!6669 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !6667, file: !1250, line: 136, baseType: !61, size: 32)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !6667, file: !1250, line: 137, baseType: !849, size: 32, offset: 32)
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !6667, file: !1250, line: 138, baseType: !6672, size: 32, offset: 64)
!6672 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1334, line: 56, baseType: !6673)
!6673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6674, size: 32)
!6674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1334, line: 54, size: 8, elements: !6675)
!6675 = !{!6676}
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6674, file: !1334, line: 55, baseType: !159, size: 8)
!6677 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !6667, file: !1250, line: 139, baseType: !6678, size: 32, offset: 96)
!6678 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1334, line: 46, baseType: !6679)
!6679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6680, size: 32)
!6680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1334, line: 44, size: 8, elements: !6681)
!6681 = !{!6682}
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6680, file: !1334, line: 45, baseType: !159, size: 8)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !6667, file: !1250, line: 140, baseType: !1346, size: 8, offset: 128)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !6667, file: !1250, line: 143, baseType: !6685, size: 32, offset: 160)
!6685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6686, size: 32)
!6686 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1352, line: 146, baseType: !6687)
!6687 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 143, size: 64, elements: !6688)
!6688 = !{!6689, !6690}
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !6687, file: !1352, line: 144, baseType: !61, size: 32)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !6687, file: !1352, line: 145, baseType: !61, size: 32, offset: 32)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !6667, file: !1250, line: 144, baseType: !849, size: 32, offset: 192)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !6667, file: !1250, line: 145, baseType: !6693, size: 32, offset: 224)
!6693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6694, size: 32)
!6694 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1352, line: 152, baseType: !6695)
!6695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 149, size: 64, elements: !6696)
!6696 = !{!6697, !6698}
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !6695, file: !1352, line: 150, baseType: !61, size: 32)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !6695, file: !1352, line: 151, baseType: !61, size: 32, offset: 32)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !6667, file: !1250, line: 146, baseType: !849, size: 32, offset: 256)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !6667, file: !1250, line: 147, baseType: !61, size: 32, offset: 288)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !6667, file: !1250, line: 148, baseType: !849, size: 32, offset: 320)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !6667, file: !1250, line: 151, baseType: !6703, size: 1024, offset: 352)
!6703 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6704, size: 1024, elements: !1375)
!6704 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1352, line: 170, baseType: !6705)
!6705 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 167, size: 64, elements: !6706)
!6706 = !{!6707, !6708}
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !6705, file: !1352, line: 168, baseType: !61, size: 32)
!6708 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !6705, file: !1352, line: 169, baseType: !61, size: 32, offset: 32)
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !6667, file: !1250, line: 155, baseType: !1377, size: 32, offset: 1376)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !6667, file: !1250, line: 156, baseType: !6711, size: 32, offset: 1408)
!6711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6712, size: 32)
!6712 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1250, line: 124, baseType: !6713)
!6713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1250, line: 90, size: 200, elements: !6714)
!6714 = !{!6715, !6716, !6717, !6718, !6719, !6720, !6721, !6722, !6723, !6724, !6725, !6726, !6727, !6728, !6729, !6730, !6731, !6732, !6733, !6734, !6735, !6736, !6737, !6738, !6739}
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !6713, file: !1250, line: 91, baseType: !159, size: 8)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !6713, file: !1250, line: 92, baseType: !159, size: 8, offset: 8)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !6713, file: !1250, line: 94, baseType: !159, size: 8, offset: 16)
!6718 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !6713, file: !1250, line: 95, baseType: !159, size: 8, offset: 24)
!6719 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !6713, file: !1250, line: 96, baseType: !159, size: 8, offset: 32)
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !6713, file: !1250, line: 98, baseType: !159, size: 8, offset: 40)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !6713, file: !1250, line: 99, baseType: !159, size: 8, offset: 48)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !6713, file: !1250, line: 100, baseType: !159, size: 8, offset: 56)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !6713, file: !1250, line: 101, baseType: !159, size: 8, offset: 64)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !6713, file: !1250, line: 103, baseType: !159, size: 8, offset: 72)
!6725 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !6713, file: !1250, line: 104, baseType: !159, size: 8, offset: 80)
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !6713, file: !1250, line: 106, baseType: !159, size: 8, offset: 88)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !6713, file: !1250, line: 107, baseType: !159, size: 8, offset: 96)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !6713, file: !1250, line: 108, baseType: !159, size: 8, offset: 104)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !6713, file: !1250, line: 109, baseType: !159, size: 8, offset: 112)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !6713, file: !1250, line: 110, baseType: !159, size: 8, offset: 120)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !6713, file: !1250, line: 111, baseType: !159, size: 8, offset: 128)
!6732 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !6713, file: !1250, line: 112, baseType: !159, size: 8, offset: 136)
!6733 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !6713, file: !1250, line: 114, baseType: !159, size: 8, offset: 144)
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !6713, file: !1250, line: 115, baseType: !159, size: 8, offset: 152)
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !6713, file: !1250, line: 118, baseType: !159, size: 8, offset: 160)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6713, file: !1250, line: 119, baseType: !159, size: 8, offset: 168)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !6713, file: !1250, line: 120, baseType: !159, size: 8, offset: 176)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !6713, file: !1250, line: 121, baseType: !159, size: 8, offset: 184)
!6739 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6713, file: !1250, line: 122, baseType: !159, size: 8, offset: 192)
!6740 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !6667, file: !1250, line: 157, baseType: !61, size: 32, offset: 1440)
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !6667, file: !1250, line: 158, baseType: !1126, size: 16, offset: 1472)
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !6667, file: !1250, line: 159, baseType: !1126, size: 16, offset: 1488)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !6667, file: !1250, line: 163, baseType: !1126, size: 16, offset: 1504)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !6667, file: !1250, line: 164, baseType: !1126, size: 16, offset: 1520)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !6667, file: !1250, line: 167, baseType: !159, size: 8, offset: 1536)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !6667, file: !1250, line: 168, baseType: !1416, size: 24, offset: 1544)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !6667, file: !1250, line: 169, baseType: !159, size: 8, offset: 1568)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !6667, file: !1250, line: 170, baseType: !159, size: 8, offset: 1576)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !6667, file: !1250, line: 173, baseType: !1126, size: 16, offset: 1584)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !6667, file: !1250, line: 174, baseType: !61, size: 32, offset: 1600)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !6667, file: !1250, line: 175, baseType: !61, size: 32, offset: 1632)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !6667, file: !1250, line: 178, baseType: !91, size: 8, offset: 1664)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !6667, file: !1250, line: 179, baseType: !91, size: 8, offset: 1672)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !6667, file: !1250, line: 182, baseType: !1427, size: 32, offset: 1696)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6667, file: !1250, line: 186, baseType: !1427, size: 32, offset: 1728)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6667, file: !1250, line: 187, baseType: !1432, size: 32, offset: 1760)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !6667, file: !1250, line: 188, baseType: !1432, size: 32, offset: 1792)
!6758 = !DILocalVariable(name: "i", scope: !6658, file: !1057, line: 74, type: !61)
!6759 = !DILocalVariable(name: "data_cnt", scope: !6658, file: !1057, line: 74, type: !61)
!6760 = !DILocalVariable(name: "p_data", scope: !6658, file: !1057, line: 75, type: !1094)
!6761 = !DILocation(line: 0, scope: !6658)
!6762 = !DILocation(line: 77, column: 16, scope: !6658)
!6763 = !DILocation(line: 79, column: 53, scope: !6764)
!6764 = distinct !DILexicalBlock(scope: !6765, file: !1057, line: 79, column: 5)
!6765 = distinct !DILexicalBlock(scope: !6658, file: !1057, line: 79, column: 5)
!6766 = !DILocation(line: 79, column: 5, scope: !6765)
!6767 = !DILocation(line: 79, column: 41, scope: !6765)
!6768 = !DILocation(line: 77, column: 47, scope: !6658)
!6769 = !DILocation(line: 80, column: 13, scope: !6770)
!6770 = distinct !DILexicalBlock(scope: !6771, file: !1057, line: 80, column: 13)
!6771 = distinct !DILexicalBlock(scope: !6764, file: !1057, line: 79, column: 80)
!6772 = !DILocation(line: 80, column: 21, scope: !6770)
!6773 = !DILocation(line: 80, column: 13, scope: !6771)
!6774 = !DILocation(line: 81, column: 13, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6776, file: !1057, line: 81, column: 13)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !1057, line: 81, column: 13)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !1057, line: 81, column: 13)
!6778 = distinct !DILexicalBlock(scope: !6770, file: !1057, line: 80, column: 36)
!6779 = !DILocation(line: 79, column: 65, scope: !6764)
!6780 = !DILocation(line: 79, column: 70, scope: !6764)
!6781 = distinct !{!6781, !6766, !6782}
!6782 = !DILocation(line: 84, column: 5, scope: !6765)
!6783 = !DILocation(line: 85, column: 1, scope: !6658)
!6784 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1057, file: !1057, line: 93, type: !3584, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !6785)
!6785 = !{!6786, !6787}
!6786 = !DILocalVariable(name: "num", arg: 1, scope: !6784, file: !1057, line: 93, type: !61)
!6787 = !DILocalVariable(name: "ret", scope: !6784, file: !1057, line: 95, type: !18)
!6788 = !DILocation(line: 0, scope: !6784)
!6789 = !DILocation(line: 100, column: 9, scope: !6784)
!6790 = !DILocation(line: 102, column: 5, scope: !6784)
!6791 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1057, file: !1057, line: 110, type: !6792, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !6795)
!6792 = !DISubroutineType(types: !6793)
!6793 = !{null, !6794}
!6794 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1126)
!6795 = !{!6796, !6797}
!6796 = !DILocalVariable(name: "CS", arg: 1, scope: !6791, file: !1057, line: 110, type: !6794)
!6797 = !DILocalVariable(name: "val", scope: !6791, file: !1057, line: 112, type: !61)
!6798 = !DILocation(line: 0, scope: !6791)
!6799 = !DILocation(line: 114, column: 5, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6801, file: !1057, line: 114, column: 5)
!6801 = distinct !DILexicalBlock(scope: !6791, file: !1057, line: 114, column: 5)
!6802 = !DILocation(line: 116, column: 16, scope: !6791)
!6803 = !DILocation(line: 117, column: 9, scope: !6791)
!6804 = !DILocation(line: 122, column: 13, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !1057, line: 121, column: 27)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !1057, line: 121, column: 16)
!6807 = distinct !DILexicalBlock(scope: !6791, file: !1057, line: 117, column: 9)
!6808 = !DILocation(line: 127, column: 9, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6810, file: !1057, line: 127, column: 9)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !1057, line: 127, column: 9)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !1057, line: 127, column: 9)
!6812 = distinct !DILexicalBlock(scope: !6806, file: !1057, line: 125, column: 12)
!6813 = !DILocation(line: 0, scope: !6807)
!6814 = !DILocation(line: 134, column: 5, scope: !6791)
!6815 = !DILocation(line: 134, column: 19, scope: !6791)
!6816 = !DILocation(line: 134, column: 35, scope: !6791)
!6817 = !DILocation(line: 134, column: 12, scope: !6791)
!6818 = distinct !{!6818, !6814, !6819}
!6819 = !DILocation(line: 134, column: 57, scope: !6791)
!6820 = !DILocation(line: 135, column: 19, scope: !6791)
!6821 = !DILocation(line: 135, column: 34, scope: !6791)
!6822 = !DILocation(line: 135, column: 12, scope: !6791)
!6823 = !DILocation(line: 135, column: 5, scope: !6791)
!6824 = distinct !{!6824, !6823, !6825}
!6825 = !DILocation(line: 135, column: 50, scope: !6791)
!6826 = !DILocation(line: 130, column: 9, scope: !6791)
!6827 = !DILocation(line: 138, column: 24, scope: !6791)
!6828 = !DILocation(line: 139, column: 1, scope: !6791)
!6829 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1057, file: !1057, line: 148, type: !6792, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !6830)
!6830 = !{!6831, !6832}
!6831 = !DILocalVariable(name: "CS", arg: 1, scope: !6829, file: !1057, line: 148, type: !6794)
!6832 = !DILocalVariable(name: "val", scope: !6829, file: !1057, line: 150, type: !61)
!6833 = !DILocation(line: 0, scope: !6829)
!6834 = !DILocation(line: 153, column: 16, scope: !6829)
!6835 = !DILocation(line: 154, column: 9, scope: !6829)
!6836 = !DILocation(line: 155, column: 24, scope: !6829)
!6837 = !DILocation(line: 158, column: 5, scope: !6829)
!6838 = !DILocation(line: 158, column: 18, scope: !6829)
!6839 = !DILocation(line: 158, column: 32, scope: !6829)
!6840 = distinct !{!6840, !6837, !6841}
!6841 = !DILocation(line: 158, column: 49, scope: !6829)
!6842 = !DILocation(line: 163, column: 16, scope: !6829)
!6843 = !DILocation(line: 164, column: 9, scope: !6829)
!6844 = !DILocation(line: 165, column: 24, scope: !6829)
!6845 = !DILocation(line: 168, column: 5, scope: !6829)
!6846 = !DILocation(line: 168, column: 18, scope: !6829)
!6847 = !DILocation(line: 168, column: 32, scope: !6829)
!6848 = distinct !{!6848, !6845, !6849}
!6849 = !DILocation(line: 168, column: 46, scope: !6829)
!6850 = !DILocation(line: 174, column: 10, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6829, file: !1057, line: 174, column: 9)
!6852 = !DILocation(line: 174, column: 25, scope: !6851)
!6853 = !DILocation(line: 174, column: 9, scope: !6829)
!6854 = !DILocation(line: 175, column: 9, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !1057, line: 175, column: 9)
!6856 = distinct !DILexicalBlock(scope: !6857, file: !1057, line: 175, column: 9)
!6857 = distinct !DILexicalBlock(scope: !6851, file: !1057, line: 174, column: 36)
!6858 = !DILocation(line: 176, column: 5, scope: !6857)
!6859 = !DILocation(line: 179, column: 1, scope: !6829)
!6860 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1057, file: !1057, line: 186, type: !6861, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !6863)
!6861 = !DISubroutineType(types: !6862)
!6862 = !{!61, !6794}
!6863 = !{!6864, !6865, !6866}
!6864 = !DILocalVariable(name: "CS", arg: 1, scope: !6860, file: !1057, line: 186, type: !6794)
!6865 = !DILocalVariable(name: "val", scope: !6860, file: !1057, line: 188, type: !61)
!6866 = !DILocalVariable(name: "misc_ctl", scope: !6860, file: !1057, line: 189, type: !61)
!6867 = !DILocation(line: 0, scope: !6860)
!6868 = !DILocation(line: 204, column: 16, scope: !6860)
!6869 = !DILocation(line: 208, column: 12, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6860, file: !1057, line: 208, column: 9)
!6871 = !DILocation(line: 208, column: 9, scope: !6860)
!6872 = !DILocation(line: 212, column: 20, scope: !6860)
!6873 = !DILocation(line: 215, column: 1, scope: !6860)
!6874 = !DILocation(line: 215, column: 15, scope: !6860)
!6875 = !DILocation(line: 215, column: 29, scope: !6860)
!6876 = !DILocation(line: 215, column: 8, scope: !6860)
!6877 = distinct !{!6877, !6873, !6878}
!6878 = !DILocation(line: 215, column: 46, scope: !6860)
!6879 = !DILocation(line: 216, column: 22, scope: !6860)
!6880 = !DILocation(line: 216, column: 36, scope: !6860)
!6881 = !DILocation(line: 216, column: 9, scope: !6860)
!6882 = distinct !{!6882, !6881, !6883}
!6883 = !DILocation(line: 216, column: 47, scope: !6860)
!6884 = !DILocation(line: 218, column: 13, scope: !6860)
!6885 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1057, file: !1057, line: 227, type: !6792, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !6886)
!6886 = !{!6887}
!6887 = !DILocalVariable(name: "CS", arg: 1, scope: !6885, file: !1057, line: 227, type: !6794)
!6888 = !DILocation(line: 0, scope: !6885)
!6889 = !DILocation(line: 235, column: 5, scope: !6885)
!6890 = !DILocation(line: 236, column: 5, scope: !6885)
!6891 = !DILocation(line: 238, column: 1, scope: !6885)
!6892 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1057, file: !1057, line: 249, type: !6893, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !6895)
!6893 = !DISubroutineType(types: !6894)
!6894 = !{null, !6794, !859}
!6895 = !{!6896, !6897, !6898, !6899, !6900}
!6896 = !DILocalVariable(name: "CS", arg: 1, scope: !6892, file: !1057, line: 249, type: !6794)
!6897 = !DILocalVariable(name: "cmd", arg: 2, scope: !6892, file: !1057, line: 249, type: !859)
!6898 = !DILocalVariable(name: "cmdi", scope: !6892, file: !1057, line: 251, type: !61)
!6899 = !DILocalVariable(name: "cmdo", scope: !6892, file: !1057, line: 251, type: !61)
!6900 = !DILocalVariable(name: "len", scope: !6892, file: !1057, line: 252, type: !159)
!6901 = !DILocation(line: 0, scope: !6892)
!6902 = !DILocation(line: 254, column: 46, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6904, file: !1057, line: 254, column: 5)
!6904 = distinct !DILexicalBlock(scope: !6892, file: !1057, line: 254, column: 5)
!6905 = !DILocation(line: 254, column: 5, scope: !6904)
!6906 = !DILocation(line: 255, column: 22, scope: !6907)
!6907 = distinct !DILexicalBlock(scope: !6903, file: !1057, line: 254, column: 103)
!6908 = !DILocation(line: 255, column: 59, scope: !6907)
!6909 = !DILocation(line: 255, column: 51, scope: !6907)
!6910 = !DILocation(line: 254, column: 65, scope: !6903)
!6911 = !DILocation(line: 254, column: 97, scope: !6903)
!6912 = distinct !{!6912, !6905, !6913}
!6913 = !DILocation(line: 256, column: 5, scope: !6904)
!6914 = !DILocation(line: 258, column: 9, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6892, file: !1057, line: 258, column: 9)
!6916 = !DILocation(line: 262, column: 5, scope: !6892)
!6917 = !DILocation(line: 263, column: 33, scope: !6892)
!6918 = !DILocation(line: 264, column: 25, scope: !6892)
!6919 = !DILocation(line: 265, column: 24, scope: !6892)
!6920 = !DILocation(line: 266, column: 5, scope: !6892)
!6921 = !DILocation(line: 268, column: 5, scope: !6892)
!6922 = !DILocation(line: 269, column: 1, scope: !6892)
!6923 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1057, file: !1057, line: 281, type: !6924, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !6926)
!6924 = !DISubroutineType(types: !6925)
!6925 = !{null, !6794, !5450, !859, !859}
!6926 = !{!6927, !6928, !6929, !6930, !6931, !6932}
!6927 = !DILocalVariable(name: "CS", arg: 1, scope: !6923, file: !1057, line: 281, type: !6794)
!6928 = !DILocalVariable(name: "cmd", arg: 2, scope: !6923, file: !1057, line: 281, type: !5450)
!6929 = !DILocalVariable(name: "address", arg: 3, scope: !6923, file: !1057, line: 281, type: !859)
!6930 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !6923, file: !1057, line: 281, type: !859)
!6931 = !DILocalVariable(name: "cmd1", scope: !6923, file: !1057, line: 283, type: !61)
!6932 = !DILocalVariable(name: "cmd2", scope: !6923, file: !1057, line: 283, type: !61)
!6933 = !DILocation(line: 0, scope: !6923)
!6934 = !DILocation(line: 285, column: 12, scope: !6923)
!6935 = !DILocation(line: 287, column: 23, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6923, file: !1057, line: 287, column: 9)
!6937 = !DILocation(line: 287, column: 9, scope: !6923)
!6938 = !DILocation(line: 288, column: 22, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6936, file: !1057, line: 287, column: 31)
!6940 = !DILocation(line: 288, column: 55, scope: !6939)
!6941 = !DILocation(line: 288, column: 53, scope: !6939)
!6942 = !DILocation(line: 289, column: 5, scope: !6939)
!6943 = !DILocation(line: 290, column: 22, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6936, file: !1057, line: 289, column: 12)
!6945 = !DILocation(line: 290, column: 53, scope: !6944)
!6946 = !DILocation(line: 290, column: 51, scope: !6944)
!6947 = !DILocation(line: 291, column: 21, scope: !6944)
!6948 = !DILocation(line: 0, scope: !6936)
!6949 = !DILocation(line: 294, column: 33, scope: !6923)
!6950 = !DILocation(line: 295, column: 38, scope: !6923)
!6951 = !DILocation(line: 296, column: 41, scope: !6923)
!6952 = !DILocation(line: 296, column: 25, scope: !6923)
!6953 = !DILocation(line: 297, column: 24, scope: !6923)
!6954 = !DILocation(line: 299, column: 5, scope: !6923)
!6955 = !DILocation(line: 300, column: 5, scope: !6923)
!6956 = !DILocation(line: 302, column: 1, scope: !6923)
!6957 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1057, file: !1057, line: 312, type: !6958, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !6960)
!6958 = !DISubroutineType(types: !6959)
!6959 = !{!61, !859, !859}
!6960 = !{!6961, !6962}
!6961 = !DILocalVariable(name: "cmd", arg: 1, scope: !6957, file: !1057, line: 312, type: !859)
!6962 = !DILocalVariable(name: "address", arg: 2, scope: !6957, file: !1057, line: 312, type: !859)
!6963 = !DILocation(line: 0, scope: !6957)
!6964 = !DILocation(line: 314, column: 14, scope: !6957)
!6965 = !DILocation(line: 314, column: 44, scope: !6957)
!6966 = !DILocation(line: 314, column: 82, scope: !6957)
!6967 = !DILocation(line: 314, column: 75, scope: !6957)
!6968 = !DILocation(line: 314, column: 5, scope: !6957)
!6969 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1057, file: !1057, line: 332, type: !6970, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !6973)
!6970 = !DISubroutineType(types: !6971)
!6971 = !{!61, !859, !859, !6972, !1094}
!6972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 32)
!6973 = !{!6974, !6975, !6976, !6977, !6978, !6986, !6987, !6988}
!6974 = !DILocalVariable(name: "cmd", arg: 1, scope: !6969, file: !1057, line: 332, type: !859)
!6975 = !DILocalVariable(name: "address", arg: 2, scope: !6969, file: !1057, line: 332, type: !859)
!6976 = !DILocalVariable(name: "p_data", arg: 3, scope: !6969, file: !1057, line: 332, type: !6972)
!6977 = !DILocalVariable(name: "length", arg: 4, scope: !6969, file: !1057, line: 332, type: !1094)
!6978 = !DILocalVariable(name: "tmp", scope: !6969, file: !1057, line: 334, type: !6979)
!6979 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1250, line: 202, baseType: !6980)
!6980 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1250, line: 198, size: 32, elements: !6981)
!6981 = !{!6982, !6983, !6985}
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !6980, file: !1250, line: 199, baseType: !61, size: 32)
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !6980, file: !1250, line: 200, baseType: !6984, size: 32)
!6984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1126, size: 32, elements: !508)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !6980, file: !1250, line: 201, baseType: !505, size: 32)
!6986 = !DILocalVariable(name: "cmd1", scope: !6969, file: !1057, line: 335, type: !61)
!6987 = !DILocalVariable(name: "cmd2", scope: !6969, file: !1057, line: 335, type: !61)
!6988 = !DILocalVariable(name: "i", scope: !6969, file: !1057, line: 336, type: !61)
!6989 = !DILocation(line: 0, scope: !6969)
!6990 = !DILocation(line: 334, column: 5, scope: !6969)
!6991 = !DILocation(line: 334, column: 16, scope: !6969)
!6992 = !DILocation(line: 338, column: 12, scope: !6969)
!6993 = !DILocation(line: 340, column: 17, scope: !6969)
!6994 = !DILocation(line: 342, column: 17, scope: !6969)
!6995 = !DILocation(line: 342, column: 9, scope: !6969)
!6996 = !DILocation(line: 342, column: 15, scope: !6969)
!6997 = !DILocation(line: 344, column: 22, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6999, file: !1057, line: 343, column: 29)
!6999 = distinct !DILexicalBlock(scope: !7000, file: !1057, line: 343, column: 5)
!7000 = distinct !DILexicalBlock(scope: !6969, file: !1057, line: 343, column: 5)
!7001 = !DILocation(line: 343, column: 5, scope: !7000)
!7002 = !DILocation(line: 344, column: 21, scope: !6998)
!7003 = !DILocation(line: 344, column: 9, scope: !6998)
!7004 = !DILocation(line: 344, column: 19, scope: !6998)
!7005 = !DILocation(line: 345, column: 18, scope: !6998)
!7006 = !DILocation(line: 343, column: 25, scope: !6999)
!7007 = !DILocation(line: 343, column: 19, scope: !6999)
!7008 = distinct !{!7008, !7001, !7009}
!7009 = !DILocation(line: 346, column: 5, scope: !7000)
!7010 = !DILocation(line: 347, column: 16, scope: !6969)
!7011 = !DILocation(line: 348, column: 16, scope: !6969)
!7012 = !DILocation(line: 348, column: 15, scope: !6969)
!7013 = !DILocation(line: 339, column: 17, scope: !6969)
!7014 = !DILocation(line: 339, column: 52, scope: !6969)
!7015 = !DILocation(line: 339, column: 45, scope: !6969)
!7016 = !DILocation(line: 348, column: 13, scope: !6969)
!7017 = !DILocation(line: 349, column: 38, scope: !6969)
!7018 = !DILocation(line: 351, column: 1, scope: !6969)
!7019 = !DILocation(line: 350, column: 5, scope: !6969)
!7020 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1057, file: !1057, line: 367, type: !7021, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !7023)
!7021 = !DISubroutineType(types: !7022)
!7022 = !{null, !61, !88, !1032}
!7023 = !{!7024, !7025, !7026, !7027, !7028, !7029}
!7024 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !7020, file: !1057, line: 367, type: !61)
!7025 = !DILocalVariable(name: "buff", arg: 2, scope: !7020, file: !1057, line: 367, type: !88)
!7026 = !DILocalVariable(name: "length", arg: 3, scope: !7020, file: !1057, line: 367, type: !1032)
!7027 = !DILocalVariable(name: "i", scope: !7020, file: !1057, line: 369, type: !61)
!7028 = !DILocalVariable(name: "p_data", scope: !7020, file: !1057, line: 370, type: !849)
!7029 = !DILocalVariable(name: "tmp", scope: !7020, file: !1057, line: 371, type: !6979)
!7030 = !DILocation(line: 0, scope: !7020)
!7031 = !DILocation(line: 371, column: 5, scope: !7020)
!7032 = !DILocation(line: 371, column: 13, scope: !7020)
!7033 = !DILocation(line: 373, column: 18, scope: !7020)
!7034 = !DILocation(line: 376, column: 15, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7020, file: !1057, line: 376, column: 9)
!7036 = !DILocation(line: 376, column: 30, scope: !7035)
!7037 = !DILocation(line: 376, column: 11, scope: !7035)
!7038 = !DILocation(line: 376, column: 9, scope: !7020)
!7039 = !DILocation(line: 377, column: 23, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7041, file: !1057, line: 377, column: 9)
!7041 = distinct !DILexicalBlock(scope: !7042, file: !1057, line: 377, column: 9)
!7042 = distinct !DILexicalBlock(scope: !7035, file: !1057, line: 376, column: 41)
!7043 = !DILocation(line: 377, column: 9, scope: !7041)
!7044 = !DILocation(line: 378, column: 13, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7040, file: !1057, line: 377, column: 80)
!7046 = !DILocation(line: 377, column: 41, scope: !7040)
!7047 = !DILocation(line: 377, column: 54, scope: !7040)
!7048 = !DILocation(line: 377, column: 67, scope: !7040)
!7049 = distinct !{!7049, !7043, !7050}
!7050 = !DILocation(line: 379, column: 9, scope: !7041)
!7051 = !DILocation(line: 382, column: 37, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7035, file: !1057, line: 382, column: 14)
!7053 = !DILocation(line: 382, column: 16, scope: !7052)
!7054 = !DILocation(line: 0, scope: !7052)
!7055 = !DILocation(line: 382, column: 14, scope: !7035)
!7056 = !DILocation(line: 391, column: 9, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7058, file: !1057, line: 391, column: 9)
!7058 = distinct !DILexicalBlock(scope: !7052, file: !1057, line: 390, column: 13)
!7059 = !DILocation(line: 383, column: 9, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !1057, line: 383, column: 9)
!7061 = distinct !DILexicalBlock(scope: !7052, file: !1057, line: 382, column: 49)
!7062 = !DILocation(line: 384, column: 26, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !1057, line: 383, column: 80)
!7064 = distinct !DILexicalBlock(scope: !7060, file: !1057, line: 383, column: 9)
!7065 = !DILocation(line: 384, column: 24, scope: !7063)
!7066 = !DILocation(line: 385, column: 47, scope: !7063)
!7067 = !DILocation(line: 385, column: 26, scope: !7063)
!7068 = !DILocation(line: 385, column: 24, scope: !7063)
!7069 = !DILocation(line: 386, column: 13, scope: !7063)
!7070 = !DILocation(line: 383, column: 41, scope: !7064)
!7071 = !DILocation(line: 383, column: 54, scope: !7064)
!7072 = !DILocation(line: 383, column: 67, scope: !7064)
!7073 = !DILocation(line: 383, column: 23, scope: !7064)
!7074 = distinct !{!7074, !7059, !7075}
!7075 = !DILocation(line: 387, column: 9, scope: !7060)
!7076 = !DILocation(line: 392, column: 13, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !1057, line: 392, column: 13)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !1057, line: 391, column: 61)
!7079 = distinct !DILexicalBlock(scope: !7057, file: !1057, line: 391, column: 9)
!7080 = !DILocation(line: 393, column: 36, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7082, file: !1057, line: 392, column: 51)
!7082 = distinct !DILexicalBlock(scope: !7077, file: !1057, line: 392, column: 13)
!7083 = !DILocation(line: 393, column: 29, scope: !7081)
!7084 = !DILocation(line: 393, column: 17, scope: !7081)
!7085 = !DILocation(line: 393, column: 27, scope: !7081)
!7086 = !DILocation(line: 392, column: 47, scope: !7082)
!7087 = !DILocation(line: 392, column: 27, scope: !7082)
!7088 = !DILocation(line: 392, column: 31, scope: !7082)
!7089 = distinct !{!7089, !7076, !7090}
!7090 = !DILocation(line: 394, column: 13, scope: !7077)
!7091 = !DILocation(line: 395, column: 13, scope: !7078)
!7092 = !DILocation(line: 391, column: 41, scope: !7079)
!7093 = !DILocation(line: 391, column: 54, scope: !7079)
!7094 = !DILocation(line: 391, column: 23, scope: !7079)
!7095 = distinct !{!7095, !7056, !7096}
!7096 = !DILocation(line: 396, column: 9, scope: !7057)
!7097 = !DILocation(line: 398, column: 1, scope: !7020)
!7098 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1057, file: !1057, line: 414, type: !7099, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !7101)
!7099 = !DISubroutineType(types: !7100)
!7100 = !{null, !6794, !5449, !849, !6794, !6794}
!7101 = !{!7102, !7103, !7104, !7105, !7106, !7107, !7108, !7109, !7110, !7111}
!7102 = !DILocalVariable(name: "CS", arg: 1, scope: !7098, file: !1057, line: 414, type: !6794)
!7103 = !DILocalVariable(name: "cmd", arg: 2, scope: !7098, file: !1057, line: 414, type: !5449)
!7104 = !DILocalVariable(name: "data", arg: 3, scope: !7098, file: !1057, line: 414, type: !849)
!7105 = !DILocalVariable(name: "outl", arg: 4, scope: !7098, file: !1057, line: 414, type: !6794)
!7106 = !DILocalVariable(name: "inl", arg: 5, scope: !7098, file: !1057, line: 414, type: !6794)
!7107 = !DILocalVariable(name: "tmp", scope: !7098, file: !1057, line: 416, type: !61)
!7108 = !DILocalVariable(name: "i", scope: !7098, file: !1057, line: 417, type: !61)
!7109 = !DILocalVariable(name: "j", scope: !7098, file: !1057, line: 417, type: !61)
!7110 = !DILocalVariable(name: "p_data", scope: !7098, file: !1057, line: 418, type: !849)
!7111 = !DILocalVariable(name: "p_tmp", scope: !7098, file: !1057, line: 418, type: !849)
!7112 = !DILocation(line: 0, scope: !7098)
!7113 = !DILocation(line: 416, column: 5, scope: !7098)
!7114 = !DILocation(line: 422, column: 60, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7116, file: !1057, line: 422, column: 5)
!7116 = distinct !DILexicalBlock(scope: !7098, file: !1057, line: 422, column: 5)
!7117 = !DILocation(line: 422, column: 5, scope: !7116)
!7118 = !DILocation(line: 423, column: 25, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !1057, line: 423, column: 9)
!7120 = distinct !DILexicalBlock(scope: !7115, file: !1057, line: 422, column: 83)
!7121 = !DILocation(line: 423, column: 32, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7119, file: !1057, line: 423, column: 9)
!7123 = !DILocation(line: 423, column: 9, scope: !7119)
!7124 = !DILocation(line: 424, column: 24, scope: !7125)
!7125 = distinct !DILexicalBlock(scope: !7122, file: !1057, line: 423, column: 59)
!7126 = !DILocation(line: 424, column: 13, scope: !7125)
!7127 = !DILocation(line: 424, column: 22, scope: !7125)
!7128 = !DILocation(line: 423, column: 50, scope: !7122)
!7129 = !DILocation(line: 423, column: 55, scope: !7122)
!7130 = !DILocation(line: 423, column: 39, scope: !7122)
!7131 = distinct !{!7131, !7123, !7132}
!7132 = !DILocation(line: 425, column: 9, scope: !7119)
!7133 = !DILocation(line: 426, column: 9, scope: !7120)
!7134 = !DILocation(line: 0, scope: !7116)
!7135 = !DILocation(line: 422, column: 75, scope: !7115)
!7136 = distinct !{!7136, !7117, !7137}
!7137 = !DILocation(line: 427, column: 5, scope: !7116)
!7138 = !DILocation(line: 428, column: 25, scope: !7098)
!7139 = !DILocation(line: 429, column: 26, scope: !7098)
!7140 = !DILocation(line: 429, column: 24, scope: !7098)
!7141 = !DILocation(line: 430, column: 5, scope: !7098)
!7142 = !DILocation(line: 431, column: 5, scope: !7098)
!7143 = !DILocation(line: 433, column: 67, scope: !7144)
!7144 = distinct !DILexicalBlock(scope: !7145, file: !1057, line: 433, column: 5)
!7145 = distinct !DILexicalBlock(scope: !7098, file: !1057, line: 433, column: 5)
!7146 = !DILocation(line: 433, column: 5, scope: !7145)
!7147 = !DILocation(line: 433, column: 56, scope: !7145)
!7148 = !DILocation(line: 434, column: 17, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7144, file: !1057, line: 433, column: 100)
!7150 = !DILocation(line: 434, column: 15, scope: !7149)
!7151 = !DILocation(line: 433, column: 74, scope: !7144)
!7152 = !DILocation(line: 433, column: 79, scope: !7144)
!7153 = !DILocation(line: 433, column: 87, scope: !7144)
!7154 = distinct !{!7154, !7146, !7155}
!7155 = !DILocation(line: 435, column: 5, scope: !7145)
!7156 = !DILocation(line: 437, column: 1, scope: !7098)
!7157 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1057, file: !1057, line: 462, type: !7158, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !7160)
!7158 = !DISubroutineType(types: !7159)
!7159 = !{null, !6794, !5449}
!7160 = !{!7161, !7162, !7163, !7164, !7165}
!7161 = !DILocalVariable(name: "CS", arg: 1, scope: !7157, file: !1057, line: 462, type: !6794)
!7162 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !7157, file: !1057, line: 462, type: !5449)
!7163 = !DILocalVariable(name: "i", scope: !7157, file: !1057, line: 464, type: !61)
!7164 = !DILocalVariable(name: "val", scope: !7157, file: !1057, line: 465, type: !61)
!7165 = !DILocalVariable(name: "status", scope: !7166, file: !1057, line: 492, type: !159)
!7166 = distinct !DILexicalBlock(scope: !7167, file: !1057, line: 491, column: 47)
!7167 = distinct !DILexicalBlock(scope: !7168, file: !1057, line: 491, column: 13)
!7168 = distinct !DILexicalBlock(scope: !7157, file: !1057, line: 477, column: 17)
!7169 = !DILocation(line: 0, scope: !7157)
!7170 = !DILocation(line: 467, column: 17, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7157, file: !1057, line: 467, column: 9)
!7172 = !DILocation(line: 467, column: 9, scope: !7157)
!7173 = !DILocation(line: 474, column: 11, scope: !7157)
!7174 = !DILocation(line: 477, column: 5, scope: !7157)
!7175 = !DILocation(line: 478, column: 17, scope: !7168)
!7176 = !DILocation(line: 478, column: 9, scope: !7168)
!7177 = !DILocation(line: 481, column: 17, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7179, file: !1057, line: 481, column: 17)
!7179 = distinct !DILexicalBlock(scope: !7168, file: !1057, line: 478, column: 29)
!7180 = !DILocation(line: 481, column: 17, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7182, file: !1057, line: 481, column: 17)
!7182 = distinct !DILexicalBlock(scope: !7183, file: !1057, line: 481, column: 17)
!7183 = distinct !DILexicalBlock(scope: !7178, file: !1057, line: 481, column: 17)
!7184 = !DILocation(line: 481, column: 17, scope: !7182)
!7185 = !DILocation(line: 481, column: 17, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7187, file: !1057, line: 481, column: 17)
!7187 = distinct !DILexicalBlock(scope: !7183, file: !1057, line: 481, column: 17)
!7188 = !DILocation(line: 484, column: 17, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7179, file: !1057, line: 484, column: 17)
!7190 = !DILocation(line: 484, column: 17, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !1057, line: 484, column: 17)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !1057, line: 484, column: 17)
!7193 = distinct !DILexicalBlock(scope: !7189, file: !1057, line: 484, column: 17)
!7194 = !DILocation(line: 484, column: 17, scope: !7192)
!7195 = !DILocation(line: 484, column: 17, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7197, file: !1057, line: 484, column: 17)
!7197 = distinct !DILexicalBlock(scope: !7193, file: !1057, line: 484, column: 17)
!7198 = !DILocation(line: 0, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7200, file: !1057, line: 487, column: 17)
!7200 = distinct !DILexicalBlock(scope: !7179, file: !1057, line: 487, column: 17)
!7201 = !DILocation(line: 487, column: 17, scope: !7200)
!7202 = !DILocation(line: 487, column: 17, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7204, file: !1057, line: 487, column: 17)
!7204 = distinct !DILexicalBlock(scope: !7199, file: !1057, line: 487, column: 17)
!7205 = !DILocation(line: 487, column: 17, scope: !7204)
!7206 = !DILocation(line: 487, column: 17, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7208, file: !1057, line: 487, column: 17)
!7208 = distinct !DILexicalBlock(scope: !7199, file: !1057, line: 487, column: 17)
!7209 = !DILocation(line: 487, column: 17, scope: !7208)
!7210 = !DILocation(line: 491, column: 23, scope: !7167)
!7211 = !DILocation(line: 491, column: 13, scope: !7167)
!7212 = !DILocation(line: 491, column: 28, scope: !7167)
!7213 = !DILocation(line: 491, column: 13, scope: !7168)
!7214 = !DILocation(line: 492, column: 13, scope: !7166)
!7215 = !DILocation(line: 494, column: 13, scope: !7166)
!7216 = !DILocation(line: 0, scope: !7166)
!7217 = !DILocation(line: 495, column: 17, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7166, file: !1057, line: 494, column: 16)
!7219 = !DILocation(line: 496, column: 22, scope: !7166)
!7220 = !DILocation(line: 496, column: 31, scope: !7166)
!7221 = !DILocation(line: 496, column: 29, scope: !7166)
!7222 = !DILocation(line: 496, column: 13, scope: !7218)
!7223 = distinct !{!7223, !7215, !7224}
!7224 = !DILocation(line: 496, column: 45, scope: !7166)
!7225 = !DILocation(line: 497, column: 9, scope: !7167)
!7226 = !DILocation(line: 503, column: 25, scope: !7168)
!7227 = !DILocation(line: 497, column: 9, scope: !7166)
!7228 = !DILocation(line: 500, column: 70, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7167, file: !1057, line: 499, column: 14)
!7230 = !DILocation(line: 500, column: 60, scope: !7229)
!7231 = !DILocation(line: 500, column: 13, scope: !7229)
!7232 = !DILocation(line: 503, column: 15, scope: !7168)
!7233 = !DILocation(line: 503, column: 11, scope: !7168)
!7234 = distinct !{!7234, !7174, !7235}
!7235 = !DILocation(line: 504, column: 5, scope: !7157)
!7236 = !DILocation(line: 505, column: 1, scope: !7157)
!7237 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1057, file: !1057, line: 514, type: !7238, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !7240)
!7238 = !DISubroutineType(types: !7239)
!7239 = !{null, !6794, !849, !159}
!7240 = !{!7241, !7242, !7243}
!7241 = !DILocalVariable(name: "CS", arg: 1, scope: !7237, file: !1057, line: 514, type: !6794)
!7242 = !DILocalVariable(name: "id", arg: 2, scope: !7237, file: !1057, line: 514, type: !849)
!7243 = !DILocalVariable(name: "cmd", arg: 3, scope: !7237, file: !1057, line: 514, type: !159)
!7244 = !DILocation(line: 0, scope: !7237)
!7245 = !DILocation(line: 517, column: 5, scope: !7237)
!7246 = !DILocation(line: 518, column: 1, scope: !7237)
!7247 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1057, file: !1057, line: 521, type: !7248, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !7250)
!7248 = !DISubroutineType(types: !7249)
!7249 = !{null, !6794, !849}
!7250 = !{!7251, !7252}
!7251 = !DILocalVariable(name: "CS", arg: 1, scope: !7247, file: !1057, line: 521, type: !6794)
!7252 = !DILocalVariable(name: "id", arg: 2, scope: !7247, file: !1057, line: 521, type: !849)
!7253 = !DILocation(line: 0, scope: !7247)
!7254 = !DILocation(line: 523, column: 5, scope: !7247)
!7255 = !DILocation(line: 524, column: 1, scope: !7247)
!7256 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1057, file: !1057, line: 536, type: !7257, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !345)
!7257 = !DISubroutineType(types: !7258)
!7258 = !{!7259}
!7259 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1060, line: 57, baseType: !1059)
!7260 = !DILocation(line: 540, column: 5, scope: !7256)
!7261 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1057, file: !1057, line: 561, type: !7262, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !345)
!7262 = !DISubroutineType(types: !7263)
!7263 = !{!7264}
!7264 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1060, line: 66, baseType: !1067)
!7265 = !DILocation(line: 564, column: 15, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7261, file: !1057, line: 564, column: 9)
!7267 = !DILocation(line: 564, column: 31, scope: !7266)
!7268 = !DILocation(line: 564, column: 45, scope: !7266)
!7269 = !DILocation(line: 0, scope: !7266)
!7270 = !DILocation(line: 569, column: 1, scope: !7261)
!7271 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1057, file: !1057, line: 580, type: !7272, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !7274)
!7272 = !DISubroutineType(types: !7273)
!7273 = !{!91, !849}
!7274 = !{!7275, !7276}
!7275 = !DILocalVariable(name: "buffer", arg: 1, scope: !7271, file: !1057, line: 580, type: !849)
!7276 = !DILocalVariable(name: "i", scope: !7271, file: !1057, line: 582, type: !7)
!7277 = !DILocation(line: 0, scope: !7271)
!7278 = !DILocation(line: 583, column: 5, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7271, file: !1057, line: 583, column: 5)
!7280 = !DILocation(line: 584, column: 9, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !1057, line: 583, column: 29)
!7282 = distinct !DILexicalBlock(scope: !7279, file: !1057, line: 583, column: 5)
!7283 = !DILocation(line: 584, column: 19, scope: !7281)
!7284 = !DILocation(line: 583, column: 25, scope: !7282)
!7285 = !DILocation(line: 583, column: 19, scope: !7282)
!7286 = distinct !{!7286, !7278, !7287}
!7287 = !DILocation(line: 585, column: 5, scope: !7279)
!7288 = !DILocation(line: 586, column: 5, scope: !7271)
!7289 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1057, file: !1057, line: 613, type: !343, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !7290)
!7290 = !{!7291}
!7291 = !DILocalVariable(name: "D", scope: !7289, file: !1057, line: 615, type: !6665)
!7292 = !DILocation(line: 0, scope: !7289)
!7293 = !DILocation(line: 616, column: 32, scope: !7289)
!7294 = !DILocation(line: 616, column: 37, scope: !7289)
!7295 = !DILocation(line: 616, column: 27, scope: !7289)
!7296 = !DILocation(line: 617, column: 44, scope: !7289)
!7297 = !DILocation(line: 617, column: 31, scope: !7289)
!7298 = !DILocation(line: 617, column: 28, scope: !7289)
!7299 = !DILocation(line: 618, column: 32, scope: !7289)
!7300 = !DILocation(line: 618, column: 31, scope: !7289)
!7301 = !DILocation(line: 618, column: 29, scope: !7289)
!7302 = !DILocation(line: 621, column: 31, scope: !7289)
!7303 = !DILocation(line: 621, column: 24, scope: !7289)
!7304 = !DILocation(line: 622, column: 34, scope: !7289)
!7305 = !DILocation(line: 622, column: 27, scope: !7289)
!7306 = !DILocation(line: 623, column: 32, scope: !7289)
!7307 = !DILocation(line: 623, column: 25, scope: !7289)
!7308 = !DILocation(line: 624, column: 33, scope: !7289)
!7309 = !DILocation(line: 624, column: 26, scope: !7289)
!7310 = !DILocation(line: 625, column: 33, scope: !7289)
!7311 = !DILocation(line: 625, column: 26, scope: !7289)
!7312 = !DILocation(line: 629, column: 32, scope: !7289)
!7313 = !DILocation(line: 629, column: 47, scope: !7289)
!7314 = !DILocation(line: 629, column: 25, scope: !7289)
!7315 = !DILocation(line: 630, column: 32, scope: !7289)
!7316 = !DILocation(line: 630, column: 47, scope: !7289)
!7317 = !DILocation(line: 630, column: 25, scope: !7289)
!7318 = !DILocation(line: 633, column: 24, scope: !7289)
!7319 = !DILocation(line: 633, column: 31, scope: !7289)
!7320 = !DILocation(line: 633, column: 36, scope: !7289)
!7321 = !DILocation(line: 633, column: 28, scope: !7289)
!7322 = !DILocation(line: 633, column: 5, scope: !7289)
!7323 = !DILocation(line: 635, column: 5, scope: !7289)
!7324 = !DILocation(line: 636, column: 1, scope: !7289)
!7325 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1057, file: !1057, line: 641, type: !343, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !345)
!7326 = !DILocation(line: 644, column: 26, scope: !7325)
!7327 = !DILocation(line: 644, column: 24, scope: !7325)
!7328 = !DILocation(line: 645, column: 29, scope: !7325)
!7329 = !DILocation(line: 645, column: 27, scope: !7325)
!7330 = !DILocation(line: 646, column: 27, scope: !7325)
!7331 = !DILocation(line: 646, column: 25, scope: !7325)
!7332 = !DILocation(line: 647, column: 28, scope: !7325)
!7333 = !DILocation(line: 647, column: 26, scope: !7325)
!7334 = !DILocation(line: 648, column: 27, scope: !7325)
!7335 = !DILocation(line: 648, column: 25, scope: !7325)
!7336 = !DILocation(line: 652, column: 32, scope: !7325)
!7337 = !DILocation(line: 652, column: 47, scope: !7325)
!7338 = !DILocation(line: 652, column: 25, scope: !7325)
!7339 = !DILocation(line: 655, column: 24, scope: !7325)
!7340 = !DILocation(line: 655, column: 5, scope: !7325)
!7341 = !DILocation(line: 657, column: 5, scope: !7325)
!7342 = !DILocation(line: 660, column: 9, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7325, file: !1057, line: 660, column: 9)
!7344 = !DILocation(line: 660, column: 59, scope: !7343)
!7345 = !DILocation(line: 660, column: 38, scope: !7343)
!7346 = !DILocation(line: 660, column: 37, scope: !7343)
!7347 = !DILocation(line: 660, column: 33, scope: !7343)
!7348 = !DILocation(line: 660, column: 9, scope: !7325)
!7349 = !DILocation(line: 661, column: 9, scope: !7343)
!7350 = distinct !{!7350, !7349, !7351}
!7351 = !DILocation(line: 661, column: 18, scope: !7343)
!7352 = !DILocation(line: 662, column: 1, scope: !7325)
!7353 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1057, file: !1057, line: 668, type: !343, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !345)
!7354 = !DILocation(line: 671, column: 9, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7353, file: !1057, line: 671, column: 9)
!7356 = !DILocation(line: 671, column: 40, scope: !7355)
!7357 = !DILocation(line: 671, column: 9, scope: !7353)
!7358 = !DILocation(line: 672, column: 47, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7355, file: !1057, line: 671, column: 46)
!7360 = !DILocation(line: 672, column: 40, scope: !7359)
!7361 = !DILocation(line: 673, column: 5, scope: !7359)
!7362 = !DILocation(line: 674, column: 9, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7353, file: !1057, line: 674, column: 9)
!7364 = !DILocation(line: 674, column: 41, scope: !7363)
!7365 = !DILocation(line: 674, column: 9, scope: !7353)
!7366 = !DILocation(line: 675, column: 48, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7363, file: !1057, line: 674, column: 47)
!7368 = !DILocation(line: 675, column: 41, scope: !7367)
!7369 = !DILocation(line: 676, column: 5, scope: !7367)
!7370 = !DILocation(line: 679, column: 33, scope: !7353)
!7371 = !DILocation(line: 679, column: 48, scope: !7353)
!7372 = !DILocation(line: 679, column: 25, scope: !7353)
!7373 = !DILocation(line: 680, column: 25, scope: !7353)
!7374 = !DILocation(line: 686, column: 5, scope: !7353)
!7375 = !DILocation(line: 688, column: 1, scope: !7353)
!7376 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1057, file: !1057, line: 689, type: !343, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1056, retainedNodes: !345)
!7377 = !DILocation(line: 692, column: 9, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7376, file: !1057, line: 692, column: 9)
!7379 = !DILocation(line: 692, column: 40, scope: !7378)
!7380 = !DILocation(line: 692, column: 9, scope: !7376)
!7381 = !DILocation(line: 693, column: 29, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7378, file: !1057, line: 692, column: 46)
!7383 = !DILocation(line: 694, column: 5, scope: !7382)
!7384 = !DILocation(line: 695, column: 9, scope: !7385)
!7385 = distinct !DILexicalBlock(scope: !7376, file: !1057, line: 695, column: 9)
!7386 = !DILocation(line: 695, column: 41, scope: !7385)
!7387 = !DILocation(line: 695, column: 9, scope: !7376)
!7388 = !DILocation(line: 696, column: 29, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7385, file: !1057, line: 695, column: 47)
!7390 = !DILocation(line: 697, column: 5, scope: !7389)
!7391 = !DILocation(line: 698, column: 5, scope: !7376)
!7392 = !DILocation(line: 699, column: 1, scope: !7376)
!7393 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1156, file: !1156, line: 91, type: !3836, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7394)
!7394 = !{!7395}
!7395 = !DILocalVariable(name: "counter", scope: !7393, file: !1156, line: 102, type: !61)
!7396 = !DILocation(line: 0, scope: !7393)
!7397 = !DILocation(line: 110, column: 5, scope: !7393)
!7398 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1156, file: !1156, line: 114, type: !3836, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7399)
!7399 = !{!7400}
!7400 = !DILocalVariable(name: "counter", scope: !7398, file: !1156, line: 125, type: !61)
!7401 = !DILocation(line: 0, scope: !7398)
!7402 = !DILocation(line: 133, column: 5, scope: !7398)
!7403 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1156, file: !1156, line: 137, type: !6528, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7404)
!7404 = !{!7405}
!7405 = !DILocalVariable(name: "delay_us", arg: 1, scope: !7403, file: !1156, line: 137, type: !61)
!7406 = !DILocation(line: 0, scope: !7403)
!7407 = !DILocation(line: 142, column: 5, scope: !7403)
!7408 = !DILocation(line: 144, column: 1, scope: !7403)
!7409 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1156, file: !1156, line: 163, type: !3836, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7410)
!7410 = !{!7411}
!7411 = !DILocalVariable(name: "mask", scope: !7409, file: !1156, line: 165, type: !61)
!7412 = !DILocation(line: 166, column: 12, scope: !7409)
!7413 = !DILocation(line: 0, scope: !7409)
!7414 = !DILocation(line: 167, column: 5, scope: !7409)
!7415 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1156, file: !1156, line: 171, type: !6528, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7416)
!7416 = !{!7417}
!7417 = !DILocalVariable(name: "mask", arg: 1, scope: !7415, file: !1156, line: 171, type: !61)
!7418 = !DILocation(line: 0, scope: !7415)
!7419 = !DILocation(line: 173, column: 5, scope: !7415)
!7420 = !DILocation(line: 174, column: 1, scope: !7415)
!7421 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1156, file: !1156, line: 199, type: !1428, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7422)
!7422 = !{!7423}
!7423 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7421, file: !1156, line: 199, type: !88)
!7424 = !DILocation(line: 0, scope: !7421)
!7425 = !DILocation(line: 201, column: 5, scope: !7421)
!7426 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1156, file: !1156, line: 388, type: !7427, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !345)
!7427 = !DISubroutineType(types: !7428)
!7428 = !{!1032}
!7429 = !DILocation(line: 390, column: 5, scope: !7426)
!7430 = distinct !DISubprogram(name: "CompareData", scope: !1156, file: !1156, line: 872, type: !7431, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7433)
!7431 = !DISubroutineType(types: !7432)
!7432 = !{!91, !88, !88, !61}
!7433 = !{!7434, !7435, !7436, !7437, !7438, !7441, !7442, !7445, !7446, !7448}
!7434 = !DILocalVariable(name: "Address", arg: 1, scope: !7430, file: !1156, line: 872, type: !88)
!7435 = !DILocalVariable(name: "Data", arg: 2, scope: !7430, file: !1156, line: 872, type: !88)
!7436 = !DILocalVariable(name: "Length", arg: 3, scope: !7430, file: !1156, line: 872, type: !61)
!7437 = !DILocalVariable(name: "i", scope: !7430, file: !1156, line: 874, type: !61)
!7438 = !DILocalVariable(name: "Source", scope: !7439, file: !1156, line: 877, type: !1094)
!7439 = distinct !DILexicalBlock(scope: !7440, file: !1156, line: 876, column: 74)
!7440 = distinct !DILexicalBlock(scope: !7430, file: !1156, line: 876, column: 9)
!7441 = !DILocalVariable(name: "Dest", scope: !7439, file: !1156, line: 878, type: !1094)
!7442 = !DILocalVariable(name: "Source", scope: !7443, file: !1156, line: 885, type: !1125)
!7443 = distinct !DILexicalBlock(scope: !7444, file: !1156, line: 884, column: 79)
!7444 = distinct !DILexicalBlock(scope: !7440, file: !1156, line: 884, column: 16)
!7445 = !DILocalVariable(name: "Dest", scope: !7443, file: !1156, line: 886, type: !1125)
!7446 = !DILocalVariable(name: "Source", scope: !7447, file: !1156, line: 893, type: !849)
!7447 = distinct !DILexicalBlock(scope: !7444, file: !1156, line: 892, column: 12)
!7448 = !DILocalVariable(name: "Dest", scope: !7447, file: !1156, line: 894, type: !849)
!7449 = !DILocation(line: 0, scope: !7430)
!7450 = !DILocation(line: 876, column: 11, scope: !7440)
!7451 = !DILocation(line: 876, column: 42, scope: !7440)
!7452 = !DILocation(line: 877, column: 28, scope: !7439)
!7453 = !DILocation(line: 0, scope: !7439)
!7454 = !DILocation(line: 878, column: 26, scope: !7439)
!7455 = !DILocation(line: 879, column: 23, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7457, file: !1156, line: 879, column: 9)
!7457 = distinct !DILexicalBlock(scope: !7439, file: !1156, line: 879, column: 9)
!7458 = !DILocation(line: 879, column: 9, scope: !7457)
!7459 = !DILocation(line: 880, column: 17, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7461, file: !1156, line: 880, column: 17)
!7461 = distinct !DILexicalBlock(scope: !7456, file: !1156, line: 879, column: 68)
!7462 = !DILocation(line: 880, column: 30, scope: !7460)
!7463 = !DILocation(line: 880, column: 27, scope: !7460)
!7464 = !DILocation(line: 879, column: 64, scope: !7456)
!7465 = !DILocation(line: 880, column: 17, scope: !7461)
!7466 = distinct !{!7466, !7458, !7467}
!7467 = !DILocation(line: 883, column: 9, scope: !7457)
!7468 = !DILocation(line: 884, column: 47, scope: !7444)
!7469 = !DILocation(line: 895, column: 23, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7471, file: !1156, line: 895, column: 9)
!7471 = distinct !DILexicalBlock(scope: !7447, file: !1156, line: 895, column: 9)
!7472 = !DILocation(line: 895, column: 9, scope: !7471)
!7473 = !DILocation(line: 885, column: 28, scope: !7443)
!7474 = !DILocation(line: 0, scope: !7443)
!7475 = !DILocation(line: 886, column: 26, scope: !7443)
!7476 = !DILocation(line: 887, column: 23, scope: !7477)
!7477 = distinct !DILexicalBlock(scope: !7478, file: !1156, line: 887, column: 9)
!7478 = distinct !DILexicalBlock(scope: !7443, file: !1156, line: 887, column: 9)
!7479 = !DILocation(line: 887, column: 9, scope: !7478)
!7480 = !DILocation(line: 888, column: 17, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7482, file: !1156, line: 888, column: 17)
!7482 = distinct !DILexicalBlock(scope: !7477, file: !1156, line: 887, column: 68)
!7483 = !DILocation(line: 888, column: 30, scope: !7481)
!7484 = !DILocation(line: 888, column: 27, scope: !7481)
!7485 = !DILocation(line: 887, column: 64, scope: !7477)
!7486 = !DILocation(line: 888, column: 17, scope: !7482)
!7487 = distinct !{!7487, !7479, !7488}
!7488 = !DILocation(line: 891, column: 9, scope: !7478)
!7489 = !DILocation(line: 896, column: 17, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7491, file: !1156, line: 896, column: 17)
!7491 = distinct !DILexicalBlock(scope: !7470, file: !1156, line: 895, column: 38)
!7492 = !DILocation(line: 896, column: 30, scope: !7490)
!7493 = !DILocation(line: 896, column: 27, scope: !7490)
!7494 = !DILocation(line: 895, column: 34, scope: !7470)
!7495 = !DILocation(line: 896, column: 17, scope: !7491)
!7496 = distinct !{!7496, !7472, !7497}
!7497 = !DILocation(line: 899, column: 9, scope: !7471)
!7498 = !DILocation(line: 902, column: 1, scope: !7430)
!7499 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1156, file: !1156, line: 919, type: !7500, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7502)
!7500 = !DISubroutineType(types: !7501)
!7501 = !{null, !88, !88, !61}
!7502 = !{!7503, !7504, !7505, !7506, !7507, !7508, !7509, !7510, !7511, !7512, !7513}
!7503 = !DILocalVariable(name: "Target", arg: 1, scope: !7499, file: !1156, line: 919, type: !88)
!7504 = !DILocalVariable(name: "Data", arg: 2, scope: !7499, file: !1156, line: 919, type: !88)
!7505 = !DILocalVariable(name: "Size", arg: 3, scope: !7499, file: !1156, line: 919, type: !61)
!7506 = !DILocalVariable(name: "D", scope: !7499, file: !1156, line: 921, type: !1326)
!7507 = !DILocalVariable(name: "address", scope: !7499, file: !1156, line: 922, type: !61)
!7508 = !DILocalVariable(name: "p_data", scope: !7499, file: !1156, line: 923, type: !849)
!7509 = !DILocalVariable(name: "cmd1", scope: !7499, file: !1156, line: 924, type: !61)
!7510 = !DILocalVariable(name: "length", scope: !7499, file: !1156, line: 924, type: !61)
!7511 = !DILocalVariable(name: "written", scope: !7499, file: !1156, line: 924, type: !61)
!7512 = !DILocalVariable(name: "status", scope: !7499, file: !1156, line: 925, type: !1378)
!7513 = !DILocalVariable(name: "savedMask", scope: !7499, file: !1156, line: 926, type: !61)
!7514 = !DILocation(line: 0, scope: !7499)
!7515 = !DILocation(line: 921, column: 60, scope: !7499)
!7516 = !DILocation(line: 923, column: 5, scope: !7499)
!7517 = !DILocation(line: 923, column: 19, scope: !7499)
!7518 = !DILocation(line: 924, column: 5, scope: !7499)
!7519 = !DILocation(line: 932, column: 9, scope: !7499)
!7520 = !DILocation(line: 933, column: 8, scope: !7499)
!7521 = !DILocation(line: 933, column: 21, scope: !7499)
!7522 = !DILocation(line: 935, column: 14, scope: !7499)
!7523 = !DILocation(line: 935, column: 5, scope: !7499)
!7524 = !DILocation(line: 922, column: 29, scope: !7499)
!7525 = !DILocation(line: 937, column: 18, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7499, file: !1156, line: 935, column: 23)
!7527 = !DILocation(line: 937, column: 35, scope: !7526)
!7528 = !DILocation(line: 937, column: 74, scope: !7526)
!7529 = !DILocation(line: 937, column: 50, scope: !7526)
!7530 = !DILocation(line: 937, column: 39, scope: !7526)
!7531 = !DILocation(line: 940, column: 35, scope: !7526)
!7532 = !DILocation(line: 940, column: 29, scope: !7526)
!7533 = !DILocation(line: 940, column: 16, scope: !7526)
!7534 = !DILocation(line: 942, column: 18, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7526, file: !1156, line: 942, column: 13)
!7536 = !DILocation(line: 942, column: 29, scope: !7535)
!7537 = !DILocation(line: 942, column: 13, scope: !7526)
!7538 = !DILocation(line: 943, column: 13, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7535, file: !1156, line: 942, column: 55)
!7540 = !DILocation(line: 944, column: 9, scope: !7539)
!7541 = !DILocation(line: 947, column: 16, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7526, file: !1156, line: 947, column: 13)
!7543 = !DILocation(line: 947, column: 29, scope: !7542)
!7544 = !DILocation(line: 0, scope: !7542)
!7545 = !DILocation(line: 947, column: 13, scope: !7526)
!7546 = !DILocation(line: 948, column: 20, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7542, file: !1156, line: 947, column: 35)
!7548 = !DILocation(line: 949, column: 32, scope: !7547)
!7549 = !DILocation(line: 949, column: 40, scope: !7547)
!7550 = !DILocation(line: 949, column: 13, scope: !7547)
!7551 = !DILocation(line: 950, column: 9, scope: !7547)
!7552 = !DILocation(line: 953, column: 20, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7542, file: !1156, line: 952, column: 9)
!7554 = !DILocation(line: 954, column: 32, scope: !7553)
!7555 = !DILocation(line: 954, column: 40, scope: !7553)
!7556 = !DILocation(line: 954, column: 13, scope: !7553)
!7557 = !DILocation(line: 957, column: 21, scope: !7526)
!7558 = !DILocation(line: 963, column: 45, scope: !7526)
!7559 = !DILocation(line: 963, column: 42, scope: !7526)
!7560 = !DILocation(line: 963, column: 40, scope: !7526)
!7561 = !DILocation(line: 963, column: 58, scope: !7526)
!7562 = !DILocation(line: 963, column: 29, scope: !7526)
!7563 = !DILocation(line: 964, column: 28, scope: !7526)
!7564 = !DILocation(line: 965, column: 37, scope: !7526)
!7565 = !DILocation(line: 966, column: 9, scope: !7526)
!7566 = !DILocation(line: 967, column: 26, scope: !7526)
!7567 = !DILocation(line: 967, column: 9, scope: !7526)
!7568 = !DILocation(line: 968, column: 29, scope: !7526)
!7569 = !DILocation(line: 968, column: 9, scope: !7526)
!7570 = !DILocation(line: 972, column: 9, scope: !7526)
!7571 = !DILocation(line: 978, column: 9, scope: !7526)
!7572 = !DILocation(line: 979, column: 50, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7526, file: !1156, line: 978, column: 22)
!7574 = !DILocation(line: 979, column: 55, scope: !7573)
!7575 = !DILocation(line: 979, column: 22, scope: !7573)
!7576 = !DILocation(line: 980, column: 35, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7573, file: !1156, line: 980, column: 17)
!7578 = !DILocation(line: 980, column: 32, scope: !7577)
!7579 = !DILocation(line: 980, column: 30, scope: !7577)
!7580 = !DILocation(line: 980, column: 19, scope: !7577)
!7581 = !DILocation(line: 980, column: 17, scope: !7573)
!7582 = distinct !{!7582, !7571, !7583}
!7583 = !DILocation(line: 983, column: 9, scope: !7526)
!7584 = !DILocation(line: 991, column: 9, scope: !7526)
!7585 = !DILocation(line: 993, column: 19, scope: !7526)
!7586 = !DILocation(line: 993, column: 16, scope: !7526)
!7587 = !DILocation(line: 994, column: 14, scope: !7526)
!7588 = !DILocation(line: 995, column: 17, scope: !7526)
!7589 = distinct !{!7589, !7523, !7590}
!7590 = !DILocation(line: 996, column: 5, scope: !7499)
!7591 = !DILocation(line: 998, column: 21, scope: !7499)
!7592 = !DILocation(line: 1005, column: 9, scope: !7499)
!7593 = !DILocation(line: 1008, column: 1, scope: !7499)
!7594 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1156, file: !1156, line: 1427, type: !7595, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7597)
!7595 = !DISubroutineType(types: !7596)
!7596 = !{null, !1326}
!7597 = !{!7598, !7599}
!7598 = !DILocalVariable(name: "D", arg: 1, scope: !7594, file: !1156, line: 1427, type: !1326)
!7599 = !DILocalVariable(name: "Result", scope: !7594, file: !1156, line: 1429, type: !1992)
!7600 = !DILocation(line: 0, scope: !7594)
!7601 = !DILocation(line: 1430, column: 5, scope: !7594)
!7602 = !DILocation(line: 1431, column: 18, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7594, file: !1156, line: 1430, column: 8)
!7604 = !DILocation(line: 1432, column: 21, scope: !7594)
!7605 = !DILocation(line: 1432, column: 5, scope: !7603)
!7606 = distinct !{!7606, !7601, !7607}
!7607 = !DILocation(line: 1432, column: 43, scope: !7594)
!7608 = !DILocation(line: 1433, column: 1, scope: !7594)
!7609 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1156, file: !1156, line: 3478, type: !7595, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7610)
!7610 = !{!7611}
!7611 = !DILocalVariable(name: "D", arg: 1, scope: !7609, file: !1156, line: 3478, type: !1326)
!7612 = !DILocation(line: 0, scope: !7609)
!7613 = !DILocation(line: 3480, column: 30, scope: !7609)
!7614 = !DILocation(line: 3480, column: 35, scope: !7609)
!7615 = !DILocation(line: 3480, column: 27, scope: !7609)
!7616 = !DILocation(line: 3480, column: 5, scope: !7609)
!7617 = !DILocation(line: 3481, column: 1, scope: !7609)
!7618 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1156, file: !1156, line: 2382, type: !343, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7619)
!7619 = !{!7620}
!7620 = !DILocalVariable(name: "savedMask", scope: !7618, file: !1156, line: 2384, type: !61)
!7621 = !DILocation(line: 2385, column: 17, scope: !7618)
!7622 = !DILocation(line: 0, scope: !7618)
!7623 = !DILocation(line: 2390, column: 20, scope: !7618)
!7624 = !DILocation(line: 2391, column: 5, scope: !7618)
!7625 = !DILocation(line: 2392, column: 1, scope: !7618)
!7626 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1156, file: !1156, line: 3536, type: !7627, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7629)
!7627 = !DISubroutineType(types: !7628)
!7628 = !{!61, !1326, !159}
!7629 = !{!7630, !7631, !7632, !7633}
!7630 = !DILocalVariable(name: "D", arg: 1, scope: !7626, file: !1156, line: 3536, type: !1326)
!7631 = !DILocalVariable(name: "cmd", arg: 2, scope: !7626, file: !1156, line: 3536, type: !159)
!7632 = !DILocalVariable(name: "savedMask", scope: !7626, file: !1156, line: 3538, type: !61)
!7633 = !DILocalVariable(name: "result", scope: !7626, file: !1156, line: 3539, type: !61)
!7634 = !DILocation(line: 0, scope: !7626)
!7635 = !DILocation(line: 3541, column: 17, scope: !7626)
!7636 = !DILocation(line: 3542, column: 22, scope: !7626)
!7637 = !DILocation(line: 3542, column: 5, scope: !7626)
!7638 = !DILocation(line: 3543, column: 35, scope: !7626)
!7639 = !DILocation(line: 3543, column: 33, scope: !7626)
!7640 = !DILocation(line: 3544, column: 25, scope: !7626)
!7641 = !DILocation(line: 3545, column: 24, scope: !7626)
!7642 = !DILocation(line: 3546, column: 25, scope: !7626)
!7643 = !DILocation(line: 3546, column: 5, scope: !7626)
!7644 = !DILocation(line: 3547, column: 42, scope: !7626)
!7645 = !DILocation(line: 3547, column: 60, scope: !7626)
!7646 = !DILocation(line: 3547, column: 14, scope: !7626)
!7647 = !DILocation(line: 3548, column: 5, scope: !7626)
!7648 = !DILocation(line: 3550, column: 5, scope: !7626)
!7649 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1156, file: !1156, line: 2393, type: !343, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7650)
!7650 = !{!7651}
!7651 = !DILocalVariable(name: "savedMask", scope: !7649, file: !1156, line: 2395, type: !61)
!7652 = !DILocation(line: 2396, column: 17, scope: !7649)
!7653 = !DILocation(line: 0, scope: !7649)
!7654 = !DILocation(line: 2401, column: 20, scope: !7649)
!7655 = !DILocation(line: 2402, column: 5, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7657, file: !1156, line: 2402, column: 5)
!7657 = distinct !DILexicalBlock(scope: !7649, file: !1156, line: 2402, column: 5)
!7658 = !DILocation(line: 2403, column: 5, scope: !7649)
!7659 = !DILocation(line: 2404, column: 1, scope: !7649)
!7660 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1156, file: !1156, line: 1440, type: !7595, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7661)
!7661 = !{!7662, !7663}
!7662 = !DILocalVariable(name: "D", arg: 1, scope: !7660, file: !1156, line: 1440, type: !1326)
!7663 = !DILocalVariable(name: "savedMask", scope: !7660, file: !1156, line: 1442, type: !1032)
!7664 = !DILocation(line: 0, scope: !7660)
!7665 = !DILocation(line: 1443, column: 17, scope: !7660)
!7666 = !DILocation(line: 1444, column: 9, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7660, file: !1156, line: 1444, column: 9)
!7668 = !DILocation(line: 1444, column: 9, scope: !7660)
!7669 = !DILocation(line: 1445, column: 17, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7667, file: !1156, line: 1444, column: 24)
!7671 = !DILocation(line: 1446, column: 9, scope: !7670)
!7672 = !DILocation(line: 1451, column: 1, scope: !7660)
!7673 = !DILocation(line: 1448, column: 9, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7667, file: !1156, line: 1447, column: 12)
!7675 = !DILocation(line: 1449, column: 9, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7677, file: !1156, line: 1449, column: 9)
!7677 = distinct !DILexicalBlock(scope: !7678, file: !1156, line: 1449, column: 9)
!7678 = distinct !DILexicalBlock(scope: !7674, file: !1156, line: 1449, column: 9)
!7679 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1156, file: !1156, line: 1027, type: !343, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7680)
!7680 = !{!7681, !7682, !7683, !7684}
!7681 = !DILocalVariable(name: "D", scope: !7679, file: !1156, line: 1029, type: !1326)
!7682 = !DILocalVariable(name: "status", scope: !7679, file: !1156, line: 1030, type: !1378)
!7683 = !DILocalVariable(name: "savedMask", scope: !7679, file: !1156, line: 1031, type: !61)
!7684 = !DILocalVariable(name: "duration", scope: !7685, file: !1156, line: 1231, type: !61)
!7685 = distinct !DILexicalBlock(scope: !7679, file: !1156, line: 1230, column: 5)
!7686 = !DILocation(line: 0, scope: !7679)
!7687 = !DILocation(line: 1033, column: 17, scope: !7679)
!7688 = !DILocation(line: 1034, column: 8, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7679, file: !1156, line: 1034, column: 8)
!7690 = !DILocation(line: 1034, column: 30, scope: !7689)
!7691 = !DILocation(line: 1034, column: 8, scope: !7679)
!7692 = !DILocation(line: 1039, column: 27, scope: !7679)
!7693 = !DILocation(line: 1058, column: 48, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7679, file: !1156, line: 1055, column: 5)
!7695 = !DILocation(line: 1069, column: 5, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7697, file: !1156, line: 1069, column: 5)
!7697 = distinct !DILexicalBlock(scope: !7679, file: !1156, line: 1069, column: 5)
!7698 = !DILocation(line: 1069, column: 5, scope: !7697)
!7699 = !DILocation(line: 1069, column: 5, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7696, file: !1156, line: 1069, column: 5)
!7701 = !DILocation(line: 1075, column: 10, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7679, file: !1156, line: 1075, column: 9)
!7703 = !DILocation(line: 1075, column: 27, scope: !7702)
!7704 = !DILocation(line: 1075, column: 33, scope: !7702)
!7705 = !DILocation(line: 1075, column: 40, scope: !7702)
!7706 = !DILocation(line: 1075, column: 53, scope: !7702)
!7707 = !DILocation(line: 1075, column: 9, scope: !7679)
!7708 = !DILocation(line: 1084, column: 9, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7702, file: !1156, line: 1083, column: 11)
!7710 = !DILocation(line: 1085, column: 50, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7709, file: !1156, line: 1084, column: 21)
!7712 = !DILocation(line: 1085, column: 55, scope: !7711)
!7713 = !DILocation(line: 1085, column: 22, scope: !7711)
!7714 = !DILocation(line: 1086, column: 35, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7711, file: !1156, line: 1086, column: 17)
!7716 = !DILocation(line: 1086, column: 32, scope: !7715)
!7717 = !DILocation(line: 1086, column: 30, scope: !7715)
!7718 = !DILocation(line: 1086, column: 19, scope: !7715)
!7719 = !DILocation(line: 1086, column: 17, scope: !7711)
!7720 = distinct !{!7720, !7708, !7721}
!7721 = !DILocation(line: 1089, column: 9, scope: !7709)
!7722 = !DILocation(line: 1107, column: 11, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7679, file: !1156, line: 1107, column: 9)
!7724 = !DILocation(line: 1107, column: 30, scope: !7723)
!7725 = !DILocation(line: 1117, column: 46, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7723, file: !1156, line: 1107, column: 53)
!7727 = !DILocation(line: 1117, column: 51, scope: !7726)
!7728 = !DILocation(line: 1117, column: 18, scope: !7726)
!7729 = !DILocation(line: 1120, column: 31, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7726, file: !1156, line: 1120, column: 13)
!7731 = !DILocation(line: 1120, column: 28, scope: !7730)
!7732 = !DILocation(line: 1120, column: 26, scope: !7730)
!7733 = !DILocation(line: 1120, column: 15, scope: !7730)
!7734 = !DILocation(line: 1120, column: 13, scope: !7726)
!7735 = !DILocation(line: 1128, column: 13, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7730, file: !1156, line: 1120, column: 55)
!7737 = !DILocation(line: 1131, column: 13, scope: !7736)
!7738 = !DILocation(line: 1132, column: 54, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7736, file: !1156, line: 1131, column: 23)
!7740 = !DILocation(line: 1132, column: 59, scope: !7739)
!7741 = !DILocation(line: 1132, column: 26, scope: !7739)
!7742 = !DILocation(line: 1133, column: 39, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7739, file: !1156, line: 1133, column: 21)
!7744 = !DILocation(line: 1133, column: 36, scope: !7743)
!7745 = !DILocation(line: 1133, column: 34, scope: !7743)
!7746 = !DILocation(line: 1133, column: 23, scope: !7743)
!7747 = !DILocation(line: 1133, column: 21, scope: !7739)
!7748 = distinct !{!7748, !7737, !7749}
!7749 = !DILocation(line: 1158, column: 13, scope: !7736)
!7750 = !DILocation(line: 1162, column: 21, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7736, file: !1156, line: 1162, column: 17)
!7752 = !DILocation(line: 1162, column: 32, scope: !7751)
!7753 = !DILocation(line: 1162, column: 51, scope: !7751)
!7754 = !DILocation(line: 1162, column: 58, scope: !7751)
!7755 = !DILocation(line: 1162, column: 71, scope: !7751)
!7756 = !DILocation(line: 1162, column: 17, scope: !7736)
!7757 = !DILocation(line: 1164, column: 45, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7751, file: !1156, line: 1162, column: 91)
!7759 = !DILocation(line: 1165, column: 36, scope: !7758)
!7760 = !DILocation(line: 1166, column: 37, scope: !7758)
!7761 = !DILocation(line: 1167, column: 34, scope: !7758)
!7762 = !DILocation(line: 1167, column: 17, scope: !7758)
!7763 = !DILocation(line: 1168, column: 37, scope: !7758)
!7764 = !DILocation(line: 1168, column: 17, scope: !7758)
!7765 = !DILocation(line: 1171, column: 50, scope: !7758)
!7766 = !DILocation(line: 1172, column: 37, scope: !7758)
!7767 = !DILocation(line: 1173, column: 45, scope: !7758)
!7768 = !DILocation(line: 1174, column: 34, scope: !7758)
!7769 = !DILocation(line: 1174, column: 17, scope: !7758)
!7770 = !DILocation(line: 1175, column: 37, scope: !7758)
!7771 = !DILocation(line: 1175, column: 17, scope: !7758)
!7772 = !DILocation(line: 1178, column: 17, scope: !7758)
!7773 = !DILocation(line: 1179, column: 49, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7758, file: !1156, line: 1178, column: 20)
!7775 = !DILocation(line: 1180, column: 40, scope: !7774)
!7776 = !DILocation(line: 1181, column: 41, scope: !7774)
!7777 = !DILocation(line: 1182, column: 38, scope: !7774)
!7778 = !DILocation(line: 1182, column: 21, scope: !7774)
!7779 = !DILocation(line: 1183, column: 41, scope: !7774)
!7780 = !DILocation(line: 1183, column: 21, scope: !7774)
!7781 = !DILocation(line: 1184, column: 43, scope: !7774)
!7782 = !DILocation(line: 1185, column: 17, scope: !7774)
!7783 = distinct !{!7783, !7772, !7784}
!7784 = !DILocation(line: 1185, column: 32, scope: !7758)
!7785 = !DILocation(line: 1194, column: 13, scope: !7736)
!7786 = !DILocation(line: 1195, column: 9, scope: !7736)
!7787 = !DILocation(line: 1197, column: 21, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7789, file: !1156, line: 1197, column: 17)
!7789 = distinct !DILexicalBlock(scope: !7730, file: !1156, line: 1195, column: 16)
!7790 = !DILocation(line: 1197, column: 32, scope: !7788)
!7791 = !DILocation(line: 1197, column: 53, scope: !7788)
!7792 = !DILocation(line: 1197, column: 60, scope: !7788)
!7793 = !DILocation(line: 1197, column: 76, scope: !7788)
!7794 = !DILocation(line: 1197, column: 17, scope: !7789)
!7795 = !DILocation(line: 1198, column: 54, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7788, file: !1156, line: 1197, column: 98)
!7797 = !DILocation(line: 1198, column: 59, scope: !7796)
!7798 = !DILocation(line: 1198, column: 26, scope: !7796)
!7799 = !DILocation(line: 1199, column: 40, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7796, file: !1156, line: 1199, column: 21)
!7801 = !DILocation(line: 1199, column: 37, scope: !7800)
!7802 = !DILocation(line: 1199, column: 35, scope: !7800)
!7803 = !DILocation(line: 1199, column: 24, scope: !7800)
!7804 = !DILocation(line: 1199, column: 63, scope: !7800)
!7805 = !DILocation(line: 1200, column: 41, scope: !7800)
!7806 = !DILocation(line: 1200, column: 39, scope: !7800)
!7807 = !DILocation(line: 1200, column: 28, scope: !7800)
!7808 = !DILocation(line: 1199, column: 21, scope: !7796)
!7809 = !DILocation(line: 1201, column: 40, scope: !7810)
!7810 = distinct !DILexicalBlock(scope: !7800, file: !1156, line: 1200, column: 68)
!7811 = !DILocation(line: 1201, column: 21, scope: !7810)
!7812 = !DILocation(line: 1202, column: 40, scope: !7810)
!7813 = !DILocation(line: 1202, column: 21, scope: !7810)
!7814 = !DILocation(line: 1203, column: 17, scope: !7810)
!7815 = !DILocation(line: 1206, column: 13, scope: !7789)
!7816 = !DILocation(line: 1228, column: 25, scope: !7679)
!7817 = !DILocation(line: 1231, column: 29, scope: !7685)
!7818 = !DILocation(line: 0, scope: !7685)
!7819 = !DILocation(line: 1232, column: 13, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7685, file: !1156, line: 1232, column: 13)
!7821 = !DILocation(line: 1232, column: 43, scope: !7820)
!7822 = !DILocation(line: 1232, column: 13, scope: !7685)
!7823 = !DILocation(line: 1233, column: 43, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7820, file: !1156, line: 1232, column: 55)
!7825 = !DILocation(line: 1234, column: 9, scope: !7824)
!7826 = !DILocation(line: 1237, column: 5, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !1156, line: 1237, column: 5)
!7828 = distinct !DILexicalBlock(scope: !7679, file: !1156, line: 1237, column: 5)
!7829 = !DILocation(line: 1240, column: 5, scope: !7679)
!7830 = !DILocation(line: 1241, column: 1, scope: !7679)
!7831 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1156, file: !1156, line: 3421, type: !7595, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7832)
!7832 = !{!7833, !7834, !7835, !7836}
!7833 = !DILocalVariable(name: "D", arg: 1, scope: !7831, file: !1156, line: 3421, type: !1326)
!7834 = !DILocalVariable(name: "savedMask", scope: !7831, file: !1156, line: 3423, type: !61)
!7835 = !DILocalVariable(name: "currtime", scope: !7831, file: !1156, line: 3424, type: !61)
!7836 = !DILocalVariable(name: "difftime", scope: !7831, file: !1156, line: 3424, type: !61)
!7837 = !DILocation(line: 0, scope: !7831)
!7838 = !DILocation(line: 3427, column: 9, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7831, file: !1156, line: 3427, column: 9)
!7840 = !DILocation(line: 3427, column: 28, scope: !7839)
!7841 = !DILocation(line: 3427, column: 9, scope: !7831)
!7842 = !DILocation(line: 3429, column: 20, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7839, file: !1156, line: 3427, column: 59)
!7844 = !DILocation(line: 3430, column: 27, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7843, file: !1156, line: 3430, column: 13)
!7846 = !DILocation(line: 3430, column: 24, scope: !7845)
!7847 = !DILocation(line: 3430, column: 22, scope: !7845)
!7848 = !DILocation(line: 3430, column: 13, scope: !7843)
!7849 = !DILocation(line: 3431, column: 47, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7845, file: !1156, line: 3430, column: 46)
!7851 = !DILocation(line: 3431, column: 13, scope: !7850)
!7852 = !DILocation(line: 3432, column: 9, scope: !7850)
!7853 = !DILocation(line: 3435, column: 17, scope: !7831)
!7854 = !DILocation(line: 3436, column: 24, scope: !7831)
!7855 = !DILocation(line: 3436, column: 31, scope: !7831)
!7856 = !DILocation(line: 3436, column: 36, scope: !7831)
!7857 = !DILocation(line: 3436, column: 28, scope: !7831)
!7858 = !DILocation(line: 3436, column: 5, scope: !7831)
!7859 = !DILocation(line: 3442, column: 5, scope: !7831)
!7860 = !DILocation(line: 3443, column: 1, scope: !7831)
!7861 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1156, file: !1156, line: 2405, type: !343, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7862)
!7862 = !{!7863}
!7863 = !DILocalVariable(name: "savedMask", scope: !7861, file: !1156, line: 2407, type: !61)
!7864 = !DILocation(line: 2408, column: 17, scope: !7861)
!7865 = !DILocation(line: 0, scope: !7861)
!7866 = !DILocation(line: 2413, column: 25, scope: !7861)
!7867 = !DILocation(line: 2414, column: 5, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7869, file: !1156, line: 2414, column: 5)
!7869 = distinct !DILexicalBlock(scope: !7861, file: !1156, line: 2414, column: 5)
!7870 = !DILocation(line: 2415, column: 5, scope: !7861)
!7871 = !DILocation(line: 2416, column: 1, scope: !7861)
!7872 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1156, file: !1156, line: 3561, type: !7873, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7875)
!7873 = !DISubroutineType(types: !7874)
!7874 = !{null, !1326, !859, !159}
!7875 = !{!7876, !7877, !7878, !7879}
!7876 = !DILocalVariable(name: "D", arg: 1, scope: !7872, file: !1156, line: 3561, type: !1326)
!7877 = !DILocalVariable(name: "cmd", arg: 2, scope: !7872, file: !1156, line: 3561, type: !859)
!7878 = !DILocalVariable(name: "outlen", arg: 3, scope: !7872, file: !1156, line: 3561, type: !159)
!7879 = !DILocalVariable(name: "savedMask", scope: !7872, file: !1156, line: 3563, type: !61)
!7880 = !DILocation(line: 0, scope: !7872)
!7881 = !DILocation(line: 3565, column: 17, scope: !7872)
!7882 = !DILocation(line: 3566, column: 22, scope: !7872)
!7883 = !DILocation(line: 3566, column: 5, scope: !7872)
!7884 = !DILocation(line: 3567, column: 33, scope: !7872)
!7885 = !DILocation(line: 3568, column: 27, scope: !7872)
!7886 = !DILocation(line: 3568, column: 25, scope: !7872)
!7887 = !DILocation(line: 3569, column: 24, scope: !7872)
!7888 = !DILocation(line: 3570, column: 25, scope: !7872)
!7889 = !DILocation(line: 3570, column: 5, scope: !7872)
!7890 = !DILocation(line: 3571, column: 5, scope: !7872)
!7891 = !DILocation(line: 3573, column: 1, scope: !7872)
!7892 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1156, file: !1156, line: 1410, type: !7893, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7895)
!7893 = !DISubroutineType(types: !7894)
!7894 = !{!1992}
!7895 = !{!7896}
!7896 = !DILocalVariable(name: "savedMask", scope: !7892, file: !1156, line: 1412, type: !1032)
!7897 = !DILocation(line: 1413, column: 17, scope: !7892)
!7898 = !DILocation(line: 0, scope: !7892)
!7899 = !DILocation(line: 1414, column: 9, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !7892, file: !1156, line: 1414, column: 9)
!7901 = !DILocation(line: 1414, column: 9, scope: !7892)
!7902 = !DILocation(line: 1415, column: 17, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7900, file: !1156, line: 1414, column: 24)
!7904 = !DILocation(line: 1417, column: 9, scope: !7903)
!7905 = !DILocation(line: 0, scope: !7900)
!7906 = !DILocation(line: 1425, column: 1, scope: !7892)
!7907 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1156, file: !1156, line: 1257, type: !7908, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7910)
!7908 = !DISubroutineType(types: !7909)
!7909 = !{!91}
!7910 = !{!7911, !7912, !7913}
!7911 = !DILocalVariable(name: "D", scope: !7907, file: !1156, line: 1259, type: !1326)
!7912 = !DILocalVariable(name: "status", scope: !7907, file: !1156, line: 1260, type: !1378)
!7913 = !DILocalVariable(name: "result", scope: !7907, file: !1156, line: 1261, type: !91)
!7914 = !DILocation(line: 1259, column: 57, scope: !7907)
!7915 = !DILocation(line: 0, scope: !7907)
!7916 = !DILocation(line: 1263, column: 5, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7918, file: !1156, line: 1263, column: 5)
!7918 = distinct !DILexicalBlock(scope: !7907, file: !1156, line: 1263, column: 5)
!7919 = !DILocation(line: 1263, column: 5, scope: !7918)
!7920 = !DILocation(line: 1263, column: 5, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7917, file: !1156, line: 1263, column: 5)
!7922 = !DILocation(line: 1265, column: 5, scope: !7907)
!7923 = !DILocation(line: 1267, column: 42, scope: !7907)
!7924 = !DILocation(line: 1267, column: 47, scope: !7907)
!7925 = !DILocation(line: 1267, column: 14, scope: !7907)
!7926 = !DILocation(line: 1269, column: 27, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7907, file: !1156, line: 1269, column: 9)
!7928 = !DILocation(line: 1269, column: 24, scope: !7927)
!7929 = !DILocation(line: 1269, column: 22, scope: !7927)
!7930 = !DILocation(line: 1269, column: 11, scope: !7927)
!7931 = !DILocation(line: 1269, column: 9, scope: !7907)
!7932 = !DILocation(line: 1270, column: 9, scope: !7933)
!7933 = distinct !DILexicalBlock(scope: !7927, file: !1156, line: 1269, column: 51)
!7934 = !DILocation(line: 1272, column: 5, scope: !7933)
!7935 = !DILocation(line: 1274, column: 5, scope: !7907)
!7936 = !DILocation(line: 1276, column: 5, scope: !7907)
!7937 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1156, file: !1156, line: 1289, type: !343, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7938)
!7938 = !{!7939}
!7939 = !DILocalVariable(name: "D", scope: !7937, file: !1156, line: 1291, type: !1326)
!7940 = !DILocation(line: 0, scope: !7937)
!7941 = !DILocation(line: 1293, column: 5, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7943, file: !1156, line: 1293, column: 5)
!7943 = distinct !DILexicalBlock(scope: !7937, file: !1156, line: 1293, column: 5)
!7944 = !DILocation(line: 1293, column: 5, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7942, file: !1156, line: 1293, column: 5)
!7946 = !DILocation(line: 1293, column: 5, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !1156, line: 1293, column: 5)
!7948 = distinct !DILexicalBlock(scope: !7949, file: !1156, line: 1293, column: 5)
!7949 = distinct !DILexicalBlock(scope: !7945, file: !1156, line: 1293, column: 5)
!7950 = !DILocation(line: 1291, column: 60, scope: !7937)
!7951 = !DILocation(line: 1295, column: 5, scope: !7937)
!7952 = !DILocation(line: 1296, column: 1, scope: !7937)
!7953 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1156, file: !1156, line: 3452, type: !7595, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7954)
!7954 = !{!7955, !7956}
!7955 = !DILocalVariable(name: "D", arg: 1, scope: !7953, file: !1156, line: 3452, type: !1326)
!7956 = !DILocalVariable(name: "savedMask", scope: !7953, file: !1156, line: 3454, type: !61)
!7957 = !DILocation(line: 0, scope: !7953)
!7958 = !DILocation(line: 3456, column: 17, scope: !7953)
!7959 = !DILocation(line: 3462, column: 24, scope: !7953)
!7960 = !DILocation(line: 3462, column: 31, scope: !7953)
!7961 = !DILocation(line: 3462, column: 36, scope: !7953)
!7962 = !DILocation(line: 3462, column: 28, scope: !7953)
!7963 = !DILocation(line: 3462, column: 5, scope: !7953)
!7964 = !DILocation(line: 3463, column: 12, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7953, file: !1156, line: 3463, column: 9)
!7966 = !DILocation(line: 3463, column: 27, scope: !7965)
!7967 = !DILocation(line: 3463, column: 9, scope: !7953)
!7968 = !DILocation(line: 3464, column: 28, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7965, file: !1156, line: 3463, column: 33)
!7970 = !DILocation(line: 3465, column: 5, scope: !7969)
!7971 = !DILocation(line: 3467, column: 5, scope: !7953)
!7972 = !DILocation(line: 3468, column: 5, scope: !7953)
!7973 = !DILocation(line: 3469, column: 1, scope: !7953)
!7974 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1156, file: !1156, line: 2417, type: !343, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7975)
!7975 = !{!7976}
!7976 = !DILocalVariable(name: "savedMask", scope: !7974, file: !1156, line: 2419, type: !61)
!7977 = !DILocation(line: 2420, column: 17, scope: !7974)
!7978 = !DILocation(line: 0, scope: !7974)
!7979 = !DILocation(line: 2425, column: 25, scope: !7974)
!7980 = !DILocation(line: 2426, column: 5, scope: !7974)
!7981 = !DILocation(line: 2427, column: 1, scope: !7974)
!7982 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1156, file: !1156, line: 1308, type: !343, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !7983)
!7983 = !{!7984, !7985}
!7984 = !DILocalVariable(name: "D", scope: !7982, file: !1156, line: 1310, type: !1326)
!7985 = !DILocalVariable(name: "status", scope: !7982, file: !1156, line: 1311, type: !1378)
!7986 = !DILocation(line: 1310, column: 60, scope: !7982)
!7987 = !DILocation(line: 0, scope: !7982)
!7988 = !DILocation(line: 1313, column: 5, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7990, file: !1156, line: 1313, column: 5)
!7990 = distinct !DILexicalBlock(scope: !7982, file: !1156, line: 1313, column: 5)
!7991 = !DILocation(line: 1313, column: 5, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7989, file: !1156, line: 1313, column: 5)
!7993 = !DILocation(line: 1313, column: 5, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7995, file: !1156, line: 1313, column: 5)
!7995 = distinct !DILexicalBlock(scope: !7996, file: !1156, line: 1313, column: 5)
!7996 = distinct !DILexicalBlock(scope: !7992, file: !1156, line: 1313, column: 5)
!7997 = !DILocation(line: 1315, column: 5, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7999, file: !1156, line: 1315, column: 5)
!7999 = distinct !DILexicalBlock(scope: !7982, file: !1156, line: 1315, column: 5)
!8000 = !DILocation(line: 1315, column: 5, scope: !7999)
!8001 = !DILocation(line: 1315, column: 5, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7998, file: !1156, line: 1315, column: 5)
!8003 = !DILocation(line: 1317, column: 5, scope: !7982)
!8004 = !DILocation(line: 1319, column: 5, scope: !7982)
!8005 = !DILocation(line: 1320, column: 46, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7982, file: !1156, line: 1319, column: 15)
!8007 = !DILocation(line: 1320, column: 51, scope: !8006)
!8008 = !DILocation(line: 1320, column: 18, scope: !8006)
!8009 = !DILocation(line: 1322, column: 31, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8006, file: !1156, line: 1322, column: 13)
!8011 = !DILocation(line: 1322, column: 28, scope: !8010)
!8012 = !DILocation(line: 1322, column: 26, scope: !8010)
!8013 = !DILocation(line: 1322, column: 15, scope: !8010)
!8014 = !DILocation(line: 1322, column: 13, scope: !8006)
!8015 = distinct !{!8015, !8004, !8016}
!8016 = !DILocation(line: 1325, column: 5, scope: !7982)
!8017 = !DILocation(line: 1327, column: 5, scope: !7982)
!8018 = !DILocation(line: 1328, column: 1, scope: !7982)
!8019 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1156, file: !1156, line: 1394, type: !7595, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8020)
!8020 = !{!8021}
!8021 = !DILocalVariable(name: "D", arg: 1, scope: !8019, file: !1156, line: 1394, type: !1326)
!8022 = !DILocation(line: 0, scope: !8019)
!8023 = !DILocation(line: 1401, column: 1, scope: !8019)
!8024 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1156, file: !1156, line: 1556, type: !8025, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8046)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!1032, !8027, !1326}
!8027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8028, size: 32)
!8028 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1352, line: 121, baseType: !8029)
!8029 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 105, size: 480, elements: !8030)
!8030 = !{!8031, !8032, !8033, !8034, !8035, !8036, !8037, !8038, !8039, !8040, !8041, !8042, !8043, !8044, !8045}
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !8029, file: !1352, line: 106, baseType: !1624, size: 32)
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !8029, file: !1352, line: 107, baseType: !1427, size: 32, offset: 32)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !8029, file: !1352, line: 108, baseType: !1629, size: 32, offset: 64)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !8029, file: !1352, line: 109, baseType: !1633, size: 32, offset: 96)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !8029, file: !1352, line: 110, baseType: !1637, size: 32, offset: 128)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !8029, file: !1352, line: 111, baseType: !1633, size: 32, offset: 160)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !8029, file: !1352, line: 112, baseType: !1642, size: 32, offset: 192)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !8029, file: !1352, line: 113, baseType: !1633, size: 32, offset: 224)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !8029, file: !1352, line: 114, baseType: !1633, size: 32, offset: 256)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !8029, file: !1352, line: 115, baseType: !1633, size: 32, offset: 288)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !8029, file: !1352, line: 116, baseType: !1649, size: 32, offset: 320)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !8029, file: !1352, line: 117, baseType: !1654, size: 32, offset: 352)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !8029, file: !1352, line: 118, baseType: !1659, size: 32, offset: 384)
!8044 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !8029, file: !1352, line: 119, baseType: !1663, size: 32, offset: 416)
!8045 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !8029, file: !1352, line: 120, baseType: !1667, size: 32, offset: 448)
!8046 = !{!8047, !8048, !8049}
!8047 = !DILocalVariable(name: "driver", arg: 1, scope: !8024, file: !1156, line: 1556, type: !8027)
!8048 = !DILocalVariable(name: "D", arg: 2, scope: !8024, file: !1156, line: 1556, type: !1326)
!8049 = !DILocalVariable(name: "smap", scope: !8024, file: !1156, line: 1558, type: !1377)
!8050 = !DILocation(line: 0, scope: !8024)
!8051 = !DILocation(line: 1561, column: 15, scope: !8024)
!8052 = !DILocation(line: 1562, column: 22, scope: !8024)
!8053 = !DILocation(line: 1563, column: 5, scope: !8024)
!8054 = !DILocation(line: 1563, column: 22, scope: !8024)
!8055 = !DILocation(line: 1565, column: 5, scope: !8024)
!8056 = !DILocation(line: 1565, column: 22, scope: !8024)
!8057 = !DILocation(line: 1566, column: 5, scope: !8024)
!8058 = !DILocation(line: 1566, column: 22, scope: !8024)
!8059 = !DILocation(line: 1568, column: 5, scope: !8024)
!8060 = !DILocation(line: 1568, column: 22, scope: !8024)
!8061 = !DILocation(line: 1569, column: 5, scope: !8024)
!8062 = !DILocation(line: 1569, column: 22, scope: !8024)
!8063 = !DILocation(line: 1570, column: 5, scope: !8024)
!8064 = !DILocation(line: 1570, column: 22, scope: !8024)
!8065 = !DILocation(line: 1573, column: 8, scope: !8024)
!8066 = !DILocation(line: 1573, column: 13, scope: !8024)
!8067 = !DILocation(line: 1573, column: 28, scope: !8024)
!8068 = !DILocation(line: 1574, column: 8, scope: !8024)
!8069 = !DILocation(line: 1574, column: 13, scope: !8024)
!8070 = !DILocation(line: 1574, column: 29, scope: !8024)
!8071 = !DILocation(line: 1575, column: 8, scope: !8024)
!8072 = !DILocation(line: 1575, column: 13, scope: !8024)
!8073 = !DILocation(line: 1575, column: 30, scope: !8024)
!8074 = !DILocation(line: 1576, column: 8, scope: !8024)
!8075 = !DILocation(line: 1576, column: 13, scope: !8024)
!8076 = !DILocation(line: 1576, column: 23, scope: !8024)
!8077 = !DILocation(line: 1577, column: 8, scope: !8024)
!8078 = !DILocation(line: 1577, column: 13, scope: !8024)
!8079 = !DILocation(line: 1577, column: 24, scope: !8024)
!8080 = !DILocation(line: 1578, column: 8, scope: !8024)
!8081 = !DILocation(line: 1578, column: 13, scope: !8024)
!8082 = !DILocation(line: 1578, column: 25, scope: !8024)
!8083 = !DILocation(line: 1579, column: 8, scope: !8024)
!8084 = !DILocation(line: 1579, column: 23, scope: !8024)
!8085 = !DILocation(line: 1583, column: 10, scope: !8086)
!8086 = distinct !DILexicalBlock(scope: !8024, file: !1156, line: 1583, column: 9)
!8087 = !DILocation(line: 1583, column: 24, scope: !8086)
!8088 = !DILocation(line: 1583, column: 32, scope: !8086)
!8089 = !DILocation(line: 1583, column: 35, scope: !8086)
!8090 = !DILocation(line: 1583, column: 49, scope: !8086)
!8091 = !DILocation(line: 1583, column: 9, scope: !8024)
!8092 = !DILocation(line: 1586, column: 12, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8086, file: !1156, line: 1583, column: 59)
!8094 = !DILocation(line: 1586, column: 17, scope: !8093)
!8095 = !DILocation(line: 1586, column: 25, scope: !8093)
!8096 = !DILocation(line: 1587, column: 12, scope: !8093)
!8097 = !DILocation(line: 1587, column: 17, scope: !8093)
!8098 = !DILocation(line: 1587, column: 24, scope: !8093)
!8099 = !DILocation(line: 1591, column: 10, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8024, file: !1156, line: 1591, column: 9)
!8101 = !DILocation(line: 1589, column: 5, scope: !8093)
!8102 = !DILocation(line: 1600, column: 32, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8024, file: !1156, line: 1600, column: 9)
!8104 = !DILocation(line: 1600, column: 35, scope: !8103)
!8105 = !DILocation(line: 1600, column: 49, scope: !8103)
!8106 = !DILocation(line: 1600, column: 9, scope: !8024)
!8107 = !DILocation(line: 1601, column: 12, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8103, file: !1156, line: 1600, column: 59)
!8109 = !DILocation(line: 1601, column: 17, scope: !8108)
!8110 = !DILocation(line: 1601, column: 25, scope: !8108)
!8111 = !DILocation(line: 1602, column: 12, scope: !8108)
!8112 = !DILocation(line: 1602, column: 17, scope: !8108)
!8113 = !DILocation(line: 1602, column: 24, scope: !8108)
!8114 = !DILocation(line: 1603, column: 5, scope: !8108)
!8115 = !DILocation(line: 1607, column: 8, scope: !8024)
!8116 = !DILocation(line: 1607, column: 20, scope: !8024)
!8117 = !DILocation(line: 1622, column: 5, scope: !8024)
!8118 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1156, file: !1156, line: 4553, type: !1428, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8119)
!8119 = !{!8120, !8121, !8122, !8123}
!8120 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8118, file: !1156, line: 4553, type: !88)
!8121 = !DILocalVariable(name: "D", scope: !8118, file: !1156, line: 4555, type: !1326)
!8122 = !DILocalVariable(name: "unlock", scope: !8118, file: !1156, line: 4556, type: !61)
!8123 = !DILocalVariable(name: "cmd", scope: !8118, file: !1156, line: 4557, type: !159)
!8124 = !DILocation(line: 0, scope: !8118)
!8125 = !DILocation(line: 4555, column: 24, scope: !8118)
!8126 = !DILocation(line: 4557, column: 5, scope: !8118)
!8127 = !DILocation(line: 4558, column: 12, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8118, file: !1156, line: 4558, column: 9)
!8129 = !DILocation(line: 4558, column: 9, scope: !8128)
!8130 = !DILocation(line: 4558, column: 23, scope: !8128)
!8131 = !DILocation(line: 4558, column: 31, scope: !8128)
!8132 = !DILocation(line: 4558, column: 34, scope: !8128)
!8133 = !DILocation(line: 4558, column: 48, scope: !8128)
!8134 = !DILocation(line: 4558, column: 56, scope: !8128)
!8135 = !DILocation(line: 4558, column: 59, scope: !8128)
!8136 = !DILocation(line: 4558, column: 73, scope: !8128)
!8137 = !DILocation(line: 4558, column: 9, scope: !8118)
!8138 = !DILocation(line: 4563, column: 24, scope: !8118)
!8139 = !DILocation(line: 4563, column: 31, scope: !8118)
!8140 = !DILocation(line: 4563, column: 36, scope: !8118)
!8141 = !DILocation(line: 4563, column: 28, scope: !8118)
!8142 = !DILocation(line: 4563, column: 5, scope: !8118)
!8143 = !DILocation(line: 4564, column: 5, scope: !8118)
!8144 = !DILocation(line: 4567, column: 28, scope: !8118)
!8145 = !DILocation(line: 4567, column: 36, scope: !8118)
!8146 = !DILocation(line: 4567, column: 41, scope: !8118)
!8147 = !DILocation(line: 4567, column: 5, scope: !8118)
!8148 = !DILocation(line: 4568, column: 17, scope: !8118)
!8149 = !DILocation(line: 4568, column: 22, scope: !8118)
!8150 = !DILocation(line: 4568, column: 14, scope: !8118)
!8151 = !DILocation(line: 4569, column: 22, scope: !8118)
!8152 = !DILocation(line: 4569, column: 54, scope: !8118)
!8153 = !DILocation(line: 4569, column: 65, scope: !8118)
!8154 = !DILocation(line: 4569, column: 62, scope: !8118)
!8155 = !DILocation(line: 4569, column: 87, scope: !8118)
!8156 = !DILocation(line: 4569, column: 85, scope: !8118)
!8157 = !DILocation(line: 4569, column: 60, scope: !8118)
!8158 = !DILocation(line: 4569, column: 58, scope: !8118)
!8159 = !DILocation(line: 4569, column: 51, scope: !8118)
!8160 = !DILocation(line: 4572, column: 24, scope: !8118)
!8161 = !DILocation(line: 4572, column: 5, scope: !8118)
!8162 = !DILocation(line: 4573, column: 5, scope: !8118)
!8163 = !DILocation(line: 4575, column: 5, scope: !8118)
!8164 = !DILocation(line: 4576, column: 1, scope: !8118)
!8165 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1156, file: !1156, line: 4488, type: !7595, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8166)
!8166 = !{!8167, !8168}
!8167 = !DILocalVariable(name: "D", arg: 1, scope: !8165, file: !1156, line: 4488, type: !1326)
!8168 = !DILocalVariable(name: "status", scope: !8165, file: !1156, line: 4490, type: !1378)
!8169 = !DILocation(line: 0, scope: !8165)
!8170 = !DILocation(line: 4490, column: 5, scope: !8165)
!8171 = !DILocation(line: 4491, column: 5, scope: !8165)
!8172 = !DILocation(line: 4492, column: 32, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8165, file: !1156, line: 4491, column: 10)
!8174 = !DILocation(line: 4492, column: 40, scope: !8173)
!8175 = !DILocation(line: 4492, column: 45, scope: !8173)
!8176 = !DILocation(line: 4492, column: 9, scope: !8173)
!8177 = !DILocation(line: 4493, column: 20, scope: !8165)
!8178 = !DILocation(line: 4493, column: 32, scope: !8165)
!8179 = !DILocation(line: 4493, column: 29, scope: !8165)
!8180 = !DILocation(line: 4493, column: 27, scope: !8165)
!8181 = !DILocation(line: 4493, column: 16, scope: !8165)
!8182 = !DILocation(line: 4493, column: 5, scope: !8173)
!8183 = distinct !{!8183, !8171, !8184}
!8184 = !DILocation(line: 4493, column: 54, scope: !8165)
!8185 = !DILocation(line: 4494, column: 1, scope: !8165)
!8186 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1156, file: !1156, line: 1742, type: !8025, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8187)
!8187 = !{!8188, !8189, !8190}
!8188 = !DILocalVariable(name: "driver", arg: 1, scope: !8186, file: !1156, line: 1742, type: !8027)
!8189 = !DILocalVariable(name: "D", arg: 2, scope: !8186, file: !1156, line: 1742, type: !1326)
!8190 = !DILocalVariable(name: "smap", scope: !8186, file: !1156, line: 1744, type: !1377)
!8191 = !DILocation(line: 0, scope: !8186)
!8192 = !DILocation(line: 1747, column: 15, scope: !8186)
!8193 = !DILocation(line: 1748, column: 22, scope: !8186)
!8194 = !DILocation(line: 1749, column: 5, scope: !8186)
!8195 = !DILocation(line: 1749, column: 22, scope: !8186)
!8196 = !DILocation(line: 1750, column: 5, scope: !8186)
!8197 = !DILocation(line: 1750, column: 22, scope: !8186)
!8198 = !DILocation(line: 1751, column: 5, scope: !8186)
!8199 = !DILocation(line: 1751, column: 22, scope: !8186)
!8200 = !DILocation(line: 1752, column: 5, scope: !8186)
!8201 = !DILocation(line: 1752, column: 22, scope: !8186)
!8202 = !DILocation(line: 1753, column: 5, scope: !8186)
!8203 = !DILocation(line: 1753, column: 22, scope: !8186)
!8204 = !DILocation(line: 1756, column: 8, scope: !8186)
!8205 = !DILocation(line: 1756, column: 13, scope: !8186)
!8206 = !DILocation(line: 1756, column: 24, scope: !8186)
!8207 = !DILocation(line: 1758, column: 8, scope: !8186)
!8208 = !DILocation(line: 1758, column: 13, scope: !8186)
!8209 = !DILocation(line: 1758, column: 28, scope: !8186)
!8210 = !DILocation(line: 1759, column: 8, scope: !8186)
!8211 = !DILocation(line: 1759, column: 13, scope: !8186)
!8212 = !DILocation(line: 1759, column: 29, scope: !8186)
!8213 = !DILocation(line: 1760, column: 8, scope: !8186)
!8214 = !DILocation(line: 1760, column: 13, scope: !8186)
!8215 = !DILocation(line: 1760, column: 23, scope: !8186)
!8216 = !DILocation(line: 1761, column: 8, scope: !8186)
!8217 = !DILocation(line: 1761, column: 13, scope: !8186)
!8218 = !DILocation(line: 1761, column: 24, scope: !8186)
!8219 = !DILocation(line: 1762, column: 8, scope: !8186)
!8220 = !DILocation(line: 1762, column: 13, scope: !8186)
!8221 = !DILocation(line: 1762, column: 21, scope: !8186)
!8222 = !DILocation(line: 1763, column: 8, scope: !8186)
!8223 = !DILocation(line: 1763, column: 13, scope: !8186)
!8224 = !DILocation(line: 1763, column: 20, scope: !8186)
!8225 = !DILocation(line: 1764, column: 8, scope: !8186)
!8226 = !DILocation(line: 1764, column: 23, scope: !8186)
!8227 = !DILocation(line: 1768, column: 8, scope: !8186)
!8228 = !DILocation(line: 1768, column: 20, scope: !8186)
!8229 = !DILocation(line: 1770, column: 5, scope: !8186)
!8230 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1156, file: !1156, line: 1775, type: !8025, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8231)
!8231 = !{!8232, !8233}
!8232 = !DILocalVariable(name: "driver", arg: 1, scope: !8230, file: !1156, line: 1775, type: !8027)
!8233 = !DILocalVariable(name: "D", arg: 2, scope: !8230, file: !1156, line: 1775, type: !1326)
!8234 = !DILocation(line: 0, scope: !8230)
!8235 = !DILocation(line: 1793, column: 5, scope: !8230)
!8236 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1156, file: !1156, line: 1932, type: !8025, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8237)
!8237 = !{!8238, !8239}
!8238 = !DILocalVariable(name: "driver", arg: 1, scope: !8236, file: !1156, line: 1932, type: !8027)
!8239 = !DILocalVariable(name: "D", arg: 2, scope: !8236, file: !1156, line: 1932, type: !1326)
!8240 = !DILocation(line: 0, scope: !8236)
!8241 = !DILocation(line: 1935, column: 13, scope: !8236)
!8242 = !DILocation(line: 1935, column: 25, scope: !8236)
!8243 = !DILocation(line: 1936, column: 13, scope: !8236)
!8244 = !DILocation(line: 1936, column: 22, scope: !8236)
!8245 = !DILocation(line: 1937, column: 13, scope: !8236)
!8246 = !DILocation(line: 1937, column: 23, scope: !8236)
!8247 = !DILocation(line: 1939, column: 13, scope: !8236)
!8248 = !DILocation(line: 1939, column: 24, scope: !8236)
!8249 = !DILocation(line: 1940, column: 13, scope: !8236)
!8250 = !DILocation(line: 1940, column: 25, scope: !8236)
!8251 = !DILocation(line: 1945, column: 13, scope: !8236)
!8252 = !DILocation(line: 1945, column: 32, scope: !8236)
!8253 = !DILocation(line: 1946, column: 13, scope: !8236)
!8254 = !DILocation(line: 1946, column: 30, scope: !8236)
!8255 = !DILocation(line: 1947, column: 13, scope: !8236)
!8256 = !DILocation(line: 1947, column: 26, scope: !8236)
!8257 = !DILocation(line: 1948, column: 13, scope: !8236)
!8258 = !DILocation(line: 1948, column: 25, scope: !8236)
!8259 = !DILocation(line: 1949, column: 13, scope: !8236)
!8260 = !DILocation(line: 1949, column: 24, scope: !8236)
!8261 = !DILocation(line: 1956, column: 13, scope: !8236)
!8262 = !DILocation(line: 1956, column: 23, scope: !8236)
!8263 = !DILocation(line: 1957, column: 13, scope: !8236)
!8264 = !DILocation(line: 1957, column: 28, scope: !8236)
!8265 = !DILocation(line: 1960, column: 13, scope: !8236)
!8266 = !DILocation(line: 1960, column: 30, scope: !8236)
!8267 = !DILocation(line: 1961, column: 13, scope: !8236)
!8268 = !DILocation(line: 1961, column: 30, scope: !8236)
!8269 = !DILocation(line: 1962, column: 13, scope: !8236)
!8270 = !DILocation(line: 1962, column: 20, scope: !8236)
!8271 = !DILocation(line: 1968, column: 9, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8236, file: !1156, line: 1968, column: 9)
!8273 = !DILocation(line: 1968, column: 36, scope: !8272)
!8274 = !DILocation(line: 1968, column: 9, scope: !8236)
!8275 = !DILocation(line: 1971, column: 12, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8272, file: !1156, line: 1970, column: 5)
!8277 = !DILocation(line: 1971, column: 25, scope: !8276)
!8278 = !DILocation(line: 1979, column: 8, scope: !8236)
!8279 = !DILocation(line: 1979, column: 13, scope: !8236)
!8280 = !DILocation(line: 1979, column: 25, scope: !8236)
!8281 = !DILocation(line: 1980, column: 8, scope: !8236)
!8282 = !DILocation(line: 1980, column: 13, scope: !8236)
!8283 = !DILocation(line: 1980, column: 24, scope: !8236)
!8284 = !DILocation(line: 1981, column: 8, scope: !8236)
!8285 = !DILocation(line: 1981, column: 13, scope: !8236)
!8286 = !DILocation(line: 1981, column: 24, scope: !8236)
!8287 = !DILocation(line: 1982, column: 8, scope: !8236)
!8288 = !DILocation(line: 1982, column: 13, scope: !8236)
!8289 = !DILocation(line: 1982, column: 22, scope: !8236)
!8290 = !DILocation(line: 1983, column: 8, scope: !8236)
!8291 = !DILocation(line: 1983, column: 13, scope: !8236)
!8292 = !DILocation(line: 1983, column: 21, scope: !8236)
!8293 = !DILocation(line: 1984, column: 8, scope: !8236)
!8294 = !DILocation(line: 1984, column: 13, scope: !8236)
!8295 = !DILocation(line: 1984, column: 22, scope: !8236)
!8296 = !DILocation(line: 1985, column: 8, scope: !8236)
!8297 = !DILocation(line: 1985, column: 13, scope: !8236)
!8298 = !DILocation(line: 1985, column: 22, scope: !8236)
!8299 = !DILocation(line: 1986, column: 8, scope: !8236)
!8300 = !DILocation(line: 1986, column: 13, scope: !8236)
!8301 = !DILocation(line: 1986, column: 21, scope: !8236)
!8302 = !DILocation(line: 1987, column: 8, scope: !8236)
!8303 = !DILocation(line: 1987, column: 13, scope: !8236)
!8304 = !DILocation(line: 1987, column: 20, scope: !8236)
!8305 = !DILocation(line: 1988, column: 8, scope: !8236)
!8306 = !DILocation(line: 1988, column: 13, scope: !8236)
!8307 = !DILocation(line: 1988, column: 25, scope: !8236)
!8308 = !DILocation(line: 1989, column: 8, scope: !8236)
!8309 = !DILocation(line: 1989, column: 13, scope: !8236)
!8310 = !DILocation(line: 1989, column: 22, scope: !8236)
!8311 = !DILocation(line: 1990, column: 8, scope: !8236)
!8312 = !DILocation(line: 1990, column: 13, scope: !8236)
!8313 = !DILocation(line: 1990, column: 22, scope: !8236)
!8314 = !DILocation(line: 1993, column: 8, scope: !8236)
!8315 = !DILocation(line: 1993, column: 13, scope: !8236)
!8316 = !DILocation(line: 1993, column: 26, scope: !8236)
!8317 = !DILocation(line: 1996, column: 8, scope: !8236)
!8318 = !DILocation(line: 1996, column: 20, scope: !8236)
!8319 = !DILocation(line: 1999, column: 8, scope: !8236)
!8320 = !DILocation(line: 1999, column: 24, scope: !8236)
!8321 = !DILocation(line: 2000, column: 8, scope: !8236)
!8322 = !DILocation(line: 2000, column: 19, scope: !8236)
!8323 = !DILocation(line: 2001, column: 8, scope: !8236)
!8324 = !DILocation(line: 2001, column: 24, scope: !8236)
!8325 = !DILocation(line: 2002, column: 8, scope: !8236)
!8326 = !DILocation(line: 2002, column: 23, scope: !8236)
!8327 = !DILocation(line: 2004, column: 5, scope: !8236)
!8328 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1156, file: !1156, line: 2160, type: !1625, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8329)
!8329 = !{!8330, !8331, !8332, !8345, !8346, !8347}
!8330 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8328, file: !1156, line: 2160, type: !88)
!8331 = !DILocalVariable(name: "Info", arg: 2, scope: !8328, file: !1156, line: 2160, type: !88)
!8332 = !DILocalVariable(name: "FlashInfo", scope: !8328, file: !1156, line: 2162, type: !8333)
!8333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8334, size: 32)
!8334 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1352, line: 99, baseType: !8335)
!8335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 90, size: 928, elements: !8336)
!8336 = !{!8337, !8338, !8339, !8340, !8341, !8342, !8343, !8344}
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !8335, file: !1352, line: 91, baseType: !61, size: 32)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !8335, file: !1352, line: 92, baseType: !1681, size: 256, offset: 32)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !8335, file: !1352, line: 93, baseType: !1681, size: 256, offset: 288)
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !8335, file: !1352, line: 94, baseType: !1681, size: 256, offset: 544)
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !8335, file: !1352, line: 95, baseType: !61, size: 32, offset: 800)
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !8335, file: !1352, line: 96, baseType: !1673, size: 16, offset: 832)
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !8335, file: !1352, line: 97, baseType: !61, size: 32, offset: 864)
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !8335, file: !1352, line: 98, baseType: !61, size: 32, offset: 896)
!8345 = !DILocalVariable(name: "D", scope: !8328, file: !1156, line: 2163, type: !1326)
!8346 = !DILocalVariable(name: "i", scope: !8328, file: !1156, line: 2164, type: !61)
!8347 = !DILocalVariable(name: "result", scope: !8328, file: !1156, line: 2166, type: !1032)
!8348 = !DILocation(line: 0, scope: !8328)
!8349 = !DILocation(line: 2163, column: 37, scope: !8328)
!8350 = !DILocation(line: 2202, column: 16, scope: !8328)
!8351 = !DILocation(line: 2202, column: 28, scope: !8328)
!8352 = !DILocation(line: 2204, column: 15, scope: !8328)
!8353 = !DILocation(line: 2204, column: 29, scope: !8328)
!8354 = !DILocation(line: 2204, column: 39, scope: !8328)
!8355 = !DILocation(line: 2204, column: 5, scope: !8328)
!8356 = !DILocation(line: 2205, column: 9, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8328, file: !1156, line: 2204, column: 45)
!8358 = !DILocation(line: 2205, column: 33, scope: !8357)
!8359 = !DILocation(line: 2206, column: 41, scope: !8357)
!8360 = !DILocation(line: 2206, column: 55, scope: !8357)
!8361 = !DILocation(line: 2206, column: 9, scope: !8357)
!8362 = !DILocation(line: 2206, column: 36, scope: !8357)
!8363 = !DILocation(line: 2207, column: 38, scope: !8357)
!8364 = !DILocation(line: 2207, column: 52, scope: !8357)
!8365 = !DILocation(line: 2207, column: 32, scope: !8357)
!8366 = !DILocation(line: 2209, column: 10, scope: !8357)
!8367 = distinct !{!8367, !8355, !8368}
!8368 = !DILocation(line: 2210, column: 5, scope: !8328)
!8369 = !DILocation(line: 2212, column: 16, scope: !8328)
!8370 = !DILocation(line: 2212, column: 32, scope: !8328)
!8371 = !DILocation(line: 2213, column: 16, scope: !8328)
!8372 = !DILocation(line: 2213, column: 25, scope: !8328)
!8373 = !DILocation(line: 2236, column: 5, scope: !8328)
!8374 = !DILocation(line: 2238, column: 5, scope: !8328)
!8375 = !DILocation(line: 2239, column: 18, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8328, file: !1156, line: 2238, column: 10)
!8377 = !DILocation(line: 2240, column: 34, scope: !8328)
!8378 = !DILocation(line: 2240, column: 5, scope: !8376)
!8379 = distinct !{!8379, !8374, !8380}
!8380 = !DILocation(line: 2240, column: 43, scope: !8328)
!8381 = !DILocation(line: 2259, column: 5, scope: !8328)
!8382 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1156, file: !1156, line: 2275, type: !1428, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8383)
!8383 = !{!8384, !8385, !8386, !8387}
!8384 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8382, file: !1156, line: 2275, type: !88)
!8385 = !DILocalVariable(name: "D", scope: !8382, file: !1156, line: 2278, type: !1326)
!8386 = !DILocalVariable(name: "status", scope: !8382, file: !1156, line: 2279, type: !1378)
!8387 = !DILocalVariable(name: "saved_mask", scope: !8382, file: !1156, line: 2280, type: !61)
!8388 = !DILocation(line: 0, scope: !8382)
!8389 = !DILocation(line: 2278, column: 33, scope: !8382)
!8390 = !DILocation(line: 2286, column: 5, scope: !8382)
!8391 = !DILocation(line: 2293, column: 9, scope: !8382)
!8392 = !DILocation(line: 2294, column: 26, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8382, file: !1156, line: 2293, column: 19)
!8394 = !DILocation(line: 2297, column: 17, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8393, file: !1156, line: 2297, column: 17)
!8396 = !DILocation(line: 2297, column: 17, scope: !8393)
!8397 = !DILocation(line: 2298, column: 17, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8395, file: !1156, line: 2297, column: 36)
!8399 = !DILocation(line: 2299, column: 37, scope: !8398)
!8400 = !DILocation(line: 2300, column: 13, scope: !8398)
!8401 = !DILocation(line: 2303, column: 50, scope: !8393)
!8402 = !DILocation(line: 2303, column: 55, scope: !8393)
!8403 = !DILocation(line: 2303, column: 22, scope: !8393)
!8404 = !DILocation(line: 2306, column: 35, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8393, file: !1156, line: 2306, column: 17)
!8406 = !DILocation(line: 2306, column: 32, scope: !8405)
!8407 = !DILocation(line: 2306, column: 30, scope: !8405)
!8408 = !DILocation(line: 2306, column: 19, scope: !8405)
!8409 = !DILocation(line: 2306, column: 17, scope: !8393)
!8410 = !DILocation(line: 2307, column: 17, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8405, file: !1156, line: 2306, column: 59)
!8412 = !DILocation(line: 2308, column: 17, scope: !8411)
!8413 = !DILocation(line: 2315, column: 12, scope: !8382)
!8414 = !DILocation(line: 2315, column: 21, scope: !8382)
!8415 = !DILocation(line: 2325, column: 9, scope: !8382)
!8416 = !DILocation(line: 2326, column: 5, scope: !8382)
!8417 = !DILocation(line: 2311, column: 17, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8405, file: !1156, line: 2310, column: 20)
!8419 = distinct !{!8419, !8391, !8420}
!8420 = !DILocation(line: 2313, column: 9, scope: !8382)
!8421 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1156, file: !1156, line: 2819, type: !1634, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8422)
!8422 = !{!8423, !8424, !8425, !8426, !8427, !8428, !8429, !8430, !8431, !8432, !8435, !8436}
!8423 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8421, file: !1156, line: 2819, type: !88)
!8424 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8421, file: !1156, line: 2819, type: !61)
!8425 = !DILocalVariable(name: "result", scope: !8421, file: !1156, line: 2821, type: !1032)
!8426 = !DILocalVariable(name: "blocksize", scope: !8421, file: !1156, line: 2822, type: !61)
!8427 = !DILocalVariable(name: "eraseunit", scope: !8421, file: !1156, line: 2823, type: !61)
!8428 = !DILocalVariable(name: "eraseaddr", scope: !8421, file: !1156, line: 2824, type: !61)
!8429 = !DILocalVariable(name: "iteration", scope: !8421, file: !1156, line: 2825, type: !61)
!8430 = !DILocalVariable(name: "D", scope: !8421, file: !1156, line: 2826, type: !1326)
!8431 = !DILocalVariable(name: "erase_block", scope: !8421, file: !1156, line: 2827, type: !61)
!8432 = !DILocalVariable(name: "a", scope: !8433, file: !1156, line: 2853, type: !61)
!8433 = distinct !DILexicalBlock(scope: !8434, file: !1156, line: 2852, column: 56)
!8434 = distinct !DILexicalBlock(scope: !8421, file: !1156, line: 2852, column: 9)
!8435 = !DILocalVariable(name: "b", scope: !8433, file: !1156, line: 2853, type: !61)
!8436 = !DILocalVariable(name: "c", scope: !8433, file: !1156, line: 2853, type: !61)
!8437 = !DILocation(line: 0, scope: !8421)
!8438 = !DILocation(line: 2826, column: 30, scope: !8421)
!8439 = !DILocation(line: 2829, column: 5, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8441, file: !1156, line: 2829, column: 5)
!8441 = distinct !DILexicalBlock(scope: !8421, file: !1156, line: 2829, column: 5)
!8442 = !DILocation(line: 2829, column: 5, scope: !8441)
!8443 = !DILocation(line: 2829, column: 5, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8440, file: !1156, line: 2829, column: 5)
!8445 = !DILocation(line: 2836, column: 9, scope: !8421)
!8446 = !DILocation(line: 2838, column: 8, scope: !8421)
!8447 = !DILocation(line: 2838, column: 21, scope: !8421)
!8448 = !DILocation(line: 2847, column: 5, scope: !8421)
!8449 = !DILocation(line: 2848, column: 18, scope: !8450)
!8450 = distinct !DILexicalBlock(scope: !8421, file: !1156, line: 2847, column: 10)
!8451 = !DILocation(line: 2850, column: 34, scope: !8421)
!8452 = !DILocation(line: 2850, column: 5, scope: !8450)
!8453 = distinct !{!8453, !8448, !8454}
!8454 = !DILocation(line: 2850, column: 43, scope: !8421)
!8455 = !DILocation(line: 2839, column: 32, scope: !8421)
!8456 = !DILocation(line: 2861, column: 53, scope: !8433)
!8457 = !DILocation(line: 2861, column: 40, scope: !8433)
!8458 = !DILocation(line: 2861, column: 25, scope: !8433)
!8459 = !DILocation(line: 2874, column: 16, scope: !8433)
!8460 = !DILocation(line: 2874, column: 13, scope: !8433)
!8461 = !DILocation(line: 0, scope: !8433)
!8462 = !DILocation(line: 2875, column: 24, scope: !8433)
!8463 = !DILocation(line: 2877, column: 21, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8433, file: !1156, line: 2877, column: 13)
!8465 = !DILocation(line: 2877, column: 13, scope: !8433)
!8466 = !DILocation(line: 2879, column: 23, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8468, file: !1156, line: 2879, column: 21)
!8468 = distinct !DILexicalBlock(scope: !8469, file: !1156, line: 2878, column: 120)
!8469 = distinct !DILexicalBlock(scope: !8470, file: !1156, line: 2878, column: 13)
!8470 = distinct !DILexicalBlock(scope: !8471, file: !1156, line: 2878, column: 13)
!8471 = distinct !DILexicalBlock(scope: !8464, file: !1156, line: 2877, column: 27)
!8472 = !DILocation(line: 2879, column: 21, scope: !8468)
!8473 = !DILocation(line: 2878, column: 48, scope: !8469)
!8474 = !DILocation(line: 2878, column: 83, scope: !8469)
!8475 = !DILocation(line: 2878, column: 113, scope: !8469)
!8476 = !DILocation(line: 2878, column: 35, scope: !8469)
!8477 = !DILocation(line: 2878, column: 13, scope: !8470)
!8478 = distinct !{!8478, !8477, !8479}
!8479 = !DILocation(line: 2883, column: 13, scope: !8470)
!8480 = !DILocation(line: 2863, column: 19, scope: !8433)
!8481 = !DILocation(line: 2825, column: 24, scope: !8421)
!8482 = !DILocation(line: 2886, column: 9, scope: !8433)
!8483 = !DILocation(line: 2888, column: 36, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8433, file: !1156, line: 2886, column: 31)
!8485 = !DILocation(line: 2888, column: 41, scope: !8484)
!8486 = !DILocation(line: 2889, column: 17, scope: !8484)
!8487 = !DILocation(line: 2891, column: 36, scope: !8484)
!8488 = !DILocation(line: 2891, column: 41, scope: !8484)
!8489 = !DILocation(line: 2892, column: 17, scope: !8484)
!8490 = !DILocation(line: 2894, column: 36, scope: !8484)
!8491 = !DILocation(line: 2894, column: 41, scope: !8484)
!8492 = !DILocation(line: 2895, column: 17, scope: !8484)
!8493 = !DILocation(line: 2897, column: 17, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8495, file: !1156, line: 2897, column: 17)
!8495 = distinct !DILexicalBlock(scope: !8496, file: !1156, line: 2897, column: 17)
!8496 = distinct !DILexicalBlock(scope: !8484, file: !1156, line: 2897, column: 17)
!8497 = !DILocation(line: 0, scope: !8484)
!8498 = !DILocation(line: 2906, column: 5, scope: !8421)
!8499 = !DILocation(line: 2908, column: 32, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8421, file: !1156, line: 2906, column: 27)
!8501 = !DILocation(line: 2908, column: 37, scope: !8500)
!8502 = !DILocation(line: 2909, column: 13, scope: !8500)
!8503 = !DILocation(line: 2911, column: 32, scope: !8500)
!8504 = !DILocation(line: 2911, column: 37, scope: !8500)
!8505 = !DILocation(line: 2912, column: 13, scope: !8500)
!8506 = !DILocation(line: 2914, column: 32, scope: !8500)
!8507 = !DILocation(line: 2914, column: 37, scope: !8500)
!8508 = !DILocation(line: 2915, column: 13, scope: !8500)
!8509 = !DILocation(line: 0, scope: !8500)
!8510 = !DILocation(line: 2921, column: 56, scope: !8511)
!8511 = distinct !DILexicalBlock(scope: !8512, file: !1156, line: 2921, column: 5)
!8512 = distinct !DILexicalBlock(scope: !8421, file: !1156, line: 2921, column: 5)
!8513 = !DILocation(line: 2921, column: 5, scope: !8512)
!8514 = !DILocation(line: 2921, column: 35, scope: !8512)
!8515 = !DILocation(line: 2921, column: 22, scope: !8512)
!8516 = !DILocation(line: 2922, column: 9, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8511, file: !1156, line: 2921, column: 99)
!8518 = !DILocation(line: 2929, column: 9, scope: !8517)
!8519 = !DILocation(line: 2938, column: 26, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8517, file: !1156, line: 2929, column: 26)
!8521 = !DILocation(line: 2939, column: 37, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8520, file: !1156, line: 2939, column: 17)
!8523 = !DILocation(line: 2939, column: 17, scope: !8520)
!8524 = distinct !{!8524, !8518, !8525}
!8525 = !DILocation(line: 2943, column: 9, scope: !8517)
!8526 = !DILocation(line: 2921, column: 71, scope: !8511)
!8527 = !DILocation(line: 2921, column: 85, scope: !8511)
!8528 = distinct !{!8528, !8513, !8529}
!8529 = !DILocation(line: 2983, column: 5, scope: !8512)
!8530 = !DILocation(line: 2985, column: 21, scope: !8421)
!8531 = !DILocation(line: 2992, column: 9, scope: !8421)
!8532 = !DILocation(line: 3000, column: 5, scope: !8421)
!8533 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1156, file: !1156, line: 2533, type: !1638, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8534)
!8534 = !{!8535, !8536, !8537, !8538, !8539, !8540, !8541, !8542, !8543, !8544, !8545, !8546, !8547, !8548}
!8535 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8533, file: !1156, line: 2533, type: !88)
!8536 = !DILocalVariable(name: "Address", arg: 2, scope: !8533, file: !1156, line: 2533, type: !88)
!8537 = !DILocalVariable(name: "Data", arg: 3, scope: !8533, file: !1156, line: 2533, type: !88)
!8538 = !DILocalVariable(name: "Length", arg: 4, scope: !8533, file: !1156, line: 2533, type: !61)
!8539 = !DILocalVariable(name: "D", scope: !8533, file: !1156, line: 2535, type: !1326)
!8540 = !DILocalVariable(name: "savedMask", scope: !8533, file: !1156, line: 2536, type: !61)
!8541 = !DILocalVariable(name: "address", scope: !8533, file: !1156, line: 2537, type: !61)
!8542 = !DILocalVariable(name: "p_data", scope: !8533, file: !1156, line: 2538, type: !849)
!8543 = !DILocalVariable(name: "p_data_first", scope: !8533, file: !1156, line: 2539, type: !849)
!8544 = !DILocalVariable(name: "result", scope: !8533, file: !1156, line: 2540, type: !1032)
!8545 = !DILocalVariable(name: "written", scope: !8533, file: !1156, line: 2541, type: !61)
!8546 = !DILocalVariable(name: "length", scope: !8533, file: !1156, line: 2542, type: !61)
!8547 = !DILocalVariable(name: "cmd1", scope: !8533, file: !1156, line: 2543, type: !61)
!8548 = !DILocalVariable(name: "j", scope: !8549, file: !1156, line: 2599, type: !61)
!8549 = distinct !DILexicalBlock(scope: !8550, file: !1156, line: 2597, column: 61)
!8550 = distinct !DILexicalBlock(scope: !8551, file: !1156, line: 2597, column: 13)
!8551 = distinct !DILexicalBlock(scope: !8533, file: !1156, line: 2583, column: 25)
!8552 = !DILocation(line: 0, scope: !8533)
!8553 = !DILocation(line: 2535, column: 26, scope: !8533)
!8554 = !DILocation(line: 2537, column: 37, scope: !8533)
!8555 = !DILocation(line: 2538, column: 5, scope: !8533)
!8556 = !DILocation(line: 2538, column: 19, scope: !8533)
!8557 = !DILocation(line: 2542, column: 5, scope: !8533)
!8558 = !DILocation(line: 2545, column: 5, scope: !8559)
!8559 = distinct !DILexicalBlock(scope: !8560, file: !1156, line: 2545, column: 5)
!8560 = distinct !DILexicalBlock(scope: !8533, file: !1156, line: 2545, column: 5)
!8561 = !DILocation(line: 2545, column: 5, scope: !8560)
!8562 = !DILocation(line: 2545, column: 5, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8559, file: !1156, line: 2545, column: 5)
!8564 = !DILocation(line: 2567, column: 9, scope: !8533)
!8565 = !DILocation(line: 2569, column: 8, scope: !8533)
!8566 = !DILocation(line: 2569, column: 21, scope: !8533)
!8567 = !DILocation(line: 2576, column: 5, scope: !8533)
!8568 = !DILocation(line: 2577, column: 18, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8533, file: !1156, line: 2576, column: 10)
!8570 = !DILocation(line: 2579, column: 34, scope: !8533)
!8571 = !DILocation(line: 2579, column: 5, scope: !8569)
!8572 = distinct !{!8572, !8567, !8573}
!8573 = !DILocation(line: 2579, column: 43, scope: !8533)
!8574 = !DILocation(line: 2583, column: 14, scope: !8533)
!8575 = !DILocation(line: 2583, column: 5, scope: !8533)
!8576 = !DILocation(line: 2584, column: 27, scope: !8551)
!8577 = !DILocation(line: 2592, column: 18, scope: !8551)
!8578 = !DILocation(line: 2592, column: 35, scope: !8551)
!8579 = !DILocation(line: 2592, column: 74, scope: !8551)
!8580 = !DILocation(line: 2592, column: 50, scope: !8551)
!8581 = !DILocation(line: 2592, column: 39, scope: !8551)
!8582 = !DILocation(line: 2595, column: 37, scope: !8551)
!8583 = !DILocation(line: 2595, column: 29, scope: !8551)
!8584 = !DILocation(line: 2595, column: 16, scope: !8551)
!8585 = !DILocation(line: 2597, column: 13, scope: !8550)
!8586 = !DILocation(line: 2597, column: 30, scope: !8550)
!8587 = !DILocation(line: 2597, column: 13, scope: !8551)
!8588 = !DILocation(line: 0, scope: !8549)
!8589 = !DILocation(line: 2600, column: 27, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !1156, line: 2600, column: 13)
!8591 = distinct !DILexicalBlock(scope: !8549, file: !1156, line: 2600, column: 13)
!8592 = !DILocation(line: 2600, column: 13, scope: !8591)
!8593 = !DILocation(line: 2601, column: 38, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8590, file: !1156, line: 2600, column: 42)
!8595 = !DILocation(line: 2601, column: 17, scope: !8594)
!8596 = !DILocation(line: 2601, column: 36, scope: !8594)
!8597 = !DILocation(line: 2600, column: 38, scope: !8590)
!8598 = distinct !{!8598, !8592, !8599}
!8599 = !DILocation(line: 2602, column: 13, scope: !8591)
!8600 = !DILocation(line: 0, scope: !8551)
!8601 = !DILocation(line: 2606, column: 18, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8551, file: !1156, line: 2606, column: 13)
!8603 = !DILocation(line: 2606, column: 29, scope: !8602)
!8604 = !DILocation(line: 2606, column: 13, scope: !8551)
!8605 = !DILocation(line: 2607, column: 13, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8602, file: !1156, line: 2606, column: 55)
!8607 = !DILocation(line: 2608, column: 9, scope: !8606)
!8608 = !DILocation(line: 2613, column: 16, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8551, file: !1156, line: 2613, column: 13)
!8610 = !DILocation(line: 2613, column: 29, scope: !8609)
!8611 = !DILocation(line: 0, scope: !8609)
!8612 = !DILocation(line: 2613, column: 13, scope: !8551)
!8613 = !DILocation(line: 2614, column: 20, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8609, file: !1156, line: 2613, column: 35)
!8615 = !DILocation(line: 2615, column: 32, scope: !8614)
!8616 = !DILocation(line: 2615, column: 40, scope: !8614)
!8617 = !DILocation(line: 2615, column: 13, scope: !8614)
!8618 = !DILocation(line: 2616, column: 9, scope: !8614)
!8619 = !DILocation(line: 2619, column: 20, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8609, file: !1156, line: 2618, column: 9)
!8621 = !DILocation(line: 2620, column: 32, scope: !8620)
!8622 = !DILocation(line: 2620, column: 40, scope: !8620)
!8623 = !DILocation(line: 2620, column: 13, scope: !8620)
!8624 = !DILocation(line: 2626, column: 21, scope: !8551)
!8625 = !DILocation(line: 2633, column: 37, scope: !8551)
!8626 = !DILocation(line: 2634, column: 45, scope: !8551)
!8627 = !DILocation(line: 2634, column: 42, scope: !8551)
!8628 = !DILocation(line: 2634, column: 40, scope: !8551)
!8629 = !DILocation(line: 2634, column: 58, scope: !8551)
!8630 = !DILocation(line: 2634, column: 29, scope: !8551)
!8631 = !DILocation(line: 2635, column: 28, scope: !8551)
!8632 = !DILocation(line: 2636, column: 9, scope: !8551)
!8633 = !DILocation(line: 2638, column: 26, scope: !8551)
!8634 = !DILocation(line: 2638, column: 9, scope: !8551)
!8635 = !DILocation(line: 2639, column: 29, scope: !8551)
!8636 = !DILocation(line: 2639, column: 9, scope: !8551)
!8637 = !DILocation(line: 2662, column: 9, scope: !8551)
!8638 = !DILocation(line: 2670, column: 9, scope: !8551)
!8639 = !DILocation(line: 2676, column: 89, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !8551, file: !1156, line: 2670, column: 13)
!8641 = !DILocation(line: 2676, column: 26, scope: !8640)
!8642 = !DILocation(line: 2678, column: 36, scope: !8551)
!8643 = !DILocation(line: 2678, column: 9, scope: !8640)
!8644 = distinct !{!8644, !8638, !8645}
!8645 = !DILocation(line: 2678, column: 45, scope: !8551)
!8646 = !DILocation(line: 2718, column: 19, scope: !8551)
!8647 = !DILocation(line: 2718, column: 16, scope: !8551)
!8648 = !DILocation(line: 2719, column: 16, scope: !8551)
!8649 = !DILocation(line: 2722, column: 31, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8551, file: !1156, line: 2722, column: 13)
!8651 = !DILocation(line: 2722, column: 13, scope: !8551)
!8652 = distinct !{!8652, !8575, !8653}
!8653 = !DILocation(line: 2725, column: 5, scope: !8533)
!8654 = !DILocation(line: 2748, column: 21, scope: !8533)
!8655 = !DILocation(line: 2755, column: 9, scope: !8533)
!8656 = !DILocation(line: 2757, column: 16, scope: !8657)
!8657 = distinct !DILexicalBlock(scope: !8533, file: !1156, line: 2757, column: 9)
!8658 = !DILocation(line: 2761, column: 1, scope: !8533)
!8659 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1156, file: !1156, line: 3019, type: !1634, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8660)
!8660 = !{!8661, !8662}
!8661 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8659, file: !1156, line: 3019, type: !88)
!8662 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8659, file: !1156, line: 3019, type: !61)
!8663 = !DILocation(line: 0, scope: !8659)
!8664 = !DILocation(line: 3021, column: 5, scope: !8659)
!8665 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1156, file: !1156, line: 3124, type: !1643, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8666)
!8666 = !{!8667, !8668, !8669, !8670, !8671, !8672, !8673, !8674}
!8667 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8665, file: !1156, line: 3124, type: !88)
!8668 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8665, file: !1156, line: 3124, type: !61)
!8669 = !DILocalVariable(name: "result", scope: !8665, file: !1156, line: 3126, type: !1032)
!8670 = !DILocalVariable(name: "savedMask", scope: !8665, file: !1156, line: 3127, type: !61)
!8671 = !DILocalVariable(name: "D", scope: !8665, file: !1156, line: 3128, type: !1326)
!8672 = !DILocalVariable(name: "status_busy", scope: !8665, file: !1156, line: 3129, type: !1378)
!8673 = !DILocalVariable(name: "status_suspend", scope: !8665, file: !1156, line: 3129, type: !1378)
!8674 = !DILocalVariable(name: "check_status", scope: !8675, file: !1156, line: 3141, type: !1378)
!8675 = distinct !DILexicalBlock(scope: !8676, file: !1156, line: 3140, column: 56)
!8676 = distinct !DILexicalBlock(scope: !8665, file: !1156, line: 3140, column: 9)
!8677 = !DILocation(line: 0, scope: !8665)
!8678 = !DILocation(line: 3128, column: 47, scope: !8665)
!8679 = !DILocation(line: 3131, column: 5, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8681, file: !1156, line: 3131, column: 5)
!8681 = distinct !DILexicalBlock(scope: !8665, file: !1156, line: 3131, column: 5)
!8682 = !DILocation(line: 3131, column: 5, scope: !8681)
!8683 = !DILocation(line: 3131, column: 5, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8680, file: !1156, line: 3131, column: 5)
!8685 = !DILocation(line: 3134, column: 50, scope: !8665)
!8686 = !DILocation(line: 3134, column: 55, scope: !8665)
!8687 = !DILocation(line: 3134, column: 22, scope: !8665)
!8688 = !DILocation(line: 3135, column: 50, scope: !8665)
!8689 = !DILocation(line: 3135, column: 55, scope: !8665)
!8690 = !DILocation(line: 3135, column: 22, scope: !8665)
!8691 = !DILocation(line: 3138, column: 17, scope: !8665)
!8692 = !DILocation(line: 3140, column: 32, scope: !8676)
!8693 = !DILocation(line: 3140, column: 29, scope: !8676)
!8694 = !DILocation(line: 3140, column: 27, scope: !8676)
!8695 = !DILocation(line: 3140, column: 11, scope: !8676)
!8696 = !DILocation(line: 3140, column: 9, scope: !8665)
!8697 = !DILocation(line: 3141, column: 34, scope: !8675)
!8698 = !DILocation(line: 3141, column: 60, scope: !8675)
!8699 = !DILocation(line: 3141, column: 58, scope: !8675)
!8700 = !DILocation(line: 0, scope: !8675)
!8701 = !DILocation(line: 3144, column: 37, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8675, file: !1156, line: 3144, column: 13)
!8703 = !DILocation(line: 3144, column: 35, scope: !8702)
!8704 = !DILocation(line: 3144, column: 16, scope: !8702)
!8705 = !DILocation(line: 3144, column: 52, scope: !8702)
!8706 = !DILocation(line: 3145, column: 21, scope: !8702)
!8707 = !DILocation(line: 3145, column: 38, scope: !8702)
!8708 = !DILocation(line: 3147, column: 13, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8710, file: !1156, line: 3147, column: 13)
!8710 = distinct !DILexicalBlock(scope: !8711, file: !1156, line: 3147, column: 13)
!8711 = distinct !DILexicalBlock(scope: !8702, file: !1156, line: 3145, column: 61)
!8712 = !DILocation(line: 3147, column: 13, scope: !8710)
!8713 = !DILocation(line: 3147, column: 13, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8709, file: !1156, line: 3147, column: 13)
!8715 = !DILocation(line: 3150, column: 13, scope: !8711)
!8716 = !DILocation(line: 3151, column: 33, scope: !8711)
!8717 = !DILocation(line: 3153, column: 9, scope: !8711)
!8718 = !DILocation(line: 3155, column: 20, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8720, file: !1156, line: 3155, column: 17)
!8720 = distinct !DILexicalBlock(scope: !8702, file: !1156, line: 3153, column: 16)
!8721 = !DILocation(line: 3155, column: 31, scope: !8719)
!8722 = !DILocation(line: 3155, column: 17, scope: !8720)
!8723 = !DILocation(line: 3156, column: 36, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8719, file: !1156, line: 3155, column: 54)
!8725 = !DILocation(line: 3156, column: 17, scope: !8724)
!8726 = !DILocation(line: 3157, column: 36, scope: !8724)
!8727 = !DILocation(line: 3157, column: 17, scope: !8724)
!8728 = !DILocation(line: 3158, column: 13, scope: !8724)
!8729 = !DILocation(line: 3191, column: 5, scope: !8665)
!8730 = !DILocation(line: 3193, column: 9, scope: !8665)
!8731 = !DILocation(line: 3160, column: 13, scope: !8720)
!8732 = !DILocation(line: 3173, column: 13, scope: !8720)
!8733 = !DILocation(line: 3194, column: 18, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !1156, line: 3193, column: 32)
!8735 = distinct !DILexicalBlock(scope: !8665, file: !1156, line: 3193, column: 9)
!8736 = !DILocation(line: 3195, column: 5, scope: !8734)
!8737 = !DILocation(line: 3197, column: 5, scope: !8665)
!8738 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1156, file: !1156, line: 3225, type: !1634, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8739)
!8739 = !{!8740, !8741, !8742, !8743, !8744}
!8740 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8738, file: !1156, line: 3225, type: !88)
!8741 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8738, file: !1156, line: 3225, type: !61)
!8742 = !DILocalVariable(name: "D", scope: !8738, file: !1156, line: 3227, type: !1326)
!8743 = !DILocalVariable(name: "status", scope: !8738, file: !1156, line: 3228, type: !1378)
!8744 = !DILocalVariable(name: "savedMask", scope: !8738, file: !1156, line: 3229, type: !61)
!8745 = !DILocation(line: 0, scope: !8738)
!8746 = !DILocation(line: 3227, column: 30, scope: !8738)
!8747 = !DILocation(line: 3231, column: 17, scope: !8738)
!8748 = !DILocation(line: 3234, column: 5, scope: !8738)
!8749 = !DILocation(line: 3238, column: 5, scope: !8738)
!8750 = !DILocation(line: 3239, column: 46, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8738, file: !1156, line: 3238, column: 15)
!8752 = !DILocation(line: 3239, column: 51, scope: !8751)
!8753 = !DILocation(line: 3239, column: 18, scope: !8751)
!8754 = !DILocation(line: 3241, column: 31, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8751, file: !1156, line: 3241, column: 13)
!8756 = !DILocation(line: 3241, column: 28, scope: !8755)
!8757 = !DILocation(line: 3241, column: 26, scope: !8755)
!8758 = !DILocation(line: 3241, column: 15, scope: !8755)
!8759 = !DILocation(line: 3241, column: 13, scope: !8751)
!8760 = distinct !{!8760, !8749, !8761}
!8761 = !DILocation(line: 3244, column: 5, scope: !8738)
!8762 = !DILocation(line: 3246, column: 5, scope: !8738)
!8763 = !DILocation(line: 3248, column: 5, scope: !8738)
!8764 = !DILocation(line: 3250, column: 5, scope: !8738)
!8765 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1156, file: !1156, line: 3277, type: !1634, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8766)
!8766 = !{!8767, !8768, !8769}
!8767 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8765, file: !1156, line: 3277, type: !88)
!8768 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8765, file: !1156, line: 3277, type: !61)
!8769 = !DILocalVariable(name: "D", scope: !8765, file: !1156, line: 3279, type: !1326)
!8770 = !DILocation(line: 0, scope: !8765)
!8771 = !DILocation(line: 3279, column: 29, scope: !8765)
!8772 = !DILocation(line: 3281, column: 5, scope: !8765)
!8773 = !DILocation(line: 3282, column: 5, scope: !8765)
!8774 = !DILocation(line: 3283, column: 5, scope: !8765)
!8775 = !DILocation(line: 3285, column: 5, scope: !8765)
!8776 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1156, file: !1156, line: 3332, type: !1660, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8777)
!8777 = !{!8778, !8779, !8780}
!8778 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8776, file: !1156, line: 3332, type: !88)
!8779 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !8776, file: !1156, line: 3332, type: !88)
!8780 = !DILocalVariable(name: "ACTION", arg: 3, scope: !8776, file: !1156, line: 3332, type: !61)
!8781 = !DILocation(line: 0, scope: !8776)
!8782 = !DILocation(line: 3334, column: 5, scope: !8776)
!8783 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1156, file: !1156, line: 2350, type: !1668, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8784)
!8784 = !{!8785, !8786, !8787, !8788}
!8785 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8783, file: !1156, line: 2350, type: !88)
!8786 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !8783, file: !1156, line: 2350, type: !61)
!8787 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !8783, file: !1156, line: 2350, type: !88)
!8788 = !DILocalVariable(name: "D", scope: !8783, file: !1156, line: 2352, type: !1326)
!8789 = !DILocation(line: 0, scope: !8783)
!8790 = !DILocation(line: 2353, column: 9, scope: !8783)
!8791 = !DILocation(line: 2354, column: 12, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8793, file: !1156, line: 2353, column: 51)
!8793 = distinct !DILexicalBlock(scope: !8783, file: !1156, line: 2353, column: 9)
!8794 = !DILocation(line: 2354, column: 9, scope: !8792)
!8795 = !DILocation(line: 2355, column: 5, scope: !8792)
!8796 = !DILocation(line: 2356, column: 17, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8798, file: !1156, line: 2356, column: 13)
!8798 = distinct !DILexicalBlock(scope: !8799, file: !1156, line: 2355, column: 71)
!8799 = distinct !DILexicalBlock(scope: !8793, file: !1156, line: 2355, column: 16)
!8800 = !DILocation(line: 2356, column: 14, scope: !8797)
!8801 = !DILocation(line: 2356, column: 28, scope: !8797)
!8802 = !DILocation(line: 2356, column: 49, scope: !8797)
!8803 = !DILocation(line: 2356, column: 56, scope: !8797)
!8804 = !DILocation(line: 2356, column: 70, scope: !8797)
!8805 = !DILocation(line: 2356, column: 80, scope: !8797)
!8806 = !DILocation(line: 2356, column: 13, scope: !8798)
!8807 = !DILocation(line: 2361, column: 9, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8809, file: !1156, line: 2361, column: 9)
!8809 = distinct !DILexicalBlock(scope: !8810, file: !1156, line: 2361, column: 9)
!8810 = distinct !DILexicalBlock(scope: !8811, file: !1156, line: 2361, column: 9)
!8811 = distinct !DILexicalBlock(scope: !8799, file: !1156, line: 2359, column: 12)
!8812 = !DILocation(line: 2363, column: 5, scope: !8783)
!8813 = !DILocation(line: 2364, column: 1, scope: !8783)
!8814 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1156, file: !1156, line: 3355, type: !1428, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8815)
!8815 = !{!8816, !8817, !8818}
!8816 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8814, file: !1156, line: 3355, type: !88)
!8817 = !DILocalVariable(name: "D", scope: !8814, file: !1156, line: 3357, type: !1326)
!8818 = !DILocalVariable(name: "status", scope: !8814, file: !1156, line: 3358, type: !1126)
!8819 = !DILocation(line: 0, scope: !8814)
!8820 = !DILocation(line: 3366, column: 12, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8814, file: !1156, line: 3366, column: 9)
!8822 = !DILocation(line: 3366, column: 17, scope: !8821)
!8823 = !DILocation(line: 3366, column: 9, scope: !8821)
!8824 = !DILocation(line: 3366, column: 9, scope: !8814)
!8825 = !DILocation(line: 3357, column: 25, scope: !8814)
!8826 = !DILocation(line: 3367, column: 18, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8821, file: !1156, line: 3366, column: 33)
!8828 = !DILocation(line: 3368, column: 25, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8827, file: !1156, line: 3368, column: 13)
!8830 = !DILocation(line: 3368, column: 22, scope: !8829)
!8831 = !DILocation(line: 3368, column: 20, scope: !8829)
!8832 = !DILocation(line: 3368, column: 13, scope: !8827)
!8833 = !DILocation(line: 3373, column: 5, scope: !8814)
!8834 = !DILocation(line: 3374, column: 1, scope: !8814)
!8835 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1156, file: !1156, line: 3044, type: !8836, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8838)
!8836 = !DISubroutineType(types: !8837)
!8837 = !{!1032, !88, !61, !159}
!8838 = !{!8839, !8840, !8841, !8842, !8843, !8844, !8845, !8846}
!8839 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8835, file: !1156, line: 3044, type: !88)
!8840 = !DILocalVariable(name: "addr", arg: 2, scope: !8835, file: !1156, line: 3044, type: !61)
!8841 = !DILocalVariable(name: "data", arg: 3, scope: !8835, file: !1156, line: 3044, type: !159)
!8842 = !DILocalVariable(name: "savedMask", scope: !8835, file: !1156, line: 3046, type: !61)
!8843 = !DILocalVariable(name: "D", scope: !8835, file: !1156, line: 3047, type: !1326)
!8844 = !DILocalVariable(name: "result", scope: !8835, file: !1156, line: 3048, type: !1032)
!8845 = !DILocalVariable(name: "check_data", scope: !8835, file: !1156, line: 3049, type: !159)
!8846 = !DILocalVariable(name: "status_busy", scope: !8835, file: !1156, line: 3050, type: !1126)
!8847 = !DILocation(line: 0, scope: !8835)
!8848 = !DILocation(line: 3047, column: 43, scope: !8835)
!8849 = !DILocation(line: 3053, column: 47, scope: !8835)
!8850 = !DILocation(line: 3053, column: 52, scope: !8835)
!8851 = !DILocation(line: 3053, column: 19, scope: !8835)
!8852 = !DILocation(line: 3056, column: 9, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8835, file: !1156, line: 3056, column: 9)
!8854 = !DILocation(line: 3056, column: 9, scope: !8835)
!8855 = !DILocation(line: 3058, column: 9, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !1156, line: 3058, column: 9)
!8857 = distinct !DILexicalBlock(scope: !8858, file: !1156, line: 3058, column: 9)
!8858 = distinct !DILexicalBlock(scope: !8853, file: !1156, line: 3056, column: 28)
!8859 = !DILocation(line: 3058, column: 9, scope: !8857)
!8860 = !DILocation(line: 3058, column: 9, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8856, file: !1156, line: 3058, column: 9)
!8862 = !DILocation(line: 3060, column: 9, scope: !8858)
!8863 = !DILocation(line: 3062, column: 29, scope: !8858)
!8864 = !DILocation(line: 3063, column: 5, scope: !8858)
!8865 = !DILocation(line: 3065, column: 38, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8853, file: !1156, line: 3065, column: 15)
!8867 = !DILocation(line: 3065, column: 35, scope: !8866)
!8868 = !DILocation(line: 3065, column: 33, scope: !8866)
!8869 = !DILocation(line: 3065, column: 17, scope: !8866)
!8870 = !DILocation(line: 3065, column: 15, scope: !8853)
!8871 = !DILocation(line: 3066, column: 21, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8866, file: !1156, line: 3065, column: 62)
!8873 = !DILocation(line: 3068, column: 9, scope: !8872)
!8874 = !DILocation(line: 3071, column: 23, scope: !8872)
!8875 = !DILocation(line: 3071, column: 22, scope: !8872)
!8876 = !DILocation(line: 3073, column: 24, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8872, file: !1156, line: 3073, column: 13)
!8878 = !DILocation(line: 3073, column: 13, scope: !8872)
!8879 = !DILocation(line: 3078, column: 16, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8881, file: !1156, line: 3078, column: 16)
!8881 = distinct !DILexicalBlock(scope: !8877, file: !1156, line: 3075, column: 16)
!8882 = !DILocation(line: 3078, column: 16, scope: !8881)
!8883 = !DILocation(line: 3081, column: 58, scope: !8884)
!8884 = distinct !DILexicalBlock(scope: !8880, file: !1156, line: 3078, column: 46)
!8885 = !DILocation(line: 3081, column: 17, scope: !8884)
!8886 = !DILocation(line: 3082, column: 22, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8884, file: !1156, line: 3082, column: 21)
!8888 = !DILocation(line: 3082, column: 49, scope: !8887)
!8889 = !DILocation(line: 3082, column: 21, scope: !8884)
!8890 = !DILocation(line: 3088, column: 9, scope: !8872)
!8891 = !DILocation(line: 3091, column: 9, scope: !8835)
!8892 = !DILocation(line: 3092, column: 13, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8894, file: !1156, line: 3092, column: 13)
!8894 = distinct !DILexicalBlock(scope: !8835, file: !1156, line: 3091, column: 9)
!8895 = !DILocation(line: 3092, column: 33, scope: !8893)
!8896 = !DILocation(line: 3092, column: 13, scope: !8894)
!8897 = !DILocation(line: 3106, column: 5, scope: !8835)
!8898 = !DILocation(line: 3107, column: 1, scope: !8835)
!8899 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1156, file: !1156, line: 3497, type: !8900, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8902)
!8900 = !DISubroutineType(types: !8901)
!8901 = !{null, !1326, !61}
!8902 = !{!8903, !8904, !8905}
!8903 = !DILocalVariable(name: "D", arg: 1, scope: !8899, file: !1156, line: 3497, type: !1326)
!8904 = !DILocalVariable(name: "addr", arg: 2, scope: !8899, file: !1156, line: 3497, type: !61)
!8905 = !DILocalVariable(name: "savedMask", scope: !8899, file: !1156, line: 3499, type: !61)
!8906 = !DILocation(line: 0, scope: !8899)
!8907 = !DILocation(line: 3501, column: 14, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8899, file: !1156, line: 3501, column: 9)
!8909 = !DILocation(line: 3501, column: 25, scope: !8908)
!8910 = !DILocation(line: 3501, column: 9, scope: !8899)
!8911 = !DILocation(line: 3502, column: 9, scope: !8912)
!8912 = distinct !DILexicalBlock(scope: !8908, file: !1156, line: 3501, column: 51)
!8913 = !DILocation(line: 3503, column: 5, scope: !8912)
!8914 = !DILocation(line: 3507, column: 17, scope: !8899)
!8915 = !DILocation(line: 3516, column: 5, scope: !8899)
!8916 = !DILocation(line: 3517, column: 31, scope: !8899)
!8917 = !DILocation(line: 3517, column: 38, scope: !8899)
!8918 = !DILocation(line: 3517, column: 43, scope: !8899)
!8919 = !DILocation(line: 3517, column: 59, scope: !8899)
!8920 = !DILocation(line: 3517, column: 56, scope: !8899)
!8921 = !DILocation(line: 3517, column: 5, scope: !8899)
!8922 = !DILocation(line: 3523, column: 5, scope: !8899)
!8923 = !DILocation(line: 3524, column: 1, scope: !8899)
!8924 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1156, file: !1156, line: 2018, type: !8025, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8925)
!8925 = !{!8926, !8927, !8928}
!8926 = !DILocalVariable(name: "driver", arg: 1, scope: !8924, file: !1156, line: 2018, type: !8027)
!8927 = !DILocalVariable(name: "D", arg: 2, scope: !8924, file: !1156, line: 2018, type: !1326)
!8928 = !DILocalVariable(name: "result", scope: !8924, file: !1156, line: 2020, type: !1032)
!8929 = !DILocation(line: 0, scope: !8924)
!8930 = !DILocation(line: 2022, column: 13, scope: !8924)
!8931 = !DILocation(line: 2022, column: 5, scope: !8924)
!8932 = !DILocation(line: 2031, column: 16, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8924, file: !1156, line: 2022, column: 31)
!8934 = !DILocation(line: 2031, column: 27, scope: !8933)
!8935 = !DILocation(line: 2033, column: 22, scope: !8933)
!8936 = !DILocation(line: 2034, column: 13, scope: !8933)
!8937 = !DILocation(line: 2049, column: 16, scope: !8933)
!8938 = !DILocation(line: 2049, column: 27, scope: !8933)
!8939 = !DILocation(line: 2051, column: 23, scope: !8933)
!8940 = !DILocation(line: 2053, column: 13, scope: !8933)
!8941 = !DILocation(line: 2058, column: 22, scope: !8933)
!8942 = !DILocation(line: 2059, column: 13, scope: !8933)
!8943 = !DILocation(line: 2079, column: 13, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8945, file: !1156, line: 2079, column: 13)
!8945 = distinct !DILexicalBlock(scope: !8946, file: !1156, line: 2079, column: 13)
!8946 = distinct !DILexicalBlock(scope: !8933, file: !1156, line: 2079, column: 13)
!8947 = !DILocation(line: 2083, column: 5, scope: !8924)
!8948 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1156, file: !1156, line: 2100, type: !8949, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8951)
!8949 = !DISubroutineType(types: !8950)
!8950 = !{!1032, !8027, !1326, !61, !61}
!8951 = !{!8952, !8953, !8954, !8955, !8956}
!8952 = !DILocalVariable(name: "driver", arg: 1, scope: !8948, file: !1156, line: 2100, type: !8027)
!8953 = !DILocalVariable(name: "D", arg: 2, scope: !8948, file: !1156, line: 2100, type: !1326)
!8954 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !8948, file: !1156, line: 2100, type: !61)
!8955 = !DILocalVariable(name: "parameter", arg: 4, scope: !8948, file: !1156, line: 2100, type: !61)
!8956 = !DILocalVariable(name: "result", scope: !8948, file: !1156, line: 2102, type: !1032)
!8957 = !DILocation(line: 0, scope: !8948)
!8958 = !DILocation(line: 2105, column: 16, scope: !8959)
!8959 = distinct !DILexicalBlock(scope: !8948, file: !1156, line: 2105, column: 9)
!8960 = !DILocation(line: 2105, column: 24, scope: !8959)
!8961 = !DILocation(line: 2109, column: 12, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8948, file: !1156, line: 2109, column: 9)
!8963 = !DILocation(line: 2109, column: 16, scope: !8962)
!8964 = !DILocation(line: 2109, column: 24, scope: !8962)
!8965 = !DILocation(line: 2109, column: 30, scope: !8962)
!8966 = !DILocation(line: 2109, column: 40, scope: !8962)
!8967 = !DILocation(line: 2109, column: 9, scope: !8948)
!8968 = !DILocation(line: 2118, column: 19, scope: !8948)
!8969 = !DILocation(line: 2118, column: 8, scope: !8948)
!8970 = !DILocation(line: 2118, column: 17, scope: !8948)
!8971 = !DILocation(line: 2119, column: 23, scope: !8948)
!8972 = !DILocation(line: 2119, column: 8, scope: !8948)
!8973 = !DILocation(line: 2119, column: 21, scope: !8948)
!8974 = !DILocation(line: 2122, column: 5, scope: !8948)
!8975 = !DILocation(line: 2125, column: 8, scope: !8948)
!8976 = !DILocation(line: 2125, column: 13, scope: !8948)
!8977 = !DILocation(line: 2125, column: 24, scope: !8948)
!8978 = !DILocation(line: 2126, column: 26, scope: !8948)
!8979 = !DILocation(line: 2126, column: 5, scope: !8948)
!8980 = !DILocation(line: 2128, column: 9, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8948, file: !1156, line: 2128, column: 9)
!8982 = !DILocation(line: 2128, column: 31, scope: !8981)
!8983 = !DILocation(line: 2128, column: 60, scope: !8981)
!8984 = !DILocation(line: 2128, column: 9, scope: !8948)
!8985 = !DILocation(line: 2129, column: 12, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8981, file: !1156, line: 2128, column: 110)
!8987 = !DILocation(line: 2129, column: 17, scope: !8986)
!8988 = !DILocation(line: 2129, column: 28, scope: !8986)
!8989 = !DILocation(line: 2130, column: 9, scope: !8986)
!8990 = !DILocation(line: 2131, column: 5, scope: !8986)
!8991 = !DILocation(line: 2134, column: 14, scope: !8948)
!8992 = !DILocation(line: 2136, column: 5, scope: !8948)
!8993 = !DILocation(line: 2137, column: 1, scope: !8948)
!8994 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1156, file: !1156, line: 3387, type: !8995, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !8997)
!8995 = !DISubroutineType(types: !8996)
!8996 = !{null, !1326, !849}
!8997 = !{!8998, !8999, !9000}
!8998 = !DILocalVariable(name: "D", arg: 1, scope: !8994, file: !1156, line: 3387, type: !1326)
!8999 = !DILocalVariable(name: "id", arg: 2, scope: !8994, file: !1156, line: 3387, type: !849)
!9000 = !DILocalVariable(name: "cmd", scope: !8994, file: !1156, line: 3389, type: !159)
!9001 = !DILocation(line: 0, scope: !8994)
!9002 = !DILocation(line: 3389, column: 5, scope: !8994)
!9003 = !DILocation(line: 3405, column: 9, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !8994, file: !1156, line: 3405, column: 9)
!9005 = !DILocation(line: 3405, column: 21, scope: !9004)
!9006 = !DILocation(line: 0, scope: !9004)
!9007 = !DILocation(line: 3405, column: 9, scope: !8994)
!9008 = !DILocation(line: 3411, column: 31, scope: !8994)
!9009 = !DILocation(line: 3411, column: 5, scope: !8994)
!9010 = !DILocation(line: 3412, column: 1, scope: !8994)
!9011 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1156, file: !1156, line: 3585, type: !9012, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1155, retainedNodes: !9014)
!9012 = !DISubroutineType(types: !9013)
!9013 = !{null, !6794, !849, !849, !6794, !6794}
!9014 = !{!9015, !9016, !9017, !9018, !9019, !9020}
!9015 = !DILocalVariable(name: "CS", arg: 1, scope: !9011, file: !1156, line: 3585, type: !6794)
!9016 = !DILocalVariable(name: "cmd", arg: 2, scope: !9011, file: !1156, line: 3585, type: !849)
!9017 = !DILocalVariable(name: "data", arg: 3, scope: !9011, file: !1156, line: 3585, type: !849)
!9018 = !DILocalVariable(name: "outl", arg: 4, scope: !9011, file: !1156, line: 3585, type: !6794)
!9019 = !DILocalVariable(name: "inl", arg: 5, scope: !9011, file: !1156, line: 3585, type: !6794)
!9020 = !DILocalVariable(name: "savedMask", scope: !9011, file: !1156, line: 3587, type: !61)
!9021 = !DILocation(line: 0, scope: !9011)
!9022 = !DILocation(line: 3589, column: 17, scope: !9011)
!9023 = !DILocation(line: 3590, column: 5, scope: !9011)
!9024 = !DILocation(line: 3591, column: 5, scope: !9011)
!9025 = !DILocation(line: 3593, column: 1, scope: !9011)
!9026 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1481, file: !1481, line: 110, type: !7272, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1480, retainedNodes: !9027)
!9027 = !{!9028, !9029, !9030, !9031}
!9028 = !DILocalVariable(name: "id", arg: 1, scope: !9026, file: !1481, line: 110, type: !849)
!9029 = !DILocalVariable(name: "i", scope: !9026, file: !1481, line: 114, type: !1032)
!9030 = !DILocalVariable(name: "j", scope: !9026, file: !1481, line: 114, type: !1032)
!9031 = !DILocalVariable(name: "id_list", scope: !9026, file: !1481, line: 115, type: !9032)
!9032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9033, size: 32)
!9033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1559)
!9034 = !DILocation(line: 0, scope: !9026)
!9035 = !DILocation(line: 119, column: 5, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9026, file: !1481, line: 119, column: 5)
!9037 = !DILocation(line: 119, column: 46, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9036, file: !1481, line: 119, column: 5)
!9039 = !DILocation(line: 119, column: 19, scope: !9038)
!9040 = distinct !{!9040, !9035, !9041}
!9041 = !DILocation(line: 131, column: 5, scope: !9036)
!9042 = !DILocation(line: 121, column: 23, scope: !9043)
!9043 = distinct !DILexicalBlock(scope: !9044, file: !1481, line: 121, column: 9)
!9044 = distinct !DILexicalBlock(scope: !9045, file: !1481, line: 121, column: 9)
!9045 = distinct !DILexicalBlock(scope: !9038, file: !1481, line: 119, column: 50)
!9046 = !DILocation(line: 121, column: 9, scope: !9044)
!9047 = !DILocation(line: 122, column: 17, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9049, file: !1481, line: 122, column: 17)
!9049 = distinct !DILexicalBlock(scope: !9043, file: !1481, line: 121, column: 51)
!9050 = !DILocation(line: 122, column: 37, scope: !9048)
!9051 = !DILocation(line: 122, column: 34, scope: !9048)
!9052 = !DILocation(line: 122, column: 17, scope: !9049)
!9053 = !DILocation(line: 121, column: 47, scope: !9043)
!9054 = distinct !{!9054, !9046, !9055}
!9055 = !DILocation(line: 125, column: 9, scope: !9044)
!9056 = !DILocation(line: 0, scope: !9044)
!9057 = !DILocation(line: 127, column: 15, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9045, file: !1481, line: 127, column: 13)
!9059 = !DILocation(line: 127, column: 13, scope: !9045)
!9060 = !DILocation(line: 134, column: 1, scope: !9026)
!9061 = distinct !DISubprogram(name: "CMEM_Index", scope: !1481, file: !1481, line: 153, type: !7427, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1480, retainedNodes: !9062)
!9062 = !{!9063, !9064, !9065, !9072}
!9063 = !DILocalVariable(name: "i", scope: !9061, file: !1481, line: 156, type: !1032)
!9064 = !DILocalVariable(name: "j", scope: !9061, file: !1481, line: 156, type: !1032)
!9065 = !DILocalVariable(name: "id", scope: !9061, file: !1481, line: 157, type: !9066)
!9066 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1552, line: 89, baseType: !9067)
!9067 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1552, line: 86, size: 64, elements: !9068)
!9068 = !{!9069, !9070}
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !9067, file: !1552, line: 87, baseType: !1565, size: 64)
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !9067, file: !1552, line: 88, baseType: !9071, size: 64)
!9071 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1126, size: 64, elements: !506)
!9072 = !DILocalVariable(name: "id_list", scope: !9061, file: !1481, line: 158, type: !9032)
!9073 = !DILocation(line: 157, column: 5, scope: !9061)
!9074 = !DILocation(line: 157, column: 17, scope: !9061)
!9075 = !DILocation(line: 0, scope: !9061)
!9076 = !DILocation(line: 161, column: 9, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9061, file: !1481, line: 161, column: 9)
!9078 = !DILocation(line: 161, column: 20, scope: !9077)
!9079 = !DILocation(line: 161, column: 9, scope: !9061)
!9080 = !DILocation(line: 172, column: 58, scope: !9061)
!9081 = !DILocation(line: 172, column: 5, scope: !9061)
!9082 = !DILocation(line: 178, column: 5, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9061, file: !1481, line: 178, column: 5)
!9084 = !DILocation(line: 180, column: 23, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9086, file: !1481, line: 180, column: 9)
!9086 = distinct !DILexicalBlock(scope: !9087, file: !1481, line: 180, column: 9)
!9087 = distinct !DILexicalBlock(scope: !9088, file: !1481, line: 178, column: 53)
!9088 = distinct !DILexicalBlock(scope: !9083, file: !1481, line: 178, column: 5)
!9089 = !DILocation(line: 180, column: 9, scope: !9086)
!9090 = !DILocation(line: 181, column: 17, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9092, file: !1481, line: 181, column: 17)
!9092 = distinct !DILexicalBlock(scope: !9085, file: !1481, line: 180, column: 51)
!9093 = !DILocation(line: 181, column: 37, scope: !9091)
!9094 = !DILocation(line: 181, column: 34, scope: !9091)
!9095 = !DILocation(line: 181, column: 17, scope: !9092)
!9096 = !DILocation(line: 180, column: 47, scope: !9085)
!9097 = distinct !{!9097, !9089, !9098}
!9098 = !DILocation(line: 184, column: 9, scope: !9086)
!9099 = !DILocation(line: 0, scope: !9086)
!9100 = !DILocation(line: 186, column: 15, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9087, file: !1481, line: 186, column: 13)
!9102 = !DILocation(line: 186, column: 13, scope: !9087)
!9103 = !DILocation(line: 188, column: 26, scope: !9104)
!9104 = distinct !DILexicalBlock(scope: !9101, file: !1481, line: 186, column: 41)
!9105 = !DILocation(line: 188, column: 24, scope: !9104)
!9106 = !DILocation(line: 189, column: 13, scope: !9104)
!9107 = !DILocation(line: 178, column: 46, scope: !9088)
!9108 = !DILocation(line: 178, column: 19, scope: !9088)
!9109 = distinct !{!9109, !9082, !9110}
!9110 = !DILocation(line: 191, column: 5, scope: !9083)
!9111 = !DILocation(line: 222, column: 12, scope: !9061)
!9112 = !DILocation(line: 223, column: 1, scope: !9061)
!9113 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1481, file: !1481, line: 240, type: !9114, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1480, retainedNodes: !9116)
!9114 = !DISubroutineType(types: !9115)
!9115 = !{!9032, !61}
!9116 = !{!9117}
!9117 = !DILocalVariable(name: "index", arg: 1, scope: !9113, file: !1481, line: 240, type: !61)
!9118 = !DILocation(line: 0, scope: !9113)
!9119 = !DILocation(line: 242, column: 13, scope: !9113)
!9120 = !DILocation(line: 242, column: 5, scope: !9113)
!9121 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1481, file: !1481, line: 254, type: !9122, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1480, retainedNodes: !9124)
!9122 = !DISubroutineType(types: !9123)
!9123 = !{null, !6794, !88, !1125}
!9124 = !{!9125, !9126, !9127, !9128, !9130, !9131}
!9125 = !DILocalVariable(name: "CS", arg: 1, scope: !9121, file: !1481, line: 254, type: !6794)
!9126 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9121, file: !1481, line: 254, type: !88)
!9127 = !DILocalVariable(name: "flashid", arg: 3, scope: !9121, file: !1481, line: 254, type: !1125)
!9128 = !DILocalVariable(name: "cmd", scope: !9129, file: !1481, line: 258, type: !159)
!9129 = distinct !DILexicalBlock(scope: !9121, file: !1481, line: 257, column: 5)
!9130 = !DILocalVariable(name: "id", scope: !9129, file: !1481, line: 258, type: !1416)
!9131 = !DILocalVariable(name: "i", scope: !9129, file: !1481, line: 258, type: !159)
!9132 = !DILocation(line: 0, scope: !9121)
!9133 = !DILocation(line: 258, column: 9, scope: !9129)
!9134 = !DILocation(line: 258, column: 22, scope: !9129)
!9135 = !DILocation(line: 0, scope: !9129)
!9136 = !DILocation(line: 260, column: 13, scope: !9129)
!9137 = !DILocation(line: 261, column: 9, scope: !9129)
!9138 = !DILocation(line: 263, column: 13, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9129, file: !1481, line: 263, column: 13)
!9140 = !DILocation(line: 263, column: 27, scope: !9139)
!9141 = !DILocation(line: 263, column: 48, scope: !9139)
!9142 = !DILocation(line: 263, column: 13, scope: !9129)
!9143 = !DILocation(line: 264, column: 17, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9139, file: !1481, line: 263, column: 95)
!9145 = !DILocation(line: 265, column: 13, scope: !9144)
!9146 = !DILocation(line: 266, column: 9, scope: !9144)
!9147 = !DILocation(line: 268, column: 9, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9129, file: !1481, line: 268, column: 9)
!9149 = !DILocation(line: 269, column: 26, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9151, file: !1481, line: 268, column: 50)
!9151 = distinct !DILexicalBlock(scope: !9148, file: !1481, line: 268, column: 9)
!9152 = !DILocation(line: 269, column: 13, scope: !9150)
!9153 = !DILocation(line: 269, column: 24, scope: !9150)
!9154 = !DILocation(line: 268, column: 46, scope: !9151)
!9155 = !DILocation(line: 268, column: 23, scope: !9151)
!9156 = distinct !{!9156, !9147, !9157}
!9157 = !DILocation(line: 270, column: 9, scope: !9148)
!9158 = !DILocation(line: 271, column: 5, scope: !9121)
!9159 = !DILocation(line: 272, column: 5, scope: !9121)
!9160 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1481, file: !1481, line: 285, type: !7272, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1480, retainedNodes: !9161)
!9161 = !{!9162, !9163, !9164, !9165}
!9162 = !DILocalVariable(name: "id", arg: 1, scope: !9160, file: !1481, line: 285, type: !849)
!9163 = !DILocalVariable(name: "i", scope: !9160, file: !1481, line: 289, type: !1032)
!9164 = !DILocalVariable(name: "j", scope: !9160, file: !1481, line: 289, type: !1032)
!9165 = !DILocalVariable(name: "id_list", scope: !9160, file: !1481, line: 290, type: !9032)
!9166 = !DILocation(line: 0, scope: !9160)
!9167 = !DILocation(line: 294, column: 5, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9160, file: !1481, line: 294, column: 5)
!9169 = !DILocation(line: 294, column: 46, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9168, file: !1481, line: 294, column: 5)
!9171 = !DILocation(line: 294, column: 19, scope: !9170)
!9172 = distinct !{!9172, !9167, !9173}
!9173 = !DILocation(line: 306, column: 5, scope: !9168)
!9174 = !DILocation(line: 296, column: 23, scope: !9175)
!9175 = distinct !DILexicalBlock(scope: !9176, file: !1481, line: 296, column: 9)
!9176 = distinct !DILexicalBlock(scope: !9177, file: !1481, line: 296, column: 9)
!9177 = distinct !DILexicalBlock(scope: !9170, file: !1481, line: 294, column: 53)
!9178 = !DILocation(line: 296, column: 9, scope: !9176)
!9179 = !DILocation(line: 297, column: 17, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9181, file: !1481, line: 297, column: 17)
!9181 = distinct !DILexicalBlock(scope: !9175, file: !1481, line: 296, column: 51)
!9182 = !DILocation(line: 297, column: 37, scope: !9180)
!9183 = !DILocation(line: 297, column: 34, scope: !9180)
!9184 = !DILocation(line: 297, column: 17, scope: !9181)
!9185 = !DILocation(line: 296, column: 47, scope: !9175)
!9186 = distinct !{!9186, !9178, !9187}
!9187 = !DILocation(line: 300, column: 9, scope: !9176)
!9188 = !DILocation(line: 0, scope: !9176)
!9189 = !DILocation(line: 302, column: 15, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9177, file: !1481, line: 302, column: 13)
!9191 = !DILocation(line: 302, column: 13, scope: !9177)
!9192 = !DILocation(line: 310, column: 1, scope: !9160)
!9193 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1481, file: !1481, line: 328, type: !7427, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1480, retainedNodes: !9194)
!9194 = !{!9195, !9196, !9197, !9198}
!9195 = !DILocalVariable(name: "i", scope: !9193, file: !1481, line: 331, type: !1032)
!9196 = !DILocalVariable(name: "j", scope: !9193, file: !1481, line: 331, type: !1032)
!9197 = !DILocalVariable(name: "id", scope: !9193, file: !1481, line: 332, type: !9066)
!9198 = !DILocalVariable(name: "id_list", scope: !9193, file: !1481, line: 333, type: !9032)
!9199 = !DILocation(line: 332, column: 5, scope: !9193)
!9200 = !DILocation(line: 332, column: 17, scope: !9193)
!9201 = !DILocation(line: 0, scope: !9193)
!9202 = !DILocation(line: 336, column: 9, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9193, file: !1481, line: 336, column: 9)
!9204 = !DILocation(line: 336, column: 28, scope: !9203)
!9205 = !DILocation(line: 336, column: 9, scope: !9193)
!9206 = !DILocation(line: 344, column: 60, scope: !9193)
!9207 = !DILocation(line: 344, column: 5, scope: !9193)
!9208 = !DILocation(line: 350, column: 5, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9193, file: !1481, line: 350, column: 5)
!9210 = !DILocation(line: 352, column: 23, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9212, file: !1481, line: 352, column: 9)
!9212 = distinct !DILexicalBlock(scope: !9213, file: !1481, line: 352, column: 9)
!9213 = distinct !DILexicalBlock(scope: !9214, file: !1481, line: 350, column: 53)
!9214 = distinct !DILexicalBlock(scope: !9209, file: !1481, line: 350, column: 5)
!9215 = !DILocation(line: 352, column: 9, scope: !9212)
!9216 = !DILocation(line: 353, column: 17, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9218, file: !1481, line: 353, column: 17)
!9218 = distinct !DILexicalBlock(scope: !9211, file: !1481, line: 352, column: 51)
!9219 = !DILocation(line: 353, column: 37, scope: !9217)
!9220 = !DILocation(line: 353, column: 34, scope: !9217)
!9221 = !DILocation(line: 353, column: 17, scope: !9218)
!9222 = !DILocation(line: 352, column: 47, scope: !9211)
!9223 = distinct !{!9223, !9215, !9224}
!9224 = !DILocation(line: 356, column: 9, scope: !9212)
!9225 = !DILocation(line: 0, scope: !9212)
!9226 = !DILocation(line: 358, column: 15, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9213, file: !1481, line: 358, column: 13)
!9228 = !DILocation(line: 358, column: 13, scope: !9213)
!9229 = !DILocation(line: 360, column: 34, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9227, file: !1481, line: 358, column: 41)
!9231 = !DILocation(line: 360, column: 32, scope: !9230)
!9232 = !DILocation(line: 361, column: 13, scope: !9230)
!9233 = !DILocation(line: 350, column: 46, scope: !9214)
!9234 = !DILocation(line: 350, column: 19, scope: !9214)
!9235 = distinct !{!9235, !9208, !9236}
!9236 = !DILocation(line: 363, column: 5, scope: !9209)
!9237 = !DILocation(line: 364, column: 12, scope: !9193)
!9238 = !DILocation(line: 365, column: 1, scope: !9193)
!9239 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2622, file: !2622, line: 64, type: !9240, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2621, retainedNodes: !9246)
!9240 = !DISubroutineType(types: !9241)
!9241 = !{null, !6794, !9242, !1125}
!9242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9243, size: 32)
!9243 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !9244)
!9244 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9245, line: 158, baseType: !1126)
!9245 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!9246 = !{!9247, !9248, !9249, !9250, !9251, !9253, !9254}
!9247 = !DILocalVariable(name: "CS", arg: 1, scope: !9239, file: !2622, line: 64, type: !6794)
!9248 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9239, file: !2622, line: 64, type: !9242)
!9249 = !DILocalVariable(name: "flashid", arg: 3, scope: !9239, file: !2622, line: 64, type: !1125)
!9250 = !DILocalVariable(name: "savedMask", scope: !9239, file: !2622, line: 66, type: !61)
!9251 = !DILocalVariable(name: "cmd", scope: !9252, file: !2622, line: 70, type: !159)
!9252 = distinct !DILexicalBlock(scope: !9239, file: !2622, line: 69, column: 5)
!9253 = !DILocalVariable(name: "id", scope: !9252, file: !2622, line: 70, type: !1416)
!9254 = !DILocalVariable(name: "i", scope: !9252, file: !2622, line: 70, type: !159)
!9255 = !DILocation(line: 0, scope: !9239)
!9256 = !DILocation(line: 70, column: 9, scope: !9252)
!9257 = !DILocation(line: 70, column: 22, scope: !9252)
!9258 = !DILocation(line: 0, scope: !9252)
!9259 = !DILocation(line: 72, column: 13, scope: !9252)
!9260 = !DILocation(line: 73, column: 21, scope: !9252)
!9261 = !DILocation(line: 74, column: 9, scope: !9252)
!9262 = !DILocation(line: 75, column: 9, scope: !9252)
!9263 = !DILocation(line: 77, column: 13, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9252, file: !2622, line: 77, column: 13)
!9265 = !DILocation(line: 77, column: 27, scope: !9264)
!9266 = !DILocation(line: 77, column: 48, scope: !9264)
!9267 = !DILocation(line: 77, column: 13, scope: !9252)
!9268 = !DILocation(line: 78, column: 17, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9264, file: !2622, line: 77, column: 87)
!9270 = !DILocation(line: 79, column: 25, scope: !9269)
!9271 = !DILocation(line: 80, column: 13, scope: !9269)
!9272 = !DILocation(line: 81, column: 13, scope: !9269)
!9273 = !DILocation(line: 82, column: 9, scope: !9269)
!9274 = !DILocation(line: 84, column: 9, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9252, file: !2622, line: 84, column: 9)
!9276 = !DILocation(line: 85, column: 26, scope: !9277)
!9277 = distinct !DILexicalBlock(scope: !9278, file: !2622, line: 84, column: 50)
!9278 = distinct !DILexicalBlock(scope: !9275, file: !2622, line: 84, column: 9)
!9279 = !DILocation(line: 85, column: 13, scope: !9277)
!9280 = !DILocation(line: 85, column: 24, scope: !9277)
!9281 = !DILocation(line: 84, column: 46, scope: !9278)
!9282 = !DILocation(line: 84, column: 23, scope: !9278)
!9283 = distinct !{!9283, !9274, !9284}
!9284 = !DILocation(line: 86, column: 9, scope: !9275)
!9285 = !DILocation(line: 87, column: 5, scope: !9239)
!9286 = !DILocation(line: 89, column: 1, scope: !9239)
!9287 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1569, file: !1569, line: 248, type: !3836, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1568, retainedNodes: !345)
!9288 = !DILocation(line: 250, column: 5, scope: !9287)
!9289 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1569, file: !1569, line: 270, type: !3836, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1568, retainedNodes: !345)
!9290 = !DILocation(line: 272, column: 5, scope: !9289)
!9291 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1569, file: !1569, line: 294, type: !343, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1568, retainedNodes: !345)
!9292 = !DILocation(line: 296, column: 5, scope: !9291)
!9293 = !DILocation(line: 297, column: 5, scope: !9291)
!9294 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1569, file: !1569, line: 304, type: !343, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1568, retainedNodes: !345)
!9295 = !DILocation(line: 309, column: 5, scope: !9294)
!9296 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1569, file: !1569, line: 312, type: !343, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1568, retainedNodes: !345)
!9297 = !DILocation(line: 317, column: 5, scope: !9296)
!9298 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1569, file: !1569, line: 334, type: !3836, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1568, retainedNodes: !345)
!9299 = !DILocation(line: 336, column: 5, scope: !9298)
!9300 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1569, file: !1569, line: 353, type: !3836, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1568, retainedNodes: !345)
!9301 = !DILocation(line: 355, column: 5, scope: !9300)
!9302 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1569, file: !1569, line: 374, type: !343, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1568, retainedNodes: !345)
!9303 = !DILocation(line: 376, column: 5, scope: !9302)
!9304 = !DILocation(line: 377, column: 1, scope: !9302)
!9305 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1569, file: !1569, line: 395, type: !3836, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1568, retainedNodes: !345)
!9306 = !DILocation(line: 397, column: 5, scope: !9305)
!9307 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1569, file: !1569, line: 416, type: !3836, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1568, retainedNodes: !345)
!9308 = !DILocation(line: 418, column: 5, scope: !9307)
!9309 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1578, file: !1578, line: 254, type: !3836, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !345)
!9310 = !DILocation(line: 256, column: 32, scope: !9309)
!9311 = !DILocation(line: 257, column: 5, scope: !9309)
!9312 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1578, file: !1578, line: 269, type: !7427, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !345)
!9313 = !DILocation(line: 275, column: 24, scope: !9312)
!9314 = !DILocation(line: 278, column: 24, scope: !9312)
!9315 = !DILocation(line: 278, column: 33, scope: !9312)
!9316 = !DILocation(line: 278, column: 49, scope: !9312)
!9317 = !DILocation(line: 278, column: 22, scope: !9312)
!9318 = !DILocation(line: 281, column: 5, scope: !9312)
!9319 = !DILocation(line: 283, column: 34, scope: !9312)
!9320 = !DILocation(line: 283, column: 23, scope: !9312)
!9321 = !DILocation(line: 286, column: 25, scope: !9312)
!9322 = !DILocation(line: 321, column: 5, scope: !9312)
!9323 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1578, file: !1578, line: 332, type: !7427, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9324)
!9324 = !{!9325}
!9325 = !DILocalVariable(name: "result", scope: !9323, file: !1578, line: 334, type: !1032)
!9326 = !DILocation(line: 340, column: 30, scope: !9323)
!9327 = !DILocation(line: 343, column: 24, scope: !9323)
!9328 = !DILocation(line: 344, column: 18, scope: !9323)
!9329 = !DILocation(line: 348, column: 17, scope: !9323)
!9330 = !DILocation(line: 353, column: 19, scope: !9323)
!9331 = !DILocation(line: 354, column: 18, scope: !9323)
!9332 = !DILocation(line: 354, column: 27, scope: !9323)
!9333 = !DILocation(line: 354, column: 43, scope: !9323)
!9334 = !DILocation(line: 350, column: 14, scope: !9323)
!9335 = !DILocation(line: 0, scope: !9323)
!9336 = !DILocation(line: 356, column: 16, scope: !9337)
!9337 = distinct !DILexicalBlock(scope: !9323, file: !1578, line: 356, column: 9)
!9338 = !DILocation(line: 395, column: 1, scope: !9323)
!9339 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1578, file: !1578, line: 406, type: !9340, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !345)
!9340 = !DISubroutineType(types: !2574)
!9341 = !DILocation(line: 408, column: 5, scope: !9339)
!9342 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1578, file: !1578, line: 420, type: !9343, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9345)
!9343 = !DISubroutineType(types: !9344)
!9344 = !{!61, !159}
!9345 = !{!9346, !9347, !9348}
!9346 = !DILocalVariable(name: "CS", arg: 1, scope: !9342, file: !1578, line: 420, type: !159)
!9347 = !DILocalVariable(name: "index", scope: !9342, file: !1578, line: 422, type: !61)
!9348 = !DILocalVariable(name: "list", scope: !9342, file: !1578, line: 423, type: !1895)
!9349 = !DILocation(line: 0, scope: !9342)
!9350 = !DILocation(line: 427, column: 13, scope: !9342)
!9351 = !DILocation(line: 430, column: 34, scope: !9342)
!9352 = !DILocation(line: 430, column: 5, scope: !9342)
!9353 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1578, file: !1578, line: 442, type: !9354, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9356)
!9354 = !DISubroutineType(types: !9355)
!9355 = !{!61, !61, !1767}
!9356 = !{!9357, !9358, !9359}
!9357 = !DILocalVariable(name: "address", arg: 1, scope: !9353, file: !1578, line: 442, type: !61)
!9358 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !9353, file: !1578, line: 442, type: !1767)
!9359 = !DILocalVariable(name: "i", scope: !9353, file: !1578, line: 444, type: !1126)
!9360 = !DILocation(line: 0, scope: !9353)
!9361 = !DILocation(line: 446, column: 23, scope: !9353)
!9362 = !DILocation(line: 448, column: 36, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9364, file: !1578, line: 448, column: 5)
!9364 = distinct !DILexicalBlock(scope: !9353, file: !1578, line: 448, column: 5)
!9365 = !DILocation(line: 448, column: 41, scope: !9363)
!9366 = !DILocation(line: 448, column: 5, scope: !9364)
!9367 = !DILocation(line: 449, column: 39, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !1578, line: 449, column: 13)
!9369 = distinct !DILexicalBlock(scope: !9363, file: !1578, line: 448, column: 54)
!9370 = !DILocation(line: 449, column: 21, scope: !9368)
!9371 = !DILocation(line: 449, column: 46, scope: !9368)
!9372 = !DILocation(line: 450, column: 46, scope: !9368)
!9373 = !DILocation(line: 450, column: 25, scope: !9368)
!9374 = !DILocation(line: 449, column: 13, scope: !9369)
!9375 = !DILocation(line: 448, column: 48, scope: !9363)
!9376 = !DILocation(line: 448, column: 29, scope: !9363)
!9377 = !DILocation(line: 448, column: 31, scope: !9363)
!9378 = distinct !{!9378, !9366, !9379}
!9379 = !DILocation(line: 453, column: 5, scope: !9364)
!9380 = !DILocation(line: 454, column: 27, scope: !9353)
!9381 = !DILocation(line: 454, column: 5, scope: !9353)
!9382 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1578, file: !1578, line: 462, type: !3584, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9383)
!9383 = !{!9384}
!9384 = !DILocalVariable(name: "address", arg: 1, scope: !9382, file: !1578, line: 462, type: !61)
!9385 = !DILocation(line: 0, scope: !9382)
!9386 = !DILocation(line: 464, column: 45, scope: !9382)
!9387 = !DILocation(line: 464, column: 12, scope: !9382)
!9388 = !DILocation(line: 464, column: 5, scope: !9382)
!9389 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1578, file: !1578, line: 487, type: !3584, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9390)
!9390 = !{!9391, !9392, !9393}
!9391 = !DILocalVariable(name: "address", arg: 1, scope: !9389, file: !1578, line: 487, type: !61)
!9392 = !DILocalVariable(name: "index", scope: !9389, file: !1578, line: 490, type: !61)
!9393 = !DILocalVariable(name: "list", scope: !9389, file: !1578, line: 491, type: !1895)
!9394 = !DILocation(line: 0, scope: !9389)
!9395 = !DILocation(line: 490, column: 22, scope: !9389)
!9396 = !DILocation(line: 495, column: 45, scope: !9389)
!9397 = !DILocation(line: 495, column: 12, scope: !9389)
!9398 = !DILocation(line: 495, column: 5, scope: !9389)
!9399 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1578, file: !1578, line: 517, type: !9400, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9404)
!9400 = !DISubroutineType(types: !9401)
!9401 = !{!1032, !9402}
!9402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9403, size: 32)
!9403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1781)
!9404 = !{!9405, !9406, !9407}
!9405 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !9399, file: !1578, line: 517, type: !9402)
!9406 = !DILocalVariable(name: "result", scope: !9399, file: !1578, line: 519, type: !61)
!9407 = !DILocalVariable(name: "i", scope: !9399, file: !1578, line: 519, type: !61)
!9408 = !DILocation(line: 0, scope: !9399)
!9409 = !DILocation(line: 522, column: 29, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9411, file: !1578, line: 522, column: 5)
!9411 = distinct !DILexicalBlock(scope: !9399, file: !1578, line: 522, column: 5)
!9412 = !DILocation(line: 522, column: 38, scope: !9410)
!9413 = !DILocation(line: 522, column: 5, scope: !9411)
!9414 = !DILocation(line: 523, column: 31, scope: !9415)
!9415 = distinct !DILexicalBlock(scope: !9410, file: !1578, line: 522, column: 51)
!9416 = !DILocation(line: 523, column: 37, scope: !9415)
!9417 = !DILocation(line: 523, column: 16, scope: !9415)
!9418 = !DILocation(line: 522, column: 45, scope: !9410)
!9419 = distinct !{!9419, !9413, !9420}
!9420 = !DILocation(line: 524, column: 5, scope: !9411)
!9421 = !DILocation(line: 525, column: 5, scope: !9399)
!9422 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1578, file: !1578, line: 535, type: !9423, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9425)
!9423 = !DISubroutineType(types: !9424)
!9424 = !{!61, !61, !61, !1593, !1767}
!9425 = !{!9426, !9427, !9428, !9429, !9430, !9431, !9432, !9433, !9434}
!9426 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9422, file: !1578, line: 536, type: !61)
!9427 = !DILocalVariable(name: "length", arg: 2, scope: !9422, file: !1578, line: 537, type: !61)
!9428 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9422, file: !1578, line: 538, type: !1593)
!9429 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !9422, file: !1578, line: 539, type: !1767)
!9430 = !DILocalVariable(name: "addr", scope: !9422, file: !1578, line: 541, type: !61)
!9431 = !DILocalVariable(name: "ptr", scope: !9422, file: !1578, line: 541, type: !61)
!9432 = !DILocalVariable(name: "blksize", scope: !9422, file: !1578, line: 541, type: !61)
!9433 = !DILocalVariable(name: "total_blocks", scope: !9422, file: !1578, line: 541, type: !61)
!9434 = !DILocalVariable(name: "endaddr", scope: !9422, file: !1578, line: 542, type: !61)
!9435 = !DILocation(line: 0, scope: !9422)
!9436 = !DILocation(line: 542, column: 33, scope: !9422)
!9437 = !DILocation(line: 557, column: 59, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9439, file: !1578, line: 557, column: 5)
!9439 = distinct !DILexicalBlock(scope: !9422, file: !1578, line: 557, column: 5)
!9440 = !DILocation(line: 557, column: 5, scope: !9439)
!9441 = !DILocation(line: 560, column: 19, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9438, file: !1578, line: 559, column: 5)
!9443 = !DILocation(line: 562, column: 26, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9442, file: !1578, line: 562, column: 13)
!9445 = !DILocation(line: 0, scope: !9444)
!9446 = !DILocation(line: 562, column: 13, scope: !9442)
!9447 = !DILocation(line: 563, column: 39, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9444, file: !1578, line: 562, column: 34)
!9449 = !DILocation(line: 564, column: 29, scope: !9448)
!9450 = !DILocation(line: 564, column: 42, scope: !9448)
!9451 = !DILocation(line: 565, column: 9, scope: !9448)
!9452 = !DILocation(line: 567, column: 45, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9444, file: !1578, line: 567, column: 18)
!9454 = !DILocation(line: 567, column: 26, scope: !9453)
!9455 = !DILocation(line: 567, column: 18, scope: !9444)
!9456 = !DILocation(line: 568, column: 29, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9453, file: !1578, line: 567, column: 59)
!9458 = !DILocation(line: 568, column: 41, scope: !9457)
!9459 = !DILocation(line: 569, column: 9, scope: !9457)
!9460 = !DILocation(line: 572, column: 16, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9453, file: !1578, line: 571, column: 14)
!9462 = !DILocation(line: 573, column: 21, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9461, file: !1578, line: 573, column: 17)
!9464 = !DILocation(line: 573, column: 17, scope: !9461)
!9465 = !DILocation(line: 576, column: 29, scope: !9461)
!9466 = !DILocation(line: 576, column: 39, scope: !9461)
!9467 = !DILocation(line: 577, column: 29, scope: !9461)
!9468 = !DILocation(line: 577, column: 42, scope: !9461)
!9469 = !DILocation(line: 0, scope: !9439)
!9470 = !DILocation(line: 579, column: 14, scope: !9442)
!9471 = !DILocation(line: 580, column: 21, scope: !9442)
!9472 = distinct !{!9472, !9440, !9473}
!9473 = !DILocation(line: 581, column: 5, scope: !9439)
!9474 = !DILocation(line: 586, column: 1, scope: !9422)
!9475 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1578, file: !1578, line: 593, type: !9476, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9478)
!9476 = !DISubroutineType(types: !9477)
!9477 = !{!1032, !61, !61, !1593}
!9478 = !{!9479, !9480, !9481}
!9479 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9475, file: !1578, line: 593, type: !61)
!9480 = !DILocalVariable(name: "length", arg: 2, scope: !9475, file: !1578, line: 593, type: !61)
!9481 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9475, file: !1578, line: 593, type: !1593)
!9482 = !DILocation(line: 0, scope: !9475)
!9483 = !DILocation(line: 595, column: 12, scope: !9475)
!9484 = !DILocation(line: 595, column: 5, scope: !9475)
!9485 = !DILocation(line: 597, column: 81, scope: !9475)
!9486 = !DILocation(line: 597, column: 12, scope: !9475)
!9487 = !DILocation(line: 597, column: 5, scope: !9475)
!9488 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1578, file: !1578, line: 606, type: !9476, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9489)
!9489 = !{!9490, !9491, !9492}
!9490 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9488, file: !1578, line: 606, type: !61)
!9491 = !DILocalVariable(name: "length", arg: 2, scope: !9488, file: !1578, line: 606, type: !61)
!9492 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9488, file: !1578, line: 606, type: !1593)
!9493 = !DILocation(line: 0, scope: !9488)
!9494 = !DILocation(line: 624, column: 5, scope: !9488)
!9495 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1578, file: !1578, line: 637, type: !9476, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9496)
!9496 = !{!9497, !9498, !9499, !9500, !9501}
!9497 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9495, file: !1578, line: 637, type: !61)
!9498 = !DILocalVariable(name: "length", arg: 2, scope: !9495, file: !1578, line: 637, type: !61)
!9499 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9495, file: !1578, line: 637, type: !1593)
!9500 = !DILocalVariable(name: "index", scope: !9495, file: !1578, line: 642, type: !61)
!9501 = !DILocalVariable(name: "list", scope: !9495, file: !1578, line: 644, type: !1895)
!9502 = !DILocation(line: 0, scope: !9495)
!9503 = !DILocation(line: 642, column: 22, scope: !9495)
!9504 = !DILocation(line: 648, column: 81, scope: !9495)
!9505 = !DILocation(line: 648, column: 12, scope: !9495)
!9506 = !DILocation(line: 648, column: 5, scope: !9495)
!9507 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1578, file: !1578, line: 658, type: !9476, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9508)
!9508 = !{!9509, !9510, !9511}
!9509 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9507, file: !1578, line: 658, type: !61)
!9510 = !DILocalVariable(name: "length", arg: 2, scope: !9507, file: !1578, line: 658, type: !61)
!9511 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9507, file: !1578, line: 658, type: !1593)
!9512 = !DILocation(line: 0, scope: !9507)
!9513 = !DILocation(line: 688, column: 5, scope: !9507)
!9514 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1578, file: !1578, line: 700, type: !6861, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9515)
!9515 = !{!9516, !9517, !9518}
!9516 = !DILocalVariable(name: "CS", arg: 1, scope: !9514, file: !1578, line: 700, type: !6794)
!9517 = !DILocalVariable(name: "index", scope: !9514, file: !1578, line: 705, type: !61)
!9518 = !DILocalVariable(name: "list", scope: !9514, file: !1578, line: 707, type: !1895)
!9519 = !DILocation(line: 0, scope: !9514)
!9520 = !DILocation(line: 705, column: 22, scope: !9514)
!9521 = !DILocation(line: 711, column: 24, scope: !9514)
!9522 = !DILocation(line: 711, column: 5, scope: !9514)
!9523 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1578, file: !1578, line: 721, type: !9524, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9526)
!9524 = !DISubroutineType(types: !9525)
!9525 = !{null, !1813, !1094, !61}
!9526 = !{!9527, !9528, !9529}
!9527 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !9523, file: !1578, line: 721, type: !1813)
!9528 = !DILocalVariable(name: "index", arg: 2, scope: !9523, file: !1578, line: 721, type: !1094)
!9529 = !DILocalVariable(name: "bankSize", arg: 3, scope: !9523, file: !1578, line: 721, type: !61)
!9530 = !DILocation(line: 0, scope: !9523)
!9531 = !DILocation(line: 723, column: 18, scope: !9532)
!9532 = distinct !DILexicalBlock(scope: !9523, file: !1578, line: 723, column: 9)
!9533 = !DILocation(line: 723, column: 26, scope: !9532)
!9534 = !DILocation(line: 723, column: 35, scope: !9532)
!9535 = !DILocation(line: 723, column: 9, scope: !9523)
!9536 = !DILocation(line: 724, column: 26, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9532, file: !1578, line: 723, column: 48)
!9538 = !DILocation(line: 724, column: 32, scope: !9537)
!9539 = !DILocation(line: 725, column: 5, scope: !9537)
!9540 = !DILocation(line: 726, column: 18, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9532, file: !1578, line: 725, column: 12)
!9542 = !DILocation(line: 727, column: 26, scope: !9541)
!9543 = !DILocation(line: 727, column: 32, scope: !9541)
!9544 = !DILocation(line: 728, column: 18, scope: !9541)
!9545 = !DILocation(line: 728, column: 26, scope: !9541)
!9546 = !DILocation(line: 728, column: 35, scope: !9541)
!9547 = !DILocation(line: 731, column: 1, scope: !9523)
!9548 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1578, file: !1578, line: 739, type: !9549, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9551)
!9549 = !DISubroutineType(types: !9550)
!9550 = !{!61, !61, !61, !1813, !9402}
!9551 = !{!9552, !9553, !9554, !9555, !9556, !9557, !9558, !9559, !9560}
!9552 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9548, file: !1578, line: 740, type: !61)
!9553 = !DILocalVariable(name: "length", arg: 2, scope: !9548, file: !1578, line: 741, type: !61)
!9554 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !9548, file: !1578, line: 742, type: !1813)
!9555 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !9548, file: !1578, line: 743, type: !9402)
!9556 = !DILocalVariable(name: "Partition", scope: !9548, file: !1578, line: 745, type: !61)
!9557 = !DILocalVariable(name: "Index", scope: !9548, file: !1578, line: 746, type: !1032)
!9558 = !DILocalVariable(name: "bankSize", scope: !9548, file: !1578, line: 747, type: !61)
!9559 = !DILocalVariable(name: "NextBankAddr", scope: !9548, file: !1578, line: 748, type: !61)
!9560 = !DILocalVariable(name: "srcBankIdx", scope: !9548, file: !1578, line: 748, type: !61)
!9561 = !DILocation(line: 0, scope: !9548)
!9562 = !DILocation(line: 750, column: 12, scope: !9548)
!9563 = !DILocation(line: 750, column: 5, scope: !9548)
!9564 = !DILocation(line: 752, column: 51, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9566, file: !1578, line: 752, column: 5)
!9566 = distinct !DILexicalBlock(scope: !9548, file: !1578, line: 752, column: 5)
!9567 = !DILocation(line: 752, column: 5, scope: !9566)
!9568 = !DILocation(line: 753, column: 51, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9570, file: !1578, line: 753, column: 13)
!9570 = distinct !DILexicalBlock(scope: !9565, file: !1578, line: 752, column: 70)
!9571 = !DILocation(line: 753, column: 24, scope: !9569)
!9572 = !DILocation(line: 753, column: 13, scope: !9570)
!9573 = !DILocation(line: 758, column: 49, scope: !9570)
!9574 = !DILocation(line: 758, column: 22, scope: !9570)
!9575 = !DILocation(line: 760, column: 22, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9570, file: !1578, line: 760, column: 13)
!9577 = !DILocation(line: 760, column: 13, scope: !9570)
!9578 = !DILocation(line: 761, column: 37, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9576, file: !1578, line: 760, column: 39)
!9580 = !DILocation(line: 762, column: 24, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9579, file: !1578, line: 762, column: 17)
!9582 = !DILocation(line: 762, column: 17, scope: !9579)
!9583 = !DILocation(line: 767, column: 33, scope: !9584)
!9584 = distinct !DILexicalBlock(scope: !9579, file: !1578, line: 767, column: 17)
!9585 = !DILocation(line: 767, column: 42, scope: !9584)
!9586 = !DILocation(line: 767, column: 17, scope: !9579)
!9587 = !DILocation(line: 768, column: 33, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9584, file: !1578, line: 767, column: 55)
!9589 = !DILocation(line: 768, column: 39, scope: !9588)
!9590 = !DILocation(line: 769, column: 13, scope: !9588)
!9591 = !DILocation(line: 770, column: 46, scope: !9592)
!9592 = distinct !DILexicalBlock(scope: !9593, file: !1578, line: 770, column: 21)
!9593 = distinct !DILexicalBlock(scope: !9584, file: !1578, line: 769, column: 20)
!9594 = !DILocation(line: 770, column: 21, scope: !9593)
!9595 = !DILocation(line: 773, column: 33, scope: !9593)
!9596 = !DILocation(line: 773, column: 39, scope: !9593)
!9597 = !DILocation(line: 774, column: 33, scope: !9593)
!9598 = !DILocation(line: 774, column: 42, scope: !9593)
!9599 = !DILocation(line: 777, column: 22, scope: !9579)
!9600 = !DILocation(line: 778, column: 20, scope: !9579)
!9601 = !DILocation(line: 779, column: 9, scope: !9579)
!9602 = !DILocation(line: 746, column: 13, scope: !9548)
!9603 = !DILocation(line: 752, column: 66, scope: !9565)
!9604 = distinct !{!9604, !9567, !9605}
!9605 = !DILocation(line: 781, column: 5, scope: !9566)
!9606 = !DILocation(line: 784, column: 5, scope: !9548)
!9607 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1578, file: !1578, line: 796, type: !7427, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9608)
!9608 = !{!9609, !9610}
!9609 = !DILocalVariable(name: "result", scope: !9607, file: !1578, line: 798, type: !1032)
!9610 = !DILocalVariable(name: "i", scope: !9607, file: !1578, line: 799, type: !1032)
!9611 = !DILocation(line: 803, column: 19, scope: !9607)
!9612 = !DILocation(line: 803, column: 28, scope: !9607)
!9613 = !DILocation(line: 803, column: 17, scope: !9607)
!9614 = !DILocation(line: 822, column: 33, scope: !9607)
!9615 = !DILocation(line: 822, column: 56, scope: !9607)
!9616 = !DILocation(line: 822, column: 88, scope: !9607)
!9617 = !DILocation(line: 822, column: 97, scope: !9607)
!9618 = !DILocation(line: 822, column: 5, scope: !9607)
!9619 = !DILocation(line: 829, column: 39, scope: !9607)
!9620 = !DILocation(line: 829, column: 62, scope: !9607)
!9621 = !DILocation(line: 829, column: 14, scope: !9607)
!9622 = !DILocation(line: 0, scope: !9607)
!9623 = !DILocation(line: 834, column: 16, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9607, file: !1578, line: 834, column: 9)
!9625 = !DILocation(line: 834, column: 9, scope: !9607)
!9626 = !DILocation(line: 838, column: 30, scope: !9627)
!9627 = distinct !DILexicalBlock(scope: !9607, file: !1578, line: 838, column: 5)
!9628 = !DILocation(line: 838, column: 58, scope: !9627)
!9629 = !DILocation(line: 838, column: 78, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9627, file: !1578, line: 838, column: 5)
!9631 = !DILocation(line: 838, column: 88, scope: !9630)
!9632 = !DILocation(line: 838, column: 5, scope: !9627)
!9633 = !DILocation(line: 839, column: 39, scope: !9634)
!9634 = distinct !DILexicalBlock(scope: !9630, file: !1578, line: 838, column: 102)
!9635 = !DILocation(line: 839, column: 22, scope: !9634)
!9636 = !DILocation(line: 840, column: 37, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9634, file: !1578, line: 840, column: 13)
!9638 = !DILocation(line: 840, column: 13, scope: !9634)
!9639 = !DILocation(line: 841, column: 36, scope: !9640)
!9640 = distinct !DILexicalBlock(scope: !9637, file: !1578, line: 840, column: 63)
!9641 = !DILocation(line: 842, column: 9, scope: !9640)
!9642 = !DILocation(line: 838, column: 95, scope: !9630)
!9643 = distinct !{!9643, !9632, !9644}
!9644 = !DILocation(line: 843, column: 5, scope: !9627)
!9645 = !DILocation(line: 871, column: 49, scope: !9607)
!9646 = !DILocation(line: 871, column: 72, scope: !9607)
!9647 = !DILocation(line: 871, column: 47, scope: !9607)
!9648 = !DILocation(line: 871, column: 97, scope: !9607)
!9649 = !DILocation(line: 871, column: 19, scope: !9607)
!9650 = !DILocation(line: 882, column: 14, scope: !9607)
!9651 = !DILocation(line: 887, column: 13, scope: !9607)
!9652 = !DILocation(line: 887, column: 22, scope: !9607)
!9653 = !DILocation(line: 887, column: 5, scope: !9607)
!9654 = !DILocation(line: 889, column: 22, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9607, file: !1578, line: 887, column: 34)
!9656 = !DILocation(line: 890, column: 13, scope: !9655)
!9657 = !DILocation(line: 902, column: 1, scope: !9607)
!9658 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1578, file: !1578, line: 912, type: !9659, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9661)
!9659 = !DISubroutineType(types: !9660)
!9660 = !{null, !859}
!9661 = !{!9662}
!9662 = !DILocalVariable(name: "CS", arg: 1, scope: !9658, file: !1578, line: 912, type: !859)
!9663 = !DILocation(line: 0, scope: !9658)
!9664 = !DILocation(line: 914, column: 12, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9658, file: !1578, line: 914, column: 9)
!9666 = !DILocation(line: 914, column: 9, scope: !9658)
!9667 = !DILocation(line: 918, column: 26, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9665, file: !1578, line: 914, column: 18)
!9669 = !DILocation(line: 918, column: 24, scope: !9668)
!9670 = !DILocation(line: 920, column: 28, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9668, file: !1578, line: 920, column: 13)
!9672 = !DILocation(line: 920, column: 13, scope: !9668)
!9673 = !DILocation(line: 921, column: 13, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9675, file: !1578, line: 921, column: 13)
!9675 = distinct !DILexicalBlock(scope: !9676, file: !1578, line: 921, column: 13)
!9676 = distinct !DILexicalBlock(scope: !9677, file: !1578, line: 921, column: 13)
!9677 = distinct !DILexicalBlock(scope: !9671, file: !1578, line: 920, column: 33)
!9678 = !DILocation(line: 923, column: 19, scope: !9668)
!9679 = !DILocation(line: 923, column: 17, scope: !9668)
!9680 = !DILocation(line: 924, column: 5, scope: !9668)
!9681 = !DILocation(line: 935, column: 14, scope: !9658)
!9682 = !DILocation(line: 936, column: 1, scope: !9658)
!9683 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1578, file: !1578, line: 952, type: !7427, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !345)
!9684 = !DILocation(line: 955, column: 5, scope: !9683)
!9685 = !DILocation(line: 956, column: 12, scope: !9683)
!9686 = !DILocation(line: 956, column: 5, scope: !9683)
!9687 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1578, file: !1578, line: 974, type: !7427, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1577, retainedNodes: !9688)
!9688 = !{!9689}
!9689 = !DILocalVariable(name: "result", scope: !9687, file: !1578, line: 976, type: !1032)
!9690 = !DILocation(line: 981, column: 5, scope: !9687)
!9691 = !DILocation(line: 986, column: 24, scope: !9687)
!9692 = !DILocation(line: 986, column: 33, scope: !9687)
!9693 = !DILocation(line: 986, column: 49, scope: !9687)
!9694 = !DILocation(line: 986, column: 22, scope: !9687)
!9695 = !DILocation(line: 1002, column: 19, scope: !9687)
!9696 = !DILocation(line: 1002, column: 17, scope: !9687)
!9697 = !DILocation(line: 1014, column: 22, scope: !9687)
!9698 = !DILocation(line: 1014, column: 5, scope: !9687)
!9699 = !DILocation(line: 1024, column: 33, scope: !9687)
!9700 = !DILocation(line: 1026, column: 27, scope: !9687)
!9701 = !DILocation(line: 1027, column: 26, scope: !9687)
!9702 = !DILocation(line: 1042, column: 33, scope: !9687)
!9703 = !DILocation(line: 1044, column: 32, scope: !9687)
!9704 = !DILocation(line: 1052, column: 18, scope: !9687)
!9705 = !DILocation(line: 1052, column: 27, scope: !9687)
!9706 = !DILocation(line: 1052, column: 43, scope: !9687)
!9707 = !DILocation(line: 1048, column: 14, scope: !9687)
!9708 = !DILocation(line: 0, scope: !9687)
!9709 = !DILocation(line: 1063, column: 5, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9711, file: !1578, line: 1063, column: 5)
!9711 = distinct !DILexicalBlock(scope: !9687, file: !1578, line: 1063, column: 5)
!9712 = !DILocation(line: 1063, column: 5, scope: !9711)
!9713 = !DILocation(line: 1063, column: 5, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9710, file: !1578, line: 1063, column: 5)
!9715 = !DILocation(line: 1096, column: 36, scope: !9687)
!9716 = !DILocation(line: 1096, column: 34, scope: !9687)
!9717 = !DILocation(line: 1101, column: 5, scope: !9687)
!9718 = !DILocation(line: 1103, column: 34, scope: !9687)
!9719 = !DILocation(line: 1109, column: 35, scope: !9687)
!9720 = !DILocation(line: 1110, column: 33, scope: !9687)
!9721 = !DILocation(line: 1111, column: 34, scope: !9687)
!9722 = !DILocation(line: 1113, column: 5, scope: !9687)
!9723 = distinct !DISubprogram(name: "CreateFDMLock", scope: !1936, file: !1936, line: 84, type: !343, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !345)
!9724 = !DILocation(line: 86, column: 1, scope: !9723)
!9725 = distinct !DISubprogram(name: "GetFDMLock", scope: !1936, file: !1936, line: 87, type: !7893, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !9726)
!9726 = !{!9727}
!9727 = !DILocalVariable(name: "savedMask", scope: !9725, file: !1936, line: 89, type: !1032)
!9728 = !DILocation(line: 90, column: 17, scope: !9725)
!9729 = !DILocation(line: 0, scope: !9725)
!9730 = !DILocation(line: 91, column: 9, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9725, file: !1936, line: 91, column: 9)
!9732 = !DILocation(line: 91, column: 9, scope: !9725)
!9733 = !DILocation(line: 92, column: 17, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9731, file: !1936, line: 91, column: 24)
!9735 = !DILocation(line: 94, column: 9, scope: !9734)
!9736 = !DILocation(line: 0, scope: !9731)
!9737 = !DILocation(line: 102, column: 1, scope: !9725)
!9738 = distinct !DISubprogram(name: "FreeFDMLock", scope: !1936, file: !1936, line: 103, type: !343, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !9739)
!9739 = !{!9740}
!9740 = !DILocalVariable(name: "savedMask", scope: !9738, file: !1936, line: 105, type: !1032)
!9741 = !DILocation(line: 106, column: 17, scope: !9738)
!9742 = !DILocation(line: 0, scope: !9738)
!9743 = !DILocation(line: 107, column: 9, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9738, file: !1936, line: 107, column: 9)
!9745 = !DILocation(line: 107, column: 9, scope: !9738)
!9746 = !DILocation(line: 108, column: 17, scope: !9747)
!9747 = distinct !DILexicalBlock(scope: !9744, file: !1936, line: 107, column: 24)
!9748 = !DILocation(line: 109, column: 9, scope: !9747)
!9749 = !DILocation(line: 114, column: 1, scope: !9738)
!9750 = !DILocation(line: 111, column: 9, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9744, file: !1936, line: 110, column: 12)
!9752 = !DILocation(line: 112, column: 9, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9754, file: !1936, line: 112, column: 9)
!9754 = distinct !DILexicalBlock(scope: !9755, file: !1936, line: 112, column: 9)
!9755 = distinct !DILexicalBlock(scope: !9751, file: !1936, line: 112, column: 9)
!9756 = distinct !DISubprogram(name: "create_FDM_lock", scope: !1936, file: !1936, line: 119, type: !343, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !345)
!9757 = !DILocation(line: 123, column: 1, scope: !9756)
!9758 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !1936, file: !1936, line: 130, type: !343, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !9759)
!9759 = !{!9760}
!9760 = !DILocalVariable(name: "Result", scope: !9758, file: !1936, line: 132, type: !1992)
!9761 = !DILocation(line: 133, column: 5, scope: !9758)
!9762 = !DILocation(line: 134, column: 18, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9758, file: !1936, line: 133, column: 8)
!9764 = !DILocation(line: 0, scope: !9758)
!9765 = !DILocation(line: 135, column: 21, scope: !9758)
!9766 = !DILocation(line: 135, column: 5, scope: !9763)
!9767 = distinct !{!9767, !9761, !9768}
!9768 = !DILocation(line: 135, column: 43, scope: !9758)
!9769 = !DILocation(line: 136, column: 1, scope: !9758)
!9770 = distinct !DISubprogram(name: "release_FDM_lock", scope: !1936, file: !1936, line: 143, type: !343, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !345)
!9771 = !DILocation(line: 147, column: 5, scope: !9770)
!9772 = !DILocation(line: 148, column: 1, scope: !9770)
!9773 = distinct !DISubprogram(name: "readRawDiskData", scope: !1936, file: !1936, line: 216, type: !9774, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !9815)
!9774 = !DISubroutineType(types: !9775)
!9775 = !{!1032, !9776, !61, !849, !61}
!9776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9777, size: 32)
!9777 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1883, line: 93, baseType: !9778)
!9778 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1883, line: 83, size: 1056, elements: !9779)
!9779 = !{!9780, !9781, !9801, !9802, !9814}
!9780 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !9778, file: !1883, line: 84, baseType: !61, size: 32)
!9781 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !9778, file: !1883, line: 85, baseType: !9782, size: 32, offset: 32)
!9782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9783, size: 32)
!9783 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1352, line: 121, baseType: !9784)
!9784 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 105, size: 480, elements: !9785)
!9785 = !{!9786, !9787, !9788, !9789, !9790, !9791, !9792, !9793, !9794, !9795, !9796, !9797, !9798, !9799, !9800}
!9786 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9784, file: !1352, line: 106, baseType: !1624, size: 32)
!9787 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9784, file: !1352, line: 107, baseType: !1427, size: 32, offset: 32)
!9788 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9784, file: !1352, line: 108, baseType: !1629, size: 32, offset: 64)
!9789 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9784, file: !1352, line: 109, baseType: !1633, size: 32, offset: 96)
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9784, file: !1352, line: 110, baseType: !1637, size: 32, offset: 128)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9784, file: !1352, line: 111, baseType: !1633, size: 32, offset: 160)
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9784, file: !1352, line: 112, baseType: !1642, size: 32, offset: 192)
!9793 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9784, file: !1352, line: 113, baseType: !1633, size: 32, offset: 224)
!9794 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9784, file: !1352, line: 114, baseType: !1633, size: 32, offset: 256)
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9784, file: !1352, line: 115, baseType: !1633, size: 32, offset: 288)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9784, file: !1352, line: 116, baseType: !1649, size: 32, offset: 320)
!9797 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9784, file: !1352, line: 117, baseType: !1654, size: 32, offset: 352)
!9798 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9784, file: !1352, line: 118, baseType: !1659, size: 32, offset: 384)
!9799 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9784, file: !1352, line: 119, baseType: !1663, size: 32, offset: 416)
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9784, file: !1352, line: 120, baseType: !1667, size: 32, offset: 448)
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !9778, file: !1883, line: 86, baseType: !88, size: 32, offset: 64)
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !9778, file: !1883, line: 87, baseType: !9803, size: 928, offset: 96)
!9803 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1352, line: 99, baseType: !9804)
!9804 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1352, line: 90, size: 928, elements: !9805)
!9805 = !{!9806, !9807, !9808, !9809, !9810, !9811, !9812, !9813}
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9804, file: !1352, line: 91, baseType: !61, size: 32)
!9807 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9804, file: !1352, line: 92, baseType: !1681, size: 256, offset: 32)
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9804, file: !1352, line: 93, baseType: !1681, size: 256, offset: 288)
!9809 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9804, file: !1352, line: 94, baseType: !1681, size: 256, offset: 544)
!9810 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9804, file: !1352, line: 95, baseType: !61, size: 32, offset: 800)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9804, file: !1352, line: 96, baseType: !1673, size: 16, offset: 832)
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9804, file: !1352, line: 97, baseType: !61, size: 32, offset: 864)
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9804, file: !1352, line: 98, baseType: !61, size: 32, offset: 896)
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !9778, file: !1883, line: 92, baseType: !91, size: 8, offset: 1024)
!9815 = !{!9816, !9817, !9818, !9819, !9820, !9821}
!9816 = !DILocalVariable(name: "D", arg: 1, scope: !9773, file: !1936, line: 216, type: !9776)
!9817 = !DILocalVariable(name: "addr", arg: 2, scope: !9773, file: !1936, line: 216, type: !61)
!9818 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9773, file: !1936, line: 216, type: !849)
!9819 = !DILocalVariable(name: "len", arg: 4, scope: !9773, file: !1936, line: 216, type: !61)
!9820 = !DILocalVariable(name: "phyAddr", scope: !9773, file: !1936, line: 219, type: !61)
!9821 = !DILocalVariable(name: "diskSize", scope: !9773, file: !1936, line: 220, type: !61)
!9822 = !DILocation(line: 0, scope: !9773)
!9823 = !DILocation(line: 220, column: 28, scope: !9773)
!9824 = !DILocation(line: 222, column: 14, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9773, file: !1936, line: 222, column: 9)
!9826 = !DILocation(line: 222, column: 26, scope: !9825)
!9827 = !DILocation(line: 225, column: 51, scope: !9773)
!9828 = !DILocation(line: 225, column: 61, scope: !9773)
!9829 = !DILocation(line: 225, column: 15, scope: !9773)
!9830 = !DILocation(line: 225, column: 70, scope: !9773)
!9831 = !DILocation(line: 227, column: 13, scope: !9832)
!9832 = distinct !DILexicalBlock(scope: !9773, file: !1936, line: 227, column: 9)
!9833 = !DILocation(line: 227, column: 9, scope: !9773)
!9834 = !DILocation(line: 228, column: 9, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9832, file: !1936, line: 227, column: 23)
!9836 = !DILocation(line: 229, column: 5, scope: !9835)
!9837 = !DILocation(line: 231, column: 5, scope: !9773)
!9838 = !DILocation(line: 233, column: 22, scope: !9773)
!9839 = !DILocation(line: 233, column: 5, scope: !9773)
!9840 = !DILocation(line: 235, column: 5, scope: !9773)
!9841 = !DILocation(line: 237, column: 5, scope: !9773)
!9842 = !DILocation(line: 238, column: 1, scope: !9773)
!9843 = distinct !DISubprogram(name: "MountDevice", scope: !1936, file: !1936, line: 165, type: !9844, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !9846)
!9844 = !DISubroutineType(types: !9845)
!9845 = !{null, !9776}
!9846 = !{!9847, !9848}
!9847 = !DILocalVariable(name: "D", arg: 1, scope: !9843, file: !1936, line: 165, type: !9776)
!9848 = !DILocalVariable(name: "Result", scope: !9843, file: !1936, line: 167, type: !1032)
!9849 = !DILocation(line: 0, scope: !9843)
!9850 = !DILocation(line: 171, column: 12, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9843, file: !1936, line: 171, column: 9)
!9852 = !DILocation(line: 171, column: 9, scope: !9843)
!9853 = !DILocation(line: 176, column: 5, scope: !9843)
!9854 = !DILocation(line: 186, column: 17, scope: !9843)
!9855 = !DILocation(line: 186, column: 28, scope: !9843)
!9856 = !DILocation(line: 186, column: 43, scope: !9843)
!9857 = !DILocation(line: 186, column: 64, scope: !9843)
!9858 = !DILocation(line: 186, column: 52, scope: !9843)
!9859 = !DILocation(line: 186, column: 14, scope: !9843)
!9860 = !DILocation(line: 188, column: 5, scope: !9843)
!9861 = !DILocation(line: 190, column: 16, scope: !9862)
!9862 = distinct !DILexicalBlock(scope: !9843, file: !1936, line: 190, column: 9)
!9863 = !DILocation(line: 190, column: 9, scope: !9843)
!9864 = !DILocation(line: 191, column: 9, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9866, file: !1936, line: 191, column: 9)
!9866 = distinct !DILexicalBlock(scope: !9867, file: !1936, line: 191, column: 9)
!9867 = distinct !DILexicalBlock(scope: !9868, file: !1936, line: 191, column: 9)
!9868 = distinct !DILexicalBlock(scope: !9862, file: !1936, line: 190, column: 31)
!9869 = !DILocation(line: 194, column: 17, scope: !9843)
!9870 = !DILocation(line: 195, column: 1, scope: !9843)
!9871 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1936, file: !1936, line: 277, type: !9774, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !9872)
!9872 = !{!9873, !9874, !9875, !9876, !9877, !9878, !9879, !9880, !9881, !9882, !9886, !9887, !9888, !9893}
!9873 = !DILocalVariable(name: "D", arg: 1, scope: !9871, file: !1936, line: 277, type: !9776)
!9874 = !DILocalVariable(name: "addr", arg: 2, scope: !9871, file: !1936, line: 277, type: !61)
!9875 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9871, file: !1936, line: 277, type: !849)
!9876 = !DILocalVariable(name: "len", arg: 4, scope: !9871, file: !1936, line: 277, type: !61)
!9877 = !DILocalVariable(name: "dest", scope: !9871, file: !1936, line: 279, type: !61)
!9878 = !DILocalVariable(name: "src", scope: !9871, file: !1936, line: 279, type: !61)
!9879 = !DILocalVariable(name: "diskSize", scope: !9871, file: !1936, line: 280, type: !61)
!9880 = !DILocalVariable(name: "result", scope: !9871, file: !1936, line: 281, type: !1032)
!9881 = !DILocalVariable(name: "DoneLength", scope: !9871, file: !1936, line: 282, type: !61)
!9882 = !DILocalVariable(name: "blockSize", scope: !9883, file: !1936, line: 313, type: !61)
!9883 = distinct !DILexicalBlock(scope: !9884, file: !1936, line: 312, column: 14)
!9884 = distinct !DILexicalBlock(scope: !9885, file: !1936, line: 305, column: 13)
!9885 = distinct !DILexicalBlock(scope: !9871, file: !1936, line: 298, column: 30)
!9886 = !DILocalVariable(name: "programBytes", scope: !9883, file: !1936, line: 314, type: !61)
!9887 = !DILocalVariable(name: "nextBlkAddr", scope: !9883, file: !1936, line: 316, type: !61)
!9888 = !DILocalVariable(name: "Cell", scope: !9889, file: !1936, line: 346, type: !9891)
!9889 = distinct !DILexicalBlock(scope: !9890, file: !1936, line: 345, column: 83)
!9890 = distinct !DILexicalBlock(scope: !9883, file: !1936, line: 345, column: 17)
!9891 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9892, line: 76, baseType: !1126)
!9892 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/templates/no_rtos_initialize_system/GCC")
!9893 = !DILocalVariable(name: "b", scope: !9889, file: !1936, line: 347, type: !849)
!9894 = !DILocation(line: 0, scope: !9871)
!9895 = !DILocation(line: 280, column: 28, scope: !9871)
!9896 = !DILocation(line: 284, column: 14, scope: !9897)
!9897 = distinct !DILexicalBlock(scope: !9871, file: !1936, line: 284, column: 9)
!9898 = !DILocation(line: 284, column: 9, scope: !9871)
!9899 = !DILocation(line: 288, column: 14, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9871, file: !1936, line: 288, column: 9)
!9901 = !DILocation(line: 288, column: 20, scope: !9900)
!9902 = !DILocation(line: 288, column: 9, scope: !9871)
!9903 = !DILocation(line: 292, column: 13, scope: !9904)
!9904 = distinct !DILexicalBlock(scope: !9871, file: !1936, line: 292, column: 9)
!9905 = !DILocation(line: 292, column: 9, scope: !9871)
!9906 = !DILocation(line: 293, column: 9, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9904, file: !1936, line: 292, column: 23)
!9908 = !DILocation(line: 294, column: 5, scope: !9907)
!9909 = !DILocation(line: 296, column: 5, scope: !9871)
!9910 = !DILocation(line: 346, column: 17, scope: !9889)
!9911 = !DILocation(line: 298, column: 23, scope: !9871)
!9912 = !DILocation(line: 298, column: 5, scope: !9871)
!9913 = !DILocation(line: 299, column: 52, scope: !9885)
!9914 = !DILocation(line: 299, column: 62, scope: !9885)
!9915 = !DILocation(line: 299, column: 16, scope: !9885)
!9916 = !DILocation(line: 299, column: 71, scope: !9885)
!9917 = !DILocation(line: 299, column: 78, scope: !9885)
!9918 = !DILocation(line: 300, column: 34, scope: !9885)
!9919 = !DILocation(line: 302, column: 12, scope: !9885)
!9920 = !DILocation(line: 302, column: 23, scope: !9885)
!9921 = !DILocation(line: 302, column: 81, scope: !9885)
!9922 = !DILocation(line: 302, column: 45, scope: !9885)
!9923 = !DILocation(line: 302, column: 9, scope: !9885)
!9924 = !DILocation(line: 305, column: 29, scope: !9884)
!9925 = !DILocation(line: 305, column: 57, scope: !9884)
!9926 = !DILocation(line: 305, column: 66, scope: !9884)
!9927 = !DILocation(line: 305, column: 80, scope: !9884)
!9928 = !DILocation(line: 305, column: 13, scope: !9885)
!9929 = !DILocation(line: 306, column: 25, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !9884, file: !1936, line: 305, column: 87)
!9931 = !DILocation(line: 306, column: 36, scope: !9930)
!9932 = !DILocation(line: 306, column: 51, scope: !9930)
!9933 = !DILocation(line: 306, column: 60, scope: !9930)
!9934 = !DILocation(line: 306, column: 74, scope: !9930)
!9935 = !DILocation(line: 306, column: 22, scope: !9930)
!9936 = !DILocation(line: 307, column: 24, scope: !9937)
!9937 = distinct !DILexicalBlock(scope: !9930, file: !1936, line: 307, column: 17)
!9938 = !DILocation(line: 307, column: 17, scope: !9930)
!9939 = !DILocation(line: 310, column: 23, scope: !9930)
!9940 = !DILocation(line: 311, column: 9, scope: !9930)
!9941 = !DILocation(line: 313, column: 47, scope: !9883)
!9942 = !DILocation(line: 313, column: 56, scope: !9883)
!9943 = !DILocation(line: 313, column: 34, scope: !9883)
!9944 = !DILocation(line: 0, scope: !9883)
!9945 = !DILocation(line: 316, column: 42, scope: !9883)
!9946 = !DILocation(line: 316, column: 58, scope: !9883)
!9947 = !DILocation(line: 316, column: 55, scope: !9883)
!9948 = !DILocation(line: 326, column: 22, scope: !9949)
!9949 = distinct !DILexicalBlock(scope: !9883, file: !1936, line: 326, column: 17)
!9950 = !DILocation(line: 326, column: 37, scope: !9949)
!9951 = !DILocation(line: 326, column: 17, scope: !9883)
!9952 = !DILocation(line: 332, column: 43, scope: !9883)
!9953 = !DILocation(line: 345, column: 30, scope: !9890)
!9954 = !DILocation(line: 345, column: 52, scope: !9890)
!9955 = !DILocation(line: 0, scope: !9889)
!9956 = !DILocation(line: 348, column: 26, scope: !9889)
!9957 = !DILocation(line: 348, column: 24, scope: !9889)
!9958 = !DILocation(line: 348, column: 22, scope: !9889)
!9959 = !DILocation(line: 349, column: 41, scope: !9889)
!9960 = !DILocation(line: 349, column: 24, scope: !9889)
!9961 = !DILocation(line: 349, column: 22, scope: !9889)
!9962 = !DILocation(line: 350, column: 29, scope: !9889)
!9963 = !DILocation(line: 350, column: 40, scope: !9889)
!9964 = !DILocation(line: 350, column: 55, scope: !9889)
!9965 = !DILocation(line: 350, column: 64, scope: !9889)
!9966 = !DILocation(line: 350, column: 26, scope: !9889)
!9967 = !DILocation(line: 351, column: 28, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9889, file: !1936, line: 351, column: 21)
!9969 = !DILocation(line: 354, column: 13, scope: !9890)
!9970 = !DILocation(line: 362, column: 33, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9972, file: !1936, line: 361, column: 24)
!9972 = distinct !DILexicalBlock(scope: !9973, file: !1936, line: 355, column: 21)
!9973 = distinct !DILexicalBlock(scope: !9890, file: !1936, line: 354, column: 20)
!9974 = !DILocation(line: 362, column: 44, scope: !9971)
!9975 = !DILocation(line: 362, column: 59, scope: !9971)
!9976 = !DILocation(line: 362, column: 68, scope: !9971)
!9977 = !DILocation(line: 362, column: 82, scope: !9971)
!9978 = !DILocation(line: 362, column: 30, scope: !9971)
!9979 = !DILocation(line: 364, column: 28, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9973, file: !1936, line: 364, column: 21)
!9981 = !DILocation(line: 364, column: 21, scope: !9973)
!9982 = !DILocation(line: 368, column: 24, scope: !9883)
!9983 = !DILocation(line: 0, scope: !9884)
!9984 = distinct !{!9984, !9912, !9985}
!9985 = !DILocation(line: 370, column: 5, scope: !9871)
!9986 = !DILocation(line: 372, column: 5, scope: !9871)
!9987 = !DILocation(line: 379, column: 1, scope: !9871)
!9988 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1936, file: !1936, line: 398, type: !9989, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !9991)
!9989 = !DISubroutineType(types: !9990)
!9990 = !{!1032, !9776, !61}
!9991 = !{!9992, !9993, !9994, !9995}
!9992 = !DILocalVariable(name: "D", arg: 1, scope: !9988, file: !1936, line: 398, type: !9776)
!9993 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !9988, file: !1936, line: 398, type: !61)
!9994 = !DILocalVariable(name: "result", scope: !9988, file: !1936, line: 401, type: !1032)
!9995 = !DILocalVariable(name: "block_index", scope: !9988, file: !1936, line: 402, type: !61)
!9996 = !DILocation(line: 0, scope: !9988)
!9997 = !DILocation(line: 402, column: 36, scope: !9988)
!9998 = !DILocation(line: 403, column: 13, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9988, file: !1936, line: 403, column: 9)
!10000 = !DILocation(line: 403, column: 9, scope: !9988)
!10001 = !DILocation(line: 404, column: 9, scope: !10002)
!10002 = distinct !DILexicalBlock(scope: !9999, file: !1936, line: 403, column: 23)
!10003 = !DILocation(line: 405, column: 5, scope: !10002)
!10004 = !DILocation(line: 407, column: 37, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9988, file: !1936, line: 407, column: 9)
!10006 = !DILocation(line: 407, column: 21, scope: !10005)
!10007 = !DILocation(line: 407, column: 9, scope: !9988)
!10008 = !DILocation(line: 412, column: 5, scope: !9988)
!10009 = !DILocation(line: 414, column: 8, scope: !9988)
!10010 = !DILocation(line: 414, column: 19, scope: !9988)
!10011 = !DILocation(line: 414, column: 32, scope: !9988)
!10012 = !DILocation(line: 414, column: 5, scope: !9988)
!10013 = !DILocation(line: 416, column: 17, scope: !9988)
!10014 = !DILocation(line: 416, column: 28, scope: !9988)
!10015 = !DILocation(line: 416, column: 42, scope: !9988)
!10016 = !DILocation(line: 416, column: 14, scope: !9988)
!10017 = !DILocation(line: 418, column: 5, scope: !9988)
!10018 = !DILocation(line: 420, column: 16, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !9988, file: !1936, line: 420, column: 9)
!10020 = !DILocation(line: 424, column: 1, scope: !9988)
!10021 = distinct !DISubprogram(name: "NOR_init", scope: !1936, file: !1936, line: 433, type: !7427, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !345)
!10022 = !DILocation(line: 436, column: 9, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10021, file: !1936, line: 436, column: 9)
!10024 = !DILocation(line: 436, column: 9, scope: !10021)
!10025 = !DILocation(line: 437, column: 9, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10023, file: !1936, line: 436, column: 62)
!10027 = !DILocation(line: 438, column: 9, scope: !10026)
!10028 = !DILocation(line: 439, column: 27, scope: !10026)
!10029 = !DILocation(line: 440, column: 5, scope: !10026)
!10030 = !DILocation(line: 441, column: 5, scope: !10021)
!10031 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1936, file: !1936, line: 444, type: !7893, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !345)
!10032 = !DILocation(line: 446, column: 12, scope: !10031)
!10033 = !DILocation(line: 446, column: 5, scope: !10031)
!10034 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1936, file: !1936, line: 449, type: !10035, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10037)
!10035 = !DISubroutineType(types: !10036)
!10036 = !{!1032, !61, !61, !849}
!10037 = !{!10038, !10039, !10040, !10041, !10042, !10043, !10044}
!10038 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10034, file: !1936, line: 449, type: !61)
!10039 = !DILocalVariable(name: "page_idx", arg: 2, scope: !10034, file: !1936, line: 449, type: !61)
!10040 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10034, file: !1936, line: 449, type: !849)
!10041 = !DILocalVariable(name: "D", scope: !10034, file: !1936, line: 451, type: !9776)
!10042 = !DILocalVariable(name: "mtdData", scope: !10034, file: !1936, line: 452, type: !1944)
!10043 = !DILocalVariable(name: "result", scope: !10034, file: !1936, line: 453, type: !1032)
!10044 = !DILocalVariable(name: "addr", scope: !10034, file: !1936, line: 455, type: !61)
!10045 = !DILocation(line: 0, scope: !10034)
!10046 = !DILocation(line: 452, column: 60, scope: !10034)
!10047 = !DILocation(line: 455, column: 32, scope: !10034)
!10048 = !DILocation(line: 455, column: 22, scope: !10034)
!10049 = !DILocation(line: 455, column: 95, scope: !10034)
!10050 = !DILocation(line: 455, column: 76, scope: !10034)
!10051 = !DILocation(line: 455, column: 118, scope: !10034)
!10052 = !DILocation(line: 455, column: 74, scope: !10034)
!10053 = !DILocation(line: 455, column: 106, scope: !10034)
!10054 = !DILocation(line: 457, column: 14, scope: !10034)
!10055 = !DILocation(line: 459, column: 16, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10034, file: !1936, line: 459, column: 9)
!10057 = !DILocation(line: 463, column: 1, scope: !10034)
!10058 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1936, file: !1936, line: 466, type: !10035, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10059)
!10059 = !{!10060, !10061, !10062, !10063, !10064, !10065, !10066}
!10060 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10058, file: !1936, line: 466, type: !61)
!10061 = !DILocalVariable(name: "page_idx", arg: 2, scope: !10058, file: !1936, line: 466, type: !61)
!10062 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10058, file: !1936, line: 466, type: !849)
!10063 = !DILocalVariable(name: "D", scope: !10058, file: !1936, line: 468, type: !9776)
!10064 = !DILocalVariable(name: "mtdData", scope: !10058, file: !1936, line: 469, type: !1944)
!10065 = !DILocalVariable(name: "result", scope: !10058, file: !1936, line: 470, type: !1032)
!10066 = !DILocalVariable(name: "addr", scope: !10058, file: !1936, line: 472, type: !61)
!10067 = !DILocation(line: 0, scope: !10058)
!10068 = !DILocation(line: 469, column: 60, scope: !10058)
!10069 = !DILocation(line: 472, column: 32, scope: !10058)
!10070 = !DILocation(line: 472, column: 22, scope: !10058)
!10071 = !DILocation(line: 472, column: 95, scope: !10058)
!10072 = !DILocation(line: 472, column: 76, scope: !10058)
!10073 = !DILocation(line: 472, column: 118, scope: !10058)
!10074 = !DILocation(line: 472, column: 74, scope: !10058)
!10075 = !DILocation(line: 472, column: 106, scope: !10058)
!10076 = !DILocation(line: 474, column: 14, scope: !10058)
!10077 = !DILocation(line: 475, column: 16, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10058, file: !1936, line: 475, column: 9)
!10079 = !DILocation(line: 479, column: 1, scope: !10058)
!10080 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1936, file: !1936, line: 481, type: !10081, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10083)
!10081 = !DISubroutineType(types: !10082)
!10082 = !{!1032, !61}
!10083 = !{!10084, !10085}
!10084 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10080, file: !1936, line: 481, type: !61)
!10085 = !DILocalVariable(name: "result", scope: !10080, file: !1936, line: 483, type: !1032)
!10086 = !DILocation(line: 0, scope: !10080)
!10087 = !DILocation(line: 484, column: 14, scope: !10080)
!10088 = !DILocation(line: 485, column: 16, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10080, file: !1936, line: 485, column: 9)
!10090 = !DILocation(line: 489, column: 1, scope: !10080)
!10091 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1936, file: !1936, line: 492, type: !3584, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10092)
!10092 = !{!10093, !10094, !10095}
!10093 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10091, file: !1936, line: 492, type: !61)
!10094 = !DILocalVariable(name: "D", scope: !10091, file: !1936, line: 494, type: !9776)
!10095 = !DILocalVariable(name: "mtdData", scope: !10091, file: !1936, line: 495, type: !1944)
!10096 = !DILocation(line: 0, scope: !10091)
!10097 = !DILocation(line: 495, column: 60, scope: !10091)
!10098 = !DILocation(line: 496, column: 12, scope: !10091)
!10099 = !DILocation(line: 496, column: 5, scope: !10091)
!10100 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1936, file: !1936, line: 499, type: !3584, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10101)
!10101 = !{!10102, !10103, !10104}
!10102 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10100, file: !1936, line: 499, type: !61)
!10103 = !DILocalVariable(name: "D", scope: !10100, file: !1936, line: 501, type: !9776)
!10104 = !DILocalVariable(name: "mtdData", scope: !10100, file: !1936, line: 502, type: !1944)
!10105 = !DILocation(line: 0, scope: !10100)
!10106 = !DILocation(line: 502, column: 60, scope: !10100)
!10107 = !DILocation(line: 504, column: 12, scope: !10100)
!10108 = !DILocation(line: 504, column: 5, scope: !10100)
!10109 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1936, file: !1936, line: 510, type: !10110, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10112)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{!1032, !61, !1094, !1094}
!10112 = !{!10113, !10114, !10115, !10116, !10117}
!10113 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10109, file: !1936, line: 510, type: !61)
!10114 = !DILocalVariable(name: "block_index", arg: 2, scope: !10109, file: !1936, line: 510, type: !1094)
!10115 = !DILocalVariable(name: "offset", arg: 3, scope: !10109, file: !1936, line: 510, type: !1094)
!10116 = !DILocalVariable(name: "D", scope: !10109, file: !1936, line: 512, type: !9776)
!10117 = !DILocalVariable(name: "mtdData", scope: !10109, file: !1936, line: 513, type: !1944)
!10118 = !DILocation(line: 0, scope: !10109)
!10119 = !DILocation(line: 513, column: 60, scope: !10109)
!10120 = !DILocation(line: 519, column: 20, scope: !10109)
!10121 = !DILocation(line: 519, column: 18, scope: !10109)
!10122 = !DILocation(line: 520, column: 22, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10109, file: !1936, line: 520, column: 9)
!10124 = !DILocation(line: 520, column: 9, scope: !10109)
!10125 = !DILocation(line: 524, column: 28, scope: !10109)
!10126 = !DILocation(line: 524, column: 26, scope: !10109)
!10127 = !DILocation(line: 524, column: 13, scope: !10109)
!10128 = !DILocation(line: 526, column: 5, scope: !10109)
!10129 = !DILocation(line: 527, column: 1, scope: !10109)
!10130 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1936, file: !1936, line: 532, type: !10131, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10133)
!10131 = !DISubroutineType(types: !10132)
!10132 = !{!1032, !61, !61, !1094}
!10133 = !{!10134, !10135, !10136, !10137, !10138}
!10134 = !DILocalVariable(name: "block_index", arg: 1, scope: !10130, file: !1936, line: 532, type: !61)
!10135 = !DILocalVariable(name: "offset", arg: 2, scope: !10130, file: !1936, line: 532, type: !61)
!10136 = !DILocalVariable(name: "addr", arg: 3, scope: !10130, file: !1936, line: 532, type: !1094)
!10137 = !DILocalVariable(name: "D", scope: !10130, file: !1936, line: 534, type: !9776)
!10138 = !DILocalVariable(name: "mtdData", scope: !10130, file: !1936, line: 535, type: !1944)
!10139 = !DILocation(line: 0, scope: !10130)
!10140 = !DILocation(line: 535, column: 60, scope: !10130)
!10141 = !DILocation(line: 537, column: 23, scope: !10130)
!10142 = !DILocation(line: 537, column: 13, scope: !10130)
!10143 = !DILocation(line: 537, column: 79, scope: !10130)
!10144 = !DILocation(line: 537, column: 60, scope: !10130)
!10145 = !DILocation(line: 537, column: 58, scope: !10130)
!10146 = !DILocation(line: 537, column: 88, scope: !10130)
!10147 = !DILocation(line: 537, column: 11, scope: !10130)
!10148 = !DILocation(line: 539, column: 5, scope: !10130)
!10149 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1936, file: !1936, line: 545, type: !10150, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10152)
!10150 = !DISubroutineType(types: !10151)
!10151 = !{!1992, !1032}
!10152 = !{!10153}
!10153 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !10149, file: !1936, line: 545, type: !1032)
!10154 = !DILocation(line: 0, scope: !10149)
!10155 = !DILocation(line: 547, column: 9, scope: !10149)
!10156 = !DILocation(line: 558, column: 9, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10158, file: !1936, line: 558, column: 9)
!10158 = distinct !DILexicalBlock(scope: !10159, file: !1936, line: 558, column: 9)
!10159 = distinct !DILexicalBlock(scope: !10160, file: !1936, line: 558, column: 9)
!10160 = distinct !DILexicalBlock(scope: !10161, file: !1936, line: 557, column: 12)
!10161 = distinct !DILexicalBlock(scope: !10162, file: !1936, line: 555, column: 16)
!10162 = distinct !DILexicalBlock(scope: !10163, file: !1936, line: 553, column: 16)
!10163 = distinct !DILexicalBlock(scope: !10164, file: !1936, line: 551, column: 16)
!10164 = distinct !DILexicalBlock(scope: !10165, file: !1936, line: 549, column: 16)
!10165 = distinct !DILexicalBlock(scope: !10149, file: !1936, line: 547, column: 9)
!10166 = !DILocation(line: 560, column: 1, scope: !10149)
!10167 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1936, file: !1936, line: 561, type: !10168, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10171)
!10168 = !DISubroutineType(types: !10169)
!10169 = !{!10170, !61}
!10170 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1275, line: 127, baseType: !1938)
!10171 = !{!10172, !10173, !10174}
!10172 = !DILocalVariable(name: "address", arg: 1, scope: !10167, file: !1936, line: 561, type: !61)
!10173 = !DILocalVariable(name: "block_size", scope: !10167, file: !1936, line: 563, type: !61)
!10174 = !DILocalVariable(name: "block_index", scope: !10167, file: !1936, line: 564, type: !61)
!10175 = !DILocation(line: 0, scope: !10167)
!10176 = !DILocation(line: 566, column: 19, scope: !10167)
!10177 = !DILocation(line: 567, column: 21, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10167, file: !1936, line: 567, column: 9)
!10179 = !DILocation(line: 567, column: 9, scope: !10167)
!10180 = !DILocation(line: 568, column: 9, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10182, file: !1936, line: 568, column: 9)
!10182 = distinct !DILexicalBlock(scope: !10183, file: !1936, line: 568, column: 9)
!10183 = distinct !DILexicalBlock(scope: !10184, file: !1936, line: 568, column: 9)
!10184 = distinct !DILexicalBlock(scope: !10178, file: !1936, line: 567, column: 45)
!10185 = !DILocation(line: 570, column: 18, scope: !10167)
!10186 = !DILocation(line: 571, column: 9, scope: !10167)
!10187 = !DILocation(line: 574, column: 9, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10189, file: !1936, line: 573, column: 38)
!10189 = distinct !DILexicalBlock(scope: !10190, file: !1936, line: 573, column: 16)
!10190 = distinct !DILexicalBlock(scope: !10167, file: !1936, line: 571, column: 9)
!10191 = !DILocation(line: 576, column: 9, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10193, file: !1936, line: 575, column: 39)
!10193 = distinct !DILexicalBlock(scope: !10189, file: !1936, line: 575, column: 16)
!10194 = !DILocation(line: 578, column: 9, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10196, file: !1936, line: 578, column: 9)
!10196 = distinct !DILexicalBlock(scope: !10197, file: !1936, line: 578, column: 9)
!10197 = distinct !DILexicalBlock(scope: !10198, file: !1936, line: 578, column: 9)
!10198 = distinct !DILexicalBlock(scope: !10193, file: !1936, line: 577, column: 12)
!10199 = !DILocation(line: 0, scope: !10190)
!10200 = !DILocation(line: 580, column: 1, scope: !10167)
!10201 = distinct !DISubprogram(name: "hal_flash_init", scope: !1936, file: !1936, line: 583, type: !7893, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !345)
!10202 = !DILocation(line: 585, column: 5, scope: !10201)
!10203 = !DILocation(line: 586, column: 5, scope: !10201)
!10204 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1936, file: !1936, line: 589, type: !7893, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !345)
!10205 = !DILocation(line: 591, column: 5, scope: !10204)
!10206 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1936, file: !1936, line: 595, type: !10207, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10209)
!10207 = !DISubroutineType(types: !10208)
!10208 = !{!1992, !61, !10170}
!10209 = !{!10210, !10211, !10212, !10213, !10214}
!10210 = !DILocalVariable(name: "start_address", arg: 1, scope: !10206, file: !1936, line: 595, type: !61)
!10211 = !DILocalVariable(name: "block", arg: 2, scope: !10206, file: !1936, line: 595, type: !10170)
!10212 = !DILocalVariable(name: "result", scope: !10206, file: !1936, line: 597, type: !1032)
!10213 = !DILocalVariable(name: "block_index", scope: !10206, file: !1936, line: 598, type: !61)
!10214 = !DILocalVariable(name: "erase_type", scope: !10206, file: !1936, line: 599, type: !61)
!10215 = !DILocation(line: 0, scope: !10206)
!10216 = !DILocation(line: 601, column: 9, scope: !10206)
!10217 = !DILocation(line: 602, column: 28, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10219, file: !1936, line: 602, column: 13)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !1936, line: 601, column: 38)
!10220 = distinct !DILexicalBlock(scope: !10206, file: !1936, line: 601, column: 9)
!10221 = !DILocation(line: 602, column: 37, scope: !10218)
!10222 = !DILocation(line: 602, column: 13, scope: !10219)
!10223 = !DILocation(line: 607, column: 28, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10225, file: !1936, line: 607, column: 13)
!10225 = distinct !DILexicalBlock(scope: !10226, file: !1936, line: 606, column: 46)
!10226 = distinct !DILexicalBlock(scope: !10220, file: !1936, line: 606, column: 16)
!10227 = !DILocation(line: 607, column: 38, scope: !10224)
!10228 = !DILocation(line: 607, column: 13, scope: !10225)
!10229 = !DILocation(line: 612, column: 28, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10231, file: !1936, line: 612, column: 13)
!10231 = distinct !DILexicalBlock(scope: !10232, file: !1936, line: 611, column: 46)
!10232 = distinct !DILexicalBlock(scope: !10226, file: !1936, line: 611, column: 16)
!10233 = !DILocation(line: 612, column: 38, scope: !10230)
!10234 = !DILocation(line: 612, column: 13, scope: !10231)
!10235 = !DILocation(line: 0, scope: !10220)
!10236 = !DILocation(line: 621, column: 19, scope: !10206)
!10237 = !DILocation(line: 622, column: 21, scope: !10238)
!10238 = distinct !DILexicalBlock(scope: !10206, file: !1936, line: 622, column: 9)
!10239 = !DILocation(line: 622, column: 9, scope: !10206)
!10240 = !DILocation(line: 626, column: 17, scope: !10206)
!10241 = !DILocation(line: 627, column: 14, scope: !10206)
!10242 = !DILocation(line: 628, column: 16, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10206, file: !1936, line: 628, column: 9)
!10244 = !DILocation(line: 628, column: 9, scope: !10206)
!10245 = !DILocation(line: 629, column: 16, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10243, file: !1936, line: 628, column: 38)
!10247 = !DILocation(line: 629, column: 9, scope: !10246)
!10248 = !DILocation(line: 632, column: 1, scope: !10206)
!10249 = distinct !DISubprogram(name: "hal_flash_read", scope: !1936, file: !1936, line: 634, type: !10250, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10252)
!10250 = !DISubroutineType(types: !10251)
!10251 = !{!1992, !61, !849, !61}
!10252 = !{!10253, !10254, !10255, !10256, !10257}
!10253 = !DILocalVariable(name: "start_address", arg: 1, scope: !10249, file: !1936, line: 634, type: !61)
!10254 = !DILocalVariable(name: "buffer", arg: 2, scope: !10249, file: !1936, line: 634, type: !849)
!10255 = !DILocalVariable(name: "length", arg: 3, scope: !10249, file: !1936, line: 634, type: !61)
!10256 = !DILocalVariable(name: "D", scope: !10249, file: !1936, line: 636, type: !9776)
!10257 = !DILocalVariable(name: "result", scope: !10249, file: !1936, line: 637, type: !1032)
!10258 = !DILocation(line: 0, scope: !10249)
!10259 = !DILocation(line: 639, column: 14, scope: !10249)
!10260 = !DILocation(line: 641, column: 16, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10249, file: !1936, line: 641, column: 9)
!10262 = !DILocation(line: 641, column: 9, scope: !10249)
!10263 = !DILocation(line: 642, column: 16, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10261, file: !1936, line: 641, column: 38)
!10265 = !DILocation(line: 642, column: 9, scope: !10264)
!10266 = !DILocation(line: 645, column: 1, scope: !10249)
!10267 = distinct !DISubprogram(name: "hal_flash_write", scope: !1936, file: !1936, line: 647, type: !10268, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1935, retainedNodes: !10270)
!10268 = !DISubroutineType(types: !10269)
!10269 = !{!1992, !61, !5449, !61}
!10270 = !{!10271, !10272, !10273, !10274, !10275, !10276}
!10271 = !DILocalVariable(name: "address", arg: 1, scope: !10267, file: !1936, line: 647, type: !61)
!10272 = !DILocalVariable(name: "data", arg: 2, scope: !10267, file: !1936, line: 647, type: !5449)
!10273 = !DILocalVariable(name: "length", arg: 3, scope: !10267, file: !1936, line: 647, type: !61)
!10274 = !DILocalVariable(name: "D", scope: !10267, file: !1936, line: 649, type: !9776)
!10275 = !DILocalVariable(name: "result", scope: !10267, file: !1936, line: 650, type: !1032)
!10276 = !DILocalVariable(name: "addr", scope: !10277, file: !1936, line: 660, type: !61)
!10277 = distinct !DILexicalBlock(scope: !10278, file: !1936, line: 659, column: 40)
!10278 = distinct !DILexicalBlock(scope: !10267, file: !1936, line: 659, column: 8)
!10279 = !DILocation(line: 0, scope: !10267)
!10280 = !DILocation(line: 652, column: 14, scope: !10267)
!10281 = !DILocation(line: 653, column: 16, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10267, file: !1936, line: 653, column: 9)
!10283 = !DILocation(line: 653, column: 9, scope: !10267)
!10284 = !DILocation(line: 654, column: 16, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10282, file: !1936, line: 653, column: 38)
!10286 = !DILocation(line: 654, column: 9, scope: !10285)
!10287 = !DILocation(line: 659, column: 8, scope: !10278)
!10288 = !DILocation(line: 659, column: 8, scope: !10267)
!10289 = !DILocation(line: 661, column: 25, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10277, file: !1936, line: 661, column: 8)
!10291 = !DILocation(line: 0, scope: !10277)
!10292 = !DILocation(line: 661, column: 58, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10290, file: !1936, line: 661, column: 8)
!10294 = !DILocation(line: 661, column: 8, scope: !10290)
!10295 = !DILocation(line: 662, column: 13, scope: !10296)
!10296 = distinct !DILexicalBlock(scope: !10293, file: !1936, line: 661, column: 147)
!10297 = !DILocation(line: 661, column: 128, scope: !10293)
!10298 = distinct !{!10298, !10294, !10299}
!10299 = !DILocation(line: 663, column: 8, scope: !10290)
!10300 = !DILocation(line: 668, column: 1, scope: !10267)
!10301 = distinct !DISubprogram(name: "BlockAddress", scope: !1997, file: !1997, line: 111, type: !10302, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1996, retainedNodes: !10304)
!10302 = !DISubroutineType(types: !10303)
!10303 = !{!88, !88, !61}
!10304 = !{!10305, !10306, !10307, !10308, !10309, !10310}
!10305 = !DILocalVariable(name: "DriverData", arg: 1, scope: !10301, file: !1997, line: 111, type: !88)
!10306 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10301, file: !1997, line: 111, type: !61)
!10307 = !DILocalVariable(name: "D", scope: !10301, file: !1997, line: 113, type: !2018)
!10308 = !DILocalVariable(name: "addr", scope: !10301, file: !1997, line: 114, type: !61)
!10309 = !DILocalVariable(name: "region", scope: !10301, file: !1997, line: 115, type: !61)
!10310 = !DILocalVariable(name: "BlockUpperBound", scope: !10301, file: !1997, line: 115, type: !61)
!10311 = !DILocation(line: 0, scope: !10301)
!10312 = !DILocation(line: 117, column: 26, scope: !10301)
!10313 = !DILocation(line: 117, column: 40, scope: !10301)
!10314 = !DILocation(line: 118, column: 28, scope: !10301)
!10315 = !DILocation(line: 118, column: 5, scope: !10301)
!10316 = !DILocation(line: 119, column: 39, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10301, file: !1997, line: 118, column: 43)
!10318 = !DILocation(line: 119, column: 76, scope: !10317)
!10319 = !DILocation(line: 119, column: 52, scope: !10317)
!10320 = !DILocation(line: 119, column: 14, scope: !10317)
!10321 = !DILocation(line: 120, column: 15, scope: !10317)
!10322 = !DILocation(line: 121, column: 50, scope: !10317)
!10323 = !DILocation(line: 121, column: 25, scope: !10317)
!10324 = distinct !{!10324, !10315, !10325}
!10325 = !DILocation(line: 122, column: 5, scope: !10301)
!10326 = !DILocation(line: 123, column: 68, scope: !10301)
!10327 = !DILocation(line: 123, column: 44, scope: !10301)
!10328 = !DILocation(line: 123, column: 25, scope: !10301)
!10329 = !DILocation(line: 123, column: 107, scope: !10301)
!10330 = !DILocation(line: 123, column: 83, scope: !10301)
!10331 = !DILocation(line: 123, column: 10, scope: !10301)
!10332 = !DILocation(line: 125, column: 16, scope: !10301)
!10333 = !DILocation(line: 125, column: 25, scope: !10301)
!10334 = !DILocation(line: 125, column: 5, scope: !10301)
!10335 = distinct !DISubprogram(name: "MapWindow", scope: !1997, file: !1997, line: 180, type: !1630, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1996, retainedNodes: !10336)
!10336 = !{!10337, !10338, !10339, !10340}
!10337 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10335, file: !1997, line: 180, type: !88)
!10338 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10335, file: !1997, line: 180, type: !61)
!10339 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !10335, file: !1997, line: 180, type: !61)
!10340 = !DILocalVariable(name: "D", scope: !10335, file: !1997, line: 182, type: !2018)
!10341 = !DILocation(line: 0, scope: !10335)
!10342 = !DILocation(line: 185, column: 5, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10344, file: !1997, line: 185, column: 5)
!10344 = distinct !DILexicalBlock(scope: !10335, file: !1997, line: 185, column: 5)
!10345 = !DILocation(line: 185, column: 5, scope: !10344)
!10346 = !DILocation(line: 185, column: 5, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10343, file: !1997, line: 185, column: 5)
!10348 = !DILocation(line: 186, column: 27, scope: !10335)
!10349 = !DILocation(line: 186, column: 19, scope: !10335)
!10350 = !DILocation(line: 186, column: 8, scope: !10335)
!10351 = !DILocation(line: 186, column: 17, scope: !10335)
!10352 = !DILocation(line: 188, column: 5, scope: !10335)
!10353 = !DILocation(line: 0, scope: !2011)
!10354 = !DILocation(line: 142, column: 12, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !2011, file: !1997, line: 142, column: 9)
!10356 = !DILocation(line: 142, column: 34, scope: !10355)
!10357 = !DILocation(line: 142, column: 64, scope: !10355)
!10358 = !DILocation(line: 142, column: 75, scope: !10355)
!10359 = !DILocation(line: 142, column: 9, scope: !2011)
!10360 = !DILocation(line: 143, column: 79, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !1997, line: 143, column: 13)
!10362 = distinct !DILexicalBlock(scope: !10355, file: !1997, line: 142, column: 99)
!10363 = !DILocation(line: 143, column: 13, scope: !10362)
!10364 = !DILocation(line: 144, column: 72, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !1997, line: 144, column: 17)
!10366 = distinct !DILexicalBlock(scope: !10361, file: !1997, line: 143, column: 94)
!10367 = !DILocation(line: 144, column: 83, scope: !10365)
!10368 = !DILocation(line: 144, column: 17, scope: !10366)
!10369 = !DILocation(line: 145, column: 87, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10371, file: !1997, line: 145, column: 21)
!10371 = distinct !DILexicalBlock(scope: !10365, file: !1997, line: 144, column: 107)
!10372 = !DILocation(line: 145, column: 21, scope: !10371)
!10373 = !DILocation(line: 146, column: 33, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10370, file: !1997, line: 145, column: 102)
!10375 = !DILocation(line: 147, column: 25, scope: !10376)
!10376 = distinct !DILexicalBlock(scope: !10374, file: !1997, line: 147, column: 25)
!10377 = !DILocation(line: 147, column: 62, scope: !10376)
!10378 = !DILocation(line: 147, column: 34, scope: !10376)
!10379 = !DILocation(line: 147, column: 25, scope: !10374)
!10380 = !DILocation(line: 148, column: 91, scope: !10381)
!10381 = distinct !DILexicalBlock(scope: !10376, file: !1997, line: 147, column: 106)
!10382 = !DILocation(line: 149, column: 111, scope: !10381)
!10383 = !DILocation(line: 149, column: 101, scope: !10381)
!10384 = !DILocation(line: 149, column: 87, scope: !10381)
!10385 = !DILocation(line: 149, column: 99, scope: !10381)
!10386 = !DILocation(line: 150, column: 37, scope: !10381)
!10387 = !DILocation(line: 150, column: 34, scope: !10381)
!10388 = !DILocation(line: 151, column: 21, scope: !10381)
!10389 = !DILocation(line: 152, column: 91, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10376, file: !1997, line: 151, column: 28)
!10391 = !DILocation(line: 153, column: 111, scope: !10390)
!10392 = !DILocation(line: 153, column: 101, scope: !10390)
!10393 = !DILocation(line: 153, column: 87, scope: !10390)
!10394 = !DILocation(line: 153, column: 99, scope: !10390)
!10395 = !DILocation(line: 154, column: 34, scope: !10390)
!10396 = !DILocation(line: 157, column: 32, scope: !10397)
!10397 = distinct !DILexicalBlock(scope: !10370, file: !1997, line: 156, column: 24)
!10398 = !DILocation(line: 158, column: 83, scope: !10397)
!10399 = !DILocation(line: 159, column: 60, scope: !10397)
!10400 = !DILocation(line: 159, column: 33, scope: !10397)
!10401 = !DILocation(line: 159, column: 30, scope: !10397)
!10402 = !DILocation(line: 162, column: 29, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10365, file: !1997, line: 161, column: 20)
!10404 = !DILocation(line: 163, column: 83, scope: !10403)
!10405 = !DILocation(line: 164, column: 103, scope: !10403)
!10406 = !DILocation(line: 164, column: 93, scope: !10403)
!10407 = !DILocation(line: 164, column: 79, scope: !10403)
!10408 = !DILocation(line: 164, column: 91, scope: !10403)
!10409 = !DILocation(line: 165, column: 56, scope: !10403)
!10410 = !DILocation(line: 165, column: 29, scope: !10403)
!10411 = !DILocation(line: 165, column: 26, scope: !10403)
!10412 = !DILocation(line: 168, column: 24, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10361, file: !1997, line: 167, column: 16)
!10414 = !DILocation(line: 169, column: 75, scope: !10413)
!10415 = !DILocation(line: 170, column: 50, scope: !10413)
!10416 = !DILocation(line: 170, column: 22, scope: !10413)
!10417 = !DILocation(line: 173, column: 21, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10355, file: !1997, line: 172, column: 12)
!10419 = !DILocation(line: 174, column: 75, scope: !10418)
!10420 = !DILocation(line: 175, column: 95, scope: !10418)
!10421 = !DILocation(line: 175, column: 85, scope: !10418)
!10422 = !DILocation(line: 175, column: 71, scope: !10418)
!10423 = !DILocation(line: 175, column: 83, scope: !10418)
!10424 = !DILocation(line: 176, column: 46, scope: !10418)
!10425 = !DILocation(line: 176, column: 18, scope: !10418)
!10426 = !DILocation(line: 0, scope: !10355)
!10427 = !DILocation(line: 178, column: 5, scope: !2011)
!10428 = distinct !DISubprogram(name: "BlockSize", scope: !1997, file: !1997, line: 191, type: !2012, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1996, retainedNodes: !10429)
!10429 = !{!10430, !10431, !10432, !10433, !10434}
!10430 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10428, file: !1997, line: 191, type: !88)
!10431 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10428, file: !1997, line: 191, type: !61)
!10432 = !DILocalVariable(name: "D", scope: !10428, file: !1997, line: 193, type: !2018)
!10433 = !DILocalVariable(name: "region", scope: !10428, file: !1997, line: 194, type: !61)
!10434 = !DILocalVariable(name: "BlockUpperBound", scope: !10428, file: !1997, line: 194, type: !61)
!10435 = !DILocation(line: 0, scope: !10428)
!10436 = !DILocation(line: 196, column: 26, scope: !10428)
!10437 = !DILocation(line: 196, column: 45, scope: !10428)
!10438 = !DILocation(line: 197, column: 28, scope: !10428)
!10439 = !DILocation(line: 197, column: 5, scope: !10428)
!10440 = !DILocation(line: 198, column: 15, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10428, file: !1997, line: 197, column: 43)
!10442 = !DILocation(line: 199, column: 50, scope: !10441)
!10443 = !DILocation(line: 199, column: 25, scope: !10441)
!10444 = distinct !{!10444, !10439, !10445}
!10445 = !DILocation(line: 200, column: 5, scope: !10428)
!10446 = !DILocation(line: 202, column: 35, scope: !10428)
!10447 = !DILocation(line: 202, column: 5, scope: !10428)
!10448 = distinct !DISubprogram(name: "BlockIndex", scope: !1997, file: !1997, line: 205, type: !2012, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1996, retainedNodes: !10449)
!10449 = !{!10450, !10451, !10452, !10453, !10454, !10455}
!10450 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10448, file: !1997, line: 205, type: !88)
!10451 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !10448, file: !1997, line: 205, type: !61)
!10452 = !DILocalVariable(name: "D", scope: !10448, file: !1997, line: 207, type: !2018)
!10453 = !DILocalVariable(name: "region", scope: !10448, file: !1997, line: 208, type: !61)
!10454 = !DILocalVariable(name: "BlockUpperAddr", scope: !10448, file: !1997, line: 208, type: !61)
!10455 = !DILocalVariable(name: "blk_idx", scope: !10448, file: !1997, line: 209, type: !61)
!10456 = !DILocation(line: 0, scope: !10448)
!10457 = !DILocation(line: 211, column: 25, scope: !10448)
!10458 = !DILocation(line: 211, column: 44, scope: !10448)
!10459 = !DILocation(line: 211, column: 81, scope: !10448)
!10460 = !DILocation(line: 211, column: 57, scope: !10448)
!10461 = !DILocation(line: 213, column: 28, scope: !10448)
!10462 = !DILocation(line: 213, column: 40, scope: !10448)
!10463 = !DILocation(line: 213, column: 66, scope: !10448)
!10464 = !DILocation(line: 213, column: 5, scope: !10448)
!10465 = !DILocation(line: 214, column: 17, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10448, file: !1997, line: 213, column: 78)
!10467 = !DILocation(line: 215, column: 18, scope: !10466)
!10468 = !DILocation(line: 216, column: 15, scope: !10466)
!10469 = !DILocation(line: 217, column: 48, scope: !10466)
!10470 = !DILocation(line: 217, column: 85, scope: !10466)
!10471 = !DILocation(line: 217, column: 61, scope: !10466)
!10472 = distinct !{!10472, !10464, !10473}
!10473 = !DILocation(line: 218, column: 5, scope: !10448)
!10474 = !DILocation(line: 221, column: 53, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !1997, line: 220, column: 37)
!10476 = distinct !DILexicalBlock(scope: !10448, file: !1997, line: 220, column: 9)
!10477 = !DILocation(line: 221, column: 29, scope: !10475)
!10478 = !DILocation(line: 221, column: 17, scope: !10475)
!10479 = !DILocation(line: 222, column: 5, scope: !10475)
!10480 = !DILocation(line: 0, scope: !10476)
!10481 = !DILocation(line: 225, column: 5, scope: !10448)
!10482 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !1997, file: !1997, line: 232, type: !3836, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1996, retainedNodes: !345)
!10483 = !DILocation(line: 238, column: 5, scope: !10482)
!10484 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !1997, file: !1997, line: 243, type: !3836, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1996, retainedNodes: !345)
!10485 = !DILocation(line: 245, column: 5, scope: !10484)
!10486 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !1997, file: !1997, line: 249, type: !3836, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1996, retainedNodes: !345)
!10487 = !DILocation(line: 254, column: 5, scope: !10486)
!10488 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !1997, file: !1997, line: 259, type: !3836, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1996, retainedNodes: !345)
!10489 = !DILocation(line: 261, column: 5, scope: !10488)
!10490 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !1997, file: !1997, line: 271, type: !6528, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1996, retainedNodes: !10491)
!10491 = !{!10492, !10493}
!10492 = !DILocalVariable(name: "delay", arg: 1, scope: !10490, file: !1997, line: 271, type: !61)
!10493 = !DILocalVariable(name: "ret", scope: !10490, file: !1997, line: 276, type: !2992)
!10494 = !DILocation(line: 0, scope: !10490)
!10495 = !DILocation(line: 277, column: 11, scope: !10490)
!10496 = !DILocation(line: 278, column: 13, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10490, file: !1997, line: 278, column: 9)
!10498 = !DILocation(line: 278, column: 9, scope: !10490)
!10499 = !DILocation(line: 279, column: 9, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10501, file: !1997, line: 279, column: 9)
!10501 = distinct !DILexicalBlock(scope: !10502, file: !1997, line: 279, column: 9)
!10502 = distinct !DILexicalBlock(scope: !10503, file: !1997, line: 279, column: 9)
!10503 = distinct !DILexicalBlock(scope: !10497, file: !1997, line: 278, column: 35)
!10504 = !DILocation(line: 282, column: 1, scope: !10490)
!10505 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2624, file: !2624, line: 58, type: !10506, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !10508)
!10506 = !DISubroutineType(types: !10507)
!10507 = !{null, !165, !7, !165, null}
!10508 = !{!10509, !10510, !10511, !10512, !10521}
!10509 = !DILocalVariable(name: "func", arg: 1, scope: !10505, file: !2624, line: 58, type: !165)
!10510 = !DILocalVariable(name: "line", arg: 2, scope: !10505, file: !2624, line: 58, type: !7)
!10511 = !DILocalVariable(name: "message", arg: 3, scope: !10505, file: !2624, line: 58, type: !165)
!10512 = !DILocalVariable(name: "ap", scope: !10505, file: !2624, line: 60, type: !10513)
!10513 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !10514, line: 46, baseType: !10515)
!10514 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!10515 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !10516, line: 32, baseType: !10517)
!10516 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!10517 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2624, baseType: !10518)
!10518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !10519)
!10519 = !{!10520}
!10520 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !10518, file: !2624, line: 60, baseType: !88, size: 32)
!10521 = !DILocalVariable(name: "mask", scope: !10505, file: !2624, line: 62, type: !61)
!10522 = !DILocation(line: 0, scope: !10505)
!10523 = !DILocation(line: 60, column: 5, scope: !10505)
!10524 = !DILocation(line: 60, column: 13, scope: !10505)
!10525 = !DILocation(line: 62, column: 5, scope: !10505)
!10526 = !DILocation(line: 63, column: 5, scope: !10505)
!10527 = !DILocation(line: 65, column: 5, scope: !10505)
!10528 = !DILocation(line: 66, column: 5, scope: !10505)
!10529 = !DILocation(line: 67, column: 5, scope: !10505)
!10530 = !DILocation(line: 69, column: 37, scope: !10505)
!10531 = !DILocation(line: 69, column: 5, scope: !10505)
!10532 = !DILocation(line: 71, column: 1, scope: !10505)
!10533 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2624, file: !2624, line: 72, type: !10506, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !10534)
!10534 = !{!10535, !10536, !10537, !10538, !10539}
!10535 = !DILocalVariable(name: "func", arg: 1, scope: !10533, file: !2624, line: 72, type: !165)
!10536 = !DILocalVariable(name: "line", arg: 2, scope: !10533, file: !2624, line: 72, type: !7)
!10537 = !DILocalVariable(name: "message", arg: 3, scope: !10533, file: !2624, line: 72, type: !165)
!10538 = !DILocalVariable(name: "ap", scope: !10533, file: !2624, line: 74, type: !10513)
!10539 = !DILocalVariable(name: "mask", scope: !10533, file: !2624, line: 76, type: !61)
!10540 = !DILocation(line: 0, scope: !10533)
!10541 = !DILocation(line: 74, column: 5, scope: !10533)
!10542 = !DILocation(line: 74, column: 13, scope: !10533)
!10543 = !DILocation(line: 76, column: 5, scope: !10533)
!10544 = !DILocation(line: 77, column: 5, scope: !10533)
!10545 = !DILocation(line: 79, column: 5, scope: !10533)
!10546 = !DILocation(line: 80, column: 5, scope: !10533)
!10547 = !DILocation(line: 81, column: 5, scope: !10533)
!10548 = !DILocation(line: 83, column: 37, scope: !10533)
!10549 = !DILocation(line: 83, column: 5, scope: !10533)
!10550 = !DILocation(line: 85, column: 1, scope: !10533)
!10551 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2624, file: !2624, line: 86, type: !10506, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !10552)
!10552 = !{!10553, !10554, !10555, !10556, !10557}
!10553 = !DILocalVariable(name: "func", arg: 1, scope: !10551, file: !2624, line: 86, type: !165)
!10554 = !DILocalVariable(name: "line", arg: 2, scope: !10551, file: !2624, line: 86, type: !7)
!10555 = !DILocalVariable(name: "message", arg: 3, scope: !10551, file: !2624, line: 86, type: !165)
!10556 = !DILocalVariable(name: "ap", scope: !10551, file: !2624, line: 88, type: !10513)
!10557 = !DILocalVariable(name: "mask", scope: !10551, file: !2624, line: 90, type: !61)
!10558 = !DILocation(line: 0, scope: !10551)
!10559 = !DILocation(line: 88, column: 5, scope: !10551)
!10560 = !DILocation(line: 88, column: 13, scope: !10551)
!10561 = !DILocation(line: 90, column: 5, scope: !10551)
!10562 = !DILocation(line: 91, column: 5, scope: !10551)
!10563 = !DILocation(line: 93, column: 5, scope: !10551)
!10564 = !DILocation(line: 94, column: 5, scope: !10551)
!10565 = !DILocation(line: 95, column: 5, scope: !10551)
!10566 = !DILocation(line: 97, column: 37, scope: !10551)
!10567 = !DILocation(line: 97, column: 5, scope: !10551)
!10568 = !DILocation(line: 99, column: 1, scope: !10551)
!10569 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2624, file: !2624, line: 101, type: !10570, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2623, retainedNodes: !10574)
!10570 = !DISubroutineType(types: !10571)
!10571 = !{null, !165, !7, !165, !10572, !7, null}
!10572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10573, size: 32)
!10573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!10574 = !{!10575, !10576, !10577, !10578, !10579}
!10575 = !DILocalVariable(name: "func", arg: 1, scope: !10569, file: !2624, line: 101, type: !165)
!10576 = !DILocalVariable(name: "line", arg: 2, scope: !10569, file: !2624, line: 101, type: !7)
!10577 = !DILocalVariable(name: "message", arg: 3, scope: !10569, file: !2624, line: 101, type: !165)
!10578 = !DILocalVariable(name: "data", arg: 4, scope: !10569, file: !2624, line: 101, type: !10572)
!10579 = !DILocalVariable(name: "length", arg: 5, scope: !10569, file: !2624, line: 101, type: !7)
!10580 = !DILocation(line: 0, scope: !10569)
!10581 = !DILocation(line: 103, column: 1, scope: !10569)
!10582 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2070, file: !2070, line: 87, type: !3584, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !10583)
!10583 = !{!10584, !10585}
!10584 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10582, file: !2070, line: 87, type: !61)
!10585 = !DILocalVariable(name: "value", scope: !10582, file: !2070, line: 89, type: !61)
!10586 = !DILocation(line: 0, scope: !10582)
!10587 = !DILocation(line: 91, column: 41, scope: !10582)
!10588 = !DILocation(line: 91, column: 5, scope: !10582)
!10589 = !DILocation(line: 91, column: 19, scope: !10582)
!10590 = !DILocation(line: 91, column: 31, scope: !10582)
!10591 = !DILocation(line: 92, column: 77, scope: !10582)
!10592 = !DILocation(line: 92, column: 60, scope: !10582)
!10593 = !DILocation(line: 92, column: 31, scope: !10582)
!10594 = !DILocation(line: 94, column: 5, scope: !10582)
!10595 = !DILocation(line: 94, column: 27, scope: !10582)
!10596 = !DILocation(line: 94, column: 39, scope: !10582)
!10597 = !DILocation(line: 94, column: 65, scope: !10582)
!10598 = distinct !{!10598, !10594, !10599}
!10599 = !DILocation(line: 94, column: 70, scope: !10582)
!10600 = !DILocation(line: 96, column: 29, scope: !10582)
!10601 = !DILocation(line: 96, column: 64, scope: !10582)
!10602 = !DILocation(line: 98, column: 5, scope: !10582)
!10603 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2070, file: !2070, line: 102, type: !10604, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !10606)
!10604 = !DISubroutineType(types: !10605)
!10605 = !{null, !61, !61}
!10606 = !{!10607, !10608}
!10607 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10603, file: !2070, line: 102, type: !61)
!10608 = !DILocalVariable(name: "value", arg: 2, scope: !10603, file: !2070, line: 102, type: !61)
!10609 = !DILocation(line: 0, scope: !10603)
!10610 = !DILocation(line: 106, column: 40, scope: !10603)
!10611 = !DILocation(line: 106, column: 77, scope: !10603)
!10612 = !DILocation(line: 106, column: 102, scope: !10603)
!10613 = !DILocation(line: 106, column: 5, scope: !10603)
!10614 = !DILocation(line: 106, column: 19, scope: !10603)
!10615 = !DILocation(line: 106, column: 31, scope: !10603)
!10616 = !DILocation(line: 107, column: 77, scope: !10603)
!10617 = !DILocation(line: 107, column: 60, scope: !10603)
!10618 = !DILocation(line: 107, column: 31, scope: !10603)
!10619 = !DILocation(line: 109, column: 5, scope: !10603)
!10620 = !DILocation(line: 109, column: 27, scope: !10603)
!10621 = !DILocation(line: 109, column: 39, scope: !10603)
!10622 = !DILocation(line: 109, column: 65, scope: !10603)
!10623 = distinct !{!10623, !10619, !10624}
!10624 = !DILocation(line: 109, column: 70, scope: !10603)
!10625 = !DILocation(line: 111, column: 5, scope: !10603)
!10626 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2070, file: !2070, line: 114, type: !343, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!10627 = !DILocation(line: 117, column: 36, scope: !10626)
!10628 = !DILocation(line: 117, column: 18, scope: !10626)
!10629 = !DILocation(line: 118, column: 37, scope: !10626)
!10630 = !DILocation(line: 118, column: 18, scope: !10626)
!10631 = !DILocation(line: 119, column: 37, scope: !10626)
!10632 = !DILocation(line: 119, column: 19, scope: !10626)
!10633 = !DILocation(line: 120, column: 37, scope: !10626)
!10634 = !DILocation(line: 120, column: 19, scope: !10626)
!10635 = !DILocation(line: 121, column: 37, scope: !10626)
!10636 = !DILocation(line: 121, column: 19, scope: !10626)
!10637 = !DILocation(line: 122, column: 37, scope: !10626)
!10638 = !DILocation(line: 122, column: 19, scope: !10626)
!10639 = !DILocation(line: 123, column: 37, scope: !10626)
!10640 = !DILocation(line: 123, column: 19, scope: !10626)
!10641 = !DILocation(line: 125, column: 37, scope: !10626)
!10642 = !DILocation(line: 125, column: 19, scope: !10626)
!10643 = !DILocation(line: 126, column: 37, scope: !10626)
!10644 = !DILocation(line: 126, column: 19, scope: !10626)
!10645 = !DILocation(line: 127, column: 37, scope: !10626)
!10646 = !DILocation(line: 127, column: 19, scope: !10626)
!10647 = !DILocation(line: 128, column: 37, scope: !10626)
!10648 = !DILocation(line: 128, column: 19, scope: !10626)
!10649 = !DILocation(line: 130, column: 36, scope: !10626)
!10650 = !DILocation(line: 130, column: 18, scope: !10626)
!10651 = !DILocation(line: 131, column: 36, scope: !10626)
!10652 = !DILocation(line: 131, column: 18, scope: !10626)
!10653 = !DILocation(line: 133, column: 5, scope: !10626)
!10654 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2070, file: !2070, line: 140, type: !10655, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!10655 = !DISubroutineType(types: !10656)
!10656 = !{!7}
!10657 = !DILocation(line: 144, column: 5, scope: !10654)
!10658 = !DILocation(line: 144, column: 19, scope: !10654)
!10659 = !DILocation(line: 144, column: 28, scope: !10654)
!10660 = !DILocation(line: 147, column: 19, scope: !10654)
!10661 = !DILocation(line: 147, column: 28, scope: !10654)
!10662 = !DILocation(line: 150, column: 19, scope: !10654)
!10663 = !DILocation(line: 150, column: 28, scope: !10654)
!10664 = !DILocation(line: 152, column: 5, scope: !10654)
!10665 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2070, file: !2070, line: 157, type: !7427, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !10666)
!10666 = !{!10667, !10668, !10669, !10670, !10671, !10672}
!10667 = !DILocalVariable(name: "mbist_src", scope: !10665, file: !2070, line: 159, type: !61)
!10668 = !DILocalVariable(name: "mbist_len", scope: !10665, file: !2070, line: 159, type: !61)
!10669 = !DILocalVariable(name: "mbist_data", scope: !10665, file: !2070, line: 159, type: !3557)
!10670 = !DILocalVariable(name: "i", scope: !10665, file: !2070, line: 160, type: !61)
!10671 = !DILocalVariable(name: "bist_data_inv", scope: !10665, file: !2070, line: 160, type: !61)
!10672 = !DILocalVariable(name: "bist_data_random", scope: !10665, file: !2070, line: 160, type: !61)
!10673 = !DILocation(line: 159, column: 36, scope: !10665)
!10674 = !DILocation(line: 0, scope: !10665)
!10675 = !DILocation(line: 165, column: 5, scope: !10665)
!10676 = !DILocation(line: 165, column: 19, scope: !10665)
!10677 = !DILocation(line: 165, column: 30, scope: !10665)
!10678 = !DILocation(line: 166, column: 5, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10665, file: !2070, line: 166, column: 5)
!10680 = !DILocation(line: 167, column: 9, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10682, file: !2070, line: 167, column: 9)
!10682 = distinct !DILexicalBlock(scope: !10683, file: !2070, line: 166, column: 66)
!10683 = distinct !DILexicalBlock(scope: !10679, file: !2070, line: 166, column: 5)
!10684 = !DILocation(line: 168, column: 13, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10686, file: !2070, line: 168, column: 13)
!10686 = distinct !DILexicalBlock(scope: !10687, file: !2070, line: 167, column: 34)
!10687 = distinct !DILexicalBlock(scope: !10681, file: !2070, line: 167, column: 9)
!10688 = !DILocation(line: 168, column: 57, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10685, file: !2070, line: 168, column: 13)
!10690 = distinct !{!10690, !10684, !10691}
!10691 = !DILocation(line: 183, column: 13, scope: !10685)
!10692 = !DILocation(line: 170, column: 42, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10689, file: !2070, line: 168, column: 83)
!10694 = !DILocation(line: 172, column: 42, scope: !10693)
!10695 = !DILocation(line: 174, column: 45, scope: !10693)
!10696 = !DILocation(line: 174, column: 59, scope: !10693)
!10697 = !DILocation(line: 174, column: 154, scope: !10693)
!10698 = !DILocation(line: 174, column: 87, scope: !10693)
!10699 = !DILocation(line: 174, column: 134, scope: !10693)
!10700 = !DILocation(line: 174, column: 42, scope: !10693)
!10701 = !DILocation(line: 175, column: 42, scope: !10693)
!10702 = !DILocation(line: 177, column: 17, scope: !10693)
!10703 = !DILocation(line: 177, column: 39, scope: !10693)
!10704 = !DILocation(line: 177, column: 50, scope: !10693)
!10705 = !DILocation(line: 177, column: 71, scope: !10693)
!10706 = distinct !{!10706, !10702, !10707}
!10707 = !DILocation(line: 177, column: 78, scope: !10693)
!10708 = !DILocation(line: 179, column: 36, scope: !10709)
!10709 = distinct !DILexicalBlock(scope: !10693, file: !2070, line: 179, column: 21)
!10710 = !DILocation(line: 179, column: 47, scope: !10709)
!10711 = !DILocation(line: 179, column: 69, scope: !10709)
!10712 = !DILocation(line: 168, column: 79, scope: !10689)
!10713 = !DILocation(line: 179, column: 21, scope: !10693)
!10714 = !DILocation(line: 167, column: 30, scope: !10687)
!10715 = !DILocation(line: 167, column: 23, scope: !10687)
!10716 = distinct !{!10716, !10680, !10717}
!10717 = !DILocation(line: 184, column: 9, scope: !10681)
!10718 = !DILocation(line: 166, column: 62, scope: !10683)
!10719 = !DILocation(line: 166, column: 43, scope: !10683)
!10720 = distinct !{!10720, !10678, !10721}
!10721 = !DILocation(line: 185, column: 5, scope: !10679)
!10722 = !DILocation(line: 189, column: 1, scope: !10665)
!10723 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2070, file: !2070, line: 190, type: !7427, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!10724 = !DILocation(line: 192, column: 9, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10723, file: !2070, line: 192, column: 9)
!10726 = !DILocation(line: 192, column: 26, scope: !10725)
!10727 = !DILocation(line: 0, scope: !10723)
!10728 = !DILocation(line: 197, column: 1, scope: !10723)
!10729 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2070, file: !2070, line: 201, type: !343, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !10730)
!10730 = !{!10731, !10732}
!10731 = !DILocalVariable(name: "dqy_in_del", scope: !10729, file: !2070, line: 203, type: !1032)
!10732 = !DILocalVariable(name: "dqs_in_del", scope: !10729, file: !2070, line: 204, type: !1032)
!10733 = !DILocation(line: 0, scope: !10729)
!10734 = !DILocation(line: 206, column: 5, scope: !10729)
!10735 = !DILocation(line: 206, column: 19, scope: !10729)
!10736 = !DILocation(line: 206, column: 28, scope: !10729)
!10737 = !DILocation(line: 207, column: 19, scope: !10729)
!10738 = !DILocation(line: 207, column: 28, scope: !10729)
!10739 = !DILocation(line: 208, column: 19, scope: !10729)
!10740 = !DILocation(line: 208, column: 28, scope: !10729)
!10741 = !DILocation(line: 209, column: 19, scope: !10729)
!10742 = !DILocation(line: 209, column: 28, scope: !10729)
!10743 = !DILocation(line: 212, column: 23, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10745, file: !2070, line: 211, column: 78)
!10745 = distinct !DILexicalBlock(scope: !10746, file: !2070, line: 211, column: 5)
!10746 = distinct !DILexicalBlock(scope: !10729, file: !2070, line: 211, column: 5)
!10747 = !DILocation(line: 212, column: 32, scope: !10744)
!10748 = !DILocation(line: 213, column: 23, scope: !10744)
!10749 = !DILocation(line: 213, column: 32, scope: !10744)
!10750 = !DILocation(line: 215, column: 19, scope: !10751)
!10751 = distinct !DILexicalBlock(scope: !10744, file: !2070, line: 215, column: 13)
!10752 = !DILocation(line: 215, column: 15, scope: !10751)
!10753 = !DILocation(line: 215, column: 13, scope: !10744)
!10754 = !DILocation(line: 211, column: 40, scope: !10745)
!10755 = !DILocation(line: 211, column: 5, scope: !10746)
!10756 = distinct !{!10756, !10755, !10757}
!10757 = !DILocation(line: 218, column: 5, scope: !10746)
!10758 = !DILocation(line: 211, column: 57, scope: !10745)
!10759 = !DILocation(line: 212, column: 9, scope: !10744)
!10760 = !DILocation(line: 212, column: 45, scope: !10744)
!10761 = !DILocation(line: 212, column: 83, scope: !10744)
!10762 = !DILocation(line: 212, column: 121, scope: !10744)
!10763 = !DILocation(line: 212, column: 70, scope: !10744)
!10764 = !DILocation(line: 212, column: 108, scope: !10744)
!10765 = !DILocation(line: 212, column: 146, scope: !10744)
!10766 = !DILocation(line: 222, column: 49, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10768, file: !2070, line: 221, column: 84)
!10768 = distinct !DILexicalBlock(scope: !10769, file: !2070, line: 221, column: 9)
!10769 = distinct !DILexicalBlock(scope: !10770, file: !2070, line: 221, column: 9)
!10770 = distinct !DILexicalBlock(scope: !10771, file: !2070, line: 220, column: 25)
!10771 = distinct !DILexicalBlock(scope: !10729, file: !2070, line: 220, column: 9)
!10772 = !DILocation(line: 222, column: 13, scope: !10767)
!10773 = !DILocation(line: 222, column: 27, scope: !10767)
!10774 = !DILocation(line: 222, column: 36, scope: !10767)
!10775 = !DILocation(line: 224, column: 23, scope: !10776)
!10776 = distinct !DILexicalBlock(scope: !10767, file: !2070, line: 224, column: 17)
!10777 = !DILocation(line: 224, column: 19, scope: !10776)
!10778 = !DILocation(line: 224, column: 17, scope: !10767)
!10779 = distinct !{!10779, !10780, !10781}
!10780 = !DILocation(line: 221, column: 9, scope: !10769)
!10781 = !DILocation(line: 227, column: 9, scope: !10769)
!10782 = !DILocation(line: 230, column: 1, scope: !10729)
!10783 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2070, file: !2070, line: 253, type: !343, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!10784 = !DILocation(line: 257, column: 26, scope: !10783)
!10785 = !DILocation(line: 259, column: 5, scope: !10783)
!10786 = !DILocation(line: 259, column: 19, scope: !10783)
!10787 = !DILocation(line: 259, column: 29, scope: !10783)
!10788 = !DILocation(line: 260, column: 5, scope: !10783)
!10789 = !DILocation(line: 260, column: 27, scope: !10783)
!10790 = !DILocation(line: 260, column: 93, scope: !10783)
!10791 = distinct !{!10791, !10788, !10792}
!10792 = !DILocation(line: 260, column: 98, scope: !10783)
!10793 = !DILocation(line: 261, column: 29, scope: !10783)
!10794 = !DILocation(line: 262, column: 5, scope: !10783)
!10795 = !DILocation(line: 262, column: 27, scope: !10783)
!10796 = !DILocation(line: 262, column: 93, scope: !10783)
!10797 = distinct !{!10797, !10794, !10798}
!10798 = !DILocation(line: 262, column: 98, scope: !10783)
!10799 = !DILocation(line: 264, column: 42, scope: !10783)
!10800 = !DILocation(line: 265, column: 48, scope: !10783)
!10801 = !DILocation(line: 267, column: 5, scope: !10783)
!10802 = !DILocation(line: 267, column: 27, scope: !10783)
!10803 = !DILocation(line: 267, column: 39, scope: !10783)
!10804 = !DILocation(line: 267, column: 65, scope: !10783)
!10805 = distinct !{!10805, !10801, !10806}
!10806 = !DILocation(line: 267, column: 70, scope: !10783)
!10807 = !DILocation(line: 269, column: 5, scope: !10783)
!10808 = !DILocation(line: 273, column: 8, scope: !10783)
!10809 = !DILocation(line: 275, column: 5, scope: !10783)
!10810 = !DILocation(line: 275, column: 27, scope: !10783)
!10811 = !DILocation(line: 275, column: 39, scope: !10783)
!10812 = !DILocation(line: 275, column: 65, scope: !10783)
!10813 = distinct !{!10813, !10809, !10814}
!10814 = !DILocation(line: 275, column: 70, scope: !10783)
!10815 = !DILocation(line: 278, column: 9, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10783, file: !2070, line: 278, column: 9)
!10817 = !DILocation(line: 278, column: 44, scope: !10816)
!10818 = !DILocation(line: 278, column: 9, scope: !10783)
!10819 = !DILocation(line: 279, column: 13, scope: !10820)
!10820 = distinct !DILexicalBlock(scope: !10821, file: !2070, line: 279, column: 12)
!10821 = distinct !DILexicalBlock(scope: !10816, file: !2070, line: 278, column: 55)
!10822 = !DILocation(line: 279, column: 48, scope: !10820)
!10823 = !DILocation(line: 279, column: 56, scope: !10820)
!10824 = !DILocation(line: 0, scope: !10820)
!10825 = !DILocation(line: 288, column: 1, scope: !10783)
!10826 = distinct !DISubprogram(name: "custom_setEMI", scope: !2070, file: !2070, line: 294, type: !10827, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!10827 = !DISubroutineType(types: !10828)
!10828 = !{!1346}
!10829 = !DILocation(line: 298, column: 5, scope: !10826)
!10830 = !DILocation(line: 300, column: 5, scope: !10826)
!10831 = !DILocation(line: 302, column: 20, scope: !10826)
!10832 = !DILocation(line: 302, column: 18, scope: !10826)
!10833 = !DILocation(line: 303, column: 20, scope: !10826)
!10834 = !DILocation(line: 303, column: 18, scope: !10826)
!10835 = !DILocation(line: 304, column: 20, scope: !10826)
!10836 = !DILocation(line: 304, column: 18, scope: !10826)
!10837 = !DILocation(line: 307, column: 5, scope: !10826)
!10838 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2070, file: !2070, line: 312, type: !10827, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!10839 = !DILocation(line: 319, column: 29, scope: !10838)
!10840 = !DILocation(line: 319, column: 5, scope: !10838)
!10841 = !DILocation(line: 319, column: 19, scope: !10838)
!10842 = !DILocation(line: 319, column: 27, scope: !10838)
!10843 = !DILocation(line: 320, column: 29, scope: !10838)
!10844 = !DILocation(line: 320, column: 19, scope: !10838)
!10845 = !DILocation(line: 320, column: 27, scope: !10838)
!10846 = !DILocation(line: 322, column: 30, scope: !10838)
!10847 = !DILocation(line: 322, column: 19, scope: !10838)
!10848 = !DILocation(line: 322, column: 28, scope: !10838)
!10849 = !DILocation(line: 324, column: 30, scope: !10838)
!10850 = !DILocation(line: 324, column: 19, scope: !10838)
!10851 = !DILocation(line: 324, column: 28, scope: !10838)
!10852 = !DILocation(line: 326, column: 31, scope: !10838)
!10853 = !DILocation(line: 326, column: 19, scope: !10838)
!10854 = !DILocation(line: 326, column: 29, scope: !10838)
!10855 = !DILocation(line: 327, column: 31, scope: !10838)
!10856 = !DILocation(line: 327, column: 19, scope: !10838)
!10857 = !DILocation(line: 327, column: 29, scope: !10838)
!10858 = !DILocation(line: 332, column: 30, scope: !10838)
!10859 = !DILocation(line: 332, column: 19, scope: !10838)
!10860 = !DILocation(line: 332, column: 28, scope: !10838)
!10861 = !DILocation(line: 333, column: 30, scope: !10838)
!10862 = !DILocation(line: 333, column: 19, scope: !10838)
!10863 = !DILocation(line: 333, column: 28, scope: !10838)
!10864 = !DILocation(line: 334, column: 30, scope: !10838)
!10865 = !DILocation(line: 334, column: 19, scope: !10838)
!10866 = !DILocation(line: 334, column: 28, scope: !10838)
!10867 = !DILocation(line: 336, column: 30, scope: !10838)
!10868 = !DILocation(line: 336, column: 19, scope: !10838)
!10869 = !DILocation(line: 336, column: 28, scope: !10838)
!10870 = !DILocation(line: 337, column: 30, scope: !10838)
!10871 = !DILocation(line: 337, column: 19, scope: !10838)
!10872 = !DILocation(line: 337, column: 28, scope: !10838)
!10873 = !DILocation(line: 338, column: 30, scope: !10838)
!10874 = !DILocation(line: 338, column: 19, scope: !10838)
!10875 = !DILocation(line: 338, column: 28, scope: !10838)
!10876 = !DILocation(line: 339, column: 30, scope: !10838)
!10877 = !DILocation(line: 339, column: 19, scope: !10838)
!10878 = !DILocation(line: 339, column: 28, scope: !10838)
!10879 = !DILocation(line: 341, column: 5, scope: !10838)
!10880 = !DILocation(line: 345, column: 5, scope: !10838)
!10881 = !DILocation(line: 345, column: 19, scope: !10838)
!10882 = !DILocation(line: 345, column: 28, scope: !10838)
!10883 = !DILocation(line: 346, column: 5, scope: !10838)
!10884 = !DILocation(line: 346, column: 28, scope: !10838)
!10885 = !DILocation(line: 346, column: 82, scope: !10838)
!10886 = distinct !{!10886, !10883, !10887}
!10887 = !DILocation(line: 346, column: 87, scope: !10838)
!10888 = !DILocation(line: 347, column: 28, scope: !10838)
!10889 = !DILocation(line: 348, column: 5, scope: !10838)
!10890 = !DILocation(line: 348, column: 28, scope: !10838)
!10891 = !DILocation(line: 348, column: 82, scope: !10838)
!10892 = distinct !{!10892, !10889, !10893}
!10893 = !DILocation(line: 348, column: 87, scope: !10838)
!10894 = !DILocation(line: 349, column: 28, scope: !10838)
!10895 = !DILocation(line: 351, column: 5, scope: !10838)
!10896 = !DILocation(line: 353, column: 5, scope: !10838)
!10897 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2070, file: !2070, line: 358, type: !343, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!10898 = !DILocation(line: 361, column: 36, scope: !10897)
!10899 = !DILocation(line: 361, column: 50, scope: !10897)
!10900 = !DILocation(line: 361, column: 34, scope: !10897)
!10901 = !DILocation(line: 362, column: 50, scope: !10897)
!10902 = !DILocation(line: 362, column: 34, scope: !10897)
!10903 = !DILocation(line: 363, column: 50, scope: !10897)
!10904 = !DILocation(line: 363, column: 34, scope: !10897)
!10905 = !DILocation(line: 364, column: 50, scope: !10897)
!10906 = !DILocation(line: 364, column: 34, scope: !10897)
!10907 = !DILocation(line: 365, column: 50, scope: !10897)
!10908 = !DILocation(line: 365, column: 34, scope: !10897)
!10909 = !DILocation(line: 366, column: 50, scope: !10897)
!10910 = !DILocation(line: 366, column: 34, scope: !10897)
!10911 = !DILocation(line: 367, column: 50, scope: !10897)
!10912 = !DILocation(line: 367, column: 34, scope: !10897)
!10913 = !DILocation(line: 368, column: 50, scope: !10897)
!10914 = !DILocation(line: 368, column: 34, scope: !10897)
!10915 = !DILocation(line: 369, column: 50, scope: !10897)
!10916 = !DILocation(line: 369, column: 34, scope: !10897)
!10917 = !DILocation(line: 370, column: 50, scope: !10897)
!10918 = !DILocation(line: 370, column: 34, scope: !10897)
!10919 = !DILocation(line: 371, column: 50, scope: !10897)
!10920 = !DILocation(line: 371, column: 34, scope: !10897)
!10921 = !DILocation(line: 372, column: 50, scope: !10897)
!10922 = !DILocation(line: 372, column: 34, scope: !10897)
!10923 = !DILocation(line: 373, column: 51, scope: !10897)
!10924 = !DILocation(line: 373, column: 35, scope: !10897)
!10925 = !DILocation(line: 374, column: 51, scope: !10897)
!10926 = !DILocation(line: 374, column: 35, scope: !10897)
!10927 = !DILocation(line: 375, column: 50, scope: !10897)
!10928 = !DILocation(line: 375, column: 34, scope: !10897)
!10929 = !DILocation(line: 376, column: 50, scope: !10897)
!10930 = !DILocation(line: 376, column: 34, scope: !10897)
!10931 = !DILocation(line: 377, column: 50, scope: !10897)
!10932 = !DILocation(line: 377, column: 34, scope: !10897)
!10933 = !DILocation(line: 378, column: 50, scope: !10897)
!10934 = !DILocation(line: 378, column: 34, scope: !10897)
!10935 = !DILocation(line: 379, column: 50, scope: !10897)
!10936 = !DILocation(line: 379, column: 34, scope: !10897)
!10937 = !DILocation(line: 380, column: 50, scope: !10897)
!10938 = !DILocation(line: 380, column: 34, scope: !10897)
!10939 = !DILocation(line: 382, column: 1, scope: !10897)
!10940 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2070, file: !2070, line: 384, type: !343, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!10941 = !DILocation(line: 387, column: 5, scope: !10940)
!10942 = !DILocation(line: 387, column: 27, scope: !10940)
!10943 = !DILocation(line: 387, column: 36, scope: !10940)
!10944 = !DILocation(line: 387, column: 76, scope: !10940)
!10945 = distinct !{!10945, !10941, !10946}
!10946 = !DILocation(line: 387, column: 84, scope: !10940)
!10947 = !DILocation(line: 388, column: 50, scope: !10940)
!10948 = !DILocation(line: 388, column: 19, scope: !10940)
!10949 = !DILocation(line: 388, column: 28, scope: !10940)
!10950 = !DILocation(line: 389, column: 50, scope: !10940)
!10951 = !DILocation(line: 389, column: 19, scope: !10940)
!10952 = !DILocation(line: 389, column: 28, scope: !10940)
!10953 = !DILocation(line: 390, column: 50, scope: !10940)
!10954 = !DILocation(line: 390, column: 19, scope: !10940)
!10955 = !DILocation(line: 390, column: 28, scope: !10940)
!10956 = !DILocation(line: 391, column: 50, scope: !10940)
!10957 = !DILocation(line: 391, column: 19, scope: !10940)
!10958 = !DILocation(line: 391, column: 28, scope: !10940)
!10959 = !DILocation(line: 392, column: 50, scope: !10940)
!10960 = !DILocation(line: 392, column: 19, scope: !10940)
!10961 = !DILocation(line: 392, column: 28, scope: !10940)
!10962 = !DILocation(line: 393, column: 50, scope: !10940)
!10963 = !DILocation(line: 393, column: 19, scope: !10940)
!10964 = !DILocation(line: 393, column: 28, scope: !10940)
!10965 = !DILocation(line: 394, column: 51, scope: !10940)
!10966 = !DILocation(line: 394, column: 19, scope: !10940)
!10967 = !DILocation(line: 394, column: 29, scope: !10940)
!10968 = !DILocation(line: 395, column: 51, scope: !10940)
!10969 = !DILocation(line: 395, column: 19, scope: !10940)
!10970 = !DILocation(line: 395, column: 29, scope: !10940)
!10971 = !DILocation(line: 396, column: 50, scope: !10940)
!10972 = !DILocation(line: 396, column: 19, scope: !10940)
!10973 = !DILocation(line: 396, column: 28, scope: !10940)
!10974 = !DILocation(line: 397, column: 50, scope: !10940)
!10975 = !DILocation(line: 397, column: 19, scope: !10940)
!10976 = !DILocation(line: 397, column: 28, scope: !10940)
!10977 = !DILocation(line: 398, column: 50, scope: !10940)
!10978 = !DILocation(line: 398, column: 19, scope: !10940)
!10979 = !DILocation(line: 398, column: 28, scope: !10940)
!10980 = !DILocation(line: 399, column: 50, scope: !10940)
!10981 = !DILocation(line: 399, column: 19, scope: !10940)
!10982 = !DILocation(line: 399, column: 28, scope: !10940)
!10983 = !DILocation(line: 400, column: 50, scope: !10940)
!10984 = !DILocation(line: 400, column: 19, scope: !10940)
!10985 = !DILocation(line: 400, column: 28, scope: !10940)
!10986 = !DILocation(line: 401, column: 50, scope: !10940)
!10987 = !DILocation(line: 401, column: 19, scope: !10940)
!10988 = !DILocation(line: 401, column: 28, scope: !10940)
!10989 = !DILocation(line: 402, column: 50, scope: !10940)
!10990 = !DILocation(line: 402, column: 19, scope: !10940)
!10991 = !DILocation(line: 402, column: 28, scope: !10940)
!10992 = !DILocation(line: 403, column: 50, scope: !10940)
!10993 = !DILocation(line: 403, column: 19, scope: !10940)
!10994 = !DILocation(line: 403, column: 28, scope: !10940)
!10995 = !DILocation(line: 404, column: 50, scope: !10940)
!10996 = !DILocation(line: 404, column: 19, scope: !10940)
!10997 = !DILocation(line: 404, column: 28, scope: !10940)
!10998 = !DILocation(line: 405, column: 50, scope: !10940)
!10999 = !DILocation(line: 405, column: 19, scope: !10940)
!11000 = !DILocation(line: 405, column: 28, scope: !10940)
!11001 = !DILocation(line: 406, column: 50, scope: !10940)
!11002 = !DILocation(line: 406, column: 19, scope: !10940)
!11003 = !DILocation(line: 406, column: 28, scope: !10940)
!11004 = !DILocation(line: 408, column: 1, scope: !10940)
!11005 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2070, file: !2070, line: 410, type: !343, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!11006 = !DILocation(line: 413, column: 29, scope: !11005)
!11007 = !DILocation(line: 413, column: 43, scope: !11005)
!11008 = !DILocation(line: 413, column: 51, scope: !11005)
!11009 = !DILocation(line: 413, column: 27, scope: !11005)
!11010 = !DILocation(line: 416, column: 19, scope: !11005)
!11011 = !DILocation(line: 416, column: 29, scope: !11005)
!11012 = !DILocation(line: 417, column: 5, scope: !11005)
!11013 = !DILocation(line: 417, column: 27, scope: !11005)
!11014 = !DILocation(line: 417, column: 93, scope: !11005)
!11015 = distinct !{!11015, !11012, !11016}
!11016 = !DILocation(line: 417, column: 98, scope: !11005)
!11017 = !DILocation(line: 418, column: 29, scope: !11005)
!11018 = !DILocation(line: 419, column: 5, scope: !11005)
!11019 = !DILocation(line: 419, column: 27, scope: !11005)
!11020 = !DILocation(line: 419, column: 93, scope: !11005)
!11021 = distinct !{!11021, !11018, !11022}
!11022 = !DILocation(line: 419, column: 98, scope: !11005)
!11023 = !DILocation(line: 421, column: 5, scope: !11005)
!11024 = !DILocation(line: 422, column: 5, scope: !11005)
!11025 = !DILocation(line: 422, column: 19, scope: !11005)
!11026 = !DILocation(line: 422, column: 28, scope: !11005)
!11027 = !DILocation(line: 423, column: 5, scope: !11005)
!11028 = !DILocation(line: 423, column: 28, scope: !11005)
!11029 = !DILocation(line: 423, column: 82, scope: !11005)
!11030 = distinct !{!11030, !11027, !11031}
!11031 = !DILocation(line: 423, column: 87, scope: !11005)
!11032 = !DILocation(line: 424, column: 28, scope: !11005)
!11033 = !DILocation(line: 425, column: 5, scope: !11005)
!11034 = !DILocation(line: 425, column: 28, scope: !11005)
!11035 = !DILocation(line: 425, column: 82, scope: !11005)
!11036 = distinct !{!11036, !11033, !11037}
!11037 = !DILocation(line: 425, column: 87, scope: !11005)
!11038 = !DILocation(line: 426, column: 28, scope: !11005)
!11039 = !DILocation(line: 428, column: 50, scope: !11005)
!11040 = !DILocation(line: 428, column: 19, scope: !11005)
!11041 = !DILocation(line: 428, column: 28, scope: !11005)
!11042 = !DILocation(line: 432, column: 1, scope: !11005)
!11043 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2070, file: !2070, line: 434, type: !343, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!11044 = !DILocation(line: 437, column: 5, scope: !11043)
!11045 = !DILocation(line: 440, column: 5, scope: !11043)
!11046 = !DILocation(line: 440, column: 27, scope: !11043)
!11047 = !DILocation(line: 440, column: 36, scope: !11043)
!11048 = !DILocation(line: 440, column: 76, scope: !11043)
!11049 = distinct !{!11049, !11045, !11050}
!11050 = !DILocation(line: 440, column: 84, scope: !11043)
!11051 = !DILocation(line: 441, column: 45, scope: !11043)
!11052 = !DILocation(line: 441, column: 54, scope: !11043)
!11053 = !DILocation(line: 441, column: 28, scope: !11043)
!11054 = !DILocation(line: 442, column: 19, scope: !11043)
!11055 = !DILocation(line: 442, column: 31, scope: !11043)
!11056 = !DILocation(line: 443, column: 5, scope: !11043)
!11057 = !DILocation(line: 443, column: 27, scope: !11043)
!11058 = !DILocation(line: 443, column: 39, scope: !11043)
!11059 = !DILocation(line: 443, column: 65, scope: !11043)
!11060 = distinct !{!11060, !11056, !11061}
!11061 = !DILocation(line: 443, column: 70, scope: !11043)
!11062 = !DILocation(line: 444, column: 19, scope: !11043)
!11063 = !DILocation(line: 444, column: 28, scope: !11043)
!11064 = !DILocation(line: 445, column: 5, scope: !11043)
!11065 = !DILocation(line: 445, column: 27, scope: !11043)
!11066 = !DILocation(line: 445, column: 91, scope: !11043)
!11067 = distinct !{!11067, !11064, !11068}
!11068 = !DILocation(line: 445, column: 96, scope: !11043)
!11069 = !DILocation(line: 447, column: 43, scope: !11043)
!11070 = !DILocation(line: 447, column: 51, scope: !11043)
!11071 = !DILocation(line: 447, column: 27, scope: !11043)
!11072 = !DILocation(line: 450, column: 1, scope: !11043)
!11073 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2070, file: !2070, line: 452, type: !11074, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !11077)
!11074 = !DISubroutineType(types: !11075)
!11075 = !{!1032, !11076}
!11076 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2073, line: 43, baseType: !2072)
!11077 = !{!11078, !11079}
!11078 = !DILocalVariable(name: "clock", arg: 1, scope: !11073, file: !2070, line: 452, type: !11076)
!11079 = !DILocalVariable(name: "delay", scope: !11073, file: !2070, line: 457, type: !60)
!11080 = !DILocation(line: 0, scope: !11073)
!11081 = !DILocation(line: 457, column: 5, scope: !11073)
!11082 = !DILocation(line: 457, column: 23, scope: !11073)
!11083 = !DILocation(line: 458, column: 9, scope: !11073)
!11084 = !DILocation(line: 465, column: 9, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11086, file: !2070, line: 458, column: 39)
!11086 = distinct !DILexicalBlock(scope: !11073, file: !2070, line: 458, column: 9)
!11087 = !DILocation(line: 465, column: 23, scope: !11085)
!11088 = !DILocation(line: 465, column: 32, scope: !11085)
!11089 = !DILocation(line: 466, column: 32, scope: !11085)
!11090 = !DILocation(line: 467, column: 9, scope: !11085)
!11091 = !DILocation(line: 467, column: 32, scope: !11085)
!11092 = !DILocation(line: 467, column: 86, scope: !11085)
!11093 = distinct !{!11093, !11090, !11094}
!11094 = !DILocation(line: 467, column: 91, scope: !11085)
!11095 = !DILocation(line: 468, column: 32, scope: !11085)
!11096 = !DILocation(line: 469, column: 9, scope: !11085)
!11097 = !DILocation(line: 469, column: 32, scope: !11085)
!11098 = !DILocation(line: 469, column: 86, scope: !11085)
!11099 = distinct !{!11099, !11096, !11100}
!11100 = !DILocation(line: 469, column: 91, scope: !11085)
!11101 = !DILocation(line: 470, column: 32, scope: !11085)
!11102 = !DILocation(line: 472, column: 20, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11085, file: !2070, line: 472, column: 9)
!11104 = !DILocation(line: 472, column: 25, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11103, file: !2070, line: 472, column: 9)
!11106 = !DILocation(line: 472, column: 31, scope: !11105)
!11107 = !DILocation(line: 472, column: 9, scope: !11103)
!11108 = !DILocation(line: 472, column: 44, scope: !11105)
!11109 = distinct !{!11109, !11107, !11110}
!11110 = !DILocation(line: 472, column: 47, scope: !11103)
!11111 = !DILocation(line: 478, column: 9, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11113, file: !2070, line: 477, column: 12)
!11113 = distinct !DILexicalBlock(scope: !11086, file: !2070, line: 475, column: 16)
!11114 = !DILocation(line: 483, column: 1, scope: !11073)
!11115 = distinct !DISubprogram(name: "emi_mask_master", scope: !2070, file: !2070, line: 487, type: !343, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!11116 = !DILocation(line: 490, column: 30, scope: !11115)
!11117 = !DILocation(line: 490, column: 44, scope: !11115)
!11118 = !DILocation(line: 490, column: 53, scope: !11115)
!11119 = !DILocation(line: 490, column: 28, scope: !11115)
!11120 = !DILocation(line: 492, column: 1, scope: !11115)
!11121 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2070, file: !2070, line: 494, type: !343, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2069, retainedNodes: !345)
!11122 = !DILocation(line: 497, column: 30, scope: !11121)
!11123 = !DILocation(line: 497, column: 44, scope: !11121)
!11124 = !DILocation(line: 497, column: 53, scope: !11121)
!11125 = !DILocation(line: 497, column: 28, scope: !11121)
!11126 = !DILocation(line: 500, column: 1, scope: !11121)
!11127 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2236, file: !2236, line: 56, type: !7908, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2235, retainedNodes: !345)
!11128 = !DILocation(line: 61, column: 5, scope: !11127)
!11129 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2236, file: !2236, line: 65, type: !7908, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2235, retainedNodes: !345)
!11130 = !DILocation(line: 70, column: 5, scope: !11129)
!11131 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2236, file: !2236, line: 74, type: !343, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2235, retainedNodes: !345)
!11132 = !DILocation(line: 79, column: 9, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11134, file: !2236, line: 78, column: 12)
!11134 = distinct !DILexicalBlock(scope: !11131, file: !2236, line: 76, column: 9)
!11135 = !DILocation(line: 81, column: 1, scope: !11131)
!11136 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2236, file: !2236, line: 83, type: !343, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2235, retainedNodes: !345)
!11137 = !DILocation(line: 88, column: 9, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11139, file: !2236, line: 87, column: 12)
!11139 = distinct !DILexicalBlock(scope: !11136, file: !2236, line: 85, column: 9)
!11140 = !DILocation(line: 90, column: 1, scope: !11136)
!11141 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2236, file: !2236, line: 92, type: !343, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2235, retainedNodes: !345)
!11142 = !DILocation(line: 97, column: 9, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11144, file: !2236, line: 96, column: 12)
!11144 = distinct !DILexicalBlock(scope: !11141, file: !2236, line: 94, column: 9)
!11145 = !DILocation(line: 99, column: 1, scope: !11141)
!11146 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2236, file: !2236, line: 101, type: !343, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2235, retainedNodes: !345)
!11147 = !DILocation(line: 106, column: 9, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11149, file: !2236, line: 105, column: 12)
!11149 = distinct !DILexicalBlock(scope: !11146, file: !2236, line: 103, column: 9)
!11150 = !DILocation(line: 108, column: 1, scope: !11146)
!11151 = distinct !DISubprogram(name: "__io_putchar", scope: !2626, file: !2626, line: 52, type: !11152, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !11154)
!11152 = !DISubroutineType(types: !11153)
!11153 = !{!7, !7}
!11154 = !{!11155}
!11155 = !DILocalVariable(name: "ch", arg: 1, scope: !11151, file: !2626, line: 52, type: !7)
!11156 = !DILocation(line: 0, scope: !11151)
!11157 = !DILocation(line: 59, column: 35, scope: !11151)
!11158 = !DILocation(line: 59, column: 5, scope: !11151)
!11159 = !DILocation(line: 60, column: 5, scope: !11151)
!11160 = distinct !DISubprogram(name: "main", scope: !2626, file: !2626, line: 110, type: !10655, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !345)
!11161 = !DILocation(line: 113, column: 5, scope: !11160)
!11162 = !DILocation(line: 115, column: 5, scope: !11160)
!11163 = !DILocation(line: 118, column: 5, scope: !11160)
!11164 = !DILocation(line: 319, column: 3, scope: !11165, inlinedAt: !11166)
!11165 = distinct !DISubprogram(name: "__enable_irq", scope: !6519, file: !6519, line: 317, type: !343, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !345)
!11166 = distinct !DILocation(line: 121, column: 5, scope: !11160)
!11167 = !{i64 648791}
!11168 = !DILocation(line: 496, column: 3, scope: !11169, inlinedAt: !11170)
!11169 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !6519, file: !6519, line: 494, type: !343, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !345)
!11170 = distinct !DILocation(line: 122, column: 5, scope: !11160)
!11171 = !{i64 653066}
!11172 = !DILocation(line: 125, column: 5, scope: !11160)
!11173 = !DILocation(line: 126, column: 5, scope: !11160)
!11174 = !DILocation(line: 127, column: 5, scope: !11160)
!11175 = !DILocation(line: 128, column: 5, scope: !11160)
!11176 = !DILocation(line: 131, column: 5, scope: !11160)
!11177 = !DILocation(line: 133, column: 5, scope: !11160)
!11178 = distinct !{!11178, !11177, !11179}
!11179 = !DILocation(line: 133, column: 14, scope: !11160)
!11180 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2626, file: !2626, line: 91, type: !343, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !345)
!11181 = !DILocation(line: 93, column: 5, scope: !11180)
!11182 = !DILocation(line: 94, column: 1, scope: !11180)
!11183 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2626, file: !2626, line: 101, type: !343, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !345)
!11184 = !DILocation(line: 104, column: 5, scope: !11183)
!11185 = !DILocation(line: 105, column: 5, scope: !11183)
!11186 = !DILocation(line: 106, column: 5, scope: !11183)
!11187 = !DILocation(line: 107, column: 1, scope: !11183)
!11188 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !2626, file: !2626, line: 68, type: !343, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2625, retainedNodes: !11189)
!11189 = !{!11190}
!11190 = !DILocalVariable(name: "uart_config", scope: !11188, file: !2626, line: 70, type: !11191)
!11191 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !697, line: 378, baseType: !11192)
!11192 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !697, line: 373, size: 128, elements: !11193)
!11193 = !{!11194, !11195, !11196, !11197}
!11194 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !11192, file: !697, line: 374, baseType: !815, size: 32)
!11195 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !11192, file: !697, line: 375, baseType: !817, size: 32, offset: 32)
!11196 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !11192, file: !697, line: 376, baseType: !819, size: 32, offset: 64)
!11197 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !11192, file: !697, line: 377, baseType: !821, size: 32, offset: 96)
!11198 = !DILocation(line: 70, column: 5, scope: !11188)
!11199 = !DILocation(line: 70, column: 23, scope: !11188)
!11200 = !DILocation(line: 73, column: 5, scope: !11188)
!11201 = !DILocation(line: 74, column: 5, scope: !11188)
!11202 = !DILocation(line: 75, column: 5, scope: !11188)
!11203 = !DILocation(line: 76, column: 5, scope: !11188)
!11204 = !DILocation(line: 79, column: 17, scope: !11188)
!11205 = !DILocation(line: 79, column: 26, scope: !11188)
!11206 = !DILocation(line: 80, column: 17, scope: !11188)
!11207 = !DILocation(line: 80, column: 29, scope: !11188)
!11208 = !DILocation(line: 81, column: 17, scope: !11188)
!11209 = !DILocation(line: 81, column: 26, scope: !11188)
!11210 = !DILocation(line: 82, column: 17, scope: !11188)
!11211 = !DILocation(line: 82, column: 24, scope: !11188)
!11212 = !DILocation(line: 83, column: 5, scope: !11188)
!11213 = !DILocation(line: 84, column: 1, scope: !11188)
!11214 = distinct !DISubprogram(name: "_close", scope: !2248, file: !2248, line: 44, type: !11152, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11215)
!11215 = !{!11216}
!11216 = !DILocalVariable(name: "file", arg: 1, scope: !11214, file: !2248, line: 44, type: !7)
!11217 = !DILocation(line: 0, scope: !11214)
!11218 = !DILocation(line: 46, column: 5, scope: !11214)
!11219 = distinct !DISubprogram(name: "_stat", scope: !2248, file: !2248, line: 49, type: !11220, scopeLine: 50, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11268)
!11220 = !DISubroutineType(types: !11221)
!11221 = !{!7, !776, !11222}
!11222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11223, size: 32)
!11223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !11224, line: 27, size: 704, elements: !11225)
!11224 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!11225 = !{!11226, !11229, !11232, !11235, !11238, !11241, !11244, !11245, !11248, !11258, !11259, !11260, !11263, !11266}
!11226 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !11223, file: !11224, line: 29, baseType: !11227, size: 16)
!11227 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2252, line: 161, baseType: !11228)
!11228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2290, line: 56, baseType: !1532)
!11229 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !11223, file: !11224, line: 30, baseType: !11230, size: 16, offset: 16)
!11230 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2252, line: 139, baseType: !11231)
!11231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2290, line: 75, baseType: !1128)
!11232 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !11223, file: !11224, line: 31, baseType: !11233, size: 32, offset: 32)
!11233 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2252, line: 189, baseType: !11234)
!11234 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2290, line: 90, baseType: !63)
!11235 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !11223, file: !11224, line: 32, baseType: !11236, size: 16, offset: 64)
!11236 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2252, line: 194, baseType: !11237)
!11237 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2290, line: 209, baseType: !1128)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !11223, file: !11224, line: 33, baseType: !11239, size: 16, offset: 80)
!11239 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2252, line: 165, baseType: !11240)
!11240 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2290, line: 60, baseType: !1128)
!11241 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !11223, file: !11224, line: 34, baseType: !11242, size: 16, offset: 96)
!11242 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2252, line: 169, baseType: !11243)
!11243 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2290, line: 63, baseType: !1128)
!11244 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !11223, file: !11224, line: 35, baseType: !11227, size: 16, offset: 112)
!11245 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !11223, file: !11224, line: 36, baseType: !11246, size: 32, offset: 128)
!11246 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2252, line: 157, baseType: !11247)
!11247 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2290, line: 102, baseType: !2306)
!11248 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !11223, file: !11224, line: 42, baseType: !11249, size: 128, offset: 192)
!11249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !11250, line: 47, size: 128, elements: !11251)
!11250 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!11251 = !{!11252, !11257}
!11252 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11249, file: !11250, line: 48, baseType: !11253, size: 64)
!11253 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !11254, line: 42, baseType: !11255)
!11254 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!11255 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !11256)
!11256 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!11257 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !11249, file: !11250, line: 49, baseType: !2291, size: 32, offset: 64)
!11258 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !11223, file: !11224, line: 43, baseType: !11249, size: 128, offset: 320)
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !11223, file: !11224, line: 44, baseType: !11249, size: 128, offset: 448)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !11223, file: !11224, line: 45, baseType: !11261, size: 32, offset: 576)
!11261 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2252, line: 102, baseType: !11262)
!11262 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2290, line: 34, baseType: !2291)
!11263 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !11223, file: !11224, line: 46, baseType: !11264, size: 32, offset: 608)
!11264 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2252, line: 97, baseType: !11265)
!11265 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2290, line: 30, baseType: !2291)
!11266 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !11223, file: !11224, line: 48, baseType: !11267, size: 64, offset: 640)
!11267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2291, size: 64, elements: !508)
!11268 = !{!11269, !11270}
!11269 = !DILocalVariable(name: "file", arg: 1, scope: !11219, file: !2248, line: 49, type: !776)
!11270 = !DILocalVariable(name: "st", arg: 2, scope: !11219, file: !2248, line: 49, type: !11222)
!11271 = !DILocation(line: 0, scope: !11219)
!11272 = !DILocation(line: 51, column: 9, scope: !11219)
!11273 = !DILocation(line: 51, column: 17, scope: !11219)
!11274 = !DILocation(line: 52, column: 5, scope: !11219)
!11275 = distinct !DISubprogram(name: "_fstat", scope: !2248, file: !2248, line: 55, type: !11276, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11278)
!11276 = !DISubroutineType(types: !11277)
!11277 = !{!7, !7, !11222}
!11278 = !{!11279, !11280}
!11279 = !DILocalVariable(name: "file", arg: 1, scope: !11275, file: !2248, line: 55, type: !7)
!11280 = !DILocalVariable(name: "st", arg: 2, scope: !11275, file: !2248, line: 55, type: !11222)
!11281 = !DILocation(line: 0, scope: !11275)
!11282 = !DILocation(line: 57, column: 9, scope: !11275)
!11283 = !DILocation(line: 57, column: 17, scope: !11275)
!11284 = !DILocation(line: 58, column: 5, scope: !11275)
!11285 = distinct !DISubprogram(name: "_isatty", scope: !2248, file: !2248, line: 61, type: !11152, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11286)
!11286 = !{!11287}
!11287 = !DILocalVariable(name: "file", arg: 1, scope: !11285, file: !2248, line: 61, type: !7)
!11288 = !DILocation(line: 0, scope: !11285)
!11289 = !DILocation(line: 63, column: 5, scope: !11285)
!11290 = distinct !DISubprogram(name: "_lseek", scope: !2248, file: !2248, line: 66, type: !11291, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11293)
!11291 = !DISubroutineType(types: !11292)
!11292 = !{!7, !7, !7, !7}
!11293 = !{!11294, !11295, !11296}
!11294 = !DILocalVariable(name: "file", arg: 1, scope: !11290, file: !2248, line: 66, type: !7)
!11295 = !DILocalVariable(name: "ptr", arg: 2, scope: !11290, file: !2248, line: 66, type: !7)
!11296 = !DILocalVariable(name: "dir", arg: 3, scope: !11290, file: !2248, line: 66, type: !7)
!11297 = !DILocation(line: 0, scope: !11290)
!11298 = !DILocation(line: 68, column: 5, scope: !11290)
!11299 = distinct !DISubprogram(name: "_open", scope: !2248, file: !2248, line: 71, type: !11300, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11302)
!11300 = !DISubroutineType(types: !11301)
!11301 = !{!7, !165, !7, !7}
!11302 = !{!11303, !11304, !11305}
!11303 = !DILocalVariable(name: "name", arg: 1, scope: !11299, file: !2248, line: 71, type: !165)
!11304 = !DILocalVariable(name: "flags", arg: 2, scope: !11299, file: !2248, line: 71, type: !7)
!11305 = !DILocalVariable(name: "mode", arg: 3, scope: !11299, file: !2248, line: 71, type: !7)
!11306 = !DILocation(line: 0, scope: !11299)
!11307 = !DILocation(line: 73, column: 5, scope: !11299)
!11308 = distinct !DISubprogram(name: "_read", scope: !2248, file: !2248, line: 76, type: !11309, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11311)
!11309 = !DISubroutineType(types: !11310)
!11310 = !{!7, !7, !776, !7}
!11311 = !{!11312, !11313, !11314, !11315}
!11312 = !DILocalVariable(name: "file", arg: 1, scope: !11308, file: !2248, line: 76, type: !7)
!11313 = !DILocalVariable(name: "ptr", arg: 2, scope: !11308, file: !2248, line: 76, type: !776)
!11314 = !DILocalVariable(name: "len", arg: 3, scope: !11308, file: !2248, line: 76, type: !7)
!11315 = !DILocalVariable(name: "DataIdx", scope: !11308, file: !2248, line: 78, type: !7)
!11316 = !DILocation(line: 0, scope: !11308)
!11317 = !DILocation(line: 80, column: 31, scope: !11318)
!11318 = distinct !DILexicalBlock(scope: !11319, file: !2248, line: 80, column: 5)
!11319 = distinct !DILexicalBlock(scope: !11308, file: !2248, line: 80, column: 5)
!11320 = !DILocation(line: 80, column: 5, scope: !11319)
!11321 = !DILocation(line: 81, column: 18, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11318, file: !2248, line: 80, column: 49)
!11323 = !DILocation(line: 81, column: 13, scope: !11322)
!11324 = !DILocation(line: 81, column: 16, scope: !11322)
!11325 = !DILocation(line: 80, column: 45, scope: !11318)
!11326 = distinct !{!11326, !11320, !11327}
!11327 = !DILocation(line: 82, column: 5, scope: !11319)
!11328 = !DILocation(line: 84, column: 5, scope: !11308)
!11329 = distinct !DISubprogram(name: "_write", scope: !2248, file: !2248, line: 87, type: !11309, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11330)
!11330 = !{!11331, !11332, !11333, !11334}
!11331 = !DILocalVariable(name: "file", arg: 1, scope: !11329, file: !2248, line: 87, type: !7)
!11332 = !DILocalVariable(name: "ptr", arg: 2, scope: !11329, file: !2248, line: 87, type: !776)
!11333 = !DILocalVariable(name: "len", arg: 3, scope: !11329, file: !2248, line: 87, type: !7)
!11334 = !DILocalVariable(name: "DataIdx", scope: !11329, file: !2248, line: 89, type: !7)
!11335 = !DILocation(line: 0, scope: !11329)
!11336 = !DILocation(line: 91, column: 31, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11338, file: !2248, line: 91, column: 5)
!11338 = distinct !DILexicalBlock(scope: !11329, file: !2248, line: 91, column: 5)
!11339 = !DILocation(line: 91, column: 5, scope: !11338)
!11340 = !DILocation(line: 92, column: 26, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11337, file: !2248, line: 91, column: 49)
!11342 = !DILocation(line: 92, column: 22, scope: !11341)
!11343 = !DILocation(line: 92, column: 9, scope: !11341)
!11344 = !DILocation(line: 91, column: 45, scope: !11337)
!11345 = distinct !{!11345, !11339, !11346}
!11346 = !DILocation(line: 93, column: 5, scope: !11338)
!11347 = !DILocation(line: 94, column: 5, scope: !11329)
!11348 = !DILocation(line: 0, scope: !2247)
!11349 = !DILocation(line: 105, column: 5, scope: !2247)
!11350 = !{i64 3489}
!11351 = !DILocation(line: 107, column: 14, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !2247, file: !2248, line: 107, column: 9)
!11353 = !DILocation(line: 107, column: 11, scope: !11352)
!11354 = !DILocation(line: 107, column: 9, scope: !2247)
!11355 = !DILocation(line: 113, column: 32, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !2247, file: !2248, line: 113, column: 9)
!11357 = !DILocation(line: 113, column: 15, scope: !11356)
!11358 = !DILocation(line: 124, column: 1, scope: !2247)
!11359 = !DILocation(line: 113, column: 9, scope: !2247)
!11360 = distinct !DISubprogram(name: "_execve", scope: !2248, file: !2248, line: 127, type: !11361, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11364)
!11361 = !DISubroutineType(types: !11362)
!11362 = !{!7, !776, !11363, !11363}
!11363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 32)
!11364 = !{!11365, !11366, !11367}
!11365 = !DILocalVariable(name: "name", arg: 1, scope: !11360, file: !2248, line: 127, type: !776)
!11366 = !DILocalVariable(name: "argv", arg: 2, scope: !11360, file: !2248, line: 127, type: !11363)
!11367 = !DILocalVariable(name: "env", arg: 3, scope: !11360, file: !2248, line: 127, type: !11363)
!11368 = !DILocation(line: 0, scope: !11360)
!11369 = !DILocation(line: 129, column: 11, scope: !11360)
!11370 = !DILocation(line: 130, column: 5, scope: !11360)
!11371 = distinct !DISubprogram(name: "_fork", scope: !2248, file: !2248, line: 133, type: !10655, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !345)
!11372 = !DILocation(line: 135, column: 11, scope: !11371)
!11373 = !DILocation(line: 136, column: 5, scope: !11371)
!11374 = distinct !DISubprogram(name: "_getpid", scope: !2248, file: !2248, line: 139, type: !10655, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !345)
!11375 = !DILocation(line: 141, column: 11, scope: !11374)
!11376 = !DILocation(line: 142, column: 5, scope: !11374)
!11377 = distinct !DISubprogram(name: "_kill", scope: !2248, file: !2248, line: 145, type: !11378, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11380)
!11378 = !DISubroutineType(types: !11379)
!11379 = !{!7, !7, !7}
!11380 = !{!11381, !11382}
!11381 = !DILocalVariable(name: "pid", arg: 1, scope: !11377, file: !2248, line: 145, type: !7)
!11382 = !DILocalVariable(name: "sig", arg: 2, scope: !11377, file: !2248, line: 145, type: !7)
!11383 = !DILocation(line: 0, scope: !11377)
!11384 = !DILocation(line: 147, column: 11, scope: !11377)
!11385 = !DILocation(line: 148, column: 5, scope: !11377)
!11386 = distinct !DISubprogram(name: "_wait", scope: !2248, file: !2248, line: 151, type: !11387, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11390)
!11387 = !DISubroutineType(types: !11388)
!11388 = !{!7, !11389}
!11389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 32)
!11390 = !{!11391}
!11391 = !DILocalVariable(name: "status", arg: 1, scope: !11386, file: !2248, line: 151, type: !11389)
!11392 = !DILocation(line: 0, scope: !11386)
!11393 = !DILocation(line: 153, column: 11, scope: !11386)
!11394 = !DILocation(line: 154, column: 5, scope: !11386)
!11395 = distinct !DISubprogram(name: "_exit", scope: !2248, file: !2248, line: 157, type: !11152, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11396)
!11396 = !{!11397}
!11397 = !DILocalVariable(name: "status", arg: 1, scope: !11395, file: !2248, line: 157, type: !7)
!11398 = !DILocation(line: 0, scope: !11395)
!11399 = !DILocation(line: 159, column: 11, scope: !11395)
!11400 = !DILocation(line: 160, column: 5, scope: !11395)
!11401 = distinct !DISubprogram(name: "_link", scope: !2248, file: !2248, line: 163, type: !11402, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11404)
!11402 = !DISubroutineType(types: !11403)
!11403 = !{!7, !776, !776}
!11404 = !{!11405, !11406}
!11405 = !DILocalVariable(name: "old", arg: 1, scope: !11401, file: !2248, line: 163, type: !776)
!11406 = !DILocalVariable(name: "new", arg: 2, scope: !11401, file: !2248, line: 163, type: !776)
!11407 = !DILocation(line: 0, scope: !11401)
!11408 = !DILocation(line: 165, column: 11, scope: !11401)
!11409 = !DILocation(line: 166, column: 5, scope: !11401)
!11410 = distinct !DISubprogram(name: "_unlink", scope: !2248, file: !2248, line: 169, type: !11411, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11413)
!11411 = !DISubroutineType(types: !11412)
!11412 = !{!7, !776}
!11413 = !{!11414}
!11414 = !DILocalVariable(name: "name", arg: 1, scope: !11410, file: !2248, line: 169, type: !776)
!11415 = !DILocation(line: 0, scope: !11410)
!11416 = !DILocation(line: 171, column: 11, scope: !11410)
!11417 = !DILocation(line: 172, column: 5, scope: !11410)
!11418 = distinct !DISubprogram(name: "_gettimeofday", scope: !2248, file: !2248, line: 179, type: !11419, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11428)
!11419 = !DISubroutineType(types: !11420)
!11420 = !{!7, !11421, !88}
!11421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11422, size: 32)
!11422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !11254, line: 54, size: 128, elements: !11423)
!11423 = !{!11424, !11425}
!11424 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11422, file: !11254, line: 55, baseType: !11253, size: 64)
!11425 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !11422, file: !11254, line: 56, baseType: !11426, size: 32, offset: 64)
!11426 = !DIDerivedType(tag: DW_TAG_typedef, name: "suseconds_t", file: !11254, line: 37, baseType: !11427)
!11427 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !2290, line: 210, baseType: !2291)
!11428 = !{!11429, !11430}
!11429 = !DILocalVariable(name: "tv", arg: 1, scope: !11418, file: !2248, line: 179, type: !11421)
!11430 = !DILocalVariable(name: "ptz", arg: 2, scope: !11418, file: !2248, line: 179, type: !88)
!11431 = !DILocation(line: 0, scope: !11418)
!11432 = !DILocation(line: 182, column: 5, scope: !11418)
!11433 = distinct !DISubprogram(name: "_times", scope: !2248, file: !2248, line: 185, type: !11434, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2438, retainedNodes: !11445)
!11434 = !DISubroutineType(types: !11435)
!11435 = !{!7, !11436}
!11436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11437, size: 32)
!11437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tms", file: !11438, line: 17, size: 128, elements: !11439)
!11438 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/times.h", directory: "/home/mjshen/RTOSExploration")
!11439 = !{!11440, !11442, !11443, !11444}
!11440 = !DIDerivedType(tag: DW_TAG_member, name: "tms_utime", scope: !11437, file: !11438, line: 18, baseType: !11441, size: 32)
!11441 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_t", file: !2252, line: 107, baseType: !2352)
!11442 = !DIDerivedType(tag: DW_TAG_member, name: "tms_stime", scope: !11437, file: !11438, line: 19, baseType: !11441, size: 32, offset: 32)
!11443 = !DIDerivedType(tag: DW_TAG_member, name: "tms_cutime", scope: !11437, file: !11438, line: 20, baseType: !11441, size: 32, offset: 64)
!11444 = !DIDerivedType(tag: DW_TAG_member, name: "tms_cstime", scope: !11437, file: !11438, line: 21, baseType: !11441, size: 32, offset: 96)
!11445 = !{!11446}
!11446 = !DILocalVariable(name: "buf", arg: 1, scope: !11433, file: !2248, line: 185, type: !11436)
!11447 = !DILocation(line: 0, scope: !11433)
!11448 = !DILocation(line: 187, column: 11, scope: !11433)
!11449 = !DILocation(line: 188, column: 5, scope: !11433)
!11450 = distinct !DISubprogram(name: "SysTick_Set", scope: !2450, file: !2450, line: 62, type: !3584, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !11451)
!11451 = !{!11452, !11453}
!11452 = !DILocalVariable(name: "ticks", arg: 1, scope: !11450, file: !2450, line: 62, type: !61)
!11453 = !DILocalVariable(name: "val", scope: !11450, file: !2450, line: 64, type: !61)
!11454 = !DILocation(line: 0, scope: !11450)
!11455 = !DILocation(line: 67, column: 16, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11450, file: !2450, line: 67, column: 9)
!11457 = !DILocation(line: 67, column: 21, scope: !11456)
!11458 = !DILocation(line: 67, column: 9, scope: !11450)
!11459 = !DILocation(line: 72, column: 20, scope: !11450)
!11460 = !DILocation(line: 75, column: 19, scope: !11450)
!11461 = !DILocation(line: 79, column: 20, scope: !11450)
!11462 = !DILocation(line: 80, column: 20, scope: !11450)
!11463 = !DILocation(line: 83, column: 19, scope: !11450)
!11464 = !DILocation(line: 85, column: 5, scope: !11450)
!11465 = !DILocation(line: 86, column: 1, scope: !11450)
!11466 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2450, file: !2450, line: 95, type: !343, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !345)
!11467 = !DILocation(line: 97, column: 28, scope: !11466)
!11468 = !DILocation(line: 98, column: 1, scope: !11466)
!11469 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2450, file: !2450, line: 107, type: !3836, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !345)
!11470 = !DILocation(line: 109, column: 12, scope: !11469)
!11471 = !DILocation(line: 109, column: 5, scope: !11469)
!11472 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2450, file: !2450, line: 119, type: !343, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !11473)
!11473 = !{!11474}
!11474 = !DILocalVariable(name: "cm_mux_sel", scope: !11472, file: !2450, line: 121, type: !159)
!11475 = !DILocation(line: 121, column: 38, scope: !11472)
!11476 = !DILocation(line: 121, column: 26, scope: !11472)
!11477 = !DILocation(line: 0, scope: !11472)
!11478 = !DILocation(line: 123, column: 5, scope: !11472)
!11479 = !DILocation(line: 132, column: 13, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11472, file: !2450, line: 123, column: 25)
!11481 = !DILocation(line: 140, column: 13, scope: !11480)
!11482 = !DILocation(line: 0, scope: !11480)
!11483 = !DILocation(line: 146, column: 26, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11472, file: !2450, line: 146, column: 9)
!11485 = !DILocation(line: 146, column: 50, scope: !11484)
!11486 = !DILocation(line: 146, column: 41, scope: !11484)
!11487 = !DILocation(line: 148, column: 25, scope: !11488)
!11488 = distinct !DILexicalBlock(scope: !11484, file: !2450, line: 147, column: 52)
!11489 = !DILocation(line: 149, column: 5, scope: !11488)
!11490 = !DILocation(line: 150, column: 1, scope: !11472)
!11491 = distinct !DISubprogram(name: "SystemInit", scope: !2450, file: !2450, line: 158, type: !343, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !345)
!11492 = !DILocation(line: 162, column: 16, scope: !11491)
!11493 = !DILocation(line: 166, column: 16, scope: !11491)
!11494 = !DILocation(line: 169, column: 16, scope: !11491)
!11495 = !DILocation(line: 172, column: 1, scope: !11491)
!11496 = distinct !DISubprogram(name: "CachePreInit", scope: !2450, file: !2450, line: 180, type: !343, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2449, retainedNodes: !345)
!11497 = !DILocation(line: 183, column: 22, scope: !11496)
!11498 = !DILocation(line: 186, column: 21, scope: !11496)
!11499 = !DILocation(line: 189, column: 21, scope: !11496)
!11500 = !DILocation(line: 192, column: 29, scope: !11496)
!11501 = !DILocation(line: 193, column: 33, scope: !11496)
!11502 = !DILocation(line: 195, column: 28, scope: !11496)
!11503 = !DILocation(line: 200, column: 30, scope: !11496)
!11504 = !DILocation(line: 214, column: 1, scope: !11496)
