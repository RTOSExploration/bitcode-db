; ModuleID = './build/aes_encrypt_decrypt_data.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %union.anon, %union.anon, %union.anon, i32, %union.anon, %union.anon, i32, %union.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%union.anon = type { i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.vdma_config_t*, i8*, %struct.vdma_config_t*, i8*, i32, i8*, [8 x [2 x %struct.vdma_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.vdma_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.vdma_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.vdma_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%struct.aes_parcel_t = type { %struct.hal_aes_buffer_t*, %struct.hal_aes_buffer_t*, %struct.hal_aes_buffer_t*, i8* }
%struct.hal_aes_buffer_t = type { i8*, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon*, %struct.anon*, i8, %struct.vdma_config_t*, i8*, %struct.vdma_config_t*, i8*, i32, i8*, [8 x [2 x %struct.vdma_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.hal_aes_buffer_t, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.hal_aes_buffer_t, i8*, i32, [3 x i8], [1 x i8], %struct.hal_aes_buffer_t, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %union.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !0
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !196
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !260
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !257
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !212
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !234
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !261
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !544
@.str = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !655
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !673
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !687
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !698
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !668
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !699
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !771
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !776
@.str.79 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.80 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !784
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !875
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !862
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.85 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@g_crypt_lock = dso_local local_unnamed_addr global i8 0, align 1, !dbg !880
@__FUNCTION__.hal_aes_cbc_encrypt = private unnamed_addr constant [20 x i8] c"hal_aes_cbc_encrypt\00", align 1
@.str.95 = private unnamed_addr constant [29 x i8] c"Inadequate encrypted buffer.\00", align 1
@__FUNCTION__.hal_aes_ecb_encrypt = private unnamed_addr constant [20 x i8] c"hal_aes_ecb_encrypt\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !898
@.str.96 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.97 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !977
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !979
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !981
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !983
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !985
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !987
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !989
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !991
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !993
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !995
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !997
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1310
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1312
@.str.100 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.101 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1321
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1314
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1322
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1374
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1377
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1410
@nor_egid = dso_local local_unnamed_addr global %struct.anon* null, align 4, !dbg !1421
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1737
@RegionInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1608
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1636
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1739
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1446
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1632
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1634
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1458
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1719
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1722
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 0, i32 4096 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer], [8 x %struct.vdma_config_t] [%struct.vdma_config_t { i32 4194304, i32 1 }, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer, %struct.vdma_config_t zeroinitializer] }] } }, align 4, !dbg !1752
@BlockLayout = internal unnamed_addr global %struct.vdma_config_t* null, align 4, !dbg !1611
@BankInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1624
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1595
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1599
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1597
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1448
@.str.116 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.117 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.vdma_config_t] zeroinitializer, align 4, !dbg !1724
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1603
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1620
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1622
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !1779
@.str.122 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.123 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !1839
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1726
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1840
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1854
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1856
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1858
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1860
@.str.138 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.139 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !1862
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !1916
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !1918
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !1920
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1932
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1934
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1936
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !1938
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2041
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2043
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2045
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2047
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2049
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2051
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2053
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2055
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2057
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2059
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2061
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2063
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2065
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2067
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2039
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2088
@.str.150 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.151 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@__const.aes_encrypt_decrypt_data_example.hardware_id = private unnamed_addr constant [16 x i8] c"MTK0000020140815", align 1
@__const.aes_encrypt_decrypt_data_example.aes_cbc_iv = private unnamed_addr constant [16 x i8] c"a3FhU81Cwh63Pv3F", align 1
@__const.aes_encrypt_decrypt_data_example.plain = private unnamed_addr constant [30 x i8] c"\00\0B\16!,7BMXc\00\0B\16!,7BMXc\00\0B\16!,7BMXc", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"Origin data:\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"aes_cbc_iv:\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"Key:\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"Encrypted data(AES CBC):\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"Decrypted data(AES CBC):\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"Encrypted data(AES ECB):\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"Decrypted data(AES ECB):\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c" %02x \00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2100
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2304
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2419
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:00:38 GMT +00:00\00", align 1, !dbg !2421
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2426
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2432

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !2528 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2534, metadata !DIExpression()), !dbg !2535
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !2536
  br i1 %2, label %3, label %26, !dbg !2538

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !2539
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !2541
  %6 = load i32, i32* %5, align 4, !dbg !2541
  %7 = icmp eq i32 %6, 1, !dbg !2542
  br i1 %7, label %26, label %8, !dbg !2543

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2544
  %10 = load i8, i8* %9, align 4, !dbg !2544, !range !2545
  %11 = icmp eq i8 %10, 0, !dbg !2544
  br i1 %11, label %12, label %26, !dbg !2546

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !2547
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #22, !dbg !2548
  tail call void @gpt_open_clock_source() #22, !dbg !2549
  store i8 1, i8* %9, align 4, !dbg !2550
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2551
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !2551
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !2552
  %18 = load volatile i32, i32* %17, align 4, !dbg !2553
  %19 = and i32 %18, -2, !dbg !2553
  store volatile i32 %19, i32* %17, align 4, !dbg !2553
  %20 = shl nuw i32 1, %0, !dbg !2554
  %21 = xor i32 %20, -1, !dbg !2555
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !2556
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !2557
  %24 = load volatile i32, i32* %23, align 4, !dbg !2558
  %25 = and i32 %24, %21, !dbg !2558
  store volatile i32 %25, i32* %23, align 4, !dbg !2558
  br label %26, !dbg !2559

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !2535
  ret i32 %27, !dbg !2560
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #2 !dbg !2561 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2565, metadata !DIExpression()), !dbg !2566
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !2567, !range !2545
  %3 = icmp ne i8 %2, 0, !dbg !2569
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !2570
  %7 = and i1 %5, %6, !dbg !2570
  ret i1 %7, !dbg !2571
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !2572 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2574, metadata !DIExpression()), !dbg !2575
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !2576
  br i1 %2, label %3, label %14, !dbg !2578

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !2579
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !2581
  %6 = load i32, i32* %5, align 4, !dbg !2581
  %7 = icmp eq i32 %6, 1, !dbg !2582
  br i1 %7, label %14, label %8, !dbg !2583

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !2584
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #22, !dbg !2585
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2586
  store i8 0, i8* %11, align 4, !dbg !2587
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2588
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !2588
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #22, !dbg !2589
  br label %14, !dbg !2590

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !2575
  ret i32 %15, !dbg !2591
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2592 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2597, metadata !DIExpression()), !dbg !2599
  call void @llvm.dbg.value(metadata i32* %1, metadata !2598, metadata !DIExpression()), !dbg !2599
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !2600

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2601
  %5 = icmp eq i32 %4, 1, !dbg !2605
  br i1 %5, label %8, label %6, !dbg !2606

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2607
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #22, !dbg !2609
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2610
  br label %8, !dbg !2611

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2612
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #22, !dbg !2613
  br label %20, !dbg !2614

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2615
  %13 = icmp eq i32 %12, 1, !dbg !2619
  br i1 %13, label %16, label %14, !dbg !2620

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2621
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #22, !dbg !2623
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2624
  br label %16, !dbg !2625

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2626
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #22, !dbg !2627
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #22, !dbg !2628
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !2629
  store i32 %21, i32* %1, align 4, !dbg !2629
  br label %22, !dbg !2630

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !2599
  ret i32 %23, !dbg !2631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #4 section ".tcm_code" !dbg !2632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2636, metadata !DIExpression()), !dbg !2639
  call void @llvm.dbg.value(metadata i32 %1, metadata !2637, metadata !DIExpression()), !dbg !2639
  call void @llvm.dbg.value(metadata i32* %2, metadata !2638, metadata !DIExpression()), !dbg !2639
  %4 = icmp eq i32* %2, null, !dbg !2640
  br i1 %4, label %7, label %5, !dbg !2642

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !2643
  store i32 %6, i32* %2, align 4, !dbg !2643
  br label %7, !dbg !2645

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !2639
  ret i32 %8, !dbg !2646
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #5 !dbg !2647 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2652, metadata !DIExpression()), !dbg !2654
  call void @llvm.dbg.value(metadata i32* %1, metadata !2653, metadata !DIExpression()), !dbg !2654
  %3 = icmp ugt i32 %0, 5, !dbg !2655
  br i1 %3, label %7, label %4, !dbg !2657

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2658
  %6 = load i32, i32* %5, align 4, !dbg !2658
  store i32 %6, i32* %1, align 4, !dbg !2659
  br label %7, !dbg !2660

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !2654
  ret i32 %8, !dbg !2661
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !2662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2666, metadata !DIExpression()), !dbg !2669
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !2667, metadata !DIExpression()), !dbg !2669
  call void @llvm.dbg.value(metadata i8* %2, metadata !2668, metadata !DIExpression()), !dbg !2669
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !2670
  br i1 %4, label %5, label %18, !dbg !2672

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2673
  %7 = load i32, i32* %6, align 4, !dbg !2673
  %8 = icmp eq i32 %7, 1, !dbg !2675
  br i1 %8, label %18, label %9, !dbg !2676

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2677
  %11 = load i8, i8* %10, align 4, !dbg !2677, !range !2545
  %12 = icmp eq i8 %11, 1, !dbg !2678
  br i1 %12, label %13, label %18, !dbg !2679

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !2680
  br i1 %14, label %18, label %15, !dbg !2682

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !2683
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !2684
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !2685
  store i8* %2, i8** %17, align 4, !dbg !2686
  tail call void @gpt_nvic_register() #22, !dbg !2687
  br label %18, !dbg !2688

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !2669
  ret i32 %19, !dbg !2689
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !2690 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2695, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %1, metadata !2696, metadata !DIExpression()), !dbg !2699
  call void @llvm.dbg.value(metadata i32 %2, metadata !2697, metadata !DIExpression()), !dbg !2699
  %5 = bitcast i32* %4 to i8*, !dbg !2700
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !2700
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2698, metadata !DIExpression()), !dbg !2701
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !2702
  br i1 %6, label %7, label %51, !dbg !2704

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2705
  %9 = load i32, i32* %8, align 4, !dbg !2705
  %10 = icmp eq i32 %9, 1, !dbg !2707
  br i1 %10, label %51, label %11, !dbg !2708

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2709
  %13 = load i8, i8* %12, align 4, !dbg !2709, !range !2545
  %14 = icmp eq i8 %13, 1, !dbg !2710
  br i1 %14, label %15, label %51, !dbg !2711

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !2712
  br i1 %16, label %51, label %17, !dbg !2714

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !2715
  store volatile i32 %18, i32* %4, align 4, !dbg !2716
  tail call void @gpt_open_clock_source() #22, !dbg !2717
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2718
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2718
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !2719
  %22 = load volatile i32, i32* %21, align 4, !dbg !2720
  %23 = and i32 %22, -2, !dbg !2720
  store volatile i32 %23, i32* %21, align 4, !dbg !2720
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2721
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !2722
  %26 = load volatile i32, i32* %25, align 4, !dbg !2723
  %27 = and i32 %26, -2, !dbg !2723
  store volatile i32 %27, i32* %25, align 4, !dbg !2723
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2724
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !2725
  store volatile i32 16, i32* %29, align 4, !dbg !2726
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #22, !dbg !2727
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2728
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !2729
  store volatile i32 %30, i32* %32, align 4, !dbg !2730
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2731
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !2732
  store volatile i32 1, i32* %34, align 4, !dbg !2733
  %35 = shl i32 %2, 4, !dbg !2734
  %36 = or i32 %35, 2, !dbg !2735
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2736
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !2737
  store volatile i32 %36, i32* %38, align 4, !dbg !2738
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !2739

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !2740
  %43 = icmp eq i32 %42, 0, !dbg !2739
  br i1 %43, label %44, label %41, !dbg !2739, !llvm.loop !2741

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !2743
  %46 = load volatile i32, i32* %45, align 4, !dbg !2744
  %47 = or i32 %46, 1, !dbg !2744
  store volatile i32 %47, i32* %45, align 4, !dbg !2744
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !2745
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !2746
  store volatile i32 1, i32* %49, align 4, !dbg !2747
  store i32 1, i32* %8, align 4, !dbg !2748
  %50 = load volatile i32, i32* %4, align 4, !dbg !2749
  tail call void @restore_interrupt_mask(i32 noundef %50) #22, !dbg !2750
  br label %51, !dbg !2751

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !2699
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !2752
  ret i32 %52, !dbg !2752
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2753 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2757, metadata !DIExpression()), !dbg !2758
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2759
  %3 = icmp eq i32 %2, 1, !dbg !2761
  br i1 %3, label %6, label %4, !dbg !2762

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2763
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #22, !dbg !2765
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !2766
  br label %6, !dbg !2767

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !2768
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #22, !dbg !2769
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #22, !dbg !2770
  ret i32 0, !dbg !2771
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !2772 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2774, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.value(metadata i32 %1, metadata !2775, metadata !DIExpression()), !dbg !2778
  call void @llvm.dbg.value(metadata i32 %2, metadata !2776, metadata !DIExpression()), !dbg !2778
  %5 = bitcast i32* %4 to i8*, !dbg !2779
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !2779
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2777, metadata !DIExpression()), !dbg !2780
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !2781
  br i1 %6, label %7, label %50, !dbg !2783

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2784
  %9 = load i32, i32* %8, align 4, !dbg !2784
  %10 = icmp eq i32 %9, 1, !dbg !2786
  br i1 %10, label %50, label %11, !dbg !2787

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !2788
  %13 = load i8, i8* %12, align 4, !dbg !2788, !range !2545
  %14 = icmp eq i8 %13, 1, !dbg !2789
  br i1 %14, label %15, label %50, !dbg !2790

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !2791
  store i8 1, i8* %16, align 1, !dbg !2792
  %17 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !2793
  store volatile i32 %17, i32* %4, align 4, !dbg !2794
  tail call void @gpt_open_clock_source() #22, !dbg !2795
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2796
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2796
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !2797
  %21 = load volatile i32, i32* %20, align 4, !dbg !2798
  %22 = and i32 %21, -2, !dbg !2798
  store volatile i32 %22, i32* %20, align 4, !dbg !2798
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2799
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !2800
  %25 = load volatile i32, i32* %24, align 4, !dbg !2801
  %26 = and i32 %25, -2, !dbg !2801
  store volatile i32 %26, i32* %24, align 4, !dbg !2801
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2802
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !2803
  store volatile i32 12, i32* %28, align 4, !dbg !2804
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #22, !dbg !2805
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2806
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !2807
  store volatile i32 %29, i32* %31, align 4, !dbg !2808
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2809
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !2810
  store volatile i32 1, i32* %33, align 4, !dbg !2811
  %34 = shl i32 %2, 4, !dbg !2812
  %35 = or i32 %34, 2, !dbg !2813
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2814
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !2815
  store volatile i32 %35, i32* %37, align 4, !dbg !2816
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !2817

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !2818
  %42 = icmp eq i32 %41, 0, !dbg !2817
  br i1 %42, label %43, label %40, !dbg !2817, !llvm.loop !2819

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !2821
  %45 = load volatile i32, i32* %44, align 4, !dbg !2822
  %46 = or i32 %45, 1, !dbg !2822
  store volatile i32 %46, i32* %44, align 4, !dbg !2822
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !2823
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !2824
  store volatile i32 1, i32* %48, align 4, !dbg !2825
  %49 = load volatile i32, i32* %4, align 4, !dbg !2826
  tail call void @restore_interrupt_mask(i32 noundef %49) #22, !dbg !2827
  store i32 1, i32* %8, align 4, !dbg !2828
  br label %50, !dbg !2829

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !2778
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !2830
  ret i32 %51, !dbg !2830
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2833, metadata !DIExpression()), !dbg !2834
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2835
  %3 = icmp eq i32 %2, 1, !dbg !2837
  br i1 %3, label %6, label %4, !dbg !2838

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2839
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #22, !dbg !2841
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !2842
  br label %6, !dbg !2843

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !2844
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #22, !dbg !2845
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #22, !dbg !2846
  ret i32 0, !dbg !2847
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !2848 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2850, metadata !DIExpression()), !dbg !2852
  %3 = bitcast i32* %2 to i8*, !dbg !2853
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !2853
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2851, metadata !DIExpression()), !dbg !2854
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !2855
  br i1 %4, label %5, label %24, !dbg !2857

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !2858
  store volatile i32 %6, i32* %2, align 4, !dbg !2859
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !2860
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !2860
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !2861
  %10 = load volatile i32, i32* %9, align 4, !dbg !2862
  %11 = and i32 %10, -2, !dbg !2862
  store volatile i32 %11, i32* %9, align 4, !dbg !2862
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !2863
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !2864
  %14 = load volatile i32, i32* %13, align 4, !dbg !2865
  %15 = and i32 %14, -2, !dbg !2865
  store volatile i32 %15, i32* %13, align 4, !dbg !2865
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !2866
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !2867
  store volatile i32 1, i32* %17, align 4, !dbg !2868
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !2869
  store i32 0, i32* %18, align 4, !dbg !2870
  %19 = load volatile i32, i32* %2, align 4, !dbg !2871
  tail call void @restore_interrupt_mask(i32 noundef %19) #22, !dbg !2872
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !2873
  %21 = load i8, i8* %20, align 1, !dbg !2873, !range !2545
  %22 = icmp eq i8 %21, 0, !dbg !2873
  br i1 %22, label %24, label %23, !dbg !2875

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !2876
  br label %24, !dbg !2878

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !2852
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !2879
  ret i32 %25, !dbg !2879
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !2880 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !2884, metadata !DIExpression()), !dbg !2887
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2888
  %3 = icmp ugt i32 %2, 31, !dbg !2890
  br i1 %3, label %13, label %4, !dbg !2891

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !2892
  br i1 %5, label %13, label %6, !dbg !2894

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !2895
  call void @llvm.dbg.value(metadata i32 %7, metadata !2886, metadata !DIExpression()), !dbg !2887
  %8 = tail call i32 @gpt_sw_get_free_timer() #22, !dbg !2896
  call void @llvm.dbg.value(metadata i32 %8, metadata !2885, metadata !DIExpression()), !dbg !2887
  %9 = or i32 %8, -559087616, !dbg !2897
  store i32 %9, i32* %0, align 4, !dbg !2898
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !2899
  store i8 1, i8* %10, align 4, !dbg !2900
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2901
  %12 = add i32 %11, 1, !dbg !2901
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2901
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !2902
  br label %13, !dbg !2903

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !2887
  ret i32 %14, !dbg !2904
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #7 !dbg !2905 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !2907, metadata !DIExpression()), !dbg !2909
  %3 = bitcast i32* %2 to i8*, !dbg !2910
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !2910
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2908, metadata !DIExpression()), !dbg !2911
  %4 = and i32 %0, -559087616, !dbg !2912
  %5 = icmp eq i32 %4, -559087616, !dbg !2914
  br i1 %5, label %6, label %24, !dbg !2915

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !2916
  store volatile i32 %7, i32* %2, align 4, !dbg !2917
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2918
  %9 = icmp eq i32 %8, 0, !dbg !2920
  br i1 %9, label %24, label %10, !dbg !2921

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !2922
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !2924
  %13 = load i8, i8* %12, align 1, !dbg !2924, !range !2545
  %14 = icmp eq i8 %13, 0, !dbg !2924
  br i1 %14, label %15, label %24, !dbg !2925

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !2926
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !2928
  %18 = load i8, i8* %17, align 4, !dbg !2928, !range !2545
  %19 = icmp eq i8 %18, 1, !dbg !2929
  br i1 %19, label %20, label %24, !dbg !2930

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !2931
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !2932
  store i8 0, i8* %22, align 4, !dbg !2933
  %23 = add i32 %8, -1, !dbg !2934
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !2934
  br label %24, !dbg !2935

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !2909
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !2936
  ret i32 %25, !dbg !2936
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !2937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2941, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i32 %1, metadata !2942, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !2943, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.value(metadata i8* %3, metadata !2944, metadata !DIExpression()), !dbg !2948
  %5 = and i32 %0, -559087616, !dbg !2949
  %6 = icmp ne i32 %5, -559087616, !dbg !2951
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !2952
  call void @llvm.dbg.value(metadata i32 %0, metadata !2947, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !2948
  br i1 %8, label %44, label %9, !dbg !2952

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !2953
  call void @llvm.dbg.value(metadata i32 %10, metadata !2947, metadata !DIExpression()), !dbg !2948
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !2954
  %12 = load i8, i8* %11, align 1, !dbg !2954, !range !2545
  %13 = icmp eq i8 %12, 0, !dbg !2954
  br i1 %13, label %14, label %44, !dbg !2956

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !2957
  %16 = load i8, i8* %15, align 4, !dbg !2957, !range !2545
  %17 = icmp eq i8 %16, 1, !dbg !2959
  br i1 %17, label %18, label %44, !dbg !2960

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !2961
  br i1 %19, label %44, label %20, !dbg !2963

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !2964
  call void @llvm.dbg.value(metadata i32 %21, metadata !2946, metadata !DIExpression()), !dbg !2948
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !2965
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !2966, !range !2545
  %23 = icmp eq i8 %22, 0, !dbg !2968
  br i1 %23, label %24, label %27, !dbg !2969

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !2970
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !2972
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !2973
  br label %27, !dbg !2974

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !2975
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !2976, !range !2545
  %30 = icmp eq i8 %29, 0, !dbg !2978
  br i1 %30, label %31, label %34, !dbg !2979

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !2980
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #22, !dbg !2982
  call void @llvm.dbg.value(metadata i32 %33, metadata !2945, metadata !DIExpression()), !dbg !2948
  br label %34, !dbg !2983

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !2984
  call void @llvm.dbg.value(metadata i32 %35, metadata !2945, metadata !DIExpression()), !dbg !2948
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !2985
  %37 = add i32 %36, %35, !dbg !2985
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !2985
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !2986
  %39 = add i32 %38, 1, !dbg !2986
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !2986
  store i8 1, i8* %11, align 1, !dbg !2987
  %40 = add i32 %37, %1, !dbg !2988
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !2989
  store i32 %40, i32* %41, align 4, !dbg !2990
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !2991
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !2992
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !2993
  store i8* %3, i8** %43, align 4, !dbg !2994
  tail call void @gpt_sw_start_timer() #22, !dbg !2995
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !2996
  tail call void @restore_interrupt_mask(i32 noundef %21) #22, !dbg !2997
  br label %44, !dbg !2998

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !2948
  ret i32 %45, !dbg !2999
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3000 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3002, metadata !DIExpression()), !dbg !3006
  %2 = and i32 %0, -559087616, !dbg !3007
  %3 = icmp eq i32 %2, -559087616, !dbg !3009
  br i1 %3, label %4, label %31, !dbg !3010

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3011
  call void @llvm.dbg.value(metadata i32 %5, metadata !3005, metadata !DIExpression()), !dbg !3006
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3012
  %7 = load i8, i8* %6, align 1, !dbg !3012, !range !2545
  %8 = icmp eq i8 %7, 1, !dbg !3014
  br i1 %8, label %9, label %31, !dbg !3015

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3016
  %11 = load i8, i8* %10, align 4, !dbg !3016, !range !2545
  %12 = icmp eq i8 %11, 1, !dbg !3018
  br i1 %12, label %13, label %31, !dbg !3019

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !3020
  call void @llvm.dbg.value(metadata i32 %14, metadata !3004, metadata !DIExpression()), !dbg !3006
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3021
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3022
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3023
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3024, !range !2545
  %17 = icmp eq i8 %16, 0, !dbg !3026
  br i1 %17, label %18, label %21, !dbg !3027

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3028
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #22, !dbg !3030
  call void @llvm.dbg.value(metadata i32 %20, metadata !3003, metadata !DIExpression()), !dbg !3006
  br label %21, !dbg !3031

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3032
  call void @llvm.dbg.value(metadata i32 %22, metadata !3003, metadata !DIExpression()), !dbg !3006
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3033
  %24 = add i32 %23, %22, !dbg !3033
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3033
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3034
  %26 = add i32 %25, -1, !dbg !3034
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3034
  store i8 0, i8* %6, align 1, !dbg !3035
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3036
  %28 = icmp eq i32 %27, 0, !dbg !3038
  br i1 %28, label %30, label %29, !dbg !3039

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #22, !dbg !3040
  br label %30, !dbg !3042

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3043
  tail call void @restore_interrupt_mask(i32 noundef %14) #22, !dbg !3044
  br label %31, !dbg !3045

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3006
  ret i32 %32, !dbg !3046
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3047 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3051, metadata !DIExpression()), !dbg !3056
  call void @llvm.dbg.value(metadata i32* %1, metadata !3052, metadata !DIExpression()), !dbg !3056
  %3 = and i32 %0, -559087616, !dbg !3057
  %4 = icmp eq i32 %3, -559087616, !dbg !3059
  br i1 %4, label %5, label %20, !dbg !3060

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3061
  call void @llvm.dbg.value(metadata i32 %6, metadata !3055, metadata !DIExpression()), !dbg !3056
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3062
  %8 = load i8, i8* %7, align 4, !dbg !3062, !range !2545
  %9 = icmp eq i8 %8, 1, !dbg !3064
  br i1 %9, label %10, label %20, !dbg !3065

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !3066
  call void @llvm.dbg.value(metadata i32 %11, metadata !3054, metadata !DIExpression()), !dbg !3056
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3067
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3068
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3069
  %15 = load volatile i32, i32* %14, align 4, !dbg !3069
  %16 = add i32 %15, %12, !dbg !3070
  call void @llvm.dbg.value(metadata i32 %16, metadata !3053, metadata !DIExpression()), !dbg !3056
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3071
  %18 = load i32, i32* %17, align 4, !dbg !3071
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3073
  store i32 %19, i32* %1, align 4, !dbg !3074
  tail call void @restore_interrupt_mask(i32 noundef %11) #22, !dbg !3075
  br label %20, !dbg !3076

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3056
  ret i32 %21, !dbg !3077
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 section ".tcm_code" !dbg !3078 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3082, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.value(metadata i32 %1, metadata !3083, metadata !DIExpression()), !dbg !3089
  call void @llvm.dbg.value(metadata i32 %2, metadata !3084, metadata !DIExpression()), !dbg !3089
  %4 = and i32 %0, 65535, !dbg !3090
  %5 = mul i32 %4, %1, !dbg !3091
  call void @llvm.dbg.value(metadata i32 %5, metadata !3085, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3089
  %6 = lshr i32 %0, 16, !dbg !3092
  %7 = mul i32 %6, %1, !dbg !3093
  call void @llvm.dbg.value(metadata i32 %7, metadata !3085, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3089
  %8 = and i32 %5, 65535, !dbg !3094
  call void @llvm.dbg.value(metadata i32 %8, metadata !3087, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3089
  %9 = lshr i32 %5, 16, !dbg !3095
  %10 = add i32 %9, %7, !dbg !3096
  call void @llvm.dbg.value(metadata i32 %10, metadata !3087, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3089
  %11 = udiv i32 %10, %2, !dbg !3097
  call void @llvm.dbg.value(metadata i32 %11, metadata !3088, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3089
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3098
  %15 = or i32 %14, %8, !dbg !3099
  %16 = udiv i32 %15, %2, !dbg !3100
  call void @llvm.dbg.value(metadata i32 %16, metadata !3088, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3089
  %17 = shl i32 %11, 16, !dbg !3101
  %18 = add i32 %16, %17, !dbg !3102
  ret i32 %18, !dbg !3103
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !3104 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3108, metadata !DIExpression()), !dbg !3109
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3110
  %3 = load volatile i32, i32* %2, align 4, !dbg !3110
  ret i32 %3, !dbg !3111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #8 section ".tcm_code" !dbg !3112 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3116, metadata !DIExpression()), !dbg !3117
  %2 = shl i32 %0, 5, !dbg !3118
  %3 = mul i32 %0, 7, !dbg !3119
  %4 = udiv i32 %3, 10, !dbg !3120
  %5 = add i32 %4, %2, !dbg !3121
  %6 = mul i32 %0, 6, !dbg !3122
  %7 = udiv i32 %6, 100, !dbg !3123
  %8 = add i32 %5, %7, !dbg !3124
  %9 = shl i32 %0, 3, !dbg !3125
  %10 = udiv i32 %9, 1000, !dbg !3126
  %11 = add i32 %8, %10, !dbg !3127
  ret i32 %11, !dbg !3128
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !207 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3129
  br i1 %1, label %10, label %2, !dbg !3131

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #22, !dbg !3132
  br i1 %3, label %4, label %6, !dbg !3135

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #22, !dbg !3136
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3138
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3139

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3141
  br label %8, !dbg !3141

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3141
  br label %10, !dbg !3142

10:                                               ; preds = %8, %0
  ret void, !dbg !3142
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3143 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #22, !dbg !3144
  br i1 %1, label %4, label %2, !dbg !3146

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #22, !dbg !3147
  br label %4, !dbg !3149

4:                                                ; preds = %2, %0
  ret void, !dbg !3150
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3151 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3153, metadata !DIExpression()), !dbg !3154
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3155
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #22, !dbg !3156
  br i1 %2, label %3, label %6, !dbg !3158

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3159
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3161
  br label %6, !dbg !3162

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3163
  ret i32 %7, !dbg !3164
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3165 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3167, metadata !DIExpression()), !dbg !3168
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3169
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #22, !dbg !3170
  br i1 %2, label %3, label %6, !dbg !3172

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3173
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3175
  br label %6, !dbg !3176

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3177
  ret i32 %7, !dbg !3178
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3179 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3183, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata i32 %1, metadata !3184, metadata !DIExpression()), !dbg !3186
  call void @llvm.dbg.value(metadata i32 %2, metadata !3185, metadata !DIExpression()), !dbg !3186
  tail call void @gpt_open_clock_source() #21, !dbg !3187
  %4 = or i32 %2, %1, !dbg !3188
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3189
  store volatile i32 %4, i32* %5, align 4, !dbg !3190
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3191
  store volatile i32 49, i32* %6, align 4, !dbg !3192
  ret void, !dbg !3193
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 section ".tcm_code" !dbg !3194 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3198, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 %1, metadata !3199, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 0, metadata !3200, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.value(metadata i32 0, metadata !3201, metadata !DIExpression()), !dbg !3202
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3203
  call void @llvm.dbg.value(metadata i32 %3, metadata !3201, metadata !DIExpression()), !dbg !3202
  %4 = add i32 %1, 1, !dbg !3204
  %5 = add i32 %4, %3, !dbg !3205
  call void @llvm.dbg.value(metadata i32 %5, metadata !3200, metadata !DIExpression()), !dbg !3202
  %6 = icmp ugt i32 %5, %3, !dbg !3206
  br i1 %6, label %7, label %10, !dbg !3208

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3209
  %9 = icmp ult i32 %8, %5, !dbg !3211
  br i1 %9, label %7, label %16, !dbg !3212, !llvm.loop !3213

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3215
  %12 = icmp ult i32 %11, %3, !dbg !3217
  br i1 %12, label %13, label %10, !dbg !3218, !llvm.loop !3219

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3221
  %15 = icmp ult i32 %14, %5, !dbg !3222
  br i1 %15, label %13, label %16, !dbg !3223, !llvm.loop !3224

16:                                               ; preds = %13, %7
  ret void, !dbg !3226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !3227 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3231, metadata !DIExpression()), !dbg !3232
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3233
  store volatile i32 0, i32* %2, align 4, !dbg !3234
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3235
  store volatile i32 0, i32* %3, align 4, !dbg !3236
  %4 = load volatile i32, i32* %3, align 4, !dbg !3237
  %5 = or i32 %4, 2, !dbg !3237
  store volatile i32 %5, i32* %3, align 4, !dbg !3237
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3238

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3239
  %9 = icmp eq i32 %8, 0, !dbg !3238
  br i1 %9, label %10, label %7, !dbg !3238, !llvm.loop !3240

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3242
  store volatile i32 16, i32* %11, align 4, !dbg !3243
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3244
  store volatile i32 1, i32* %12, align 4, !dbg !3245
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3246
  store volatile i32 -1, i32* %13, align 4, !dbg !3247
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3248
  br i1 %14, label %15, label %16, !dbg !3250

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3251
  br label %16, !dbg !3253

16:                                               ; preds = %15, %10
  ret void, !dbg !3254
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #7 !dbg !3255 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3257, metadata !DIExpression()), !dbg !3259
  %3 = bitcast i32* %2 to i8*, !dbg !3260
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3260
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3258, metadata !DIExpression()), !dbg !3261
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3262
  %5 = load volatile i32, i32* %4, align 4, !dbg !3262
  store volatile i32 %5, i32* %2, align 4, !dbg !3263
  %6 = load volatile i32, i32* %4, align 4, !dbg !3264
  %7 = and i32 %6, -2, !dbg !3264
  store volatile i32 %7, i32* %4, align 4, !dbg !3264
  %8 = load volatile i32, i32* %2, align 4, !dbg !3265
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3266
  ret i32 %8, !dbg !3267
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3268 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3272, metadata !DIExpression()), !dbg !3274
  call void @llvm.dbg.value(metadata i32 %1, metadata !3273, metadata !DIExpression()), !dbg !3274
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3275
  store volatile i32 %1, i32* %3, align 4, !dbg !3276
  ret void, !dbg !3277
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3278 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3280, metadata !DIExpression()), !dbg !3285
  %5 = bitcast i32* %2 to i8*, !dbg !3286
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3286
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3282, metadata !DIExpression()), !dbg !3287
  %6 = bitcast i32* %3 to i8*, !dbg !3288
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3288
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3283, metadata !DIExpression()), !dbg !3289
  %7 = bitcast i32* %4 to i8*, !dbg !3290
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3290
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3284, metadata !DIExpression()), !dbg !3291
  call void @llvm.dbg.value(metadata i32 undef, metadata !3280, metadata !DIExpression()), !dbg !3285
  call void @llvm.dbg.value(metadata i32 0, metadata !3281, metadata !DIExpression()), !dbg !3285
  br label %8, !dbg !3292

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3281, metadata !DIExpression()), !dbg !3285
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3294
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3294
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3297
  %13 = load volatile i32, i32* %12, align 4, !dbg !3297
  store volatile i32 %13, i32* %3, align 4, !dbg !3298
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3299
  %15 = load volatile i32, i32* %14, align 4, !dbg !3299
  store volatile i32 %15, i32* %4, align 4, !dbg !3300
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !3301
  store volatile i32 %16, i32* %2, align 4, !dbg !3302
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3303
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3304
  store volatile i32 1, i32* %18, align 4, !dbg !3305
  %19 = load volatile i32, i32* %3, align 4, !dbg !3306
  %20 = and i32 %19, 1, !dbg !3308
  %21 = icmp eq i32 %20, 0, !dbg !3308
  br i1 %21, label %33, label %22, !dbg !3309

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3310
  %24 = and i32 %23, 1, !dbg !3311
  %25 = icmp eq i32 %24, 0, !dbg !3311
  br i1 %25, label %33, label %26, !dbg !3312

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3313
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3313
  %29 = icmp eq void (i8*)* %28, null, !dbg !3316
  br i1 %29, label %33, label %30, !dbg !3317

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3318
  %32 = load i8*, i8** %31, align 4, !dbg !3318
  tail call void %28(i8* noundef %32) #22, !dbg !3320
  br label %33, !dbg !3321

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3322
  %35 = load volatile i32, i32* %2, align 4, !dbg !3323
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !3324
  %36 = add nuw nsw i32 %9, 1, !dbg !3325
  call void @llvm.dbg.value(metadata i32 %36, metadata !3281, metadata !DIExpression()), !dbg !3285
  %37 = icmp eq i32 %36, 6, !dbg !3326
  br i1 %37, label %38, label %8, !dbg !3292, !llvm.loop !3327

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3329
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3329
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3329
  ret void, !dbg !3329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3330 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #22, !dbg !3331
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #22, !dbg !3332
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #22, !dbg !3333
  ret void, !dbg !3334
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #7 !dbg !3335 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3337, metadata !DIExpression()), !dbg !3342
  %3 = bitcast i32* %2 to i8*, !dbg !3343
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3343
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3338, metadata !DIExpression()), !dbg !3344
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3345
  call void @llvm.dbg.value(metadata i32 %4, metadata !3339, metadata !DIExpression()), !dbg !3342
  %5 = lshr i32 %4, 15, !dbg !3346
  call void @llvm.dbg.value(metadata i32 %5, metadata !3340, metadata !DIExpression()), !dbg !3342
  %6 = and i32 %4, 32767, !dbg !3347
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3348
  %8 = add nuw nsw i32 %7, 16384, !dbg !3349
  %9 = lshr i32 %8, 15, !dbg !3350
  call void @llvm.dbg.value(metadata i32 %9, metadata !3341, metadata !DIExpression()), !dbg !3342
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3351
  %11 = add nuw nsw i32 %9, %10, !dbg !3352
  store volatile i32 %11, i32* %2, align 4, !dbg !3353
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3354
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3355
  %14 = load volatile i32, i32* %13, align 4, !dbg !3356
  %15 = or i32 %14, 2, !dbg !3356
  store volatile i32 %15, i32* %13, align 4, !dbg !3356
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3357

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3358
  %20 = icmp eq i32 %19, 0, !dbg !3357
  br i1 %20, label %21, label %18, !dbg !3357, !llvm.loop !3359

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3361
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3362
  ret i32 %22, !dbg !3363
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #11 !dbg !3364 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3368, metadata !DIExpression()), !dbg !3369
  br label %1, !dbg !3370

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3368, metadata !DIExpression()), !dbg !3369
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3372
  %4 = load i8, i8* %3, align 4, !dbg !3372, !range !2545
  %5 = icmp eq i8 %4, 1, !dbg !3376
  br i1 %5, label %6, label %9, !dbg !3377

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3378
  call void @llvm.dbg.value(metadata i32 %7, metadata !3368, metadata !DIExpression()), !dbg !3369
  %8 = icmp eq i32 %7, 32, !dbg !3379
  br i1 %8, label %9, label %1, !dbg !3370, !llvm.loop !3380

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3369
  ret i32 %10, !dbg !3382
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !3383 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3387
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3387
  %4 = bitcast i32* %2 to i8*, !dbg !3387
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !3387
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3388, !range !2545
  %6 = icmp eq i8 %5, 0, !dbg !3388
  br i1 %6, label %7, label %11, !dbg !3390

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !3385, metadata !DIExpression(DW_OP_deref)), !dbg !3391
  call void @llvm.dbg.value(metadata i32* %2, metadata !3386, metadata !DIExpression(DW_OP_deref)), !dbg !3391
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !3392
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3393
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3394
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3395
  %9 = load i32, i32* %1, align 4, !dbg !3396
  call void @llvm.dbg.value(metadata i32 %9, metadata !3385, metadata !DIExpression()), !dbg !3391
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #22, !dbg !3397
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3398
  br label %11, !dbg !3399

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !3399
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !3399
  ret void, !dbg !3399
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #12 !dbg !3400 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3404, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i32* %1, metadata !3405, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i32 -1, metadata !3407, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i32 0, metadata !3406, metadata !DIExpression()), !dbg !3409
  br label %3, !dbg !3410

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !3406, metadata !DIExpression()), !dbg !3409
  call void @llvm.dbg.value(metadata i32 %5, metadata !3407, metadata !DIExpression()), !dbg !3409
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !3412
  %7 = load i8, i8* %6, align 1, !dbg !3412, !range !2545
  %8 = icmp eq i8 %7, 0, !dbg !3412
  br i1 %8, label %13, label %9, !dbg !3416

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !3417
  call void @llvm.dbg.value(metadata i32 %10, metadata !3408, metadata !DIExpression()), !dbg !3409
  %11 = icmp ult i32 %10, %5, !dbg !3419
  br i1 %11, label %12, label %13, !dbg !3421

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3407, metadata !DIExpression()), !dbg !3409
  store i32 %4, i32* %1, align 4, !dbg !3422
  br label %13, !dbg !3424

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !3409
  call void @llvm.dbg.value(metadata i32 %14, metadata !3407, metadata !DIExpression()), !dbg !3409
  %15 = add nuw nsw i32 %4, 1, !dbg !3425
  call void @llvm.dbg.value(metadata i32 %15, metadata !3406, metadata !DIExpression()), !dbg !3409
  %16 = icmp eq i32 %15, 32, !dbg !3426
  br i1 %16, label %17, label %3, !dbg !3410, !llvm.loop !3427

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !3429
  ret void, !dbg !3430
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #2 !dbg !3431 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3433, metadata !DIExpression()), !dbg !3437
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !3438
  %3 = load i32, i32* %2, align 4, !dbg !3438
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3438
  %5 = sub i32 %3, %4, !dbg !3438
  call void @llvm.dbg.value(metadata i32 %5, metadata !3434, metadata !DIExpression()), !dbg !3437
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3439
  %7 = sub i32 %6, %4, !dbg !3439
  call void @llvm.dbg.value(metadata i32 %7, metadata !3435, metadata !DIExpression()), !dbg !3437
  %8 = icmp ugt i32 %5, %7, !dbg !3440
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !3442
  call void @llvm.dbg.value(metadata i32 %10, metadata !3436, metadata !DIExpression()), !dbg !3437
  ret i32 %10, !dbg !3443
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !3444 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !3446, metadata !DIExpression()), !dbg !3450
  %4 = bitcast i32* %2 to i8*, !dbg !3451
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !3451
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3448, metadata !DIExpression()), !dbg !3452
  %5 = bitcast i32* %3 to i8*, !dbg !3453
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3453
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3449, metadata !DIExpression()), !dbg !3454
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3455
  %7 = icmp eq i32 %6, 0, !dbg !3457
  br i1 %7, label %38, label %8, !dbg !3458

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3459
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #22, !dbg !3461
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3462
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3463
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !3464
  store volatile i32 %11, i32* %2, align 4, !dbg !3465
  %12 = load volatile i32, i32* %2, align 4, !dbg !3466
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3467
  %14 = add i32 %13, %12, !dbg !3467
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3467
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3468
  call void @llvm.dbg.value(metadata i32 0, metadata !3447, metadata !DIExpression()), !dbg !3450
  br label %15, !dbg !3469

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !3447, metadata !DIExpression()), !dbg !3450
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !3471
  %18 = load i8, i8* %17, align 1, !dbg !3471, !range !2545
  %19 = icmp eq i8 %18, 0, !dbg !3471
  br i1 %19, label %31, label %20, !dbg !3475

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !3476
  store volatile i32 %21, i32* %3, align 4, !dbg !3478
  %22 = load volatile i32, i32* %3, align 4, !dbg !3479
  %23 = icmp eq i32 %22, 0, !dbg !3481
  br i1 %23, label %24, label %31, !dbg !3482

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !3483
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3485
  %26 = add i32 %25, -1, !dbg !3485
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3485
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !3486
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3486
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !3487
  %30 = load i8*, i8** %29, align 4, !dbg !3487
  tail call void %28(i8* noundef %30) #22, !dbg !3488
  br label %31, !dbg !3489

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !3490
  call void @llvm.dbg.value(metadata i32 %32, metadata !3447, metadata !DIExpression()), !dbg !3450
  %33 = icmp eq i32 %32, 32, !dbg !3491
  br i1 %33, label %34, label %15, !dbg !3469, !llvm.loop !3492

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3494
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3495
  %36 = icmp eq i32 %35, 0, !dbg !3497
  br i1 %36, label %38, label %37, !dbg !3498

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !3499
  br label %38, !dbg !3501

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3502
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !3502
  ret void, !dbg !3502
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #13 !dbg !3503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3508, metadata !DIExpression()), !dbg !3511
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !3510, metadata !DIExpression()), !dbg !3512
  call void @llvm.dbg.value(metadata i32 0, metadata !3509, metadata !DIExpression()), !dbg !3511
  br label %5, !dbg !3513

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !3515
  call void @llvm.dbg.value(metadata i32 %3, metadata !3509, metadata !DIExpression()), !dbg !3511
  call void @llvm.dbg.value(metadata i32 %6, metadata !3509, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3511
  %4 = icmp eq i32 %3, 5, !dbg !3517
  br i1 %4, label %10, label %5, !dbg !3513, !llvm.loop !3518

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3509, metadata !DIExpression()), !dbg !3511
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !3520
  %8 = load i32, i32* %7, align 4, !dbg !3520
  %9 = icmp eq i32 %8, %0, !dbg !3523
  call void @llvm.dbg.value(metadata i32 %6, metadata !3509, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3511
  br i1 %9, label %10, label %2, !dbg !3524

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !3511
  ret i32 %11, !dbg !3525
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #8 !dbg !3526 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3531, metadata !DIExpression()), !dbg !3532
  ret i32 0, !dbg !3533
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #8 !dbg !3534 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3536, metadata !DIExpression()), !dbg !3537
  ret i32 0, !dbg !3538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3539 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3543, metadata !DIExpression()), !dbg !3547
  call void @llvm.dbg.value(metadata i32 %1, metadata !3544, metadata !DIExpression()), !dbg !3547
  %3 = icmp ugt i32 %0, 48, !dbg !3548
  br i1 %3, label %13, label %4, !dbg !3550

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !3551
  call void @llvm.dbg.value(metadata i32 %5, metadata !3545, metadata !DIExpression()), !dbg !3547
  %6 = and i32 %0, 31, !dbg !3552
  call void @llvm.dbg.value(metadata i32 %6, metadata !3546, metadata !DIExpression()), !dbg !3547
  %7 = icmp eq i32 %1, 0, !dbg !3553
  %8 = shl nuw i32 1, %6, !dbg !3555
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3555
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !3556
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !3556
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !3556
  store volatile i32 %8, i32* %12, align 4, !dbg !3555
  br label %13, !dbg !3557

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !3547
  ret i32 %14, !dbg !3557
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3558 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3563, metadata !DIExpression()), !dbg !3568
  call void @llvm.dbg.value(metadata i32* %1, metadata !3564, metadata !DIExpression()), !dbg !3568
  %3 = icmp ugt i32 %0, 48, !dbg !3569
  br i1 %3, label %15, label %4, !dbg !3571

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3572
  br i1 %5, label %15, label %6, !dbg !3574

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !3575
  call void @llvm.dbg.value(metadata i32 %7, metadata !3565, metadata !DIExpression()), !dbg !3568
  %8 = and i32 %0, 31, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %8, metadata !3566, metadata !DIExpression()), !dbg !3568
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3577
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !3578
  %11 = load volatile i32, i32* %10, align 4, !dbg !3578
  call void @llvm.dbg.value(metadata i32 %11, metadata !3567, metadata !DIExpression()), !dbg !3568
  %12 = shl nuw i32 1, %8, !dbg !3579
  %13 = and i32 %11, %12, !dbg !3580
  call void @llvm.dbg.value(metadata i32 %13, metadata !3567, metadata !DIExpression()), !dbg !3568
  %14 = lshr i32 %13, %8, !dbg !3581
  store i32 %14, i32* %1, align 4, !dbg !3582
  br label %15, !dbg !3583

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3568
  ret i32 %16, !dbg !3584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !3585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3590, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.value(metadata i8 %1, metadata !3591, metadata !DIExpression()), !dbg !3595
  %3 = icmp ugt i32 %0, 48, !dbg !3596
  br i1 %3, label %18, label %4, !dbg !3598

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !3599
  br i1 %5, label %18, label %6, !dbg !3601

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !3602
  %8 = lshr i32 %0, 3, !dbg !3603
  call void @llvm.dbg.value(metadata i32 %8, metadata !3592, metadata !DIExpression()), !dbg !3595
  call void @llvm.dbg.value(metadata i32 %0, metadata !3593, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !3595
  %9 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !3604
  call void @llvm.dbg.value(metadata i32 %9, metadata !3594, metadata !DIExpression()), !dbg !3595
  %10 = shl nuw nsw i32 %0, 2, !dbg !3605
  %11 = and i32 %10, 28, !dbg !3605
  %12 = shl nuw i32 15, %11, !dbg !3606
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3607
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !3608
  store volatile i32 %12, i32* %14, align 4, !dbg !3609
  %15 = shl nuw i32 %7, %11, !dbg !3610
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3611
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !3612
  store volatile i32 %15, i32* %17, align 4, !dbg !3613
  tail call void @restore_interrupt_mask(i32 noundef %9) #22, !dbg !3614
  br label %18, !dbg !3615

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3595
  ret i32 %19, !dbg !3616
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3617 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3622, metadata !DIExpression()), !dbg !3627
  call void @llvm.dbg.value(metadata i32* %1, metadata !3623, metadata !DIExpression()), !dbg !3627
  %3 = icmp ugt i32 %0, 48, !dbg !3628
  br i1 %3, label %15, label %4, !dbg !3630

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3631
  br i1 %5, label %15, label %6, !dbg !3633

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !3634
  call void @llvm.dbg.value(metadata i32 %7, metadata !3624, metadata !DIExpression()), !dbg !3627
  %8 = and i32 %0, 31, !dbg !3635
  call void @llvm.dbg.value(metadata i32 %8, metadata !3625, metadata !DIExpression()), !dbg !3627
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3636
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !3637
  %11 = load volatile i32, i32* %10, align 4, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %11, metadata !3626, metadata !DIExpression()), !dbg !3627
  %12 = shl nuw i32 1, %8, !dbg !3638
  %13 = and i32 %11, %12, !dbg !3639
  call void @llvm.dbg.value(metadata i32 %13, metadata !3626, metadata !DIExpression()), !dbg !3627
  %14 = lshr i32 %13, %8, !dbg !3640
  store i32 %14, i32* %1, align 4, !dbg !3641
  br label %15, !dbg !3642

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3627
  ret i32 %16, !dbg !3643
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3648, metadata !DIExpression()), !dbg !3652
  call void @llvm.dbg.value(metadata i32 %1, metadata !3649, metadata !DIExpression()), !dbg !3652
  %3 = icmp ugt i32 %0, 48, !dbg !3653
  br i1 %3, label %13, label %4, !dbg !3655

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !3656
  call void @llvm.dbg.value(metadata i32 %5, metadata !3650, metadata !DIExpression()), !dbg !3652
  %6 = and i32 %0, 31, !dbg !3657
  call void @llvm.dbg.value(metadata i32 %6, metadata !3651, metadata !DIExpression()), !dbg !3652
  %7 = icmp eq i32 %1, 0, !dbg !3658
  %8 = shl nuw i32 1, %6, !dbg !3660
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3660
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !3661
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !3661
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !3661
  store volatile i32 %8, i32* %12, align 4, !dbg !3660
  br label %13, !dbg !3662

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !3652
  ret i32 %14, !dbg !3662
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3665, metadata !DIExpression()), !dbg !3670
  call void @llvm.dbg.value(metadata i32* %1, metadata !3666, metadata !DIExpression()), !dbg !3670
  %3 = icmp ugt i32 %0, 48, !dbg !3671
  br i1 %3, label %15, label %4, !dbg !3673

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3674
  br i1 %5, label %15, label %6, !dbg !3676

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !3677
  call void @llvm.dbg.value(metadata i32 %7, metadata !3667, metadata !DIExpression()), !dbg !3670
  %8 = and i32 %0, 31, !dbg !3678
  call void @llvm.dbg.value(metadata i32 %8, metadata !3668, metadata !DIExpression()), !dbg !3670
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3679
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !3680
  %11 = load volatile i32, i32* %10, align 4, !dbg !3680
  call void @llvm.dbg.value(metadata i32 %11, metadata !3669, metadata !DIExpression()), !dbg !3670
  %12 = shl nuw i32 1, %8, !dbg !3681
  %13 = and i32 %11, %12, !dbg !3682
  call void @llvm.dbg.value(metadata i32 %13, metadata !3669, metadata !DIExpression()), !dbg !3670
  %14 = lshr i32 %13, %8, !dbg !3683
  store i32 %14, i32* %1, align 4, !dbg !3684
  br label %15, !dbg !3685

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3670
  ret i32 %16, !dbg !3686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #10 !dbg !3687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3689, metadata !DIExpression()), !dbg !3693
  %2 = icmp ugt i32 %0, 48, !dbg !3694
  br i1 %2, label %16, label %3, !dbg !3696

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %4, metadata !3690, metadata !DIExpression()), !dbg !3693
  %5 = and i32 %0, 31, !dbg !3698
  call void @llvm.dbg.value(metadata i32 %5, metadata !3691, metadata !DIExpression()), !dbg !3693
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3699
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !3700
  %8 = load volatile i32, i32* %7, align 4, !dbg !3700
  call void @llvm.dbg.value(metadata i32 %8, metadata !3692, metadata !DIExpression()), !dbg !3693
  %9 = shl nuw i32 1, %5, !dbg !3701
  %10 = and i32 %8, %9, !dbg !3702
  call void @llvm.dbg.value(metadata i32 %10, metadata !3692, metadata !DIExpression()), !dbg !3693
  %11 = lshr i32 %10, %5, !dbg !3703
  %12 = icmp eq i32 %11, 0, !dbg !3703
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !3705
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !3705
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !3705
  store volatile i32 %9, i32* %15, align 4, !dbg !3706
  br label %16, !dbg !3707

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !3693
  ret i32 %17, !dbg !3707
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #10 !dbg !3708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3710, metadata !DIExpression()), !dbg !3713
  %2 = icmp ugt i32 %0, 48, !dbg !3714
  br i1 %2, label %9, label %3, !dbg !3716

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3717
  call void @llvm.dbg.value(metadata i32 %4, metadata !3711, metadata !DIExpression()), !dbg !3713
  %5 = and i32 %0, 31, !dbg !3718
  call void @llvm.dbg.value(metadata i32 %5, metadata !3712, metadata !DIExpression()), !dbg !3713
  %6 = shl nuw i32 1, %5, !dbg !3719
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3720
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !3721
  store volatile i32 %6, i32* %8, align 4, !dbg !3722
  br label %9, !dbg !3723

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !3713
  ret i32 %10, !dbg !3724
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #10 !dbg !3725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3727, metadata !DIExpression()), !dbg !3730
  %2 = icmp ugt i32 %0, 48, !dbg !3731
  br i1 %2, label %9, label %3, !dbg !3733

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3734
  call void @llvm.dbg.value(metadata i32 %4, metadata !3728, metadata !DIExpression()), !dbg !3730
  %5 = and i32 %0, 31, !dbg !3735
  call void @llvm.dbg.value(metadata i32 %5, metadata !3729, metadata !DIExpression()), !dbg !3730
  %6 = shl nuw i32 1, %5, !dbg !3736
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3737
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !3738
  store volatile i32 %6, i32* %8, align 4, !dbg !3739
  br label %9, !dbg !3740

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !3730
  ret i32 %10, !dbg !3741
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #10 !dbg !3742 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3744, metadata !DIExpression()), !dbg !3747
  %2 = icmp ugt i32 %0, 48, !dbg !3748
  br i1 %2, label %14, label %3, !dbg !3750

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !3751
  %5 = icmp eq i32 %4, 0, !dbg !3751
  br i1 %5, label %14, label %6, !dbg !3752

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !3753
  call void @llvm.dbg.value(metadata i32 %7, metadata !3745, metadata !DIExpression()), !dbg !3747
  %8 = and i32 %0, 31, !dbg !3754
  call void @llvm.dbg.value(metadata i32 %8, metadata !3746, metadata !DIExpression()), !dbg !3747
  %9 = shl nuw i32 1, %8, !dbg !3755
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3756
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !3757
  store volatile i32 %9, i32* %11, align 4, !dbg !3758
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3759
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !3760
  store volatile i32 %9, i32* %13, align 4, !dbg !3761
  br label %14, !dbg !3762

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !3747
  ret i32 %15, !dbg !3763
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #10 !dbg !3764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3766, metadata !DIExpression()), !dbg !3769
  %2 = icmp ugt i32 %0, 48, !dbg !3770
  br i1 %2, label %14, label %3, !dbg !3772

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !3773
  %5 = icmp eq i32 %4, 0, !dbg !3773
  br i1 %5, label %14, label %6, !dbg !3774

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !3775
  call void @llvm.dbg.value(metadata i32 %7, metadata !3767, metadata !DIExpression()), !dbg !3769
  %8 = and i32 %0, 31, !dbg !3776
  call void @llvm.dbg.value(metadata i32 %8, metadata !3768, metadata !DIExpression()), !dbg !3769
  %9 = shl nuw i32 1, %8, !dbg !3777
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3778
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !3779
  store volatile i32 %9, i32* %11, align 4, !dbg !3780
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3781
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !3782
  store volatile i32 %9, i32* %13, align 4, !dbg !3783
  br label %14, !dbg !3784

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !3769
  ret i32 %15, !dbg !3785
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #10 !dbg !3786 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3788, metadata !DIExpression()), !dbg !3791
  %2 = icmp ugt i32 %0, 48, !dbg !3792
  br i1 %2, label %12, label %3, !dbg !3794

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !3795
  %5 = icmp eq i32 %4, 0, !dbg !3795
  br i1 %5, label %12, label %6, !dbg !3796

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !3797
  call void @llvm.dbg.value(metadata i32 %7, metadata !3789, metadata !DIExpression()), !dbg !3791
  %8 = and i32 %0, 31, !dbg !3798
  call void @llvm.dbg.value(metadata i32 %8, metadata !3790, metadata !DIExpression()), !dbg !3791
  %9 = shl nuw i32 1, %8, !dbg !3799
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3800
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !3801
  store volatile i32 %9, i32* %11, align 4, !dbg !3802
  br label %12, !dbg !3803

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !3791
  ret i32 %13, !dbg !3804
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3805 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3811, metadata !DIExpression()), !dbg !3813
  call void @llvm.dbg.value(metadata i32 %1, metadata !3812, metadata !DIExpression()), !dbg !3813
  %3 = icmp ugt i32 %0, 5, !dbg !3814
  br i1 %3, label %7, label %4, !dbg !3816

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3817
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !3818
  store volatile i32 %1, i32* %6, align 4, !dbg !3819
  br label %7, !dbg !3820

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !3813
  ret i32 %8, !dbg !3821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #10 !dbg !3822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3826, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata i8 %1, metadata !3827, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata i8 %2, metadata !3828, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata i8 %3, metadata !3829, metadata !DIExpression()), !dbg !3832
  %5 = icmp ugt i32 %0, 48, !dbg !3833
  br i1 %5, label %30, label %6, !dbg !3835

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !3836
  %8 = icmp eq i32 %7, 0, !dbg !3836
  br i1 %8, label %9, label %30, !dbg !3837

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !3838
  call void @llvm.dbg.value(metadata i32 %10, metadata !3830, metadata !DIExpression()), !dbg !3832
  %11 = and i32 %0, 31, !dbg !3839
  call void @llvm.dbg.value(metadata i32 %11, metadata !3831, metadata !DIExpression()), !dbg !3832
  %12 = icmp eq i8 %1, 0, !dbg !3840
  %13 = shl nuw i32 1, %11, !dbg !3842
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3842
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !3843
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !3843
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !3843
  store volatile i32 %13, i32* %17, align 4, !dbg !3842
  %18 = icmp eq i8 %2, 0, !dbg !3844
  %19 = shl nuw i32 1, %11, !dbg !3846
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3846
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !3847
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !3847
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !3847
  store volatile i32 %19, i32* %23, align 4, !dbg !3846
  %24 = icmp eq i8 %3, 0, !dbg !3848
  %25 = shl nuw i32 1, %11, !dbg !3850
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3850
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !3851
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !3851
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !3851
  store volatile i32 %25, i32* %29, align 4, !dbg !3850
  br label %30, !dbg !3852

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !3832
  ret i32 %31, !dbg !3852
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #10 !dbg !3853 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3855, metadata !DIExpression()), !dbg !3862
  %2 = icmp ugt i32 %0, 48, !dbg !3863
  br i1 %2, label %40, label %3, !dbg !3865

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3866
  call void @llvm.dbg.value(metadata i32 %4, metadata !3856, metadata !DIExpression()), !dbg !3862
  %5 = and i32 %0, 31, !dbg !3867
  call void @llvm.dbg.value(metadata i32 %5, metadata !3859, metadata !DIExpression()), !dbg !3862
  %6 = lshr i32 %0, 4, !dbg !3868
  call void @llvm.dbg.value(metadata i32 %6, metadata !3857, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.value(metadata i32 %0, metadata !3860, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !3862
  %7 = lshr i32 %0, 3, !dbg !3869
  call void @llvm.dbg.value(metadata i32 %7, metadata !3858, metadata !DIExpression()), !dbg !3862
  call void @llvm.dbg.value(metadata i32 %0, metadata !3861, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !3862
  %8 = shl nuw nsw i32 %0, 2, !dbg !3870
  %9 = and i32 %8, 28, !dbg !3870
  %10 = shl nuw i32 15, %9, !dbg !3871
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3872
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !3873
  store volatile i32 %10, i32* %12, align 4, !dbg !3874
  %13 = shl nuw i32 1, %5, !dbg !3875
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3876
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !3877
  store volatile i32 %13, i32* %15, align 4, !dbg !3878
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3879
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !3880
  store volatile i32 %13, i32* %17, align 4, !dbg !3881
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !3882
  %19 = icmp eq i32 %18, 0, !dbg !3882
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3884
  br i1 %19, label %23, label %21, !dbg !3885

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !3886
  br label %29, !dbg !3888

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !3889
  store volatile i32 %13, i32* %24, align 4, !dbg !3891
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3892
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !3893
  store volatile i32 %13, i32* %26, align 4, !dbg !3894
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3895
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !3896
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !3884
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3897
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !3898
  store volatile i32 %13, i32* %32, align 4, !dbg !3899
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3900
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !3901
  store volatile i32 %13, i32* %34, align 4, !dbg !3902
  %35 = shl nuw nsw i32 %0, 1, !dbg !3903
  %36 = and i32 %35, 30, !dbg !3903
  %37 = shl nuw i32 3, %36, !dbg !3904
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3905
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !3906
  store volatile i32 %37, i32* %39, align 4, !dbg !3907
  br label %40, !dbg !3908

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !3862
  ret i32 %41, !dbg !3909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #10 !dbg !3910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3912, metadata !DIExpression()), !dbg !3917
  %2 = icmp ugt i32 %0, 48, !dbg !3918
  br i1 %2, label %34, label %3, !dbg !3920

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !3921
  call void @llvm.dbg.value(metadata i32 %4, metadata !3913, metadata !DIExpression()), !dbg !3917
  %5 = and i32 %0, 31, !dbg !3922
  call void @llvm.dbg.value(metadata i32 %5, metadata !3915, metadata !DIExpression()), !dbg !3917
  %6 = lshr i32 %0, 3, !dbg !3923
  call void @llvm.dbg.value(metadata i32 %6, metadata !3914, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.value(metadata i32 %0, metadata !3916, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !3917
  %7 = shl nuw nsw i32 %0, 2, !dbg !3924
  %8 = and i32 %7, 28, !dbg !3924
  %9 = shl nuw i32 15, %8, !dbg !3925
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3926
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !3927
  store volatile i32 %9, i32* %11, align 4, !dbg !3928
  %12 = shl nuw i32 1, %5, !dbg !3929
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3930
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !3931
  store volatile i32 %12, i32* %14, align 4, !dbg !3932
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !3933
  %16 = icmp eq i32 %15, 0, !dbg !3933
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3935
  br i1 %16, label %22, label %18, !dbg !3936

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !3937
  store volatile i32 %12, i32* %19, align 4, !dbg !3939
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3940
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !3941
  br label %28, !dbg !3942

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !3943
  store volatile i32 %12, i32* %23, align 4, !dbg !3945
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3946
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !3947
  store volatile i32 %12, i32* %25, align 4, !dbg !3948
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3949
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !3950
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !3935
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3951
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !3952
  store volatile i32 %12, i32* %31, align 4, !dbg !3953
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3954
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !3955
  store volatile i32 %12, i32* %33, align 4, !dbg !3956
  br label %34, !dbg !3957

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !3917
  ret i32 %35, !dbg !3958
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !3959 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3963, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata i32 %1, metadata !3964, metadata !DIExpression()), !dbg !3967
  %3 = icmp ugt i32 %0, 48, !dbg !3968
  br i1 %3, label %14, label %4, !dbg !3970

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !3971
  call void @llvm.dbg.value(metadata i32 %5, metadata !3965, metadata !DIExpression()), !dbg !3967
  call void @llvm.dbg.value(metadata i32 %0, metadata !3966, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !3967
  %6 = shl nuw nsw i32 %0, 1, !dbg !3972
  %7 = and i32 %6, 30, !dbg !3972
  %8 = shl nuw i32 3, %7, !dbg !3973
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3974
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !3975
  store volatile i32 %8, i32* %10, align 4, !dbg !3976
  %11 = shl i32 %1, %7, !dbg !3977
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !3978
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !3979
  store volatile i32 %11, i32* %13, align 4, !dbg !3980
  br label %14, !dbg !3981

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3967
  ret i32 %15, !dbg !3982
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #9 !dbg !3983 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3988, metadata !DIExpression()), !dbg !3993
  call void @llvm.dbg.value(metadata i32* %1, metadata !3989, metadata !DIExpression()), !dbg !3993
  %3 = icmp ugt i32 %0, 48, !dbg !3994
  br i1 %3, label %18, label %4, !dbg !3996

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !3997
  br i1 %5, label %18, label %6, !dbg !3999

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !4000
  call void @llvm.dbg.value(metadata i32 %7, metadata !3990, metadata !DIExpression()), !dbg !3993
  call void @llvm.dbg.value(metadata i32 %0, metadata !3991, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !3993
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4001
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !4002
  %10 = load volatile i32, i32* %9, align 4, !dbg !4002
  call void @llvm.dbg.value(metadata i32 %10, metadata !3992, metadata !DIExpression()), !dbg !3993
  %11 = shl nuw nsw i32 %0, 1, !dbg !4003
  %12 = and i32 %11, 30, !dbg !4003
  %13 = shl nuw i32 3, %12, !dbg !4004
  %14 = and i32 %10, %13, !dbg !4005
  call void @llvm.dbg.value(metadata i32 %14, metadata !3992, metadata !DIExpression()), !dbg !3993
  %15 = lshr i32 %14, %12, !dbg !4006
  call void @llvm.dbg.value(metadata i32 %15, metadata !3992, metadata !DIExpression()), !dbg !3993
  %16 = shl i32 %15, 2, !dbg !4007
  %17 = add i32 %16, 4, !dbg !4007
  store i32 %17, i32* %1, align 4, !dbg !4008
  br label %18, !dbg !4009

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !3993
  ret i32 %19, !dbg !4010
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4011 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4015, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i1 %1, metadata !4016, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4080
  %4 = bitcast i32* %3 to i8*, !dbg !4081
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4081
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4082
  %6 = load volatile i32, i32* %5, align 4, !dbg !4082
  %7 = icmp eq i32 %6, 2, !dbg !4084
  br i1 %7, label %9, label %8, !dbg !4085

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4086
  unreachable, !dbg !4086

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4088
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4088
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4022, metadata !DIExpression()), !dbg !4080
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !4089
  call void @llvm.dbg.value(metadata i32 %12, metadata !4017, metadata !DIExpression()), !dbg !4080
  br i1 %1, label %13, label %14, !dbg !4090

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #22, !dbg !4091
  br label %14, !dbg !4094

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4019, metadata !DIExpression(DW_OP_deref)), !dbg !4080
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #22, !dbg !4095
  call void @llvm.dbg.value(metadata i32 %15, metadata !4078, metadata !DIExpression()), !dbg !4080
  %16 = icmp eq i32 %15, 0, !dbg !4096
  br i1 %16, label %18, label %17, !dbg !4098

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4099
  unreachable, !dbg !4099

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4101
  call void @llvm.dbg.value(metadata i32 %19, metadata !4019, metadata !DIExpression()), !dbg !4080
  %20 = icmp eq i32 %19, 0, !dbg !4103
  br i1 %20, label %43, label %21, !dbg !4104

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4105
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4105
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4020, metadata !DIExpression()), !dbg !4080
  call void @llvm.dbg.value(metadata i8* undef, metadata !4021, metadata !DIExpression()), !dbg !4080
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4106
  br i1 %24, label %25, label %26, !dbg !4108

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4109
  unreachable, !dbg !4109

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4111
  %28 = load i8*, i8** %27, align 4, !dbg !4111
  call void @llvm.dbg.value(metadata i8* %28, metadata !4021, metadata !DIExpression()), !dbg !4080
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #22, !dbg !4112
  call void %23(i32 noundef 1, i8* noundef %28) #22, !dbg !4113
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #22, !dbg !4114
  call void @llvm.dbg.value(metadata i32* %3, metadata !4019, metadata !DIExpression(DW_OP_deref)), !dbg !4080
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #22, !dbg !4115
  call void @llvm.dbg.value(metadata i32 %31, metadata !4078, metadata !DIExpression()), !dbg !4080
  %32 = icmp eq i32 %31, 0, !dbg !4116
  br i1 %32, label %34, label %33, !dbg !4118

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4119
  unreachable, !dbg !4119

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4121
  call void @llvm.dbg.value(metadata i32 %35, metadata !4019, metadata !DIExpression()), !dbg !4080
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4123
  %37 = load i32, i32* %36, align 4, !dbg !4123
  %38 = icmp ult i32 %35, %37, !dbg !4124
  br i1 %38, label %43, label %39, !dbg !4125

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #22, !dbg !4126
  call void @llvm.dbg.value(metadata i32 %40, metadata !4078, metadata !DIExpression()), !dbg !4080
  %41 = icmp eq i32 %40, 0, !dbg !4128
  br i1 %41, label %43, label %42, !dbg !4130

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4131
  unreachable, !dbg !4131

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4133
  ret void, !dbg !4133
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #14

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4134 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4136, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.value(metadata i1 %1, metadata !4137, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4144
  %4 = bitcast i32* %3 to i8*, !dbg !4145
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4145
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4146
  %6 = load volatile i32, i32* %5, align 4, !dbg !4146
  %7 = icmp eq i32 %6, 2, !dbg !4148
  br i1 %7, label %9, label %8, !dbg !4149

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4150
  unreachable, !dbg !4150

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !4152
  call void @llvm.dbg.value(metadata i32 %10, metadata !4138, metadata !DIExpression()), !dbg !4144
  br i1 %1, label %36, label %11, !dbg !4153

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4154
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !4154
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !4142, metadata !DIExpression()), !dbg !4144
  call void @llvm.dbg.value(metadata i8* undef, metadata !4143, metadata !DIExpression()), !dbg !4144
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4157
  br i1 %14, label %15, label %16, !dbg !4159

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4160
  unreachable, !dbg !4160

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4162
  %18 = load i8*, i8** %17, align 4, !dbg !4162
  call void @llvm.dbg.value(metadata i8* %18, metadata !4143, metadata !DIExpression()), !dbg !4144
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #22, !dbg !4163
  tail call void %13(i32 noundef 2, i8* noundef %18) #22, !dbg !4164
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #22, !dbg !4165
  call void @llvm.dbg.value(metadata i32* %3, metadata !4141, metadata !DIExpression(DW_OP_deref)), !dbg !4144
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #22, !dbg !4166
  call void @llvm.dbg.value(metadata i32 %21, metadata !4139, metadata !DIExpression()), !dbg !4144
  %22 = icmp eq i32 %21, 0, !dbg !4167
  br i1 %22, label %24, label %23, !dbg !4169

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4170
  unreachable, !dbg !4170

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4172
  %26 = load i32, i32* %25, align 4, !dbg !4172
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4173
  %28 = load i32, i32* %27, align 4, !dbg !4173
  %29 = sub i32 %26, %28, !dbg !4174
  call void @llvm.dbg.value(metadata i32 %29, metadata !4140, metadata !DIExpression()), !dbg !4144
  %30 = load i32, i32* %3, align 4, !dbg !4175
  call void @llvm.dbg.value(metadata i32 %30, metadata !4141, metadata !DIExpression()), !dbg !4144
  %31 = icmp ult i32 %30, %29, !dbg !4177
  br i1 %31, label %36, label %32, !dbg !4178

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #22, !dbg !4179
  call void @llvm.dbg.value(metadata i32 %33, metadata !4139, metadata !DIExpression()), !dbg !4144
  %34 = icmp eq i32 %33, 0, !dbg !4181
  br i1 %34, label %36, label %35, !dbg !4183

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4184
  unreachable, !dbg !4184

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #23, !dbg !4186
  ret void, !dbg !4186
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4191, metadata !DIExpression()), !dbg !4195
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4196
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4196
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4192, metadata !DIExpression()), !dbg !4195
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #22, !dbg !4197
  %5 = icmp eq i32 %4, 0, !dbg !4197
  br i1 %5, label %6, label %14, !dbg !4199

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #22, !dbg !4200
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #22, !dbg !4202
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4203
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4203
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4193, metadata !DIExpression()), !dbg !4195
  call void @llvm.dbg.value(metadata i8* undef, metadata !4194, metadata !DIExpression()), !dbg !4195
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4204
  br i1 %9, label %10, label %11, !dbg !4206

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4207
  unreachable, !dbg !4207

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4209
  %13 = load i8*, i8** %12, align 4, !dbg !4209
  call void @llvm.dbg.value(metadata i8* %13, metadata !4194, metadata !DIExpression()), !dbg !4195
  tail call void %8(i32 noundef -1, i8* noundef %13) #22, !dbg !4210
  br label %14, !dbg !4211

14:                                               ; preds = %11, %1
  ret void, !dbg !4212
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4213 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4219, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i32 %1, metadata !4220, metadata !DIExpression()), !dbg !4224
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4225
  br i1 %3, label %4, label %16, !dbg !4227

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !4228
  br i1 %5, label %6, label %16, !dbg !4229

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4230
  %8 = load volatile i32, i32* %7, align 4, !dbg !4230
  %9 = icmp eq i32 %8, 0, !dbg !4232
  br i1 %9, label %16, label %10, !dbg !4233

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4234
  call void @llvm.dbg.value(metadata i32 %11, metadata !4222, metadata !DIExpression()), !dbg !4224
  tail call void @restore_interrupt_mask(i32 noundef %11) #22, !dbg !4235
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4236
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4236
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4223, metadata !DIExpression()), !dbg !4224
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !4237
  %15 = load i32, i32* %14, align 4, !dbg !4237
  call void @llvm.dbg.value(metadata i32 %15, metadata !4221, metadata !DIExpression()), !dbg !4224
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #22, !dbg !4238
  br label %16, !dbg !4239

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4224
  ret i32 %17, !dbg !4240
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #8 !dbg !4241 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4245, metadata !DIExpression()), !dbg !4246
  %2 = icmp ult i32 %0, 4, !dbg !4247
  ret i1 %2, !dbg !4248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #8 !dbg !4249 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4253, metadata !DIExpression()), !dbg !4254
  %2 = icmp ult i32 %0, 13, !dbg !4255
  ret i1 %2, !dbg !4256
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4257 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4273, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4274, metadata !DIExpression()), !dbg !4277
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4278
  br i1 %3, label %4, label %23, !dbg !4280

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4281
  br i1 %5, label %6, label %23, !dbg !4282

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4283
  %8 = load volatile i32, i32* %7, align 4, !dbg !4283
  %9 = icmp eq i32 %8, 0, !dbg !4285
  br i1 %9, label %23, label %10, !dbg !4286

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4287
  call void @llvm.dbg.value(metadata i32 %11, metadata !4275, metadata !DIExpression()), !dbg !4277
  tail call void @restore_interrupt_mask(i32 noundef %11) #22, !dbg !4288
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4289
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4289
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4276, metadata !DIExpression()), !dbg !4277
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4290
  %15 = load i32, i32* %14, align 4, !dbg !4290
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #21, !dbg !4291
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4292
  %18 = load i32, i32* %17, align 4, !dbg !4292
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4293
  %20 = load i32, i32* %19, align 4, !dbg !4293
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4294
  %22 = load i32, i32* %21, align 4, !dbg !4294
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #22, !dbg !4295
  br label %23, !dbg !4296

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4277
  ret i32 %24, !dbg !4297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #2 !dbg !4298 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !4302, metadata !DIExpression()), !dbg !4303
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !4304
  %3 = load i32, i32* %2, align 4, !dbg !4304
  %4 = icmp ult i32 %3, 13, !dbg !4305
  br i1 %4, label %5, label %17, !dbg !4306

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !4307
  %7 = load i32, i32* %6, align 4, !dbg !4307
  %8 = icmp ult i32 %7, 4, !dbg !4308
  br i1 %8, label %9, label %17, !dbg !4309

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !4310
  %11 = load i32, i32* %10, align 4, !dbg !4310
  %12 = icmp ult i32 %11, 2, !dbg !4311
  br i1 %12, label %13, label %17, !dbg !4312

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !4313
  %15 = load i32, i32* %14, align 4, !dbg !4313
  %16 = icmp ult i32 %15, 3, !dbg !4314
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !4303
  ret i1 %18, !dbg !4315
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4321, metadata !DIExpression()), !dbg !4329
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4322, metadata !DIExpression()), !dbg !4329
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4330
  br i1 %3, label %4, label %41, !dbg !4332

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4333
  br i1 %5, label %6, label %41, !dbg !4334

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4335
  call void @llvm.dbg.value(metadata i32 %7, metadata !4326, metadata !DIExpression()), !dbg !4329
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4336
  %9 = load volatile i32, i32* %8, align 4, !dbg !4336
  %10 = icmp eq i32 %9, 0, !dbg !4338
  br i1 %10, label %12, label %11, !dbg !4339

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !4340
  br label %41, !dbg !4342

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !4343
  br i1 %13, label %22, label %14, !dbg !4345

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !4324, metadata !DIExpression()), !dbg !4329
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !4346
  store volatile i32 0, i32* %16, align 4, !dbg !4351
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !4352
  store i8* null, i8** %17, align 4, !dbg !4353
  %18 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !4354
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !4355
  %19 = add nuw nsw i32 %15, 1, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %19, metadata !4324, metadata !DIExpression()), !dbg !4329
  %20 = icmp eq i32 %19, 4, !dbg !4357
  br i1 %20, label %21, label %14, !dbg !4358, !llvm.loop !4359

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !4361
  br label %22, !dbg !4362

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !4363
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !4364
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4365
  %24 = load i32, i32* %23, align 4, !dbg !4365
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #22, !dbg !4366
  call void @llvm.dbg.value(metadata i32 %25, metadata !4327, metadata !DIExpression()), !dbg !4329
  %26 = icmp eq i32 %25, 0, !dbg !4367
  br i1 %26, label %28, label %27, !dbg !4369

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4370
  unreachable, !dbg !4370

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4372
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !4372
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !4323, metadata !DIExpression()), !dbg !4329
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #22, !dbg !4373
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4374
  %32 = load i32, i32* %31, align 4, !dbg !4374
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !4375
  %34 = load i32, i32* %33, align 4, !dbg !4375
  call void @llvm.dbg.value(metadata i32 %34, metadata !4325, metadata !DIExpression()), !dbg !4329
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #22, !dbg !4376
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4377
  %36 = load i32, i32* %35, align 4, !dbg !4377
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4378
  %38 = load i32, i32* %37, align 4, !dbg !4378
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4379
  %40 = load i32, i32* %39, align 4, !dbg !4379
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #22, !dbg !4380
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #22, !dbg !4381
  br label %41, !dbg !4382

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !4329
  ret i32 %42, !dbg !4383
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4384 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4388, metadata !DIExpression()), !dbg !4395
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4396
  br i1 %2, label %3, label %54, !dbg !4398

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4399
  call void @llvm.dbg.value(metadata i32 %4, metadata !4392, metadata !DIExpression()), !dbg !4395
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4400
  %6 = load volatile i32, i32* %5, align 4, !dbg !4400
  %7 = icmp eq i32 %6, 0, !dbg !4402
  br i1 %7, label %52, label %8, !dbg !4403

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4404
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4404
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4389, metadata !DIExpression()), !dbg !4395
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #22, !dbg !4405
  %11 = load volatile i32, i32* %5, align 4, !dbg !4406
  %12 = icmp eq i32 %11, 2, !dbg !4408
  br i1 %12, label %13, label %43, !dbg !4409

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !4410
  call void @llvm.dbg.value(metadata i32 %14, metadata !4390, metadata !DIExpression()), !dbg !4395
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %15, metadata !4391, metadata !DIExpression()), !dbg !4395
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #22, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %16, metadata !4393, metadata !DIExpression()), !dbg !4395
  %17 = icmp eq i32 %16, 0, !dbg !4414
  br i1 %17, label %19, label %18, !dbg !4416

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !4417
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4419
  unreachable, !dbg !4419

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #22, !dbg !4420
  call void @llvm.dbg.value(metadata i32 %20, metadata !4393, metadata !DIExpression()), !dbg !4395
  %21 = icmp eq i32 %20, 0, !dbg !4421
  br i1 %21, label %23, label %22, !dbg !4423

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !4424
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4426
  unreachable, !dbg !4426

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #22, !dbg !4427
  call void @llvm.dbg.value(metadata i32 %24, metadata !4393, metadata !DIExpression()), !dbg !4395
  %25 = icmp eq i32 %24, 0, !dbg !4428
  br i1 %25, label %27, label %26, !dbg !4430

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !4431
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4433
  unreachable, !dbg !4433

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #22, !dbg !4434
  call void @llvm.dbg.value(metadata i32 %28, metadata !4393, metadata !DIExpression()), !dbg !4395
  %29 = icmp eq i32 %28, 0, !dbg !4435
  br i1 %29, label %31, label %30, !dbg !4437

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !4438
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4440
  unreachable, !dbg !4440

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #22, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %32, metadata !4393, metadata !DIExpression()), !dbg !4395
  %33 = icmp eq i32 %32, 0, !dbg !4442
  br i1 %33, label %35, label %34, !dbg !4444

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !4445
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4447
  unreachable, !dbg !4447

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #22, !dbg !4448
  call void @llvm.dbg.value(metadata i32 %36, metadata !4393, metadata !DIExpression()), !dbg !4395
  %37 = icmp eq i32 %36, 0, !dbg !4449
  br i1 %37, label %39, label %38, !dbg !4451

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !4452
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4454
  unreachable, !dbg !4454

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4455
  %41 = load i32, i32* %40, align 4, !dbg !4455
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #22, !dbg !4456
  br label %43, !dbg !4457

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #22, !dbg !4458
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4459
  %45 = load i32, i32* %44, align 4, !dbg !4459
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #22, !dbg !4460
  call void @llvm.dbg.value(metadata i32 %46, metadata !4394, metadata !DIExpression()), !dbg !4395
  %47 = icmp eq i32 %46, 0, !dbg !4461
  br i1 %47, label %49, label %48, !dbg !4463

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !4464
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4466
  unreachable, !dbg !4466

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4467
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !4468
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4469
  store i8* null, i8** %51, align 4, !dbg !4470
  store volatile i32 0, i32* %5, align 4, !dbg !4471
  br label %52, !dbg !4472

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #22, !dbg !4395
  br label %54, !dbg !4473

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !4395
  ret i32 %55, !dbg !4473
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4478, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.value(metadata i8 %1, metadata !4479, metadata !DIExpression()), !dbg !4481
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4482
  br i1 %3, label %4, label %11, !dbg !4484

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4485
  %6 = load volatile i32, i32* %5, align 4, !dbg !4485
  %7 = icmp eq i32 %6, 1, !dbg !4487
  br i1 %7, label %8, label %11, !dbg !4488

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4489
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4489
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4480, metadata !DIExpression()), !dbg !4481
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #22, !dbg !4490
  br label %11, !dbg !4491

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !4491
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4492 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4498, metadata !DIExpression()), !dbg !4502
  call void @llvm.dbg.value(metadata i8* %1, metadata !4499, metadata !DIExpression()), !dbg !4502
  call void @llvm.dbg.value(metadata i32 %2, metadata !4500, metadata !DIExpression()), !dbg !4502
  call void @llvm.dbg.value(metadata i32 0, metadata !4501, metadata !DIExpression()), !dbg !4502
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4503
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !4505
  br i1 %6, label %7, label %20, !dbg !4505

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4506
  %9 = load volatile i32, i32* %8, align 4, !dbg !4506
  %10 = icmp ne i32 %9, 1, !dbg !4508
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !4509
  call void @llvm.dbg.value(metadata i32 0, metadata !4501, metadata !DIExpression()), !dbg !4502
  call void @llvm.dbg.value(metadata i8* %1, metadata !4499, metadata !DIExpression()), !dbg !4502
  br i1 %12, label %20, label %13, !dbg !4509

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4501, metadata !DIExpression()), !dbg !4502
  call void @llvm.dbg.value(metadata i8* %15, metadata !4499, metadata !DIExpression()), !dbg !4502
  %16 = load i8, i8* %15, align 1, !dbg !4510
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !4514
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !4515
  call void @llvm.dbg.value(metadata i8* %17, metadata !4499, metadata !DIExpression()), !dbg !4502
  %18 = add nuw i32 %14, 1, !dbg !4516
  call void @llvm.dbg.value(metadata i32 %18, metadata !4501, metadata !DIExpression()), !dbg !4502
  %19 = icmp eq i32 %18, %2, !dbg !4517
  br i1 %19, label %20, label %13, !dbg !4518, !llvm.loop !4519

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !4502
  ret i32 %21, !dbg !4521
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4522 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4524, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.value(metadata i8* %1, metadata !4525, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.value(metadata i32 %2, metadata !4526, metadata !DIExpression()), !dbg !4532
  %5 = bitcast i32* %4 to i8*, !dbg !4533
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4533
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4534
  %7 = xor i1 %6, true, !dbg !4536
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !4536
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !4536
  br i1 %11, label %45, label %12, !dbg !4536

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4537
  %14 = load volatile i32, i32* %13, align 4, !dbg !4537
  %15 = icmp eq i32 %14, 2, !dbg !4539
  br i1 %15, label %16, label %45, !dbg !4540

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !4541
  call void @llvm.dbg.value(metadata i32 %17, metadata !4527, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.value(metadata i32* %4, metadata !4530, metadata !DIExpression(DW_OP_deref)), !dbg !4532
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #22, !dbg !4542
  call void @llvm.dbg.value(metadata i32 %18, metadata !4531, metadata !DIExpression()), !dbg !4532
  %19 = icmp eq i32 %18, 0, !dbg !4543
  br i1 %19, label %21, label %20, !dbg !4545

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4546
  unreachable, !dbg !4546

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !4548
  call void @llvm.dbg.value(metadata i32 %22, metadata !4530, metadata !DIExpression()), !dbg !4532
  %23 = icmp ult i32 %22, %2, !dbg !4550
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !4529, metadata !DIExpression()), !dbg !4532
  call void @llvm.dbg.value(metadata i32 0, metadata !4528, metadata !DIExpression()), !dbg !4532
  %25 = icmp eq i32 %24, 0, !dbg !4551
  br i1 %25, label %38, label %28, !dbg !4554

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !4528, metadata !DIExpression()), !dbg !4532
  %27 = icmp eq i32 %34, %24, !dbg !4551
  br i1 %27, label %36, label %28, !dbg !4554, !llvm.loop !4555

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !4528, metadata !DIExpression()), !dbg !4532
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !4557
  %31 = load i8, i8* %30, align 1, !dbg !4557
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #22, !dbg !4559
  call void @llvm.dbg.value(metadata i32 %32, metadata !4531, metadata !DIExpression()), !dbg !4532
  %33 = icmp eq i32 %32, 0, !dbg !4560
  %34 = add nuw i32 %29, 1, !dbg !4562
  call void @llvm.dbg.value(metadata i32 %34, metadata !4528, metadata !DIExpression()), !dbg !4532
  br i1 %33, label %26, label %35, !dbg !4563

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4564
  unreachable, !dbg !4564

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !4566
  br label %38, !dbg !4566

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !4566
  call void @llvm.dbg.value(metadata i32 %39, metadata !4530, metadata !DIExpression()), !dbg !4532
  %40 = icmp eq i32 %24, %39, !dbg !4568
  br i1 %40, label %41, label %45, !dbg !4569

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #22, !dbg !4570
  call void @llvm.dbg.value(metadata i32 %42, metadata !4531, metadata !DIExpression()), !dbg !4532
  %43 = icmp eq i32 %42, 0, !dbg !4572
  br i1 %43, label %45, label %44, !dbg !4574

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4575
  unreachable, !dbg !4575

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !4532
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4577
  ret i32 %46, !dbg !4577
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !4578 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4582, metadata !DIExpression()), !dbg !4585
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4586
  br i1 %2, label %3, label %11, !dbg !4588

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4589
  %5 = load volatile i32, i32* %4, align 4, !dbg !4589
  %6 = icmp eq i32 %5, 1, !dbg !4591
  br i1 %6, label %7, label %11, !dbg !4592

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4593
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4593
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4584, metadata !DIExpression()), !dbg !4585
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #22, !dbg !4594
  call void @llvm.dbg.value(metadata i8 %10, metadata !4583, metadata !DIExpression()), !dbg !4585
  br label %11, !dbg !4595

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !4585
  ret i8 %12, !dbg !4596
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !4597 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4601, metadata !DIExpression()), !dbg !4604
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4605
  br i1 %2, label %3, label %11, !dbg !4607

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4608
  %5 = load volatile i32, i32* %4, align 4, !dbg !4608
  %6 = icmp eq i32 %5, 1, !dbg !4610
  br i1 %6, label %7, label %11, !dbg !4611

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4612
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4612
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4603, metadata !DIExpression()), !dbg !4604
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #22, !dbg !4613
  call void @llvm.dbg.value(metadata i32 %10, metadata !4602, metadata !DIExpression()), !dbg !4604
  br label %11, !dbg !4614

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !4604
  ret i32 %12, !dbg !4615
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4620, metadata !DIExpression()), !dbg !4625
  call void @llvm.dbg.value(metadata i8* %1, metadata !4621, metadata !DIExpression()), !dbg !4625
  call void @llvm.dbg.value(metadata i32 %2, metadata !4622, metadata !DIExpression()), !dbg !4625
  call void @llvm.dbg.value(metadata i8* %1, metadata !4624, metadata !DIExpression()), !dbg !4625
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4626
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !4628
  br i1 %6, label %7, label %19, !dbg !4628

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4629
  %9 = load volatile i32, i32* %8, align 4, !dbg !4629
  %10 = icmp ne i32 %9, 1, !dbg !4631
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !4632
  call void @llvm.dbg.value(metadata i32 0, metadata !4623, metadata !DIExpression()), !dbg !4625
  br i1 %12, label %19, label %13, !dbg !4632

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !4623, metadata !DIExpression()), !dbg !4625
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !4633
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !4637
  store i8 %15, i8* %16, align 1, !dbg !4638
  %17 = add nuw i32 %14, 1, !dbg !4639
  call void @llvm.dbg.value(metadata i32 %17, metadata !4623, metadata !DIExpression()), !dbg !4625
  %18 = icmp eq i32 %17, %2, !dbg !4640
  br i1 %18, label %19, label %13, !dbg !4641, !llvm.loop !4642

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !4625
  ret i32 %20, !dbg !4644
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !4645 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4647, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i8* %1, metadata !4648, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i32 %2, metadata !4649, metadata !DIExpression()), !dbg !4655
  %5 = bitcast i32* %4 to i8*, !dbg !4656
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4656
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4657
  %7 = xor i1 %6, true, !dbg !4659
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !4659
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !4659
  br i1 %11, label %44, label %12, !dbg !4659

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4660
  %14 = load volatile i32, i32* %13, align 4, !dbg !4660
  %15 = icmp eq i32 %14, 2, !dbg !4662
  br i1 %15, label %16, label %44, !dbg !4663

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !4664
  call void @llvm.dbg.value(metadata i32 %17, metadata !4650, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i32* %4, metadata !4652, metadata !DIExpression(DW_OP_deref)), !dbg !4655
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #22, !dbg !4665
  call void @llvm.dbg.value(metadata i32 %18, metadata !4654, metadata !DIExpression()), !dbg !4655
  %19 = icmp eq i32 %18, 0, !dbg !4666
  br i1 %19, label %21, label %20, !dbg !4668

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4669
  unreachable, !dbg !4669

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !4671
  call void @llvm.dbg.value(metadata i32 %22, metadata !4652, metadata !DIExpression()), !dbg !4655
  %23 = icmp ult i32 %22, %2, !dbg !4673
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !4651, metadata !DIExpression()), !dbg !4655
  call void @llvm.dbg.value(metadata i32 0, metadata !4653, metadata !DIExpression()), !dbg !4655
  %25 = icmp eq i32 %24, 0, !dbg !4674
  br i1 %25, label %37, label %28, !dbg !4677

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !4653, metadata !DIExpression()), !dbg !4655
  %27 = icmp eq i32 %33, %24, !dbg !4674
  br i1 %27, label %35, label %28, !dbg !4677, !llvm.loop !4678

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !4653, metadata !DIExpression()), !dbg !4655
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !4680
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #22, !dbg !4682
  call void @llvm.dbg.value(metadata i32 %31, metadata !4654, metadata !DIExpression()), !dbg !4655
  %32 = icmp eq i32 %31, 0, !dbg !4683
  %33 = add nuw i32 %29, 1, !dbg !4685
  call void @llvm.dbg.value(metadata i32 %33, metadata !4653, metadata !DIExpression()), !dbg !4655
  br i1 %32, label %26, label %34, !dbg !4686

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4687
  unreachable, !dbg !4687

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !4689
  br label %37, !dbg !4689

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !4689
  call void @llvm.dbg.value(metadata i32 %38, metadata !4652, metadata !DIExpression()), !dbg !4655
  %39 = icmp eq i32 %24, %38, !dbg !4691
  br i1 %39, label %40, label %44, !dbg !4692

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #22, !dbg !4693
  call void @llvm.dbg.value(metadata i32 %41, metadata !4654, metadata !DIExpression()), !dbg !4655
  %42 = icmp eq i32 %41, 0, !dbg !4695
  br i1 %42, label %44, label %43, !dbg !4697

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4698
  unreachable, !dbg !4698

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !4655
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !4700
  ret i32 %45, !dbg !4700
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !4701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4705, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !4706, metadata !DIExpression()), !dbg !4713
  call void @llvm.dbg.value(metadata i8* %2, metadata !4707, metadata !DIExpression()), !dbg !4713
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4714
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !4716
  br i1 %6, label %7, label %39, !dbg !4716

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !4717
  call void @llvm.dbg.value(metadata i32 %8, metadata !4710, metadata !DIExpression()), !dbg !4713
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4718
  %10 = load volatile i32, i32* %9, align 4, !dbg !4718
  %11 = icmp eq i32 %10, 1, !dbg !4720
  br i1 %11, label %12, label %37, !dbg !4721

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !4722
  call void @llvm.dbg.value(metadata i32 %13, metadata !4708, metadata !DIExpression()), !dbg !4713
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !4723
  call void @llvm.dbg.value(metadata i32 %14, metadata !4709, metadata !DIExpression()), !dbg !4713
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4724
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !4725
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4726
  store i8* %2, i8** %16, align 4, !dbg !4727
  %17 = shl i32 %0, 1, !dbg !4728
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !4729
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #22, !dbg !4730
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !4731
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #22, !dbg !4732
  call void @llvm.dbg.value(metadata i32 %20, metadata !4711, metadata !DIExpression()), !dbg !4713
  %21 = icmp eq i32 %20, 0, !dbg !4733
  br i1 %21, label %23, label %22, !dbg !4735

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !4736
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4738
  unreachable, !dbg !4738

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !4739
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !4740
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #22, !dbg !4741
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !4742
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #22, !dbg !4743
  call void @llvm.dbg.value(metadata i32 %27, metadata !4711, metadata !DIExpression()), !dbg !4713
  %28 = icmp eq i32 %27, 0, !dbg !4744
  br i1 %28, label %30, label %29, !dbg !4746

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !4747
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4749
  unreachable, !dbg !4749

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4750
  %32 = load i32, i32* %31, align 4, !dbg !4750
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #22, !dbg !4751
  call void @llvm.dbg.value(metadata i32 %33, metadata !4712, metadata !DIExpression()), !dbg !4713
  %34 = icmp eq i32 %33, 0, !dbg !4752
  br i1 %34, label %36, label %35, !dbg !4754

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !4755
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4757
  unreachable, !dbg !4757

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !4758
  store volatile i32 2, i32* %9, align 4, !dbg !4759
  br label %37, !dbg !4760

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #22, !dbg !4713
  br label %39, !dbg !4761

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !4713
  ret i32 %40, !dbg !4761
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !4762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4767, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i8* %1, metadata !4768, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.value(metadata i8* %1, metadata !4769, metadata !DIExpression()), !dbg !4770
  %3 = load i8, i8* %1, align 4, !dbg !4771, !range !2545
  %4 = icmp eq i8 %3, 0, !dbg !4771
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !4773
  %6 = bitcast i8* %5 to i32*, !dbg !4773
  %7 = load i32, i32* %6, align 4, !dbg !4773
  br i1 %4, label %9, label %8, !dbg !4774

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !4769, metadata !DIExpression()), !dbg !4770
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !4775
  br label %10, !dbg !4777

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !4778
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !4780
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !4781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4783, metadata !DIExpression()), !dbg !4788
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4789
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4789
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4784, metadata !DIExpression()), !dbg !4788
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !4790
  call void @llvm.dbg.value(metadata i32 %4, metadata !4785, metadata !DIExpression()), !dbg !4788
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !4791
  call void @llvm.dbg.value(metadata i32 %5, metadata !4786, metadata !DIExpression()), !dbg !4788
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #22, !dbg !4792
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !4793
  %7 = load i32, i32* %6, align 4, !dbg !4793
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #22, !dbg !4794
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #22, !dbg !4795
  call void @llvm.dbg.value(metadata i32 %9, metadata !4787, metadata !DIExpression()), !dbg !4788
  %10 = icmp eq i32 %9, 0, !dbg !4796
  br i1 %10, label %12, label %11, !dbg !4798

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4799
  unreachable, !dbg !4799

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #22, !dbg !4801
  call void @llvm.dbg.value(metadata i32 %13, metadata !4787, metadata !DIExpression()), !dbg !4788
  %14 = icmp eq i32 %13, 0, !dbg !4802
  br i1 %14, label %16, label %15, !dbg !4804

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4805
  unreachable, !dbg !4805

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #22, !dbg !4807
  call void @llvm.dbg.value(metadata i32 %17, metadata !4787, metadata !DIExpression()), !dbg !4788
  %18 = icmp eq i32 %17, 0, !dbg !4808
  br i1 %18, label %20, label %19, !dbg !4810

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4811
  unreachable, !dbg !4811

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #22, !dbg !4813
  call void @llvm.dbg.value(metadata i32 %21, metadata !4787, metadata !DIExpression()), !dbg !4788
  %22 = icmp eq i32 %21, 0, !dbg !4814
  br i1 %22, label %24, label %23, !dbg !4816

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4817
  unreachable, !dbg !4817

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #22, !dbg !4819
  ret void, !dbg !4820
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !4821 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4823, metadata !DIExpression()), !dbg !4827
  %3 = bitcast i32* %2 to i8*, !dbg !4828
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4828
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4829
  br i1 %4, label %5, label %16, !dbg !4831

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4832
  %7 = load volatile i32, i32* %6, align 4, !dbg !4832
  %8 = icmp eq i32 %7, 2, !dbg !4834
  br i1 %8, label %9, label %16, !dbg !4835

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !4836
  call void @llvm.dbg.value(metadata i32 %10, metadata !4824, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.value(metadata i32* %2, metadata !4825, metadata !DIExpression(DW_OP_deref)), !dbg !4827
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #22, !dbg !4837
  call void @llvm.dbg.value(metadata i32 %11, metadata !4826, metadata !DIExpression()), !dbg !4827
  %12 = icmp eq i32 %11, 0, !dbg !4838
  br i1 %12, label %14, label %13, !dbg !4840

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4841
  unreachable, !dbg !4841

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %15, metadata !4825, metadata !DIExpression()), !dbg !4827
  br label %16, !dbg !4844

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !4827
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4845
  ret i32 %17, !dbg !4845
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !4846 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4848, metadata !DIExpression()), !dbg !4852
  %3 = bitcast i32* %2 to i8*, !dbg !4853
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4853
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4854
  br i1 %4, label %5, label %16, !dbg !4856

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4857
  %7 = load volatile i32, i32* %6, align 4, !dbg !4857
  %8 = icmp eq i32 %7, 2, !dbg !4859
  br i1 %8, label %9, label %16, !dbg !4860

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !4861
  call void @llvm.dbg.value(metadata i32 %10, metadata !4849, metadata !DIExpression()), !dbg !4852
  call void @llvm.dbg.value(metadata i32* %2, metadata !4850, metadata !DIExpression(DW_OP_deref)), !dbg !4852
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #22, !dbg !4862
  call void @llvm.dbg.value(metadata i32 %11, metadata !4851, metadata !DIExpression()), !dbg !4852
  %12 = icmp eq i32 %11, 0, !dbg !4863
  br i1 %12, label %14, label %13, !dbg !4865

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4866
  unreachable, !dbg !4866

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !4868
  call void @llvm.dbg.value(metadata i32 %15, metadata !4850, metadata !DIExpression()), !dbg !4852
  br label %16, !dbg !4869

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !4852
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #23, !dbg !4870
  ret i32 %17, !dbg !4870
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !4871 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4873, metadata !DIExpression()), !dbg !4875
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4876
  br i1 %2, label %3, label %10, !dbg !4878

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4879
  %5 = load volatile i32, i32* %4, align 4, !dbg !4879
  %6 = icmp eq i32 %5, 0, !dbg !4881
  br i1 %6, label %10, label %7, !dbg !4882

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4883
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4883
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4874, metadata !DIExpression()), !dbg !4875
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #22, !dbg !4884
  br label %10, !dbg !4885

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !4875
  ret i32 %11, !dbg !4886
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !4887 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4891, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata i8 %1, metadata !4892, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata i8 %2, metadata !4893, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.value(metadata i8 %3, metadata !4894, metadata !DIExpression()), !dbg !4896
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4897
  br i1 %5, label %6, label %13, !dbg !4899

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4900
  %8 = load volatile i32, i32* %7, align 4, !dbg !4900
  %9 = icmp eq i32 %8, 0, !dbg !4902
  br i1 %9, label %13, label %10, !dbg !4903

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4904
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !4904
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !4895, metadata !DIExpression()), !dbg !4896
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #22, !dbg !4905
  br label %13, !dbg !4906

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !4896
  ret i32 %14, !dbg !4907
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !4908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4910, metadata !DIExpression()), !dbg !4912
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4913
  br i1 %2, label %3, label %10, !dbg !4915

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4916
  %5 = load volatile i32, i32* %4, align 4, !dbg !4916
  %6 = icmp eq i32 %5, 0, !dbg !4918
  br i1 %6, label %10, label %7, !dbg !4919

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4920
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !4920
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !4911, metadata !DIExpression()), !dbg !4912
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #22, !dbg !4921
  br label %10, !dbg !4922

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !4912
  ret i32 %11, !dbg !4923
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4924 {
  %3 = alloca %struct.vdma_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4930, metadata !DIExpression()), !dbg !4942
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !4931, metadata !DIExpression()), !dbg !4942
  %4 = bitcast %struct.vdma_config_t* %3 to i8*, !dbg !4943
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #23, !dbg !4943
  call void @llvm.dbg.declare(metadata %struct.vdma_config_t* %3, metadata !4933, metadata !DIExpression()), !dbg !4944
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4945
  br i1 %5, label %6, label %101, !dbg !4947

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !4948
  %8 = load i8*, i8** %7, align 4, !dbg !4948
  %9 = icmp eq i8* %8, null, !dbg !4950
  br i1 %9, label %101, label %10, !dbg !4951

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !4952
  %12 = load i8*, i8** %11, align 4, !dbg !4952
  %13 = icmp eq i8* %12, null, !dbg !4953
  br i1 %13, label %101, label %14, !dbg !4954

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !4955
  %16 = load i32, i32* %15, align 4, !dbg !4955
  %17 = icmp ugt i32 %16, 131071, !dbg !4957
  br i1 %17, label %101, label %18, !dbg !4958

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !4959
  %20 = load i32, i32* %19, align 4, !dbg !4959
  %21 = icmp ugt i32 %20, 131071, !dbg !4960
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !4961
  br i1 %23, label %101, label %24, !dbg !4961

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !4962
  %26 = load i32, i32* %25, align 4, !dbg !4962
  %27 = icmp ugt i32 %26, 131071, !dbg !4964
  br i1 %27, label %101, label %28, !dbg !4965

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !4966
  %30 = load i32, i32* %29, align 4, !dbg !4966
  %31 = icmp ugt i32 %30, 131071, !dbg !4967
  br i1 %31, label %101, label %32, !dbg !4968

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !4969
  %34 = load i32, i32* %33, align 4, !dbg !4969
  %35 = icmp ugt i32 %34, 131071, !dbg !4970
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !4971
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !4971
  br i1 %39, label %101, label %40, !dbg !4971

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4972
  %42 = load volatile i32, i32* %41, align 4, !dbg !4972
  %43 = icmp eq i32 %42, 1, !dbg !4974
  br i1 %43, label %44, label %101, !dbg !4975

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #22, !dbg !4976
  call void @llvm.dbg.value(metadata i32 %45, metadata !4939, metadata !DIExpression()), !dbg !4942
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #22, !dbg !4977
  call void @llvm.dbg.value(metadata i32 %46, metadata !4940, metadata !DIExpression()), !dbg !4942
  %47 = tail call i32 @vdma_init(i32 noundef %45) #22, !dbg !4978
  call void @llvm.dbg.value(metadata i32 %47, metadata !4941, metadata !DIExpression()), !dbg !4942
  %48 = icmp eq i32 %47, 0, !dbg !4979
  br i1 %48, label %50, label %49, !dbg !4981

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4982
  unreachable, !dbg !4982

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !4984
  %52 = ptrtoint i8* %51 to i32, !dbg !4985
  %53 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 0, i32 0, !dbg !4986
  store i32 %52, i32* %53, align 4, !dbg !4987
  %54 = load i32, i32* %15, align 4, !dbg !4988
  %55 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 0, i32 1, !dbg !4989
  store i32 %54, i32* %55, align 4, !dbg !4990
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.vdma_config_t* noundef nonnull %3) #22, !dbg !4991
  call void @llvm.dbg.value(metadata i32 %56, metadata !4941, metadata !DIExpression()), !dbg !4942
  %57 = icmp eq i32 %56, 0, !dbg !4992
  br i1 %57, label %59, label %58, !dbg !4994

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !4995
  unreachable, !dbg !4995

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !4997
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #22, !dbg !4998
  call void @llvm.dbg.value(metadata i32 %61, metadata !4941, metadata !DIExpression()), !dbg !4942
  %62 = icmp eq i32 %61, 0, !dbg !4999
  br i1 %62, label %64, label %63, !dbg !5001

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !5002
  unreachable, !dbg !5002

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #22, !dbg !5004
  call void @llvm.dbg.value(metadata i32 %65, metadata !4941, metadata !DIExpression()), !dbg !4942
  %66 = icmp eq i32 %65, 0, !dbg !5005
  br i1 %66, label %68, label %67, !dbg !5007

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !5008
  unreachable, !dbg !5008

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5010
  %70 = ptrtoint i8* %69 to i32, !dbg !5011
  store i32 %70, i32* %53, align 4, !dbg !5012
  %71 = load i32, i32* %25, align 4, !dbg !5013
  store i32 %71, i32* %55, align 4, !dbg !5014
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.vdma_config_t* noundef nonnull %3) #22, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %72, metadata !4941, metadata !DIExpression()), !dbg !4942
  %73 = icmp eq i32 %72, 0, !dbg !5016
  br i1 %73, label %75, label %74, !dbg !5018

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !5019
  unreachable, !dbg !5019

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5021
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #22, !dbg !5022
  call void @llvm.dbg.value(metadata i32 %77, metadata !4941, metadata !DIExpression()), !dbg !4942
  %78 = icmp eq i32 %77, 0, !dbg !5023
  br i1 %78, label %80, label %79, !dbg !5025

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !5026
  unreachable, !dbg !5026

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5028
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #22, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %82, metadata !4941, metadata !DIExpression()), !dbg !4942
  %83 = icmp eq i32 %82, 0, !dbg !5030
  br i1 %83, label %85, label %84, !dbg !5032

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #24, !dbg !5033
  unreachable, !dbg !5033

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #22, !dbg !5035
  call void @llvm.dbg.value(metadata i32 %86, metadata !4932, metadata !DIExpression()), !dbg !4942
  %87 = load i8*, i8** %7, align 4, !dbg !5036
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5037
  store i8* %87, i8** %88, align 4, !dbg !5038
  %89 = load i32, i32* %15, align 4, !dbg !5039
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5040
  store i32 %89, i32* %90, align 4, !dbg !5041
  %91 = load i32, i32* %19, align 4, !dbg !5042
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5043
  store i32 %91, i32* %92, align 4, !dbg !5044
  %93 = load i32, i32* %33, align 4, !dbg !5045
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5046
  store i32 %93, i32* %94, align 4, !dbg !5047
  %95 = load i8*, i8** %11, align 4, !dbg !5048
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5049
  store i8* %95, i8** %96, align 4, !dbg !5050
  %97 = load i32, i32* %25, align 4, !dbg !5051
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5052
  store i32 %97, i32* %98, align 4, !dbg !5053
  %99 = load i32, i32* %29, align 4, !dbg !5054
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5055
  store i32 %99, i32* %100, align 4, !dbg !5056
  call void @restore_interrupt_mask(i32 noundef %86) #22, !dbg !5057
  br label %101, !dbg !5058

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !4942
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #23, !dbg !5059
  ret i32 %102, !dbg !5059
}

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.vdma_config_t* noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5060 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5119, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i32 %1, metadata !5120, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5129, metadata !DIExpression()), !dbg !5135
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5136
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #23, !dbg !5136
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5133, metadata !DIExpression()), !dbg !5137
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5137
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5137
  store i32 1, i32* %5, align 4, !dbg !5137
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5137
  store i32 1, i32* %6, align 4, !dbg !5137
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5137
  store i32 1, i32* %7, align 4, !dbg !5137
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5137
  store i32 1, i32* %8, align 4, !dbg !5137
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5137
  store i32 1, i32* %9, align 4, !dbg !5137
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5138
  store volatile i32 0, i32* %10, align 4, !dbg !5139
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5140
  store volatile i32 0, i32* %11, align 4, !dbg !5141
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5142
  store volatile i32 0, i32* %12, align 4, !dbg !5143
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #22, !dbg !5144
  br i1 %13, label %14, label %17, !dbg !5146

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #22, !dbg !5147
  %16 = mul i32 %15, 1000, !dbg !5149
  call void @llvm.dbg.value(metadata i32 %16, metadata !5121, metadata !DIExpression()), !dbg !5134
  br label %17, !dbg !5150

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5151
  call void @llvm.dbg.value(metadata i32 %18, metadata !5121, metadata !DIExpression()), !dbg !5134
  %19 = shl i32 %1, 8, !dbg !5152
  %20 = udiv i32 %18, %19, !dbg !5153
  call void @llvm.dbg.value(metadata i32 %20, metadata !5122, metadata !DIExpression()), !dbg !5134
  %21 = mul i32 %18, 10, !dbg !5154
  %22 = udiv i32 %21, %19, !dbg !5155
  %23 = urem i32 %22, 10, !dbg !5156
  call void @llvm.dbg.value(metadata i32 %23, metadata !5123, metadata !DIExpression()), !dbg !5134
  %24 = icmp ne i32 %23, 0, !dbg !5157
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5159
  %27 = zext i1 %26 to i32, !dbg !5159
  %28 = add i32 %20, %27, !dbg !5159
  call void @llvm.dbg.value(metadata i32 %28, metadata !5122, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i32 %28, metadata !5125, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i32 undef, metadata !5126, metadata !DIExpression()), !dbg !5134
  br label %29, !dbg !5160

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5134
  %31 = mul i32 %30, %1, !dbg !5134
  %32 = udiv i32 %18, %31, !dbg !5134
  call void @llvm.dbg.value(metadata i32 %32, metadata !5126, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i32 %30, metadata !5125, metadata !DIExpression()), !dbg !5134
  %33 = icmp ugt i32 %32, 256, !dbg !5161
  %34 = add i32 %30, 1, !dbg !5162
  call void @llvm.dbg.value(metadata i32 %34, metadata !5125, metadata !DIExpression()), !dbg !5134
  call void @llvm.dbg.value(metadata i32 undef, metadata !5126, metadata !DIExpression()), !dbg !5134
  br i1 %33, label %29, label %35, !dbg !5160, !llvm.loop !5164

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5166
  %37 = urem i32 %36, 10, !dbg !5167
  call void @llvm.dbg.value(metadata i32 %37, metadata !5124, metadata !DIExpression()), !dbg !5134
  %38 = add nsw i32 %32, -1, !dbg !5168
  call void @llvm.dbg.value(metadata i32 %38, metadata !5126, metadata !DIExpression()), !dbg !5134
  %39 = add nsw i32 %32, -2, !dbg !5169
  %40 = lshr i32 %39, 1, !dbg !5170
  call void @llvm.dbg.value(metadata i32 %40, metadata !5127, metadata !DIExpression()), !dbg !5134
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5171
  store volatile i32 3, i32* %41, align 4, !dbg !5172
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5173
  %43 = load volatile i32, i32* %42, align 4, !dbg !5173
  call void @llvm.dbg.value(metadata i32 %43, metadata !5128, metadata !DIExpression()), !dbg !5134
  %44 = or i32 %43, 128, !dbg !5174
  store volatile i32 %44, i32* %42, align 4, !dbg !5175
  %45 = and i32 %30, 255, !dbg !5176
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5177
  store volatile i32 %45, i32* %46, align 4, !dbg !5178
  %47 = lshr i32 %30, 8, !dbg !5179
  %48 = and i32 %47, 255, !dbg !5180
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5181
  store volatile i32 %48, i32* %49, align 4, !dbg !5182
  store volatile i32 %43, i32* %42, align 4, !dbg !5183
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5184
  store volatile i32 %38, i32* %50, align 4, !dbg !5185
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5186
  store volatile i32 %40, i32* %51, align 4, !dbg !5187
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5188
  %53 = load i32, i32* %52, align 4, !dbg !5188
  store volatile i32 %53, i32* %11, align 4, !dbg !5189
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5190
  %55 = load i32, i32* %54, align 4, !dbg !5190
  store volatile i32 %55, i32* %12, align 4, !dbg !5191
  %56 = icmp ugt i32 %1, 2999999, !dbg !5192
  br i1 %56, label %57, label %59, !dbg !5194

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5195
  store volatile i32 18, i32* %58, align 4, !dbg !5197
  br label %59, !dbg !5198

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #23, !dbg !5199
  ret void, !dbg !5199
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #10 !dbg !5200 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5204, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.value(metadata i32 %1, metadata !5205, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.value(metadata i32 %2, metadata !5206, metadata !DIExpression()), !dbg !5209
  call void @llvm.dbg.value(metadata i32 %3, metadata !5207, metadata !DIExpression()), !dbg !5209
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5210
  %6 = load volatile i32, i32* %5, align 4, !dbg !5210
  call void @llvm.dbg.value(metadata i32 %6, metadata !5208, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5209
  store volatile i32 128, i32* %5, align 4, !dbg !5211
  %7 = trunc i32 %6 to i16, !dbg !5212
  %8 = and i16 %7, -4, !dbg !5212
  call void @llvm.dbg.value(metadata i16 %7, metadata !5208, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5209
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5213

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5214
  call void @llvm.dbg.value(metadata i16 %10, metadata !5208, metadata !DIExpression()), !dbg !5209
  br label %15, !dbg !5216

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5217
  call void @llvm.dbg.value(metadata i16 %12, metadata !5208, metadata !DIExpression()), !dbg !5209
  br label %15, !dbg !5218

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5219
  call void @llvm.dbg.value(metadata i16 %14, metadata !5208, metadata !DIExpression()), !dbg !5209
  br label %15, !dbg !5220

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5209
  call void @llvm.dbg.value(metadata i16 %16, metadata !5208, metadata !DIExpression()), !dbg !5209
  %17 = and i16 %16, -61, !dbg !5221
  call void @llvm.dbg.value(metadata i16 %16, metadata !5208, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5209
  %18 = icmp eq i32 %2, 1, !dbg !5222
  %19 = select i1 %18, i16 4, i16 0, !dbg !5222
  %20 = or i16 %17, %19, !dbg !5222
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5208, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5209
  call void @llvm.dbg.value(metadata i16 %20, metadata !5208, metadata !DIExpression()), !dbg !5209
  %21 = icmp eq i32 %3, 2, !dbg !5223
  %22 = or i16 %20, 16, !dbg !5223
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5223
  call void @llvm.dbg.value(metadata i16 %23, metadata !5208, metadata !DIExpression()), !dbg !5209
  %24 = zext i16 %23 to i32, !dbg !5224
  store volatile i32 %24, i32* %5, align 4, !dbg !5225
  ret void, !dbg !5226
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #10 !dbg !5227 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5231, metadata !DIExpression()), !dbg !5234
  call void @llvm.dbg.value(metadata i8 %1, metadata !5232, metadata !DIExpression()), !dbg !5234
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5235

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5236
  call void @llvm.dbg.value(metadata i32 %5, metadata !5233, metadata !DIExpression()), !dbg !5234
  %6 = and i32 %5, 32, !dbg !5238
  %7 = icmp eq i32 %6, 0, !dbg !5238
  br i1 %7, label %4, label %8, !dbg !5240, !llvm.loop !5241

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5243
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5245
  store volatile i32 %9, i32* %10, align 4, !dbg !5246
  ret void, !dbg !5247
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5248 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5252, metadata !DIExpression()), !dbg !5255
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5256

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5257
  call void @llvm.dbg.value(metadata i32 %4, metadata !5253, metadata !DIExpression()), !dbg !5255
  %5 = and i32 %4, 1, !dbg !5259
  %6 = icmp eq i32 %5, 0, !dbg !5259
  br i1 %6, label %3, label %7, !dbg !5261, !llvm.loop !5262

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5264
  %9 = load volatile i32, i32* %8, align 4, !dbg !5264
  %10 = trunc i32 %9 to i8, !dbg !5266
  call void @llvm.dbg.value(metadata i8 %10, metadata !5254, metadata !DIExpression()), !dbg !5255
  ret i8 %10, !dbg !5267
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5268 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5272, metadata !DIExpression()), !dbg !5275
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5276
  %3 = load volatile i32, i32* %2, align 4, !dbg !5276
  call void @llvm.dbg.value(metadata i32 %3, metadata !5273, metadata !DIExpression()), !dbg !5275
  %4 = and i32 %3, 1, !dbg !5277
  %5 = icmp eq i32 %4, 0, !dbg !5277
  br i1 %5, label %9, label %6, !dbg !5279

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5280
  %8 = load volatile i32, i32* %7, align 4, !dbg !5280
  call void @llvm.dbg.value(metadata i32 %8, metadata !5274, metadata !DIExpression()), !dbg !5275
  br label %9, !dbg !5282

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !5283
  call void @llvm.dbg.value(metadata i32 %10, metadata !5274, metadata !DIExpression()), !dbg !5275
  ret i32 %10, !dbg !5284
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5285 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5289, metadata !DIExpression()), !dbg !5292
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5293
  %3 = load volatile i32, i32* %2, align 4, !dbg !5293
  call void @llvm.dbg.value(metadata i32 %3, metadata !5291, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5292
  store volatile i32 191, i32* %2, align 4, !dbg !5294
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5295
  %5 = load volatile i32, i32* %4, align 4, !dbg !5295
  call void @llvm.dbg.value(metadata i32 %5, metadata !5290, metadata !DIExpression()), !dbg !5292
  %6 = and i32 %5, 65343, !dbg !5296
  %7 = or i32 %6, 192, !dbg !5296
  call void @llvm.dbg.value(metadata i32 %5, metadata !5290, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !5292
  store volatile i32 %7, i32* %4, align 4, !dbg !5297
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5298
  store volatile i32 0, i32* %8, align 4, !dbg !5299
  store volatile i32 0, i32* %2, align 4, !dbg !5300
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5301
  store volatile i32 2, i32* %9, align 4, !dbg !5302
  %10 = and i32 %3, 65535, !dbg !5303
  store volatile i32 %10, i32* %2, align 4, !dbg !5304
  ret void, !dbg !5305
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #10 !dbg !5306 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5310, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.value(metadata i8 %1, metadata !5311, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.value(metadata i8 %2, metadata !5312, metadata !DIExpression()), !dbg !5316
  call void @llvm.dbg.value(metadata i8 %3, metadata !5313, metadata !DIExpression()), !dbg !5316
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5317
  %6 = load volatile i32, i32* %5, align 4, !dbg !5317
  call void @llvm.dbg.value(metadata i32 %6, metadata !5315, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5316
  store volatile i32 191, i32* %5, align 4, !dbg !5318
  %7 = zext i8 %1 to i32, !dbg !5319
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5320
  store volatile i32 %7, i32* %8, align 4, !dbg !5321
  %9 = zext i8 %2 to i32, !dbg !5322
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5323
  store volatile i32 %9, i32* %10, align 4, !dbg !5324
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5325
  %12 = load volatile i32, i32* %11, align 4, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %12, metadata !5314, metadata !DIExpression()), !dbg !5316
  %13 = and i32 %12, 65509, !dbg !5326
  %14 = or i32 %13, 26, !dbg !5326
  call void @llvm.dbg.value(metadata i32 %12, metadata !5314, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !5316
  store volatile i32 %14, i32* %11, align 4, !dbg !5327
  %15 = zext i8 %3 to i32, !dbg !5328
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5329
  store volatile i32 %15, i32* %16, align 4, !dbg !5330
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5331
  store volatile i32 1, i32* %17, align 4, !dbg !5332
  %18 = and i32 %6, 65535, !dbg !5333
  store volatile i32 %18, i32* %5, align 4, !dbg !5334
  ret void, !dbg !5335
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5336 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5338, metadata !DIExpression()), !dbg !5340
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5341
  %3 = load volatile i32, i32* %2, align 4, !dbg !5341
  call void @llvm.dbg.value(metadata i32 %3, metadata !5339, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5340
  store volatile i32 191, i32* %2, align 4, !dbg !5342
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5343
  store volatile i32 0, i32* %4, align 4, !dbg !5344
  store volatile i32 0, i32* %2, align 4, !dbg !5345
  %5 = and i32 %3, 65535, !dbg !5346
  store volatile i32 %5, i32* %2, align 4, !dbg !5347
  ret void, !dbg !5348
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5349 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5351, metadata !DIExpression()), !dbg !5354
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5355
  %3 = load volatile i32, i32* %2, align 4, !dbg !5355
  call void @llvm.dbg.value(metadata i32 %3, metadata !5353, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5354
  store volatile i32 191, i32* %2, align 4, !dbg !5356
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5357
  %5 = load volatile i32, i32* %4, align 4, !dbg !5357
  call void @llvm.dbg.value(metadata i32 %5, metadata !5352, metadata !DIExpression()), !dbg !5354
  %6 = and i32 %5, 65519, !dbg !5358
  %7 = or i32 %6, 16, !dbg !5358
  call void @llvm.dbg.value(metadata i32 %5, metadata !5352, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !5354
  store volatile i32 %7, i32* %4, align 4, !dbg !5359
  store volatile i32 0, i32* %2, align 4, !dbg !5360
  store volatile i32 135, i32* %4, align 4, !dbg !5361
  %8 = and i32 %3, 65535, !dbg !5362
  store volatile i32 %8, i32* %2, align 4, !dbg !5363
  ret void, !dbg !5364
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5365 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5367, metadata !DIExpression()), !dbg !5370
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5371
  %3 = load volatile i32, i32* %2, align 4, !dbg !5371
  call void @llvm.dbg.value(metadata i32 %3, metadata !5369, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5370
  %4 = load volatile i32, i32* %2, align 4, !dbg !5372
  %5 = and i32 %4, -129, !dbg !5372
  store volatile i32 %5, i32* %2, align 4, !dbg !5372
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5373
  %7 = load volatile i32, i32* %6, align 4, !dbg !5373
  call void @llvm.dbg.value(metadata i32 %7, metadata !5368, metadata !DIExpression()), !dbg !5370
  %8 = and i32 %7, 65530, !dbg !5374
  %9 = or i32 %8, 5, !dbg !5374
  call void @llvm.dbg.value(metadata i32 %7, metadata !5368, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !5370
  store volatile i32 %9, i32* %6, align 4, !dbg !5375
  %10 = and i32 %3, 65535, !dbg !5376
  %11 = load volatile i32, i32* %2, align 4, !dbg !5377
  %12 = and i32 %10, %11, !dbg !5377
  store volatile i32 %12, i32* %2, align 4, !dbg !5377
  ret void, !dbg !5378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5379 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5383, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i32 %1, metadata !5384, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.value(metadata i16 145, metadata !5385, metadata !DIExpression()), !dbg !5386
  %3 = icmp eq i32 %1, 0, !dbg !5387
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !5385, metadata !DIExpression()), !dbg !5386
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5389
  store volatile i32 %4, i32* %5, align 4, !dbg !5390
  ret void, !dbg !5391
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5392 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5397, metadata !DIExpression()), !dbg !5401
  call void @llvm.dbg.value(metadata i32 0, metadata !5400, metadata !DIExpression()), !dbg !5401
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5402
  %3 = load volatile i32, i32* %2, align 4, !dbg !5402
  call void @llvm.dbg.value(metadata i32 %3, metadata !5398, metadata !DIExpression()), !dbg !5401
  %4 = and i32 %3, 1, !dbg !5403
  %5 = icmp eq i32 %4, 0, !dbg !5403
  br i1 %5, label %6, label %16, !dbg !5405

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !5406
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !5407

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !5400, metadata !DIExpression()), !dbg !5401
  br label %16, !dbg !5408

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5410
  %11 = load volatile i32, i32* %10, align 4, !dbg !5410
  call void @llvm.dbg.value(metadata i32 %11, metadata !5399, metadata !DIExpression()), !dbg !5401
  %12 = and i32 %11, 16, !dbg !5411
  %13 = icmp eq i32 %12, 0, !dbg !5411
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !5400, metadata !DIExpression()), !dbg !5401
  br label %16, !dbg !5413

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !5401
  ret i32 %17, !dbg !5414
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5415 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5419, metadata !DIExpression()), !dbg !5422
  call void @llvm.dbg.value(metadata i32 0, metadata !5421, metadata !DIExpression()), !dbg !5422
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5423
  %3 = load volatile i32, i32* %2, align 4, !dbg !5423
  call void @llvm.dbg.value(metadata i32 %3, metadata !5420, metadata !DIExpression()), !dbg !5422
  %4 = and i32 %3, 14, !dbg !5424
  %5 = icmp eq i32 %4, 0, !dbg !5424
  %6 = sext i1 %5 to i32, !dbg !5426
  call void @llvm.dbg.value(metadata i32 %6, metadata !5421, metadata !DIExpression()), !dbg !5422
  ret i32 %6, !dbg !5427
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !5428 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5430, metadata !DIExpression()), !dbg !5432
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5433
  %3 = load volatile i32, i32* %2, align 4, !dbg !5433
  call void @llvm.dbg.value(metadata i32 %3, metadata !5431, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5432
  call void @llvm.dbg.value(metadata i32 %3, metadata !5431, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5432
  ret void, !dbg !5434
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5435 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5437, metadata !DIExpression()), !dbg !5438
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5439
  store volatile i32 191, i32* %2, align 4, !dbg !5440
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5441
  store volatile i32 16, i32* %3, align 4, !dbg !5442
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5443
  store volatile i32 0, i32* %4, align 4, !dbg !5444
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5445
  store volatile i32 0, i32* %5, align 4, !dbg !5446
  store volatile i32 128, i32* %2, align 4, !dbg !5447
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5448
  store volatile i32 0, i32* %6, align 4, !dbg !5449
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5450
  store volatile i32 0, i32* %7, align 4, !dbg !5451
  store volatile i32 0, i32* %2, align 4, !dbg !5452
  store volatile i32 0, i32* %7, align 4, !dbg !5453
  store volatile i32 0, i32* %3, align 4, !dbg !5454
  store volatile i32 191, i32* %2, align 4, !dbg !5455
  store volatile i32 0, i32* %3, align 4, !dbg !5456
  store volatile i32 0, i32* %2, align 4, !dbg !5457
  store volatile i32 0, i32* %4, align 4, !dbg !5458
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !5459
  store volatile i32 0, i32* %8, align 4, !dbg !5460
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !5461
  store volatile i32 0, i32* %9, align 4, !dbg !5462
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5463
  store volatile i32 0, i32* %10, align 4, !dbg !5464
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5465
  store volatile i32 0, i32* %11, align 4, !dbg !5466
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5467
  store volatile i32 0, i32* %12, align 4, !dbg !5468
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5469
  store volatile i32 0, i32* %13, align 4, !dbg !5470
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !5471
  store volatile i32 0, i32* %14, align 4, !dbg !5472
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5473
  store volatile i32 0, i32* %15, align 4, !dbg !5474
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5475
  store volatile i32 0, i32* %16, align 4, !dbg !5476
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5477
  store volatile i32 0, i32* %17, align 4, !dbg !5478
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !5479
  store volatile i32 0, i32* %18, align 4, !dbg !5480
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5481
  store volatile i32 0, i32* %19, align 4, !dbg !5482
  store volatile i32 0, i32* %13, align 4, !dbg !5483
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5484
  store volatile i32 0, i32* %20, align 4, !dbg !5485
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5486
  store volatile i32 0, i32* %21, align 4, !dbg !5487
  ret void, !dbg !5488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5489 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5491, metadata !DIExpression()), !dbg !5492
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5493

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5494
  %5 = and i32 %4, 64, !dbg !5495
  %6 = icmp eq i32 %5, 0, !dbg !5496
  br i1 %6, label %3, label %7, !dbg !5493, !llvm.loop !5497

7:                                                ; preds = %3
  ret void, !dbg !5499
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !5500 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5504, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.value(metadata i32 %1, metadata !5505, metadata !DIExpression()), !dbg !5507
  call void @llvm.dbg.value(metadata i32 15, metadata !5506, metadata !DIExpression()), !dbg !5507
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !5508

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !5509
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !5512
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !5514
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !5516
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !5507
  call void @llvm.dbg.value(metadata i32 %16, metadata !5506, metadata !DIExpression()), !dbg !5507
  ret i32 %16, !dbg !5518
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #4 !dbg !5519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5529, metadata !DIExpression()), !dbg !5531
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !5530, metadata !DIExpression()), !dbg !5531
  %3 = add i32 %0, -8, !dbg !5532
  %4 = icmp ult i32 %3, 8, !dbg !5532
  br i1 %4, label %5, label %12, !dbg !5532

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !5532
  %7 = load i8, i8* %6, align 1, !dbg !5532
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !5532
  %9 = load i32, i32* %8, align 4, !dbg !5532
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !5533
  store i8 %7, i8* %10, align 4, !dbg !5533
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !5533
  store i32 %9, i32* %11, align 4, !dbg !5533
  br label %12, !dbg !5535

12:                                               ; preds = %2, %5
  ret void, !dbg !5535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #10 !dbg !5536 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5540, metadata !DIExpression()), !dbg !5541
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !5542
  store volatile i32 3, i32* %2, align 4, !dbg !5543
  ret void, !dbg !5544
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !5545 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5547, metadata !DIExpression()), !dbg !5551
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !5550, metadata !DIExpression()), !dbg !5551
  %2 = add i32 %0, -30, !dbg !5552
  %3 = icmp ult i32 %2, 3, !dbg !5552
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !5552
  call void @llvm.dbg.value(metadata i32 %5, metadata !5548, metadata !DIExpression()), !dbg !5551
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !5553
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !5553
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !5550, metadata !DIExpression()), !dbg !5551
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #22, !dbg !5554
  call void @llvm.dbg.value(metadata i32 %8, metadata !5549, metadata !DIExpression()), !dbg !5551
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !5555

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #22, !dbg !5556
  br label %13, !dbg !5558

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #22, !dbg !5559
  br label %13, !dbg !5560

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #22, !dbg !5561
  br label %13, !dbg !5562

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.79, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.80, i32 0, i32 0)) #24, !dbg !5563
  unreachable, !dbg !5563

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !5564
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #10 !dbg !786 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !5565
  br i1 %1, label %9, label %2, !dbg !5567

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !879, metadata !DIExpression()), !dbg !5568
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !5569
  %5 = load i32, i32* %4, align 4, !dbg !5569
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !5574
  %6 = add nuw nsw i32 %3, 1, !dbg !5575
  call void @llvm.dbg.value(metadata i32 %6, metadata !879, metadata !DIExpression()), !dbg !5568
  %7 = icmp eq i32 %6, 64, !dbg !5576
  br i1 %7, label %8, label %2, !dbg !5577, !llvm.loop !5578

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !5580
  br label %9, !dbg !5581

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !5582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #10 !dbg !5583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5587, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.value(metadata i32 %1, metadata !5588, metadata !DIExpression()), !dbg !5589
  %3 = trunc i32 %1 to i8, !dbg !5590
  %4 = shl i8 %3, 2, !dbg !5590
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5593
  store volatile i8 %4, i8* %5, align 1, !dbg !5594
  ret void, !dbg !5595
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5596 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5600, metadata !DIExpression()), !dbg !5602
  call void @llvm.dbg.value(metadata i32 -1, metadata !5601, metadata !DIExpression()), !dbg !5602
  %2 = icmp ugt i32 %0, 63, !dbg !5603
  br i1 %2, label %4, label %3, !dbg !5603

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !5605
  call void @llvm.dbg.value(metadata i32 0, metadata !5601, metadata !DIExpression()), !dbg !5602
  br label %4, !dbg !5607

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5602
  ret i32 %5, !dbg !5608
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5609 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5613, metadata !DIExpression()), !dbg !5614
  %2 = and i32 %0, 31, !dbg !5615
  %3 = shl nuw i32 1, %2, !dbg !5616
  %4 = lshr i32 %0, 5, !dbg !5617
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !5618
  store volatile i32 %3, i32* %5, align 4, !dbg !5619
  ret void, !dbg !5620
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5621 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5623, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.value(metadata i32 -1, metadata !5624, metadata !DIExpression()), !dbg !5625
  %2 = icmp ugt i32 %0, 63, !dbg !5626
  br i1 %2, label %4, label %3, !dbg !5626

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !5628
  call void @llvm.dbg.value(metadata i32 0, metadata !5624, metadata !DIExpression()), !dbg !5625
  br label %4, !dbg !5630

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5625
  ret i32 %5, !dbg !5631
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5632 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5634, metadata !DIExpression()), !dbg !5635
  %2 = and i32 %0, 31, !dbg !5636
  %3 = shl nuw i32 1, %2, !dbg !5637
  %4 = lshr i32 %0, 5, !dbg !5638
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !5639
  store volatile i32 %3, i32* %5, align 4, !dbg !5640
  ret void, !dbg !5641
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #9 !dbg !5642 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5646, metadata !DIExpression()), !dbg !5648
  call void @llvm.dbg.value(metadata i32 255, metadata !5647, metadata !DIExpression()), !dbg !5648
  %2 = icmp ugt i32 %0, 63, !dbg !5649
  br i1 %2, label %5, label %3, !dbg !5649

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !5651
  call void @llvm.dbg.value(metadata i32 %4, metadata !5647, metadata !DIExpression()), !dbg !5648
  br label %5, !dbg !5653

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !5648
  ret i32 %6, !dbg !5654
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #9 !dbg !5655 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5659, metadata !DIExpression()), !dbg !5660
  %2 = lshr i32 %0, 5, !dbg !5661
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !5662
  %4 = load volatile i32, i32* %3, align 4, !dbg !5662
  %5 = and i32 %0, 31, !dbg !5663
  %6 = lshr i32 %4, %5, !dbg !5664
  %7 = and i32 %6, 1, !dbg !5664
  ret i32 %7, !dbg !5665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5666 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5668, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.value(metadata i32 -1, metadata !5669, metadata !DIExpression()), !dbg !5670
  %2 = icmp ugt i32 %0, 63, !dbg !5671
  br i1 %2, label %4, label %3, !dbg !5671

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !5673
  call void @llvm.dbg.value(metadata i32 0, metadata !5669, metadata !DIExpression()), !dbg !5670
  br label %4, !dbg !5675

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5670
  ret i32 %5, !dbg !5676
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5679, metadata !DIExpression()), !dbg !5680
  %2 = and i32 %0, 31, !dbg !5681
  %3 = shl nuw i32 1, %2, !dbg !5682
  %4 = lshr i32 %0, 5, !dbg !5683
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !5684
  store volatile i32 %3, i32* %5, align 4, !dbg !5685
  ret void, !dbg !5686
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #10 !dbg !5687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5689, metadata !DIExpression()), !dbg !5691
  call void @llvm.dbg.value(metadata i32 -1, metadata !5690, metadata !DIExpression()), !dbg !5691
  %2 = icmp ugt i32 %0, 63, !dbg !5692
  br i1 %2, label %4, label %3, !dbg !5692

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !5694
  call void @llvm.dbg.value(metadata i32 0, metadata !5690, metadata !DIExpression()), !dbg !5691
  br label %4, !dbg !5696

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !5691
  ret i32 %5, !dbg !5697
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #10 !dbg !5698 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5700, metadata !DIExpression()), !dbg !5701
  %2 = and i32 %0, 31, !dbg !5702
  %3 = shl nuw i32 1, %2, !dbg !5703
  %4 = lshr i32 %0, 5, !dbg !5704
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !5705
  store volatile i32 %3, i32* %5, align 4, !dbg !5706
  ret void, !dbg !5707
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !5708 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5712, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i32 %1, metadata !5713, metadata !DIExpression()), !dbg !5715
  call void @llvm.dbg.value(metadata i32 -1, metadata !5714, metadata !DIExpression()), !dbg !5715
  %3 = icmp ugt i32 %0, 63, !dbg !5716
  br i1 %3, label %5, label %4, !dbg !5716

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !5718
  call void @llvm.dbg.value(metadata i32 0, metadata !5714, metadata !DIExpression()), !dbg !5715
  br label %5, !dbg !5720

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !5715
  ret i32 %6, !dbg !5721
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #9 !dbg !5722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5724, metadata !DIExpression()), !dbg !5726
  call void @llvm.dbg.value(metadata i32 68, metadata !5725, metadata !DIExpression()), !dbg !5726
  %2 = icmp ugt i32 %0, 63, !dbg !5727
  br i1 %2, label %5, label %3, !dbg !5727

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !5729
  call void @llvm.dbg.value(metadata i32 %4, metadata !5725, metadata !DIExpression()), !dbg !5726
  br label %5, !dbg !5731

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !5726
  ret i32 %6, !dbg !5732
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #9 !dbg !5733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5735, metadata !DIExpression()), !dbg !5736
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !5737
  %3 = load volatile i8, i8* %2, align 1, !dbg !5737
  %4 = lshr i8 %3, 2, !dbg !5740
  %5 = zext i8 %4 to i32, !dbg !5740
  ret i32 %5, !dbg !5741
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !5742 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !5744, metadata !DIExpression()), !dbg !5746
  tail call void @Flash_ReturnReady() #22, !dbg !5747
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !5748
  call void @llvm.dbg.value(metadata i32 %1, metadata !5745, metadata !DIExpression()), !dbg !5746
  %2 = icmp ugt i32 %1, 63, !dbg !5749
  br i1 %2, label %12, label %3, !dbg !5749

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !5751
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !5751
  %6 = icmp eq void (i32)* %5, null, !dbg !5753
  br i1 %6, label %7, label %8, !dbg !5754

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !5744, metadata !DIExpression()), !dbg !5746
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.85, i32 0, i32 0)) #22, !dbg !5755
  br label %12, !dbg !5757

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !5758
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !5760
  store i32 %9, i32* %10, align 4, !dbg !5761
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !5762
  tail call void %11(i32 noundef %1) #22, !dbg !5763
  call void @llvm.dbg.value(metadata i32 0, metadata !5744, metadata !DIExpression()), !dbg !5746
  br label %12, !dbg !5764

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !5746
  ret i32 %13, !dbg !5765
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #9 !dbg !5766 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5769
  %2 = and i32 %1, 511, !dbg !5770
  call void @llvm.dbg.value(metadata i32 %2, metadata !5768, metadata !DIExpression()), !dbg !5771
  %3 = add nsw i32 %2, -16, !dbg !5772
  ret i32 %3, !dbg !5773
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #9 !dbg !5774 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5775
  %2 = lshr i32 %1, 22, !dbg !5776
  %3 = and i32 %2, 1, !dbg !5776
  ret i32 %3, !dbg !5777
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !5778 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5783, metadata !DIExpression()), !dbg !5786
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !5784, metadata !DIExpression()), !dbg !5786
  %3 = icmp ugt i32 %0, 63, !dbg !5787
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !5787
  br i1 %5, label %10, label %6, !dbg !5787

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !5789
  call void @llvm.dbg.value(metadata i32 %7, metadata !5785, metadata !DIExpression()), !dbg !5786
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !5790
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !5791
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !5792
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !5793
  store i32 0, i32* %9, align 4, !dbg !5794
  tail call void @restore_interrupt_mask(i32 noundef %7) #22, !dbg !5795
  br label %10, !dbg !5796

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !5786
  ret i32 %11, !dbg !5797
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !5798 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !5802, metadata !DIExpression()), !dbg !5803
  %2 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !5804
  store i32 %2, i32* %0, align 4, !dbg !5805
  ret i32 0, !dbg !5806
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !5807 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5811, metadata !DIExpression()), !dbg !5812
  tail call void @restore_interrupt_mask(i32 noundef %0) #22, !dbg !5813
  ret i32 0, !dbg !5814
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !5815 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #23, !dbg !5819, !srcloc !5825
  call void @llvm.dbg.value(metadata i32 %1, metadata !5823, metadata !DIExpression()) #23, !dbg !5826
  call void @llvm.dbg.value(metadata i32 %1, metadata !5817, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.value(metadata i32 1, metadata !5818, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.value(metadata i32 4, metadata !5828, metadata !DIExpression()) #23, !dbg !5833
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #23, !dbg !5835, !srcloc !5836
  tail call void asm sideeffect "dmb", ""() #23, !dbg !5837, !srcloc !5841
  tail call void asm sideeffect "isb", ""() #23, !dbg !5842, !srcloc !5845
  ret i32 %1, !dbg !5846
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !5847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5849, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata i32 %0, metadata !5828, metadata !DIExpression()) #23, !dbg !5851
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #23, !dbg !5853, !srcloc !5836
  tail call void asm sideeffect "dmb", ""() #23, !dbg !5854, !srcloc !5841
  tail call void asm sideeffect "isb", ""() #23, !dbg !5856, !srcloc !5845
  ret void, !dbg !5858
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !5859 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5863
  call void @llvm.dbg.value(metadata i32 %1, metadata !5862, metadata !DIExpression()), !dbg !5864
  call void @llvm.dbg.value(metadata i32 0, metadata !5861, metadata !DIExpression()), !dbg !5864
  br label %2, !dbg !5865

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5861, metadata !DIExpression()), !dbg !5864
  tail call fastcc void @NVIC_DisableIRQ.92(i32 noundef %3) #21, !dbg !5867
  %4 = add nuw nsw i32 %3, 1, !dbg !5870
  call void @llvm.dbg.value(metadata i32 %4, metadata !5861, metadata !DIExpression()), !dbg !5864
  %5 = icmp eq i32 %4, 64, !dbg !5871
  br i1 %5, label %6, label %2, !dbg !5865, !llvm.loop !5872

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !5874
  ret void, !dbg !5875
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.92(i32 noundef %0) unnamed_addr #10 !dbg !5876 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5878, metadata !DIExpression()), !dbg !5879
  %2 = and i32 %0, 31, !dbg !5880
  %3 = shl nuw i32 1, %2, !dbg !5881
  %4 = lshr i32 %0, 5, !dbg !5882
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !5883
  store volatile i32 %3, i32* %5, align 4, !dbg !5884
  ret void, !dbg !5885
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !5886 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !5890
  call void @llvm.dbg.value(metadata i32 %1, metadata !5889, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.value(metadata i32 0, metadata !5888, metadata !DIExpression()), !dbg !5891
  br label %2, !dbg !5892

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !5888, metadata !DIExpression()), !dbg !5891
  tail call fastcc void @NVIC_EnableIRQ.93(i32 noundef %3) #21, !dbg !5894
  %4 = add nuw nsw i32 %3, 1, !dbg !5897
  call void @llvm.dbg.value(metadata i32 %4, metadata !5888, metadata !DIExpression()), !dbg !5891
  %5 = icmp eq i32 %4, 64, !dbg !5898
  br i1 %5, label %6, label %2, !dbg !5892, !llvm.loop !5899

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !5901
  ret void, !dbg !5902
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.93(i32 noundef %0) unnamed_addr #10 !dbg !5903 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5905, metadata !DIExpression()), !dbg !5906
  %2 = and i32 %0, 31, !dbg !5907
  %3 = shl nuw i32 1, %2, !dbg !5908
  %4 = lshr i32 %0, 5, !dbg !5909
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !5910
  store volatile i32 %3, i32* %5, align 4, !dbg !5911
  ret void, !dbg !5912
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #10 !dbg !5913 {
  call void @llvm.dbg.value(metadata i32 0, metadata !5915, metadata !DIExpression()), !dbg !5916
  br label %1, !dbg !5917

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !5915, metadata !DIExpression()), !dbg !5916
  tail call fastcc void @NVIC_ClearPendingIRQ.94(i32 noundef %2) #21, !dbg !5919
  %3 = add nuw nsw i32 %2, 1, !dbg !5922
  call void @llvm.dbg.value(metadata i32 %3, metadata !5915, metadata !DIExpression()), !dbg !5916
  %4 = icmp eq i32 %3, 64, !dbg !5923
  br i1 %4, label %5, label %1, !dbg !5917, !llvm.loop !5924

5:                                                ; preds = %1
  ret void, !dbg !5926
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.94(i32 noundef %0) unnamed_addr #10 !dbg !5927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5929, metadata !DIExpression()), !dbg !5930
  %2 = and i32 %0, 31, !dbg !5931
  %3 = shl nuw i32 1, %2, !dbg !5932
  %4 = lshr i32 %0, 5, !dbg !5933
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !5934
  store volatile i32 %3, i32* %5, align 4, !dbg !5935
  ret void, !dbg !5936
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !5937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5939, metadata !DIExpression()), !dbg !5940
  %2 = icmp ugt i32 %0, 63, !dbg !5941
  br i1 %2, label %4, label %3, !dbg !5941

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !5943
  br label %4, !dbg !5944

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !5940
  ret i32 %5, !dbg !5945
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !5946 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5948, metadata !DIExpression()), !dbg !5949
  %2 = and i32 %0, 511, !dbg !5950
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !5951
  tail call void asm sideeffect "dsb", ""() #23, !dbg !5952, !srcloc !5955
  ret void, !dbg !5956
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #9 !dbg !5957 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !5958
  %2 = and i32 %1, 511, !dbg !5959
  ret i32 %2, !dbg !5960
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_crypt_lock_take() local_unnamed_addr #0 !dbg !5961 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !5966
  call void @llvm.dbg.value(metadata i32 %1, metadata !5965, metadata !DIExpression()), !dbg !5967
  %2 = load i8, i8* @g_crypt_lock, align 1, !dbg !5968, !range !2545
  %3 = icmp eq i8 %2, 0, !dbg !5968
  br i1 %3, label %4, label %5, !dbg !5970

4:                                                ; preds = %0
  store i8 1, i8* @g_crypt_lock, align 1, !dbg !5971
  br label %5, !dbg !5972

5:                                                ; preds = %0, %4
  %6 = phi i32 [ 0, %4 ], [ -100, %0 ], !dbg !5967
  tail call void @restore_interrupt_mask(i32 noundef %1) #22, !dbg !5967
  ret i32 %6, !dbg !5973
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @hal_crypt_lock_give() local_unnamed_addr #4 !dbg !5974 {
  store i8 0, i8* @g_crypt_lock, align 1, !dbg !5975
  ret void, !dbg !5976
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @aes_operate(%struct.aes_parcel_t* noundef %0, i1 noundef zeroext %1, i1 zeroext %2, i1 noundef zeroext %3) local_unnamed_addr #0 !dbg !5977 {
  call void @llvm.dbg.value(metadata %struct.aes_parcel_t* %0, metadata !5995, metadata !DIExpression()), !dbg !5999
  call void @llvm.dbg.value(metadata i1 %1, metadata !5996, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5999
  call void @llvm.dbg.value(metadata i1 undef, metadata !5997, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5999
  call void @llvm.dbg.value(metadata i1 %3, metadata !5998, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5999
  %5 = tail call i32 @AES_HW_Init(%struct.aes_parcel_t* noundef %0, i1 noundef zeroext %1, i1 noundef zeroext false) #22, !dbg !6000
  %6 = icmp eq i32 %5, -1, !dbg !6002
  br i1 %6, label %18, label %7, !dbg !6003

7:                                                ; preds = %4
  br i1 %3, label %8, label %11, !dbg !6004

8:                                                ; preds = %7
  %9 = tail call i32 @AES_HW_Encrypt() #22, !dbg !6005
  %10 = icmp eq i32 %9, -1, !dbg !6009
  br i1 %10, label %18, label %14, !dbg !6010

11:                                               ; preds = %7
  %12 = tail call i32 @AES_HW_Decrypt() #22, !dbg !6011
  %13 = icmp eq i32 %12, -1, !dbg !6014
  br i1 %13, label %18, label %14, !dbg !6015

14:                                               ; preds = %11, %8
  %15 = tail call i32 @AES_HW_DeInit() #22, !dbg !6016
  %16 = icmp eq i32 %15, -1, !dbg !6018
  %17 = sext i1 %16 to i32, !dbg !5999
  br label %18, !dbg !5999

18:                                               ; preds = %14, %11, %8, %4
  %19 = phi i32 [ -1, %4 ], [ -1, %8 ], [ -1, %11 ], [ %17, %14 ], !dbg !5999
  ret i32 %19, !dbg !6019
}

; Function Attrs: optsize
declare dso_local i32 @AES_HW_Init(%struct.aes_parcel_t* noundef, i1 noundef zeroext, i1 noundef zeroext) local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @AES_HW_Encrypt() local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @AES_HW_Decrypt() local_unnamed_addr #3

; Function Attrs: optsize
declare dso_local i32 @AES_HW_DeInit() local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_aes_cbc_encrypt(%struct.hal_aes_buffer_t* noundef %0, %struct.hal_aes_buffer_t* noundef readonly %1, %struct.hal_aes_buffer_t* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !6020 {
  %5 = alloca %struct.hal_aes_buffer_t, align 4
  %6 = alloca %struct.hal_aes_buffer_t, align 4
  %7 = alloca %struct.aes_parcel_t, align 4
  %8 = alloca [16 x i8], align 1
  %9 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %0, metadata !6024, metadata !DIExpression()), !dbg !6042
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %1, metadata !6025, metadata !DIExpression()), !dbg !6042
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %2, metadata !6026, metadata !DIExpression()), !dbg !6042
  call void @llvm.dbg.value(metadata i8* %3, metadata !6027, metadata !DIExpression()), !dbg !6042
  %10 = icmp eq %struct.hal_aes_buffer_t* %0, null, !dbg !6043
  %11 = icmp eq %struct.hal_aes_buffer_t* %1, null
  %12 = or i1 %10, %11, !dbg !6045
  %13 = icmp eq %struct.hal_aes_buffer_t* %2, null
  %14 = or i1 %12, %13, !dbg !6045
  %15 = icmp eq i8* %3, null
  %16 = or i1 %14, %15, !dbg !6045
  br i1 %16, label %87, label %17, !dbg !6045

17:                                               ; preds = %4
  %18 = bitcast %struct.hal_aes_buffer_t* %5 to i8*, !dbg !6046
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #23, !dbg !6046
  call void @llvm.dbg.declare(metadata %struct.hal_aes_buffer_t* %5, metadata !6028, metadata !DIExpression()), !dbg !6047
  %19 = bitcast %struct.hal_aes_buffer_t* %6 to i8*, !dbg !6048
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #23, !dbg !6048
  call void @llvm.dbg.declare(metadata %struct.hal_aes_buffer_t* %6, metadata !6029, metadata !DIExpression()), !dbg !6049
  %20 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %1, i32 0, i32 1, !dbg !6050
  %21 = load i32, i32* %20, align 4, !dbg !6050
  %22 = and i32 %21, 15, !dbg !6051
  call void @llvm.dbg.value(metadata i32 %22, metadata !6030, metadata !DIExpression()), !dbg !6042
  %23 = and i32 %21, -16, !dbg !6052
  call void @llvm.dbg.value(metadata i32 %21, metadata !6031, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_stack_value)), !dbg !6042
  %24 = sub nuw nsw i32 16, %22, !dbg !6053
  call void @llvm.dbg.value(metadata !DIArgList(i8 16, i32 %22), metadata !6032, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_minus, DW_OP_stack_value)), !dbg !6042
  %25 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %0, i32 0, i32 1, !dbg !6054
  %26 = load i32, i32* %25, align 4, !dbg !6054
  %27 = add i32 %24, %21, !dbg !6056
  %28 = icmp ult i32 %26, %27, !dbg !6057
  br i1 %28, label %29, label %30, !dbg !6058

29:                                               ; preds = %17
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_aes_cbc_encrypt, i32 0, i32 0), i32 noundef 117, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.95, i32 0, i32 0)) #22, !dbg !6059
  br label %85, !dbg !6061

30:                                               ; preds = %17
  %31 = tail call i32 @hal_crypt_lock_take() #21, !dbg !6062
  %32 = bitcast %struct.aes_parcel_t* %7 to i8*, !dbg !6063
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #23, !dbg !6063
  call void @llvm.dbg.declare(metadata %struct.aes_parcel_t* %7, metadata !6033, metadata !DIExpression()), !dbg !6064
  %33 = icmp ult i32 %21, 16, !dbg !6065
  br i1 %33, label %64, label %34, !dbg !6066

34:                                               ; preds = %30
  call void @llvm.dbg.value(metadata i32 %23, metadata !6034, metadata !DIExpression()), !dbg !6067
  %35 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %1, i32 0, i32 0, !dbg !6068
  %36 = load i8*, i8** %35, align 4, !dbg !6068
  %37 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %5, i32 0, i32 0, !dbg !6069
  store i8* %36, i8** %37, align 4, !dbg !6070
  %38 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %5, i32 0, i32 1, !dbg !6071
  store i32 %23, i32* %38, align 4, !dbg !6072
  %39 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %0, i32 0, i32 0, !dbg !6073
  %40 = load i8*, i8** %39, align 4, !dbg !6073
  %41 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %6, i32 0, i32 0, !dbg !6074
  store i8* %40, i8** %41, align 4, !dbg !6075
  %42 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %6, i32 0, i32 1, !dbg !6076
  store i32 %23, i32* %42, align 4, !dbg !6077
  %43 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %7, i32 0, i32 0, !dbg !6078
  store %struct.hal_aes_buffer_t* %5, %struct.hal_aes_buffer_t** %43, align 4, !dbg !6079
  %44 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %7, i32 0, i32 1, !dbg !6080
  store %struct.hal_aes_buffer_t* %6, %struct.hal_aes_buffer_t** %44, align 4, !dbg !6081
  %45 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %7, i32 0, i32 2, !dbg !6082
  store %struct.hal_aes_buffer_t* %2, %struct.hal_aes_buffer_t** %45, align 4, !dbg !6083
  %46 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %7, i32 0, i32 3, !dbg !6084
  store i8* %3, i8** %46, align 4, !dbg !6085
  %47 = call i32 @aes_operate(%struct.aes_parcel_t* noundef nonnull %7, i1 noundef zeroext false, i1 zeroext undef, i1 noundef zeroext true) #21, !dbg !6086
  %48 = icmp eq i32 %47, -1, !dbg !6088
  br i1 %48, label %49, label %50, !dbg !6089

49:                                               ; preds = %34
  call void @hal_crypt_lock_give() #21, !dbg !6090
  br label %83

50:                                               ; preds = %34
  %51 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !6092
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #23, !dbg !6092
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !6037, metadata !DIExpression()), !dbg !6093
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %51, i8 0, i32 16, i1 false), !dbg !6093
  %52 = load i8*, i8** %35, align 4, !dbg !6094
  %53 = getelementptr inbounds i8, i8* %52, i32 %23, !dbg !6095
  %54 = call i8* @memcpy(i8* noundef nonnull %51, i8* noundef %53, i32 noundef %22) #22, !dbg !6096
  %55 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %22, !dbg !6097
  %56 = call i8* @memset(i8* noundef nonnull %55, i32 noundef %24, i32 noundef %24) #22, !dbg !6098
  %57 = load i8*, i8** %39, align 4, !dbg !6099
  %58 = getelementptr inbounds i8, i8* %57, i32 %23, !dbg !6100
  %59 = getelementptr inbounds i8, i8* %58, i32 -16, !dbg !6101
  call void @llvm.dbg.value(metadata i8* %59, metadata !6039, metadata !DIExpression()), !dbg !6067
  store i8* %51, i8** %37, align 4, !dbg !6102
  store i32 16, i32* %38, align 4, !dbg !6103
  store i8* %58, i8** %41, align 4, !dbg !6104
  store i32 16, i32* %42, align 4, !dbg !6105
  store %struct.hal_aes_buffer_t* %5, %struct.hal_aes_buffer_t** %43, align 4, !dbg !6106
  store %struct.hal_aes_buffer_t* %6, %struct.hal_aes_buffer_t** %44, align 4, !dbg !6107
  store %struct.hal_aes_buffer_t* %2, %struct.hal_aes_buffer_t** %45, align 4, !dbg !6108
  store i8* %59, i8** %46, align 4, !dbg !6109
  %60 = call i32 @aes_operate(%struct.aes_parcel_t* noundef nonnull %7, i1 noundef zeroext false, i1 zeroext undef, i1 noundef zeroext true) #21, !dbg !6110
  %61 = icmp eq i32 %60, -1, !dbg !6112
  br i1 %61, label %63, label %62, !dbg !6113

62:                                               ; preds = %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #23, !dbg !6114
  br label %82

63:                                               ; preds = %50
  call void @hal_crypt_lock_give() #21, !dbg !6115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #23, !dbg !6114
  br label %83

64:                                               ; preds = %30
  %65 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 0, !dbg !6117
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #23, !dbg !6117
  call void @llvm.dbg.declare(metadata [16 x i8]* %9, metadata !6040, metadata !DIExpression()), !dbg !6118
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %65, i8 0, i32 16, i1 false), !dbg !6118
  %66 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %1, i32 0, i32 0, !dbg !6119
  %67 = load i8*, i8** %66, align 4, !dbg !6119
  %68 = load i32, i32* %20, align 4, !dbg !6120
  %69 = call i8* @memcpy(i8* noundef nonnull %65, i8* noundef %67, i32 noundef %68) #22, !dbg !6121
  %70 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i32 0, i32 %22, !dbg !6122
  %71 = call i8* @memset(i8* noundef nonnull %70, i32 noundef %24, i32 noundef %24) #22, !dbg !6123
  %72 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %5, i32 0, i32 0, !dbg !6124
  store i8* %65, i8** %72, align 4, !dbg !6125
  %73 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %5, i32 0, i32 1, !dbg !6126
  store i32 16, i32* %73, align 4, !dbg !6127
  %74 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %7, i32 0, i32 0, !dbg !6128
  store %struct.hal_aes_buffer_t* %5, %struct.hal_aes_buffer_t** %74, align 4, !dbg !6129
  %75 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %7, i32 0, i32 1, !dbg !6130
  store %struct.hal_aes_buffer_t* %0, %struct.hal_aes_buffer_t** %75, align 4, !dbg !6131
  %76 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %7, i32 0, i32 2, !dbg !6132
  store %struct.hal_aes_buffer_t* %2, %struct.hal_aes_buffer_t** %76, align 4, !dbg !6133
  %77 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %7, i32 0, i32 3, !dbg !6134
  store i8* %3, i8** %77, align 4, !dbg !6135
  %78 = call i32 @aes_operate(%struct.aes_parcel_t* noundef nonnull %7, i1 noundef zeroext false, i1 zeroext undef, i1 noundef zeroext true) #21, !dbg !6136
  %79 = icmp eq i32 %78, -1, !dbg !6138
  br i1 %79, label %80, label %81, !dbg !6139

80:                                               ; preds = %64
  call void @hal_crypt_lock_give() #21, !dbg !6140
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #23, !dbg !6142
  br label %83

81:                                               ; preds = %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #23, !dbg !6142
  br label %82

82:                                               ; preds = %62, %81
  call void @hal_crypt_lock_give() #21, !dbg !6143
  br label %83, !dbg !6144

83:                                               ; preds = %63, %49, %80, %82
  %84 = phi i32 [ 0, %82 ], [ -1, %63 ], [ -1, %80 ], [ -1, %49 ], !dbg !6042
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #23, !dbg !6145
  br label %85

85:                                               ; preds = %83, %29
  %86 = phi i32 [ -1, %29 ], [ %84, %83 ], !dbg !6042
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #23, !dbg !6145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #23, !dbg !6145
  br label %87

87:                                               ; preds = %4, %85
  %88 = phi i32 [ %86, %85 ], [ -1, %4 ], !dbg !6042
  ret i32 %88, !dbg !6145
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_aes_cbc_decrypt(%struct.hal_aes_buffer_t* noundef %0, %struct.hal_aes_buffer_t* noundef %1, %struct.hal_aes_buffer_t* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !6146 {
  %5 = alloca %struct.aes_parcel_t, align 4
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %0, metadata !6148, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %1, metadata !6149, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %2, metadata !6150, metadata !DIExpression()), !dbg !6153
  call void @llvm.dbg.value(metadata i8* %3, metadata !6151, metadata !DIExpression()), !dbg !6153
  %6 = icmp eq %struct.hal_aes_buffer_t* %1, null, !dbg !6154
  %7 = icmp eq %struct.hal_aes_buffer_t* %0, null
  %8 = or i1 %7, %6, !dbg !6156
  %9 = icmp eq %struct.hal_aes_buffer_t* %2, null
  %10 = or i1 %8, %9, !dbg !6156
  %11 = icmp eq i8* %3, null
  %12 = or i1 %10, %11, !dbg !6156
  br i1 %12, label %23, label %13, !dbg !6156

13:                                               ; preds = %4
  %14 = tail call i32 @hal_crypt_lock_take() #21, !dbg !6157
  %15 = bitcast %struct.aes_parcel_t* %5 to i8*, !dbg !6158
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #23, !dbg !6158
  call void @llvm.dbg.declare(metadata %struct.aes_parcel_t* %5, metadata !6152, metadata !DIExpression()), !dbg !6159
  %16 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %5, i32 0, i32 0, !dbg !6160
  store %struct.hal_aes_buffer_t* %1, %struct.hal_aes_buffer_t** %16, align 4, !dbg !6161
  %17 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %5, i32 0, i32 1, !dbg !6162
  store %struct.hal_aes_buffer_t* %0, %struct.hal_aes_buffer_t** %17, align 4, !dbg !6163
  %18 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %5, i32 0, i32 2, !dbg !6164
  store %struct.hal_aes_buffer_t* %2, %struct.hal_aes_buffer_t** %18, align 4, !dbg !6165
  %19 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %5, i32 0, i32 3, !dbg !6166
  store i8* %3, i8** %19, align 4, !dbg !6167
  %20 = call i32 @aes_operate(%struct.aes_parcel_t* noundef nonnull %5, i1 noundef zeroext false, i1 zeroext undef, i1 noundef zeroext false) #21, !dbg !6168
  %21 = icmp eq i32 %20, -1, !dbg !6170
  call void @hal_crypt_lock_give() #21, !dbg !6153
  %22 = sext i1 %21 to i32, !dbg !6153
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #23, !dbg !6171
  br label %23

23:                                               ; preds = %4, %13
  %24 = phi i32 [ %22, %13 ], [ -1, %4 ], !dbg !6153
  ret i32 %24, !dbg !6171
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_aes_ecb_encrypt(%struct.hal_aes_buffer_t* noundef %0, %struct.hal_aes_buffer_t* noundef readonly %1, %struct.hal_aes_buffer_t* noundef %2) local_unnamed_addr #0 !dbg !6172 {
  %4 = alloca %struct.hal_aes_buffer_t, align 4
  %5 = alloca %struct.hal_aes_buffer_t, align 4
  %6 = alloca %struct.aes_parcel_t, align 4
  %7 = alloca [16 x i8], align 1
  %8 = alloca [16 x i8], align 1
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %0, metadata !6176, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %1, metadata !6177, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %2, metadata !6178, metadata !DIExpression()), !dbg !6191
  %9 = icmp eq %struct.hal_aes_buffer_t* %0, null, !dbg !6192
  %10 = icmp eq %struct.hal_aes_buffer_t* %1, null
  %11 = or i1 %9, %10, !dbg !6194
  %12 = icmp eq %struct.hal_aes_buffer_t* %2, null
  %13 = or i1 %11, %12, !dbg !6194
  br i1 %13, label %81, label %14, !dbg !6194

14:                                               ; preds = %3
  %15 = bitcast %struct.hal_aes_buffer_t* %4 to i8*, !dbg !6195
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #23, !dbg !6195
  call void @llvm.dbg.declare(metadata %struct.hal_aes_buffer_t* %4, metadata !6179, metadata !DIExpression()), !dbg !6196
  %16 = bitcast %struct.hal_aes_buffer_t* %5 to i8*, !dbg !6197
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #23, !dbg !6197
  call void @llvm.dbg.declare(metadata %struct.hal_aes_buffer_t* %5, metadata !6180, metadata !DIExpression()), !dbg !6198
  %17 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %1, i32 0, i32 1, !dbg !6199
  %18 = load i32, i32* %17, align 4, !dbg !6199
  %19 = and i32 %18, 15, !dbg !6200
  call void @llvm.dbg.value(metadata i32 %19, metadata !6181, metadata !DIExpression()), !dbg !6191
  %20 = and i32 %18, -16, !dbg !6201
  call void @llvm.dbg.value(metadata i32 %18, metadata !6182, metadata !DIExpression(DW_OP_constu, 4, DW_OP_shr, DW_OP_stack_value)), !dbg !6191
  %21 = sub nuw nsw i32 16, %19, !dbg !6202
  call void @llvm.dbg.value(metadata !DIArgList(i8 16, i32 %19), metadata !6183, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_minus, DW_OP_stack_value)), !dbg !6191
  %22 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %0, i32 0, i32 1, !dbg !6203
  %23 = load i32, i32* %22, align 4, !dbg !6203
  %24 = add i32 %21, %18, !dbg !6205
  %25 = icmp ult i32 %23, %24, !dbg !6206
  br i1 %25, label %26, label %27, !dbg !6207

26:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__.hal_aes_ecb_encrypt, i32 0, i32 0), i32 noundef 237, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.95, i32 0, i32 0)) #22, !dbg !6208
  br label %79, !dbg !6210

27:                                               ; preds = %14
  %28 = tail call i32 @hal_crypt_lock_take() #21, !dbg !6211
  %29 = bitcast %struct.aes_parcel_t* %6 to i8*, !dbg !6212
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #23, !dbg !6212
  call void @llvm.dbg.declare(metadata %struct.aes_parcel_t* %6, metadata !6184, metadata !DIExpression()), !dbg !6213
  %30 = icmp ult i32 %18, 16, !dbg !6214
  br i1 %30, label %59, label %31, !dbg !6215

31:                                               ; preds = %27
  call void @llvm.dbg.value(metadata i32 %20, metadata !6185, metadata !DIExpression()), !dbg !6216
  %32 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %1, i32 0, i32 0, !dbg !6217
  %33 = load i8*, i8** %32, align 4, !dbg !6217
  %34 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %4, i32 0, i32 0, !dbg !6218
  store i8* %33, i8** %34, align 4, !dbg !6219
  %35 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %4, i32 0, i32 1, !dbg !6220
  store i32 %20, i32* %35, align 4, !dbg !6221
  %36 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %0, i32 0, i32 0, !dbg !6222
  %37 = load i8*, i8** %36, align 4, !dbg !6222
  %38 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %5, i32 0, i32 0, !dbg !6223
  store i8* %37, i8** %38, align 4, !dbg !6224
  %39 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %5, i32 0, i32 1, !dbg !6225
  store i32 %20, i32* %39, align 4, !dbg !6226
  %40 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %6, i32 0, i32 0, !dbg !6227
  store %struct.hal_aes_buffer_t* %4, %struct.hal_aes_buffer_t** %40, align 4, !dbg !6228
  %41 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %6, i32 0, i32 1, !dbg !6229
  store %struct.hal_aes_buffer_t* %5, %struct.hal_aes_buffer_t** %41, align 4, !dbg !6230
  %42 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %6, i32 0, i32 2, !dbg !6231
  store %struct.hal_aes_buffer_t* %2, %struct.hal_aes_buffer_t** %42, align 4, !dbg !6232
  %43 = call i32 @aes_operate(%struct.aes_parcel_t* noundef nonnull %6, i1 noundef zeroext true, i1 zeroext undef, i1 noundef zeroext true) #21, !dbg !6233
  %44 = icmp eq i32 %43, -1, !dbg !6235
  br i1 %44, label %45, label %46, !dbg !6236

45:                                               ; preds = %31
  call void @hal_crypt_lock_give() #21, !dbg !6237
  br label %77

46:                                               ; preds = %31
  %47 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 0, !dbg !6239
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #23, !dbg !6239
  call void @llvm.dbg.declare(metadata [16 x i8]* %7, metadata !6188, metadata !DIExpression()), !dbg !6240
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %47, i8 0, i32 16, i1 false), !dbg !6240
  %48 = load i8*, i8** %32, align 4, !dbg !6241
  %49 = getelementptr inbounds i8, i8* %48, i32 %20, !dbg !6242
  %50 = call i8* @memcpy(i8* noundef nonnull %47, i8* noundef %49, i32 noundef %19) #22, !dbg !6243
  %51 = getelementptr inbounds [16 x i8], [16 x i8]* %7, i32 0, i32 %19, !dbg !6244
  %52 = call i8* @memset(i8* noundef nonnull %51, i32 noundef %21, i32 noundef %21) #22, !dbg !6245
  store i8* %47, i8** %34, align 4, !dbg !6246
  store i32 16, i32* %35, align 4, !dbg !6247
  %53 = load i8*, i8** %36, align 4, !dbg !6248
  %54 = getelementptr inbounds i8, i8* %53, i32 %20, !dbg !6249
  store i8* %54, i8** %38, align 4, !dbg !6250
  store i32 16, i32* %39, align 4, !dbg !6251
  store %struct.hal_aes_buffer_t* %4, %struct.hal_aes_buffer_t** %40, align 4, !dbg !6252
  store %struct.hal_aes_buffer_t* %5, %struct.hal_aes_buffer_t** %41, align 4, !dbg !6253
  store %struct.hal_aes_buffer_t* %2, %struct.hal_aes_buffer_t** %42, align 4, !dbg !6254
  %55 = call i32 @aes_operate(%struct.aes_parcel_t* noundef nonnull %6, i1 noundef zeroext true, i1 zeroext undef, i1 noundef zeroext true) #21, !dbg !6255
  %56 = icmp eq i32 %55, -1, !dbg !6257
  br i1 %56, label %58, label %57, !dbg !6258

57:                                               ; preds = %46
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #23, !dbg !6259
  br label %76

58:                                               ; preds = %46
  call void @hal_crypt_lock_give() #21, !dbg !6260
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #23, !dbg !6259
  br label %77

59:                                               ; preds = %27
  %60 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 0, !dbg !6262
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #23, !dbg !6262
  call void @llvm.dbg.declare(metadata [16 x i8]* %8, metadata !6189, metadata !DIExpression()), !dbg !6263
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %60, i8 0, i32 16, i1 false), !dbg !6263
  %61 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %1, i32 0, i32 0, !dbg !6264
  %62 = load i8*, i8** %61, align 4, !dbg !6264
  %63 = load i32, i32* %17, align 4, !dbg !6265
  %64 = call i8* @memcpy(i8* noundef nonnull %60, i8* noundef %62, i32 noundef %63) #22, !dbg !6266
  %65 = getelementptr inbounds [16 x i8], [16 x i8]* %8, i32 0, i32 %19, !dbg !6267
  %66 = call i8* @memset(i8* noundef nonnull %65, i32 noundef %21, i32 noundef %21) #22, !dbg !6268
  %67 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %4, i32 0, i32 0, !dbg !6269
  store i8* %60, i8** %67, align 4, !dbg !6270
  %68 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %4, i32 0, i32 1, !dbg !6271
  store i32 16, i32* %68, align 4, !dbg !6272
  %69 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %6, i32 0, i32 0, !dbg !6273
  store %struct.hal_aes_buffer_t* %4, %struct.hal_aes_buffer_t** %69, align 4, !dbg !6274
  %70 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %6, i32 0, i32 1, !dbg !6275
  store %struct.hal_aes_buffer_t* %0, %struct.hal_aes_buffer_t** %70, align 4, !dbg !6276
  %71 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %6, i32 0, i32 2, !dbg !6277
  store %struct.hal_aes_buffer_t* %2, %struct.hal_aes_buffer_t** %71, align 4, !dbg !6278
  %72 = call i32 @aes_operate(%struct.aes_parcel_t* noundef nonnull %6, i1 noundef zeroext true, i1 zeroext undef, i1 noundef zeroext true) #21, !dbg !6279
  %73 = icmp eq i32 %72, -1, !dbg !6281
  br i1 %73, label %74, label %75, !dbg !6282

74:                                               ; preds = %59
  call void @hal_crypt_lock_give() #21, !dbg !6283
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #23, !dbg !6285
  br label %77

75:                                               ; preds = %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #23, !dbg !6285
  br label %76

76:                                               ; preds = %57, %75
  call void @hal_crypt_lock_give() #21, !dbg !6286
  br label %77, !dbg !6287

77:                                               ; preds = %58, %45, %74, %76
  %78 = phi i32 [ 0, %76 ], [ -1, %58 ], [ -1, %74 ], [ -1, %45 ], !dbg !6191
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #23, !dbg !6288
  br label %79

79:                                               ; preds = %77, %26
  %80 = phi i32 [ -1, %26 ], [ %78, %77 ], !dbg !6191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #23, !dbg !6288
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #23, !dbg !6288
  br label %81

81:                                               ; preds = %3, %79
  %82 = phi i32 [ %80, %79 ], [ -1, %3 ], !dbg !6191
  ret i32 %82, !dbg !6288
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_aes_ecb_decrypt(%struct.hal_aes_buffer_t* noundef %0, %struct.hal_aes_buffer_t* noundef %1, %struct.hal_aes_buffer_t* noundef %2) local_unnamed_addr #0 !dbg !6289 {
  %4 = alloca %struct.aes_parcel_t, align 4
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %0, metadata !6291, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %1, metadata !6292, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.value(metadata %struct.hal_aes_buffer_t* %2, metadata !6293, metadata !DIExpression()), !dbg !6295
  %5 = icmp eq %struct.hal_aes_buffer_t* %1, null, !dbg !6296
  %6 = icmp eq %struct.hal_aes_buffer_t* %0, null
  %7 = or i1 %6, %5, !dbg !6298
  %8 = icmp eq %struct.hal_aes_buffer_t* %2, null
  %9 = or i1 %7, %8, !dbg !6298
  br i1 %9, label %19, label %10, !dbg !6298

10:                                               ; preds = %3
  %11 = tail call i32 @hal_crypt_lock_take() #21, !dbg !6299
  %12 = bitcast %struct.aes_parcel_t* %4 to i8*, !dbg !6300
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #23, !dbg !6300
  call void @llvm.dbg.declare(metadata %struct.aes_parcel_t* %4, metadata !6294, metadata !DIExpression()), !dbg !6301
  %13 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %4, i32 0, i32 0, !dbg !6302
  store %struct.hal_aes_buffer_t* %1, %struct.hal_aes_buffer_t** %13, align 4, !dbg !6303
  %14 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %4, i32 0, i32 1, !dbg !6304
  store %struct.hal_aes_buffer_t* %0, %struct.hal_aes_buffer_t** %14, align 4, !dbg !6305
  %15 = getelementptr inbounds %struct.aes_parcel_t, %struct.aes_parcel_t* %4, i32 0, i32 2, !dbg !6306
  store %struct.hal_aes_buffer_t* %2, %struct.hal_aes_buffer_t** %15, align 4, !dbg !6307
  %16 = call i32 @aes_operate(%struct.aes_parcel_t* noundef nonnull %4, i1 noundef zeroext true, i1 zeroext undef, i1 noundef zeroext false) #21, !dbg !6308
  %17 = icmp eq i32 %16, -1, !dbg !6310
  call void @hal_crypt_lock_give() #21, !dbg !6295
  %18 = sext i1 %17 to i32, !dbg !6295
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #23, !dbg !6311
  br label %19

19:                                               ; preds = %3, %10
  %20 = phi i32 [ %18, %10 ], [ -1, %3 ], !dbg !6295
  ret i32 %20, !dbg !6311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !6312 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6316, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i32 %1, metadata !6317, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i8* %0, metadata !6318, metadata !DIExpression()), !dbg !6415
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #22, !dbg !6416
  call void @llvm.dbg.value(metadata i32 %3, metadata !6413, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !6415
  call void @llvm.dbg.value(metadata i32 0, metadata !6412, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i32* undef, metadata !6414, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i32 0, metadata !6412, metadata !DIExpression()), !dbg !6415
  %4 = icmp ult i32 %3, 4, !dbg !6417
  br i1 %4, label %20, label %5, !dbg !6420

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !6421
  %7 = bitcast i8* %6 to i32**, !dbg !6421
  %8 = load i32*, i32** %7, align 4, !dbg !6421
  call void @llvm.dbg.value(metadata i32* %8, metadata !6414, metadata !DIExpression()), !dbg !6415
  %9 = lshr i32 %3, 2, !dbg !6422
  call void @llvm.dbg.value(metadata i32 %9, metadata !6413, metadata !DIExpression()), !dbg !6415
  br label %10, !dbg !6420

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !6414, metadata !DIExpression()), !dbg !6415
  call void @llvm.dbg.value(metadata i32 %12, metadata !6412, metadata !DIExpression()), !dbg !6415
  %13 = load i32, i32* %11, align 4, !dbg !6423
  %14 = icmp eq i32 %13, -1, !dbg !6426
  br i1 %14, label %16, label %15, !dbg !6427

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #22, !dbg !6428
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.96, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.97, i32 0, i32 0)) #24, !dbg !6428
  unreachable, !dbg !6428

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !6433
  call void @llvm.dbg.value(metadata i32 %17, metadata !6412, metadata !DIExpression()), !dbg !6415
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !6434
  call void @llvm.dbg.value(metadata i32* %18, metadata !6414, metadata !DIExpression()), !dbg !6415
  %19 = icmp eq i32 %17, %9, !dbg !6417
  br i1 %19, label %20, label %10, !dbg !6420, !llvm.loop !6435

20:                                               ; preds = %16, %2
  ret void, !dbg !6437
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !6438 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6440, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.value(metadata i32 0, metadata !6441, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.value(metadata i32 %0, metadata !6441, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !6442
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !6441, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6442
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !6441, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6442
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !6443
  call void @llvm.dbg.value(metadata i32 %2, metadata !6441, metadata !DIExpression()), !dbg !6442
  ret i32 %2, !dbg !6444
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6445 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6450, metadata !DIExpression()), !dbg !6452
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6453
  %3 = or i32 %2, 512, !dbg !6453
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6453
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6456
  call void @llvm.dbg.value(metadata i32 %4, metadata !6451, metadata !DIExpression()), !dbg !6452
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !6457

5:                                                ; preds = %1
  br label %7, !dbg !6458

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #22, !dbg !6462
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.96, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.97, i32 0, i32 0)) #24, !dbg !6462
  unreachable, !dbg !6462

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !6467
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6452
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !6451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6452
  br label %10, !dbg !6468

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6469
  %12 = and i32 %11, 8192, !dbg !6470
  %13 = icmp eq i32 %12, 0, !dbg !6471
  br i1 %13, label %10, label %14, !dbg !6468, !llvm.loop !6472

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6474
  %16 = and i32 %15, 256, !dbg !6475
  %17 = icmp eq i32 %16, 0, !dbg !6476
  br i1 %17, label %14, label %18, !dbg !6477, !llvm.loop !6478

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !6467
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !6451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6452
  %20 = and i32 %19, 16, !dbg !6467
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !6451, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6452
  call void @llvm.dbg.value(metadata i32 undef, metadata !6451, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !6452
  %21 = or i32 %4, %20, !dbg !6480
  %22 = or i32 %21, 8, !dbg !6480
  call void @llvm.dbg.value(metadata i32 %22, metadata !6451, metadata !DIExpression()), !dbg !6452
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6481
  ret void, !dbg !6482
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !6483 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !6485, metadata !DIExpression()), !dbg !6487
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6488
  call void @llvm.dbg.value(metadata i32 %2, metadata !6486, metadata !DIExpression()), !dbg !6487
  %3 = and i32 %2, -268435477, !dbg !6489
  call void @llvm.dbg.value(metadata i32 %3, metadata !6486, metadata !DIExpression()), !dbg !6487
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6490
  br label %4, !dbg !6491

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6492
  %6 = and i32 %5, 2, !dbg !6493
  %7 = icmp eq i32 %6, 0, !dbg !6491
  br i1 %7, label %8, label %4, !dbg !6491, !llvm.loop !6494

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6496
  call void @llvm.dbg.value(metadata i32 %9, metadata !6486, metadata !DIExpression()), !dbg !6487
  %10 = and i32 %9, -9, !dbg !6497
  call void @llvm.dbg.value(metadata i32 %10, metadata !6486, metadata !DIExpression()), !dbg !6487
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6498
  br label %11, !dbg !6499

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6500
  %13 = and i32 %12, 8, !dbg !6501
  %14 = icmp eq i32 %13, 0, !dbg !6499
  br i1 %14, label %15, label %11, !dbg !6499, !llvm.loop !6502

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !6504, !range !2545
  %17 = icmp eq i8 %16, 0, !dbg !6506
  br i1 %17, label %18, label %21, !dbg !6507

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6508
  %20 = and i32 %19, -513, !dbg !6508
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6508
  br label %21, !dbg !6512

21:                                               ; preds = %18, %15
  ret void, !dbg !6513
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !6514 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6518, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.value(metadata i32 0, metadata !6519, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.value(metadata i32 0, metadata !6520, metadata !DIExpression()), !dbg !6521
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6522
  call void @llvm.dbg.value(metadata i32 %2, metadata !6519, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.value(metadata i32 %2, metadata !6519, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !6521
  %3 = icmp eq i16 %0, 1, !dbg !6523
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !6525
  %5 = or i32 %2, %4, !dbg !6525
  call void @llvm.dbg.value(metadata i32 %5, metadata !6519, metadata !DIExpression()), !dbg !6521
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6526
  br label %6, !dbg !6527

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6528
  %8 = and i32 %7, 2, !dbg !6529
  %9 = icmp eq i32 %8, 0, !dbg !6530
  br i1 %9, label %6, label %10, !dbg !6527, !llvm.loop !6531

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6533
  %12 = and i32 %11, 1, !dbg !6534
  %13 = icmp eq i32 %12, 0, !dbg !6535
  br i1 %13, label %14, label %10, !dbg !6535, !llvm.loop !6536

14:                                               ; preds = %10
  ret i32 0, !dbg !6538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #10 section ".tcm_code" !dbg !6539 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6541, metadata !DIExpression()), !dbg !6542
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !6543
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !6544
  ret void, !dbg !6545
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !6546 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6550, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.value(metadata i32 %1, metadata !6551, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.value(metadata i32 %1, metadata !6552, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.value(metadata i8 0, metadata !6554, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.value(metadata i32 0, metadata !6553, metadata !DIExpression()), !dbg !6555
  %3 = icmp eq i32 %1, 0, !dbg !6556
  br i1 %3, label %16, label %4, !dbg !6559

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !6554, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.value(metadata i32 %6, metadata !6553, metadata !DIExpression()), !dbg !6555
  call void @llvm.dbg.value(metadata i32 %7, metadata !6552, metadata !DIExpression()), !dbg !6555
  %8 = shl i32 %6, 8, !dbg !6560
  %9 = and i32 %7, 255, !dbg !6562
  %10 = or i32 %8, %9, !dbg !6563
  call void @llvm.dbg.value(metadata i32 %10, metadata !6553, metadata !DIExpression()), !dbg !6555
  %11 = lshr i32 %7, 8, !dbg !6564
  call void @llvm.dbg.value(metadata i32 %11, metadata !6552, metadata !DIExpression()), !dbg !6555
  %12 = add nuw nsw i8 %5, 1, !dbg !6565
  call void @llvm.dbg.value(metadata i8 %12, metadata !6554, metadata !DIExpression()), !dbg !6555
  %13 = icmp ult i32 %7, 256, !dbg !6556
  br i1 %13, label %14, label %4, !dbg !6559, !llvm.loop !6566

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !6568
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !6570
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6571
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6572
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6573
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !6574
  br label %16, !dbg !6575

16:                                               ; preds = %2, %14
  ret void, !dbg !6576
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !6577 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6581, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.value(metadata i8 %1, metadata !6582, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.value(metadata i32 %2, metadata !6583, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.value(metadata i32 %3, metadata !6584, metadata !DIExpression()), !dbg !6587
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !6588
  call void @llvm.dbg.value(metadata i32 %5, metadata !6586, metadata !DIExpression()), !dbg !6587
  %6 = icmp eq i32 %3, 3, !dbg !6589
  br i1 %6, label %7, label %11, !dbg !6591

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !6592
  %9 = zext i8 %1 to i32, !dbg !6594
  %10 = or i32 %8, %9, !dbg !6595
  call void @llvm.dbg.value(metadata i32 %10, metadata !6585, metadata !DIExpression()), !dbg !6587
  br label %16, !dbg !6596

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !6597
  %13 = zext i8 %1 to i32, !dbg !6599
  %14 = or i32 %12, %13, !dbg !6600
  call void @llvm.dbg.value(metadata i32 %14, metadata !6585, metadata !DIExpression()), !dbg !6587
  %15 = lshr i32 %5, 24, !dbg !6601
  call void @llvm.dbg.value(metadata i32 %15, metadata !6586, metadata !DIExpression()), !dbg !6587
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !6602
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !6587
  call void @llvm.dbg.value(metadata i32 %18, metadata !6586, metadata !DIExpression()), !dbg !6587
  call void @llvm.dbg.value(metadata i32 %17, metadata !6585, metadata !DIExpression()), !dbg !6587
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !6603
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6604
  %19 = add i32 %3, 1, !dbg !6605
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6606
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6607
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !6608
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !6609
  ret void, !dbg !6610
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !6611 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6615, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 %1, metadata !6616, metadata !DIExpression()), !dbg !6617
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !6618
  %4 = and i32 %3, -256, !dbg !6619
  %5 = and i32 %0, 255, !dbg !6620
  %6 = or i32 %4, %5, !dbg !6621
  ret i32 %6, !dbg !6622
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #7 section ".ram_code" !dbg !6623 {
  %5 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6628, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i32 %1, metadata !6629, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i8** %2, metadata !6630, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata i32* %3, metadata !6631, metadata !DIExpression()), !dbg !6643
  %6 = bitcast %union.anon* %5 to i8*, !dbg !6644
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !6644
  call void @llvm.dbg.declare(metadata %union.anon* %5, metadata !6632, metadata !DIExpression()), !dbg !6645
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !6646
  call void @llvm.dbg.value(metadata i32 %7, metadata !6641, metadata !DIExpression()), !dbg !6643
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !6640, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6643
  %8 = lshr i32 %7, 24, !dbg !6647
  call void @llvm.dbg.value(metadata i32 %8, metadata !6641, metadata !DIExpression()), !dbg !6643
  %9 = trunc i32 %8 to i8, !dbg !6648
  %10 = bitcast %union.anon* %5 to [4 x i8]*, !dbg !6649
  store i8 %9, i8* %6, align 4, !dbg !6650
  call void @llvm.dbg.value(metadata i32 1, metadata !6642, metadata !DIExpression()), !dbg !6643
  %11 = load i8*, i8** %2, align 4, !dbg !6651
  br label %12, !dbg !6655

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !6651
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6642, metadata !DIExpression()), !dbg !6643
  %15 = load i8, i8* %13, align 1, !dbg !6656
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !6657
  store i8 %15, i8* %16, align 1, !dbg !6658
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !6659
  store i8* %17, i8** %2, align 4, !dbg !6659
  %18 = add nuw nsw i32 %14, 1, !dbg !6660
  call void @llvm.dbg.value(metadata i32 %18, metadata !6642, metadata !DIExpression()), !dbg !6643
  %19 = icmp eq i32 %18, 4, !dbg !6661
  br i1 %19, label %20, label %12, !dbg !6655, !llvm.loop !6662

20:                                               ; preds = %12
  %21 = getelementptr inbounds %union.anon, %union.anon* %5, i32 0, i32 0, !dbg !6664
  %22 = load i32, i32* %21, align 4, !dbg !6664
  call void @llvm.dbg.value(metadata i32 %22, metadata !6641, metadata !DIExpression()), !dbg !6643
  %23 = load i32, i32* %3, align 4, !dbg !6665
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !6666
  %25 = shl i32 %7, 8, !dbg !6667
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !6640, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !6643
  %26 = and i32 %0, 255, !dbg !6668
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !6640, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !6643
  %27 = or i32 %25, %26, !dbg !6669
  call void @llvm.dbg.value(metadata i32 %27, metadata !6640, metadata !DIExpression()), !dbg !6643
  store i32 %24, i32* %3, align 4, !dbg !6670
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !6671
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !6672
  ret i32 %27, !dbg !6673
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #7 section ".ram_code" !dbg !6674 {
  %4 = alloca %union.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6678, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i8* %1, metadata !6679, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %2, metadata !6680, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i8* %1, metadata !6682, metadata !DIExpression()), !dbg !6684
  %5 = bitcast %union.anon* %4 to i8*, !dbg !6685
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #23, !dbg !6685
  call void @llvm.dbg.declare(metadata %union.anon* %4, metadata !6683, metadata !DIExpression()), !dbg !6686
  %6 = add i32 %0, -1610348544, !dbg !6687
  call void @llvm.dbg.value(metadata i32 %6, metadata !6678, metadata !DIExpression()), !dbg !6684
  %7 = ptrtoint i8* %1 to i32, !dbg !6688
  %8 = and i32 %7, 3, !dbg !6690
  %9 = icmp eq i32 %8, 0, !dbg !6691
  br i1 %9, label %10, label %23, !dbg !6692

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %2, metadata !6680, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %6, metadata !6678, metadata !DIExpression()), !dbg !6684
  %11 = icmp sgt i32 %2, 0, !dbg !6693
  br i1 %11, label %12, label %72, !dbg !6697

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %14, metadata !6680, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %15, metadata !6678, metadata !DIExpression()), !dbg !6684
  %16 = bitcast i8* %13 to i32*, !dbg !6698
  %17 = load i32, i32* %16, align 4, !dbg !6698
  %18 = inttoptr i32 %15 to i32*, !dbg !6698
  store volatile i32 %17, i32* %18, align 4, !dbg !6698
  %19 = add i32 %15, 4, !dbg !6700
  call void @llvm.dbg.value(metadata i32 %19, metadata !6678, metadata !DIExpression()), !dbg !6684
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !6701
  call void @llvm.dbg.value(metadata i8* %20, metadata !6682, metadata !DIExpression()), !dbg !6684
  %21 = add nsw i32 %14, -4, !dbg !6702
  call void @llvm.dbg.value(metadata i32 %21, metadata !6680, metadata !DIExpression()), !dbg !6684
  %22 = icmp ugt i32 %14, 4, !dbg !6693
  br i1 %22, label %12, label %72, !dbg !6697, !llvm.loop !6703

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !6705
  %25 = icmp eq i32 %24, 0, !dbg !6707
  call void @llvm.dbg.value(metadata i8* %1, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i8* %1, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %2, metadata !6680, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %2, metadata !6680, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %6, metadata !6678, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %6, metadata !6678, metadata !DIExpression()), !dbg !6684
  %26 = icmp sgt i32 %2, 0, !dbg !6708
  br i1 %25, label %31, label %27, !dbg !6709

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !6710

28:                                               ; preds = %27
  %29 = bitcast %union.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0
  br label %52, !dbg !6710

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !6713

32:                                               ; preds = %31
  %33 = bitcast %union.anon* %4 to [2 x i16]*
  %34 = bitcast %union.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %4, i32 0, i32 0
  br label %37, !dbg !6713

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %39, metadata !6680, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %40, metadata !6678, metadata !DIExpression()), !dbg !6684
  %41 = bitcast i8* %38 to i16*, !dbg !6716
  %42 = load i16, i16* %41, align 2, !dbg !6716
  store i16 %42, i16* %34, align 4, !dbg !6719
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !6720
  %44 = bitcast i8* %43 to i16*, !dbg !6720
  %45 = load i16, i16* %44, align 2, !dbg !6721
  store i16 %45, i16* %35, align 2, !dbg !6722
  %46 = load i32, i32* %36, align 4, !dbg !6723
  %47 = inttoptr i32 %40 to i32*, !dbg !6723
  store volatile i32 %46, i32* %47, align 4, !dbg !6723
  %48 = add i32 %40, 4, !dbg !6724
  call void @llvm.dbg.value(metadata i32 %48, metadata !6678, metadata !DIExpression()), !dbg !6684
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !6725
  call void @llvm.dbg.value(metadata i8* %49, metadata !6682, metadata !DIExpression()), !dbg !6684
  %50 = add nsw i32 %39, -4, !dbg !6726
  call void @llvm.dbg.value(metadata i32 %50, metadata !6680, metadata !DIExpression()), !dbg !6684
  %51 = icmp ugt i32 %39, 4, !dbg !6727
  br i1 %51, label %37, label %72, !dbg !6713, !llvm.loop !6728

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %54, metadata !6680, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %55, metadata !6678, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i8* %53, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 0, metadata !6681, metadata !DIExpression()), !dbg !6684
  br label %56, !dbg !6730

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %58, metadata !6681, metadata !DIExpression()), !dbg !6684
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !6734
  call void @llvm.dbg.value(metadata i8* %59, metadata !6682, metadata !DIExpression()), !dbg !6684
  %60 = load i8, i8* %57, align 1, !dbg !6737
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !6738
  store i8 %60, i8* %61, align 1, !dbg !6739
  %62 = add nuw nsw i32 %58, 1, !dbg !6740
  call void @llvm.dbg.value(metadata i32 %62, metadata !6681, metadata !DIExpression()), !dbg !6684
  %63 = icmp ult i32 %58, 3, !dbg !6741
  %64 = icmp ult i32 %62, %54, !dbg !6742
  %65 = select i1 %63, i1 %64, i1 false, !dbg !6742
  br i1 %65, label %56, label %66, !dbg !6730, !llvm.loop !6743

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !6745
  %68 = inttoptr i32 %55 to i32*, !dbg !6745
  store volatile i32 %67, i32* %68, align 4, !dbg !6745
  %69 = add i32 %55, 4, !dbg !6746
  call void @llvm.dbg.value(metadata i32 %69, metadata !6678, metadata !DIExpression()), !dbg !6684
  %70 = add nsw i32 %54, -4, !dbg !6747
  call void @llvm.dbg.value(metadata i8* %59, metadata !6682, metadata !DIExpression()), !dbg !6684
  call void @llvm.dbg.value(metadata i32 %70, metadata !6680, metadata !DIExpression()), !dbg !6684
  %71 = icmp sgt i32 %54, 4, !dbg !6748
  br i1 %71, label %52, label %72, !dbg !6710, !llvm.loop !6749

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #23, !dbg !6751
  ret void, !dbg !6751
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !6752 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !6756, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i8* %1, metadata !6757, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i8* %2, metadata !6758, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i16 %3, metadata !6759, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i16 %4, metadata !6760, metadata !DIExpression()), !dbg !6766
  %7 = bitcast i32* %6 to i8*, !dbg !6767
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !6767
  call void @llvm.dbg.value(metadata i8* %7, metadata !6765, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 0, metadata !6762, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !6764, metadata !DIExpression()), !dbg !6766
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !6764, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 0, metadata !6762, metadata !DIExpression()), !dbg !6766
  %9 = icmp eq i16 %3, 0, !dbg !6768
  br i1 %9, label %33, label %10, !dbg !6771

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !6764, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 %12, metadata !6762, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 0, metadata !6763, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 0, metadata !6761, metadata !DIExpression()), !dbg !6766
  store i32 0, i32* %6, align 4, !dbg !6772
  call void @llvm.dbg.value(metadata i32 0, metadata !6763, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 %12, metadata !6762, metadata !DIExpression()), !dbg !6766
  %13 = icmp ult i32 %12, %8, !dbg !6775
  br i1 %13, label %14, label %27, !dbg !6777

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !6763, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 %16, metadata !6762, metadata !DIExpression()), !dbg !6766
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !6778
  %18 = load i8, i8* %17, align 1, !dbg !6778
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !6780
  store i8 %18, i8* %19, align 1, !dbg !6781
  %20 = add nuw nsw i32 %16, 1, !dbg !6782
  call void @llvm.dbg.value(metadata i32 %20, metadata !6762, metadata !DIExpression()), !dbg !6766
  %21 = add nuw nsw i32 %15, 1, !dbg !6783
  call void @llvm.dbg.value(metadata i32 %21, metadata !6763, metadata !DIExpression()), !dbg !6766
  %22 = icmp ult i32 %20, %8, !dbg !6775
  %23 = icmp ult i32 %15, 3, !dbg !6784
  %24 = select i1 %22, i1 %23, i1 false, !dbg !6784
  br i1 %24, label %14, label %25, !dbg !6777, !llvm.loop !6785

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !6787
  br label %27, !dbg !6787

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !6787
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !6788
  call void @llvm.dbg.value(metadata i32 %28, metadata !6761, metadata !DIExpression()), !dbg !6766
  %30 = bitcast i8* %11 to i32*, !dbg !6787
  store volatile i32 %28, i32* %30, align 4, !dbg !6787
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !6789
  call void @llvm.dbg.value(metadata i8* %31, metadata !6764, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 %29, metadata !6762, metadata !DIExpression()), !dbg !6766
  %32 = icmp ult i32 %29, %8, !dbg !6768
  br i1 %32, label %10, label %33, !dbg !6771, !llvm.loop !6790

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !6792
  %34 = zext i16 %4 to i32, !dbg !6793
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !6794
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !6795
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !6796
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !6764, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !6766
  call void @llvm.dbg.value(metadata i8* %2, metadata !6758, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 0, metadata !6762, metadata !DIExpression()), !dbg !6766
  %35 = icmp eq i16 %4, 0, !dbg !6797
  br i1 %35, label %47, label %36, !dbg !6800

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !6801
  call void @llvm.dbg.value(metadata i8* %37, metadata !6764, metadata !DIExpression()), !dbg !6766
  br label %38, !dbg !6800

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !6758, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i8* %40, metadata !6764, metadata !DIExpression()), !dbg !6766
  call void @llvm.dbg.value(metadata i32 %41, metadata !6762, metadata !DIExpression()), !dbg !6766
  %42 = load volatile i8, i8* %40, align 1, !dbg !6802
  store i8 %42, i8* %39, align 1, !dbg !6804
  %43 = add nuw nsw i32 %41, 1, !dbg !6805
  call void @llvm.dbg.value(metadata i32 %43, metadata !6762, metadata !DIExpression()), !dbg !6766
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !6806
  call void @llvm.dbg.value(metadata i8* %44, metadata !6758, metadata !DIExpression()), !dbg !6766
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !6807
  call void @llvm.dbg.value(metadata i8* %45, metadata !6764, metadata !DIExpression()), !dbg !6766
  %46 = icmp eq i32 %43, %34, !dbg !6797
  br i1 %46, label %47, label %38, !dbg !6800, !llvm.loop !6808

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !6810
  ret void, !dbg !6810
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !6811 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !6815, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i8* %1, metadata !6816, metadata !DIExpression()), !dbg !6823
  call void @llvm.dbg.value(metadata i32 0, metadata !6817, metadata !DIExpression()), !dbg !6823
  %4 = icmp eq i8* %1, null, !dbg !6824
  br i1 %4, label %67, label %5, !dbg !6826

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6827
  call void @llvm.dbg.value(metadata i32 %27, metadata !6818, metadata !DIExpression()), !dbg !6823
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !6828

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !6823
  call void @llvm.dbg.value(metadata i32 %9, metadata !6817, metadata !DIExpression()), !dbg !6823
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !6829
  %11 = load i8, i8* %10, align 1, !dbg !6829
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !6830

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !6831

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6834
  %15 = and i32 %14, -2, !dbg !6834
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6834
  br label %41, !dbg !6838

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6839
  %18 = and i32 %17, -2, !dbg !6839
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6839
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !6842

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6844
  %22 = or i32 %21, 1, !dbg !6844
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6844
  br label %41, !dbg !6848

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6849
  %25 = or i32 %24, 1, !dbg !6849
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6849
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !6827
  %28 = icmp eq i32 %27, 0, !dbg !6852
  br i1 %7, label %29, label %35, !dbg !6855

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6856
  br i1 %28, label %33, label %31, !dbg !6859

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !6856
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6856
  br label %67, !dbg !6856

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !6856
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6856
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6860
  br i1 %28, label %39, label %37, !dbg !6863

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !6860
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6860
  br label %67, !dbg !6860

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !6860
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !6860
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !6864
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !6865
  %44 = load i8, i8* %43, align 1, !dbg !6865
  %45 = icmp eq i8 %44, 5, !dbg !6866
  br i1 %45, label %46, label %56, !dbg !6867

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #23, !dbg !6868
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !6869

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !6819, metadata !DIExpression(DW_OP_deref)), !dbg !6870
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !6871
  %50 = load i8, i8* %3, align 1, !dbg !6873
  call void @llvm.dbg.value(metadata i8 %50, metadata !6819, metadata !DIExpression()), !dbg !6870
  %51 = load i8, i8* %48, align 1, !dbg !6874
  %52 = and i8 %51, %50, !dbg !6875
  %53 = icmp eq i8 %52, 0, !dbg !6876
  br i1 %53, label %54, label %49, !dbg !6876, !llvm.loop !6877

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #23, !dbg !6879
  %55 = add i32 %9, 1, !dbg !6880
  br label %61, !dbg !6881

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !6882
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !6884
  %59 = load i8, i8* %58, align 1, !dbg !6884
  %60 = zext i8 %59 to i16, !dbg !6884
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !6885
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !6880
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !6886
  %64 = load i8, i8* %63, align 1, !dbg !6886
  %65 = zext i8 %64 to i32, !dbg !6886
  %66 = add i32 %42, %65, !dbg !6887
  call void @llvm.dbg.value(metadata i32 %66, metadata !6817, metadata !DIExpression()), !dbg !6823
  br label %8, !dbg !6828, !llvm.loop !6888

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !6890
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !6891 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !6895, metadata !DIExpression()), !dbg !6898
  call void @llvm.dbg.value(metadata i8* %1, metadata !6896, metadata !DIExpression()), !dbg !6898
  call void @llvm.dbg.value(metadata i8 %2, metadata !6897, metadata !DIExpression()), !dbg !6898
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !6897, metadata !DIExpression(DW_OP_deref)), !dbg !6898
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !6899
  ret void, !dbg !6900
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !6901 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !6905, metadata !DIExpression()), !dbg !6907
  call void @llvm.dbg.value(metadata i8* %1, metadata !6906, metadata !DIExpression()), !dbg !6907
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !6908
  ret void, !dbg !6909
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #8 section ".ram_code" !dbg !6910 {
  ret i32 78, !dbg !6914
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #9 section ".ram_code" !dbg !6915 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !6919
  %2 = and i32 %1, 7340032, !dbg !6921
  %3 = icmp ult i32 %2, 2097153, !dbg !6922
  %4 = select i1 %3, i32 30, i32 18, !dbg !6923
  ret i32 %4, !dbg !6924
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !6925 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6929, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.value(metadata i32 0, metadata !6930, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.value(metadata i32 0, metadata !6930, metadata !DIExpression()), !dbg !6931
  br label %2, !dbg !6932

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6930, metadata !DIExpression()), !dbg !6931
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !6934
  store i8 -1, i8* %4, align 1, !dbg !6937
  %5 = add nuw nsw i32 %3, 1, !dbg !6938
  call void @llvm.dbg.value(metadata i32 %5, metadata !6930, metadata !DIExpression()), !dbg !6931
  %6 = icmp eq i32 %5, 8, !dbg !6939
  br i1 %6, label %7, label %2, !dbg !6932, !llvm.loop !6940

7:                                                ; preds = %2
  ret i1 true, !dbg !6942
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !6943 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !6945, metadata !DIExpression()), !dbg !6946
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !6947
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !6948
  %3 = load i8, i8* %2, align 1, !dbg !6948
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !6949
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !6950
  %5 = ptrtoint i8* %4 to i32, !dbg !6951
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !6952
  %6 = bitcast i8* %4 to i32*, !dbg !6953
  %7 = load volatile i32, i32* %6, align 4, !dbg !6954
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !6955
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6956
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !6957
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6958
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !6959
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6960
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !6961
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !6962
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !6963
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6964
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !6965
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6966
  %14 = or i32 %13, 986880, !dbg !6967
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6968
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6969
  %16 = or i32 %15, 252645135, !dbg !6970
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6971
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !6972
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !6973
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !6974
  %20 = load i8, i8* %19, align 1, !dbg !6974
  %21 = zext i8 %20 to i32, !dbg !6975
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !6976
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #22, !dbg !6977
  ret void, !dbg !6978
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !6979 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !6980
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !6981
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !6982
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !6983
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !6984
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !6985
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !6986
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !6987
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !6988
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !6989
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6990
  %7 = and i32 %6, -252645136, !dbg !6991
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !6992
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !6993
  %9 = zext i8 %8 to i32, !dbg !6993
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !6994
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #22, !dbg !6995
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !6996
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !6998
  %13 = inttoptr i32 %12 to i32*, !dbg !6999
  %14 = load volatile i32, i32* %13, align 4, !dbg !7000
  %15 = icmp eq i32 %11, %14, !dbg !7001
  br i1 %15, label %17, label %16, !dbg !7002

16:                                               ; preds = %0, %16
  br label %16, !dbg !7003, !llvm.loop !7004

17:                                               ; preds = %0
  ret void, !dbg !7006
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7007 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7008
  %2 = icmp eq i32 %1, 0, !dbg !7010
  br i1 %2, label %3, label %5, !dbg !7011

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7012
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7014
  br label %5, !dbg !7015

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7016
  %7 = icmp eq i32 %6, 0, !dbg !7018
  br i1 %7, label %8, label %10, !dbg !7019

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7020
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7022
  br label %10, !dbg !7023

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7024
  %12 = and i32 %11, -256, !dbg !7025
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7026
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7027
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #22, !dbg !7028
  ret void, !dbg !7029
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7030 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7031
  %2 = icmp eq i32 %1, 0, !dbg !7033
  br i1 %2, label %4, label %3, !dbg !7034

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7035
  br label %4, !dbg !7037

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7038
  %6 = icmp eq i32 %5, 0, !dbg !7040
  br i1 %6, label %8, label %7, !dbg !7041

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7042
  br label %8, !dbg !7044

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #22, !dbg !7045
  ret void, !dbg !7046
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #8 section ".tcm_code" !dbg !7047 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7049, metadata !DIExpression()), !dbg !7050
  ret i32 0, !dbg !7051
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #8 section ".ram_code" !dbg !7052 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7054, metadata !DIExpression()), !dbg !7055
  ret i32 0, !dbg !7056
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7057 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7059, metadata !DIExpression()), !dbg !7060
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #22, !dbg !7061
  ret void, !dbg !7062
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !7063 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #22, !dbg !7066
  call void @llvm.dbg.value(metadata i32 %1, metadata !7065, metadata !DIExpression()), !dbg !7067
  ret i32 %1, !dbg !7068
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7071, metadata !DIExpression()), !dbg !7072
  tail call void @restore_interrupt_mask(i32 noundef %0) #22, !dbg !7073
  ret void, !dbg !7074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #8 section ".ram_code" !dbg !7075 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !7077, metadata !DIExpression()), !dbg !7078
  ret i32 0, !dbg !7079
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #8 section ".ram_code" !dbg !7080 {
  ret i32 0, !dbg !7081
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #11 section ".ram_code" !dbg !7082 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7086, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.value(metadata i8* %1, metadata !7087, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.value(metadata i32 %2, metadata !7088, metadata !DIExpression()), !dbg !7101
  %4 = ptrtoint i8* %0 to i32, !dbg !7102
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !7103
  %7 = and i32 %6, 3, !dbg !7103
  %8 = icmp eq i32 %7, 0, !dbg !7103
  br i1 %8, label %9, label %26, !dbg !7103

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !7104
  call void @llvm.dbg.value(metadata i32* %10, metadata !7090, metadata !DIExpression()), !dbg !7105
  %11 = bitcast i8* %1 to i32*, !dbg !7106
  call void @llvm.dbg.value(metadata i32* %11, metadata !7093, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.value(metadata i32 0, metadata !7089, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.value(metadata i32 0, metadata !7089, metadata !DIExpression()), !dbg !7101
  %12 = icmp ult i32 %2, 4, !dbg !7107
  br i1 %12, label %65, label %13, !dbg !7110

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !7110

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7089, metadata !DIExpression()), !dbg !7101
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !7111
  %18 = load i32, i32* %17, align 4, !dbg !7111
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !7114
  %20 = load i32, i32* %19, align 4, !dbg !7114
  %21 = icmp eq i32 %18, %20, !dbg !7115
  %22 = add nuw nsw i32 %16, 1, !dbg !7116
  call void @llvm.dbg.value(metadata i32 %22, metadata !7089, metadata !DIExpression()), !dbg !7101
  %23 = xor i1 %21, true, !dbg !7117
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !7117
  call void @llvm.dbg.value(metadata i32 %22, metadata !7089, metadata !DIExpression()), !dbg !7101
  br i1 %25, label %59, label %15, !dbg !7117, !llvm.loop !7118

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !7120
  %28 = icmp eq i32 %27, 0, !dbg !7120
  br i1 %28, label %31, label %29, !dbg !7120

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !7089, metadata !DIExpression()), !dbg !7101
  %30 = icmp eq i32 %2, 0, !dbg !7121
  br i1 %30, label %65, label %48, !dbg !7124

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !7125
  call void @llvm.dbg.value(metadata i16* %32, metadata !7094, metadata !DIExpression()), !dbg !7126
  %33 = bitcast i8* %1 to i16*, !dbg !7127
  call void @llvm.dbg.value(metadata i16* %33, metadata !7097, metadata !DIExpression()), !dbg !7126
  call void @llvm.dbg.value(metadata i32 0, metadata !7089, metadata !DIExpression()), !dbg !7101
  call void @llvm.dbg.value(metadata i32 0, metadata !7089, metadata !DIExpression()), !dbg !7101
  %34 = icmp ult i32 %2, 2, !dbg !7128
  br i1 %34, label %65, label %35, !dbg !7131

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !7131

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7089, metadata !DIExpression()), !dbg !7101
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !7132
  %40 = load i16, i16* %39, align 2, !dbg !7132
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !7135
  %42 = load i16, i16* %41, align 2, !dbg !7135
  %43 = icmp eq i16 %40, %42, !dbg !7136
  %44 = add nuw nsw i32 %38, 1, !dbg !7137
  call void @llvm.dbg.value(metadata i32 %44, metadata !7089, metadata !DIExpression()), !dbg !7101
  %45 = xor i1 %43, true, !dbg !7138
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !7138
  call void @llvm.dbg.value(metadata i32 %44, metadata !7089, metadata !DIExpression()), !dbg !7101
  br i1 %47, label %61, label %37, !dbg !7138, !llvm.loop !7139

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7089, metadata !DIExpression()), !dbg !7101
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !7141
  %51 = load i8, i8* %50, align 1, !dbg !7141
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !7144
  %53 = load i8, i8* %52, align 1, !dbg !7144
  %54 = icmp eq i8 %51, %53, !dbg !7145
  %55 = add nuw i32 %49, 1, !dbg !7146
  call void @llvm.dbg.value(metadata i32 %55, metadata !7089, metadata !DIExpression()), !dbg !7101
  %56 = xor i1 %54, true, !dbg !7147
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !7147
  call void @llvm.dbg.value(metadata i32 %55, metadata !7089, metadata !DIExpression()), !dbg !7101
  br i1 %58, label %63, label %48, !dbg !7147, !llvm.loop !7148

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !7150
  br label %65, !dbg !7150

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !7150
  br label %65, !dbg !7150

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !7150
  br label %65, !dbg !7150

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !7101
  ret i1 %66, !dbg !7150
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !7151 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7155, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata i8* %1, metadata !7156, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata i32 %2, metadata !7157, metadata !DIExpression()), !dbg !7166
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7167
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !7158, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata i8* %0, metadata !7159, metadata !DIExpression()), !dbg !7166
  %7 = bitcast i8** %4 to i8*, !dbg !7168
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !7168
  call void @llvm.dbg.value(metadata i8* %1, metadata !7160, metadata !DIExpression()), !dbg !7166
  store i8* %1, i8** %4, align 4, !dbg !7169
  call void @llvm.dbg.value(metadata i32 0, metadata !7161, metadata !DIExpression()), !dbg !7166
  %8 = bitcast i32* %5 to i8*, !dbg !7170
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #23, !dbg !7170
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7171
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !7172
  store i8 1, i8* %9, align 4, !dbg !7173
  call void @llvm.dbg.value(metadata i32 %2, metadata !7157, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata i8* %0, metadata !7159, metadata !DIExpression()), !dbg !7166
  %10 = icmp eq i32 %2, 0, !dbg !7174
  br i1 %10, label %73, label %11, !dbg !7175

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !7176
  call void @llvm.dbg.value(metadata i32 %12, metadata !7159, metadata !DIExpression()), !dbg !7166
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !7175

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !7157, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata i32 %20, metadata !7159, metadata !DIExpression()), !dbg !7166
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7177
  %22 = shl i32 %21, 1, !dbg !7179
  %23 = add i32 %22, -1, !dbg !7180
  %24 = and i32 %23, %20, !dbg !7181
  %25 = sub i32 %22, %24, !dbg !7182
  %26 = icmp ugt i32 %19, %25, !dbg !7183
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !7184
  call void @llvm.dbg.value(metadata i32 %27, metadata !7163, metadata !DIExpression()), !dbg !7166
  call void @llvm.dbg.value(metadata i32 %27, metadata !7162, metadata !DIExpression()), !dbg !7166
  store i32 %27, i32* %5, align 4, !dbg !7185
  %28 = load i32, i32* %13, align 4, !dbg !7186
  %29 = and i32 %28, 16, !dbg !7188
  %30 = icmp eq i32 %29, 0, !dbg !7188
  br i1 %30, label %31, label %32, !dbg !7189

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !7190
  br label %32, !dbg !7192

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !7193
  %34 = icmp eq i8 %33, 4, !dbg !7195
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7196
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !7196
  %37 = load i8, i8* %36, align 1, !dbg !7196
  %38 = zext i8 %37 to i32, !dbg !7196
  br i1 %34, label %39, label %43, !dbg !7197

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !7160, metadata !DIExpression(DW_OP_deref)), !dbg !7166
  call void @llvm.dbg.value(metadata i32* %5, metadata !7162, metadata !DIExpression(DW_OP_deref)), !dbg !7166
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #22, !dbg !7198
  call void @llvm.dbg.value(metadata i32 %40, metadata !7161, metadata !DIExpression()), !dbg !7166
  %41 = load i8*, i8** %4, align 4, !dbg !7200
  call void @llvm.dbg.value(metadata i8* %41, metadata !7160, metadata !DIExpression()), !dbg !7166
  %42 = load i32, i32* %5, align 4, !dbg !7201
  call void @llvm.dbg.value(metadata i32 %42, metadata !7162, metadata !DIExpression()), !dbg !7166
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #22, !dbg !7202
  br label %47, !dbg !7203

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #22, !dbg !7204
  call void @llvm.dbg.value(metadata i32 %44, metadata !7161, metadata !DIExpression()), !dbg !7166
  %45 = load i8*, i8** %4, align 4, !dbg !7206
  call void @llvm.dbg.value(metadata i8* %45, metadata !7160, metadata !DIExpression()), !dbg !7166
  %46 = load i32, i32* %5, align 4, !dbg !7207
  call void @llvm.dbg.value(metadata i32 %46, metadata !7162, metadata !DIExpression()), !dbg !7166
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #22, !dbg !7208
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !7196
  call void @llvm.dbg.value(metadata i32 %48, metadata !7161, metadata !DIExpression()), !dbg !7166
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !7209
  call void @llvm.dbg.value(metadata i32 %49, metadata !7165, metadata !DIExpression()), !dbg !7166
  %50 = load i8, i8* %14, align 1, !dbg !7210
  %51 = zext i8 %50 to i32, !dbg !7211
  %52 = add i32 %27, 1, !dbg !7212
  %53 = add i32 %52, %51, !dbg !7213
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7214
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7215
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7216
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !7217
  %54 = load i16, i16* %16, align 2, !dbg !7218
  call void @SFI_MacEnable(i16 noundef zeroext %54) #22, !dbg !7219
  %55 = load i16, i16* %16, align 2, !dbg !7220
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #22, !dbg !7221
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !7222
  br label %56, !dbg !7223

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7224
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !7226
  %59 = load i8, i8* %58, align 1, !dbg !7226
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !7227
  call void @llvm.dbg.value(metadata i32 %60, metadata !7164, metadata !DIExpression()), !dbg !7166
  %61 = load i8*, i8** %17, align 4, !dbg !7228
  %62 = load i8, i8* %61, align 1, !dbg !7230
  %63 = zext i8 %62 to i32, !dbg !7230
  %64 = and i32 %60, %63, !dbg !7231
  %65 = icmp eq i32 %64, 0, !dbg !7232
  br i1 %65, label %66, label %56, !dbg !7233, !llvm.loop !7234

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7236
  %67 = load i32, i32* %5, align 4, !dbg !7237
  call void @llvm.dbg.value(metadata i32 %67, metadata !7162, metadata !DIExpression()), !dbg !7166
  %68 = load i8*, i8** %4, align 4, !dbg !7238
  call void @llvm.dbg.value(metadata i8* %68, metadata !7160, metadata !DIExpression()), !dbg !7166
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !7238
  call void @llvm.dbg.value(metadata i8* %69, metadata !7160, metadata !DIExpression()), !dbg !7166
  store i8* %69, i8** %4, align 4, !dbg !7238
  %70 = sub i32 %19, %27, !dbg !7239
  call void @llvm.dbg.value(metadata i32 %70, metadata !7157, metadata !DIExpression()), !dbg !7166
  %71 = add i32 %27, %20, !dbg !7240
  call void @llvm.dbg.value(metadata i32 %71, metadata !7159, metadata !DIExpression()), !dbg !7166
  %72 = icmp eq i32 %70, 0, !dbg !7174
  br i1 %72, label %73, label %18, !dbg !7175, !llvm.loop !7241

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !7243
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7244
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #23, !dbg !7245
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !7245
  ret void, !dbg !7245
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7246 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7250, metadata !DIExpression()), !dbg !7252
  br label %2, !dbg !7253

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !7254
  call void @llvm.dbg.value(metadata i32 %3, metadata !7251, metadata !DIExpression()), !dbg !7252
  %4 = icmp eq i32 %3, 0, !dbg !7256
  br i1 %4, label %5, label %2, !dbg !7257, !llvm.loop !7258

5:                                                ; preds = %2
  ret void, !dbg !7260
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7261 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7263, metadata !DIExpression()), !dbg !7264
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7265
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !7265
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !7266
  %5 = load i8, i8* %4, align 1, !dbg !7266
  %6 = zext i8 %5 to i32, !dbg !7267
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !7268
  ret void, !dbg !7269
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7270 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7273
  call void @llvm.dbg.value(metadata i32 %1, metadata !7272, metadata !DIExpression()), !dbg !7274
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !7275
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7276
  ret void, !dbg !7277
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !7278 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7282, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.value(metadata i8 %1, metadata !7283, metadata !DIExpression()), !dbg !7286
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7287
  call void @llvm.dbg.value(metadata i32 %3, metadata !7284, metadata !DIExpression()), !dbg !7286
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7288
  %5 = load i16, i16* %4, align 2, !dbg !7288
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #22, !dbg !7289
  %6 = zext i8 %1 to i32, !dbg !7290
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7291
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7292
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7293
  %7 = load i16, i16* %4, align 2, !dbg !7294
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #22, !dbg !7295
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7296
  %9 = lshr i32 %8, 8, !dbg !7297
  %10 = and i32 %9, 255, !dbg !7298
  call void @llvm.dbg.value(metadata i32 %10, metadata !7285, metadata !DIExpression()), !dbg !7286
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !7299
  ret i32 %10, !dbg !7300
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7301 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7304
  call void @llvm.dbg.value(metadata i32 %1, metadata !7303, metadata !DIExpression()), !dbg !7305
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !7306
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7307
  %3 = and i32 %2, -513, !dbg !7307
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7307
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7310
  ret void, !dbg !7311
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7312 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7314, metadata !DIExpression()), !dbg !7316
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7317
  call void @llvm.dbg.value(metadata i32 %2, metadata !7315, metadata !DIExpression()), !dbg !7316
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !7318
  br i1 %3, label %4, label %5, !dbg !7320

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !7321
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7323
  ret void, !dbg !7324

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7325
  tail call void @Flash_ReturnReady() #21, !dbg !7327
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !7327
  unreachable, !dbg !7327
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !7331 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !7333, metadata !DIExpression()), !dbg !7338
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7339
  call void @llvm.dbg.value(metadata i32 %1, metadata !7335, metadata !DIExpression()), !dbg !7338
  %2 = tail call i32 @get_NOR_init_status() #22, !dbg !7340
  %3 = icmp eq i32 %2, 0, !dbg !7342
  br i1 %3, label %4, label %125, !dbg !7343

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7344
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7345
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !7333, metadata !DIExpression()), !dbg !7338
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !7347
  %7 = load i32, i32* %6, align 4, !dbg !7347
  %8 = xor i32 %7, -1, !dbg !7347
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !7347
  %10 = load %struct.vdma_config_t*, %struct.vdma_config_t** %9, align 4, !dbg !7347
  %11 = ptrtoint %struct.vdma_config_t* %10 to i32, !dbg !7347
  %12 = icmp eq i32 %8, %11, !dbg !7347
  br i1 %12, label %14, label %13, !dbg !7350

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !7351
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !7351
  unreachable, !dbg !7351

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7353
  %16 = icmp ult i32 %15, 16, !dbg !7355
  br i1 %16, label %17, label %34, !dbg !7356

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7357
  %19 = load i8, i8* %18, align 4, !dbg !7357
  %20 = icmp eq i8 %19, 1, !dbg !7358
  br i1 %20, label %21, label %34, !dbg !7359

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !7360

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7362
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !7364
  %27 = load i8, i8* %26, align 1, !dbg !7364
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !7365
  call void @llvm.dbg.value(metadata i32 %28, metadata !7334, metadata !DIExpression()), !dbg !7338
  %29 = load i8*, i8** %23, align 4, !dbg !7366
  %30 = load i8, i8* %29, align 1, !dbg !7368
  %31 = zext i8 %30 to i32, !dbg !7368
  %32 = and i32 %28, %31, !dbg !7369
  %33 = icmp eq i32 %32, 0, !dbg !7370
  br i1 %33, label %34, label %24, !dbg !7371, !llvm.loop !7372

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7374, !range !2545
  %36 = icmp ne i8 %35, 0, !dbg !7374
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !7376
  br i1 %39, label %116, label %40, !dbg !7376

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !7377
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7377
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !7379
  %44 = load i8, i8* %43, align 1, !dbg !7379
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !7380
  call void @llvm.dbg.value(metadata i32 %45, metadata !7334, metadata !DIExpression()), !dbg !7338
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !7381
  %47 = load i8*, i8** %46, align 4, !dbg !7381
  %48 = load i8, i8* %47, align 1, !dbg !7383
  %49 = zext i8 %48 to i32, !dbg !7383
  %50 = and i32 %45, %49, !dbg !7384
  %51 = icmp eq i32 %50, 0, !dbg !7385
  br i1 %51, label %85, label %52, !dbg !7386

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !7387
  br label %53, !dbg !7389

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7390
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !7392
  %56 = load i8, i8* %55, align 1, !dbg !7392
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !7393
  call void @llvm.dbg.value(metadata i32 %57, metadata !7334, metadata !DIExpression()), !dbg !7338
  %58 = load i8*, i8** %46, align 4, !dbg !7394
  %59 = load i8, i8* %58, align 1, !dbg !7396
  %60 = zext i8 %59 to i32, !dbg !7396
  %61 = and i32 %57, %60, !dbg !7397
  %62 = icmp eq i32 %61, 0, !dbg !7398
  br i1 %62, label %63, label %53, !dbg !7399, !llvm.loop !7400

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7402
  %65 = load i32, i32* %64, align 4, !dbg !7402
  %66 = and i32 %65, 4, !dbg !7404
  %67 = icmp eq i32 %66, 0, !dbg !7404
  br i1 %67, label %84, label %68, !dbg !7405

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !7406
  %70 = load i8, i8* %69, align 4, !dbg !7406
  %71 = icmp eq i8 %70, 2, !dbg !7407
  br i1 %71, label %72, label %84, !dbg !7408

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7409
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7411
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7412
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7413
  %74 = load i16, i16* %73, align 2, !dbg !7413
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #22, !dbg !7414
  %75 = load i16, i16* %73, align 2, !dbg !7415
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #22, !dbg !7416
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7417
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7418
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7419
  %76 = load i16, i16* %73, align 2, !dbg !7420
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #22, !dbg !7421
  %77 = load i16, i16* %73, align 2, !dbg !7422
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #22, !dbg !7423
  br label %78, !dbg !7424

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7425
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7427
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7428
  %79 = load i16, i16* %73, align 2, !dbg !7429
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #22, !dbg !7430
  %80 = load i16, i16* %73, align 2, !dbg !7431
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #22, !dbg !7432
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7433
  call void @llvm.dbg.value(metadata i32 %81, metadata !7334, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !7338
  %82 = and i32 %81, 256, !dbg !7434
  %83 = icmp eq i32 %82, 0, !dbg !7434
  br i1 %83, label %84, label %78, !dbg !7434, !llvm.loop !7435

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !7437
  br label %116, !dbg !7438

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !7439
  %87 = load i32, i32* %86, align 4, !dbg !7439
  %88 = and i32 %87, 2, !dbg !7442
  %89 = icmp eq i32 %88, 0, !dbg !7442
  br i1 %89, label %115, label %90, !dbg !7443

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !7444
  %92 = load %struct.anon*, %struct.anon** %91, align 4, !dbg !7444
  %93 = icmp eq %struct.anon* %92, null, !dbg !7445
  br i1 %93, label %94, label %115, !dbg !7446

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !7447
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !7449
  %97 = load i8, i8* %96, align 1, !dbg !7449
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !7450
  call void @llvm.dbg.value(metadata i32 %98, metadata !7334, metadata !DIExpression()), !dbg !7338
  %99 = load i8*, i8** %46, align 4, !dbg !7451
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !7453
  %101 = load i8, i8* %100, align 1, !dbg !7453
  %102 = zext i8 %101 to i32, !dbg !7453
  %103 = and i32 %98, %102, !dbg !7454
  %104 = icmp eq i32 %103, 0, !dbg !7455
  br i1 %104, label %105, label %115, !dbg !7456

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !7457
  %107 = load i8, i8* %106, align 1, !dbg !7457
  %108 = zext i8 %107 to i32, !dbg !7457
  %109 = and i32 %98, %108, !dbg !7458
  %110 = icmp eq i32 %109, 0, !dbg !7459
  br i1 %110, label %111, label %115, !dbg !7460

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !7461
  %113 = load i16, i16* %112, align 2, !dbg !7461
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #22, !dbg !7463
  %114 = load i16, i16* %112, align 2, !dbg !7464
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #22, !dbg !7465
  br label %115, !dbg !7466

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7467
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !7468
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !7469
  %118 = sub i32 0, %117, !dbg !7469
  call void @llvm.dbg.value(metadata i32 %118, metadata !7336, metadata !DIExpression()), !dbg !7470
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7471
  %120 = icmp ult i32 %119, %118, !dbg !7473
  br i1 %120, label %121, label %122, !dbg !7474

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !7475
  br label %122, !dbg !7477

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7478
  %124 = and i32 %123, -513, !dbg !7478
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7478
  br label %125, !dbg !7481

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7338
  ret void, !dbg !7482
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7483 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7485, metadata !DIExpression()), !dbg !7489
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !7490
  %3 = icmp eq i32 %2, -1, !dbg !7492
  br i1 %3, label %12, label %4, !dbg !7493

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !7487, metadata !DIExpression()), !dbg !7489
  %5 = sub i32 0, %2, !dbg !7494
  call void @llvm.dbg.value(metadata i32 %5, metadata !7488, metadata !DIExpression()), !dbg !7489
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7496
  %7 = load i8, i8* %6, align 4, !dbg !7496
  %8 = zext i8 %7 to i32, !dbg !7498
  %9 = icmp ugt i32 %8, %5, !dbg !7499
  br i1 %9, label %10, label %12, !dbg !7500

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !7501
  tail call void @DelayAWhile_UST(i32 noundef %11) #22, !dbg !7503
  br label %12, !dbg !7504

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7505
  call void @llvm.dbg.value(metadata i32 %13, metadata !7486, metadata !DIExpression()), !dbg !7489
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7506
  %15 = load i16, i16* %14, align 2, !dbg !7506
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7507
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !7507
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !7508
  %19 = load i8, i8* %18, align 1, !dbg !7508
  %20 = zext i8 %19 to i32, !dbg !7509
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #22, !dbg !7510
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !7511
  ret void, !dbg !7512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7513 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7516
  call void @llvm.dbg.value(metadata i32 %1, metadata !7515, metadata !DIExpression()), !dbg !7517
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7518
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7519
  %3 = and i32 %2, -513, !dbg !7519
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7519
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7522
  ret void, !dbg !7523
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7524 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7528, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata i32 %1, metadata !7529, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.value(metadata i8 %2, metadata !7530, metadata !DIExpression()), !dbg !7532
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7533
  call void @llvm.dbg.value(metadata i32 %4, metadata !7531, metadata !DIExpression()), !dbg !7532
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7534
  %6 = load i16, i16* %5, align 2, !dbg !7534
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #22, !dbg !7535
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7536
  %7 = zext i8 %2 to i32, !dbg !7537
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7538
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7539
  %8 = load i16, i16* %5, align 2, !dbg !7540
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #22, !dbg !7541
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !7542
  ret void, !dbg !7543
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !7544 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7549
  call void @llvm.dbg.value(metadata i32 %1, metadata !7548, metadata !DIExpression()), !dbg !7550
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !7551
  br i1 %2, label %4, label %3, !dbg !7553

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !7554
  br label %4, !dbg !7556

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !7557
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7557
  ret i32 %5, !dbg !7558
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !7559 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7566
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7563, metadata !DIExpression()), !dbg !7567
  call void @llvm.dbg.value(metadata i8 0, metadata !7565, metadata !DIExpression()), !dbg !7567
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7568
  %3 = load i32, i32* %2, align 4, !dbg !7568
  %4 = xor i32 %3, -1, !dbg !7568
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7568
  %6 = load %struct.vdma_config_t*, %struct.vdma_config_t** %5, align 4, !dbg !7568
  %7 = ptrtoint %struct.vdma_config_t* %6 to i32, !dbg !7568
  %8 = icmp eq i32 %4, %7, !dbg !7568
  br i1 %8, label %10, label %9, !dbg !7571

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7572
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !7572
  unreachable, !dbg !7572

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7574
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7575
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7575
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !7576
  %14 = load i8, i8* %13, align 1, !dbg !7576
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !7577
  call void @llvm.dbg.value(metadata i32 %15, metadata !7564, metadata !DIExpression()), !dbg !7567
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7578
  %17 = load i8*, i8** %16, align 4, !dbg !7578
  %18 = load i8, i8* %17, align 1, !dbg !7580
  %19 = zext i8 %18 to i32, !dbg !7580
  %20 = and i32 %15, %19, !dbg !7581
  %21 = icmp eq i32 %20, 0, !dbg !7582
  br i1 %21, label %22, label %23, !dbg !7583

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7584
  call void @llvm.dbg.value(metadata i8 1, metadata !7565, metadata !DIExpression()), !dbg !7567
  br label %23, !dbg !7586

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !7565, metadata !DIExpression()), !dbg !7567
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7587
  ret i1 %21, !dbg !7588
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7589 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7591, metadata !DIExpression()), !dbg !7592
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7593, !range !2545
  %2 = icmp eq i8 %1, 0, !dbg !7593
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7593
  %4 = icmp eq i8 %3, 0, !dbg !7593
  %5 = select i1 %2, i1 true, i1 %4, !dbg !7593
  br i1 %5, label %6, label %7, !dbg !7593

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7596
  tail call void @Flash_ReturnReady() #21, !dbg !7598
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !7598
  unreachable, !dbg !7598

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7602
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !7591, metadata !DIExpression()), !dbg !7592
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !7603
  ret void, !dbg !7604
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7605 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7607, metadata !DIExpression()), !dbg !7609
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7610
  call void @llvm.dbg.value(metadata i32 %2, metadata !7608, metadata !DIExpression()), !dbg !7609
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7611
  %4 = load i16, i16* %3, align 2, !dbg !7611
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7612
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !7612
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !7613
  %8 = load i8, i8* %7, align 1, !dbg !7613
  %9 = zext i8 %8 to i32, !dbg !7614
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #22, !dbg !7615
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !7616
  %11 = load i8, i8* %10, align 4, !dbg !7616
  %12 = icmp eq i8 %11, 0, !dbg !7618
  br i1 %12, label %14, label %13, !dbg !7619

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !7620
  br label %14, !dbg !7622

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !7623
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !7624
  ret void, !dbg !7625
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7626 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7629
  call void @llvm.dbg.value(metadata i32 %1, metadata !7628, metadata !DIExpression()), !dbg !7630
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7631
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7632
  ret void, !dbg !7633
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !7634 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7638
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7636, metadata !DIExpression()), !dbg !7639
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7640, !range !2545
  %3 = icmp ne i8 %2, 0, !dbg !7640
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !7640
  %5 = icmp eq i8 %4, 0, !dbg !7640
  %6 = select i1 %3, i1 %5, i1 false, !dbg !7640
  br i1 %6, label %8, label %7, !dbg !7640

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !7643
  tail call void @Flash_ReturnReady() #21, !dbg !7645
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !7645
  unreachable, !dbg !7645

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !7649
  %10 = load i32, i32* %9, align 4, !dbg !7649
  %11 = xor i32 %10, -1, !dbg !7649
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !7649
  %13 = load %struct.vdma_config_t*, %struct.vdma_config_t** %12, align 4, !dbg !7649
  %14 = ptrtoint %struct.vdma_config_t* %13 to i32, !dbg !7649
  %15 = icmp eq i32 %11, %14, !dbg !7649
  br i1 %15, label %17, label %16, !dbg !7652

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !7653
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !7653
  unreachable, !dbg !7653

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !7655
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !7656

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !7657
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !7659
  %23 = load i8, i8* %22, align 1, !dbg !7659
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !7660
  call void @llvm.dbg.value(metadata i32 %24, metadata !7637, metadata !DIExpression()), !dbg !7639
  %25 = load i8*, i8** %19, align 4, !dbg !7661
  %26 = load i8, i8* %25, align 1, !dbg !7663
  %27 = zext i8 %26 to i32, !dbg !7663
  %28 = and i32 %24, %27, !dbg !7664
  %29 = icmp eq i32 %28, 0, !dbg !7665
  br i1 %29, label %30, label %20, !dbg !7666, !llvm.loop !7667

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !7669
  ret void, !dbg !7670
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #8 section ".ram_code" !dbg !7671 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7673, metadata !DIExpression()), !dbg !7674
  ret void, !dbg !7675
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #5 !dbg !7676 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7699, metadata !DIExpression()), !dbg !7702
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7700, metadata !DIExpression()), !dbg !7702
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7703
  %4 = load i8*, i8** %3, align 4, !dbg !7703
  call void @llvm.dbg.value(metadata i8* %4, metadata !7701, metadata !DIExpression()), !dbg !7702
  store i8 1, i8* %4, align 1, !dbg !7704
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7705
  store i8 2, i8* %5, align 1, !dbg !7706
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !7707
  store i8 8, i8* %6, align 1, !dbg !7708
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !7709
  store i8 4, i8* %7, align 1, !dbg !7710
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !7711
  store i8 60, i8* %8, align 1, !dbg !7712
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !7713
  store i8 -128, i8* %9, align 1, !dbg !7714
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !7715
  store i8 96, i8* %10, align 1, !dbg !7716
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7717
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7717
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !7718
  store i8 43, i8* %13, align 1, !dbg !7719
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7720
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !7721
  store i8 43, i8* %15, align 1, !dbg !7722
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7723
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !7724
  store i8 47, i8* %17, align 1, !dbg !7725
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7726
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !7727
  store i8 5, i8* %19, align 1, !dbg !7728
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7729
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !7730
  store i8 1, i8* %21, align 1, !dbg !7731
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7732
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !7733
  store i8 43, i8* %23, align 1, !dbg !7734
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7735
  store i8 22, i8* %24, align 4, !dbg !7736
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !7737
  %26 = load i8, i8* %25, align 1, !dbg !7737
  %27 = icmp eq i8 %26, 32, !dbg !7739
  br i1 %27, label %28, label %49, !dbg !7740

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !7741
  %30 = load i8, i8* %29, align 1, !dbg !7741
  %31 = icmp eq i8 %30, 24, !dbg !7742
  br i1 %31, label %32, label %41, !dbg !7743

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7744
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !7746
  store i8 117, i8* %34, align 1, !dbg !7747
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7748
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !7749
  store i8 122, i8* %36, align 1, !dbg !7750
  %37 = load i8, i8* %25, align 1, !dbg !7751
  %38 = icmp eq i8 %37, 32, !dbg !7753
  br i1 %38, label %39, label %49, !dbg !7754

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !7756
  br label %41, !dbg !7756

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !7756
  %43 = icmp eq i8 %42, 22, !dbg !7757
  br i1 %43, label %44, label %49, !dbg !7758

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7759
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !7761
  store i8 117, i8* %46, align 1, !dbg !7762
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !7763
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !7764
  store i8 122, i8* %48, align 1, !dbg !7765
  br label %49, !dbg !7766

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !7767
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !7768
  ret i32 0, !dbg !7769
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !7770 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !7772, metadata !DIExpression()), !dbg !7776
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !7777
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !7773, metadata !DIExpression()), !dbg !7776
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !7778
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !7779
  %5 = load i8, i8* %4, align 1, !dbg !7781
  %6 = icmp eq i8 %5, -62, !dbg !7782
  br i1 %6, label %7, label %15, !dbg !7783

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !7784
  %9 = load i8, i8* %8, align 1, !dbg !7784
  %10 = icmp eq i8 %9, 32, !dbg !7785
  br i1 %10, label %11, label %15, !dbg !7786

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !7787
  %13 = load i8, i8* %12, align 1, !dbg !7787
  %14 = icmp eq i8 %13, 22, !dbg !7788
  br i1 %14, label %48, label %15, !dbg !7789

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !7790
  %17 = bitcast i8* %16 to i16*, !dbg !7790
  %18 = load i16, i16* %17, align 2, !dbg !7790
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !7791
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !7791
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7791
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !7792
  %23 = load i8, i8* %22, align 1, !dbg !7792
  %24 = zext i8 %23 to i32, !dbg !7793
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #22, !dbg !7794
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !7795
  %25 = load i16, i16* %17, align 2, !dbg !7796
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7797
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !7798
  call void @llvm.dbg.value(metadata i8* %2, metadata !7775, metadata !DIExpression(DW_OP_deref)), !dbg !7776
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #22, !dbg !7799
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !7800
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !7801
  %30 = load i8, i8* %29, align 1, !dbg !7801
  %31 = zext i8 %30 to i32, !dbg !7802
  call void @llvm.dbg.value(metadata i32 %31, metadata !7774, metadata !DIExpression()), !dbg !7776
  %32 = shl nuw nsw i32 %31, 8, !dbg !7803
  %33 = load i8, i8* %2, align 1, !dbg !7804
  call void @llvm.dbg.value(metadata i8 %33, metadata !7775, metadata !DIExpression()), !dbg !7776
  %34 = zext i8 %33 to i32, !dbg !7804
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !7805
  %36 = bitcast i8* %35 to i8**, !dbg !7805
  %37 = load i8*, i8** %36, align 4, !dbg !7805
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !7806
  %39 = load i8, i8* %38, align 1, !dbg !7806
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !7807
  %41 = load i8, i8* %40, align 1, !dbg !7807
  %42 = or i8 %41, %39, !dbg !7808
  %43 = zext i8 %42 to i32, !dbg !7808
  %44 = xor i32 %43, -1, !dbg !7809
  %45 = and i32 %44, %34, !dbg !7810
  %46 = or i32 %45, %32, !dbg !7811
  call void @llvm.dbg.value(metadata i32 %46, metadata !7774, metadata !DIExpression()), !dbg !7776
  %47 = load i16, i16* %17, align 2, !dbg !7812
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #22, !dbg !7813
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !7814
  br label %48, !dbg !7815

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #23, !dbg !7816
  ret i32 0, !dbg !7816
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7817 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7819, metadata !DIExpression()), !dbg !7821
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #23, !dbg !7822
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !7823

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !7824
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !7826
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !7827
  call void @llvm.dbg.value(metadata i8* %2, metadata !7820, metadata !DIExpression(DW_OP_deref)), !dbg !7821
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #22, !dbg !7828
  %10 = load i8, i8* %2, align 1, !dbg !7829
  call void @llvm.dbg.value(metadata i8 %10, metadata !7820, metadata !DIExpression()), !dbg !7821
  %11 = load i8*, i8** %5, align 4, !dbg !7830
  %12 = load i8, i8* %11, align 1, !dbg !7831
  %13 = and i8 %12, %10, !dbg !7832
  %14 = icmp eq i8 %13, 0, !dbg !7833
  br i1 %14, label %15, label %6, !dbg !7834, !llvm.loop !7835

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #23, !dbg !7837
  ret void, !dbg !7837
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #5 !dbg !7838 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7840, metadata !DIExpression()), !dbg !7843
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7841, metadata !DIExpression()), !dbg !7843
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !7844
  %4 = load i8*, i8** %3, align 4, !dbg !7844
  call void @llvm.dbg.value(metadata i8* %4, metadata !7842, metadata !DIExpression()), !dbg !7843
  store i8 1, i8* %4, align 1, !dbg !7845
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !7846
  store i8 2, i8* %5, align 1, !dbg !7847
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !7848
  store i8 -128, i8* %6, align 1, !dbg !7849
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !7850
  store i8 -128, i8* %7, align 1, !dbg !7851
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !7852
  store i8 60, i8* %8, align 1, !dbg !7853
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !7854
  store i8 -128, i8* %9, align 1, !dbg !7855
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7856
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7856
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !7857
  store i8 -97, i8* %12, align 1, !dbg !7858
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7859
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !7860
  store i8 53, i8* %14, align 1, !dbg !7861
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7862
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !7863
  store i8 53, i8* %16, align 1, !dbg !7864
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7865
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !7866
  store i8 5, i8* %18, align 1, !dbg !7867
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7868
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !7869
  store i8 1, i8* %20, align 1, !dbg !7870
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7871
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !7872
  store i8 117, i8* %22, align 1, !dbg !7873
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !7874
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !7875
  store i8 122, i8* %24, align 1, !dbg !7876
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7877
  store i8 22, i8* %25, align 4, !dbg !7878
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !7879
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !7880
  ret i32 0, !dbg !7881
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #8 !dbg !7882 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !7884, metadata !DIExpression()), !dbg !7886
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7885, metadata !DIExpression()), !dbg !7886
  ret i32 0, !dbg !7887
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !7888 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !7890, metadata !DIExpression()), !dbg !7892
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !7891, metadata !DIExpression()), !dbg !7892
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !7893
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !7894
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !7895
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !7896
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !7897
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !7898
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !7899
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !7900
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !7901
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !7902
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !7903
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !7904
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !7905
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !7906
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !7907
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !7908
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !7909
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !7910
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !7911
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !7912
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !7913
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !7914
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !7915
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !7916
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !7917
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !7918
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !7919
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !7920
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !7921
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !7922
  %18 = tail call i32 @custom_get_NORFLASH_Size() #22, !dbg !7923
  %19 = icmp ugt i32 %18, 16777216, !dbg !7925
  %20 = select i1 %19, i8 4, i8 3, !dbg !7926
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !7927
  store i8 %20, i8* %21, align 1, !dbg !7929
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !7930
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7930
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !7931
  store i8 0, i8* %24, align 1, !dbg !7932
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7933
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !7934
  store i8 -81, i8* %26, align 1, !dbg !7935
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7936
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !7937
  store i8 -97, i8* %28, align 1, !dbg !7938
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7939
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !7940
  store i8 2, i8* %30, align 1, !dbg !7941
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7942
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !7943
  store i8 32, i8* %32, align 1, !dbg !7944
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7945
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !7946
  store i8 82, i8* %34, align 1, !dbg !7947
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7948
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !7949
  store i8 -40, i8* %36, align 1, !dbg !7950
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7951
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !7952
  store i8 -80, i8* %38, align 1, !dbg !7953
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7954
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !7955
  store i8 48, i8* %40, align 1, !dbg !7956
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7957
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !7958
  store i8 6, i8* %42, align 1, !dbg !7959
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7960
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !7961
  store i8 -71, i8* %44, align 1, !dbg !7962
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7963
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !7964
  store i8 -85, i8* %46, align 1, !dbg !7965
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !7966
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !7967
  store i8 5, i8* %48, align 1, !dbg !7968
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !7969
  store i16 0, i16* %49, align 4, !dbg !7970
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !7971
  store %struct.anon* null, %struct.anon** %50, align 4, !dbg !7972
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !7973
  store %struct.anon* null, %struct.anon** %51, align 4, !dbg !7974
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !7975
  store i8 0, i8* %52, align 4, !dbg !7976
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !7977
  store i8 5, i8* %53, align 4, !dbg !7978
  ret i32 0, !dbg !7979
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !7980 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7982, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i8* %1, metadata !7983, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i8* %1, metadata !7984, metadata !DIExpression()), !dbg !8000
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8001
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !7997, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.value(metadata i32 0, metadata !7998, metadata !DIExpression()), !dbg !8000
  %4 = bitcast i8* %1 to i32*, !dbg !8002
  store i32 0, i32* %4, align 4, !dbg !8003
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.vdma_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !7998, metadata !DIExpression()), !dbg !8000
  %7 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !8004
  %8 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %7, i32 0, i32 0, !dbg !8005
  %9 = load i32, i32* %8, align 4, !dbg !8005
  %10 = icmp eq i32 %9, 0, !dbg !8006
  br i1 %10, label %34, label %11, !dbg !8007

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !8007

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !7998, metadata !DIExpression()), !dbg !8000
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !8008
  store i32 %17, i32* %19, align 4, !dbg !8010
  %20 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !8011
  %21 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %20, i32 %18, i32 1, !dbg !8012
  %22 = load i32, i32* %21, align 4, !dbg !8012
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !8013
  store i32 %22, i32* %23, align 4, !dbg !8014
  %24 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !8015
  %25 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %24, i32 %18, i32 1, !dbg !8016
  %26 = load i32, i32* %25, align 4, !dbg !8016
  %27 = load i32, i32* %4, align 4, !dbg !8017
  %28 = add i32 %27, %26, !dbg !8017
  store i32 %28, i32* %4, align 4, !dbg !8017
  %29 = add i32 %18, 1, !dbg !8018
  call void @llvm.dbg.value(metadata i32 %29, metadata !7998, metadata !DIExpression()), !dbg !8000
  %30 = load %struct.vdma_config_t*, %struct.vdma_config_t** %6, align 4, !dbg !8004
  %31 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %30, i32 %29, i32 0, !dbg !8005
  %32 = load i32, i32* %31, align 4, !dbg !8005
  %33 = icmp eq i32 %32, 0, !dbg !8006
  br i1 %33, label %34, label %16, !dbg !8007, !llvm.loop !8019

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !8000
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !8021
  %37 = bitcast i8* %36 to i32*, !dbg !8021
  store i32 %35, i32* %37, align 4, !dbg !8022
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !8023
  %39 = bitcast i8* %38 to i16*, !dbg !8023
  store i16 512, i16* %39, align 4, !dbg !8024
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8025
  br label %40, !dbg !8026

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8027
  call void @llvm.dbg.value(metadata i32 %41, metadata !7999, metadata !DIExpression()), !dbg !8000
  %42 = icmp eq i32 %41, -121, !dbg !8029
  br i1 %42, label %40, label %43, !dbg !8030, !llvm.loop !8031

43:                                               ; preds = %40
  ret i32 0, !dbg !8033
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !8034 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8036, metadata !DIExpression()), !dbg !8040
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8041
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !8037, metadata !DIExpression()), !dbg !8040
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8042
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !8043

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8044
  call void @llvm.dbg.value(metadata i32 %8, metadata !8039, metadata !DIExpression()), !dbg !8040
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8046, !range !2545
  %10 = icmp eq i8 %9, 0, !dbg !8046
  br i1 %10, label %12, label %11, !dbg !8048

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !8049
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8051
  br label %12, !dbg !8052

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8053
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !8054
  %15 = load i8, i8* %14, align 1, !dbg !8054
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !8055
  call void @llvm.dbg.value(metadata i32 %16, metadata !8038, metadata !DIExpression()), !dbg !8040
  %17 = load i8*, i8** %6, align 4, !dbg !8056
  %18 = load i8, i8* %17, align 1, !dbg !8058
  %19 = zext i8 %18 to i32, !dbg !8058
  %20 = and i32 %16, %19, !dbg !8059
  %21 = icmp eq i32 %20, 0, !dbg !8060
  br i1 %21, label %22, label %25, !dbg !8061

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8062
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8064
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8065
  %24 = bitcast i8* %23 to i8**, !dbg !8065
  store i8* null, i8** %24, align 4, !dbg !8066
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8067
  ret i32 0, !dbg !8068

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8069
  br label %7, !dbg !8043, !llvm.loop !8071
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !8073 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8075, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %1, metadata !8076, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 0, metadata !8077, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 1, metadata !8081, metadata !DIExpression()), !dbg !8089
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8090
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8082, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 0, metadata !8083, metadata !DIExpression()), !dbg !8089
  %4 = bitcast i8* %0 to i32*, !dbg !8091
  %5 = load i32, i32* %4, align 4, !dbg !8091
  %6 = xor i32 %5, -1, !dbg !8091
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8091
  %8 = bitcast i8* %7 to %struct.vdma_config_t**, !dbg !8091
  %9 = load %struct.vdma_config_t*, %struct.vdma_config_t** %8, align 4, !dbg !8091
  %10 = ptrtoint %struct.vdma_config_t* %9 to i32, !dbg !8091
  %11 = icmp eq i32 %6, %10, !dbg !8091
  br i1 %11, label %13, label %12, !dbg !8094

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !8095
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !8095
  unreachable, !dbg !8095

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8097
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8098
  store i8 2, i8* %14, align 4, !dbg !8099
  call void @llvm.dbg.value(metadata i32 %19, metadata !8083, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %1, metadata !8076, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !8089
  br label %15, !dbg !8100

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8101
  call void @llvm.dbg.value(metadata i32 %16, metadata !8077, metadata !DIExpression()), !dbg !8089
  %17 = icmp eq i32 %16, -121, !dbg !8103
  br i1 %17, label %15, label %18, !dbg !8104, !llvm.loop !8105

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !8107
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8108
  %21 = bitcast i8* %20 to i8**, !dbg !8108
  %22 = load i8*, i8** %21, align 4, !dbg !8108
  %23 = ptrtoint i8* %22 to i32, !dbg !8109
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #22, !dbg !8110
  call void @llvm.dbg.value(metadata i32 %24, metadata !8078, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %24, metadata !8079, metadata !DIExpression()), !dbg !8089
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !8111
  %26 = bitcast i8* %25 to i16*, !dbg !8111
  %27 = load i16, i16* %26, align 2, !dbg !8111
  %28 = zext i16 %27 to i32, !dbg !8112
  call void @llvm.dbg.value(metadata i32 %28, metadata !8084, metadata !DIExpression()), !dbg !8113
  %29 = lshr i32 %24, 10, !dbg !8114
  call void @llvm.dbg.value(metadata i32 %29, metadata !8087, metadata !DIExpression()), !dbg !8113
  %30 = and i32 %29, %28, !dbg !8115
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !8117
  %33 = icmp eq i32 %32, 0, !dbg !8117
  call void @llvm.dbg.value(metadata i32 0, metadata !8088, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 %29, metadata !8087, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 %28, metadata !8084, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 1, metadata !8081, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %24, metadata !8079, metadata !DIExpression()), !dbg !8089
  br i1 %33, label %34, label %51, !dbg !8117

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !8088, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 %36, metadata !8087, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 %37, metadata !8084, metadata !DIExpression()), !dbg !8113
  call void @llvm.dbg.value(metadata i32 %38, metadata !8081, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %39, metadata !8079, metadata !DIExpression()), !dbg !8089
  %40 = and i32 %37, 1, !dbg !8118
  %41 = icmp eq i32 %40, 0, !dbg !8118
  %42 = add i32 %35, 10, !dbg !8124
  %43 = shl nuw i32 1, %42, !dbg !8124
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !8124
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !8124
  call void @llvm.dbg.value(metadata i32 %45, metadata !8081, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %44, metadata !8079, metadata !DIExpression()), !dbg !8089
  %46 = lshr i32 %37, 1, !dbg !8125
  call void @llvm.dbg.value(metadata i32 %46, metadata !8084, metadata !DIExpression()), !dbg !8113
  %47 = lshr i32 %36, 1, !dbg !8126
  call void @llvm.dbg.value(metadata i32 %47, metadata !8087, metadata !DIExpression()), !dbg !8113
  %48 = add i32 %35, 1, !dbg !8127
  call void @llvm.dbg.value(metadata i32 %48, metadata !8088, metadata !DIExpression()), !dbg !8113
  %49 = and i32 %36, 2, !dbg !8128
  %50 = icmp eq i32 %49, 0, !dbg !8128
  br i1 %50, label %34, label %51, !dbg !8129, !llvm.loop !8130

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !8132
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !8133
  call void @llvm.dbg.value(metadata i32 %53, metadata !8081, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %52, metadata !8079, metadata !DIExpression()), !dbg !8089
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !8134

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8135
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !8135
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !8135
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !8137
  br label %70, !dbg !8138

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8139
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !8139
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !8139
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !8140
  br label %70, !dbg !8141

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8142
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !8142
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !8142
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !8143
  br label %70, !dbg !8144

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !8145
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !8145
  unreachable, !dbg !8145

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !8149
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !8149
  store i8 %73, i8* %74, align 1, !dbg !8149
  call void @llvm.dbg.value(metadata i32 %53, metadata !8081, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %52, metadata !8079, metadata !DIExpression()), !dbg !8089
  %75 = trunc i32 %19 to i8, !dbg !8150
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !8150

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8151
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !8151
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !8151
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !8153
  br label %91, !dbg !8154

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8155
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !8155
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !8155
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !8156
  br label %91, !dbg !8157

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8158
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !8158
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !8158
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !8159
  br label %91, !dbg !8160

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !8161
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !8161
  store i8 %94, i8* %95, align 1, !dbg !8161
  br label %96, !dbg !8162

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !8080, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %53, metadata !8081, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %16, metadata !8077, metadata !DIExpression()), !dbg !8089
  %97 = icmp eq i32 %53, 0, !dbg !8162
  br i1 %97, label %111, label %98, !dbg !8165

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !8166
  call void @llvm.dbg.value(metadata i8* %99, metadata !8080, metadata !DIExpression()), !dbg !8089
  %100 = ptrtoint i8* %99 to i32, !dbg !8167
  call void @llvm.dbg.value(metadata i32 %100, metadata !8080, metadata !DIExpression()), !dbg !8089
  br label %101, !dbg !8165

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !8081, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %103, metadata !8080, metadata !DIExpression()), !dbg !8089
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !8168
  br label %104, !dbg !8170

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8171
  call void @llvm.dbg.value(metadata i32 %105, metadata !8077, metadata !DIExpression()), !dbg !8089
  %106 = icmp eq i32 %105, -121, !dbg !8173
  br i1 %106, label %104, label %107, !dbg !8175, !llvm.loop !8176

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !8178
  call void @llvm.dbg.value(metadata i32 %108, metadata !8081, metadata !DIExpression()), !dbg !8089
  %109 = add i32 %103, %52, !dbg !8179
  call void @llvm.dbg.value(metadata i32 %109, metadata !8080, metadata !DIExpression()), !dbg !8089
  call void @llvm.dbg.value(metadata i32 %105, metadata !8077, metadata !DIExpression()), !dbg !8089
  %110 = icmp eq i32 %108, 0, !dbg !8162
  br i1 %110, label %111, label %101, !dbg !8165, !llvm.loop !8180

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !8089
  store i8 0, i8* %14, align 4, !dbg !8182
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8183
  ret i32 %112, !dbg !8184
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !8185 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8187, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i8* %1, metadata !8188, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i8* %2, metadata !8189, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i32 %3, metadata !8190, metadata !DIExpression()), !dbg !8204
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8205
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !8191, metadata !DIExpression()), !dbg !8204
  %8 = ptrtoint i8* %1 to i32, !dbg !8206
  call void @llvm.dbg.value(metadata i32 %8, metadata !8193, metadata !DIExpression()), !dbg !8204
  %9 = bitcast i8** %5 to i8*, !dbg !8207
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #23, !dbg !8207
  call void @llvm.dbg.value(metadata i8* %2, metadata !8194, metadata !DIExpression()), !dbg !8204
  store i8* %2, i8** %5, align 4, !dbg !8208
  call void @llvm.dbg.value(metadata i32 0, metadata !8196, metadata !DIExpression()), !dbg !8204
  %10 = bitcast i32* %6 to i8*, !dbg !8209
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8209
  %11 = bitcast i8* %0 to i32*, !dbg !8210
  %12 = load i32, i32* %11, align 4, !dbg !8210
  %13 = xor i32 %12, -1, !dbg !8210
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8210
  %15 = bitcast i8* %14 to %struct.vdma_config_t**, !dbg !8210
  %16 = load %struct.vdma_config_t*, %struct.vdma_config_t** %15, align 4, !dbg !8210
  %17 = ptrtoint %struct.vdma_config_t* %16 to i32, !dbg !8210
  %18 = icmp eq i32 %13, %17, !dbg !8210
  br i1 %18, label %20, label %19, !dbg !8213

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8214
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !8214
  unreachable, !dbg !8214

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8216
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8217
  store i8 1, i8* %21, align 4, !dbg !8218
  br label %22, !dbg !8219

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8220
  call void @llvm.dbg.value(metadata i32 %23, metadata !8196, metadata !DIExpression()), !dbg !8204
  %24 = icmp eq i32 %23, -121, !dbg !8222
  br i1 %24, label %22, label %25, !dbg !8223, !llvm.loop !8224

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !8226
  br i1 %26, label %104, label %27, !dbg !8227

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !8227

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !8228
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !8204
  call void @llvm.dbg.value(metadata i32 %38, metadata !8193, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i32 %37, metadata !8190, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i8* %36, metadata !8194, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i8* %36, metadata !8195, metadata !DIExpression()), !dbg !8204
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8229
  %40 = shl i32 %39, 1, !dbg !8230
  %41 = add i32 %40, -1, !dbg !8231
  %42 = and i32 %41, %38, !dbg !8232
  %43 = sub i32 %40, %42, !dbg !8233
  %44 = icmp ugt i32 %37, %43, !dbg !8234
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !8235
  call void @llvm.dbg.value(metadata i32 %45, metadata !8197, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i32 %45, metadata !8198, metadata !DIExpression()), !dbg !8204
  store i32 %45, i32* %6, align 4, !dbg !8236
  call void @llvm.dbg.value(metadata i8* %36, metadata !8194, metadata !DIExpression()), !dbg !8204
  %46 = ptrtoint i8* %36 to i32, !dbg !8237
  %47 = and i32 %46, 134217728, !dbg !8238
  %48 = icmp eq i32 %47, 0, !dbg !8238
  br i1 %48, label %58, label %49, !dbg !8239

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !8200, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.value(metadata i32 %45, metadata !8198, metadata !DIExpression()), !dbg !8204
  %50 = icmp eq i32 %45, 0, !dbg !8241
  br i1 %50, label %58, label %51, !dbg !8244

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !8200, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.value(metadata i8* %36, metadata !8194, metadata !DIExpression()), !dbg !8204
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !8245
  %54 = load i8, i8* %53, align 1, !dbg !8245
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !8247
  store i8 %54, i8* %55, align 1, !dbg !8248
  %56 = add nuw i32 %52, 1, !dbg !8249
  call void @llvm.dbg.value(metadata i32 %56, metadata !8200, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.value(metadata i32 %45, metadata !8198, metadata !DIExpression()), !dbg !8204
  %57 = icmp eq i32 %56, %45, !dbg !8241
  br i1 %57, label %58, label %51, !dbg !8244, !llvm.loop !8250

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !8252
  call void @llvm.dbg.value(metadata i8* %59, metadata !8195, metadata !DIExpression()), !dbg !8204
  %60 = load i32, i32* %29, align 4, !dbg !8253
  %61 = and i32 %60, 16, !dbg !8255
  %62 = icmp eq i32 %61, 0, !dbg !8255
  br i1 %62, label %63, label %64, !dbg !8256

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !8257
  br label %64, !dbg !8259

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !8260
  %66 = icmp eq i8 %65, 4, !dbg !8262
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !8263
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !8263
  %69 = load i8, i8* %68, align 1, !dbg !8263
  %70 = zext i8 %69 to i32, !dbg !8263
  br i1 %66, label %71, label %75, !dbg !8264

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !8194, metadata !DIExpression(DW_OP_deref)), !dbg !8204
  call void @llvm.dbg.value(metadata i32* %6, metadata !8198, metadata !DIExpression(DW_OP_deref)), !dbg !8204
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #22, !dbg !8265
  call void @llvm.dbg.value(metadata i32 %72, metadata !8199, metadata !DIExpression()), !dbg !8204
  %73 = load i8*, i8** %5, align 4, !dbg !8267
  call void @llvm.dbg.value(metadata i8* %73, metadata !8194, metadata !DIExpression()), !dbg !8204
  %74 = load i32, i32* %6, align 4, !dbg !8268
  call void @llvm.dbg.value(metadata i32 %74, metadata !8198, metadata !DIExpression()), !dbg !8204
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #22, !dbg !8269
  br label %79, !dbg !8270

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #22, !dbg !8271
  call void @llvm.dbg.value(metadata i32 %76, metadata !8199, metadata !DIExpression()), !dbg !8204
  %77 = load i8*, i8** %5, align 4, !dbg !8273
  call void @llvm.dbg.value(metadata i8* %77, metadata !8194, metadata !DIExpression()), !dbg !8204
  %78 = load i32, i32* %6, align 4, !dbg !8274
  call void @llvm.dbg.value(metadata i32 %78, metadata !8198, metadata !DIExpression()), !dbg !8204
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #22, !dbg !8275
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !8263
  call void @llvm.dbg.value(metadata i32 %80, metadata !8199, metadata !DIExpression()), !dbg !8204
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !8276
  call void @llvm.dbg.value(metadata i32 %81, metadata !8192, metadata !DIExpression()), !dbg !8204
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8277
  %82 = load i8, i8* %30, align 1, !dbg !8278
  %83 = zext i8 %82 to i32, !dbg !8279
  %84 = add i32 %45, 1, !dbg !8280
  %85 = add i32 %84, %83, !dbg !8281
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8282
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8283
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8284
  %86 = load i16, i16* %34, align 2, !dbg !8285
  call void @SFI_MacEnable(i16 noundef zeroext %86) #22, !dbg !8286
  %87 = load i16, i16* %34, align 2, !dbg !8287
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #22, !dbg !8288
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !8289
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !8290

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !8291
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !8293
  call void @llvm.dbg.value(metadata i32 %94, metadata !8196, metadata !DIExpression()), !dbg !8204
  %95 = icmp eq i32 %94, 0, !dbg !8294
  br i1 %95, label %92, label %96, !dbg !8295, !llvm.loop !8296

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !8298
  call void @llvm.dbg.value(metadata i32 %97, metadata !8198, metadata !DIExpression()), !dbg !8204
  %98 = load i8*, i8** %5, align 4, !dbg !8299
  call void @llvm.dbg.value(metadata i8* %98, metadata !8194, metadata !DIExpression()), !dbg !8204
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !8299
  call void @llvm.dbg.value(metadata i8* %99, metadata !8194, metadata !DIExpression()), !dbg !8204
  store i8* %99, i8** %5, align 4, !dbg !8299
  %100 = sub i32 %37, %45, !dbg !8300
  call void @llvm.dbg.value(metadata i32 %100, metadata !8190, metadata !DIExpression()), !dbg !8204
  call void @llvm.dbg.value(metadata i32 undef, metadata !8193, metadata !DIExpression()), !dbg !8204
  %101 = icmp eq i32 %94, 1, !dbg !8301
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !8303
  br i1 %103, label %35, label %104, !dbg !8303, !llvm.loop !8304

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !8204
  call void @llvm.dbg.value(metadata i32 %105, metadata !8196, metadata !DIExpression()), !dbg !8204
  store i8 0, i8* %21, align 4, !dbg !8306
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8307
  %106 = icmp eq i32 %105, 1, !dbg !8308
  %107 = select i1 %106, i32 0, i32 %105, !dbg !8204
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #23, !dbg !8310
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #23, !dbg !8310
  ret i32 %107, !dbg !8310
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #8 section ".ram_code" !dbg !8311 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8313, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.value(metadata i32 undef, metadata !8314, metadata !DIExpression()), !dbg !8315
  ret i32 -12, !dbg !8316
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8317 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8319, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 undef, metadata !8320, metadata !DIExpression()), !dbg !8329
  call void @llvm.dbg.value(metadata i32 0, metadata !8322, metadata !DIExpression()), !dbg !8329
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8330
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8323, metadata !DIExpression()), !dbg !8329
  %4 = bitcast i8* %0 to i32*, !dbg !8331
  %5 = load i32, i32* %4, align 4, !dbg !8331
  %6 = xor i32 %5, -1, !dbg !8331
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8331
  %8 = bitcast i8* %7 to %struct.vdma_config_t**, !dbg !8331
  %9 = load %struct.vdma_config_t*, %struct.vdma_config_t** %8, align 4, !dbg !8331
  %10 = ptrtoint %struct.vdma_config_t* %9 to i32, !dbg !8331
  %11 = icmp eq i32 %6, %10, !dbg !8331
  br i1 %11, label %13, label %12, !dbg !8334

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !8335
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !8335
  unreachable, !dbg !8335

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8337
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !8337
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8337
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !8338
  %18 = load i8, i8* %17, align 1, !dbg !8338
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !8339
  call void @llvm.dbg.value(metadata i32 %19, metadata !8324, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8329
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8340
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !8341
  %22 = load i8, i8* %21, align 1, !dbg !8341
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !8342
  call void @llvm.dbg.value(metadata i32 %23, metadata !8325, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8329
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8343
  call void @llvm.dbg.value(metadata i32 %24, metadata !8322, metadata !DIExpression()), !dbg !8329
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8344
  %26 = bitcast i8* %25 to i8**, !dbg !8344
  %27 = load i8*, i8** %26, align 4, !dbg !8344
  %28 = load i8, i8* %27, align 1, !dbg !8345
  %29 = zext i8 %28 to i32, !dbg !8345
  %30 = and i32 %19, %29, !dbg !8346
  %31 = icmp eq i32 %30, 0, !dbg !8347
  br i1 %31, label %32, label %62, !dbg !8348

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !8325, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8329
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !8349
  %34 = load i8, i8* %33, align 1, !dbg !8349
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !8350
  %36 = load i8, i8* %35, align 1, !dbg !8350
  %37 = or i8 %36, %34, !dbg !8351
  call void @llvm.dbg.value(metadata i8 %37, metadata !8326, metadata !DIExpression()), !dbg !8352
  %38 = zext i8 %37 to i32, !dbg !8353
  %39 = and i32 %23, %38, !dbg !8355
  %40 = icmp eq i32 %39, 0, !dbg !8356
  br i1 %40, label %41, label %46, !dbg !8357

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !8358
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !8359
  br i1 %45, label %51, label %46, !dbg !8359

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8360, !range !2545
  %48 = icmp eq i8 %47, 0, !dbg !8360
  br i1 %48, label %49, label %50, !dbg !8364

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !8365
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !8365
  unreachable, !dbg !8365

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8367
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8368
  call void @llvm.dbg.value(metadata i32 -121, metadata !8321, metadata !DIExpression()), !dbg !8329
  br label %62, !dbg !8369

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !8370
  %53 = bitcast i8* %52 to i32*, !dbg !8370
  %54 = load i32, i32* %53, align 4, !dbg !8370
  %55 = and i32 %54, 2, !dbg !8373
  %56 = icmp eq i32 %55, 0, !dbg !8373
  br i1 %56, label %63, label %57, !dbg !8374

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8375
  %59 = bitcast i8* %58 to i16*, !dbg !8375
  %60 = load i16, i16* %59, align 2, !dbg !8375
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #22, !dbg !8377
  %61 = load i16, i16* %59, align 2, !dbg !8378
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #22, !dbg !8379
  br label %63, !dbg !8380

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !8321, metadata !DIExpression()), !dbg !8329
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !8381
  br label %65, !dbg !8382

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8383
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !8384
  call void @llvm.dbg.value(metadata i32 0, metadata !8321, metadata !DIExpression()), !dbg !8329
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !8381
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !8385
  call void @llvm.dbg.value(metadata i32 %64, metadata !8321, metadata !DIExpression()), !dbg !8329
  br label %65, !dbg !8388

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !8329
  call void @llvm.dbg.value(metadata i32 %66, metadata !8321, metadata !DIExpression()), !dbg !8329
  ret i32 %66, !dbg !8389
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8390 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8392, metadata !DIExpression()), !dbg !8397
  call void @llvm.dbg.value(metadata i32 undef, metadata !8393, metadata !DIExpression()), !dbg !8397
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8398
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8394, metadata !DIExpression()), !dbg !8397
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8399
  call void @llvm.dbg.value(metadata i32 %4, metadata !8396, metadata !DIExpression()), !dbg !8397
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !8400
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !8401

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8402
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !8404
  %12 = load i8, i8* %11, align 1, !dbg !8404
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !8405
  call void @llvm.dbg.value(metadata i32 %13, metadata !8395, metadata !DIExpression()), !dbg !8397
  %14 = load i8*, i8** %8, align 4, !dbg !8406
  %15 = load i8, i8* %14, align 1, !dbg !8408
  %16 = zext i8 %15 to i32, !dbg !8408
  %17 = and i32 %13, %16, !dbg !8409
  %18 = icmp eq i32 %17, 0, !dbg !8410
  br i1 %18, label %19, label %9, !dbg !8411, !llvm.loop !8412

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8414
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !8415
  ret i32 0, !dbg !8416
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !8417 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8419, metadata !DIExpression()), !dbg !8422
  call void @llvm.dbg.value(metadata i32 undef, metadata !8420, metadata !DIExpression()), !dbg !8422
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8423
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8421, metadata !DIExpression()), !dbg !8422
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8424
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !8425
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8426
  ret i32 0, !dbg !8427
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #8 section ".ram_code" !dbg !8428 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8430, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i8* undef, metadata !8431, metadata !DIExpression()), !dbg !8433
  call void @llvm.dbg.value(metadata i32 undef, metadata !8432, metadata !DIExpression()), !dbg !8433
  ret i32 0, !dbg !8434
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !8435 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8437, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.value(metadata i32 %1, metadata !8438, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.value(metadata i8* undef, metadata !8439, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.value(metadata i8* %0, metadata !8440, metadata !DIExpression()), !dbg !8441
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !8442

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !8440, metadata !DIExpression()), !dbg !8441
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !8443
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !8443
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !8443
  %8 = tail call i32 %7(i8* noundef %0) #22, !dbg !8446
  br label %21, !dbg !8447

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8448
  %11 = load i8, i8* %10, align 1, !dbg !8452
  %12 = icmp eq i8 %11, -62, !dbg !8453
  br i1 %12, label %13, label %21, !dbg !8454

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8455
  %15 = bitcast i8* %14 to %struct.vdma_config_t**, !dbg !8455
  %16 = load %struct.vdma_config_t*, %struct.vdma_config_t** %15, align 4, !dbg !8455
  %17 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %16, i32 0, i32 0, !dbg !8456
  %18 = load i32, i32* %17, align 4, !dbg !8456
  %19 = icmp eq i32 %18, 262144, !dbg !8457
  br i1 %19, label %22, label %21, !dbg !8458

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !8459
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !8459
  unreachable, !dbg !8459

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !8464

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !8441
  ret i32 %23, !dbg !8465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8466 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8468, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.value(metadata i8* %0, metadata !8469, metadata !DIExpression()), !dbg !8471
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8472
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !8472
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !8472
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !8474
  %6 = load i8, i8* %5, align 1, !dbg !8474
  %7 = icmp eq i8 %6, 0, !dbg !8475
  br i1 %7, label %19, label %8, !dbg !8476

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8477
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !8469, metadata !DIExpression()), !dbg !8471
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !8478
  call void @llvm.dbg.value(metadata i32 %10, metadata !8470, metadata !DIExpression()), !dbg !8471
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8480
  %12 = bitcast i8* %11 to i8**, !dbg !8480
  %13 = load i8*, i8** %12, align 4, !dbg !8480
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !8482
  %15 = load i8, i8* %14, align 1, !dbg !8482
  %16 = zext i8 %15 to i32, !dbg !8482
  %17 = and i32 %10, %16, !dbg !8483
  %18 = icmp eq i32 %17, 0, !dbg !8483
  br i1 %18, label %19, label %20, !dbg !8484

19:                                               ; preds = %8, %1
  br label %20, !dbg !8485

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !8471
  ret i32 %21, !dbg !8486
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8487 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8491, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.value(metadata i32 %1, metadata !8492, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.value(metadata i8 %2, metadata !8493, metadata !DIExpression()), !dbg !8499
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8500
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !8495, metadata !DIExpression()), !dbg !8499
  call void @llvm.dbg.value(metadata i32 0, metadata !8496, metadata !DIExpression()), !dbg !8499
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8501
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !8501
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !8501
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !8502
  %9 = load i8, i8* %8, align 1, !dbg !8502
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !8503
  call void @llvm.dbg.value(metadata i32 %10, metadata !8498, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !8499
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8504, !range !2545
  %12 = icmp eq i8 %11, 0, !dbg !8504
  br i1 %12, label %18, label %13, !dbg !8506

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8507, !range !2545
  %15 = icmp eq i8 %14, 0, !dbg !8507
  br i1 %15, label %16, label %17, !dbg !8511

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !8512
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !8512
  unreachable, !dbg !8512

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !8514
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8515
  br label %34, !dbg !8516

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !8498, metadata !DIExpression()), !dbg !8499
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8517
  %20 = bitcast i8* %19 to i8**, !dbg !8517
  %21 = load i8*, i8** %20, align 4, !dbg !8517
  %22 = load i8, i8* %21, align 1, !dbg !8519
  %23 = zext i8 %22 to i32, !dbg !8519
  %24 = and i32 %10, %23, !dbg !8520
  %25 = icmp eq i32 %24, 0, !dbg !8521
  br i1 %25, label %26, label %34, !dbg !8522

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8523
  call void @llvm.dbg.value(metadata i32 %27, metadata !8494, metadata !DIExpression()), !dbg !8499
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8525
  %28 = inttoptr i32 %1 to i8*, !dbg !8526
  %29 = load volatile i8, i8* %28, align 1, !dbg !8527
  call void @llvm.dbg.value(metadata i8 %29, metadata !8497, metadata !DIExpression()), !dbg !8499
  %30 = icmp eq i8 %29, %2, !dbg !8528
  call void @llvm.dbg.value(metadata i32 undef, metadata !8496, metadata !DIExpression()), !dbg !8499
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !8530
  br i1 %30, label %31, label %34

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 1, metadata !8496, metadata !DIExpression()), !dbg !8499
  %32 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !8531
  %33 = icmp eq i32 %32, 0, !dbg !8534
  br i1 %33, label %34, label %36, !dbg !8535

34:                                               ; preds = %18, %26, %17, %31
  %35 = phi i32 [ 1, %31 ], [ 0, %18 ], [ -1, %26 ], [ 0, %17 ]
  br label %36, !dbg !8536

36:                                               ; preds = %31, %34
  %37 = phi i32 [ %35, %34 ], [ -1, %31 ], !dbg !8499
  ret i32 %37, !dbg !8537
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8538 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8542, metadata !DIExpression()), !dbg !8545
  call void @llvm.dbg.value(metadata i32 %1, metadata !8543, metadata !DIExpression()), !dbg !8545
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !8546
  %4 = load i32, i32* %3, align 4, !dbg !8546
  %5 = and i32 %4, 16, !dbg !8548
  %6 = icmp eq i32 %5, 0, !dbg !8548
  br i1 %6, label %7, label %8, !dbg !8549

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !8550
  br label %8, !dbg !8552

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8553
  call void @llvm.dbg.value(metadata i32 %9, metadata !8544, metadata !DIExpression()), !dbg !8545
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8554
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8555
  %11 = load i16, i16* %10, align 2, !dbg !8555
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8556
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !8556
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !8557
  %15 = load i8, i8* %14, align 1, !dbg !8557
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !8558
  %17 = load i8, i8* %16, align 1, !dbg !8558
  %18 = zext i8 %17 to i32, !dbg !8559
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #22, !dbg !8560
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !8561
  ret void, !dbg !8562
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8563 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8565, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8566, metadata !DIExpression()), !dbg !8568
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8569
  %4 = load i8, i8* %3, align 1, !dbg !8569
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !8570

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8571
  %7 = load i32, i32* %6, align 4, !dbg !8573
  %8 = or i32 %7, 4, !dbg !8573
  store i32 %8, i32* %6, align 4, !dbg !8573
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8574
  call void @llvm.dbg.value(metadata i32 0, metadata !8567, metadata !DIExpression()), !dbg !8568
  br label %18, !dbg !8575

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !8576
  %12 = load i32, i32* %11, align 4, !dbg !8577
  %13 = or i32 %12, 2, !dbg !8577
  store i32 %13, i32* %11, align 4, !dbg !8577
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8578
  call void @llvm.dbg.value(metadata i32 0, metadata !8567, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.value(metadata i32 0, metadata !8567, metadata !DIExpression()), !dbg !8568
  br label %18, !dbg !8579

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8580
  call void @llvm.dbg.value(metadata i32 0, metadata !8567, metadata !DIExpression()), !dbg !8568
  br label %18, !dbg !8581

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !8567, metadata !DIExpression()), !dbg !8568
  tail call void @Flash_ReturnReady() #21, !dbg !8582
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.100, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.101, i32 0, i32 0)) #24, !dbg !8582
  unreachable, !dbg !8582

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !8567, metadata !DIExpression()), !dbg !8568
  ret i32 0, !dbg !8586
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !8587 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8591, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8592, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.value(metadata i32 %2, metadata !8593, metadata !DIExpression()), !dbg !8596
  call void @llvm.dbg.value(metadata i32 %3, metadata !8594, metadata !DIExpression()), !dbg !8596
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !8597
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !8599
  br i1 %7, label %33, label %8, !dbg !8599

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8600
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8600
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !8602
  br i1 %11, label %33, label %12, !dbg !8603

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8604
  %14 = load i8*, i8** %13, align 4, !dbg !8604
  %15 = icmp eq i8* %14, null, !dbg !8605
  br i1 %15, label %33, label %16, !dbg !8606

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !8607
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !8608
  store i8* %17, i8** %18, align 4, !dbg !8609
  %19 = trunc i32 %3 to i16, !dbg !8610
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !8611
  store i16 %19, i16* %20, align 2, !dbg !8612
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8613
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8614
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !8615
  store i8 -81, i8* %23, align 1, !dbg !8616
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !8617
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !8618
  %25 = load i8, i8* %24, align 1, !dbg !8619
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !8621

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #22, !dbg !8622
  br i1 %27, label %31, label %28, !dbg !8623

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !8624
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !8626
  store i8 -97, i8* %30, align 1, !dbg !8627
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !8628
  br label %31, !dbg !8629

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8630
  call void @llvm.dbg.value(metadata i32 0, metadata !8595, metadata !DIExpression()), !dbg !8596
  br label %33, !dbg !8631

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !8596
  ret i32 %34, !dbg !8632
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !8633 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8637, metadata !DIExpression()), !dbg !8640
  call void @llvm.dbg.value(metadata i8* %1, metadata !8638, metadata !DIExpression()), !dbg !8640
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #23, !dbg !8641
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8642
  %5 = and i32 %4, 1, !dbg !8642
  %6 = icmp eq i32 %5, 0, !dbg !8644
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8645
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !8645
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !8646
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !8646
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !8646
  %12 = load i8, i8* %11, align 1, !dbg !8645
  store i8 %12, i8* %3, align 1, !dbg !8645
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8647
  %14 = load i16, i16* %13, align 2, !dbg !8647
  call void @llvm.dbg.value(metadata i8* %3, metadata !8639, metadata !DIExpression(DW_OP_deref)), !dbg !8640
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8648
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #23, !dbg !8649
  ret void, !dbg !8649
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8650 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8654, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i8* %1, metadata !8655, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i8* %2, metadata !8656, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i16 %3, metadata !8657, metadata !DIExpression()), !dbg !8660
  call void @llvm.dbg.value(metadata i16 %4, metadata !8658, metadata !DIExpression()), !dbg !8660
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8661
  call void @llvm.dbg.value(metadata i32 %6, metadata !8659, metadata !DIExpression()), !dbg !8660
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #22, !dbg !8662
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !8663
  ret void, !dbg !8664
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !8665 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8667, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8670, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i32 0, metadata !8668, metadata !DIExpression()), !dbg !8673
  br label %6, !dbg !8674

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !8676
  call void @llvm.dbg.value(metadata i32 %3, metadata !8668, metadata !DIExpression()), !dbg !8673
  call void @llvm.dbg.value(metadata i32 %8, metadata !8668, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8673
  %4 = icmp ult i32 %8, 4, !dbg !8678
  %5 = icmp eq i32 %3, 5, !dbg !8678
  br i1 %5, label %26, label %6, !dbg !8674, !llvm.loop !8679

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8668, metadata !DIExpression()), !dbg !8673
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8669, metadata !DIExpression()), !dbg !8673
  %12 = icmp eq i8 %10, 0, !dbg !8681
  br i1 %12, label %23, label %13, !dbg !8685

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8669, metadata !DIExpression()), !dbg !8673
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8686
  %16 = load i8, i8* %15, align 1, !dbg !8686
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !8689
  %18 = load i8, i8* %17, align 1, !dbg !8689
  %19 = icmp eq i8 %16, %18, !dbg !8690
  br i1 %19, label %20, label %23, !dbg !8691

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !8692
  call void @llvm.dbg.value(metadata i32 %21, metadata !8669, metadata !DIExpression()), !dbg !8673
  %22 = icmp eq i32 %21, %11, !dbg !8681
  br i1 %22, label %26, label %13, !dbg !8685, !llvm.loop !8693

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !8695
  %25 = icmp eq i32 %24, %11, !dbg !8696
  call void @llvm.dbg.value(metadata i32 %8, metadata !8668, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8673
  br i1 %25, label %26, label %2, !dbg !8698

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !8678
  ret i1 %27, !dbg !8699
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !8700 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !8712
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #23, !dbg !8712
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !8704, metadata !DIExpression()), !dbg !8713
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8711, metadata !DIExpression()), !dbg !8714
  %3 = load i16, i16* @cmem_index, align 2, !dbg !8715
  %4 = icmp sgt i16 %3, -1, !dbg !8717
  br i1 %4, label %34, label %5, !dbg !8718

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !8719
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #22, !dbg !8720
  call void @llvm.dbg.value(metadata i32 0, metadata !8702, metadata !DIExpression()), !dbg !8714
  br label %7, !dbg !8721

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8702, metadata !DIExpression()), !dbg !8714
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8703, metadata !DIExpression()), !dbg !8714
  %12 = icmp eq i8 %10, 0, !dbg !8723
  br i1 %12, label %24, label %13, !dbg !8728

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8703, metadata !DIExpression()), !dbg !8714
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8729
  %16 = load i8, i8* %15, align 1, !dbg !8729
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !8732
  %18 = load i16, i16* %17, align 2, !dbg !8732
  %19 = zext i8 %16 to i16, !dbg !8733
  %20 = icmp eq i16 %18, %19, !dbg !8733
  br i1 %20, label %21, label %24, !dbg !8734

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !8735
  call void @llvm.dbg.value(metadata i32 %22, metadata !8703, metadata !DIExpression()), !dbg !8714
  %23 = icmp eq i32 %22, %11, !dbg !8723
  br i1 %23, label %27, label %13, !dbg !8728, !llvm.loop !8736

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !8738
  %26 = icmp eq i32 %25, %11, !dbg !8739
  br i1 %26, label %27, label %29, !dbg !8741

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !8742
  store i16 %28, i16* @cmem_index, align 2, !dbg !8744
  br label %34, !dbg !8745

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !8746
  call void @llvm.dbg.value(metadata i32 %30, metadata !8702, metadata !DIExpression()), !dbg !8714
  %31 = icmp eq i32 %30, 5, !dbg !8747
  br i1 %31, label %32, label %7, !dbg !8721, !llvm.loop !8748

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !8750
  br label %34, !dbg !8750

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !8714
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #23, !dbg !8751
  ret i32 %36, !dbg !8751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #8 !dbg !8752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8756, metadata !DIExpression()), !dbg !8757
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !8758
  ret %struct.CMEMEntryID* %2, !dbg !8759
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !8760 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8764, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i8* undef, metadata !8765, metadata !DIExpression()), !dbg !8771
  call void @llvm.dbg.value(metadata i16* %2, metadata !8766, metadata !DIExpression()), !dbg !8771
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #23, !dbg !8772
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !8772
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #23, !dbg !8772
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !8769, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i8 -81, metadata !8767, metadata !DIExpression()), !dbg !8774
  store i8 -81, i8* %4, align 1, !dbg !8775
  call void @llvm.dbg.value(metadata i8* %4, metadata !8767, metadata !DIExpression(DW_OP_deref)), !dbg !8774
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !8776
  %7 = load i8, i8* %6, align 1, !dbg !8777
  %8 = add i8 %7, 1, !dbg !8779
  %9 = icmp ult i8 %8, 2, !dbg !8779
  br i1 %9, label %12, label %10, !dbg !8779

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !8780
  br i1 %11, label %13, label %12, !dbg !8781

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !8767, metadata !DIExpression()), !dbg !8774
  store i8 -97, i8* %4, align 1, !dbg !8782
  call void @llvm.dbg.value(metadata i8* %4, metadata !8767, metadata !DIExpression(DW_OP_deref)), !dbg !8774
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !8784
  br label %13, !dbg !8785

13:                                               ; preds = %12, %10
  br label %14, !dbg !8786

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8770, metadata !DIExpression()), !dbg !8774
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !8788
  %17 = load i8, i8* %16, align 1, !dbg !8788
  %18 = zext i8 %17 to i16, !dbg !8788
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !8791
  store i16 %18, i16* %19, align 2, !dbg !8792
  %20 = add nuw nsw i32 %15, 1, !dbg !8793
  call void @llvm.dbg.value(metadata i32 %20, metadata !8770, metadata !DIExpression()), !dbg !8774
  %21 = icmp eq i32 %20, 3, !dbg !8794
  br i1 %21, label %22, label %14, !dbg !8786, !llvm.loop !8795

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #23, !dbg !8797
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #23, !dbg !8797
  ret void, !dbg !8798
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #11 section ".ram_code" !dbg !8799 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8801, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8804, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata i32 0, metadata !8802, metadata !DIExpression()), !dbg !8805
  br label %6, !dbg !8806

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !8808
  call void @llvm.dbg.value(metadata i32 %3, metadata !8802, metadata !DIExpression()), !dbg !8805
  call void @llvm.dbg.value(metadata i32 %8, metadata !8802, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8805
  %4 = icmp ult i32 %8, 4, !dbg !8810
  %5 = icmp eq i32 %3, 5, !dbg !8810
  br i1 %5, label %26, label %6, !dbg !8806, !llvm.loop !8811

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8802, metadata !DIExpression()), !dbg !8805
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8803, metadata !DIExpression()), !dbg !8805
  %12 = icmp eq i8 %10, 0, !dbg !8813
  br i1 %12, label %23, label %13, !dbg !8817

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8803, metadata !DIExpression()), !dbg !8805
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8818
  %16 = load i8, i8* %15, align 1, !dbg !8818
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !8821
  %18 = load i8, i8* %17, align 1, !dbg !8821
  %19 = icmp eq i8 %16, %18, !dbg !8822
  br i1 %19, label %20, label %23, !dbg !8823

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !8824
  call void @llvm.dbg.value(metadata i32 %21, metadata !8803, metadata !DIExpression()), !dbg !8805
  %22 = icmp eq i32 %21, %11, !dbg !8813
  br i1 %22, label %26, label %13, !dbg !8817, !llvm.loop !8825

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !8827
  %25 = icmp eq i32 %24, %11, !dbg !8828
  call void @llvm.dbg.value(metadata i32 %8, metadata !8802, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !8805
  br i1 %25, label %26, label %2, !dbg !8830

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !8810
  ret i1 %27, !dbg !8831
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !8832 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !8838
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #23, !dbg !8838
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !8836, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !8837, metadata !DIExpression()), !dbg !8840
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !8841
  %4 = icmp sgt i16 %3, -1, !dbg !8843
  br i1 %4, label %34, label %5, !dbg !8844

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !8845
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !8846
  call void @llvm.dbg.value(metadata i32 0, metadata !8834, metadata !DIExpression()), !dbg !8840
  br label %7, !dbg !8847

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !8834, metadata !DIExpression()), !dbg !8840
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !8835, metadata !DIExpression()), !dbg !8840
  %12 = icmp eq i8 %10, 0, !dbg !8849
  br i1 %12, label %24, label %13, !dbg !8854

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8835, metadata !DIExpression()), !dbg !8840
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !8855
  %16 = load i8, i8* %15, align 1, !dbg !8855
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !8858
  %18 = load i16, i16* %17, align 2, !dbg !8858
  %19 = zext i8 %16 to i16, !dbg !8859
  %20 = icmp eq i16 %18, %19, !dbg !8859
  br i1 %20, label %21, label %24, !dbg !8860

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !8861
  call void @llvm.dbg.value(metadata i32 %22, metadata !8835, metadata !DIExpression()), !dbg !8840
  %23 = icmp eq i32 %22, %11, !dbg !8849
  br i1 %23, label %27, label %13, !dbg !8854, !llvm.loop !8862

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !8864
  %26 = icmp eq i32 %25, %11, !dbg !8865
  br i1 %26, label %27, label %29, !dbg !8867

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !8868
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !8870
  br label %34, !dbg !8871

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !8872
  call void @llvm.dbg.value(metadata i32 %30, metadata !8834, metadata !DIExpression()), !dbg !8840
  %31 = icmp eq i32 %30, 5, !dbg !8873
  br i1 %31, label %32, label %7, !dbg !8847, !llvm.loop !8874

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !8876
  br label %34, !dbg !8876

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !8840
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #23, !dbg !8877
  ret i32 %36, !dbg !8877
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !8878 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8886, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata i16* %1, metadata !8887, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata i16* %2, metadata !8888, metadata !DIExpression()), !dbg !8894
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #23, !dbg !8895
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !8895
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #23, !dbg !8895
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !8892, metadata !DIExpression()), !dbg !8896
  call void @llvm.dbg.value(metadata i8 -81, metadata !8890, metadata !DIExpression()), !dbg !8897
  store i8 -81, i8* %4, align 1, !dbg !8898
  %7 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !8899
  call void @llvm.dbg.value(metadata i32 %7, metadata !8889, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata i8* %4, metadata !8890, metadata !DIExpression(DW_OP_deref)), !dbg !8897
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !8900
  call void @RestoreIRQMask(i32 noundef %7) #22, !dbg !8901
  %8 = load i8, i8* %6, align 1, !dbg !8902
  %9 = add i8 %8, 1, !dbg !8904
  %10 = icmp ult i8 %9, 2, !dbg !8904
  br i1 %10, label %13, label %11, !dbg !8904

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #22, !dbg !8905
  br i1 %12, label %15, label %13, !dbg !8906

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !8890, metadata !DIExpression()), !dbg !8897
  store i8 -97, i8* %4, align 1, !dbg !8907
  %14 = call i32 @SaveAndSetIRQMask() #22, !dbg !8909
  call void @llvm.dbg.value(metadata i32 %14, metadata !8889, metadata !DIExpression()), !dbg !8894
  call void @llvm.dbg.value(metadata i8* %4, metadata !8890, metadata !DIExpression(DW_OP_deref)), !dbg !8897
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #22, !dbg !8910
  call void @RestoreIRQMask(i32 noundef %14) #22, !dbg !8911
  br label %15, !dbg !8912

15:                                               ; preds = %13, %11
  br label %16, !dbg !8913

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !8893, metadata !DIExpression()), !dbg !8897
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !8915
  %19 = load i8, i8* %18, align 1, !dbg !8915
  %20 = zext i8 %19 to i16, !dbg !8915
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !8918
  store i16 %20, i16* %21, align 2, !dbg !8919
  %22 = add nuw nsw i32 %17, 1, !dbg !8920
  call void @llvm.dbg.value(metadata i32 %22, metadata !8893, metadata !DIExpression()), !dbg !8897
  %23 = icmp eq i32 %22, 3, !dbg !8921
  br i1 %23, label %24, label %16, !dbg !8913, !llvm.loop !8922

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #23, !dbg !8924
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #23, !dbg !8924
  ret void, !dbg !8925
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #8 !dbg !8926 {
  ret i32 3932160, !dbg !8927
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #8 !dbg !8928 {
  ret i32 4194304, !dbg !8929
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !8930 {
  %1 = tail call i32 @ComboMem_Initialize() #22, !dbg !8931
  ret void, !dbg !8932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #8 !dbg !8933 {
  ret void, !dbg !8934
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #8 !dbg !8935 {
  ret void, !dbg !8936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #8 !dbg !8937 {
  ret i32 3932160, !dbg !8938
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #8 !dbg !8939 {
  ret i32 262144, !dbg !8940
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !8941 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #22, !dbg !8942
  ret void, !dbg !8943
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #8 !dbg !8944 {
  ret i32 134217728, !dbg !8945
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #8 !dbg !8946 {
  ret i32 4194304, !dbg !8947
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #4 !dbg !8948 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !8949
  ret i32 134217728, !dbg !8950
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !8951 {
  store i32 xor (i32 ptrtoint ([8 x %struct.vdma_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !8952
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8953
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !8954
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !8955
  %4 = load i16, i16* %3, align 2, !dbg !8955
  %5 = zext i16 %4 to i32, !dbg !8953
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8956
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.vdma_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #22, !dbg !8957
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !8958
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !8959
  store %struct.vdma_config_t* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0), %struct.vdma_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !8960
  ret i32 0, !dbg !8961
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !8962 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !8965
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !8966
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !8967
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !8968
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !8969
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !8970
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !8971
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !8972
  %5 = load i32, i32* %4, align 4, !dbg !8972
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #22, !dbg !8973
  call void @llvm.dbg.value(metadata i32 %6, metadata !8964, metadata !DIExpression()), !dbg !8974
  %7 = icmp eq i32 %6, -120, !dbg !8975
  %8 = select i1 %7, i32 5, i32 0, !dbg !8974
  ret i32 %8, !dbg !8977
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #8 !dbg !8978 {
  ret i8 1, !dbg !8980
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !8981 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !8985, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !8987, metadata !DIExpression()), !dbg !8988
  %2 = tail call i32 @CMEM_EMIINIT_Index() #22, !dbg !8989
  call void @llvm.dbg.value(metadata i32 %2, metadata !8986, metadata !DIExpression()), !dbg !8988
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !8987, metadata !DIExpression()), !dbg !8988
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !8990
  %4 = load i32, i32* %3, align 4, !dbg !8990
  ret i32 %4, !dbg !8991
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* nocapture noundef readonly %1) local_unnamed_addr #11 !dbg !8992 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8996, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %1, metadata !8997, metadata !DIExpression()), !dbg !8999
  %3 = and i32 %0, 134217727, !dbg !9000
  call void @llvm.dbg.value(metadata i32 %3, metadata !8996, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i16 0, metadata !8998, metadata !DIExpression()), !dbg !8999
  %4 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 1, i32 1, !dbg !9001
  %5 = load i32, i32* %4, align 4, !dbg !9001
  %6 = icmp eq i32 %5, 0, !dbg !9004
  br i1 %6, label %25, label %7, !dbg !9005

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !8998, metadata !DIExpression()), !dbg !8999
  %11 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %9, i32 0, !dbg !9006
  %12 = load i32, i32* %11, align 4, !dbg !9006
  %13 = icmp ult i32 %3, %12, !dbg !9009
  br i1 %13, label %18, label %14, !dbg !9010

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %8, i32 0, !dbg !9011
  %16 = load i32, i32* %15, align 4, !dbg !9011
  %17 = icmp ult i32 %3, %16, !dbg !9012
  br i1 %17, label %25, label %18, !dbg !9013

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !9014
  call void @llvm.dbg.value(metadata i16 %19, metadata !8998, metadata !DIExpression()), !dbg !8999
  %20 = zext i16 %19 to i32, !dbg !9015
  %21 = add nuw nsw i32 %20, 1, !dbg !9016
  %22 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %21, i32 1, !dbg !9001
  %23 = load i32, i32* %22, align 4, !dbg !9001
  %24 = icmp eq i32 %23, 0, !dbg !9004
  br i1 %24, label %25, label %7, !dbg !9005, !llvm.loop !9017

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !9015
  %27 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %1, i32 %26, i32 1, !dbg !9019
  %28 = load i32, i32* %27, align 4, !dbg !9019
  ret i32 %28, !dbg !9020
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #11 !dbg !9021 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9023, metadata !DIExpression()), !dbg !9024
  %2 = load %struct.vdma_config_t*, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !9025
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* noundef %2) #21, !dbg !9026
  ret i32 %3, !dbg !9027
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9028 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9030, metadata !DIExpression()), !dbg !9033
  %2 = tail call i32 @CMEM_EMIINIT_Index() #22, !dbg !9034
  call void @llvm.dbg.value(metadata i32 %2, metadata !9031, metadata !DIExpression()), !dbg !9033
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9032, metadata !DIExpression()), !dbg !9033
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9032, metadata !DIExpression()), !dbg !9033
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !9035
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.vdma_config_t* noundef nonnull %3) #21, !dbg !9036
  ret i32 %4, !dbg !9037
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.vdma_config_t* nocapture noundef readonly %0) local_unnamed_addr #11 !dbg !9038 {
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %0, metadata !9044, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.value(metadata i32 0, metadata !9045, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.value(metadata i32 0, metadata !9046, metadata !DIExpression()), !dbg !9047
  %2 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 0, i32 0, !dbg !9048
  %3 = load i32, i32* %2, align 4, !dbg !9048
  %4 = icmp eq i32 %3, 0, !dbg !9051
  br i1 %4, label %17, label %5, !dbg !9052

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9046, metadata !DIExpression()), !dbg !9047
  call void @llvm.dbg.value(metadata i32 %8, metadata !9045, metadata !DIExpression()), !dbg !9047
  %9 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %7, i32 1, !dbg !9053
  %10 = load i32, i32* %9, align 4, !dbg !9053
  %11 = mul i32 %10, %6, !dbg !9055
  %12 = add i32 %11, %8, !dbg !9056
  call void @llvm.dbg.value(metadata i32 %12, metadata !9045, metadata !DIExpression()), !dbg !9047
  %13 = add i32 %7, 1, !dbg !9057
  call void @llvm.dbg.value(metadata i32 %13, metadata !9046, metadata !DIExpression()), !dbg !9047
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %13, i32 0, !dbg !9048
  %15 = load i32, i32* %14, align 4, !dbg !9048
  %16 = icmp eq i32 %15, 0, !dbg !9051
  br i1 %16, label %17, label %5, !dbg !9052, !llvm.loop !9058

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !9047
  ret i32 %18, !dbg !9060
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef %2, %struct.vdma_config_t* nocapture noundef readonly %3) local_unnamed_addr #12 !dbg !9061 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9065, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 %1, metadata !9066, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !9067, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %3, metadata !9068, metadata !DIExpression()), !dbg !9074
  %5 = add i32 %1, %0, !dbg !9075
  call void @llvm.dbg.value(metadata i32 %5, metadata !9073, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 %0, metadata !9069, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 0, metadata !9070, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 0, metadata !9072, metadata !DIExpression()), !dbg !9074
  %6 = icmp ugt i32 %5, %0, !dbg !9076
  br i1 %6, label %7, label %34, !dbg !9079

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9072, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 %9, metadata !9069, metadata !DIExpression()), !dbg !9074
  call void @llvm.dbg.value(metadata i32 %10, metadata !9070, metadata !DIExpression()), !dbg !9074
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.vdma_config_t* noundef %3) #21, !dbg !9080
  call void @llvm.dbg.value(metadata i32 %11, metadata !9071, metadata !DIExpression()), !dbg !9074
  %12 = icmp eq i32 %8, 0, !dbg !9082
  %13 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 0, !dbg !9084
  br i1 %12, label %14, label %16, !dbg !9085

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !9086
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 1, !dbg !9088
  store i32 1, i32* %15, align 4, !dbg !9089
  br label %29, !dbg !9090

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !9091
  %18 = icmp eq i32 %11, %17, !dbg !9093
  br i1 %18, label %19, label %23, !dbg !9094

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %10, i32 1, !dbg !9095
  %21 = load i32, i32* %20, align 4, !dbg !9097
  %22 = add i32 %21, 1, !dbg !9097
  store i32 %22, i32* %20, align 4, !dbg !9097
  br label %29, !dbg !9098

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !9099
  call void @llvm.dbg.value(metadata i32 %24, metadata !9070, metadata !DIExpression()), !dbg !9074
  %25 = icmp eq i32 %24, 9, !dbg !9101
  br i1 %25, label %34, label %26, !dbg !9103

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %24, i32 0, !dbg !9104
  store i32 %11, i32* %27, align 4, !dbg !9105
  %28 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %24, i32 1, !dbg !9106
  store i32 1, i32* %28, align 4, !dbg !9107
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !9108
  call void @llvm.dbg.value(metadata i32 %30, metadata !9070, metadata !DIExpression()), !dbg !9074
  %31 = add i32 %11, %9, !dbg !9109
  call void @llvm.dbg.value(metadata i32 %31, metadata !9069, metadata !DIExpression()), !dbg !9074
  %32 = add i32 %8, 1, !dbg !9110
  call void @llvm.dbg.value(metadata i32 %32, metadata !9072, metadata !DIExpression()), !dbg !9074
  %33 = icmp ult i32 %31, %5, !dbg !9076
  br i1 %33, label %7, label %34, !dbg !9079, !llvm.loop !9111

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !9074
  ret i32 %35, !dbg !9113
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2) local_unnamed_addr #0 !dbg !9114 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9118, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata i32 %1, metadata !9119, metadata !DIExpression()), !dbg !9121
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !9120, metadata !DIExpression()), !dbg !9121
  %4 = bitcast %struct.vdma_config_t* %2 to i8*, !dbg !9122
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #22, !dbg !9123
  %6 = load %struct.vdma_config_t*, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !9124
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* noundef %6) #21, !dbg !9125
  ret i32 %7, !dbg !9126
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef readnone %2) local_unnamed_addr #8 !dbg !9127 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9129, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata i32 %1, metadata !9130, metadata !DIExpression()), !dbg !9132
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !9131, metadata !DIExpression()), !dbg !9132
  ret i32 0, !dbg !9133
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !9134 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9136, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata i32 %1, metadata !9137, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !9138, metadata !DIExpression()), !dbg !9141
  %4 = tail call i32 @CMEM_EMIINIT_Index() #22, !dbg !9142
  call void @llvm.dbg.value(metadata i32 %4, metadata !9139, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9140, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9140, metadata !DIExpression()), !dbg !9141
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !9143
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* noundef nonnull %5) #21, !dbg !9144
  ret i32 %6, !dbg !9145
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* nocapture noundef readnone %2) local_unnamed_addr #8 !dbg !9146 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9148, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata i32 %1, metadata !9149, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !9150, metadata !DIExpression()), !dbg !9151
  ret i32 0, !dbg !9152
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !9153 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9155, metadata !DIExpression()), !dbg !9158
  %2 = tail call i32 @CMEM_EMIINIT_Index() #22, !dbg !9159
  call void @llvm.dbg.value(metadata i32 %2, metadata !9156, metadata !DIExpression()), !dbg !9158
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9157, metadata !DIExpression()), !dbg !9158
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9157, metadata !DIExpression()), !dbg !9158
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !9160
  %4 = load i32, i32* %3, align 4, !dbg !9160
  ret i32 %4, !dbg !9161
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.vdma_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #5 !dbg !9162 {
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %0, metadata !9166, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata i32* %1, metadata !9167, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata i32 %2, metadata !9168, metadata !DIExpression()), !dbg !9169
  %4 = load i32, i32* %1, align 4, !dbg !9170
  %5 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %4, i32 0, !dbg !9172
  %6 = load i32, i32* %5, align 4, !dbg !9172
  %7 = icmp eq i32 %6, %2, !dbg !9173
  br i1 %7, label %8, label %12, !dbg !9174

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %4, i32 1, !dbg !9175
  %10 = load i32, i32* %9, align 4, !dbg !9177
  %11 = add i32 %10, 1, !dbg !9177
  store i32 %11, i32* %9, align 4, !dbg !9177
  br label %17, !dbg !9178

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !9179
  store i32 %13, i32* %1, align 4, !dbg !9179
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %13, i32 1, !dbg !9181
  store i32 1, i32* %14, align 4, !dbg !9182
  %15 = load i32, i32* %1, align 4, !dbg !9183
  %16 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %0, i32 %15, i32 0, !dbg !9184
  store i32 %2, i32* %16, align 4, !dbg !9185
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !9186
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.vdma_config_t* noundef %2, %struct.vdma_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !9187 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9191, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %1, metadata !9192, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %2, metadata !9193, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata %struct.vdma_config_t* %3, metadata !9194, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 0, metadata !9195, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 0, metadata !9196, metadata !DIExpression()), !dbg !9200
  %5 = bitcast %struct.vdma_config_t* %2 to i8*, !dbg !9201
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #22, !dbg !9202
  call void @llvm.dbg.value(metadata i32 0, metadata !9199, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 0, metadata !9198, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 0, metadata !9196, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 0, metadata !9195, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %0, metadata !9191, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %1, metadata !9192, metadata !DIExpression()), !dbg !9200
  %7 = icmp eq i32 %1, 0, !dbg !9203
  br i1 %7, label %53, label %8, !dbg !9206

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9199, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %10, metadata !9198, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %11, metadata !9196, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %12, metadata !9195, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %13, metadata !9191, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %14, metadata !9192, metadata !DIExpression()), !dbg !9200
  %15 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 %12, i32 1, !dbg !9207
  %16 = load i32, i32* %15, align 4, !dbg !9207
  %17 = icmp ult i32 %9, %16, !dbg !9210
  %18 = xor i1 %17, true, !dbg !9211
  %19 = zext i1 %18 to i32, !dbg !9211
  %20 = add i32 %12, %19, !dbg !9211
  call void @llvm.dbg.value(metadata i32 undef, metadata !9199, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %20, metadata !9195, metadata !DIExpression()), !dbg !9200
  %21 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %3, i32 %20, i32 0, !dbg !9212
  %22 = load i32, i32* %21, align 4, !dbg !9212
  %23 = add i32 %22, %10, !dbg !9213
  call void @llvm.dbg.value(metadata i32 %23, metadata !9198, metadata !DIExpression()), !dbg !9200
  %24 = icmp ult i32 %23, %13, !dbg !9214
  br i1 %24, label %46, label %25, !dbg !9216

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !9217
  call void @llvm.dbg.value(metadata i32 %26, metadata !9197, metadata !DIExpression()), !dbg !9200
  %27 = icmp ult i32 %14, %26, !dbg !9219
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !9221
  call void @llvm.dbg.value(metadata i32 %28, metadata !9197, metadata !DIExpression()), !dbg !9200
  %29 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %11, i32 0, !dbg !9222
  %30 = load i32, i32* %29, align 4, !dbg !9222
  %31 = icmp eq i32 %30, %28, !dbg !9224
  br i1 %31, label %32, label %36, !dbg !9225

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %11, i32 1, !dbg !9226
  %34 = load i32, i32* %33, align 4, !dbg !9228
  %35 = add i32 %34, 1, !dbg !9228
  store i32 %35, i32* %33, align 4, !dbg !9228
  br label %42, !dbg !9229

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !9230
  %38 = zext i1 %37 to i32, !dbg !9233
  %39 = add nsw i32 %11, %38, !dbg !9233
  call void @llvm.dbg.value(metadata i32 %39, metadata !9196, metadata !DIExpression()), !dbg !9200
  %40 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %39, i32 1, !dbg !9234
  store i32 1, i32* %40, align 4, !dbg !9235
  %41 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %2, i32 %39, i32 0, !dbg !9236
  store i32 %28, i32* %41, align 4, !dbg !9237
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !9200
  call void @llvm.dbg.value(metadata i32 %43, metadata !9196, metadata !DIExpression()), !dbg !9200
  %44 = add i32 %28, %13, !dbg !9238
  call void @llvm.dbg.value(metadata i32 %44, metadata !9191, metadata !DIExpression()), !dbg !9200
  %45 = sub i32 %14, %28, !dbg !9239
  call void @llvm.dbg.value(metadata i32 %45, metadata !9192, metadata !DIExpression()), !dbg !9200
  br label %46, !dbg !9240

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !9241
  call void @llvm.dbg.value(metadata i32 %49, metadata !9196, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %48, metadata !9191, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %47, metadata !9192, metadata !DIExpression()), !dbg !9200
  %50 = add nuw i32 %9, 1, !dbg !9242
  %51 = select i1 %17, i32 %50, i32 1, !dbg !9242
  call void @llvm.dbg.value(metadata i32 %51, metadata !9199, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %23, metadata !9198, metadata !DIExpression()), !dbg !9200
  call void @llvm.dbg.value(metadata i32 %20, metadata !9195, metadata !DIExpression()), !dbg !9200
  %52 = icmp eq i32 %47, 0, !dbg !9203
  br i1 %52, label %53, label %8, !dbg !9206, !llvm.loop !9243

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !9245
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !9246 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9250
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9251
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9250
  store %struct.vdma_config_t* %3, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !9252
  %4 = tail call i32 @custom_get_fat_addr() #22, !dbg !9253
  %5 = tail call i32 @custom_get_fat_len() #22, !dbg !9254
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9255
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !9256
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !9255
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @BankInfo, i32 0, i32 0), %struct.vdma_config_t* noundef nonnull %8) #21, !dbg !9257
  %10 = tail call i32 @custom_get_fat_addr() #22, !dbg !9258
  %11 = tail call i32 @custom_get_fat_len() #22, !dbg !9259
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !9260
  call void @llvm.dbg.value(metadata i32 %12, metadata !9248, metadata !DIExpression()), !dbg !9261
  %13 = icmp eq i32 %12, 0, !dbg !9262
  br i1 %13, label %14, label %46, !dbg !9264

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !9249, metadata !DIExpression()), !dbg !9261
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !9265
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9267
  call void @llvm.dbg.value(metadata i32 0, metadata !9249, metadata !DIExpression()), !dbg !9261
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !9268
  %16 = icmp eq i32 %15, 0, !dbg !9270
  br i1 %16, label %34, label %17, !dbg !9271

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !9249, metadata !DIExpression()), !dbg !9261
  %22 = getelementptr inbounds [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !9272
  %23 = load i32, i32* %22, align 4, !dbg !9272
  %24 = add i32 %20, %23, !dbg !9274
  %25 = icmp ugt i32 %18, %21, !dbg !9275
  br i1 %25, label %26, label %27, !dbg !9277

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9278
  br label %27, !dbg !9280

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !9281
  call void @llvm.dbg.value(metadata i32 %29, metadata !9249, metadata !DIExpression()), !dbg !9261
  %30 = getelementptr inbounds [8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !9268
  %31 = load i32, i32* %30, align 4, !dbg !9268
  %32 = icmp eq i32 %31, 0, !dbg !9270
  br i1 %32, label %33, label %17, !dbg !9271, !llvm.loop !9282

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !9274
  br label %34, !dbg !9271

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !9284
  %36 = mul i32 %35, -5, !dbg !9285
  %37 = add i32 %36, 262144, !dbg !9286
  %38 = lshr i32 %37, 9, !dbg !9287
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !9288
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !9289
  call void @llvm.dbg.value(metadata i32 0, metadata !9248, metadata !DIExpression()), !dbg !9261
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9290
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !9291
  %42 = load i8, i8* %41, align 1, !dbg !9291
  %43 = icmp eq i8 %42, 3, !dbg !9292
  br i1 %43, label %44, label %46, !dbg !9292

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !9293
  call void @llvm.dbg.value(metadata i32 %45, metadata !9248, metadata !DIExpression()), !dbg !9261
  br label %46, !dbg !9295

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !9261
  ret i32 %47, !dbg !9296
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !9297 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9301, metadata !DIExpression()), !dbg !9302
  %2 = icmp eq i32 %0, 0, !dbg !9303
  br i1 %2, label %3, label %9, !dbg !9305

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #22, !dbg !9306
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !9308
  %5 = icmp slt i32 %4, 0, !dbg !9309
  br i1 %5, label %6, label %7, !dbg !9311

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #22, !dbg !9312
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.116, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.117, i32 0, i32 0)) #24, !dbg !9312
  unreachable, !dbg !9312

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #22, !dbg !9317
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9318
  br label %9, !dbg !9319

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9320
  ret void, !dbg !9321
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !9322 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !9323
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !9324
  ret i32 %1, !dbg !9325
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !9326 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !9329
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9330
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9331
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9332
  %4 = load i16, i16* %3, align 2, !dbg !9332
  %5 = zext i16 %4 to i32, !dbg !9330
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9333
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9334
  store %struct.vdma_config_t* %6, %struct.vdma_config_t** @BlockLayout, align 4, !dbg !9335
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !9336
  %8 = bitcast %struct.vdma_config_t* %7 to i8*, !dbg !9336
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.vdma_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #22, !dbg !9337
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !9338
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !9339
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !9340
  store i32 xor (i32 ptrtoint ([8 x %struct.vdma_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !9341
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9342
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9343
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !9344
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !9345
  %13 = load i32, i32* %12, align 4, !dbg !9345
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #22, !dbg !9346
  call void @llvm.dbg.value(metadata i32 %14, metadata !9328, metadata !DIExpression()), !dbg !9347
  %15 = icmp eq i32 %14, -120, !dbg !9348
  br i1 %15, label %16, label %17, !dbg !9351

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #22, !dbg !9352
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.116, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.117, i32 0, i32 0)) #24, !dbg !9352
  unreachable, !dbg !9352

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !9354
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !9355
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.vdma_config_t* noundef getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !9356
  store %struct.vdma_config_t* getelementptr inbounds ([8 x %struct.vdma_config_t], [8 x %struct.vdma_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.vdma_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !9357
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !9358
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9359
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !9360
  ret i32 0, !dbg !9361
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #8 !dbg !9362 {
  ret void, !dbg !9363
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !9364 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !9367
  call void @llvm.dbg.value(metadata i32 %1, metadata !9366, metadata !DIExpression()), !dbg !9368
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9369
  br i1 %2, label %4, label %3, !dbg !9371

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !9372
  br label %4, !dbg !9374

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9375
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !9375
  ret i32 %5, !dbg !9376
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !9377 {
  %1 = tail call i32 @SaveAndSetIRQMask() #22, !dbg !9380
  call void @llvm.dbg.value(metadata i32 %1, metadata !9379, metadata !DIExpression()), !dbg !9381
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !9382
  br i1 %2, label %3, label %4, !dbg !9384

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !9385
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !9387
  ret void, !dbg !9388

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #22, !dbg !9389
  tail call void @Flash_ReturnReady() #22, !dbg !9391
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.122, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #24, !dbg !9391
  unreachable, !dbg !9391
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #8 !dbg !9395 {
  ret void, !dbg !9396
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !9397 {
  br label %1, !dbg !9400

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !9401
  call void @llvm.dbg.value(metadata i32 %2, metadata !9399, metadata !DIExpression()), !dbg !9403
  %3 = icmp eq i32 %2, 0, !dbg !9404
  br i1 %3, label %4, label %1, !dbg !9405, !llvm.loop !9406

4:                                                ; preds = %1
  ret void, !dbg !9408
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !9409 {
  tail call void @FreeFDMLock() #21, !dbg !9410
  ret void, !dbg !9411
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9412 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9455, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.value(metadata i32 %1, metadata !9456, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.value(metadata i8* %2, metadata !9457, metadata !DIExpression()), !dbg !9461
  call void @llvm.dbg.value(metadata i32 %3, metadata !9458, metadata !DIExpression()), !dbg !9461
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9462
  %6 = load i32, i32* %5, align 4, !dbg !9462
  call void @llvm.dbg.value(metadata i32 %6, metadata !9460, metadata !DIExpression()), !dbg !9461
  %7 = icmp ule i32 %6, %1, !dbg !9463
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !9465
  br i1 %10, label %26, label %11, !dbg !9465

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9466
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !9466
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !9466
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !9467
  %16 = load i8*, i8** %15, align 4, !dbg !9467
  %17 = ptrtoint i8* %16 to i32, !dbg !9468
  %18 = add i32 %17, %1, !dbg !9469
  call void @llvm.dbg.value(metadata i32 %18, metadata !9459, metadata !DIExpression()), !dbg !9461
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9470
  %20 = load i8, i8* %19, align 4, !dbg !9470, !range !2545
  %21 = icmp eq i8 %20, 0, !dbg !9470
  br i1 %21, label %22, label %23, !dbg !9472

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9473
  br label %23, !dbg !9475

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !9476
  %24 = inttoptr i32 %18 to i8*, !dbg !9477
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #22, !dbg !9478
  tail call void @release_FDM_lock() #21, !dbg !9479
  br label %26, !dbg !9480

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !9461
  ret i32 %27, !dbg !9481
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !9482 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9486, metadata !DIExpression()), !dbg !9488
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9489
  %3 = load i8, i8* %2, align 4, !dbg !9489, !range !2545
  %4 = icmp eq i8 %3, 0, !dbg !9489
  br i1 %4, label %5, label %18, !dbg !9491

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !9492
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9493
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !9493
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !9494
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !9494
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9495
  %11 = load i8*, i8** %10, align 4, !dbg !9495
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !9496
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !9497
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #22, !dbg !9498
  call void @llvm.dbg.value(metadata i32 %14, metadata !9487, metadata !DIExpression()), !dbg !9488
  tail call void @release_FDM_lock() #21, !dbg !9499
  %15 = icmp slt i32 %14, 0, !dbg !9500
  br i1 %15, label %16, label %17, !dbg !9502

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #22, !dbg !9503
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.122, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #24, !dbg !9503
  unreachable, !dbg !9503

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !9508
  br label %18, !dbg !9509

18:                                               ; preds = %1, %17
  ret void, !dbg !9509
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9510 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9512, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i32 %1, metadata !9513, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i8* %2, metadata !9514, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i32 %3, metadata !9515, metadata !DIExpression()), !dbg !9533
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !9534
  %7 = load i32, i32* %6, align 4, !dbg !9534
  call void @llvm.dbg.value(metadata i32 %7, metadata !9518, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i32 0, metadata !9519, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i32 0, metadata !9520, metadata !DIExpression()), !dbg !9533
  %8 = icmp ugt i32 %7, %1, !dbg !9535
  br i1 %8, label %9, label %101, !dbg !9537

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !9538
  %11 = icmp ugt i32 %10, %7, !dbg !9540
  br i1 %11, label %101, label %12, !dbg !9541

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9542
  %14 = load i8, i8* %13, align 4, !dbg !9542, !range !2545
  %15 = icmp eq i8 %14, 0, !dbg !9542
  br i1 %15, label %16, label %17, !dbg !9544

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9545
  br label %17, !dbg !9547

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !9548
  %18 = bitcast i16* %5 to i8*, !dbg !9549
  call void @llvm.dbg.value(metadata i32 0, metadata !9519, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i32 0, metadata !9520, metadata !DIExpression()), !dbg !9533
  %19 = icmp eq i32 %3, 0, !dbg !9550
  br i1 %19, label %99, label %20, !dbg !9551

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !9551

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !9520, metadata !DIExpression()), !dbg !9533
  %27 = load i8*, i8** %21, align 4, !dbg !9552
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !9553
  %29 = bitcast i8* %28 to i8**, !dbg !9553
  %30 = load i8*, i8** %29, align 4, !dbg !9553
  %31 = ptrtoint i8* %30 to i32, !dbg !9554
  %32 = add i32 %31, %1, !dbg !9555
  %33 = add i32 %32, %26, !dbg !9556
  call void @llvm.dbg.value(metadata i32 %33, metadata !9516, metadata !DIExpression()), !dbg !9533
  %34 = add i32 %26, %22, !dbg !9557
  call void @llvm.dbg.value(metadata i32 %34, metadata !9517, metadata !DIExpression()), !dbg !9533
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9558
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !9559
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !9559
  %38 = add i32 %26, %1, !dbg !9560
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #22, !dbg !9561
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #22, !dbg !9562
  %41 = and i32 %33, 1, !dbg !9563
  %42 = icmp eq i32 %41, 0, !dbg !9563
  br i1 %42, label %43, label %46, !dbg !9564

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !9565
  %45 = icmp eq i32 %44, 1, !dbg !9566
  br i1 %45, label %46, label %57, !dbg !9567

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9568
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !9570
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !9570
  %50 = load i8*, i8** %21, align 4, !dbg !9571
  %51 = inttoptr i32 %33 to i8*, !dbg !9572
  %52 = inttoptr i32 %34 to i8*, !dbg !9573
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #22, !dbg !9574
  call void @llvm.dbg.value(metadata i32 %53, metadata !9519, metadata !DIExpression()), !dbg !9533
  %54 = icmp eq i32 %53, 0, !dbg !9575
  br i1 %54, label %55, label %99, !dbg !9577

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !9578
  call void @llvm.dbg.value(metadata i32 %56, metadata !9520, metadata !DIExpression()), !dbg !9533
  br label %96, !dbg !9579

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !9580
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #22, !dbg !9581
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #22, !dbg !9582
  call void @llvm.dbg.value(metadata i32 %60, metadata !9521, metadata !DIExpression()), !dbg !9583
  call void @llvm.dbg.value(metadata i32 %44, metadata !9525, metadata !DIExpression()), !dbg !9583
  %61 = add i32 %60, %33, !dbg !9584
  %62 = sub i32 0, %60, !dbg !9585
  %63 = and i32 %61, %62, !dbg !9586
  call void @llvm.dbg.value(metadata i32 %63, metadata !9526, metadata !DIExpression()), !dbg !9583
  %64 = add i32 %32, %3, !dbg !9587
  %65 = icmp ugt i32 %64, %63, !dbg !9589
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !9590
  call void @llvm.dbg.value(metadata i32 %67, metadata !9525, metadata !DIExpression()), !dbg !9583
  %68 = and i32 %67, -2, !dbg !9591
  call void @llvm.dbg.value(metadata i32 %68, metadata !9525, metadata !DIExpression()), !dbg !9583
  %69 = icmp ne i32 %68, 2, !dbg !9592
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !9593
  br i1 %72, label %85, label %73, !dbg !9593

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #23, !dbg !9549
  call void @llvm.dbg.value(metadata i8* %18, metadata !9532, metadata !DIExpression()), !dbg !9594
  %74 = inttoptr i32 %34 to i8*, !dbg !9595
  %75 = load i8, i8* %74, align 1, !dbg !9596
  call void @llvm.dbg.value(metadata i8 undef, metadata !9527, metadata !DIExpression()), !dbg !9594
  store i8 %75, i8* %18, align 2, !dbg !9597
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !9598
  %77 = load i8, i8* %76, align 1, !dbg !9599
  store i8 %77, i8* %24, align 1, !dbg !9600
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9601
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !9602
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !9602
  %81 = load i8*, i8** %21, align 4, !dbg !9603
  %82 = inttoptr i32 %33 to i8*, !dbg !9604
  call void @llvm.dbg.value(metadata i16* %5, metadata !9527, metadata !DIExpression(DW_OP_deref)), !dbg !9594
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #22, !dbg !9605
  call void @llvm.dbg.value(metadata i32 %83, metadata !9519, metadata !DIExpression()), !dbg !9533
  %84 = icmp eq i32 %83, 0, !dbg !9606
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #23, !dbg !9608
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !9609
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !9613
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !9613
  %89 = load i8*, i8** %21, align 4, !dbg !9614
  %90 = inttoptr i32 %33 to i8*, !dbg !9615
  %91 = inttoptr i32 %34 to i8*, !dbg !9616
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #22, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %92, metadata !9519, metadata !DIExpression()), !dbg !9533
  %93 = icmp eq i32 %92, 0, !dbg !9618
  br i1 %93, label %94, label %99, !dbg !9620

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !9519, metadata !DIExpression()), !dbg !9533
  %95 = add i32 %68, %26, !dbg !9621
  call void @llvm.dbg.value(metadata i32 %83, metadata !9519, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i32 %26, metadata !9520, metadata !DIExpression()), !dbg !9533
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !9622
  call void @llvm.dbg.value(metadata i32 0, metadata !9519, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.value(metadata i32 %97, metadata !9520, metadata !DIExpression()), !dbg !9533
  %98 = icmp ult i32 %97, %3, !dbg !9550
  br i1 %98, label %25, label %99, !dbg !9551, !llvm.loop !9623

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !9625
  br label %101, !dbg !9626

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !9533
  ret i32 %102, !dbg !9626
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9627 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !9631, metadata !DIExpression()), !dbg !9635
  call void @llvm.dbg.value(metadata i32 %1, metadata !9632, metadata !DIExpression()), !dbg !9635
  %3 = and i32 %1, 16777215, !dbg !9636
  call void @llvm.dbg.value(metadata i32 %3, metadata !9634, metadata !DIExpression()), !dbg !9635
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !9637
  %5 = load i8, i8* %4, align 4, !dbg !9637, !range !2545
  %6 = icmp eq i8 %5, 0, !dbg !9637
  br i1 %6, label %7, label %8, !dbg !9639

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !9640
  br label %8, !dbg !9642

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !9643
  %10 = load i32, i32* %9, align 4, !dbg !9643
  %11 = icmp ult i32 %3, %10, !dbg !9645
  br i1 %11, label %12, label %27, !dbg !9646

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !9647
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !9648
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9648
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !9649
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !9649
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !9650
  %18 = load i8*, i8** %17, align 4, !dbg !9650
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #22, !dbg !9651
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !9652
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !9653
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !9653
  %23 = load i8*, i8** %17, align 4, !dbg !9654
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #22, !dbg !9655
  call void @llvm.dbg.value(metadata i32 %24, metadata !9633, metadata !DIExpression()), !dbg !9635
  tail call void @release_FDM_lock() #21, !dbg !9656
  %25 = icmp eq i32 %24, 0, !dbg !9657
  %26 = select i1 %25, i32 0, i32 6, !dbg !9635
  br label %27, !dbg !9635

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !9635
  ret i32 %28, !dbg !9659
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !9660 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9661
  br i1 %1, label %3, label %2, !dbg !9663

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #22, !dbg !9664
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !9666
  store i1 true, i1* @flash_init_status, align 4, !dbg !9667
  br label %3, !dbg !9668

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !9669
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #2 section ".ram_code" !dbg !9670 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !9671
  %2 = select i1 %1, i32 0, i32 -5, !dbg !9671
  ret i32 %2, !dbg !9672
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9673 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9677, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i32 %1, metadata !9678, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata i8* %2, metadata !9679, metadata !DIExpression()), !dbg !9684
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9680, metadata !DIExpression()), !dbg !9684
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9685
  call void @llvm.dbg.value(metadata i8* %4, metadata !9681, metadata !DIExpression()), !dbg !9684
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #22, !dbg !9686
  %6 = ptrtoint i8* %5 to i32, !dbg !9687
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9688
  %8 = bitcast i8* %7 to i8**, !dbg !9688
  %9 = load i8*, i8** %8, align 4, !dbg !9688
  %10 = ptrtoint i8* %9 to i32, !dbg !9689
  %11 = shl i32 %1, 9, !dbg !9690
  %12 = add i32 %11, %6, !dbg !9691
  %13 = sub i32 %12, %10, !dbg !9692
  call void @llvm.dbg.value(metadata i32 %13, metadata !9683, metadata !DIExpression()), !dbg !9684
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !9693
  call void @llvm.dbg.value(metadata i32 %14, metadata !9682, metadata !DIExpression()), !dbg !9684
  %15 = icmp eq i32 %14, 0, !dbg !9694
  %16 = select i1 %15, i32 0, i32 -13, !dbg !9684
  ret i32 %16, !dbg !9696
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !9697 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9699, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i32 %1, metadata !9700, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata i8* %2, metadata !9701, metadata !DIExpression()), !dbg !9706
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9702, metadata !DIExpression()), !dbg !9706
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9707
  call void @llvm.dbg.value(metadata i8* %4, metadata !9703, metadata !DIExpression()), !dbg !9706
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #22, !dbg !9708
  %6 = ptrtoint i8* %5 to i32, !dbg !9709
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9710
  %8 = bitcast i8* %7 to i8**, !dbg !9710
  %9 = load i8*, i8** %8, align 4, !dbg !9710
  %10 = ptrtoint i8* %9 to i32, !dbg !9711
  %11 = shl i32 %1, 9, !dbg !9712
  %12 = add i32 %11, %6, !dbg !9713
  %13 = sub i32 %12, %10, !dbg !9714
  call void @llvm.dbg.value(metadata i32 %13, metadata !9705, metadata !DIExpression()), !dbg !9706
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !9715
  call void @llvm.dbg.value(metadata i32 %14, metadata !9704, metadata !DIExpression()), !dbg !9706
  %15 = icmp eq i32 %14, 0, !dbg !9716
  %16 = select i1 %15, i32 0, i32 -14, !dbg !9706
  ret i32 %16, !dbg !9718
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !9719 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9723, metadata !DIExpression()), !dbg !9725
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !9726
  call void @llvm.dbg.value(metadata i32 %2, metadata !9724, metadata !DIExpression()), !dbg !9725
  %3 = icmp eq i32 %2, 0, !dbg !9727
  %4 = select i1 %3, i32 0, i32 -15, !dbg !9725
  ret i32 %4, !dbg !9729
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9730 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9732, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9733, metadata !DIExpression()), !dbg !9735
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9736
  call void @llvm.dbg.value(metadata i8* %2, metadata !9734, metadata !DIExpression()), !dbg !9735
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #22, !dbg !9737
  ret i32 %3, !dbg !9738
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !9739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9741, metadata !DIExpression()), !dbg !9744
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9742, metadata !DIExpression()), !dbg !9744
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9745
  call void @llvm.dbg.value(metadata i8* %2, metadata !9743, metadata !DIExpression()), !dbg !9744
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #22, !dbg !9746
  ret i32 %3, !dbg !9747
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !9748 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9752, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.value(metadata i32* %1, metadata !9753, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.value(metadata i32* %2, metadata !9754, metadata !DIExpression()), !dbg !9757
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9755, metadata !DIExpression()), !dbg !9757
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9758
  call void @llvm.dbg.value(metadata i8* %4, metadata !9756, metadata !DIExpression()), !dbg !9757
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #22, !dbg !9759
  store i32 %5, i32* %1, align 4, !dbg !9760
  %6 = icmp eq i32 %5, -1, !dbg !9761
  br i1 %6, label %10, label %7, !dbg !9763

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #22, !dbg !9764
  %9 = urem i32 %0, %8, !dbg !9765
  store i32 %9, i32* %2, align 4, !dbg !9766
  br label %10, !dbg !9767

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !9757
  ret i32 %11, !dbg !9768
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !9769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9773, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata i32 %1, metadata !9774, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata i32* %2, metadata !9775, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9776, metadata !DIExpression()), !dbg !9778
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !9779
  call void @llvm.dbg.value(metadata i8* %4, metadata !9777, metadata !DIExpression()), !dbg !9778
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #22, !dbg !9780
  %6 = ptrtoint i8* %5 to i32, !dbg !9781
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9782
  %8 = bitcast i8* %7 to i8**, !dbg !9782
  %9 = load i8*, i8** %8, align 4, !dbg !9782
  %10 = ptrtoint i8* %9 to i32, !dbg !9783
  %11 = add i32 %6, %1, !dbg !9784
  %12 = sub i32 %11, %10, !dbg !9785
  store i32 %12, i32* %2, align 4, !dbg !9786
  ret i32 0, !dbg !9787
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !9788 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9792, metadata !DIExpression()), !dbg !9793
  %2 = add i32 %0, 2, !dbg !9794
  %3 = icmp ult i32 %2, 9, !dbg !9794
  br i1 %3, label %5, label %4, !dbg !9794

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #22, !dbg !9795
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.122, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #24, !dbg !9795
  unreachable, !dbg !9795

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !9794
  %7 = lshr i16 433, %6, !dbg !9794
  %8 = and i16 %7, 1, !dbg !9794
  %9 = icmp eq i16 %8, 0, !dbg !9794
  br i1 %9, label %4, label %10, !dbg !9794

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !9794
  %12 = load i32, i32* %11, align 4, !dbg !9794
  ret i32 %12, !dbg !9805
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !9806 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9811, metadata !DIExpression()), !dbg !9814
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !9815
  call void @llvm.dbg.value(metadata i32 %2, metadata !9813, metadata !DIExpression()), !dbg !9814
  %3 = icmp eq i32 %2, -1, !dbg !9816
  br i1 %3, label %4, label %5, !dbg !9818

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #22, !dbg !9819
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.122, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #24, !dbg !9819
  unreachable, !dbg !9819

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !9824
  call void @llvm.dbg.value(metadata i32 %6, metadata !9812, metadata !DIExpression()), !dbg !9814
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !9825

7:                                                ; preds = %5
  br label %10, !dbg !9826

8:                                                ; preds = %5
  br label %10, !dbg !9830

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #22, !dbg !9833
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.122, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #24, !dbg !9833
  unreachable, !dbg !9833

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !9838
  ret i32 %11, !dbg !9839
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !9840 {
  %1 = tail call i32 @NOR_init() #21, !dbg !9841
  ret i32 0, !dbg !9842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #8 !dbg !9843 {
  ret i32 0, !dbg !9844
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !9845 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9849, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i32 %1, metadata !9850, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.value(metadata i32 0, metadata !9853, metadata !DIExpression()), !dbg !9854
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !9855

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !9856
  %5 = icmp eq i32 %4, 0, !dbg !9860
  br i1 %5, label %12, label %22, !dbg !9861

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !9862
  %8 = icmp eq i32 %7, 0, !dbg !9866
  br i1 %8, label %12, label %22, !dbg !9867

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !9868
  %11 = icmp eq i32 %10, 0, !dbg !9872
  br i1 %11, label %12, label %22, !dbg !9873

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !9874
  call void @llvm.dbg.value(metadata i32 %13, metadata !9853, metadata !DIExpression()), !dbg !9854
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !9875
  call void @llvm.dbg.value(metadata i32 %14, metadata !9852, metadata !DIExpression()), !dbg !9854
  %15 = icmp eq i32 %14, -1, !dbg !9876
  br i1 %15, label %22, label %16, !dbg !9878

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !9879
  call void @llvm.dbg.value(metadata i32 %17, metadata !9852, metadata !DIExpression()), !dbg !9854
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !9880
  call void @llvm.dbg.value(metadata i32 %18, metadata !9851, metadata !DIExpression()), !dbg !9854
  %19 = icmp eq i32 %18, 0, !dbg !9881
  br i1 %19, label %22, label %20, !dbg !9883

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !9884
  br label %22, !dbg !9886

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !9854
  ret i32 %23, !dbg !9887
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9888 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9892, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i8* %1, metadata !9893, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %2, metadata !9894, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9895, metadata !DIExpression()), !dbg !9897
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !9898
  call void @llvm.dbg.value(metadata i32 %4, metadata !9896, metadata !DIExpression()), !dbg !9897
  %5 = icmp eq i32 %4, 0, !dbg !9899
  br i1 %5, label %8, label %6, !dbg !9901

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !9902
  br label %8, !dbg !9904

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !9897
  ret i32 %9, !dbg !9905
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !9906 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9910, metadata !DIExpression()), !dbg !9915
  call void @llvm.dbg.value(metadata i8* %1, metadata !9911, metadata !DIExpression()), !dbg !9915
  call void @llvm.dbg.value(metadata i32 %2, metadata !9912, metadata !DIExpression()), !dbg !9915
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !9913, metadata !DIExpression()), !dbg !9915
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !9916
  call void @llvm.dbg.value(metadata i32 %4, metadata !9914, metadata !DIExpression()), !dbg !9915
  %5 = icmp eq i32 %4, 0, !dbg !9917
  br i1 %5, label %8, label %6, !dbg !9919

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !9920
  br label %8, !dbg !9922

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !9915
  ret i32 %9, !dbg !9923
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !9924 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9928, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata i32 %1, metadata !9929, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata i8* %0, metadata !9930, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata i32 0, metadata !9931, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata i32 0, metadata !9932, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata i32 0, metadata !9933, metadata !DIExpression()), !dbg !9934
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9935
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !9935
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !9935
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !9936
  %7 = load i32, i32* %6, align 4, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %7, metadata !9933, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata i32 0, metadata !9932, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata i32 0, metadata !9931, metadata !DIExpression()), !dbg !9934
  %8 = icmp ugt i32 %7, %1, !dbg !9937
  br i1 %8, label %23, label %9, !dbg !9938

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !9939
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !9933, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata i32 %12, metadata !9932, metadata !DIExpression()), !dbg !9934
  call void @llvm.dbg.value(metadata i32 %13, metadata !9931, metadata !DIExpression()), !dbg !9934
  %14 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %12, i32 0, !dbg !9941
  %15 = load i32, i32* %14, align 4, !dbg !9941
  %16 = mul i32 %15, %10, !dbg !9942
  %17 = add i32 %16, %13, !dbg !9943
  call void @llvm.dbg.value(metadata i32 %17, metadata !9931, metadata !DIExpression()), !dbg !9934
  %18 = add i32 %12, 1, !dbg !9944
  call void @llvm.dbg.value(metadata i32 %18, metadata !9932, metadata !DIExpression()), !dbg !9934
  %19 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %18, i32 1, !dbg !9945
  %20 = load i32, i32* %19, align 4, !dbg !9945
  %21 = add i32 %20, %11, !dbg !9946
  call void @llvm.dbg.value(metadata i32 %21, metadata !9933, metadata !DIExpression()), !dbg !9934
  %22 = icmp ugt i32 %21, %1, !dbg !9937
  br i1 %22, label %23, label %9, !dbg !9938, !llvm.loop !9947

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !9949
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !9934
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !9934
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !9934
  call void @llvm.dbg.value(metadata i8* %0, metadata !9930, metadata !DIExpression()), !dbg !9934
  %28 = sub i32 %1, %27, !dbg !9950
  %29 = add i32 %28, %24, !dbg !9951
  %30 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %26, i32 0, !dbg !9952
  %31 = load i32, i32* %30, align 4, !dbg !9952
  %32 = mul i32 %29, %31, !dbg !9953
  %33 = add i32 %32, %25, !dbg !9954
  call void @llvm.dbg.value(metadata i32 %33, metadata !9931, metadata !DIExpression()), !dbg !9934
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !9955
  %35 = bitcast i8* %34 to i8**, !dbg !9955
  %36 = load i8*, i8** %35, align 4, !dbg !9955
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !9956
  ret i8* %37, !dbg !9957
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !9958 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9960, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i32 %1, metadata !9961, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i32 %2, metadata !9962, metadata !DIExpression()), !dbg !9964
  call void @llvm.dbg.value(metadata i8* %0, metadata !9963, metadata !DIExpression()), !dbg !9964
  %4 = icmp eq i32 %2, 0, !dbg !9965
  br i1 %4, label %6, label %5, !dbg !9968

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #22, !dbg !9969
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.138, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.139, i32 0, i32 0)) #24, !dbg !9969
  unreachable, !dbg !9969

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !9963, metadata !DIExpression()), !dbg !9964
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !9971
  %8 = inttoptr i32 %7 to i8*, !dbg !9972
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9973
  %10 = bitcast i8* %9 to i8**, !dbg !9973
  store i8* %8, i8** %10, align 4, !dbg !9974
  ret i8* %8, !dbg !9975
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #12 section ".ram_code" !dbg !1864 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !1868, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i32 %1, metadata !1869, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i8* %0, metadata !1870, metadata !DIExpression()), !dbg !9976
  call void @llvm.dbg.value(metadata i32 0, metadata !1915, metadata !DIExpression()), !dbg !9976
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !9977
  %4 = bitcast i8* %3 to [8 x [2 x %struct.vdma_config_t]]*, !dbg !9977
  %5 = and i32 %1, 7, !dbg !9979
  %6 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !9980
  %7 = load i32, i32* %6, align 4, !dbg !9980
  %8 = icmp eq i32 %7, -1, !dbg !9981
  br i1 %8, label %62, label %9, !dbg !9982

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !9983
  br i1 %10, label %54, label %11, !dbg !9986

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !9987
  %13 = load i32, i32* %12, align 4, !dbg !9987
  %14 = icmp eq i32 %13, -1, !dbg !9990
  br i1 %14, label %44, label %15, !dbg !9991

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !9992
  br i1 %16, label %35, label %17, !dbg !9995

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !9996
  %19 = add i32 %18, 1, !dbg !9996
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !9996
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !9998
  %21 = shl nuw nsw i32 1, %5, !dbg !10000
  %22 = and i32 %20, %21, !dbg !10001
  %23 = icmp eq i32 %22, 0, !dbg !10001
  br i1 %23, label %30, label %24, !dbg !10002

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !10003
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10005
  %26 = ptrtoint i8* %25 to i32, !dbg !10006
  %27 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10007
  store i32 %26, i32* %27, align 4, !dbg !10008
  call void @llvm.dbg.value(metadata i32 %26, metadata !1915, metadata !DIExpression()), !dbg !9976
  %28 = xor i32 %21, -1, !dbg !10009
  %29 = and i32 %20, %28, !dbg !10010
  br label %71, !dbg !10011

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !10012
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10014
  %32 = ptrtoint i8* %31 to i32, !dbg !10015
  %33 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10016
  store i32 %32, i32* %33, align 4, !dbg !10017
  call void @llvm.dbg.value(metadata i32 %32, metadata !1915, metadata !DIExpression()), !dbg !9976
  %34 = or i32 %20, %21, !dbg !10018
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10019
  %37 = add i32 %36, 1, !dbg !10019
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !10019
  %38 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10021
  %39 = load i32, i32* %38, align 4, !dbg !10021
  call void @llvm.dbg.value(metadata i32 %39, metadata !1915, metadata !DIExpression()), !dbg !9976
  %40 = shl nuw nsw i32 1, %5, !dbg !10022
  %41 = xor i32 %40, -1, !dbg !10023
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10024
  %43 = and i32 %42, %41, !dbg !10024
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10025
  %46 = add i32 %45, 1, !dbg !10025
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !10025
  store i32 %1, i32* %12, align 4, !dbg !10027
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10028
  %48 = ptrtoint i8* %47 to i32, !dbg !10029
  %49 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10030
  store i32 %48, i32* %49, align 4, !dbg !10031
  call void @llvm.dbg.value(metadata i32 %48, metadata !1915, metadata !DIExpression()), !dbg !9976
  %50 = shl nuw nsw i32 1, %5, !dbg !10032
  %51 = xor i32 %50, -1, !dbg !10033
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10034
  %53 = and i32 %52, %51, !dbg !10034
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10035
  %56 = add i32 %55, 1, !dbg !10035
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !10035
  %57 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10037
  %58 = load i32, i32* %57, align 4, !dbg !10037
  call void @llvm.dbg.value(metadata i32 %58, metadata !1915, metadata !DIExpression()), !dbg !9976
  %59 = shl nuw nsw i32 1, %5, !dbg !10038
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10039
  %61 = or i32 %60, %59, !dbg !10039
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10040
  %64 = add i32 %63, 1, !dbg !10040
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !10040
  store i32 %1, i32* %6, align 4, !dbg !10042
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10043
  %66 = ptrtoint i8* %65 to i32, !dbg !10044
  %67 = getelementptr inbounds [8 x [2 x %struct.vdma_config_t]], [8 x [2 x %struct.vdma_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10045
  store i32 %66, i32* %67, align 4, !dbg !10046
  call void @llvm.dbg.value(metadata i32 %66, metadata !1915, metadata !DIExpression()), !dbg !9976
  %68 = shl nuw nsw i32 1, %5, !dbg !10047
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10048
  %70 = or i32 %69, %68, !dbg !10048
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !10049
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !10049
  call void @llvm.dbg.value(metadata i32 %73, metadata !1915, metadata !DIExpression()), !dbg !9976
  ret i32 %73, !dbg !10050
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !10051 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10053, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i32 %1, metadata !10054, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i8* %0, metadata !10055, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i32 0, metadata !10056, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i32 0, metadata !10057, metadata !DIExpression()), !dbg !10058
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10059
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !10059
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !10059
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !10060
  %7 = load i32, i32* %6, align 4, !dbg !10060
  call void @llvm.dbg.value(metadata i32 %7, metadata !10057, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i32 0, metadata !10056, metadata !DIExpression()), !dbg !10058
  %8 = icmp ugt i32 %7, %1, !dbg !10061
  br i1 %8, label %17, label %9, !dbg !10062

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10057, metadata !DIExpression()), !dbg !10058
  call void @llvm.dbg.value(metadata i32 %11, metadata !10056, metadata !DIExpression()), !dbg !10058
  %12 = add i32 %11, 1, !dbg !10063
  call void @llvm.dbg.value(metadata i32 %12, metadata !10056, metadata !DIExpression()), !dbg !10058
  %13 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %12, i32 1, !dbg !10065
  %14 = load i32, i32* %13, align 4, !dbg !10065
  %15 = add i32 %14, %10, !dbg !10066
  call void @llvm.dbg.value(metadata i32 %15, metadata !10057, metadata !DIExpression()), !dbg !10058
  %16 = icmp ugt i32 %15, %1, !dbg !10061
  br i1 %16, label %17, label %9, !dbg !10062, !llvm.loop !10067

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !10058
  %19 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %18, i32 0, !dbg !10069
  %20 = load i32, i32* %19, align 4, !dbg !10069
  ret i32 %20, !dbg !10070
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #11 section ".ram_code" !dbg !10071 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10073, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32 %1, metadata !10074, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i8* %0, metadata !10075, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32 0, metadata !10076, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32 0, metadata !10077, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32 0, metadata !10078, metadata !DIExpression()), !dbg !10079
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10080
  %4 = bitcast i8* %3 to %struct.vdma_config_t**, !dbg !10080
  %5 = load %struct.vdma_config_t*, %struct.vdma_config_t** %4, align 4, !dbg !10080
  %6 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 1, !dbg !10081
  %7 = load i32, i32* %6, align 4, !dbg !10081
  %8 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 0, i32 0, !dbg !10082
  %9 = load i32, i32* %8, align 4, !dbg !10082
  %10 = mul i32 %9, %7, !dbg !10083
  call void @llvm.dbg.value(metadata i32 %10, metadata !10077, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32 0, metadata !10078, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32 0, metadata !10076, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32 %1, metadata !10074, metadata !DIExpression()), !dbg !10079
  %11 = icmp ult i32 %10, %1, !dbg !10084
  br i1 %11, label %12, label %30, !dbg !10085

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !10086
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10078, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32 %16, metadata !10077, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32 %17, metadata !10076, metadata !DIExpression()), !dbg !10079
  call void @llvm.dbg.value(metadata i32 %18, metadata !10074, metadata !DIExpression()), !dbg !10079
  %19 = icmp eq i32 %14, 0, !dbg !10085
  br i1 %19, label %36, label %20, !dbg !10087

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !10088
  call void @llvm.dbg.value(metadata i32 %21, metadata !10078, metadata !DIExpression()), !dbg !10079
  %22 = sub i32 %18, %16, !dbg !10090
  call void @llvm.dbg.value(metadata i32 %22, metadata !10074, metadata !DIExpression()), !dbg !10079
  %23 = add i32 %17, 1, !dbg !10091
  call void @llvm.dbg.value(metadata i32 %23, metadata !10076, metadata !DIExpression()), !dbg !10079
  %24 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %23, i32 1, !dbg !10092
  %25 = load i32, i32* %24, align 4, !dbg !10092
  %26 = getelementptr inbounds %struct.vdma_config_t, %struct.vdma_config_t* %5, i32 %23, i32 0, !dbg !10093
  %27 = load i32, i32* %26, align 4, !dbg !10093
  %28 = mul i32 %27, %25, !dbg !10094
  call void @llvm.dbg.value(metadata i32 %28, metadata !10077, metadata !DIExpression()), !dbg !10079
  %29 = icmp ugt i32 %22, %28, !dbg !10084
  br i1 %29, label %12, label %30, !dbg !10085, !llvm.loop !10095

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !10097
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !10079
  %34 = udiv i32 %32, %31, !dbg !10100
  %35 = add i32 %34, %33, !dbg !10101
  call void @llvm.dbg.value(metadata i32 %35, metadata !10078, metadata !DIExpression()), !dbg !10079
  br label %36, !dbg !10102

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !10103
  call void @llvm.dbg.value(metadata i32 %37, metadata !10078, metadata !DIExpression()), !dbg !10079
  ret i32 %37, !dbg !10104
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #8 !dbg !10105 {
  ret i32 134217728, !dbg !10106
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #8 !dbg !10107 {
  ret i32 3932160, !dbg !10108
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #8 !dbg !10109 {
  ret i32 0, !dbg !10110
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #8 !dbg !10111 {
  ret i32 262144, !dbg !10112
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !10113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10115, metadata !DIExpression()), !dbg !10117
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #22, !dbg !10118
  call void @llvm.dbg.value(metadata i32 %2, metadata !10116, metadata !DIExpression()), !dbg !10117
  %3 = icmp eq i32 %2, 0, !dbg !10119
  br i1 %3, label %5, label %4, !dbg !10121

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #22, !dbg !10122
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.138, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.139, i32 0, i32 0)) #24, !dbg !10122
  unreachable, !dbg !10122

5:                                                ; preds = %1
  ret void, !dbg !10127
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10128 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10132, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata i32 %1, metadata !10133, metadata !DIExpression()), !dbg !10145
  call void @llvm.dbg.value(metadata i8* %2, metadata !10134, metadata !DIExpression()), !dbg !10145
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10146
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10146
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10135, metadata !DIExpression()), !dbg !10147
  %7 = bitcast i32* %5 to i8*, !dbg !10148
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10148
  call void @llvm.dbg.value(metadata i32* %5, metadata !10144, metadata !DIExpression(DW_OP_deref)), !dbg !10145
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #22, !dbg !10149
  call void @llvm.va_start(i8* nonnull %6), !dbg !10150
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10151
  %10 = load i32, i32* %9, align 4, !dbg !10151
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10151
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #22, !dbg !10151
  call void @llvm.va_end(i8* nonnull %6), !dbg !10152
  %13 = load i32, i32* %5, align 4, !dbg !10153
  call void @llvm.dbg.value(metadata i32 %13, metadata !10144, metadata !DIExpression()), !dbg !10145
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #22, !dbg !10154
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10155
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10155
  ret void, !dbg !10155
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #3

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10156 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10158, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i32 %1, metadata !10159, metadata !DIExpression()), !dbg !10163
  call void @llvm.dbg.value(metadata i8* %2, metadata !10160, metadata !DIExpression()), !dbg !10163
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10164
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10164
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10161, metadata !DIExpression()), !dbg !10165
  %7 = bitcast i32* %5 to i8*, !dbg !10166
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10166
  call void @llvm.dbg.value(metadata i32* %5, metadata !10162, metadata !DIExpression(DW_OP_deref)), !dbg !10163
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #22, !dbg !10167
  call void @llvm.va_start(i8* nonnull %6), !dbg !10168
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10169
  %10 = load i32, i32* %9, align 4, !dbg !10169
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10169
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #22, !dbg !10169
  call void @llvm.va_end(i8* nonnull %6), !dbg !10170
  %13 = load i32, i32* %5, align 4, !dbg !10171
  call void @llvm.dbg.value(metadata i32 %13, metadata !10162, metadata !DIExpression()), !dbg !10163
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #22, !dbg !10172
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10173
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10173
  ret void, !dbg !10173
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10174 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10176, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.value(metadata i32 %1, metadata !10177, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.value(metadata i8* %2, metadata !10178, metadata !DIExpression()), !dbg !10181
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10182
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10182
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10179, metadata !DIExpression()), !dbg !10183
  %7 = bitcast i32* %5 to i8*, !dbg !10184
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10184
  call void @llvm.dbg.value(metadata i32* %5, metadata !10180, metadata !DIExpression(DW_OP_deref)), !dbg !10181
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #22, !dbg !10185
  call void @llvm.va_start(i8* nonnull %6), !dbg !10186
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10187
  %10 = load i32, i32* %9, align 4, !dbg !10187
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10187
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #22, !dbg !10187
  call void @llvm.va_end(i8* nonnull %6), !dbg !10188
  %13 = load i32, i32* %5, align 4, !dbg !10189
  call void @llvm.dbg.value(metadata i32 %13, metadata !10180, metadata !DIExpression()), !dbg !10181
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #22, !dbg !10190
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #23, !dbg !10191
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #23, !dbg !10191
  ret void, !dbg !10191
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #8 !dbg !10192 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10198, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata i32 %1, metadata !10199, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata i8* %2, metadata !10200, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata i8* %3, metadata !10201, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata i32 %4, metadata !10202, metadata !DIExpression()), !dbg !10203
  ret void, !dbg !10204
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !10205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10207, metadata !DIExpression()), !dbg !10209
  %2 = shl i32 %0, 20, !dbg !10210
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10211
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !10212
  store volatile i32 %2, i32* %4, align 4, !dbg !10213
  %5 = load volatile i32, i32* %4, align 4, !dbg !10214
  %6 = or i32 %5, 65536, !dbg !10215
  store volatile i32 %6, i32* %4, align 4, !dbg !10216
  br label %7, !dbg !10217

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !10218
  %9 = and i32 %8, 1, !dbg !10219
  %10 = icmp eq i32 %9, 0, !dbg !10220
  br i1 %10, label %7, label %11, !dbg !10217, !llvm.loop !10221

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !10223
  %13 = lshr i32 %12, 8, !dbg !10224
  %14 = and i32 %13, 255, !dbg !10224
  call void @llvm.dbg.value(metadata i32 %14, metadata !10208, metadata !DIExpression()), !dbg !10209
  ret i32 %14, !dbg !10225
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 section ".tcm_code" !dbg !10226 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10230, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.value(metadata i32 %1, metadata !10231, metadata !DIExpression()), !dbg !10232
  call void @llvm.dbg.value(metadata i32 %1, metadata !10231, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10232
  %3 = shl i32 %1, 24, !dbg !10233
  %4 = shl i32 %0, 20, !dbg !10234
  %5 = or i32 %4, %3, !dbg !10235
  %6 = or i32 %5, 131072, !dbg !10235
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10236
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !10237
  store volatile i32 %6, i32* %8, align 4, !dbg !10238
  %9 = load volatile i32, i32* %8, align 4, !dbg !10239
  %10 = or i32 %9, 65536, !dbg !10240
  store volatile i32 %10, i32* %8, align 4, !dbg !10241
  br label %11, !dbg !10242

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !10243
  %13 = and i32 %12, 1, !dbg !10244
  %14 = icmp eq i32 %13, 0, !dbg !10245
  br i1 %14, label %11, label %15, !dbg !10242, !llvm.loop !10246

15:                                               ; preds = %11
  ret void, !dbg !10248
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #5 section ".tcm_code" !dbg !10249 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !10250
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !10251
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !10252
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !10253
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !10254
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !10255
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !10256
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !10257
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !10258
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !10259
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !10260
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !10261
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !10262
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !10263
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !10264
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !10265
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !10266
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !10267
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !10268
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !10269
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !10270
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !10271
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !10272
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !10273
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !10274
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !10275
  ret void, !dbg !10276
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #10 section ".tcm_code" !dbg !10277 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10280
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10281
  store volatile i32 21553, i32* %2, align 4, !dbg !10282
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10283
  store volatile i32 20489, i32* %3, align 4, !dbg !10284
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10285
  store volatile i32 20550, i32* %4, align 4, !dbg !10286
  ret i32 0, !dbg !10287
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #10 section ".tcm_code" !dbg !10288 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !10292, metadata !DIExpression()), !dbg !10296
  call void @llvm.dbg.value(metadata i32 0, metadata !10290, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i32 16384, metadata !10291, metadata !DIExpression()), !dbg !10297
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10298
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !10299
  store volatile i32 0, i32* %2, align 4, !dbg !10300
  call void @llvm.dbg.value(metadata i32 0, metadata !10294, metadata !DIExpression()), !dbg !10297
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !10294, metadata !DIExpression()), !dbg !10297
  br label %5, !dbg !10301

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !10294, metadata !DIExpression()), !dbg !10297
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !10293, metadata !DIExpression()), !dbg !10297
  br label %8, !dbg !10303

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10293, metadata !DIExpression()), !dbg !10297
  call void @llvm.dbg.value(metadata i32 0, metadata !10295, metadata !DIExpression()), !dbg !10297
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !10307

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !10295, metadata !DIExpression()), !dbg !10297
  %12 = icmp eq i32 %30, 2, !dbg !10311
  br i1 %12, label %31, label %13, !dbg !10307, !llvm.loop !10313

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10295, metadata !DIExpression()), !dbg !10297
  store volatile i32 0, i32* %2, align 4, !dbg !10315
  store volatile i32 63, i32* %3, align 4, !dbg !10317
  %15 = load i32, i32* %10, align 4, !dbg !10318
  %16 = shl i32 %15, 16, !dbg !10319
  %17 = shl nuw nsw i32 %14, 13, !dbg !10320
  %18 = or i32 %17, %7, !dbg !10321
  %19 = or i32 %18, %16, !dbg !10322
  store volatile i32 %19, i32* %2, align 4, !dbg !10323
  %20 = load volatile i32, i32* %2, align 4, !dbg !10324
  %21 = or i32 %20, 805, !dbg !10324
  store volatile i32 %21, i32* %2, align 4, !dbg !10324
  br label %22, !dbg !10325

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !10326
  %24 = and i32 %23, 2, !dbg !10327
  %25 = icmp eq i32 %24, 0, !dbg !10328
  br i1 %25, label %22, label %26, !dbg !10325, !llvm.loop !10329

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !10331
  %28 = and i32 %27, 1, !dbg !10333
  %29 = icmp eq i32 %28, 0, !dbg !10334
  %30 = add nuw nsw i32 %14, 1, !dbg !10335
  call void @llvm.dbg.value(metadata i32 %30, metadata !10295, metadata !DIExpression()), !dbg !10297
  br i1 %29, label %11, label %37, !dbg !10336

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !10337
  call void @llvm.dbg.value(metadata i32 %32, metadata !10293, metadata !DIExpression()), !dbg !10297
  %33 = icmp eq i32 %32, 2, !dbg !10338
  br i1 %33, label %34, label %8, !dbg !10303, !llvm.loop !10339

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !10341
  call void @llvm.dbg.value(metadata i32 %35, metadata !10294, metadata !DIExpression()), !dbg !10297
  %36 = icmp eq i32 %35, 2, !dbg !10342
  br i1 %36, label %37, label %5, !dbg !10301, !llvm.loop !10343

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !10297
  store volatile i32 0, i32* %2, align 4, !dbg !10297
  ret i32 %38, !dbg !10345
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #10 section ".tcm_code" !dbg !10346 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !10347
  %2 = icmp ne i32 %1, 0, !dbg !10349
  %3 = sext i1 %2 to i32, !dbg !10350
  ret i32 %3, !dbg !10351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #10 section ".tcm_code" !dbg !10352 {
  call void @llvm.dbg.value(metadata i32 31, metadata !10354, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i32 0, metadata !10355, metadata !DIExpression()), !dbg !10356
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10357
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10358
  store volatile i32 0, i32* %2, align 4, !dbg !10359
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10360
  store volatile i32 0, i32* %3, align 4, !dbg !10361
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10362
  store volatile i32 0, i32* %4, align 4, !dbg !10363
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10364
  store volatile i32 0, i32* %5, align 4, !dbg !10365
  call void @llvm.dbg.value(metadata i32 31, metadata !10354, metadata !DIExpression()), !dbg !10356
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10366
  store volatile i32 522133279, i32* %6, align 4, !dbg !10370
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10371
  store volatile i32 522133279, i32* %7, align 4, !dbg !10372
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10373
  %9 = icmp eq i32 %8, 0, !dbg !10375
  call void @llvm.dbg.value(metadata i32 31, metadata !10354, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10356
  br i1 %9, label %36, label %10, !dbg !10376

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10354, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i32 %11, metadata !10354, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10356
  call void @llvm.dbg.value(metadata i32 %11, metadata !10354, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10356
  %12 = icmp eq i32 %11, 0, !dbg !10377
  br i1 %12, label %26, label %13, !dbg !10378, !llvm.loop !10379

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !10381
  call void @llvm.dbg.value(metadata i32 %14, metadata !10354, metadata !DIExpression()), !dbg !10356
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10382
  %16 = shl i32 %14, 24, !dbg !10383
  %17 = shl i32 %14, 16, !dbg !10384
  %18 = shl i32 %14, 8, !dbg !10385
  %19 = or i32 %17, %14, !dbg !10386
  %20 = or i32 %19, %16, !dbg !10387
  %21 = or i32 %20, %18, !dbg !10388
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !10366
  store volatile i32 %21, i32* %22, align 4, !dbg !10370
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !10371
  store volatile i32 %21, i32* %23, align 4, !dbg !10372
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10373
  %25 = icmp eq i32 %24, 0, !dbg !10375
  call void @llvm.dbg.value(metadata i32 %14, metadata !10354, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !10356
  br i1 %25, label %36, label %10, !dbg !10376

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !10355, metadata !DIExpression()), !dbg !10356
  %28 = shl nuw nsw i32 %27, 16, !dbg !10389
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10395
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !10396
  store volatile i32 %28, i32* %30, align 4, !dbg !10397
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !10398
  %32 = icmp eq i32 %31, 0, !dbg !10400
  call void @llvm.dbg.value(metadata i32 %27, metadata !10355, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10356
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !10401
  call void @llvm.dbg.value(metadata i32 %33, metadata !10355, metadata !DIExpression()), !dbg !10356
  call void @llvm.dbg.value(metadata i32 %27, metadata !10355, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10356
  br i1 %35, label %36, label %26, !dbg !10401, !llvm.loop !10402

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !10405
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #10 section ".tcm_code" !dbg !10406 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !10407
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10408
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10409
  store volatile i32 1, i32* %2, align 4, !dbg !10410
  br label %3, !dbg !10411

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10412
  %5 = and i32 %4, 2, !dbg !10413
  %6 = icmp eq i32 %5, 0, !dbg !10413
  br i1 %6, label %3, label %7, !dbg !10411, !llvm.loop !10414

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !10416
  br label %8, !dbg !10417

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !10418
  %10 = and i32 %9, 2, !dbg !10419
  %11 = icmp eq i32 %10, 0, !dbg !10419
  br i1 %11, label %12, label %8, !dbg !10417, !llvm.loop !10420

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !10422
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !10423
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !10424

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !10425
  %17 = and i32 %16, 1, !dbg !10426
  %18 = icmp eq i32 %17, 0, !dbg !10427
  br i1 %18, label %15, label %19, !dbg !10424, !llvm.loop !10428

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !10430
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !10431
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !10432

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !10433
  %24 = and i32 %23, 1, !dbg !10434
  %25 = icmp eq i32 %24, 0, !dbg !10435
  br i1 %25, label %22, label %26, !dbg !10432, !llvm.loop !10436

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !10438
  %28 = icmp eq i32 %27, 9507, !dbg !10440
  br i1 %28, label %29, label %37, !dbg !10441

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !10442
  %31 = and i32 %30, 15, !dbg !10445
  %32 = icmp eq i32 %31, 2, !dbg !10446
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10447
  %34 = and i32 %33, -128, !dbg !10447
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !10447
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !10447
  br label %37, !dbg !10448

37:                                               ; preds = %29, %26
  ret void, !dbg !10448
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #10 section ".tcm_code" !dbg !10449 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !10452
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !10453
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !10454
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !10455
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !10456
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !10457
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !10458
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !10459
  ret i8 0, !dbg !10460
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #10 section ".tcm_code" !dbg !10461 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !10462
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10463
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !10464
  store volatile i32 %1, i32* %3, align 4, !dbg !10465
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !10466
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !10467
  store volatile i32 %4, i32* %5, align 4, !dbg !10468
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !10469
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !10470
  store volatile i32 %6, i32* %7, align 4, !dbg !10471
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !10472
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !10473
  store volatile i32 %8, i32* %9, align 4, !dbg !10474
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !10475
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !10476
  store volatile i32 %10, i32* %11, align 4, !dbg !10477
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !10478
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !10479
  store volatile i32 %12, i32* %13, align 4, !dbg !10480
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !10481
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !10482
  store volatile i32 %14, i32* %15, align 4, !dbg !10483
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !10484
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !10485
  store volatile i32 %16, i32* %17, align 4, !dbg !10486
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !10487
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !10488
  store volatile i32 %18, i32* %19, align 4, !dbg !10489
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !10490
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !10491
  store volatile i32 %20, i32* %21, align 4, !dbg !10492
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !10493
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !10494
  store volatile i32 %22, i32* %23, align 4, !dbg !10495
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !10496
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !10497
  store volatile i32 %24, i32* %25, align 4, !dbg !10498
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !10499
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !10500
  store volatile i32 %26, i32* %27, align 4, !dbg !10501
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !10502
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10503
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !10504
  store volatile i32 806289408, i32* %29, align 4, !dbg !10505
  br label %30, !dbg !10506

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !10507
  %32 = and i32 %31, 128, !dbg !10508
  %33 = icmp eq i32 %32, 0, !dbg !10508
  br i1 %33, label %30, label %34, !dbg !10506, !llvm.loop !10509

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !10511
  br label %35, !dbg !10512

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !10513
  %37 = and i32 %36, 128, !dbg !10514
  %38 = icmp eq i32 %37, 0, !dbg !10514
  br i1 %38, label %39, label %35, !dbg !10512, !llvm.loop !10515

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !10517
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !10518
  ret i8 0, !dbg !10519
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #10 section ".tcm_code" !dbg !10520 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10521
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10522
  %3 = load volatile i32, i32* %2, align 4, !dbg !10522
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10523
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10524
  %5 = load volatile i32, i32* %4, align 4, !dbg !10524
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10525
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10526
  %7 = load volatile i32, i32* %6, align 4, !dbg !10526
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10527
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10528
  %9 = load volatile i32, i32* %8, align 4, !dbg !10528
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10529
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10530
  %11 = load volatile i32, i32* %10, align 4, !dbg !10530
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10531
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10532
  %13 = load volatile i32, i32* %12, align 4, !dbg !10532
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10533
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10534
  %15 = load volatile i32, i32* %14, align 4, !dbg !10534
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10535
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10536
  %17 = load volatile i32, i32* %16, align 4, !dbg !10536
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10537
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10538
  %19 = load volatile i32, i32* %18, align 4, !dbg !10538
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10539
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10540
  %21 = load volatile i32, i32* %20, align 4, !dbg !10540
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10541
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10542
  %23 = load volatile i32, i32* %22, align 4, !dbg !10542
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10543
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10544
  %25 = load volatile i32, i32* %24, align 4, !dbg !10544
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10545
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10546
  %27 = load volatile i32, i32* %26, align 4, !dbg !10546
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10547
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10548
  %29 = load volatile i32, i32* %28, align 4, !dbg !10548
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10549
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10550
  %31 = load volatile i32, i32* %30, align 4, !dbg !10550
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10551
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10552
  %33 = load volatile i32, i32* %32, align 4, !dbg !10552
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10553
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10554
  %35 = load volatile i32, i32* %34, align 4, !dbg !10554
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10555
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10556
  %37 = load volatile i32, i32* %36, align 4, !dbg !10556
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10557
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10558
  %39 = load volatile i32, i32* %38, align 4, !dbg !10558
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10559
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10560
  %41 = load volatile i32, i32* %40, align 4, !dbg !10560
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10561
  ret void, !dbg !10562
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #10 section ".tcm_code" !dbg !10563 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10564

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10565
  %5 = and i32 %4, 17, !dbg !10566
  %6 = icmp eq i32 %5, 17, !dbg !10567
  br i1 %6, label %7, label %3, !dbg !10564, !llvm.loop !10568

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !10570
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !10571
  store volatile i32 %8, i32* %9, align 4, !dbg !10572
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !10573
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !10574
  store volatile i32 %10, i32* %11, align 4, !dbg !10575
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !10576
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !10577
  store volatile i32 %12, i32* %13, align 4, !dbg !10578
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !10579
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10580
  store volatile i32 %14, i32* %15, align 4, !dbg !10581
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !10582
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10583
  store volatile i32 %16, i32* %17, align 4, !dbg !10584
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !10585
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10586
  store volatile i32 %18, i32* %19, align 4, !dbg !10587
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !10588
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !10589
  store volatile i32 %20, i32* %21, align 4, !dbg !10590
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !10591
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !10592
  store volatile i32 %22, i32* %23, align 4, !dbg !10593
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !10594
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10595
  store volatile i32 %24, i32* %25, align 4, !dbg !10596
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !10597
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !10598
  store volatile i32 %26, i32* %27, align 4, !dbg !10599
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !10600
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !10601
  store volatile i32 %28, i32* %29, align 4, !dbg !10602
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !10603
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !10604
  store volatile i32 %30, i32* %31, align 4, !dbg !10605
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !10606
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !10607
  store volatile i32 %32, i32* %33, align 4, !dbg !10608
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !10609
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !10610
  store volatile i32 %34, i32* %35, align 4, !dbg !10611
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !10612
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !10613
  store volatile i32 %36, i32* %37, align 4, !dbg !10614
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !10615
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !10616
  store volatile i32 %38, i32* %39, align 4, !dbg !10617
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !10618
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !10619
  store volatile i32 %40, i32* %41, align 4, !dbg !10620
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !10621
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !10622
  store volatile i32 %42, i32* %43, align 4, !dbg !10623
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !10624
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !10625
  store volatile i32 %44, i32* %45, align 4, !dbg !10626
  ret void, !dbg !10627
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #10 section ".tcm_code" !dbg !10628 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10629
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10630
  %3 = load volatile i32, i32* %2, align 4, !dbg !10630
  %4 = and i32 %3, -2097185, !dbg !10631
  store volatile i32 %4, i32* %2, align 4, !dbg !10632
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !10633
  store volatile i32 1, i32* %5, align 4, !dbg !10634
  br label %6, !dbg !10635

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !10636
  %8 = and i32 %7, 2, !dbg !10637
  %9 = icmp eq i32 %8, 0, !dbg !10637
  br i1 %9, label %6, label %10, !dbg !10635, !llvm.loop !10638

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !10640
  br label %11, !dbg !10641

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !10642
  %13 = and i32 %12, 2, !dbg !10643
  %14 = icmp eq i32 %13, 0, !dbg !10643
  br i1 %14, label %15, label %11, !dbg !10641, !llvm.loop !10644

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !10646
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10647
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !10648
  store volatile i32 806289408, i32* %17, align 4, !dbg !10649
  br label %18, !dbg !10650

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10651
  %20 = and i32 %19, 128, !dbg !10652
  %21 = icmp eq i32 %20, 0, !dbg !10652
  br i1 %21, label %18, label %22, !dbg !10650, !llvm.loop !10653

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !10655
  br label %23, !dbg !10656

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !10657
  %25 = and i32 %24, 128, !dbg !10658
  %26 = icmp eq i32 %25, 0, !dbg !10658
  br i1 %26, label %27, label %23, !dbg !10656, !llvm.loop !10659

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !10661
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !10662
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !10663
  store volatile i32 %28, i32* %29, align 4, !dbg !10664
  ret void, !dbg !10665
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #10 section ".tcm_code" !dbg !10666 {
  tail call void @EMI_Setting_Save() #21, !dbg !10667
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !10668

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !10669
  %5 = and i32 %4, 17, !dbg !10670
  %6 = icmp eq i32 %5, 17, !dbg !10671
  br i1 %6, label %7, label %3, !dbg !10668, !llvm.loop !10672

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !10674
  %9 = or i32 %8, 1792, !dbg !10675
  store volatile i32 %9, i32* %2, align 4, !dbg !10676
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !10677
  store volatile i32 -261685248, i32* %10, align 4, !dbg !10678
  br label %11, !dbg !10679

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !10680
  %13 = and i32 %12, 1, !dbg !10681
  %14 = icmp eq i32 %13, 0, !dbg !10682
  br i1 %14, label %11, label %15, !dbg !10679, !llvm.loop !10683

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !10685
  store volatile i32 0, i32* %16, align 4, !dbg !10686
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !10687

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !10688
  %20 = and i32 %19, 16, !dbg !10689
  %21 = icmp eq i32 %20, 0, !dbg !10689
  br i1 %21, label %18, label %22, !dbg !10687, !llvm.loop !10690

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !10692
  %24 = load volatile i32, i32* %23, align 4, !dbg !10692
  %25 = or i32 %24, 2097184, !dbg !10693
  store volatile i32 %25, i32* %23, align 4, !dbg !10694
  ret void, !dbg !10695
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #7 section ".tcm_code" !dbg !10696 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !10701, metadata !DIExpression()), !dbg !10703
  %3 = bitcast i32* %2 to i8*, !dbg !10704
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !10704
  call void @llvm.dbg.declare(metadata i32* %2, metadata !10702, metadata !DIExpression()), !dbg !10705
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !10706

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10707
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !10710
  store volatile i32 0, i32* %6, align 4, !dbg !10711
  store volatile i32 806289408, i32* %6, align 4, !dbg !10712
  br label %7, !dbg !10713

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !10714
  %9 = and i32 %8, 128, !dbg !10715
  %10 = icmp eq i32 %9, 0, !dbg !10715
  br i1 %10, label %7, label %11, !dbg !10713, !llvm.loop !10716

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !10718
  br label %12, !dbg !10719

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !10720
  %14 = and i32 %13, 128, !dbg !10721
  %15 = icmp eq i32 %14, 0, !dbg !10721
  br i1 %15, label %16, label %12, !dbg !10719, !llvm.loop !10722

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !10724
  store volatile i32 0, i32* %2, align 4, !dbg !10725
  %17 = load volatile i32, i32* %2, align 4, !dbg !10727
  %18 = icmp ult i32 %17, 255, !dbg !10729
  br i1 %18, label %19, label %25, !dbg !10730

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !10731
  %21 = add i32 %20, 1, !dbg !10731
  store volatile i32 %21, i32* %2, align 4, !dbg !10731
  %22 = load volatile i32, i32* %2, align 4, !dbg !10727
  %23 = icmp ult i32 %22, 255, !dbg !10729
  br i1 %23, label %19, label %25, !dbg !10730, !llvm.loop !10732

24:                                               ; preds = %1
  br label %25, !dbg !10734

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !10703
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !10737
  ret i32 %26, !dbg !10737
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #10 section ".tcm_code" !dbg !10738 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10739
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10740
  %3 = load volatile i32, i32* %2, align 4, !dbg !10740
  %4 = or i32 %3, 1792, !dbg !10741
  store volatile i32 %4, i32* %2, align 4, !dbg !10742
  ret void, !dbg !10743
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #10 section ".tcm_code" !dbg !10744 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10745
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !10746
  %3 = load volatile i32, i32* %2, align 4, !dbg !10746
  %4 = and i32 %3, -1793, !dbg !10747
  store volatile i32 %4, i32* %2, align 4, !dbg !10748
  ret void, !dbg !10749
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #8 section ".tcm_code" !dbg !10750 {
  ret i1 false, !dbg !10751
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #8 section ".tcm_code" !dbg !10752 {
  ret i1 false, !dbg !10753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !10754 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #22, !dbg !10755
  ret void, !dbg !10758
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !10759 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #22, !dbg !10760
  ret void, !dbg !10763
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !10764 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #22, !dbg !10765
  ret void, !dbg !10768
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !10769 {
  tail call void @peri_26m_dcxo() #22, !dbg !10770
  ret void, !dbg !10773
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #3 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !10774 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10778, metadata !DIExpression()), !dbg !10779
  %2 = trunc i32 %0 to i8, !dbg !10780
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #22, !dbg !10781
  ret i32 %0, !dbg !10782
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !10783 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !10784
  tail call void @SystemCoreClockUpdate() #22, !dbg !10785
  tail call fastcc void @prvSetupHardware() #21, !dbg !10786
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.150, i32 0, i32 0)) #22, !dbg !10787
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.151, i32 0, i32 0)) #22, !dbg !10788
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.150, i32 0, i32 0)) #22, !dbg !10789
  tail call fastcc void @aes_encrypt_decrypt_data_example() #21, !dbg !10790
  br label %4, !dbg !10791

4:                                                ; preds = %4, %0
  br label %4, !dbg !10792, !llvm.loop !10795
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !10798 {
  %1 = tail call i32 @hal_clock_init() #22, !dbg !10799
  ret void, !dbg !10800
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !10801 {
  tail call fastcc void @log_uart_init() #21, !dbg !10802
  %1 = tail call i32 @hal_flash_init() #22, !dbg !10803
  %2 = tail call i32 @hal_nvic_init() #22, !dbg !10804
  ret void, !dbg !10805
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define internal fastcc void @aes_encrypt_decrypt_data_example() unnamed_addr #0 !dbg !10806 {
  %1 = alloca [16 x i8], align 1
  %2 = alloca [16 x i8], align 1
  %3 = alloca [30 x i8], align 1
  %4 = alloca [32 x i8], align 1
  %5 = alloca [32 x i8], align 1
  %6 = alloca %struct.hal_aes_buffer_t, align 4
  %7 = alloca %struct.hal_aes_buffer_t, align 4
  %8 = alloca %struct.hal_aes_buffer_t, align 4
  %9 = alloca %struct.hal_aes_buffer_t, align 4
  %10 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i32 0, i32 0, !dbg !10826
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #23, !dbg !10826
  call void @llvm.dbg.declare(metadata [16 x i8]* %1, metadata !10808, metadata !DIExpression()), !dbg !10827
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %10, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.aes_encrypt_decrypt_data_example.hardware_id, i32 0, i32 0), i32 16, i1 false), !dbg !10827
  %11 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i32 0, i32 0, !dbg !10828
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #23, !dbg !10828
  call void @llvm.dbg.declare(metadata [16 x i8]* %2, metadata !10809, metadata !DIExpression()), !dbg !10829
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(16) %11, i8* noundef nonnull align 1 dereferenceable(16) getelementptr inbounds ([16 x i8], [16 x i8]* @__const.aes_encrypt_decrypt_data_example.aes_cbc_iv, i32 0, i32 0), i32 16, i1 false), !dbg !10829
  %12 = getelementptr inbounds [30 x i8], [30 x i8]* %3, i32 0, i32 0, !dbg !10830
  call void @llvm.lifetime.start.p0i8(i64 30, i8* nonnull %12) #23, !dbg !10830
  call void @llvm.dbg.declare(metadata [30 x i8]* %3, metadata !10810, metadata !DIExpression()), !dbg !10831
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(30) %12, i8* noundef nonnull align 1 dereferenceable(30) getelementptr inbounds ([30 x i8], [30 x i8]* @__const.aes_encrypt_decrypt_data_example.plain, i32 0, i32 0), i32 30, i1 false), !dbg !10831
  %13 = getelementptr inbounds [32 x i8], [32 x i8]* %4, i32 0, i32 0, !dbg !10832
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #23, !dbg !10832
  call void @llvm.dbg.declare(metadata [32 x i8]* %4, metadata !10814, metadata !DIExpression()), !dbg !10833
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(32) %13, i8 0, i32 32, i1 false), !dbg !10833
  %14 = getelementptr inbounds [32 x i8], [32 x i8]* %5, i32 0, i32 0, !dbg !10834
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #23, !dbg !10834
  call void @llvm.dbg.declare(metadata [32 x i8]* %5, metadata !10816, metadata !DIExpression()), !dbg !10835
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 1 dereferenceable(32) %14, i8 0, i32 32, i1 false), !dbg !10835
  %15 = bitcast %struct.hal_aes_buffer_t* %6 to i8*, !dbg !10836
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #23, !dbg !10836
  call void @llvm.dbg.declare(metadata %struct.hal_aes_buffer_t* %6, metadata !10817, metadata !DIExpression()), !dbg !10837
  %16 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %6, i32 0, i32 0, !dbg !10838
  store i8* %12, i8** %16, align 4, !dbg !10838
  %17 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %6, i32 0, i32 1, !dbg !10838
  store i32 30, i32* %17, align 4, !dbg !10838
  %18 = bitcast %struct.hal_aes_buffer_t* %7 to i8*, !dbg !10839
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #23, !dbg !10839
  call void @llvm.dbg.declare(metadata %struct.hal_aes_buffer_t* %7, metadata !10823, metadata !DIExpression()), !dbg !10840
  %19 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %7, i32 0, i32 0, !dbg !10841
  store i8* %10, i8** %19, align 4, !dbg !10841
  %20 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %7, i32 0, i32 1, !dbg !10841
  store i32 16, i32* %20, align 4, !dbg !10841
  %21 = bitcast %struct.hal_aes_buffer_t* %8 to i8*, !dbg !10842
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #23, !dbg !10842
  call void @llvm.dbg.declare(metadata %struct.hal_aes_buffer_t* %8, metadata !10824, metadata !DIExpression()), !dbg !10843
  %22 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %8, i32 0, i32 0, !dbg !10844
  store i8* %13, i8** %22, align 4, !dbg !10844
  %23 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %8, i32 0, i32 1, !dbg !10844
  store i32 32, i32* %23, align 4, !dbg !10844
  %24 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0)) #22, !dbg !10845
  call fastcc void @aes_result_dump(i8* noundef nonnull %12, i8 noundef zeroext 30) #21, !dbg !10846
  %25 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0)) #22, !dbg !10847
  call fastcc void @aes_result_dump(i8* noundef nonnull %11, i8 noundef zeroext 16) #21, !dbg !10848
  %26 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0)) #22, !dbg !10849
  call fastcc void @aes_result_dump(i8* noundef nonnull %10, i8 noundef zeroext 16) #21, !dbg !10850
  %27 = call i32 @hal_aes_cbc_encrypt(%struct.hal_aes_buffer_t* noundef nonnull %8, %struct.hal_aes_buffer_t* noundef nonnull %6, %struct.hal_aes_buffer_t* noundef nonnull %7, i8* noundef nonnull %11) #22, !dbg !10851
  %28 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i32 0, i32 0)) #22, !dbg !10852
  %29 = load i8*, i8** %22, align 4, !dbg !10853
  %30 = load i32, i32* %23, align 4, !dbg !10854
  %31 = trunc i32 %30 to i8, !dbg !10855
  call fastcc void @aes_result_dump(i8* noundef %29, i8 noundef zeroext %31) #21, !dbg !10856
  %32 = bitcast %struct.hal_aes_buffer_t* %9 to i8*, !dbg !10857
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #23, !dbg !10857
  call void @llvm.dbg.declare(metadata %struct.hal_aes_buffer_t* %9, metadata !10825, metadata !DIExpression()), !dbg !10858
  %33 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %9, i32 0, i32 0, !dbg !10859
  store i8* %14, i8** %33, align 4, !dbg !10859
  %34 = getelementptr inbounds %struct.hal_aes_buffer_t, %struct.hal_aes_buffer_t* %9, i32 0, i32 1, !dbg !10859
  store i32 30, i32* %34, align 4, !dbg !10859
  %35 = call i32 @hal_aes_cbc_decrypt(%struct.hal_aes_buffer_t* noundef nonnull %9, %struct.hal_aes_buffer_t* noundef nonnull %8, %struct.hal_aes_buffer_t* noundef nonnull %7, i8* noundef nonnull %11) #22, !dbg !10860
  %36 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i32 0, i32 0)) #22, !dbg !10861
  %37 = load i8*, i8** %33, align 4, !dbg !10862
  %38 = load i32, i32* %34, align 4, !dbg !10863
  %39 = trunc i32 %38 to i8, !dbg !10864
  call fastcc void @aes_result_dump(i8* noundef %37, i8 noundef zeroext %39) #21, !dbg !10865
  %40 = call i32 @hal_aes_ecb_encrypt(%struct.hal_aes_buffer_t* noundef nonnull %8, %struct.hal_aes_buffer_t* noundef nonnull %6, %struct.hal_aes_buffer_t* noundef nonnull %7) #22, !dbg !10866
  %41 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i32 0, i32 0)) #22, !dbg !10867
  %42 = load i8*, i8** %22, align 4, !dbg !10868
  %43 = load i32, i32* %23, align 4, !dbg !10869
  %44 = trunc i32 %43 to i8, !dbg !10870
  call fastcc void @aes_result_dump(i8* noundef %42, i8 noundef zeroext %44) #21, !dbg !10871
  %45 = call i32 @hal_aes_ecb_decrypt(%struct.hal_aes_buffer_t* noundef nonnull %9, %struct.hal_aes_buffer_t* noundef nonnull %8, %struct.hal_aes_buffer_t* noundef nonnull %7) #22, !dbg !10872
  %46 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i32 0, i32 0)) #22, !dbg !10873
  %47 = load i8*, i8** %33, align 4, !dbg !10874
  %48 = load i32, i32* %34, align 4, !dbg !10875
  %49 = trunc i32 %48 to i8, !dbg !10876
  call fastcc void @aes_result_dump(i8* noundef %47, i8 noundef zeroext %49) #21, !dbg !10877
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #23, !dbg !10878
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #23, !dbg !10878
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #23, !dbg !10878
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #23, !dbg !10878
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #23, !dbg !10878
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #23, !dbg !10878
  call void @llvm.lifetime.end.p0i8(i64 30, i8* nonnull %12) #23, !dbg !10878
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #23, !dbg !10878
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #23, !dbg !10878
  ret void, !dbg !10878
}

; Function Attrs: argmemonly nofree nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i32(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i32, i1 immarg) #20

; Function Attrs: noinline nounwind optsize
define internal fastcc void @aes_result_dump(i8* nocapture noundef readonly %0, i8 noundef zeroext %1) unnamed_addr #0 !dbg !10879 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10883, metadata !DIExpression()), !dbg !10886
  call void @llvm.dbg.value(metadata i8 %1, metadata !10884, metadata !DIExpression()), !dbg !10886
  call void @llvm.dbg.value(metadata i8 0, metadata !10885, metadata !DIExpression()), !dbg !10886
  %3 = icmp eq i8 %1, 0, !dbg !10887
  br i1 %3, label %19, label %4, !dbg !10890

4:                                                ; preds = %2
  %5 = zext i8 %1 to i32, !dbg !10887
  br label %6, !dbg !10890

6:                                                ; preds = %4, %12
  %7 = phi i32 [ 0, %4 ], [ %17, %12 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10885, metadata !DIExpression()), !dbg !10886
  %8 = and i32 %7, 15, !dbg !10891
  %9 = icmp eq i32 %8, 0, !dbg !10894
  br i1 %9, label %10, label %12, !dbg !10895

10:                                               ; preds = %6
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0)) #22, !dbg !10896
  br label %12, !dbg !10898

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds i8, i8* %0, i32 %7, !dbg !10899
  %14 = load i8, i8* %13, align 1, !dbg !10899
  %15 = zext i8 %14 to i32, !dbg !10899
  %16 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i32 noundef %15) #22, !dbg !10900
  %17 = add nuw nsw i32 %7, 1, !dbg !10901
  call void @llvm.dbg.value(metadata i32 %17, metadata !10885, metadata !DIExpression()), !dbg !10886
  %18 = icmp eq i32 %17, %5, !dbg !10887
  br i1 %18, label %19, label %6, !dbg !10890, !llvm.loop !10902

19:                                               ; preds = %12, %2
  %20 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0)) #22, !dbg !10904
  ret void, !dbg !10905
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @log_uart_init() unnamed_addr #0 !dbg !10906 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !10916
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #23, !dbg !10916
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !10908, metadata !DIExpression()), !dbg !10917
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #22, !dbg !10918
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #22, !dbg !10919
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #22, !dbg !10920
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #22, !dbg !10921
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !10922
  store i32 9, i32* %7, align 4, !dbg !10923
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !10924
  store i32 3, i32* %8, align 4, !dbg !10925
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !10926
  store i32 0, i32* %9, align 4, !dbg !10927
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !10928
  store i32 0, i32* %10, align 4, !dbg !10929
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #22, !dbg !10930
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #23, !dbg !10931
  ret void, !dbg !10931
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #3

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #8 !dbg !10932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10934, metadata !DIExpression()), !dbg !10935
  ret i32 0, !dbg !10936
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #8 !dbg !10937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10987, metadata !DIExpression()), !dbg !10989
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !10988, metadata !DIExpression()), !dbg !10989
  ret i32 0, !dbg !10990
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #8 !dbg !10991 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10993, metadata !DIExpression()), !dbg !10994
  ret i32 1, !dbg !10995
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !10996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11000, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 %1, metadata !11001, metadata !DIExpression()), !dbg !11003
  call void @llvm.dbg.value(metadata i32 %2, metadata !11002, metadata !DIExpression()), !dbg !11003
  ret i32 0, !dbg !11004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #8 !dbg !11005 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11009, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata i32 %1, metadata !11010, metadata !DIExpression()), !dbg !11012
  call void @llvm.dbg.value(metadata i32 %2, metadata !11011, metadata !DIExpression()), !dbg !11012
  ret i32 -1, !dbg !11013
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #8 !dbg !11014 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11018, metadata !DIExpression()), !dbg !11021
  call void @llvm.dbg.value(metadata i8* %1, metadata !11019, metadata !DIExpression()), !dbg !11021
  call void @llvm.dbg.value(metadata i32 %2, metadata !11020, metadata !DIExpression()), !dbg !11021
  ret i32 0, !dbg !11022
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #8 !dbg !11023 {
  ret i32 1, !dbg !11024
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #8 !dbg !11025 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11029, metadata !DIExpression()), !dbg !11031
  call void @llvm.dbg.value(metadata i32 %1, metadata !11030, metadata !DIExpression()), !dbg !11031
  ret i32 -1, !dbg !11032
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #8 !dbg !11033 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11035, metadata !DIExpression()), !dbg !11036
  ret i32 -1, !dbg !11037
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2102 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2300, metadata !DIExpression()), !dbg !11038
  call void @llvm.dbg.value(metadata i32 %1, metadata !2301, metadata !DIExpression()), !dbg !11038
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #23, !dbg !11039, !srcloc !11040
  call void @llvm.dbg.value(metadata i8* %3, metadata !2303, metadata !DIExpression()), !dbg !11038
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !11041
  %5 = icmp eq i8* %4, null, !dbg !11043
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !11044
  call void @llvm.dbg.value(metadata i8* %6, metadata !2302, metadata !DIExpression()), !dbg !11038
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !11045
  %8 = icmp ult i8* %3, %7, !dbg !11047
  %9 = xor i1 %8, true, !dbg !11048
  %10 = or i1 %5, %9, !dbg !11048
  br i1 %10, label %11, label %13, !dbg !11048

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !11049
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !11048
  br label %13, !dbg !11048

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !11049
  ret i8* %14, !dbg !11048
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !11050 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11052, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.value(metadata i8* %1, metadata !11053, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.value(metadata i32 %2, metadata !11054, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.value(metadata i32 0, metadata !11055, metadata !DIExpression()), !dbg !11056
  %4 = icmp sgt i32 %2, 0, !dbg !11057
  br i1 %4, label %5, label %14, !dbg !11060

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11055, metadata !DIExpression()), !dbg !11056
  call void @llvm.dbg.value(metadata i8* %7, metadata !11053, metadata !DIExpression()), !dbg !11056
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !11061
  call void @llvm.dbg.value(metadata i8* %8, metadata !11053, metadata !DIExpression()), !dbg !11056
  %9 = load i8, i8* %7, align 1, !dbg !11063
  %10 = zext i8 %9 to i32, !dbg !11063
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #22, !dbg !11064
  %12 = add nuw nsw i32 %6, 1, !dbg !11065
  call void @llvm.dbg.value(metadata i32 %12, metadata !11055, metadata !DIExpression()), !dbg !11056
  %13 = icmp eq i32 %12, %2, !dbg !11057
  br i1 %13, label %14, label %5, !dbg !11060, !llvm.loop !11066

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !11068
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #10 !dbg !11069 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11071, metadata !DIExpression()), !dbg !11073
  %2 = add i32 %0, -1, !dbg !11074
  %3 = icmp ugt i32 %2, 16777215, !dbg !11076
  br i1 %3, label %8, label %4, !dbg !11077

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11078
  call void @llvm.dbg.value(metadata i32 %5, metadata !11072, metadata !DIExpression()), !dbg !11073
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11079
  %7 = and i32 %6, -4, !dbg !11079
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11079
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11080
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11081
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11082
  br label %8, !dbg !11083

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !11073
  ret i32 %9, !dbg !11084
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #10 !dbg !11085 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !11086
  ret void, !dbg !11087
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #9 !dbg !11088 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !11089
  ret i32 %1, !dbg !11090
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #9 !dbg !11091 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !11094
  %2 = lshr i32 %1, 3, !dbg !11095
  %3 = and i32 %2, 15, !dbg !11095
  call void @llvm.dbg.value(metadata i32 %3, metadata !11093, metadata !DIExpression()), !dbg !11096
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !11097

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !11098

5:                                                ; preds = %0, %0
  br label %9, !dbg !11100

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !11101
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11102
  br label %15, !dbg !11104

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !11101
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11102
  %12 = and i32 %11, 1024, !dbg !11105
  %13 = icmp eq i32 %12, 0, !dbg !11105
  br i1 %13, label %15, label %14, !dbg !11104

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !11106
  br label %15, !dbg !11108

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !11109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #10 !dbg !11110 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11111
  %2 = or i32 %1, 15728640, !dbg !11111
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11111
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !11112
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11113
  %4 = or i32 %3, 458752, !dbg !11113
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11113
  ret void, !dbg !11114
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #10 !dbg !11115 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11116
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11117
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11118
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !11119
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !11120
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11121
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11122
  ret void, !dbg !11123
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { argmemonly nofree nosync nounwind willreturn }
attributes #7 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #9 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { argmemonly nofree nounwind willreturn }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nobuiltin nounwind optsize "no-builtins" }
attributes #23 = { nounwind }
attributes #24 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2435, !2, !263, !546, !2461, !701, !791, !2465, !882, !900, !999, !1324, !2511, !1412, !1423, !1781, !1842, !2513, !1922, !2090, !2515, !2295, !2306, !2423}
!llvm.ident = !{!2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518, !2518}
!llvm.module.flags = !{!2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !2, file: !3, line: 48, type: !259, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !174, globals: !195, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!4 = !{!5, !66, !71, !77, !156, !165, !170}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 1170, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65}
!9 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!10 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!11 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!12 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!13 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!14 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!15 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!16 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!17 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!18 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!19 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!20 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!21 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!22 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!23 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!24 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!25 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!26 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!27 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!28 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!29 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!30 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!31 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!32 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!33 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!34 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!35 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!36 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!37 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!38 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!39 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!40 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!41 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!42 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!43 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!44 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!45 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!46 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!47 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!48 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!49 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!50 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!51 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!52 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!53 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!54 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!55 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!56 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!57 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!58 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!59 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!60 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!61 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!62 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!63 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!64 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!65 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !67, line: 82, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!68 = !{!69, !70}
!69 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!70 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!71 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !67, line: 75, baseType: !7, size: 32, elements: !72)
!72 = !{!73, !74, !75, !76}
!73 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!74 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!75 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!76 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !78, line: 44, baseType: !79, size: 32, elements: !80)
!78 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!79 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!80 = !{!81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155}
!81 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!82 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!83 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!84 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!85 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!86 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!87 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!88 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!89 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!90 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!91 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!92 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!93 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!94 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!95 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!96 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!97 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!98 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!99 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!100 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!101 = !DIEnumerator(name: "KP_IRQn", value: 10)
!102 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!103 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!104 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!105 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!106 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!107 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!108 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!109 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!110 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!111 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!112 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!113 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!114 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!115 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!116 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!117 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!118 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!119 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!120 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!121 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!122 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!123 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!124 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!125 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!126 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!127 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!128 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!129 = !DIEnumerator(name: "SF_IRQn", value: 38)
!130 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!131 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!132 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!133 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!134 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!135 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!136 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!137 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!138 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!139 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!140 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!141 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!142 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!143 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!144 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!145 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!146 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!147 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!148 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!149 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!150 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!151 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!152 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!153 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!154 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!155 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!156 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 846, baseType: !7, size: 32, elements: !157)
!157 = !{!158, !159, !160, !161, !162, !163, !164}
!158 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!159 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!160 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!161 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!162 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!163 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!164 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !166, line: 380, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!169 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !166, line: 397, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173}
!172 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!173 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!174 = !{!175, !179, !194}
!175 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !176, line: 48, baseType: !177)
!176 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!177 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !178, line: 79, baseType: !7)
!178 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !180, size: 32)
!180 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !78, line: 1272, baseType: !181)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1262, size: 288, elements: !182)
!182 = !{!183, !185, !186, !187, !189, !190, !191, !192, !193}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !181, file: !78, line: 1263, baseType: !184, size: 32)
!184 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !175)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !181, file: !78, line: 1264, baseType: !184, size: 32, offset: 32)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !181, file: !78, line: 1265, baseType: !184, size: 32, offset: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !181, file: !78, line: 1266, baseType: !188, size: 32, offset: 96)
!188 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !181, file: !78, line: 1267, baseType: !184, size: 32, offset: 128)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !181, file: !78, line: 1268, baseType: !184, size: 32, offset: 160)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !181, file: !78, line: 1269, baseType: !184, size: 32, offset: 192)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !181, file: !78, line: 1270, baseType: !184, size: 32, offset: 224)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !181, file: !78, line: 1271, baseType: !184, size: 32, offset: 256)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!195 = !{!0, !196, !205, !212, !234, !257}
!196 = !DIGlobalVariableExpression(var: !197, expr: !DIExpression())
!197 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !2, file: !3, line: 49, type: !198, isLocal: false, isDefinition: true)
!198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 32)
!199 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !78, line: 1260, baseType: !200)
!200 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1256, size: 96, elements: !201)
!201 = !{!202, !203, !204}
!202 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !200, file: !78, line: 1257, baseType: !188, size: 32)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !200, file: !78, line: 1258, baseType: !184, size: 32, offset: 32)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !200, file: !78, line: 1259, baseType: !184, size: 32, offset: 64)
!205 = !DIGlobalVariableExpression(var: !206, expr: !DIExpression())
!206 = distinct !DIGlobalVariable(name: "flag", scope: !207, file: !3, line: 88, type: !211, isLocal: true, isDefinition: true)
!207 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !3, file: !3, line: 86, type: !208, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !210)
!208 = !DISubroutineType(types: !209)
!209 = !{null}
!210 = !{}
!211 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!212 = !DIGlobalVariableExpression(var: !213, expr: !DIExpression())
!213 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !2, file: !3, line: 51, type: !214, isLocal: false, isDefinition: true)
!214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !215, size: 768, elements: !232)
!215 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !67, line: 116, baseType: !216)
!216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 111, size: 128, elements: !217)
!217 = !{!218, !220, !230, !231}
!218 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !216, file: !67, line: 112, baseType: !219, size: 32)
!219 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !166, line: 400, baseType: !170)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !216, file: !67, line: 113, baseType: !221, size: 64, offset: 32)
!221 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !67, line: 109, baseType: !222)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 106, size: 64, elements: !223)
!223 = !{!224, !229}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !222, file: !67, line: 107, baseType: !225, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !166, line: 371, baseType: !226)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !227, size: 32)
!227 = !DISubroutineType(types: !228)
!228 = !{null, !194}
!229 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !222, file: !67, line: 108, baseType: !194, size: 32, offset: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !216, file: !67, line: 114, baseType: !211, size: 8, offset: 96)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !216, file: !67, line: 115, baseType: !211, size: 8, offset: 104)
!232 = !{!233}
!233 = !DISubrange(count: 6)
!234 = !DIGlobalVariableExpression(var: !235, expr: !DIExpression())
!235 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !2, file: !3, line: 52, type: !236, isLocal: false, isDefinition: true)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !67, line: 134, baseType: !237)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 125, size: 4256, elements: !238)
!238 = !{!239, !250, !251, !252, !253, !254, !255, !256}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !237, file: !67, line: 126, baseType: !240, size: 4096)
!240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 4096, elements: !248)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !67, line: 123, baseType: !242)
!242 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 118, size: 128, elements: !243)
!243 = !{!244, !245, !246, !247}
!244 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !242, file: !67, line: 119, baseType: !221, size: 64)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !242, file: !67, line: 120, baseType: !175, size: 32, offset: 64)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !242, file: !67, line: 121, baseType: !211, size: 8, offset: 96)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !242, file: !67, line: 122, baseType: !211, size: 8, offset: 104)
!248 = !{!249}
!249 = !DISubrange(count: 32)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !237, file: !67, line: 127, baseType: !175, size: 32, offset: 4096)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !237, file: !67, line: 128, baseType: !175, size: 32, offset: 4128)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !237, file: !67, line: 129, baseType: !175, size: 32, offset: 4160)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !237, file: !67, line: 130, baseType: !175, size: 32, offset: 4192)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !237, file: !67, line: 131, baseType: !211, size: 8, offset: 4224)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !237, file: !67, line: 132, baseType: !211, size: 8, offset: 4232)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !237, file: !67, line: 133, baseType: !211, size: 8, offset: 4240)
!257 = !DIGlobalVariableExpression(var: !258, expr: !DIExpression())
!258 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !2, file: !3, line: 53, type: !175, isLocal: false, isDefinition: true)
!259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !179, size: 192, elements: !232)
!260 = !DIGlobalVariableExpression(var: !206, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!261 = !DIGlobalVariableExpression(var: !262, expr: !DIExpression())
!262 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !263, file: !264, line: 64, type: !364, isLocal: false, isDefinition: true)
!263 = distinct !DICompileUnit(language: DW_LANG_C99, file: !264, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !265, retainedTypes: !359, globals: !363, splitDebugInlining: false, nameTableKind: None)
!264 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!265 = !{!266, !318, !325, !329, !335, !339, !348, !353}
!266 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 339, baseType: !7, size: 32, elements: !267)
!267 = !{!268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317}
!268 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!269 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!270 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!271 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!272 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!273 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!274 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!275 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!276 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!277 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!278 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!279 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!280 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!281 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!282 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!283 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!284 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!285 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!286 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!287 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!288 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!289 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!290 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!291 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!292 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!293 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!294 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!295 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!296 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!297 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!298 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!299 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!300 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!301 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!302 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!303 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!304 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!305 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!306 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!307 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!308 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!309 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!310 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!311 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!312 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!313 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!314 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!315 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!316 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!317 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!318 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 224, baseType: !79, size: 32, elements: !320)
!319 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!320 = !{!321, !322, !323, !324}
!321 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!322 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!323 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!324 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 210, baseType: !7, size: 32, elements: !326)
!326 = !{!327, !328}
!327 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!328 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 233, baseType: !79, size: 32, elements: !330)
!330 = !{!331, !332, !333, !334}
!331 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!332 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!333 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!334 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!335 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 217, baseType: !7, size: 32, elements: !336)
!336 = !{!337, !338}
!337 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!338 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!339 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 415, baseType: !7, size: 32, elements: !340)
!340 = !{!341, !342, !343, !344, !345, !346, !347}
!341 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!342 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!343 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!344 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!345 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!346 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!347 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 427, baseType: !7, size: 32, elements: !349)
!349 = !{!350, !351, !352}
!350 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!351 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!352 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!353 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !319, line: 242, baseType: !7, size: 32, elements: !354)
!354 = !{!355, !356, !357, !358}
!355 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!356 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!357 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!358 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!359 = !{!194, !360, !361, !362}
!360 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !319, line: 213, baseType: !325)
!361 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !319, line: 220, baseType: !335)
!362 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !319, line: 247, baseType: !353)
!363 = !{!261}
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 32)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !78, line: 1554, baseType: !366)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1522, size: 29440, elements: !367)
!367 = !{!368, !385, !389, !398, !399, !408, !409, !418, !419, !429, !430, !439, !440, !449, !450, !459, !460, !469, !473, !482, !483, !492, !493, !502, !511, !512, !523, !527, !536, !537}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !366, file: !78, line: 1523, baseType: !369, size: 256)
!369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 256, elements: !383)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !78, line: 1400, baseType: !371)
!371 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1395, size: 128, elements: !372)
!372 = !{!373, !374, !375, !376}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !371, file: !78, line: 1396, baseType: !184, size: 32)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !371, file: !78, line: 1397, baseType: !184, size: 32, offset: 32)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !371, file: !78, line: 1398, baseType: !184, size: 32, offset: 64)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !371, file: !78, line: 1399, baseType: !377, size: 32, offset: 96)
!377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 32, elements: !381)
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !176, line: 24, baseType: !379)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !178, line: 43, baseType: !380)
!380 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!381 = !{!382}
!382 = !DISubrange(count: 4)
!383 = !{!384}
!384 = !DISubrange(count: 2)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !366, file: !78, line: 1524, baseType: !386, size: 1792, offset: 256)
!386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1792, elements: !387)
!387 = !{!388}
!388 = !DISubrange(count: 224)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !366, file: !78, line: 1525, baseType: !390, size: 256, offset: 2048)
!390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !391, size: 256, elements: !383)
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !78, line: 1409, baseType: !392)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1404, size: 128, elements: !393)
!393 = !{!394, !395, !396, !397}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !392, file: !78, line: 1405, baseType: !184, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !392, file: !78, line: 1406, baseType: !184, size: 32, offset: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !392, file: !78, line: 1407, baseType: !184, size: 32, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !392, file: !78, line: 1408, baseType: !377, size: 32, offset: 96)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !366, file: !78, line: 1526, baseType: !386, size: 1792, offset: 2304)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !366, file: !78, line: 1527, baseType: !400, size: 256, offset: 4096)
!400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !401, size: 256, elements: !383)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !78, line: 1417, baseType: !402)
!402 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1412, size: 128, elements: !403)
!403 = !{!404, !405, !406, !407}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !402, file: !78, line: 1413, baseType: !184, size: 32)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !402, file: !78, line: 1414, baseType: !184, size: 32, offset: 32)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !402, file: !78, line: 1415, baseType: !184, size: 32, offset: 64)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !402, file: !78, line: 1416, baseType: !377, size: 32, offset: 96)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !366, file: !78, line: 1528, baseType: !386, size: 1792, offset: 4352)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !366, file: !78, line: 1529, baseType: !410, size: 256, offset: 6144)
!410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !411, size: 256, elements: !383)
!411 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !78, line: 1426, baseType: !412)
!412 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1421, size: 128, elements: !413)
!413 = !{!414, !415, !416, !417}
!414 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !412, file: !78, line: 1422, baseType: !184, size: 32)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !412, file: !78, line: 1423, baseType: !184, size: 32, offset: 32)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !412, file: !78, line: 1424, baseType: !184, size: 32, offset: 64)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !412, file: !78, line: 1425, baseType: !377, size: 32, offset: 96)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !366, file: !78, line: 1530, baseType: !386, size: 1792, offset: 6400)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !366, file: !78, line: 1531, baseType: !420, size: 256, offset: 8192)
!420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !421, size: 256, elements: !383)
!421 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !78, line: 1432, baseType: !422)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1429, size: 128, elements: !423)
!423 = !{!424, !425}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !422, file: !78, line: 1430, baseType: !184, size: 32)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !422, file: !78, line: 1431, baseType: !426, size: 96, offset: 32)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 96, elements: !427)
!427 = !{!428}
!428 = !DISubrange(count: 12)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !366, file: !78, line: 1532, baseType: !386, size: 1792, offset: 8448)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !366, file: !78, line: 1533, baseType: !431, size: 256, offset: 10240)
!431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !432, size: 256, elements: !383)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !78, line: 1440, baseType: !433)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1435, size: 128, elements: !434)
!434 = !{!435, !436, !437, !438}
!435 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !433, file: !78, line: 1436, baseType: !184, size: 32)
!436 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !433, file: !78, line: 1437, baseType: !184, size: 32, offset: 32)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !433, file: !78, line: 1438, baseType: !184, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !433, file: !78, line: 1439, baseType: !377, size: 32, offset: 96)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !366, file: !78, line: 1534, baseType: !386, size: 1792, offset: 10496)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !366, file: !78, line: 1535, baseType: !441, size: 256, offset: 12288)
!441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !442, size: 256, elements: !383)
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !78, line: 1448, baseType: !443)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1443, size: 128, elements: !444)
!444 = !{!445, !446, !447, !448}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !443, file: !78, line: 1444, baseType: !184, size: 32)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !443, file: !78, line: 1445, baseType: !184, size: 32, offset: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !443, file: !78, line: 1446, baseType: !184, size: 32, offset: 64)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !443, file: !78, line: 1447, baseType: !377, size: 32, offset: 96)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !366, file: !78, line: 1536, baseType: !386, size: 1792, offset: 12544)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !366, file: !78, line: 1537, baseType: !451, size: 256, offset: 14336)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !383)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !78, line: 1455, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1450, size: 128, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !453, file: !78, line: 1451, baseType: !184, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !453, file: !78, line: 1452, baseType: !184, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !453, file: !78, line: 1453, baseType: !184, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !453, file: !78, line: 1454, baseType: !377, size: 32, offset: 96)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !366, file: !78, line: 1538, baseType: !386, size: 1792, offset: 14592)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !366, file: !78, line: 1539, baseType: !461, size: 512, offset: 16384)
!461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 512, elements: !381)
!462 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !78, line: 1463, baseType: !463)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1458, size: 128, elements: !464)
!464 = !{!465, !466, !467, !468}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !463, file: !78, line: 1459, baseType: !184, size: 32)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !463, file: !78, line: 1460, baseType: !184, size: 32, offset: 32)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !463, file: !78, line: 1461, baseType: !184, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !463, file: !78, line: 1462, baseType: !377, size: 32, offset: 96)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !366, file: !78, line: 1540, baseType: !470, size: 1536, offset: 16896)
!470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1536, elements: !471)
!471 = !{!472}
!472 = !DISubrange(count: 192)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !366, file: !78, line: 1541, baseType: !474, size: 256, offset: 18432)
!474 = !DICompositeType(tag: DW_TAG_array_type, baseType: !475, size: 256, elements: !383)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !78, line: 1471, baseType: !476)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1466, size: 128, elements: !477)
!477 = !{!478, !479, !480, !481}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !476, file: !78, line: 1467, baseType: !184, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !476, file: !78, line: 1468, baseType: !184, size: 32, offset: 32)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !476, file: !78, line: 1469, baseType: !184, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !476, file: !78, line: 1470, baseType: !377, size: 32, offset: 96)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !366, file: !78, line: 1542, baseType: !386, size: 1792, offset: 18688)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !366, file: !78, line: 1543, baseType: !484, size: 256, offset: 20480)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 256, elements: !383)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !78, line: 1480, baseType: !486)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1475, size: 128, elements: !487)
!487 = !{!488, !489, !490, !491}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !486, file: !78, line: 1476, baseType: !184, size: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !486, file: !78, line: 1477, baseType: !184, size: 32, offset: 32)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !486, file: !78, line: 1478, baseType: !184, size: 32, offset: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !486, file: !78, line: 1479, baseType: !377, size: 32, offset: 96)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !366, file: !78, line: 1544, baseType: !386, size: 1792, offset: 20736)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !366, file: !78, line: 1545, baseType: !494, size: 256, offset: 22528)
!494 = !DICompositeType(tag: DW_TAG_array_type, baseType: !495, size: 256, elements: !383)
!495 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !78, line: 1489, baseType: !496)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1484, size: 128, elements: !497)
!497 = !{!498, !499, !500, !501}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !496, file: !78, line: 1485, baseType: !184, size: 32)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !496, file: !78, line: 1486, baseType: !184, size: 32, offset: 32)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !496, file: !78, line: 1487, baseType: !184, size: 32, offset: 64)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !496, file: !78, line: 1488, baseType: !377, size: 32, offset: 96)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !366, file: !78, line: 1546, baseType: !503, size: 256, offset: 22784)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 256, elements: !383)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !78, line: 1497, baseType: !505)
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1492, size: 128, elements: !506)
!506 = !{!507, !508, !509, !510}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !505, file: !78, line: 1493, baseType: !184, size: 32)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !505, file: !78, line: 1494, baseType: !184, size: 32, offset: 32)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !505, file: !78, line: 1495, baseType: !184, size: 32, offset: 64)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !505, file: !78, line: 1496, baseType: !377, size: 32, offset: 96)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !366, file: !78, line: 1547, baseType: !470, size: 1536, offset: 23040)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !366, file: !78, line: 1548, baseType: !513, size: 896, offset: 24576)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 896, elements: !521)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !78, line: 1505, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1500, size: 128, elements: !516)
!516 = !{!517, !518, !519, !520}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !515, file: !78, line: 1501, baseType: !184, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !515, file: !78, line: 1502, baseType: !184, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !515, file: !78, line: 1503, baseType: !184, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !515, file: !78, line: 1504, baseType: !377, size: 32, offset: 96)
!521 = !{!522}
!522 = !DISubrange(count: 7)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !366, file: !78, line: 1549, baseType: !524, size: 1152, offset: 25472)
!524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1152, elements: !525)
!525 = !{!526}
!526 = !DISubrange(count: 144)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !366, file: !78, line: 1550, baseType: !528, size: 512, offset: 26624)
!528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !529, size: 512, elements: !381)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !78, line: 1513, baseType: !530)
!530 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1508, size: 128, elements: !531)
!531 = !{!532, !533, !534, !535}
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !530, file: !78, line: 1509, baseType: !184, size: 32)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !530, file: !78, line: 1510, baseType: !184, size: 32, offset: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !530, file: !78, line: 1511, baseType: !184, size: 32, offset: 64)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !530, file: !78, line: 1512, baseType: !377, size: 32, offset: 96)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !366, file: !78, line: 1551, baseType: !470, size: 1536, offset: 27136)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !366, file: !78, line: 1552, baseType: !538, size: 768, offset: 28672)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !539, size: 768, elements: !232)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !78, line: 1519, baseType: !540)
!540 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1516, size: 128, elements: !541)
!541 = !{!542, !543}
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !540, file: !78, line: 1517, baseType: !184, size: 32)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !540, file: !78, line: 1518, baseType: !426, size: 96, offset: 32)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !546, file: !547, line: 101, type: !695, isLocal: true, isDefinition: true)
!546 = distinct !DICompileUnit(language: DW_LANG_C99, file: !547, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !548, retainedTypes: !645, globals: !654, splitDebugInlining: false, nameTableKind: None)
!547 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!548 = !{!549, !556, !571, !577, !583, !588, !595, !611, !617, !621, !626, !633, !641}
!549 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 180, baseType: !7, size: 32, elements: !550)
!550 = !{!551, !552, !553, !554, !555}
!551 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!552 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!553 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!554 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!555 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!556 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !557, line: 189, baseType: !7, size: 32, elements: !558)
!557 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!558 = !{!559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570}
!559 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!560 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!561 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!562 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!563 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!564 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!565 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!566 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!567 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!568 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!569 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!570 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!571 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 355, baseType: !79, size: 32, elements: !573)
!572 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!573 = !{!574, !575, !576}
!574 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!575 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!576 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!577 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !557, line: 206, baseType: !79, size: 32, elements: !578)
!578 = !{!579, !580, !581, !582}
!579 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!580 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!581 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!582 = !DIEnumerator(name: "VDMA_OK", value: 0)
!583 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !547, line: 65, baseType: !7, size: 32, elements: !584)
!584 = !{!585, !586, !587}
!585 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!586 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!587 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!588 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 345, baseType: !79, size: 32, elements: !589)
!589 = !{!590, !591, !592, !593, !594}
!590 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!591 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!592 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!593 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!594 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!595 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 302, baseType: !7, size: 32, elements: !596)
!596 = !{!597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610}
!597 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!598 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!599 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!600 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!601 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!602 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!603 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!604 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!605 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!606 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!607 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!608 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!609 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!610 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!611 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 321, baseType: !7, size: 32, elements: !612)
!612 = !{!613, !614, !615, !616}
!613 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!614 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!615 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!616 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 330, baseType: !7, size: 32, elements: !618)
!618 = !{!619, !620}
!619 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!620 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!621 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !572, line: 337, baseType: !7, size: 32, elements: !622)
!622 = !{!623, !624, !625}
!623 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!624 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!625 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!626 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !627, line: 101, baseType: !79, size: 32, elements: !628)
!627 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!628 = !{!629, !630, !631, !632}
!629 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!630 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!631 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!632 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!633 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !634, line: 152, baseType: !79, size: 32, elements: !635)
!634 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!635 = !{!636, !637, !638, !639, !640}
!636 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!637 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!638 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!639 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!640 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!641 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !557, line: 222, baseType: !79, size: 32, elements: !642)
!642 = !{!643, !644}
!643 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!644 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!645 = !{!194, !175, !646}
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 32)
!647 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !648, line: 96, baseType: !649)
!648 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!649 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !648, line: 93, size: 64, elements: !650)
!650 = !{!651, !652}
!651 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !649, file: !648, line: 94, baseType: !211, size: 8)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !649, file: !648, line: 95, baseType: !653, size: 32, offset: 32)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !6, line: 186, baseType: !549)
!654 = !{!544, !655, !668, !673, !687, !693}
!655 = !DIGlobalVariableExpression(var: !656, expr: !DIExpression())
!656 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !546, file: !547, line: 102, type: !657, isLocal: true, isDefinition: true)
!657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !658, size: 256, elements: !381)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !547, line: 74, baseType: !659)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !547, line: 71, size: 64, elements: !660)
!660 = !{!661, !667}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !659, file: !547, line: 72, baseType: !662, size: 32)
!662 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !572, line: 410, baseType: !663)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 32)
!664 = !DISubroutineType(types: !665)
!665 = !{null, !666, !194}
!666 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !572, line: 359, baseType: !571)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !659, file: !547, line: 73, baseType: !194, size: 32, offset: 32)
!668 = !DIGlobalVariableExpression(var: !669, expr: !DIExpression())
!669 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !546, file: !547, line: 103, type: !670, isLocal: true, isDefinition: true)
!670 = !DICompositeType(tag: DW_TAG_array_type, baseType: !647, size: 512, elements: !671)
!671 = !{!672}
!672 = !DISubrange(count: 8)
!673 = !DIGlobalVariableExpression(var: !674, expr: !DIExpression())
!674 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !546, file: !547, line: 104, type: !675, isLocal: true, isDefinition: true)
!675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !676, size: 896, elements: !381)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !572, line: 390, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 382, size: 224, elements: !678)
!678 = !{!679, !681, !682, !683, !684, !685, !686}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !677, file: !572, line: 383, baseType: !680, size: 32)
!680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 32)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !677, file: !572, line: 384, baseType: !175, size: 32, offset: 32)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !677, file: !572, line: 385, baseType: !175, size: 32, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !677, file: !572, line: 386, baseType: !680, size: 32, offset: 96)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !677, file: !572, line: 387, baseType: !175, size: 32, offset: 128)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !677, file: !572, line: 388, baseType: !175, size: 32, offset: 160)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !677, file: !572, line: 389, baseType: !175, size: 32, offset: 192)
!687 = !DIGlobalVariableExpression(var: !688, expr: !DIExpression())
!688 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !546, file: !547, line: 105, type: !689, isLocal: true, isDefinition: true)
!689 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 416, elements: !691)
!690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!691 = !{!692}
!692 = !DISubrange(count: 13)
!693 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression())
!694 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !546, file: !547, line: 90, type: !211, isLocal: true, isDefinition: true)
!695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !696, size: 128, elements: !381)
!696 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !697)
!697 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !547, line: 69, baseType: !583)
!698 = !DIGlobalVariableExpression(var: !694, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!699 = !DIGlobalVariableExpression(var: !700, expr: !DIExpression())
!700 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !701, file: !702, line: 53, type: !782, isLocal: false, isDefinition: true)
!701 = distinct !DICompileUnit(language: DW_LANG_C99, file: !702, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !703, retainedTypes: !714, globals: !770, splitDebugInlining: false, nameTableKind: None)
!702 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!703 = !{!5, !77, !556, !549, !704}
!704 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !648, line: 46, baseType: !7, size: 32, elements: !705)
!705 = !{!706, !707, !708, !709, !710, !711, !712, !713}
!706 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!707 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!708 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!709 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!710 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!711 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!712 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!713 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!714 = !{!715}
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !78, line: 588, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 542, size: 800, elements: !718)
!718 = !{!719, !725, !730, !736, !737, !742, !747, !748, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !717, file: !78, line: 547, baseType: !720, size: 32)
!720 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 543, size: 32, elements: !721)
!721 = !{!722, !723, !724}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !720, file: !78, line: 544, baseType: !188, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !720, file: !78, line: 545, baseType: !184, size: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !720, file: !78, line: 546, baseType: !184, size: 32)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !717, file: !78, line: 551, baseType: !726, size: 32, offset: 32)
!726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 548, size: 32, elements: !727)
!727 = !{!728, !729}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !726, file: !78, line: 549, baseType: !184, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !726, file: !78, line: 550, baseType: !184, size: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !717, file: !78, line: 556, baseType: !731, size: 32, offset: 64)
!731 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 552, size: 32, elements: !732)
!732 = !{!733, !734, !735}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !731, file: !78, line: 553, baseType: !188, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !731, file: !78, line: 554, baseType: !184, size: 32)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !731, file: !78, line: 555, baseType: !184, size: 32)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !717, file: !78, line: 557, baseType: !184, size: 32, offset: 96)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !717, file: !78, line: 561, baseType: !738, size: 32, offset: 128)
!738 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 558, size: 32, elements: !739)
!739 = !{!740, !741}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !738, file: !78, line: 559, baseType: !184, size: 32)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !738, file: !78, line: 560, baseType: !184, size: 32)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !717, file: !78, line: 565, baseType: !743, size: 32, offset: 160)
!743 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 562, size: 32, elements: !744)
!744 = !{!745, !746}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !743, file: !78, line: 563, baseType: !188, size: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !743, file: !78, line: 564, baseType: !184, size: 32)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !717, file: !78, line: 566, baseType: !184, size: 32, offset: 192)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !717, file: !78, line: 570, baseType: !749, size: 32, offset: 224)
!749 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !717, file: !78, line: 567, size: 32, elements: !750)
!750 = !{!751, !752}
!751 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !749, file: !78, line: 568, baseType: !184, size: 32)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !749, file: !78, line: 569, baseType: !184, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !717, file: !78, line: 571, baseType: !184, size: 32, offset: 256)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !717, file: !78, line: 572, baseType: !184, size: 32, offset: 288)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !717, file: !78, line: 573, baseType: !184, size: 32, offset: 320)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !717, file: !78, line: 574, baseType: !184, size: 32, offset: 352)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !717, file: !78, line: 575, baseType: !188, size: 32, offset: 384)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !717, file: !78, line: 576, baseType: !184, size: 32, offset: 416)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !717, file: !78, line: 577, baseType: !184, size: 32, offset: 448)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !717, file: !78, line: 578, baseType: !184, size: 32, offset: 480)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !717, file: !78, line: 579, baseType: !184, size: 32, offset: 512)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !717, file: !78, line: 580, baseType: !184, size: 32, offset: 544)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !717, file: !78, line: 581, baseType: !184, size: 32, offset: 576)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !717, file: !78, line: 582, baseType: !184, size: 32, offset: 608)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !717, file: !78, line: 583, baseType: !184, size: 32, offset: 640)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !717, file: !78, line: 584, baseType: !184, size: 32, offset: 672)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !717, file: !78, line: 585, baseType: !184, size: 32, offset: 704)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !717, file: !78, line: 586, baseType: !188, size: 32, offset: 736)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !717, file: !78, line: 587, baseType: !184, size: 32, offset: 768)
!770 = !{!699, !771, !776}
!771 = !DIGlobalVariableExpression(var: !772, expr: !DIExpression())
!772 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !701, file: !702, line: 54, type: !773, isLocal: false, isDefinition: true)
!773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !774, size: 128, elements: !381)
!774 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !775)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !6, line: 1237, baseType: !5)
!776 = !DIGlobalVariableExpression(var: !777, expr: !DIExpression())
!777 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !701, file: !702, line: 55, type: !778, isLocal: false, isDefinition: true)
!778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !779, size: 128, elements: !381)
!779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !780)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !78, line: 125, baseType: !781)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !78, line: 123, baseType: !77)
!782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !783, size: 128, elements: !381)
!783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !715)
!784 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!785 = distinct !DIGlobalVariable(name: "priority_set", scope: !786, file: !787, line: 128, type: !175, isLocal: true, isDefinition: true)
!786 = distinct !DISubprogram(name: "hal_nvic_init", scope: !787, file: !787, line: 126, type: !788, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !878)
!787 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!788 = !DISubroutineType(types: !789)
!789 = !{!790}
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !634, line: 158, baseType: !633)
!791 = distinct !DICompileUnit(language: DW_LANG_C99, file: !787, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !792, retainedTypes: !793, globals: !860, splitDebugInlining: false, nameTableKind: None)
!792 = !{!633, !77}
!793 = !{!780, !794, !175, !828, !858}
!794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 32)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !796, line: 418, baseType: !797)
!796 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 395, size: 1120, elements: !798)
!798 = !{!799, !800, !801, !802, !803, !804, !805, !808, !809, !810, !811, !812, !813, !814, !815, !817, !818, !819, !821, !825, !827}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !797, file: !796, line: 397, baseType: !188, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !797, file: !796, line: 398, baseType: !184, size: 32, offset: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !797, file: !796, line: 399, baseType: !184, size: 32, offset: 64)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !797, file: !796, line: 400, baseType: !184, size: 32, offset: 96)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !797, file: !796, line: 401, baseType: !184, size: 32, offset: 128)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !797, file: !796, line: 402, baseType: !184, size: 32, offset: 160)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !797, file: !796, line: 403, baseType: !806, size: 96, offset: 192)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 96, elements: !427)
!807 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !378)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !797, file: !796, line: 404, baseType: !184, size: 32, offset: 288)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !797, file: !796, line: 405, baseType: !184, size: 32, offset: 320)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !797, file: !796, line: 406, baseType: !184, size: 32, offset: 352)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !797, file: !796, line: 407, baseType: !184, size: 32, offset: 384)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !797, file: !796, line: 408, baseType: !184, size: 32, offset: 416)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !797, file: !796, line: 409, baseType: !184, size: 32, offset: 448)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !797, file: !796, line: 410, baseType: !184, size: 32, offset: 480)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !797, file: !796, line: 411, baseType: !816, size: 64, offset: 512)
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 64, elements: !383)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !797, file: !796, line: 412, baseType: !188, size: 32, offset: 576)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !797, file: !796, line: 413, baseType: !188, size: 32, offset: 608)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !797, file: !796, line: 414, baseType: !820, size: 128, offset: 640)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 128, elements: !381)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !797, file: !796, line: 415, baseType: !822, size: 160, offset: 768)
!822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !188, size: 160, elements: !823)
!823 = !{!824}
!824 = !DISubrange(count: 5)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !797, file: !796, line: 416, baseType: !826, size: 160, offset: 928)
!826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 160, elements: !823)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !797, file: !796, line: 417, baseType: !184, size: 32, offset: 1088)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !796, line: 378, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 363, size: 28704, elements: !831)
!831 = !{!832, !834, !838, !839, !840, !841, !842, !843, !844, !845, !849, !853, !857}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !830, file: !796, line: 365, baseType: !833, size: 256)
!833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 256, elements: !671)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !830, file: !796, line: 366, baseType: !835, size: 768, offset: 256)
!835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 768, elements: !836)
!836 = !{!837}
!837 = !DISubrange(count: 24)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !830, file: !796, line: 367, baseType: !833, size: 256, offset: 1024)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !830, file: !796, line: 368, baseType: !835, size: 768, offset: 1280)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !830, file: !796, line: 369, baseType: !833, size: 256, offset: 2048)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !830, file: !796, line: 370, baseType: !835, size: 768, offset: 2304)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !830, file: !796, line: 371, baseType: !833, size: 256, offset: 3072)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !830, file: !796, line: 372, baseType: !835, size: 768, offset: 3328)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !830, file: !796, line: 373, baseType: !833, size: 256, offset: 4096)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !830, file: !796, line: 374, baseType: !846, size: 1792, offset: 4352)
!846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 1792, elements: !847)
!847 = !{!848}
!848 = !DISubrange(count: 56)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !830, file: !796, line: 375, baseType: !850, size: 1920, offset: 6144)
!850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 1920, elements: !851)
!851 = !{!852}
!852 = !DISubrange(count: 240)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !830, file: !796, line: 376, baseType: !854, size: 20608, offset: 8064)
!854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 20608, elements: !855)
!855 = !{!856}
!856 = !DISubrange(count: 644)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !830, file: !796, line: 377, baseType: !184, size: 32, offset: 28672)
!858 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !176, line: 44, baseType: !859)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !178, line: 77, baseType: !79)
!860 = !{!861, !862, !875}
!861 = !DIGlobalVariableExpression(var: !785, expr: !DIExpression())
!862 = !DIGlobalVariableExpression(var: !863, expr: !DIExpression())
!863 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !791, file: !787, line: 119, type: !864, isLocal: false, isDefinition: true)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 4096, elements: !873)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !787, line: 50, baseType: !866)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !787, line: 47, size: 64, elements: !867)
!867 = !{!868, !872}
!868 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !866, file: !787, line: 48, baseType: !869, size: 32)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 32)
!870 = !DISubroutineType(types: !871)
!871 = !{null, !780}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !866, file: !787, line: 49, baseType: !175, size: 32, offset: 32)
!873 = !{!874}
!874 = !DISubrange(count: 64)
!875 = !DIGlobalVariableExpression(var: !876, expr: !DIExpression())
!876 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !791, file: !787, line: 52, type: !877, isLocal: true, isDefinition: true)
!877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !690, size: 2048, elements: !873)
!878 = !{!879}
!879 = !DILocalVariable(name: "i", scope: !786, file: !787, line: 129, type: !175)
!880 = !DIGlobalVariableExpression(var: !881, expr: !DIExpression())
!881 = distinct !DIGlobalVariable(name: "g_crypt_lock", scope: !882, file: !883, line: 52, type: !211, isLocal: false, isDefinition: true)
!882 = distinct !DICompileUnit(language: DW_LANG_C99, file: !883, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !884, retainedTypes: !895, globals: !897, splitDebugInlining: false, nameTableKind: None)
!883 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_aes.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!884 = !{!885, !890}
!885 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !886, line: 290, baseType: !79, size: 32, elements: !887)
!886 = !DIFile(filename: "../../../../../driver/chip/inc/hal_aes.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!887 = !{!888, !889}
!888 = !DIEnumerator(name: "HAL_AES_STATUS_ERROR", value: -1)
!889 = !DIEnumerator(name: "HAL_AES_STATUS_OK", value: 0)
!890 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !891, line: 44, baseType: !7, size: 32, elements: !892)
!891 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_aes_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!892 = !{!893, !894}
!893 = !DIEnumerator(name: "AES_CBC", value: 0)
!894 = !DIEnumerator(name: "AES_ECB", value: 1)
!895 = !{!896, !194}
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_aes_status_t", file: !886, line: 293, baseType: !885)
!897 = !{!880}
!898 = !DIGlobalVariableExpression(var: !899, expr: !DIExpression())
!899 = distinct !DIGlobalVariable(name: "DelayResume", scope: !900, file: !901, line: 55, type: !211, isLocal: false, isDefinition: true)
!900 = distinct !DICompileUnit(language: DW_LANG_C99, file: !901, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !902, retainedTypes: !937, globals: !976, splitDebugInlining: false, nameTableKind: None)
!901 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!902 = !{!903, !911, !916}
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !904, line: 51, baseType: !7, size: 32, elements: !905)
!904 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!905 = !{!906, !907, !908, !909, !910}
!906 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!907 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!908 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!909 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!910 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!911 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !904, line: 62, baseType: !7, size: 32, elements: !912)
!912 = !{!913, !914, !915}
!913 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!914 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!915 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!916 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !917, line: 228, baseType: !7, size: 32, elements: !918)
!917 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!918 = !{!919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936}
!919 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!920 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!921 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!922 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!923 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!924 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!925 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!926 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!927 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!928 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!929 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!930 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!931 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!932 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!933 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!934 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!935 = !DIEnumerator(name: "NR_MUXS", value: 16)
!936 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!937 = !{!938, !939, !961, !680, !175, !7, !967, !969, !973, !975}
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 32)
!940 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !78, line: 2777, baseType: !941)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2758, size: 576, elements: !942)
!942 = !{!943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !941, file: !78, line: 2759, baseType: !184, size: 32)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !941, file: !78, line: 2760, baseType: !184, size: 32, offset: 32)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !941, file: !78, line: 2761, baseType: !184, size: 32, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !941, file: !78, line: 2762, baseType: !184, size: 32, offset: 96)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !941, file: !78, line: 2763, baseType: !184, size: 32, offset: 128)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !941, file: !78, line: 2764, baseType: !184, size: 32, offset: 160)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !941, file: !78, line: 2765, baseType: !184, size: 32, offset: 192)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !941, file: !78, line: 2766, baseType: !184, size: 32, offset: 224)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !941, file: !78, line: 2767, baseType: !184, size: 32, offset: 256)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !941, file: !78, line: 2768, baseType: !184, size: 32, offset: 288)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !941, file: !78, line: 2769, baseType: !184, size: 32, offset: 320)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !941, file: !78, line: 2770, baseType: !184, size: 32, offset: 352)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !941, file: !78, line: 2771, baseType: !184, size: 32, offset: 384)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !941, file: !78, line: 2772, baseType: !184, size: 32, offset: 416)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !941, file: !78, line: 2773, baseType: !184, size: 32, offset: 448)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !941, file: !78, line: 2774, baseType: !184, size: 32, offset: 480)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !941, file: !78, line: 2775, baseType: !184, size: 32, offset: 512)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !941, file: !78, line: 2776, baseType: !184, size: 32, offset: 544)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !78, line: 2801, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2798, size: 64, elements: !964)
!964 = !{!965, !966}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !963, file: !78, line: 2799, baseType: !184, size: 32)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !963, file: !78, line: 2800, baseType: !184, size: 32, offset: 32)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!968 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !7)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 32)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !176, line: 36, baseType: !971)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !178, line: 57, baseType: !972)
!972 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 32)
!974 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !380)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 32)
!976 = !{!898, !977, !979, !981, !983, !985, !987, !989, !991, !993, !995}
!977 = !DIGlobalVariableExpression(var: !978, expr: !DIExpression())
!978 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !900, file: !901, line: 604, type: !378, isLocal: false, isDefinition: true)
!979 = !DIGlobalVariableExpression(var: !980, expr: !DIExpression())
!980 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !900, file: !901, line: 605, type: !175, isLocal: false, isDefinition: true)
!981 = !DIGlobalVariableExpression(var: !982, expr: !DIExpression())
!982 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !900, file: !901, line: 606, type: !175, isLocal: false, isDefinition: true)
!983 = !DIGlobalVariableExpression(var: !984, expr: !DIExpression())
!984 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !900, file: !901, line: 607, type: !175, isLocal: false, isDefinition: true)
!985 = !DIGlobalVariableExpression(var: !986, expr: !DIExpression())
!986 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !900, file: !901, line: 608, type: !175, isLocal: false, isDefinition: true)
!987 = !DIGlobalVariableExpression(var: !988, expr: !DIExpression())
!988 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !900, file: !901, line: 609, type: !175, isLocal: false, isDefinition: true)
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !900, file: !901, line: 610, type: !175, isLocal: false, isDefinition: true)
!991 = !DIGlobalVariableExpression(var: !992, expr: !DIExpression())
!992 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !900, file: !901, line: 611, type: !175, isLocal: false, isDefinition: true)
!993 = !DIGlobalVariableExpression(var: !994, expr: !DIExpression())
!994 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !900, file: !901, line: 665, type: !175, isLocal: false, isDefinition: true)
!995 = !DIGlobalVariableExpression(var: !996, expr: !DIExpression())
!996 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !900, file: !901, line: 666, type: !175, isLocal: false, isDefinition: true)
!997 = !DIGlobalVariableExpression(var: !998, expr: !DIExpression())
!998 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !999, file: !1000, line: 334, type: !211, isLocal: false, isDefinition: true)
!999 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1000, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1001, retainedTypes: !1169, globals: !1309, splitDebugInlining: false, nameTableKind: None)
!1000 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1001 = !{!1002, !1093, !1099, !1106, !1118, !1129, !1138, !1147, !1151, !1155}
!1002 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1003, line: 58, baseType: !79, size: 32, elements: !1004)
!1003 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1004 = !{!1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092}
!1005 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1006 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1007 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1008 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1009 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1010 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1011 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1012 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1013 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1014 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1015 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1016 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1017 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1018 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1019 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1020 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1021 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1022 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1023 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1024 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1025 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1026 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1027 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1028 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1029 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1030 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1031 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1032 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1033 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1034 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1035 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1036 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1037 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1038 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1039 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1040 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1041 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1042 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1043 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1044 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1045 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1046 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1047 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1048 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1049 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1050 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1051 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1052 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1053 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1054 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1055 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1056 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1057 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1058 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1059 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1060 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1061 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1062 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1063 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1064 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1065 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1066 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1067 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1068 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1069 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1070 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1071 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1072 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1073 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1074 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1075 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1076 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1077 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1078 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1079 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1080 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1081 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1082 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1083 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1084 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1085 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1086 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1087 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1088 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1089 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1090 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1091 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1092 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1093 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1094, line: 81, baseType: !7, size: 32, elements: !1095)
!1094 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1095 = !{!1096, !1097, !1098}
!1096 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1097 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1098 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1099 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1000, line: 298, baseType: !7, size: 32, elements: !1100)
!1100 = !{!1101, !1102, !1103, !1104, !1105}
!1101 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1102 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1103 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1104 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1105 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1106 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1107, line: 51, baseType: !7, size: 32, elements: !1108)
!1107 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1108 = !{!1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117}
!1109 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1110 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1111 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1112 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1113 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1114 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1115 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1116 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1117 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1118 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1119, line: 110, baseType: !79, size: 32, elements: !1120)
!1119 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1120 = !{!1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128}
!1121 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1122 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1123 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1124 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1125 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1126 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1127 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1128 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1129 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1107, line: 73, baseType: !7, size: 32, elements: !1130)
!1130 = !{!1131, !1132, !1133, !1134, !1135, !1136, !1137}
!1131 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1132 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1133 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1134 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1135 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1136 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1137 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1138 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1107, line: 83, baseType: !7, size: 32, elements: !1139)
!1139 = !{!1140, !1141, !1142, !1143, !1144, !1145, !1146}
!1140 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1141 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1142 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1143 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1144 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1145 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1146 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1147 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1107, line: 98, baseType: !7, size: 32, elements: !1148)
!1148 = !{!1149, !1150}
!1149 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1150 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1151 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1094, line: 76, baseType: !7, size: 32, elements: !1152)
!1152 = !{!1153, !1154}
!1153 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1154 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1155 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1094, line: 208, baseType: !7, size: 32, elements: !1156)
!1156 = !{!1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168}
!1157 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1158 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1159 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1160 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1161 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1162 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1163 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1164 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1165 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1166 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1167 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1168 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1169 = !{!175, !938, !969, !680, !1170, !1280, !1302, !194, !1308, !380}
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 32)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1094, line: 193, baseType: !1172)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 134, size: 1824, elements: !1173)
!1173 = !{!1174, !1175, !1176, !1183, !1189, !1193, !1201, !1202, !1209, !1210, !1211, !1212, !1220, !1223, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1274, !1275, !1279}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1172, file: !1094, line: 136, baseType: !175, size: 32)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1172, file: !1094, line: 137, baseType: !680, size: 32, offset: 32)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1172, file: !1094, line: 138, baseType: !1177, size: 32, offset: 64)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1178, line: 56, baseType: !1179)
!1178 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 32)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 54, size: 8, elements: !1181)
!1181 = !{!1182}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1180, file: !1178, line: 55, baseType: !378, size: 8)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1172, file: !1094, line: 139, baseType: !1184, size: 32, offset: 96)
!1184 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1178, line: 46, baseType: !1185)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 44, size: 8, elements: !1187)
!1187 = !{!1188}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1186, file: !1178, line: 45, baseType: !378, size: 8)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1172, file: !1094, line: 140, baseType: !1190, size: 8, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !176, line: 20, baseType: !1191)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !178, line: 41, baseType: !1192)
!1192 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1172, file: !1094, line: 143, baseType: !1194, size: 32, offset: 160)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 32)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1196, line: 146, baseType: !1197)
!1196 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 143, size: 64, elements: !1198)
!1198 = !{!1199, !1200}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1197, file: !1196, line: 144, baseType: !175, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1197, file: !1196, line: 145, baseType: !175, size: 32, offset: 32)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1172, file: !1094, line: 144, baseType: !680, size: 32, offset: 192)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1172, file: !1094, line: 145, baseType: !1203, size: 32, offset: 224)
!1203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1204, size: 32)
!1204 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1196, line: 152, baseType: !1205)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 149, size: 64, elements: !1206)
!1206 = !{!1207, !1208}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1205, file: !1196, line: 150, baseType: !175, size: 32)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1205, file: !1196, line: 151, baseType: !175, size: 32, offset: 32)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1172, file: !1094, line: 146, baseType: !680, size: 32, offset: 256)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1172, file: !1094, line: 147, baseType: !175, size: 32, offset: 288)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1172, file: !1094, line: 148, baseType: !680, size: 32, offset: 320)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1172, file: !1094, line: 151, baseType: !1213, size: 1024, offset: 352)
!1213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1214, size: 1024, elements: !1219)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1196, line: 170, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 167, size: 64, elements: !1216)
!1216 = !{!1217, !1218}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1215, file: !1196, line: 168, baseType: !175, size: 32)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1215, file: !1196, line: 169, baseType: !175, size: 32, offset: 32)
!1219 = !{!672, !384}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1172, file: !1094, line: 155, baseType: !1221, size: 32, offset: 1376)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1107, line: 120, baseType: !378)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1172, file: !1094, line: 156, baseType: !1224, size: 32, offset: 1408)
!1224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1094, line: 124, baseType: !1226)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 90, size: 200, elements: !1227)
!1227 = !{!1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1226, file: !1094, line: 91, baseType: !378, size: 8)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1226, file: !1094, line: 92, baseType: !378, size: 8, offset: 8)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1226, file: !1094, line: 94, baseType: !378, size: 8, offset: 16)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1226, file: !1094, line: 95, baseType: !378, size: 8, offset: 24)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1226, file: !1094, line: 96, baseType: !378, size: 8, offset: 32)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1226, file: !1094, line: 98, baseType: !378, size: 8, offset: 40)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1226, file: !1094, line: 99, baseType: !378, size: 8, offset: 48)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1226, file: !1094, line: 100, baseType: !378, size: 8, offset: 56)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1226, file: !1094, line: 101, baseType: !378, size: 8, offset: 64)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1226, file: !1094, line: 103, baseType: !378, size: 8, offset: 72)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1226, file: !1094, line: 104, baseType: !378, size: 8, offset: 80)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1226, file: !1094, line: 106, baseType: !378, size: 8, offset: 88)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1226, file: !1094, line: 107, baseType: !378, size: 8, offset: 96)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1226, file: !1094, line: 108, baseType: !378, size: 8, offset: 104)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1226, file: !1094, line: 109, baseType: !378, size: 8, offset: 112)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1226, file: !1094, line: 110, baseType: !378, size: 8, offset: 120)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1226, file: !1094, line: 111, baseType: !378, size: 8, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1226, file: !1094, line: 112, baseType: !378, size: 8, offset: 136)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1226, file: !1094, line: 114, baseType: !378, size: 8, offset: 144)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1226, file: !1094, line: 115, baseType: !378, size: 8, offset: 152)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1226, file: !1094, line: 118, baseType: !378, size: 8, offset: 160)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1226, file: !1094, line: 119, baseType: !378, size: 8, offset: 168)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1226, file: !1094, line: 120, baseType: !378, size: 8, offset: 176)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1226, file: !1094, line: 121, baseType: !378, size: 8, offset: 184)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1226, file: !1094, line: 122, baseType: !378, size: 8, offset: 192)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1172, file: !1094, line: 157, baseType: !175, size: 32, offset: 1440)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1172, file: !1094, line: 158, baseType: !970, size: 16, offset: 1472)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1172, file: !1094, line: 159, baseType: !970, size: 16, offset: 1488)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1172, file: !1094, line: 163, baseType: !970, size: 16, offset: 1504)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1172, file: !1094, line: 164, baseType: !970, size: 16, offset: 1520)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1172, file: !1094, line: 167, baseType: !378, size: 8, offset: 1536)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1172, file: !1094, line: 168, baseType: !1260, size: 24, offset: 1544)
!1260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 24, elements: !1261)
!1261 = !{!1262}
!1262 = !DISubrange(count: 3)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1172, file: !1094, line: 169, baseType: !378, size: 8, offset: 1568)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1172, file: !1094, line: 170, baseType: !378, size: 8, offset: 1576)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1172, file: !1094, line: 173, baseType: !970, size: 16, offset: 1584)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1172, file: !1094, line: 174, baseType: !175, size: 32, offset: 1600)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1172, file: !1094, line: 175, baseType: !175, size: 32, offset: 1632)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1172, file: !1094, line: 178, baseType: !211, size: 8, offset: 1664)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1172, file: !1094, line: 179, baseType: !211, size: 8, offset: 1672)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1172, file: !1094, line: 182, baseType: !1271, size: 32, offset: 1696)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 32)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{!79, !194}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1172, file: !1094, line: 186, baseType: !1271, size: 32, offset: 1728)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1172, file: !1094, line: 187, baseType: !1276, size: 32, offset: 1760)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 32)
!1277 = !DISubroutineType(types: !1278)
!1278 = !{!79, !194, !175, !194, !175}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1172, file: !1094, line: 188, baseType: !1276, size: 32, offset: 1792)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 32)
!1281 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !78, line: 2777, baseType: !1282)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2758, size: 576, elements: !1283)
!1283 = !{!1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1282, file: !78, line: 2759, baseType: !184, size: 32)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1282, file: !78, line: 2760, baseType: !184, size: 32, offset: 32)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1282, file: !78, line: 2761, baseType: !184, size: 32, offset: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1282, file: !78, line: 2762, baseType: !184, size: 32, offset: 96)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1282, file: !78, line: 2763, baseType: !184, size: 32, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1282, file: !78, line: 2764, baseType: !184, size: 32, offset: 160)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1282, file: !78, line: 2765, baseType: !184, size: 32, offset: 192)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1282, file: !78, line: 2766, baseType: !184, size: 32, offset: 224)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1282, file: !78, line: 2767, baseType: !184, size: 32, offset: 256)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1282, file: !78, line: 2768, baseType: !184, size: 32, offset: 288)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1282, file: !78, line: 2769, baseType: !184, size: 32, offset: 320)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1282, file: !78, line: 2770, baseType: !184, size: 32, offset: 352)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1282, file: !78, line: 2771, baseType: !184, size: 32, offset: 384)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1282, file: !78, line: 2772, baseType: !184, size: 32, offset: 416)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1282, file: !78, line: 2773, baseType: !184, size: 32, offset: 448)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1282, file: !78, line: 2774, baseType: !184, size: 32, offset: 480)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1282, file: !78, line: 2775, baseType: !184, size: 32, offset: 512)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1282, file: !78, line: 2776, baseType: !184, size: 32, offset: 544)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 32)
!1303 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !78, line: 2801, baseType: !1304)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2798, size: 64, elements: !1305)
!1305 = !{!1306, !1307}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1304, file: !78, line: 2799, baseType: !184, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1304, file: !78, line: 2800, baseType: !184, size: 32, offset: 32)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 32)
!1309 = !{!997, !1310, !1312, !1314, !1319}
!1310 = !DIGlobalVariableExpression(var: !1311, expr: !DIExpression())
!1311 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !999, file: !1000, line: 382, type: !175, isLocal: false, isDefinition: true)
!1312 = !DIGlobalVariableExpression(var: !1313, expr: !DIExpression())
!1313 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !999, file: !1000, line: 383, type: !175, isLocal: false, isDefinition: true)
!1314 = !DIGlobalVariableExpression(var: !1315, expr: !DIExpression())
!1315 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !999, file: !1000, line: 369, type: !1316, isLocal: true, isDefinition: true)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 1024, elements: !1317)
!1317 = !{!1318}
!1318 = !DISubrange(count: 128)
!1319 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression())
!1320 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !999, file: !1000, line: 1409, type: !79, isLocal: true, isDefinition: true)
!1321 = !DIGlobalVariableExpression(var: !1320, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1322 = !DIGlobalVariableExpression(var: !1323, expr: !DIExpression())
!1323 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1324, file: !1379, line: 35, type: !1380, isLocal: false, isDefinition: true)
!1324 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1325, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1326, retainedTypes: !1372, globals: !1373, splitDebugInlining: false, nameTableKind: None)
!1325 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1326 = !{!1327}
!1327 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1328, line: 77, baseType: !7, size: 32, elements: !1329)
!1328 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1329 = !{!1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371}
!1330 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1331 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1332 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1333 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1334 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1335 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1336 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1337 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1338 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1339 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1340 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1341 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1342 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1343 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1344 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1345 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1346 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1347 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1348 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1349 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1350 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1351 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1352 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1353 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1354 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1355 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1356 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1357 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1358 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1359 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1360 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1361 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1362 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1363 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1364 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1365 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1366 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1367 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1368 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1369 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1370 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1371 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1372 = !{!194}
!1373 = !{!1322, !1374, !1377}
!1374 = !DIGlobalVariableExpression(var: !1375, expr: !DIExpression())
!1375 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1324, file: !1325, line: 96, type: !1376, isLocal: true, isDefinition: true)
!1376 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1377 = !DIGlobalVariableExpression(var: !1378, expr: !DIExpression())
!1378 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1324, file: !1325, line: 94, type: !1376, isLocal: true, isDefinition: true)
!1379 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1381)
!1381 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1325, line: 54, baseType: !1382)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1325, line: 51, size: 576, elements: !1383)
!1383 = !{!1384, !1394}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1382, file: !1325, line: 52, baseType: !1385, size: 96)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1328, line: 152, baseType: !1386)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1328, line: 144, size: 96, elements: !1387)
!1387 = !{!1388, !1390, !1392}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1386, file: !1328, line: 145, baseType: !1389, size: 32)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1328, line: 61, baseType: !7)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1386, file: !1328, line: 146, baseType: !1391, size: 16, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1328, line: 62, baseType: !972)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1386, file: !1328, line: 150, baseType: !1393, size: 32, offset: 64)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1328, line: 127, baseType: !1327)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1382, file: !1325, line: 53, baseType: !1395, size: 480, offset: 96)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1396, line: 107, baseType: !1397)
!1396 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1397 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1396, line: 103, size: 480, elements: !1398)
!1398 = !{!1399, !1400, !1401}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1397, file: !1396, line: 104, baseType: !7, size: 32)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1397, file: !1396, line: 105, baseType: !7, size: 32, offset: 32)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1397, file: !1396, line: 106, baseType: !1402, size: 400, offset: 64)
!1402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 400, elements: !823)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1396, line: 100, baseType: !1404)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1396, line: 92, size: 80, elements: !1405)
!1405 = !{!1406, !1407, !1408}
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1404, file: !1396, line: 93, baseType: !378, size: 8)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1404, file: !1396, line: 94, baseType: !378, size: 8, offset: 8)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1404, file: !1396, line: 96, baseType: !1409, size: 64, offset: 16)
!1409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 64, elements: !671)
!1410 = !DIGlobalVariableExpression(var: !1411, expr: !DIExpression())
!1411 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1412, file: !1415, line: 96, type: !1416, isLocal: false, isDefinition: true)
!1412 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1413, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1414, splitDebugInlining: false, nameTableKind: None)
!1413 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1414 = !{!1410}
!1415 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1417, size: 152, elements: !1419)
!1417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1418)
!1418 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1419 = !{!1420}
!1420 = !DISubrange(count: 19)
!1421 = !DIGlobalVariableExpression(var: !1422, expr: !DIExpression())
!1422 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1423, file: !1424, line: 168, type: !1774, isLocal: false, isDefinition: true)
!1423 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1424, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1425, retainedTypes: !1436, globals: !1445, splitDebugInlining: false, nameTableKind: None)
!1424 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1425 = !{!1426, !1002, !1327}
!1426 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1427, line: 49, baseType: !7, size: 32, elements: !1428)
!1427 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1428 = !{!1429, !1430, !1431, !1432, !1433, !1434, !1435}
!1429 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1430 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1431 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1432 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1433 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1434 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1435 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1436 = !{!1437, !175, !1439}
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 32)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1003, line: 47, baseType: !380)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1196, line: 146, baseType: !1441)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 143, size: 64, elements: !1442)
!1442 = !{!1443, !1444}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1441, file: !1196, line: 144, baseType: !175, size: 32)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1441, file: !1196, line: 145, baseType: !175, size: 32, offset: 32)
!1445 = !{!1421, !1446, !1448, !1458, !1595, !1597, !1599, !1601, !1603, !1608, !1611, !1620, !1622, !1624, !1632, !1634, !1636, !1719, !1722, !1724, !1726, !1737, !1739, !1752}
!1446 = !DIGlobalVariableExpression(var: !1447, expr: !DIExpression())
!1447 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1423, file: !1424, line: 94, type: !858, isLocal: true, isDefinition: true)
!1448 = !DIGlobalVariableExpression(var: !1449, expr: !DIExpression())
!1449 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1423, file: !1424, line: 95, type: !1450, isLocal: false, isDefinition: true)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 32)
!1451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1452)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1396, line: 100, baseType: !1453)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1396, line: 92, size: 80, elements: !1454)
!1454 = !{!1455, !1456, !1457}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1453, file: !1396, line: 93, baseType: !378, size: 8)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1453, file: !1396, line: 94, baseType: !378, size: 8, offset: 8)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1453, file: !1396, line: 96, baseType: !1409, size: 64, offset: 16)
!1458 = !DIGlobalVariableExpression(var: !1459, expr: !DIExpression())
!1459 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1423, file: !1424, line: 127, type: !1460, isLocal: false, isDefinition: true)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1196, line: 317, baseType: !1461)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1196, line: 237, size: 2720, elements: !1462)
!1462 = !{!1463, !1464, !1516, !1517, !1520, !1521, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1562, !1563, !1564, !1569, !1570, !1571, !1572, !1573, !1577, !1581, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1461, file: !1196, line: 238, baseType: !175, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1461, file: !1196, line: 239, baseType: !1465, size: 32, offset: 32)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 32)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1196, line: 121, baseType: !1467)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 105, size: 480, elements: !1468)
!1468 = !{!1469, !1473, !1474, !1478, !1482, !1486, !1487, !1491, !1492, !1493, !1494, !1499, !1504, !1508, !1512}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1467, file: !1196, line: 106, baseType: !1470, size: 32)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 32)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!79, !194, !194}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1467, file: !1196, line: 107, baseType: !1271, size: 32, offset: 32)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1467, file: !1196, line: 108, baseType: !1475, size: 32, offset: 64)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 32)
!1476 = !DISubroutineType(types: !1477)
!1477 = !{!194, !194, !175, !175}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1467, file: !1196, line: 109, baseType: !1479, size: 32, offset: 96)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 32)
!1480 = !DISubroutineType(types: !1481)
!1481 = !{!79, !194, !175}
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1467, file: !1196, line: 110, baseType: !1483, size: 32, offset: 128)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!79, !194, !194, !194, !175}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1467, file: !1196, line: 111, baseType: !1479, size: 32, offset: 160)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1467, file: !1196, line: 112, baseType: !1488, size: 32, offset: 192)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!858, !194, !175}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1467, file: !1196, line: 113, baseType: !1479, size: 32, offset: 224)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1467, file: !1196, line: 114, baseType: !1479, size: 32, offset: 256)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1467, file: !1196, line: 115, baseType: !1479, size: 32, offset: 288)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1467, file: !1196, line: 116, baseType: !1495, size: 32, offset: 320)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 32)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{!79, !194, !79, !1498, !194, !1498}
!1498 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1003, line: 50, baseType: !7)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1467, file: !1196, line: 117, baseType: !1500, size: 32, offset: 352)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1501, size: 32)
!1501 = !DISubroutineType(types: !1502)
!1502 = !{!79, !194, !1503}
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1467, file: !1196, line: 118, baseType: !1505, size: 32, offset: 384)
!1505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 32)
!1506 = !DISubroutineType(types: !1507)
!1507 = !{!79, !194, !194, !175}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1467, file: !1196, line: 119, baseType: !1509, size: 32, offset: 416)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 32)
!1510 = !DISubroutineType(types: !1511)
!1511 = !{!211, !194, !175}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1467, file: !1196, line: 120, baseType: !1513, size: 32, offset: 448)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 32)
!1514 = !DISubroutineType(types: !1515)
!1515 = !{!79, !194, !175, !194}
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1461, file: !1196, line: 240, baseType: !194, size: 32, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1461, file: !1196, line: 241, baseType: !1518, size: 32, offset: 96)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1003, line: 46, baseType: !972)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1461, file: !1196, line: 242, baseType: !1518, size: 32, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1461, file: !1196, line: 243, baseType: !1522, size: 928, offset: 160)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1196, line: 99, baseType: !1523)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 90, size: 928, elements: !1524)
!1524 = !{!1525, !1526, !1528, !1529, !1530, !1531, !1532, !1533}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1523, file: !1196, line: 91, baseType: !175, size: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1523, file: !1196, line: 92, baseType: !1527, size: 256, offset: 32)
!1527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 256, elements: !671)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1523, file: !1196, line: 93, baseType: !1527, size: 256, offset: 288)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1523, file: !1196, line: 94, baseType: !1527, size: 256, offset: 544)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1523, file: !1196, line: 95, baseType: !175, size: 32, offset: 800)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1523, file: !1196, line: 96, baseType: !1519, size: 16, offset: 832)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1523, file: !1196, line: 97, baseType: !175, size: 32, offset: 864)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1523, file: !1196, line: 98, baseType: !175, size: 32, offset: 896)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1461, file: !1196, line: 244, baseType: !1527, size: 256, offset: 1088)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1461, file: !1196, line: 245, baseType: !1527, size: 256, offset: 1344)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1461, file: !1196, line: 246, baseType: !175, size: 32, offset: 1600)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1461, file: !1196, line: 247, baseType: !175, size: 32, offset: 1632)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1461, file: !1196, line: 248, baseType: !175, size: 32, offset: 1664)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1461, file: !1196, line: 249, baseType: !175, size: 32, offset: 1696)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1461, file: !1196, line: 250, baseType: !175, size: 32, offset: 1728)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1461, file: !1196, line: 252, baseType: !175, size: 32, offset: 1760)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1461, file: !1196, line: 255, baseType: !175, size: 32, offset: 1792)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1461, file: !1196, line: 256, baseType: !175, size: 32, offset: 1824)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1461, file: !1196, line: 257, baseType: !175, size: 32, offset: 1856)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1461, file: !1196, line: 261, baseType: !175, size: 32, offset: 1888)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1461, file: !1196, line: 262, baseType: !175, size: 32, offset: 1920)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1461, file: !1196, line: 263, baseType: !175, size: 32, offset: 1952)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1461, file: !1196, line: 264, baseType: !175, size: 32, offset: 1984)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1461, file: !1196, line: 265, baseType: !175, size: 32, offset: 2016)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1461, file: !1196, line: 266, baseType: !175, size: 32, offset: 2048)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1461, file: !1196, line: 267, baseType: !175, size: 32, offset: 2080)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1461, file: !1196, line: 268, baseType: !175, size: 32, offset: 2112)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1461, file: !1196, line: 270, baseType: !175, size: 32, offset: 2144)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1461, file: !1196, line: 271, baseType: !175, size: 32, offset: 2176)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1461, file: !1196, line: 272, baseType: !1556, size: 32, offset: 2208)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1557, size: 32)
!1557 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1196, line: 229, baseType: !1558)
!1558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 226, size: 64, elements: !1559)
!1559 = !{!1560, !1561}
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1558, file: !1196, line: 227, baseType: !175, size: 32)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1558, file: !1196, line: 228, baseType: !175, size: 32, offset: 32)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1461, file: !1196, line: 273, baseType: !1437, size: 32, offset: 2240)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1461, file: !1196, line: 274, baseType: !1437, size: 32, offset: 2272)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1461, file: !1196, line: 276, baseType: !1565, size: 32, offset: 2304)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 32)
!1566 = !DISubroutineType(types: !1567)
!1567 = !{null, !1568}
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 32)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1461, file: !1196, line: 278, baseType: !175, size: 32, offset: 2336)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1461, file: !1196, line: 280, baseType: !1565, size: 32, offset: 2368)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1461, file: !1196, line: 281, baseType: !1565, size: 32, offset: 2400)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1461, file: !1196, line: 283, baseType: !175, size: 32, offset: 2432)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1461, file: !1196, line: 284, baseType: !1574, size: 32, offset: 2464)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 32)
!1575 = !DISubroutineType(types: !1576)
!1576 = !{!175, !1568}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1461, file: !1196, line: 285, baseType: !1578, size: 32, offset: 2496)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 32)
!1579 = !DISubroutineType(types: !1580)
!1580 = !{!175, !1568, !175, !175}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1461, file: !1196, line: 293, baseType: !1582, size: 32, offset: 2528)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 32)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1196, line: 162, baseType: !1584)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 159, size: 64, elements: !1585)
!1585 = !{!1586, !1587}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1584, file: !1196, line: 160, baseType: !175, size: 32)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1584, file: !1196, line: 161, baseType: !175, size: 32, offset: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1461, file: !1196, line: 295, baseType: !175, size: 32, offset: 2560)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1461, file: !1196, line: 296, baseType: !175, size: 32, offset: 2592)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1461, file: !1196, line: 297, baseType: !175, size: 32, offset: 2624)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1461, file: !1196, line: 298, baseType: !1519, size: 16, offset: 2656)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1461, file: !1196, line: 302, baseType: !1519, size: 16, offset: 2672)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1461, file: !1196, line: 310, baseType: !211, size: 8, offset: 2688)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1461, file: !1196, line: 313, baseType: !211, size: 8, offset: 2696)
!1595 = !DIGlobalVariableExpression(var: !1596, expr: !DIExpression())
!1596 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1423, file: !1424, line: 129, type: !175, isLocal: false, isDefinition: true)
!1597 = !DIGlobalVariableExpression(var: !1598, expr: !DIExpression())
!1598 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1423, file: !1424, line: 130, type: !175, isLocal: false, isDefinition: true)
!1599 = !DIGlobalVariableExpression(var: !1600, expr: !DIExpression())
!1600 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1423, file: !1424, line: 131, type: !175, isLocal: false, isDefinition: true)
!1601 = !DIGlobalVariableExpression(var: !1602, expr: !DIExpression())
!1602 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1423, file: !1424, line: 132, type: !970, isLocal: true, isDefinition: true)
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1423, file: !1424, line: 136, type: !1605, isLocal: false, isDefinition: true)
!1605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 4096, elements: !1606)
!1606 = !{!1607}
!1607 = !DISubrange(count: 512)
!1608 = !DIGlobalVariableExpression(var: !1609, expr: !DIExpression())
!1609 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1423, file: !1424, line: 146, type: !1610, isLocal: true, isDefinition: true)
!1610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1440, size: 512, elements: !671)
!1611 = !DIGlobalVariableExpression(var: !1612, expr: !DIExpression())
!1612 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1423, file: !1424, line: 152, type: !1613, isLocal: true, isDefinition: true)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 32)
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1396, line: 116, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1396, line: 113, size: 64, elements: !1617)
!1617 = !{!1618, !1619}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1616, file: !1396, line: 114, baseType: !175, size: 32)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1616, file: !1396, line: 115, baseType: !175, size: 32, offset: 32)
!1620 = !DIGlobalVariableExpression(var: !1621, expr: !DIExpression())
!1621 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1423, file: !1424, line: 156, type: !175, isLocal: false, isDefinition: true)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1423, file: !1424, line: 157, type: !175, isLocal: false, isDefinition: true)
!1624 = !DIGlobalVariableExpression(var: !1625, expr: !DIExpression())
!1625 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1423, file: !1424, line: 160, type: !1626, isLocal: true, isDefinition: true)
!1626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1627, size: 512, elements: !671)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1196, line: 152, baseType: !1628)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 149, size: 64, elements: !1629)
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1628, file: !1196, line: 150, baseType: !175, size: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1628, file: !1196, line: 151, baseType: !175, size: 32, offset: 32)
!1632 = !DIGlobalVariableExpression(var: !1633, expr: !DIExpression())
!1633 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1423, file: !1424, line: 173, type: !175, isLocal: false, isDefinition: true)
!1634 = !DIGlobalVariableExpression(var: !1635, expr: !DIExpression())
!1635 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1423, file: !1424, line: 176, type: !1466, isLocal: false, isDefinition: true)
!1636 = !DIGlobalVariableExpression(var: !1637, expr: !DIExpression())
!1637 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1423, file: !1424, line: 177, type: !1638, isLocal: false, isDefinition: true)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1094, line: 193, baseType: !1639)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 134, size: 1824, elements: !1640)
!1640 = !{!1641, !1642, !1643, !1649, !1655, !1656, !1657, !1658, !1660, !1661, !1662, !1663, !1670, !1671, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1639, file: !1094, line: 136, baseType: !175, size: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1639, file: !1094, line: 137, baseType: !680, size: 32, offset: 32)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1639, file: !1094, line: 138, baseType: !1644, size: 32, offset: 64)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1178, line: 56, baseType: !1645)
!1645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1646, size: 32)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 54, size: 8, elements: !1647)
!1647 = !{!1648}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1646, file: !1178, line: 55, baseType: !378, size: 8)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1639, file: !1094, line: 139, baseType: !1650, size: 32, offset: 96)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1178, line: 46, baseType: !1651)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 44, size: 8, elements: !1653)
!1653 = !{!1654}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1652, file: !1178, line: 45, baseType: !378, size: 8)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1639, file: !1094, line: 140, baseType: !1190, size: 8, offset: 128)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1639, file: !1094, line: 143, baseType: !1439, size: 32, offset: 160)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1639, file: !1094, line: 144, baseType: !680, size: 32, offset: 192)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1639, file: !1094, line: 145, baseType: !1659, size: 32, offset: 224)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1639, file: !1094, line: 146, baseType: !680, size: 32, offset: 256)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1639, file: !1094, line: 147, baseType: !175, size: 32, offset: 288)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1639, file: !1094, line: 148, baseType: !680, size: 32, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1639, file: !1094, line: 151, baseType: !1664, size: 1024, offset: 352)
!1664 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1665, size: 1024, elements: !1219)
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1196, line: 170, baseType: !1666)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 167, size: 64, elements: !1667)
!1667 = !{!1668, !1669}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1666, file: !1196, line: 168, baseType: !175, size: 32)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1666, file: !1196, line: 169, baseType: !175, size: 32, offset: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1639, file: !1094, line: 155, baseType: !1221, size: 32, offset: 1376)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1639, file: !1094, line: 156, baseType: !1672, size: 32, offset: 1408)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1094, line: 124, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 90, size: 200, elements: !1675)
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1674, file: !1094, line: 91, baseType: !378, size: 8)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1674, file: !1094, line: 92, baseType: !378, size: 8, offset: 8)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1674, file: !1094, line: 94, baseType: !378, size: 8, offset: 16)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1674, file: !1094, line: 95, baseType: !378, size: 8, offset: 24)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1674, file: !1094, line: 96, baseType: !378, size: 8, offset: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1674, file: !1094, line: 98, baseType: !378, size: 8, offset: 40)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1674, file: !1094, line: 99, baseType: !378, size: 8, offset: 48)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1674, file: !1094, line: 100, baseType: !378, size: 8, offset: 56)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1674, file: !1094, line: 101, baseType: !378, size: 8, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1674, file: !1094, line: 103, baseType: !378, size: 8, offset: 72)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1674, file: !1094, line: 104, baseType: !378, size: 8, offset: 80)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1674, file: !1094, line: 106, baseType: !378, size: 8, offset: 88)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1674, file: !1094, line: 107, baseType: !378, size: 8, offset: 96)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1674, file: !1094, line: 108, baseType: !378, size: 8, offset: 104)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1674, file: !1094, line: 109, baseType: !378, size: 8, offset: 112)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1674, file: !1094, line: 110, baseType: !378, size: 8, offset: 120)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1674, file: !1094, line: 111, baseType: !378, size: 8, offset: 128)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1674, file: !1094, line: 112, baseType: !378, size: 8, offset: 136)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1674, file: !1094, line: 114, baseType: !378, size: 8, offset: 144)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1674, file: !1094, line: 115, baseType: !378, size: 8, offset: 152)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1674, file: !1094, line: 118, baseType: !378, size: 8, offset: 160)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1674, file: !1094, line: 119, baseType: !378, size: 8, offset: 168)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1674, file: !1094, line: 120, baseType: !378, size: 8, offset: 176)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1674, file: !1094, line: 121, baseType: !378, size: 8, offset: 184)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1674, file: !1094, line: 122, baseType: !378, size: 8, offset: 192)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1639, file: !1094, line: 157, baseType: !175, size: 32, offset: 1440)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1639, file: !1094, line: 158, baseType: !970, size: 16, offset: 1472)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1639, file: !1094, line: 159, baseType: !970, size: 16, offset: 1488)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1639, file: !1094, line: 163, baseType: !970, size: 16, offset: 1504)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1639, file: !1094, line: 164, baseType: !970, size: 16, offset: 1520)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1639, file: !1094, line: 167, baseType: !378, size: 8, offset: 1536)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1639, file: !1094, line: 168, baseType: !1260, size: 24, offset: 1544)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1639, file: !1094, line: 169, baseType: !378, size: 8, offset: 1568)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1639, file: !1094, line: 170, baseType: !378, size: 8, offset: 1576)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1639, file: !1094, line: 173, baseType: !970, size: 16, offset: 1584)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1639, file: !1094, line: 174, baseType: !175, size: 32, offset: 1600)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1639, file: !1094, line: 175, baseType: !175, size: 32, offset: 1632)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1639, file: !1094, line: 178, baseType: !211, size: 8, offset: 1664)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1639, file: !1094, line: 179, baseType: !211, size: 8, offset: 1672)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1639, file: !1094, line: 182, baseType: !1271, size: 32, offset: 1696)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1639, file: !1094, line: 186, baseType: !1271, size: 32, offset: 1728)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1639, file: !1094, line: 187, baseType: !1276, size: 32, offset: 1760)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1639, file: !1094, line: 188, baseType: !1276, size: 32, offset: 1792)
!1719 = !DIGlobalVariableExpression(var: !1720, expr: !DIExpression())
!1720 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1423, file: !1424, line: 178, type: !1721, isLocal: false, isDefinition: true)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1222, size: 64, elements: !671)
!1722 = !DIGlobalVariableExpression(var: !1723, expr: !DIExpression())
!1723 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1423, file: !1424, line: 179, type: !1673, isLocal: false, isDefinition: true)
!1724 = !DIGlobalVariableExpression(var: !1725, expr: !DIExpression())
!1725 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1423, file: !1424, line: 204, type: !1610, isLocal: true, isDefinition: true)
!1726 = !DIGlobalVariableExpression(var: !1727, expr: !DIExpression())
!1727 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1423, file: !1424, line: 205, type: !1728, isLocal: false, isDefinition: true)
!1728 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1729, line: 93, baseType: !1730)
!1729 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1729, line: 83, size: 1056, elements: !1731)
!1731 = !{!1732, !1733, !1734, !1735, !1736}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1730, file: !1729, line: 84, baseType: !175, size: 32)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1730, file: !1729, line: 85, baseType: !1465, size: 32, offset: 32)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1730, file: !1729, line: 86, baseType: !194, size: 32, offset: 64)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1730, file: !1729, line: 87, baseType: !1522, size: 928, offset: 96)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1730, file: !1729, line: 92, baseType: !211, size: 8, offset: 1024)
!1737 = !DIGlobalVariableExpression(var: !1738, expr: !DIExpression())
!1738 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1423, file: !1424, line: 208, type: !1638, isLocal: false, isDefinition: true)
!1739 = !DIGlobalVariableExpression(var: !1740, expr: !DIExpression())
!1740 = distinct !DIGlobalVariable(name: "nor_list", scope: !1423, file: !1424, line: 114, type: !1741, isLocal: true, isDefinition: true)
!1741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1742, size: 32)
!1742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1743)
!1743 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1396, line: 125, baseType: !1744)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1396, line: 119, size: 1088, elements: !1745)
!1745 = !{!1746, !1747, !1748, !1749, !1751}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1744, file: !1396, line: 120, baseType: !970, size: 16)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1744, file: !1396, line: 121, baseType: !970, size: 16, offset: 16)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1744, file: !1396, line: 122, baseType: !175, size: 32, offset: 32)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1744, file: !1396, line: 123, baseType: !1750, size: 512, offset: 64)
!1750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 512, elements: !671)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1744, file: !1396, line: 124, baseType: !1626, size: 512, offset: 576)
!1752 = !DIGlobalVariableExpression(var: !1753, expr: !DIExpression())
!1753 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1423, file: !1754, line: 42, type: !1755, isLocal: true, isDefinition: true)
!1754 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1755 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1756)
!1756 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1424, line: 66, baseType: !1757)
!1757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1424, line: 63, size: 5600, elements: !1758)
!1758 = !{!1759, !1766}
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1757, file: !1424, line: 64, baseType: !1760, size: 96)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1328, line: 152, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1328, line: 144, size: 96, elements: !1762)
!1762 = !{!1763, !1764, !1765}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1761, file: !1328, line: 145, baseType: !1389, size: 32)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1761, file: !1328, line: 146, baseType: !1391, size: 16, offset: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1761, file: !1328, line: 150, baseType: !1393, size: 32, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1757, file: !1424, line: 65, baseType: !1767, size: 5504, offset: 96)
!1767 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1396, line: 132, baseType: !1768)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1396, line: 128, size: 5504, elements: !1769)
!1769 = !{!1770, !1771, !1772}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1768, file: !1396, line: 129, baseType: !7, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1768, file: !1396, line: 130, baseType: !7, size: 32, offset: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1768, file: !1396, line: 131, baseType: !1773, size: 5440, offset: 64)
!1773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1743, size: 5440, elements: !823)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1178, line: 79, baseType: !1775)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 77, size: 8, elements: !1777)
!1777 = !{!1778}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1776, file: !1178, line: 78, baseType: !378, size: 8)
!1779 = !DIGlobalVariableExpression(var: !1780, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1780 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !1781, file: !1782, line: 82, type: !79, isLocal: true, isDefinition: true)
!1781 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1782, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1783, retainedTypes: !1789, globals: !1834, splitDebugInlining: false, nameTableKind: None)
!1782 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1783 = !{!1118, !1002, !1784}
!1784 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1119, line: 123, baseType: !7, size: 32, elements: !1785)
!1785 = !{!1786, !1787, !1788}
!1786 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!1787 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!1788 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!1789 = !{!175, !1790, !194, !680}
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1196, line: 190, baseType: !1792)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 173, size: 1376, elements: !1793)
!1793 = !{!1794, !1795, !1796, !1802, !1808, !1809, !1816, !1817, !1824, !1825, !1826, !1827}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1792, file: !1196, line: 174, baseType: !175, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1792, file: !1196, line: 175, baseType: !1437, size: 32, offset: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1792, file: !1196, line: 176, baseType: !1797, size: 32, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1178, line: 56, baseType: !1798)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 32)
!1799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 54, size: 8, elements: !1800)
!1800 = !{!1801}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1799, file: !1178, line: 55, baseType: !378, size: 8)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1792, file: !1196, line: 177, baseType: !1803, size: 32, offset: 96)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1178, line: 46, baseType: !1804)
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 32)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 44, size: 8, elements: !1806)
!1806 = !{!1807}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1805, file: !1178, line: 45, baseType: !378, size: 8)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1792, file: !1196, line: 178, baseType: !1190, size: 8, offset: 128)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1792, file: !1196, line: 180, baseType: !1810, size: 32, offset: 160)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1196, line: 146, baseType: !1812)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 143, size: 64, elements: !1813)
!1813 = !{!1814, !1815}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1812, file: !1196, line: 144, baseType: !175, size: 32)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1812, file: !1196, line: 145, baseType: !175, size: 32, offset: 32)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1792, file: !1196, line: 181, baseType: !1437, size: 32, offset: 192)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1792, file: !1196, line: 182, baseType: !1818, size: 32, offset: 224)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 32)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1196, line: 152, baseType: !1820)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 149, size: 64, elements: !1821)
!1821 = !{!1822, !1823}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1820, file: !1196, line: 150, baseType: !175, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1820, file: !1196, line: 151, baseType: !175, size: 32, offset: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1792, file: !1196, line: 183, baseType: !1437, size: 32, offset: 256)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1792, file: !1196, line: 184, baseType: !175, size: 32, offset: 288)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1792, file: !1196, line: 185, baseType: !1437, size: 32, offset: 320)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1792, file: !1196, line: 188, baseType: !1828, size: 1024, offset: 352)
!1828 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1829, size: 1024, elements: !1219)
!1829 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1196, line: 170, baseType: !1830)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 167, size: 64, elements: !1831)
!1831 = !{!1832, !1833}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1830, file: !1196, line: 168, baseType: !175, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1830, file: !1196, line: 169, baseType: !175, size: 32, offset: 32)
!1834 = !{!1835, !1836}
!1835 = !DIGlobalVariableExpression(var: !1780, expr: !DIExpression())
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1781, file: !1782, line: 432, type: !1838, isLocal: true, isDefinition: true)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1119, line: 119, baseType: !1118)
!1839 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!1840 = !DIGlobalVariableExpression(var: !1841, expr: !DIExpression())
!1841 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !1842, file: !1843, line: 60, type: !175, isLocal: false, isDefinition: true)
!1842 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1843, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1844, retainedTypes: !1852, globals: !1853, splitDebugInlining: false, nameTableKind: None)
!1843 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1844 = !{!1845}
!1845 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !166, line: 387, baseType: !79, size: 32, elements: !1846)
!1846 = !{!1847, !1848, !1849, !1850, !1851}
!1847 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!1848 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!1849 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!1850 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!1851 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!1852 = !{!194, !175}
!1853 = !{!1840, !1854, !1856, !1858, !1860, !1862, !1916, !1918}
!1854 = !DIGlobalVariableExpression(var: !1855, expr: !DIExpression())
!1855 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !1842, file: !1843, line: 61, type: !175, isLocal: false, isDefinition: true)
!1856 = !DIGlobalVariableExpression(var: !1857, expr: !DIExpression())
!1857 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !1842, file: !1843, line: 107, type: !175, isLocal: false, isDefinition: true)
!1858 = !DIGlobalVariableExpression(var: !1859, expr: !DIExpression())
!1859 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !1842, file: !1843, line: 132, type: !211, isLocal: false, isDefinition: true)
!1860 = !DIGlobalVariableExpression(var: !1861, expr: !DIExpression())
!1861 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !1842, file: !1843, line: 133, type: !211, isLocal: false, isDefinition: true)
!1862 = !DIGlobalVariableExpression(var: !1863, expr: !DIExpression())
!1863 = distinct !DIGlobalVariable(name: "replaced", scope: !1864, file: !1843, line: 139, type: !175, isLocal: true, isDefinition: true)
!1864 = distinct !DISubprogram(name: "LookupAddress", scope: !1843, file: !1843, line: 135, type: !1865, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1842, retainedNodes: !1867)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!175, !194, !175}
!1867 = !{!1868, !1869, !1870, !1915}
!1868 = !DILocalVariable(name: "DriveData", arg: 1, scope: !1864, file: !1843, line: 135, type: !194)
!1869 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !1864, file: !1843, line: 135, type: !175)
!1870 = !DILocalVariable(name: "D", scope: !1864, file: !1843, line: 137, type: !1871)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1196, line: 190, baseType: !1873)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 173, size: 1376, elements: !1874)
!1874 = !{!1875, !1876, !1877, !1883, !1889, !1890, !1897, !1898, !1905, !1906, !1907, !1908}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1873, file: !1196, line: 174, baseType: !175, size: 32)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1873, file: !1196, line: 175, baseType: !1437, size: 32, offset: 32)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1873, file: !1196, line: 176, baseType: !1878, size: 32, offset: 64)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1178, line: 56, baseType: !1879)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 32)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 54, size: 8, elements: !1881)
!1881 = !{!1882}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1880, file: !1178, line: 55, baseType: !378, size: 8)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1873, file: !1196, line: 177, baseType: !1884, size: 32, offset: 96)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1178, line: 46, baseType: !1885)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 32)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 44, size: 8, elements: !1887)
!1887 = !{!1888}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1886, file: !1178, line: 45, baseType: !378, size: 8)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1873, file: !1196, line: 178, baseType: !1190, size: 8, offset: 128)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1873, file: !1196, line: 180, baseType: !1891, size: 32, offset: 160)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 32)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1196, line: 146, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 143, size: 64, elements: !1894)
!1894 = !{!1895, !1896}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1893, file: !1196, line: 144, baseType: !175, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1893, file: !1196, line: 145, baseType: !175, size: 32, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1873, file: !1196, line: 181, baseType: !1437, size: 32, offset: 192)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1873, file: !1196, line: 182, baseType: !1899, size: 32, offset: 224)
!1899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1900, size: 32)
!1900 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1196, line: 152, baseType: !1901)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 149, size: 64, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1901, file: !1196, line: 150, baseType: !175, size: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1901, file: !1196, line: 151, baseType: !175, size: 32, offset: 32)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1873, file: !1196, line: 183, baseType: !1437, size: 32, offset: 256)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1873, file: !1196, line: 184, baseType: !175, size: 32, offset: 288)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1873, file: !1196, line: 185, baseType: !1437, size: 32, offset: 320)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1873, file: !1196, line: 188, baseType: !1909, size: 1024, offset: 352)
!1909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1910, size: 1024, elements: !1219)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1196, line: 170, baseType: !1911)
!1911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 167, size: 64, elements: !1912)
!1912 = !{!1913, !1914}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1911, file: !1196, line: 168, baseType: !175, size: 32)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1911, file: !1196, line: 169, baseType: !175, size: 32, offset: 32)
!1915 = !DILocalVariable(name: "addr", scope: !1864, file: !1843, line: 138, type: !175)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !1864, file: !1843, line: 140, type: !175, isLocal: true, isDefinition: true)
!1918 = !DIGlobalVariableExpression(var: !1919, expr: !DIExpression())
!1919 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !1864, file: !1843, line: 141, type: !175, isLocal: true, isDefinition: true)
!1920 = !DIGlobalVariableExpression(var: !1921, expr: !DIExpression())
!1921 = distinct !DIGlobalVariable(name: "emi_settings", scope: !1922, file: !1923, line: 44, type: !2069, isLocal: false, isDefinition: true)
!1922 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1923, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1924, retainedTypes: !1930, globals: !1931, splitDebugInlining: false, nameTableKind: None)
!1923 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1924 = !{!1925}
!1925 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !1926, line: 40, baseType: !7, size: 32, elements: !1927)
!1926 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!1927 = !{!1928, !1929}
!1928 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!1929 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!1930 = !{!975}
!1931 = !{!1920, !1932, !1934, !1936, !1938, !2039, !2041, !2043, !2045, !2047, !2049, !2051, !2053, !2055, !2057, !2059, !2061, !2063, !2065, !2067}
!1932 = !DIGlobalVariableExpression(var: !1933, expr: !DIExpression())
!1933 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !1922, file: !1923, line: 65, type: !175, isLocal: false, isDefinition: true)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !1922, file: !1923, line: 66, type: !175, isLocal: false, isDefinition: true)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !1922, file: !1923, line: 67, type: !175, isLocal: false, isDefinition: true)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "emi_register", scope: !1922, file: !1923, line: 83, type: !1940, isLocal: false, isDefinition: true)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 32)
!1941 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !78, line: 2524, baseType: !1942)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2447, size: 6752, elements: !1943)
!1943 = !{!1944, !1948, !1949, !1950, !1951, !1955, !1956, !1958, !1959, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !1942, file: !78, line: 2448, baseType: !1945, size: 768)
!1945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 768, elements: !1946)
!1946 = !{!1947}
!1947 = !DISubrange(count: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !1942, file: !78, line: 2449, baseType: !184, size: 32, offset: 768)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1942, file: !78, line: 2450, baseType: !806, size: 96, offset: 800)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !1942, file: !78, line: 2451, baseType: !184, size: 32, offset: 896)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1942, file: !78, line: 2452, baseType: !1952, size: 160, offset: 928)
!1952 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 160, elements: !1953)
!1953 = !{!1954}
!1954 = !DISubrange(count: 20)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !1942, file: !78, line: 2453, baseType: !184, size: 32, offset: 1088)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1942, file: !78, line: 2454, baseType: !1957, size: 32, offset: 1120)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 32, elements: !381)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !1942, file: !78, line: 2455, baseType: !184, size: 32, offset: 1152)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1942, file: !78, line: 2456, baseType: !1960, size: 480, offset: 1184)
!1960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 480, elements: !1961)
!1961 = !{!1962}
!1962 = !DISubrange(count: 60)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !1942, file: !78, line: 2457, baseType: !184, size: 32, offset: 1664)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !1942, file: !78, line: 2458, baseType: !1957, size: 32, offset: 1696)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !1942, file: !78, line: 2459, baseType: !184, size: 32, offset: 1728)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !1942, file: !78, line: 2460, baseType: !1957, size: 32, offset: 1760)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !1942, file: !78, line: 2461, baseType: !184, size: 32, offset: 1792)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !1942, file: !78, line: 2462, baseType: !1952, size: 160, offset: 1824)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !1942, file: !78, line: 2463, baseType: !184, size: 32, offset: 1984)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !1942, file: !78, line: 2464, baseType: !1957, size: 32, offset: 2016)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !1942, file: !78, line: 2465, baseType: !184, size: 32, offset: 2048)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !1942, file: !78, line: 2466, baseType: !1957, size: 32, offset: 2080)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !1942, file: !78, line: 2467, baseType: !184, size: 32, offset: 2112)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !1942, file: !78, line: 2468, baseType: !1957, size: 32, offset: 2144)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !1942, file: !78, line: 2469, baseType: !184, size: 32, offset: 2176)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !1942, file: !78, line: 2470, baseType: !1977, size: 224, offset: 2208)
!1977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 224, elements: !1978)
!1978 = !{!1979}
!1979 = !DISubrange(count: 28)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !1942, file: !78, line: 2471, baseType: !184, size: 32, offset: 2432)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !1942, file: !78, line: 2472, baseType: !1957, size: 32, offset: 2464)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !1942, file: !78, line: 2473, baseType: !184, size: 32, offset: 2496)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !1942, file: !78, line: 2474, baseType: !806, size: 96, offset: 2528)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !1942, file: !78, line: 2475, baseType: !184, size: 32, offset: 2624)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !1942, file: !78, line: 2476, baseType: !1957, size: 32, offset: 2656)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !1942, file: !78, line: 2477, baseType: !184, size: 32, offset: 2688)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !1942, file: !78, line: 2478, baseType: !1957, size: 32, offset: 2720)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !1942, file: !78, line: 2479, baseType: !184, size: 32, offset: 2752)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !1942, file: !78, line: 2480, baseType: !1957, size: 32, offset: 2784)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !1942, file: !78, line: 2481, baseType: !184, size: 32, offset: 2816)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !1942, file: !78, line: 2482, baseType: !806, size: 96, offset: 2848)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !1942, file: !78, line: 2483, baseType: !184, size: 32, offset: 2944)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !1942, file: !78, line: 2484, baseType: !1957, size: 32, offset: 2976)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !1942, file: !78, line: 2485, baseType: !184, size: 32, offset: 3008)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !1942, file: !78, line: 2486, baseType: !1957, size: 32, offset: 3040)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !1942, file: !78, line: 2487, baseType: !184, size: 32, offset: 3072)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !1942, file: !78, line: 2488, baseType: !1952, size: 160, offset: 3104)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !1942, file: !78, line: 2489, baseType: !184, size: 32, offset: 3264)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !1942, file: !78, line: 2490, baseType: !1957, size: 32, offset: 3296)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !1942, file: !78, line: 2491, baseType: !184, size: 32, offset: 3328)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !1942, file: !78, line: 2492, baseType: !2002, size: 736, offset: 3360)
!2002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 736, elements: !2003)
!2003 = !{!2004}
!2004 = !DISubrange(count: 92)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !1942, file: !78, line: 2493, baseType: !184, size: 32, offset: 4096)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !1942, file: !78, line: 2494, baseType: !1957, size: 32, offset: 4128)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !1942, file: !78, line: 2495, baseType: !184, size: 32, offset: 4160)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !1942, file: !78, line: 2496, baseType: !1957, size: 32, offset: 4192)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !1942, file: !78, line: 2497, baseType: !184, size: 32, offset: 4224)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !1942, file: !78, line: 2498, baseType: !1957, size: 32, offset: 4256)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !1942, file: !78, line: 2499, baseType: !184, size: 32, offset: 4288)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !1942, file: !78, line: 2500, baseType: !1957, size: 32, offset: 4320)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !1942, file: !78, line: 2501, baseType: !184, size: 32, offset: 4352)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !1942, file: !78, line: 2502, baseType: !1957, size: 32, offset: 4384)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !1942, file: !78, line: 2503, baseType: !184, size: 32, offset: 4416)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !1942, file: !78, line: 2504, baseType: !1957, size: 32, offset: 4448)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !1942, file: !78, line: 2505, baseType: !184, size: 32, offset: 4480)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !1942, file: !78, line: 2506, baseType: !1957, size: 32, offset: 4512)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !1942, file: !78, line: 2507, baseType: !184, size: 32, offset: 4544)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !1942, file: !78, line: 2508, baseType: !1957, size: 32, offset: 4576)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !1942, file: !78, line: 2509, baseType: !184, size: 32, offset: 4608)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !1942, file: !78, line: 2510, baseType: !1960, size: 480, offset: 4640)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !1942, file: !78, line: 2511, baseType: !184, size: 32, offset: 5120)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !1942, file: !78, line: 2512, baseType: !2025, size: 992, offset: 5152)
!2025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 992, elements: !2026)
!2026 = !{!2027}
!2027 = !DISubrange(count: 124)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !1942, file: !78, line: 2513, baseType: !184, size: 32, offset: 6144)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !1942, file: !78, line: 2514, baseType: !1957, size: 32, offset: 6176)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !1942, file: !78, line: 2515, baseType: !184, size: 32, offset: 6208)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !1942, file: !78, line: 2516, baseType: !1957, size: 32, offset: 6240)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !1942, file: !78, line: 2517, baseType: !184, size: 32, offset: 6272)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !1942, file: !78, line: 2518, baseType: !1957, size: 32, offset: 6304)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !1942, file: !78, line: 2519, baseType: !184, size: 32, offset: 6336)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !1942, file: !78, line: 2520, baseType: !1952, size: 160, offset: 6368)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !1942, file: !78, line: 2521, baseType: !184, size: 32, offset: 6528)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !1942, file: !78, line: 2522, baseType: !1952, size: 160, offset: 6560)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !1942, file: !78, line: 2523, baseType: !184, size: 32, offset: 6720)
!2039 = !DIGlobalVariableExpression(var: !2040, expr: !DIExpression())
!2040 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !1922, file: !1923, line: 485, type: !184, isLocal: false, isDefinition: true)
!2041 = !DIGlobalVariableExpression(var: !2042, expr: !DIExpression())
!2042 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !1922, file: !1923, line: 68, type: !175, isLocal: false, isDefinition: true)
!2043 = !DIGlobalVariableExpression(var: !2044, expr: !DIExpression())
!2044 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !1922, file: !1923, line: 69, type: !175, isLocal: false, isDefinition: true)
!2045 = !DIGlobalVariableExpression(var: !2046, expr: !DIExpression())
!2046 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !1922, file: !1923, line: 70, type: !175, isLocal: false, isDefinition: true)
!2047 = !DIGlobalVariableExpression(var: !2048, expr: !DIExpression())
!2048 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !1922, file: !1923, line: 71, type: !175, isLocal: false, isDefinition: true)
!2049 = !DIGlobalVariableExpression(var: !2050, expr: !DIExpression())
!2050 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !1922, file: !1923, line: 72, type: !175, isLocal: false, isDefinition: true)
!2051 = !DIGlobalVariableExpression(var: !2052, expr: !DIExpression())
!2052 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !1922, file: !1923, line: 73, type: !175, isLocal: false, isDefinition: true)
!2053 = !DIGlobalVariableExpression(var: !2054, expr: !DIExpression())
!2054 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !1922, file: !1923, line: 74, type: !175, isLocal: false, isDefinition: true)
!2055 = !DIGlobalVariableExpression(var: !2056, expr: !DIExpression())
!2056 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !1922, file: !1923, line: 75, type: !175, isLocal: false, isDefinition: true)
!2057 = !DIGlobalVariableExpression(var: !2058, expr: !DIExpression())
!2058 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !1922, file: !1923, line: 76, type: !175, isLocal: false, isDefinition: true)
!2059 = !DIGlobalVariableExpression(var: !2060, expr: !DIExpression())
!2060 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !1922, file: !1923, line: 77, type: !175, isLocal: false, isDefinition: true)
!2061 = !DIGlobalVariableExpression(var: !2062, expr: !DIExpression())
!2062 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !1922, file: !1923, line: 78, type: !175, isLocal: false, isDefinition: true)
!2063 = !DIGlobalVariableExpression(var: !2064, expr: !DIExpression())
!2064 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !1922, file: !1923, line: 79, type: !175, isLocal: false, isDefinition: true)
!2065 = !DIGlobalVariableExpression(var: !2066, expr: !DIExpression())
!2066 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !1922, file: !1923, line: 80, type: !175, isLocal: false, isDefinition: true)
!2067 = !DIGlobalVariableExpression(var: !2068, expr: !DIExpression())
!2068 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !1922, file: !1923, line: 84, type: !1941, isLocal: false, isDefinition: true)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2070, size: 416, elements: !2086)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !1926, line: 60, baseType: !2071)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1926, line: 45, size: 416, elements: !2072)
!2072 = !{!2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2071, file: !1926, line: 46, baseType: !175, size: 32)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2071, file: !1926, line: 47, baseType: !175, size: 32, offset: 32)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2071, file: !1926, line: 48, baseType: !175, size: 32, offset: 64)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2071, file: !1926, line: 49, baseType: !175, size: 32, offset: 96)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2071, file: !1926, line: 50, baseType: !175, size: 32, offset: 128)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2071, file: !1926, line: 51, baseType: !175, size: 32, offset: 160)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2071, file: !1926, line: 52, baseType: !175, size: 32, offset: 192)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2071, file: !1926, line: 53, baseType: !175, size: 32, offset: 224)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2071, file: !1926, line: 54, baseType: !175, size: 32, offset: 256)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2071, file: !1926, line: 55, baseType: !175, size: 32, offset: 288)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2071, file: !1926, line: 56, baseType: !175, size: 32, offset: 320)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2071, file: !1926, line: 57, baseType: !175, size: 32, offset: 352)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2071, file: !1926, line: 58, baseType: !175, size: 32, offset: 384)
!2086 = !{!2087}
!2087 = !DISubrange(count: 1)
!2088 = !DIGlobalVariableExpression(var: !2089, expr: !DIExpression())
!2089 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2090, file: !2091, line: 48, type: !2099, isLocal: false, isDefinition: true)
!2090 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2091, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2092, globals: !2098, splitDebugInlining: false, nameTableKind: None)
!2091 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2092 = !{!2093}
!2093 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !917, line: 100, baseType: !7, size: 32, elements: !2094)
!2094 = !{!2095, !2096, !2097}
!2095 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2096 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2097 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2098 = !{!2088}
!2099 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !917, line: 104, baseType: !2093)
!2100 = !DIGlobalVariableExpression(var: !2101, expr: !DIExpression())
!2101 = distinct !DIGlobalVariable(name: "heap_end", scope: !2102, file: !2103, line: 69, type: !2108, isLocal: true, isDefinition: true)
!2102 = distinct !DISubprogram(name: "_sbrk_r", scope: !2103, file: !2103, line: 66, type: !2104, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !2299)
!2103 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!2106, !2109, !2294}
!2106 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2107, line: 123, baseType: !2108)
!2107 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 32)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2111, line: 377, size: 1920, elements: !2112)
!2111 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2112 = !{!2113, !2114, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2193, !2214, !2218, !2219, !2220, !2221, !2231, !2244, !2245, !2250, !2268, !2269, !2276, !2277, !2293}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2110, file: !2111, line: 381, baseType: !79, size: 32)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2110, file: !2111, line: 386, baseType: !2115, size: 32, offset: 32)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2111, line: 292, baseType: !2117)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2111, line: 186, size: 832, elements: !2118)
!2118 = !{!2119, !2121, !2122, !2123, !2124, !2125, !2130, !2131, !2132, !2133, !2137, !2142, !2149, !2153, !2154, !2155, !2156, !2158, !2160, !2161, !2162, !2164, !2170, !2183}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2117, file: !2111, line: 187, baseType: !2120, size: 32)
!2120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2117, file: !2111, line: 188, baseType: !79, size: 32, offset: 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2117, file: !2111, line: 189, baseType: !79, size: 32, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2117, file: !2111, line: 190, baseType: !1376, size: 16, offset: 96)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2117, file: !2111, line: 191, baseType: !1376, size: 16, offset: 112)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2117, file: !2111, line: 192, baseType: !2126, size: 64, offset: 128)
!2126 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2111, line: 122, size: 64, elements: !2127)
!2127 = !{!2128, !2129}
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2126, file: !2111, line: 123, baseType: !2120, size: 32)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2126, file: !2111, line: 124, baseType: !79, size: 32, offset: 32)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2117, file: !2111, line: 193, baseType: !79, size: 32, offset: 192)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2117, file: !2111, line: 196, baseType: !2109, size: 32, offset: 224)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2117, file: !2111, line: 200, baseType: !194, size: 32, offset: 256)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2117, file: !2111, line: 202, baseType: !2134, size: 32, offset: 288)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 32)
!2135 = !DISubroutineType(types: !2136)
!2136 = !{!79, !2109, !194, !2108, !79}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2117, file: !2111, line: 204, baseType: !2138, size: 32, offset: 320)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2139, size: 32)
!2139 = !DISubroutineType(types: !2140)
!2140 = !{!79, !2109, !194, !2141, !79}
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2117, file: !2111, line: 207, baseType: !2143, size: 32, offset: 352)
!2143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2144, size: 32)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{!2146, !2109, !194, !2146, !79}
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2147, line: 116, baseType: !2148)
!2147 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2148 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2117, file: !2111, line: 208, baseType: !2150, size: 32, offset: 384)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 32)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!79, !2109, !194}
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2117, file: !2111, line: 211, baseType: !2126, size: 64, offset: 416)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2117, file: !2111, line: 212, baseType: !2120, size: 32, offset: 480)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2117, file: !2111, line: 213, baseType: !79, size: 32, offset: 512)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2117, file: !2111, line: 216, baseType: !2157, size: 24, offset: 544)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 24, elements: !1261)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2117, file: !2111, line: 217, baseType: !2159, size: 8, offset: 568)
!2159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 8, elements: !2086)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2117, file: !2111, line: 220, baseType: !2126, size: 64, offset: 576)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2117, file: !2111, line: 223, baseType: !79, size: 32, offset: 640)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2117, file: !2111, line: 224, baseType: !2163, size: 32, offset: 672)
!2163 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2147, line: 46, baseType: !2148)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2117, file: !2111, line: 231, baseType: !2165, size: 32, offset: 704)
!2165 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2111, line: 35, baseType: !2166)
!2166 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2167, line: 34, baseType: !2168)
!2167 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 32)
!2169 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2167, line: 33, flags: DIFlagFwdDecl)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2117, file: !2111, line: 233, baseType: !2171, size: 64, offset: 736)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2147, line: 170, baseType: !2172)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2147, line: 162, size: 64, elements: !2173)
!2173 = !{!2174, !2175}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2172, file: !2147, line: 164, baseType: !79, size: 32)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2172, file: !2147, line: 169, baseType: !2176, size: 32, offset: 32)
!2176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2172, file: !2147, line: 165, size: 32, elements: !2177)
!2177 = !{!2178, !2181}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2176, file: !2147, line: 167, baseType: !2179, size: 32)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2180, line: 116, baseType: !79)
!2180 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2176, file: !2147, line: 168, baseType: !2182, size: 32)
!2182 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 32, elements: !381)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2117, file: !2111, line: 234, baseType: !79, size: 32, offset: 800)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2110, file: !2111, line: 386, baseType: !2115, size: 32, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2110, file: !2111, line: 386, baseType: !2115, size: 32, offset: 96)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2110, file: !2111, line: 388, baseType: !79, size: 32, offset: 128)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2110, file: !2111, line: 390, baseType: !2108, size: 32, offset: 160)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2110, file: !2111, line: 392, baseType: !79, size: 32, offset: 192)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2110, file: !2111, line: 394, baseType: !79, size: 32, offset: 224)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2110, file: !2111, line: 395, baseType: !2191, size: 32, offset: 256)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!2192 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2111, line: 45, flags: DIFlagFwdDecl)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2110, file: !2111, line: 397, baseType: !2194, size: 32, offset: 288)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 32)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2111, line: 349, size: 128, elements: !2196)
!2196 = !{!2197, !2210, !2211, !2212}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2195, file: !2111, line: 352, baseType: !2198, size: 32)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 32)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2111, line: 52, size: 192, elements: !2200)
!2200 = !{!2201, !2202, !2203, !2204, !2205, !2206}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2199, file: !2111, line: 54, baseType: !2198, size: 32)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2199, file: !2111, line: 55, baseType: !79, size: 32, offset: 32)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2199, file: !2111, line: 55, baseType: !79, size: 32, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2199, file: !2111, line: 55, baseType: !79, size: 32, offset: 96)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2199, file: !2111, line: 55, baseType: !79, size: 32, offset: 128)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2199, file: !2111, line: 56, baseType: !2207, size: 32, offset: 160)
!2207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2208, size: 32, elements: !2086)
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2111, line: 22, baseType: !2209)
!2209 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2195, file: !2111, line: 353, baseType: !79, size: 32, offset: 32)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2195, file: !2111, line: 354, baseType: !2198, size: 32, offset: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2195, file: !2111, line: 355, baseType: !2213, size: 32, offset: 96)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2198, size: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2110, file: !2111, line: 399, baseType: !2215, size: 32, offset: 320)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2216, size: 32)
!2216 = !DISubroutineType(types: !2217)
!2217 = !{null, !2109}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2110, file: !2111, line: 401, baseType: !79, size: 32, offset: 352)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2110, file: !2111, line: 404, baseType: !79, size: 32, offset: 384)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2110, file: !2111, line: 405, baseType: !2108, size: 32, offset: 416)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2110, file: !2111, line: 407, baseType: !2222, size: 32, offset: 448)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 32)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2111, line: 324, size: 192, elements: !2224)
!2224 = !{!2225, !2227, !2228, !2229}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2223, file: !2111, line: 325, baseType: !2226, size: 48)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 48, elements: !1261)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2223, file: !2111, line: 326, baseType: !2226, size: 48, offset: 48)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2223, file: !2111, line: 327, baseType: !972, size: 16, offset: 96)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2223, file: !2111, line: 330, baseType: !2230, size: 64, offset: 128)
!2230 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2110, file: !2111, line: 408, baseType: !2232, size: 32, offset: 480)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 32)
!2233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2111, line: 60, size: 288, elements: !2234)
!2234 = !{!2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243}
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2233, file: !2111, line: 62, baseType: !79, size: 32)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2233, file: !2111, line: 63, baseType: !79, size: 32, offset: 32)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2233, file: !2111, line: 64, baseType: !79, size: 32, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2233, file: !2111, line: 65, baseType: !79, size: 32, offset: 96)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2233, file: !2111, line: 66, baseType: !79, size: 32, offset: 128)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2233, file: !2111, line: 67, baseType: !79, size: 32, offset: 160)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2233, file: !2111, line: 68, baseType: !79, size: 32, offset: 192)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2233, file: !2111, line: 69, baseType: !79, size: 32, offset: 224)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2233, file: !2111, line: 70, baseType: !79, size: 32, offset: 256)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2110, file: !2111, line: 409, baseType: !2108, size: 32, offset: 512)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2110, file: !2111, line: 412, baseType: !2246, size: 32, offset: 544)
!2246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2247, size: 32)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 32)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{null, !79}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2110, file: !2111, line: 416, baseType: !2251, size: 32, offset: 576)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 32)
!2252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2111, line: 90, size: 1120, elements: !2253)
!2253 = !{!2254, !2255, !2256, !2259}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2252, file: !2111, line: 91, baseType: !2251, size: 32)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2252, file: !2111, line: 92, baseType: !79, size: 32, offset: 32)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2252, file: !2111, line: 93, baseType: !2257, size: 1024, offset: 64)
!2257 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2258, size: 1024, elements: !248)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !208, size: 32)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2252, file: !2111, line: 94, baseType: !2260, size: 32, offset: 1088)
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 32)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2111, line: 79, size: 2112, elements: !2262)
!2262 = !{!2263, !2265, !2266, !2267}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2261, file: !2111, line: 80, baseType: !2264, size: 1024)
!2264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !194, size: 1024, elements: !248)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2261, file: !2111, line: 81, baseType: !2264, size: 1024, offset: 1024)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2261, file: !2111, line: 83, baseType: !2208, size: 32, offset: 2048)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2261, file: !2111, line: 86, baseType: !2208, size: 32, offset: 2080)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2110, file: !2111, line: 417, baseType: !2252, size: 1120, offset: 608)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2110, file: !2111, line: 420, baseType: !2270, size: 96, offset: 1728)
!2270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2111, line: 296, size: 96, elements: !2271)
!2271 = !{!2272, !2274, !2275}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2270, file: !2111, line: 298, baseType: !2273, size: 32)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 32)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2270, file: !2111, line: 299, baseType: !79, size: 32, offset: 32)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2270, file: !2111, line: 300, baseType: !2115, size: 32, offset: 64)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2110, file: !2111, line: 421, baseType: !2115, size: 32, offset: 1824)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2110, file: !2111, line: 422, baseType: !2278, size: 32, offset: 1856)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 32)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2111, line: 359, size: 640, elements: !2280)
!2280 = !{!2281, !2282, !2283, !2284, !2285, !2287, !2288, !2289, !2290, !2291, !2292}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2279, file: !2111, line: 362, baseType: !2108, size: 32)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2279, file: !2111, line: 363, baseType: !2171, size: 64, offset: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2279, file: !2111, line: 364, baseType: !2171, size: 64, offset: 96)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2279, file: !2111, line: 365, baseType: !2171, size: 64, offset: 160)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2279, file: !2111, line: 366, baseType: !2286, size: 64, offset: 224)
!2286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1418, size: 64, elements: !671)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2279, file: !2111, line: 367, baseType: !79, size: 32, offset: 288)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2279, file: !2111, line: 368, baseType: !2171, size: 64, offset: 320)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2279, file: !2111, line: 369, baseType: !2171, size: 64, offset: 384)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2279, file: !2111, line: 370, baseType: !2171, size: 64, offset: 448)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2279, file: !2111, line: 371, baseType: !2171, size: 64, offset: 512)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2279, file: !2111, line: 372, baseType: !2171, size: 64, offset: 576)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2110, file: !2111, line: 423, baseType: !2108, size: 32, offset: 1888)
!2294 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2180, line: 46, baseType: !7)
!2295 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2296, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2297, globals: !2298, splitDebugInlining: false, nameTableKind: None)
!2296 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2297 = !{!2108, !2106}
!2298 = !{!2100}
!2299 = !{!2300, !2301, !2302, !2303}
!2300 = !DILocalVariable(name: "r", arg: 1, scope: !2102, file: !2103, line: 66, type: !2109)
!2301 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2102, file: !2103, line: 66, type: !2294)
!2302 = !DILocalVariable(name: "prev_heap_end", scope: !2102, file: !2103, line: 70, type: !2108)
!2303 = !DILocalVariable(name: "stack", scope: !2102, file: !2103, line: 71, type: !2108)
!2304 = !DIGlobalVariableExpression(var: !2305, expr: !DIExpression())
!2305 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2306, file: !2307, line: 52, type: !184, isLocal: true, isDefinition: true)
!2306 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2307, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2308, globals: !2418, splitDebugInlining: false, nameTableKind: None)
!2307 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2308 = !{!2309, !2317, !175, !2362, !2367, !2392}
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !796, line: 656, baseType: !2311)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 650, size: 128, elements: !2312)
!2312 = !{!2313, !2314, !2315, !2316}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2311, file: !796, line: 652, baseType: !184, size: 32)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2311, file: !796, line: 653, baseType: !184, size: 32, offset: 32)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2311, file: !796, line: 654, baseType: !184, size: 32, offset: 64)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2311, file: !796, line: 655, baseType: !188, size: 32, offset: 96)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !78, line: 1952, baseType: !2319)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 1921, size: 8288, elements: !2320)
!2320 = !{!2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2331, !2332, !2336, !2337, !2339, !2340, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2359, !2360, !2361}
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2319, file: !78, line: 1922, baseType: !184, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2319, file: !78, line: 1923, baseType: !184, size: 32, offset: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2319, file: !78, line: 1924, baseType: !184, size: 32, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2319, file: !78, line: 1925, baseType: !184, size: 32, offset: 96)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2319, file: !78, line: 1926, baseType: !184, size: 32, offset: 128)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2319, file: !78, line: 1927, baseType: !184, size: 32, offset: 160)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2319, file: !78, line: 1928, baseType: !184, size: 32, offset: 192)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2319, file: !78, line: 1929, baseType: !184, size: 32, offset: 224)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2319, file: !78, line: 1930, baseType: !2330, size: 768, offset: 256)
!2330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 768, elements: !836)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2319, file: !78, line: 1931, baseType: !184, size: 32, offset: 1024)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2319, file: !78, line: 1932, baseType: !2333, size: 992, offset: 1056)
!2333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 992, elements: !2334)
!2334 = !{!2335}
!2335 = !DISubrange(count: 31)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2319, file: !78, line: 1933, baseType: !184, size: 32, offset: 2048)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2319, file: !78, line: 1934, baseType: !2338, size: 416, offset: 2080)
!2338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 416, elements: !691)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2319, file: !78, line: 1935, baseType: !184, size: 32, offset: 2496)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2319, file: !78, line: 1936, baseType: !2341, size: 1568, offset: 2528)
!2341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 1568, elements: !2342)
!2342 = !{!2343}
!2343 = !DISubrange(count: 49)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2319, file: !78, line: 1937, baseType: !188, size: 32, offset: 4096)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2319, file: !78, line: 1938, baseType: !188, size: 32, offset: 4128)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2319, file: !78, line: 1939, baseType: !188, size: 32, offset: 4160)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2319, file: !78, line: 1940, baseType: !184, size: 32, offset: 4192)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2319, file: !78, line: 1941, baseType: !184, size: 32, offset: 4224)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2319, file: !78, line: 1942, baseType: !184, size: 32, offset: 4256)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2319, file: !78, line: 1943, baseType: !184, size: 32, offset: 4288)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2319, file: !78, line: 1944, baseType: !184, size: 32, offset: 4320)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2319, file: !78, line: 1945, baseType: !184, size: 32, offset: 4352)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2319, file: !78, line: 1946, baseType: !184, size: 32, offset: 4384)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2319, file: !78, line: 1947, baseType: !184, size: 32, offset: 4416)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2319, file: !78, line: 1948, baseType: !2356, size: 3744, offset: 4448)
!2356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 3744, elements: !2357)
!2357 = !{!2358}
!2358 = !DISubrange(count: 117)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2319, file: !78, line: 1949, baseType: !184, size: 32, offset: 8192)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2319, file: !78, line: 1950, baseType: !184, size: 32, offset: 8224)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2319, file: !78, line: 1951, baseType: !188, size: 32, offset: 8256)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !78, line: 2158, baseType: !2364)
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 2156, size: 32, elements: !2365)
!2365 = !{!2366}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2364, file: !78, line: 2157, baseType: !184, size: 32)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !796, line: 418, baseType: !2369)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 395, size: 1120, elements: !2370)
!2370 = !{!2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2369, file: !796, line: 397, baseType: !188, size: 32)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2369, file: !796, line: 398, baseType: !184, size: 32, offset: 32)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2369, file: !796, line: 399, baseType: !184, size: 32, offset: 64)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2369, file: !796, line: 400, baseType: !184, size: 32, offset: 96)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2369, file: !796, line: 401, baseType: !184, size: 32, offset: 128)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2369, file: !796, line: 402, baseType: !184, size: 32, offset: 160)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2369, file: !796, line: 403, baseType: !806, size: 96, offset: 192)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2369, file: !796, line: 404, baseType: !184, size: 32, offset: 288)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2369, file: !796, line: 405, baseType: !184, size: 32, offset: 320)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2369, file: !796, line: 406, baseType: !184, size: 32, offset: 352)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2369, file: !796, line: 407, baseType: !184, size: 32, offset: 384)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2369, file: !796, line: 408, baseType: !184, size: 32, offset: 416)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2369, file: !796, line: 409, baseType: !184, size: 32, offset: 448)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2369, file: !796, line: 410, baseType: !184, size: 32, offset: 480)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2369, file: !796, line: 411, baseType: !816, size: 64, offset: 512)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2369, file: !796, line: 412, baseType: !188, size: 32, offset: 576)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2369, file: !796, line: 413, baseType: !188, size: 32, offset: 608)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2369, file: !796, line: 414, baseType: !820, size: 128, offset: 640)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2369, file: !796, line: 415, baseType: !822, size: 160, offset: 768)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2369, file: !796, line: 416, baseType: !826, size: 160, offset: 928)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2369, file: !796, line: 417, baseType: !184, size: 32, offset: 1088)
!2392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2393, size: 32)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !78, line: 276, baseType: !2394)
!2394 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 260, size: 525312, elements: !2395)
!2395 = !{!2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2408, !2409, !2413, !2417}
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2394, file: !78, line: 261, baseType: !184, size: 32)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2394, file: !78, line: 262, baseType: !184, size: 32, offset: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2394, file: !78, line: 263, baseType: !184, size: 32, offset: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2394, file: !78, line: 264, baseType: !184, size: 32, offset: 96)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2394, file: !78, line: 265, baseType: !184, size: 32, offset: 128)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2394, file: !78, line: 266, baseType: !184, size: 32, offset: 160)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2394, file: !78, line: 267, baseType: !184, size: 32, offset: 192)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2394, file: !78, line: 268, baseType: !184, size: 32, offset: 224)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2394, file: !78, line: 269, baseType: !184, size: 32, offset: 256)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2394, file: !78, line: 270, baseType: !184, size: 32, offset: 288)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2394, file: !78, line: 271, baseType: !2407, size: 32, offset: 320)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 32, elements: !2086)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2394, file: !78, line: 272, baseType: !184, size: 32, offset: 352)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2394, file: !78, line: 273, baseType: !2410, size: 523904, offset: 384)
!2410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 523904, elements: !2411)
!2411 = !{!2412}
!2412 = !DISubrange(count: 16372)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2394, file: !78, line: 274, baseType: !2414, size: 512, offset: 524288)
!2414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 512, elements: !2415)
!2415 = !{!2416}
!2416 = !DISubrange(count: 16)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2394, file: !78, line: 275, baseType: !2414, size: 512, offset: 524800)
!2418 = !{!2419, !2304}
!2419 = !DIGlobalVariableExpression(var: !2420, expr: !DIExpression())
!2420 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2306, file: !2307, line: 50, type: !175, isLocal: false, isDefinition: true)
!2421 = !DIGlobalVariableExpression(var: !2422, expr: !DIExpression())
!2422 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2423, file: !2428, line: 4, type: !2434, isLocal: false, isDefinition: true)
!2423 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2424, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2425, splitDebugInlining: false, nameTableKind: None)
!2424 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2425 = !{!2421, !2426, !2432}
!2426 = !DIGlobalVariableExpression(var: !2427, expr: !DIExpression())
!2427 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2423, file: !2428, line: 5, type: !2429, isLocal: false, isDefinition: true)
!2428 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1418, size: 88, elements: !2430)
!2430 = !{!2431}
!2431 = !DISubrange(count: 11)
!2432 = !DIGlobalVariableExpression(var: !2433, expr: !DIExpression())
!2433 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2423, file: !2428, line: 6, type: !2429, isLocal: false, isDefinition: true)
!2434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1418, size: 248, elements: !2334)
!2435 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2436, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2437, retainedTypes: !2460, splitDebugInlining: false, nameTableKind: None)
!2436 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2437 = !{!1845, !156, !170, !2438, !2442, !165, !66}
!2438 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 857, baseType: !7, size: 32, elements: !2439)
!2439 = !{!2440, !2441}
!2440 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2441 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2442 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !67, line: 87, baseType: !7, size: 32, elements: !2443)
!2443 = !{!2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459}
!2444 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2445 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2446 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2447 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2448 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2449 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2450 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2451 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2452 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2453 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2454 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2455 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2456 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2457 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2458 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2459 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2460 = !{!175, !194, !225}
!2461 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2462, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2463, retainedTypes: !2464, splitDebugInlining: false, nameTableKind: None)
!2462 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2463 = !{!611, !617, !621, !704}
!2464 = !{!378}
!2465 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2466, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2467, retainedTypes: !2468, splitDebugInlining: false, nameTableKind: None)
!2466 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2467 = !{!77, !633}
!2468 = !{!780, !2469, !175, !2494, !858}
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !796, line: 418, baseType: !2471)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 395, size: 1120, elements: !2472)
!2472 = !{!2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2471, file: !796, line: 397, baseType: !188, size: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2471, file: !796, line: 398, baseType: !184, size: 32, offset: 32)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2471, file: !796, line: 399, baseType: !184, size: 32, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2471, file: !796, line: 400, baseType: !184, size: 32, offset: 96)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2471, file: !796, line: 401, baseType: !184, size: 32, offset: 128)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2471, file: !796, line: 402, baseType: !184, size: 32, offset: 160)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2471, file: !796, line: 403, baseType: !806, size: 96, offset: 192)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2471, file: !796, line: 404, baseType: !184, size: 32, offset: 288)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2471, file: !796, line: 405, baseType: !184, size: 32, offset: 320)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2471, file: !796, line: 406, baseType: !184, size: 32, offset: 352)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2471, file: !796, line: 407, baseType: !184, size: 32, offset: 384)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2471, file: !796, line: 408, baseType: !184, size: 32, offset: 416)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2471, file: !796, line: 409, baseType: !184, size: 32, offset: 448)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2471, file: !796, line: 410, baseType: !184, size: 32, offset: 480)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2471, file: !796, line: 411, baseType: !816, size: 64, offset: 512)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2471, file: !796, line: 412, baseType: !188, size: 32, offset: 576)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2471, file: !796, line: 413, baseType: !188, size: 32, offset: 608)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2471, file: !796, line: 414, baseType: !820, size: 128, offset: 640)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2471, file: !796, line: 415, baseType: !822, size: 160, offset: 768)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2471, file: !796, line: 416, baseType: !826, size: 160, offset: 928)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2471, file: !796, line: 417, baseType: !184, size: 32, offset: 1088)
!2494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2495, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !796, line: 378, baseType: !2496)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 363, size: 28704, elements: !2497)
!2497 = !{!2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2496, file: !796, line: 365, baseType: !833, size: 256)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2496, file: !796, line: 366, baseType: !835, size: 768, offset: 256)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2496, file: !796, line: 367, baseType: !833, size: 256, offset: 1024)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2496, file: !796, line: 368, baseType: !835, size: 768, offset: 1280)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2496, file: !796, line: 369, baseType: !833, size: 256, offset: 2048)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2496, file: !796, line: 370, baseType: !835, size: 768, offset: 2304)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2496, file: !796, line: 371, baseType: !833, size: 256, offset: 3072)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2496, file: !796, line: 372, baseType: !835, size: 768, offset: 3328)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2496, file: !796, line: 373, baseType: !833, size: 256, offset: 4096)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2496, file: !796, line: 374, baseType: !846, size: 1792, offset: 4352)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2496, file: !796, line: 375, baseType: !850, size: 1920, offset: 6144)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2496, file: !796, line: 376, baseType: !854, size: 20608, offset: 8064)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2496, file: !796, line: 377, baseType: !184, size: 32, offset: 28672)
!2511 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2512, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2512 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2513 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2514, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2514 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2515 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2516, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2517, splitDebugInlining: false, nameTableKind: None)
!2516 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!2517 = !{!549, !595, !611, !617, !621, !266}
!2518 = !{!"Ubuntu clang version 14.0.6"}
!2519 = !{i32 7, !"Dwarf Version", i32 2}
!2520 = !{i32 2, !"Debug Info Version", i32 3}
!2521 = !{i32 1, !"wchar_size", i32 4}
!2522 = !{i32 1, !"min_enum_size", i32 4}
!2523 = !{i32 1, !"branch-target-enforcement", i32 0}
!2524 = !{i32 1, !"sign-return-address", i32 0}
!2525 = !{i32 1, !"sign-return-address-all", i32 0}
!2526 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2527 = !{i32 7, !"frame-pointer", i32 2}
!2528 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2436, file: !2436, line: 95, type: !2529, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2533)
!2529 = !DISubroutineType(types: !2530)
!2530 = !{!2531, !2532}
!2531 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !166, line: 393, baseType: !1845)
!2532 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !6, line: 854, baseType: !156)
!2533 = !{!2534}
!2534 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2528, file: !2436, line: 95, type: !2532)
!2535 = !DILocation(line: 0, scope: !2528)
!2536 = !DILocation(line: 98, column: 9, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2528, file: !2436, line: 98, column: 9)
!2538 = !DILocation(line: 98, column: 9, scope: !2528)
!2539 = !DILocation(line: 102, column: 10, scope: !2540)
!2540 = distinct !DILexicalBlock(scope: !2528, file: !2436, line: 102, column: 9)
!2541 = !DILocation(line: 102, column: 34, scope: !2540)
!2542 = !DILocation(line: 102, column: 49, scope: !2540)
!2543 = !DILocation(line: 102, column: 69, scope: !2540)
!2544 = !DILocation(line: 103, column: 38, scope: !2540)
!2545 = !{i8 0, i8 2}
!2546 = !DILocation(line: 102, column: 9, scope: !2528)
!2547 = !DILocation(line: 109, column: 12, scope: !2528)
!2548 = !DILocation(line: 109, column: 5, scope: !2528)
!2549 = !DILocation(line: 112, column: 5, scope: !2528)
!2550 = !DILocation(line: 115, column: 44, scope: !2528)
!2551 = !DILocation(line: 118, column: 5, scope: !2528)
!2552 = !DILocation(line: 118, column: 23, scope: !2528)
!2553 = !DILocation(line: 118, column: 35, scope: !2528)
!2554 = !DILocation(line: 121, column: 42, scope: !2528)
!2555 = !DILocation(line: 121, column: 38, scope: !2528)
!2556 = !DILocation(line: 121, column: 5, scope: !2528)
!2557 = !DILocation(line: 121, column: 17, scope: !2528)
!2558 = !DILocation(line: 121, column: 35, scope: !2528)
!2559 = !DILocation(line: 129, column: 5, scope: !2528)
!2560 = !DILocation(line: 131, column: 1, scope: !2528)
!2561 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2436, file: !2436, line: 81, type: !2562, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2564)
!2562 = !DISubroutineType(types: !2563)
!2563 = !{!211, !2532}
!2564 = !{!2565}
!2565 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2561, file: !2436, line: 81, type: !2532)
!2566 = !DILocation(line: 0, scope: !2561)
!2567 = !DILocation(line: 84, column: 25, scope: !2568)
!2568 = distinct !DILexicalBlock(scope: !2561, file: !2436, line: 84, column: 9)
!2569 = !DILocation(line: 84, column: 35, scope: !2568)
!2570 = !DILocation(line: 84, column: 45, scope: !2568)
!2571 = !DILocation(line: 93, column: 1, scope: !2561)
!2572 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2436, file: !2436, line: 133, type: !2529, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2573)
!2573 = !{!2574}
!2574 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2572, file: !2436, line: 133, type: !2532)
!2575 = !DILocation(line: 0, scope: !2572)
!2576 = !DILocation(line: 136, column: 9, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2572, file: !2436, line: 136, column: 9)
!2578 = !DILocation(line: 136, column: 9, scope: !2572)
!2579 = !DILocation(line: 140, column: 9, scope: !2580)
!2580 = distinct !DILexicalBlock(scope: !2572, file: !2436, line: 140, column: 9)
!2581 = !DILocation(line: 140, column: 33, scope: !2580)
!2582 = !DILocation(line: 140, column: 48, scope: !2580)
!2583 = !DILocation(line: 140, column: 9, scope: !2572)
!2584 = !DILocation(line: 146, column: 12, scope: !2572)
!2585 = !DILocation(line: 146, column: 5, scope: !2572)
!2586 = !DILocation(line: 149, column: 29, scope: !2572)
!2587 = !DILocation(line: 149, column: 44, scope: !2572)
!2588 = !DILocation(line: 151, column: 29, scope: !2572)
!2589 = !DILocation(line: 151, column: 5, scope: !2572)
!2590 = !DILocation(line: 159, column: 5, scope: !2572)
!2591 = !DILocation(line: 160, column: 1, scope: !2572)
!2592 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2436, file: !2436, line: 163, type: !2593, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2596)
!2593 = !DISubroutineType(types: !2594)
!2594 = !{!2531, !2595, !938}
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !6, line: 860, baseType: !2438)
!2596 = !{!2597, !2598}
!2597 = !DILocalVariable(name: "clock_source", arg: 1, scope: !2592, file: !2436, line: 163, type: !2595)
!2598 = !DILocalVariable(name: "count", arg: 2, scope: !2592, file: !2436, line: 163, type: !938)
!2599 = !DILocation(line: 0, scope: !2592)
!2600 = !DILocation(line: 166, column: 9, scope: !2592)
!2601 = !DILocation(line: 167, column: 44, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2603, file: !2436, line: 167, column: 13)
!2603 = distinct !DILexicalBlock(scope: !2604, file: !2436, line: 166, column: 51)
!2604 = distinct !DILexicalBlock(scope: !2592, file: !2436, line: 166, column: 9)
!2605 = !DILocation(line: 167, column: 59, scope: !2602)
!2606 = !DILocation(line: 167, column: 13, scope: !2603)
!2607 = !DILocation(line: 170, column: 38, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2602, file: !2436, line: 167, column: 79)
!2609 = !DILocation(line: 170, column: 13, scope: !2608)
!2610 = !DILocation(line: 172, column: 59, scope: !2608)
!2611 = !DILocation(line: 173, column: 9, scope: !2608)
!2612 = !DILocation(line: 175, column: 36, scope: !2603)
!2613 = !DILocation(line: 175, column: 18, scope: !2603)
!2614 = !DILocation(line: 177, column: 5, scope: !2603)
!2615 = !DILocation(line: 179, column: 44, scope: !2616)
!2616 = distinct !DILexicalBlock(scope: !2617, file: !2436, line: 179, column: 13)
!2617 = distinct !DILexicalBlock(scope: !2618, file: !2436, line: 178, column: 55)
!2618 = distinct !DILexicalBlock(scope: !2604, file: !2436, line: 178, column: 14)
!2619 = !DILocation(line: 179, column: 59, scope: !2616)
!2620 = !DILocation(line: 179, column: 13, scope: !2617)
!2621 = !DILocation(line: 182, column: 38, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2616, file: !2436, line: 179, column: 79)
!2623 = !DILocation(line: 182, column: 13, scope: !2622)
!2624 = !DILocation(line: 184, column: 59, scope: !2622)
!2625 = !DILocation(line: 186, column: 9, scope: !2622)
!2626 = !DILocation(line: 188, column: 68, scope: !2617)
!2627 = !DILocation(line: 188, column: 50, scope: !2617)
!2628 = !DILocation(line: 188, column: 18, scope: !2617)
!2629 = !DILocation(line: 0, scope: !2604)
!2630 = !DILocation(line: 193, column: 5, scope: !2592)
!2631 = !DILocation(line: 194, column: 1, scope: !2592)
!2632 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2436, file: !2436, line: 196, type: !2633, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2635)
!2633 = !DISubroutineType(types: !2634)
!2634 = !{!2531, !175, !175, !938}
!2635 = !{!2636, !2637, !2638}
!2636 = !DILocalVariable(name: "start_count", arg: 1, scope: !2632, file: !2436, line: 196, type: !175)
!2637 = !DILocalVariable(name: "end_count", arg: 2, scope: !2632, file: !2436, line: 196, type: !175)
!2638 = !DILocalVariable(name: "duration_count", arg: 3, scope: !2632, file: !2436, line: 196, type: !938)
!2639 = !DILocation(line: 0, scope: !2632)
!2640 = !DILocation(line: 198, column: 24, scope: !2641)
!2641 = distinct !DILexicalBlock(scope: !2632, file: !2436, line: 198, column: 9)
!2642 = !DILocation(line: 198, column: 9, scope: !2632)
!2643 = !DILocation(line: 0, scope: !2644)
!2644 = distinct !DILexicalBlock(scope: !2632, file: !2436, line: 202, column: 9)
!2645 = !DILocation(line: 208, column: 5, scope: !2632)
!2646 = !DILocation(line: 209, column: 1, scope: !2632)
!2647 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2436, file: !2436, line: 211, type: !2648, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2651)
!2648 = !DISubroutineType(types: !2649)
!2649 = !{!2531, !2532, !2650}
!2650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !219, size: 32)
!2651 = !{!2652, !2653}
!2652 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2647, file: !2436, line: 211, type: !2532)
!2653 = !DILocalVariable(name: "running_status", arg: 2, scope: !2647, file: !2436, line: 211, type: !2650)
!2654 = !DILocation(line: 0, scope: !2647)
!2655 = !DILocation(line: 213, column: 18, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2647, file: !2436, line: 213, column: 9)
!2657 = !DILocation(line: 213, column: 9, scope: !2647)
!2658 = !DILocation(line: 217, column: 47, scope: !2647)
!2659 = !DILocation(line: 217, column: 21, scope: !2647)
!2660 = !DILocation(line: 219, column: 5, scope: !2647)
!2661 = !DILocation(line: 220, column: 1, scope: !2647)
!2662 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2436, file: !2436, line: 222, type: !2663, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2665)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!2531, !2532, !225, !194}
!2665 = !{!2666, !2667, !2668}
!2666 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2662, file: !2436, line: 222, type: !2532)
!2667 = !DILocalVariable(name: "callback", arg: 2, scope: !2662, file: !2436, line: 223, type: !225)
!2668 = !DILocalVariable(name: "user_data", arg: 3, scope: !2662, file: !2436, line: 224, type: !194)
!2669 = !DILocation(line: 0, scope: !2662)
!2670 = !DILocation(line: 227, column: 9, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2662, file: !2436, line: 227, column: 9)
!2672 = !DILocation(line: 227, column: 9, scope: !2662)
!2673 = !DILocation(line: 231, column: 34, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2662, file: !2436, line: 231, column: 9)
!2675 = !DILocation(line: 231, column: 49, scope: !2674)
!2676 = !DILocation(line: 231, column: 69, scope: !2674)
!2677 = !DILocation(line: 232, column: 38, scope: !2674)
!2678 = !DILocation(line: 232, column: 53, scope: !2674)
!2679 = !DILocation(line: 231, column: 9, scope: !2662)
!2680 = !DILocation(line: 237, column: 18, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2662, file: !2436, line: 237, column: 9)
!2682 = !DILocation(line: 237, column: 9, scope: !2662)
!2683 = !DILocation(line: 245, column: 46, scope: !2662)
!2684 = !DILocation(line: 245, column: 56, scope: !2662)
!2685 = !DILocation(line: 246, column: 46, scope: !2662)
!2686 = !DILocation(line: 246, column: 56, scope: !2662)
!2687 = !DILocation(line: 248, column: 5, scope: !2662)
!2688 = !DILocation(line: 250, column: 5, scope: !2662)
!2689 = !DILocation(line: 252, column: 1, scope: !2662)
!2690 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2436, file: !2436, line: 256, type: !2691, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2694)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{!2531, !2532, !175, !2693}
!2693 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !166, line: 383, baseType: !165)
!2694 = !{!2695, !2696, !2697, !2698}
!2695 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2690, file: !2436, line: 256, type: !2532)
!2696 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !2690, file: !2436, line: 256, type: !175)
!2697 = !DILocalVariable(name: "timer_type", arg: 3, scope: !2690, file: !2436, line: 256, type: !2693)
!2698 = !DILocalVariable(name: "mask", scope: !2690, file: !2436, line: 259, type: !184)
!2699 = !DILocation(line: 0, scope: !2690)
!2700 = !DILocation(line: 259, column: 5, scope: !2690)
!2701 = !DILocation(line: 259, column: 23, scope: !2690)
!2702 = !DILocation(line: 261, column: 9, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2690, file: !2436, line: 261, column: 9)
!2704 = !DILocation(line: 261, column: 9, scope: !2690)
!2705 = !DILocation(line: 265, column: 34, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2690, file: !2436, line: 265, column: 9)
!2707 = !DILocation(line: 265, column: 49, scope: !2706)
!2708 = !DILocation(line: 266, column: 13, scope: !2706)
!2709 = !DILocation(line: 266, column: 41, scope: !2706)
!2710 = !DILocation(line: 266, column: 56, scope: !2706)
!2711 = !DILocation(line: 265, column: 9, scope: !2690)
!2712 = !DILocation(line: 271, column: 25, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2690, file: !2436, line: 271, column: 9)
!2714 = !DILocation(line: 271, column: 9, scope: !2690)
!2715 = !DILocation(line: 282, column: 12, scope: !2690)
!2716 = !DILocation(line: 282, column: 10, scope: !2690)
!2717 = !DILocation(line: 284, column: 5, scope: !2690)
!2718 = !DILocation(line: 286, column: 5, scope: !2690)
!2719 = !DILocation(line: 286, column: 23, scope: !2690)
!2720 = !DILocation(line: 286, column: 34, scope: !2690)
!2721 = !DILocation(line: 287, column: 5, scope: !2690)
!2722 = !DILocation(line: 287, column: 23, scope: !2690)
!2723 = !DILocation(line: 287, column: 34, scope: !2690)
!2724 = !DILocation(line: 290, column: 5, scope: !2690)
!2725 = !DILocation(line: 290, column: 23, scope: !2690)
!2726 = !DILocation(line: 290, column: 37, scope: !2690)
!2727 = !DILocation(line: 291, column: 39, scope: !2690)
!2728 = !DILocation(line: 291, column: 5, scope: !2690)
!2729 = !DILocation(line: 291, column: 23, scope: !2690)
!2730 = !DILocation(line: 291, column: 37, scope: !2690)
!2731 = !DILocation(line: 292, column: 5, scope: !2690)
!2732 = !DILocation(line: 292, column: 23, scope: !2690)
!2733 = !DILocation(line: 292, column: 37, scope: !2690)
!2734 = !DILocation(line: 297, column: 47, scope: !2690)
!2735 = !DILocation(line: 298, column: 33, scope: !2690)
!2736 = !DILocation(line: 296, column: 5, scope: !2690)
!2737 = !DILocation(line: 296, column: 23, scope: !2690)
!2738 = !DILocation(line: 296, column: 31, scope: !2690)
!2739 = !DILocation(line: 300, column: 5, scope: !2690)
!2740 = !DILocation(line: 300, column: 29, scope: !2690)
!2741 = distinct !{!2741, !2739, !2742}
!2742 = !DILocation(line: 300, column: 39, scope: !2690)
!2743 = !DILocation(line: 301, column: 23, scope: !2690)
!2744 = !DILocation(line: 301, column: 33, scope: !2690)
!2745 = !DILocation(line: 302, column: 5, scope: !2690)
!2746 = !DILocation(line: 302, column: 23, scope: !2690)
!2747 = !DILocation(line: 302, column: 34, scope: !2690)
!2748 = !DILocation(line: 303, column: 44, scope: !2690)
!2749 = !DILocation(line: 305, column: 28, scope: !2690)
!2750 = !DILocation(line: 305, column: 5, scope: !2690)
!2751 = !DILocation(line: 306, column: 5, scope: !2690)
!2752 = !DILocation(line: 307, column: 1, scope: !2690)
!2753 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2436, file: !2436, line: 310, type: !2754, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2756)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{!2531, !175}
!2756 = !{!2757}
!2757 = !DILocalVariable(name: "ms", arg: 1, scope: !2753, file: !2436, line: 310, type: !175)
!2758 = !DILocation(line: 0, scope: !2753)
!2759 = !DILocation(line: 313, column: 40, scope: !2760)
!2760 = distinct !DILexicalBlock(scope: !2753, file: !2436, line: 313, column: 9)
!2761 = !DILocation(line: 313, column: 55, scope: !2760)
!2762 = !DILocation(line: 313, column: 9, scope: !2753)
!2763 = !DILocation(line: 316, column: 34, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2760, file: !2436, line: 313, column: 75)
!2765 = !DILocation(line: 316, column: 9, scope: !2764)
!2766 = !DILocation(line: 317, column: 55, scope: !2764)
!2767 = !DILocation(line: 318, column: 5, scope: !2764)
!2768 = !DILocation(line: 320, column: 20, scope: !2753)
!2769 = !DILocation(line: 320, column: 45, scope: !2753)
!2770 = !DILocation(line: 320, column: 5, scope: !2753)
!2771 = !DILocation(line: 322, column: 5, scope: !2753)
!2772 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2436, file: !2436, line: 327, type: !2691, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2773)
!2773 = !{!2774, !2775, !2776, !2777}
!2774 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2772, file: !2436, line: 327, type: !2532)
!2775 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !2772, file: !2436, line: 327, type: !175)
!2776 = !DILocalVariable(name: "timer_type", arg: 3, scope: !2772, file: !2436, line: 327, type: !2693)
!2777 = !DILocalVariable(name: "mask", scope: !2772, file: !2436, line: 329, type: !184)
!2778 = !DILocation(line: 0, scope: !2772)
!2779 = !DILocation(line: 329, column: 5, scope: !2772)
!2780 = !DILocation(line: 329, column: 23, scope: !2772)
!2781 = !DILocation(line: 331, column: 9, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2772, file: !2436, line: 331, column: 9)
!2783 = !DILocation(line: 331, column: 9, scope: !2772)
!2784 = !DILocation(line: 336, column: 34, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2772, file: !2436, line: 336, column: 9)
!2786 = !DILocation(line: 336, column: 49, scope: !2785)
!2787 = !DILocation(line: 337, column: 13, scope: !2785)
!2788 = !DILocation(line: 337, column: 41, scope: !2785)
!2789 = !DILocation(line: 337, column: 56, scope: !2785)
!2790 = !DILocation(line: 336, column: 9, scope: !2772)
!2791 = !DILocation(line: 349, column: 29, scope: !2772)
!2792 = !DILocation(line: 349, column: 49, scope: !2772)
!2793 = !DILocation(line: 351, column: 12, scope: !2772)
!2794 = !DILocation(line: 351, column: 10, scope: !2772)
!2795 = !DILocation(line: 353, column: 5, scope: !2772)
!2796 = !DILocation(line: 355, column: 5, scope: !2772)
!2797 = !DILocation(line: 355, column: 23, scope: !2772)
!2798 = !DILocation(line: 355, column: 34, scope: !2772)
!2799 = !DILocation(line: 356, column: 5, scope: !2772)
!2800 = !DILocation(line: 356, column: 23, scope: !2772)
!2801 = !DILocation(line: 356, column: 34, scope: !2772)
!2802 = !DILocation(line: 359, column: 5, scope: !2772)
!2803 = !DILocation(line: 359, column: 23, scope: !2772)
!2804 = !DILocation(line: 359, column: 37, scope: !2772)
!2805 = !DILocation(line: 360, column: 39, scope: !2772)
!2806 = !DILocation(line: 360, column: 5, scope: !2772)
!2807 = !DILocation(line: 360, column: 23, scope: !2772)
!2808 = !DILocation(line: 360, column: 37, scope: !2772)
!2809 = !DILocation(line: 361, column: 5, scope: !2772)
!2810 = !DILocation(line: 361, column: 23, scope: !2772)
!2811 = !DILocation(line: 361, column: 37, scope: !2772)
!2812 = !DILocation(line: 366, column: 47, scope: !2772)
!2813 = !DILocation(line: 367, column: 33, scope: !2772)
!2814 = !DILocation(line: 365, column: 5, scope: !2772)
!2815 = !DILocation(line: 365, column: 23, scope: !2772)
!2816 = !DILocation(line: 365, column: 31, scope: !2772)
!2817 = !DILocation(line: 369, column: 5, scope: !2772)
!2818 = !DILocation(line: 369, column: 29, scope: !2772)
!2819 = distinct !{!2819, !2817, !2820}
!2820 = !DILocation(line: 369, column: 39, scope: !2772)
!2821 = !DILocation(line: 370, column: 23, scope: !2772)
!2822 = !DILocation(line: 370, column: 33, scope: !2772)
!2823 = !DILocation(line: 371, column: 5, scope: !2772)
!2824 = !DILocation(line: 371, column: 23, scope: !2772)
!2825 = !DILocation(line: 371, column: 34, scope: !2772)
!2826 = !DILocation(line: 373, column: 28, scope: !2772)
!2827 = !DILocation(line: 373, column: 5, scope: !2772)
!2828 = !DILocation(line: 375, column: 44, scope: !2772)
!2829 = !DILocation(line: 377, column: 5, scope: !2772)
!2830 = !DILocation(line: 378, column: 1, scope: !2772)
!2831 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2436, file: !2436, line: 382, type: !2754, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2832)
!2832 = !{!2833}
!2833 = !DILocalVariable(name: "us", arg: 1, scope: !2831, file: !2436, line: 382, type: !175)
!2834 = !DILocation(line: 0, scope: !2831)
!2835 = !DILocation(line: 385, column: 40, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2831, file: !2436, line: 385, column: 9)
!2837 = !DILocation(line: 385, column: 55, scope: !2836)
!2838 = !DILocation(line: 385, column: 9, scope: !2831)
!2839 = !DILocation(line: 388, column: 34, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2836, file: !2436, line: 385, column: 75)
!2841 = !DILocation(line: 388, column: 9, scope: !2840)
!2842 = !DILocation(line: 390, column: 55, scope: !2840)
!2843 = !DILocation(line: 391, column: 5, scope: !2840)
!2844 = !DILocation(line: 392, column: 20, scope: !2831)
!2845 = !DILocation(line: 392, column: 45, scope: !2831)
!2846 = !DILocation(line: 392, column: 5, scope: !2831)
!2847 = !DILocation(line: 394, column: 5, scope: !2831)
!2848 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2436, file: !2436, line: 398, type: !2529, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2849)
!2849 = !{!2850, !2851}
!2850 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !2848, file: !2436, line: 398, type: !2532)
!2851 = !DILocalVariable(name: "mask", scope: !2848, file: !2436, line: 400, type: !184)
!2852 = !DILocation(line: 0, scope: !2848)
!2853 = !DILocation(line: 400, column: 5, scope: !2848)
!2854 = !DILocation(line: 400, column: 23, scope: !2848)
!2855 = !DILocation(line: 402, column: 9, scope: !2856)
!2856 = distinct !DILexicalBlock(scope: !2848, file: !2436, line: 402, column: 9)
!2857 = !DILocation(line: 402, column: 9, scope: !2848)
!2858 = !DILocation(line: 413, column: 12, scope: !2848)
!2859 = !DILocation(line: 413, column: 10, scope: !2848)
!2860 = !DILocation(line: 415, column: 5, scope: !2848)
!2861 = !DILocation(line: 415, column: 23, scope: !2848)
!2862 = !DILocation(line: 415, column: 34, scope: !2848)
!2863 = !DILocation(line: 418, column: 5, scope: !2848)
!2864 = !DILocation(line: 418, column: 23, scope: !2848)
!2865 = !DILocation(line: 418, column: 34, scope: !2848)
!2866 = !DILocation(line: 420, column: 5, scope: !2848)
!2867 = !DILocation(line: 420, column: 23, scope: !2848)
!2868 = !DILocation(line: 420, column: 35, scope: !2848)
!2869 = !DILocation(line: 422, column: 29, scope: !2848)
!2870 = !DILocation(line: 422, column: 44, scope: !2848)
!2871 = !DILocation(line: 423, column: 28, scope: !2848)
!2872 = !DILocation(line: 423, column: 5, scope: !2848)
!2873 = !DILocation(line: 425, column: 33, scope: !2874)
!2874 = distinct !DILexicalBlock(scope: !2848, file: !2436, line: 425, column: 9)
!2875 = !DILocation(line: 425, column: 9, scope: !2848)
!2876 = !DILocation(line: 427, column: 53, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2874, file: !2436, line: 425, column: 62)
!2878 = !DILocation(line: 428, column: 5, scope: !2877)
!2879 = !DILocation(line: 430, column: 1, scope: !2848)
!2880 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2436, file: !2436, line: 434, type: !2881, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2883)
!2881 = !DISubroutineType(types: !2882)
!2882 = !{!2531, !938}
!2883 = !{!2884, !2885, !2886}
!2884 = !DILocalVariable(name: "handle", arg: 1, scope: !2880, file: !2436, line: 434, type: !938)
!2885 = !DILocalVariable(name: "timer", scope: !2880, file: !2436, line: 436, type: !175)
!2886 = !DILocalVariable(name: "mask", scope: !2880, file: !2436, line: 437, type: !175)
!2887 = !DILocation(line: 0, scope: !2880)
!2888 = !DILocation(line: 439, column: 24, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2880, file: !2436, line: 439, column: 9)
!2890 = !DILocation(line: 439, column: 41, scope: !2889)
!2891 = !DILocation(line: 439, column: 9, scope: !2880)
!2892 = !DILocation(line: 443, column: 16, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2880, file: !2436, line: 443, column: 9)
!2894 = !DILocation(line: 443, column: 9, scope: !2880)
!2895 = !DILocation(line: 448, column: 12, scope: !2880)
!2896 = !DILocation(line: 450, column: 15, scope: !2880)
!2897 = !DILocation(line: 451, column: 21, scope: !2880)
!2898 = !DILocation(line: 451, column: 13, scope: !2880)
!2899 = !DILocation(line: 452, column: 33, scope: !2880)
!2900 = !DILocation(line: 452, column: 41, scope: !2880)
!2901 = !DILocation(line: 453, column: 36, scope: !2880)
!2902 = !DILocation(line: 455, column: 5, scope: !2880)
!2903 = !DILocation(line: 456, column: 5, scope: !2880)
!2904 = !DILocation(line: 457, column: 1, scope: !2880)
!2905 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2436, file: !2436, line: 459, type: !2754, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2906)
!2906 = !{!2907, !2908}
!2907 = !DILocalVariable(name: "handle", arg: 1, scope: !2905, file: !2436, line: 459, type: !175)
!2908 = !DILocalVariable(name: "timer", scope: !2905, file: !2436, line: 461, type: !184)
!2909 = !DILocation(line: 0, scope: !2905)
!2910 = !DILocation(line: 461, column: 5, scope: !2905)
!2911 = !DILocation(line: 461, column: 23, scope: !2905)
!2912 = !DILocation(line: 463, column: 17, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2905, file: !2436, line: 463, column: 9)
!2914 = !DILocation(line: 463, column: 37, scope: !2913)
!2915 = !DILocation(line: 463, column: 9, scope: !2905)
!2916 = !DILocation(line: 467, column: 20, scope: !2905)
!2917 = !DILocation(line: 467, column: 11, scope: !2905)
!2918 = !DILocation(line: 469, column: 24, scope: !2919)
!2919 = distinct !DILexicalBlock(scope: !2905, file: !2436, line: 469, column: 9)
!2920 = !DILocation(line: 469, column: 41, scope: !2919)
!2921 = !DILocation(line: 469, column: 9, scope: !2905)
!2922 = !DILocation(line: 473, column: 30, scope: !2923)
!2923 = distinct !DILexicalBlock(scope: !2905, file: !2436, line: 473, column: 9)
!2924 = !DILocation(line: 473, column: 37, scope: !2923)
!2925 = !DILocation(line: 473, column: 9, scope: !2905)
!2926 = !DILocation(line: 477, column: 30, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2905, file: !2436, line: 477, column: 9)
!2928 = !DILocation(line: 477, column: 37, scope: !2927)
!2929 = !DILocation(line: 477, column: 45, scope: !2927)
!2930 = !DILocation(line: 477, column: 9, scope: !2905)
!2931 = !DILocation(line: 481, column: 26, scope: !2905)
!2932 = !DILocation(line: 481, column: 33, scope: !2905)
!2933 = !DILocation(line: 481, column: 41, scope: !2905)
!2934 = !DILocation(line: 482, column: 36, scope: !2905)
!2935 = !DILocation(line: 484, column: 5, scope: !2905)
!2936 = !DILocation(line: 485, column: 1, scope: !2905)
!2937 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2436, file: !2436, line: 487, type: !2938, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !2940)
!2938 = !DISubroutineType(types: !2939)
!2939 = !{!2531, !175, !175, !225, !194}
!2940 = !{!2941, !2942, !2943, !2944, !2945, !2946, !2947}
!2941 = !DILocalVariable(name: "handle", arg: 1, scope: !2937, file: !2436, line: 487, type: !175)
!2942 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !2937, file: !2436, line: 487, type: !175)
!2943 = !DILocalVariable(name: "callback", arg: 3, scope: !2937, file: !2436, line: 487, type: !225)
!2944 = !DILocalVariable(name: "user_data", arg: 4, scope: !2937, file: !2436, line: 487, type: !194)
!2945 = !DILocalVariable(name: "current_time", scope: !2937, file: !2436, line: 489, type: !175)
!2946 = !DILocalVariable(name: "mask", scope: !2937, file: !2436, line: 490, type: !175)
!2947 = !DILocalVariable(name: "timer", scope: !2937, file: !2436, line: 491, type: !175)
!2948 = !DILocation(line: 0, scope: !2937)
!2949 = !DILocation(line: 493, column: 17, scope: !2950)
!2950 = distinct !DILexicalBlock(scope: !2937, file: !2436, line: 493, column: 9)
!2951 = !DILocation(line: 493, column: 37, scope: !2950)
!2952 = !DILocation(line: 493, column: 9, scope: !2937)
!2953 = !DILocation(line: 497, column: 20, scope: !2937)
!2954 = !DILocation(line: 503, column: 37, scope: !2955)
!2955 = distinct !DILexicalBlock(scope: !2937, file: !2436, line: 503, column: 9)
!2956 = !DILocation(line: 503, column: 9, scope: !2937)
!2957 = !DILocation(line: 507, column: 37, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2937, file: !2436, line: 507, column: 9)
!2959 = !DILocation(line: 507, column: 45, scope: !2958)
!2960 = !DILocation(line: 507, column: 9, scope: !2937)
!2961 = !DILocation(line: 511, column: 25, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2937, file: !2436, line: 511, column: 9)
!2963 = !DILocation(line: 511, column: 9, scope: !2937)
!2964 = !DILocation(line: 516, column: 12, scope: !2937)
!2965 = !DILocation(line: 519, column: 30, scope: !2937)
!2966 = !DILocation(line: 521, column: 24, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2937, file: !2436, line: 521, column: 9)
!2968 = !DILocation(line: 521, column: 38, scope: !2967)
!2969 = !DILocation(line: 521, column: 9, scope: !2937)
!2970 = !DILocation(line: 522, column: 9, scope: !2971)
!2971 = distinct !DILexicalBlock(scope: !2967, file: !2436, line: 521, column: 48)
!2972 = !DILocation(line: 523, column: 9, scope: !2971)
!2973 = !DILocation(line: 524, column: 38, scope: !2971)
!2974 = !DILocation(line: 525, column: 5, scope: !2971)
!2975 = !DILocation(line: 526, column: 5, scope: !2937)
!2976 = !DILocation(line: 528, column: 23, scope: !2977)
!2977 = distinct !DILexicalBlock(scope: !2937, file: !2436, line: 528, column: 8)
!2978 = !DILocation(line: 528, column: 41, scope: !2977)
!2979 = !DILocation(line: 528, column: 8, scope: !2937)
!2980 = !DILocation(line: 529, column: 51, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2977, file: !2436, line: 528, column: 51)
!2982 = !DILocation(line: 529, column: 24, scope: !2981)
!2983 = !DILocation(line: 530, column: 5, scope: !2981)
!2984 = !DILocation(line: 0, scope: !2977)
!2985 = !DILocation(line: 534, column: 34, scope: !2937)
!2986 = !DILocation(line: 535, column: 39, scope: !2937)
!2987 = !DILocation(line: 537, column: 49, scope: !2937)
!2988 = !DILocation(line: 538, column: 80, scope: !2937)
!2989 = !DILocation(line: 538, column: 33, scope: !2937)
!2990 = !DILocation(line: 538, column: 49, scope: !2937)
!2991 = !DILocation(line: 539, column: 50, scope: !2937)
!2992 = !DILocation(line: 539, column: 61, scope: !2937)
!2993 = !DILocation(line: 540, column: 50, scope: !2937)
!2994 = !DILocation(line: 540, column: 61, scope: !2937)
!2995 = !DILocation(line: 542, column: 5, scope: !2937)
!2996 = !DILocation(line: 546, column: 30, scope: !2937)
!2997 = !DILocation(line: 548, column: 5, scope: !2937)
!2998 = !DILocation(line: 550, column: 5, scope: !2937)
!2999 = !DILocation(line: 551, column: 1, scope: !2937)
!3000 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2436, file: !2436, line: 553, type: !2754, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !3001)
!3001 = !{!3002, !3003, !3004, !3005}
!3002 = !DILocalVariable(name: "handle", arg: 1, scope: !3000, file: !2436, line: 553, type: !175)
!3003 = !DILocalVariable(name: "current_time", scope: !3000, file: !2436, line: 555, type: !175)
!3004 = !DILocalVariable(name: "mask", scope: !3000, file: !2436, line: 556, type: !175)
!3005 = !DILocalVariable(name: "timer", scope: !3000, file: !2436, line: 557, type: !175)
!3006 = !DILocation(line: 0, scope: !3000)
!3007 = !DILocation(line: 559, column: 17, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3000, file: !2436, line: 559, column: 9)
!3009 = !DILocation(line: 559, column: 37, scope: !3008)
!3010 = !DILocation(line: 559, column: 9, scope: !3000)
!3011 = !DILocation(line: 563, column: 20, scope: !3000)
!3012 = !DILocation(line: 565, column: 37, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !3000, file: !2436, line: 565, column: 9)
!3014 = !DILocation(line: 565, column: 48, scope: !3013)
!3015 = !DILocation(line: 565, column: 9, scope: !3000)
!3016 = !DILocation(line: 569, column: 37, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3000, file: !2436, line: 569, column: 9)
!3018 = !DILocation(line: 569, column: 45, scope: !3017)
!3019 = !DILocation(line: 569, column: 9, scope: !3000)
!3020 = !DILocation(line: 574, column: 12, scope: !3000)
!3021 = !DILocation(line: 577, column: 30, scope: !3000)
!3022 = !DILocation(line: 578, column: 5, scope: !3000)
!3023 = !DILocation(line: 579, column: 30, scope: !3000)
!3024 = !DILocation(line: 581, column: 23, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3000, file: !2436, line: 581, column: 8)
!3026 = !DILocation(line: 581, column: 41, scope: !3025)
!3027 = !DILocation(line: 581, column: 8, scope: !3000)
!3028 = !DILocation(line: 582, column: 51, scope: !3029)
!3029 = distinct !DILexicalBlock(scope: !3025, file: !2436, line: 581, column: 51)
!3030 = !DILocation(line: 582, column: 24, scope: !3029)
!3031 = !DILocation(line: 583, column: 5, scope: !3029)
!3032 = !DILocation(line: 0, scope: !3025)
!3033 = !DILocation(line: 587, column: 34, scope: !3000)
!3034 = !DILocation(line: 588, column: 39, scope: !3000)
!3035 = !DILocation(line: 590, column: 44, scope: !3000)
!3036 = !DILocation(line: 592, column: 24, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3000, file: !2436, line: 592, column: 9)
!3038 = !DILocation(line: 592, column: 44, scope: !3037)
!3039 = !DILocation(line: 592, column: 9, scope: !3000)
!3040 = !DILocation(line: 593, column: 9, scope: !3041)
!3041 = distinct !DILexicalBlock(scope: !3037, file: !2436, line: 592, column: 50)
!3042 = !DILocation(line: 594, column: 5, scope: !3041)
!3043 = !DILocation(line: 598, column: 30, scope: !3000)
!3044 = !DILocation(line: 599, column: 5, scope: !3000)
!3045 = !DILocation(line: 601, column: 5, scope: !3000)
!3046 = !DILocation(line: 603, column: 1, scope: !3000)
!3047 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2436, file: !2436, line: 605, type: !3048, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2435, retainedNodes: !3050)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!2531, !175, !938}
!3050 = !{!3051, !3052, !3053, !3054, !3055}
!3051 = !DILocalVariable(name: "handle", arg: 1, scope: !3047, file: !2436, line: 605, type: !175)
!3052 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3047, file: !2436, line: 605, type: !938)
!3053 = !DILocalVariable(name: "current_time", scope: !3047, file: !2436, line: 607, type: !175)
!3054 = !DILocalVariable(name: "mask", scope: !3047, file: !2436, line: 608, type: !175)
!3055 = !DILocalVariable(name: "timer", scope: !3047, file: !2436, line: 609, type: !175)
!3056 = !DILocation(line: 0, scope: !3047)
!3057 = !DILocation(line: 611, column: 17, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3047, file: !2436, line: 611, column: 9)
!3059 = !DILocation(line: 611, column: 37, scope: !3058)
!3060 = !DILocation(line: 611, column: 9, scope: !3047)
!3061 = !DILocation(line: 615, column: 20, scope: !3047)
!3062 = !DILocation(line: 617, column: 37, scope: !3063)
!3063 = distinct !DILexicalBlock(scope: !3047, file: !2436, line: 617, column: 9)
!3064 = !DILocation(line: 617, column: 45, scope: !3063)
!3065 = !DILocation(line: 617, column: 9, scope: !3047)
!3066 = !DILocation(line: 622, column: 12, scope: !3047)
!3067 = !DILocation(line: 624, column: 35, scope: !3047)
!3068 = !DILocation(line: 624, column: 51, scope: !3047)
!3069 = !DILocation(line: 624, column: 76, scope: !3047)
!3070 = !DILocation(line: 624, column: 49, scope: !3047)
!3071 = !DILocation(line: 626, column: 37, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3047, file: !2436, line: 626, column: 9)
!3073 = !DILocation(line: 626, column: 9, scope: !3047)
!3074 = !DILocation(line: 0, scope: !3072)
!3075 = !DILocation(line: 632, column: 5, scope: !3047)
!3076 = !DILocation(line: 634, column: 5, scope: !3047)
!3077 = !DILocation(line: 636, column: 1, scope: !3047)
!3078 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !3, file: !3, line: 56, type: !3079, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3081)
!3079 = !DISubroutineType(types: !3080)
!3080 = !{!175, !175, !175, !175}
!3081 = !{!3082, !3083, !3084, !3085, !3087, !3088}
!3082 = !DILocalVariable(name: "mul1", arg: 1, scope: !3078, file: !3, line: 56, type: !175)
!3083 = !DILocalVariable(name: "mul2", arg: 2, scope: !3078, file: !3, line: 56, type: !175)
!3084 = !DILocalVariable(name: "div", arg: 3, scope: !3078, file: !3, line: 56, type: !175)
!3085 = !DILocalVariable(name: "data1", scope: !3078, file: !3, line: 58, type: !3086)
!3086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 64, elements: !383)
!3087 = !DILocalVariable(name: "data2", scope: !3078, file: !3, line: 59, type: !3086)
!3088 = !DILocalVariable(name: "result", scope: !3078, file: !3, line: 60, type: !3086)
!3089 = !DILocation(line: 0, scope: !3078)
!3090 = !DILocation(line: 63, column: 22, scope: !3078)
!3091 = !DILocation(line: 63, column: 32, scope: !3078)
!3092 = !DILocation(line: 64, column: 23, scope: !3078)
!3093 = !DILocation(line: 64, column: 40, scope: !3078)
!3094 = !DILocation(line: 66, column: 27, scope: !3078)
!3095 = !DILocation(line: 67, column: 27, scope: !3078)
!3096 = !DILocation(line: 67, column: 44, scope: !3078)
!3097 = !DILocation(line: 69, column: 26, scope: !3078)
!3098 = !DILocation(line: 70, column: 36, scope: !3078)
!3099 = !DILocation(line: 70, column: 43, scope: !3078)
!3100 = !DILocation(line: 70, column: 55, scope: !3078)
!3101 = !DILocation(line: 72, column: 34, scope: !3078)
!3102 = !DILocation(line: 72, column: 41, scope: !3078)
!3103 = !DILocation(line: 72, column: 5, scope: !3078)
!3104 = distinct !DISubprogram(name: "gpt_current_count", scope: !3, file: !3, line: 75, type: !3105, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3107)
!3105 = !DISubroutineType(types: !3106)
!3106 = !{!175, !179}
!3107 = !{!3108}
!3108 = !DILocalVariable(name: "gpt", arg: 1, scope: !3104, file: !3, line: 75, type: !179)
!3109 = !DILocation(line: 0, scope: !3104)
!3110 = !DILocation(line: 77, column: 17, scope: !3104)
!3111 = !DILocation(line: 77, column: 5, scope: !3104)
!3112 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !3, file: !3, line: 81, type: !3113, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3115)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{!175, !175}
!3115 = !{!3116}
!3116 = !DILocalVariable(name: "ms", arg: 1, scope: !3112, file: !3, line: 81, type: !175)
!3117 = !DILocation(line: 0, scope: !3112)
!3118 = !DILocation(line: 83, column: 27, scope: !3112)
!3119 = !DILocation(line: 83, column: 37, scope: !3112)
!3120 = !DILocation(line: 83, column: 43, scope: !3112)
!3121 = !DILocation(line: 83, column: 32, scope: !3112)
!3122 = !DILocation(line: 83, column: 53, scope: !3112)
!3123 = !DILocation(line: 83, column: 59, scope: !3112)
!3124 = !DILocation(line: 83, column: 48, scope: !3112)
!3125 = !DILocation(line: 83, column: 70, scope: !3112)
!3126 = !DILocation(line: 83, column: 76, scope: !3112)
!3127 = !DILocation(line: 83, column: 65, scope: !3112)
!3128 = !DILocation(line: 83, column: 5, scope: !3112)
!3129 = !DILocation(line: 90, column: 9, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !207, file: !3, line: 90, column: 9)
!3131 = !DILocation(line: 90, column: 9, scope: !207)
!3132 = !DILocation(line: 91, column: 13, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3134, file: !3, line: 91, column: 13)
!3134 = distinct !DILexicalBlock(scope: !3130, file: !3, line: 90, column: 24)
!3135 = !DILocation(line: 91, column: 13, scope: !3134)
!3136 = !DILocation(line: 92, column: 32, scope: !3137)
!3137 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 91, column: 41)
!3138 = !DILocation(line: 92, column: 30, scope: !3137)
!3139 = !DILocation(line: 93, column: 41, scope: !3140)
!3140 = distinct !DILexicalBlock(scope: !3137, file: !3, line: 93, column: 17)
!3141 = !DILocation(line: 0, scope: !3133)
!3142 = !DILocation(line: 105, column: 1, scope: !207)
!3143 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !3, file: !3, line: 107, type: !208, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !210)
!3144 = !DILocation(line: 109, column: 9, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3143, file: !3, line: 109, column: 9)
!3146 = !DILocation(line: 109, column: 9, scope: !3143)
!3147 = !DILocation(line: 110, column: 9, scope: !3148)
!3148 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 109, column: 61)
!3149 = !DILocation(line: 111, column: 5, scope: !3148)
!3150 = !DILocation(line: 112, column: 1, scope: !3143)
!3151 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !3, file: !3, line: 114, type: !3113, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3152)
!3152 = !{!3153}
!3153 = !DILocalVariable(name: "time_us", arg: 1, scope: !3151, file: !3, line: 114, type: !175)
!3154 = !DILocation(line: 0, scope: !3151)
!3155 = !DILocation(line: 116, column: 5, scope: !3151)
!3156 = !DILocation(line: 118, column: 9, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 118, column: 9)
!3158 = !DILocation(line: 118, column: 9, scope: !3151)
!3159 = !DILocation(line: 120, column: 49, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3157, file: !3, line: 118, column: 37)
!3161 = !DILocation(line: 120, column: 16, scope: !3160)
!3162 = !DILocation(line: 120, column: 9, scope: !3160)
!3163 = !DILocation(line: 0, scope: !3157)
!3164 = !DILocation(line: 125, column: 1, scope: !3151)
!3165 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !3, file: !3, line: 127, type: !3113, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3166)
!3166 = !{!3167}
!3167 = !DILocalVariable(name: "count", arg: 1, scope: !3165, file: !3, line: 127, type: !175)
!3168 = !DILocation(line: 0, scope: !3165)
!3169 = !DILocation(line: 129, column: 5, scope: !3165)
!3170 = !DILocation(line: 131, column: 9, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3165, file: !3, line: 131, column: 9)
!3172 = !DILocation(line: 131, column: 9, scope: !3165)
!3173 = !DILocation(line: 133, column: 69, scope: !3174)
!3174 = distinct !DILexicalBlock(scope: !3171, file: !3, line: 131, column: 37)
!3175 = !DILocation(line: 133, column: 16, scope: !3174)
!3176 = !DILocation(line: 133, column: 9, scope: !3174)
!3177 = !DILocation(line: 0, scope: !3171)
!3178 = !DILocation(line: 138, column: 1, scope: !3165)
!3179 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !3, file: !3, line: 141, type: !3180, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3182)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{null, !179, !175, !175}
!3182 = !{!3183, !3184, !3185}
!3183 = !DILocalVariable(name: "gpt", arg: 1, scope: !3179, file: !3, line: 141, type: !179)
!3184 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3179, file: !3, line: 141, type: !175)
!3185 = !DILocalVariable(name: "divide", arg: 3, scope: !3179, file: !3, line: 141, type: !175)
!3186 = !DILocation(line: 0, scope: !3179)
!3187 = !DILocation(line: 143, column: 5, scope: !3179)
!3188 = !DILocation(line: 145, column: 33, scope: !3179)
!3189 = !DILocation(line: 145, column: 10, scope: !3179)
!3190 = !DILocation(line: 145, column: 18, scope: !3179)
!3191 = !DILocation(line: 148, column: 10, scope: !3179)
!3192 = !DILocation(line: 148, column: 18, scope: !3179)
!3193 = !DILocation(line: 149, column: 1, scope: !3179)
!3194 = distinct !DISubprogram(name: "gpt_delay_time", scope: !3, file: !3, line: 151, type: !3195, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3197)
!3195 = !DISubroutineType(types: !3196)
!3196 = !{null, !179, !690}
!3197 = !{!3198, !3199, !3200, !3201}
!3198 = !DILocalVariable(name: "gpt", arg: 1, scope: !3194, file: !3, line: 151, type: !179)
!3199 = !DILocalVariable(name: "count", arg: 2, scope: !3194, file: !3, line: 151, type: !690)
!3200 = !DILocalVariable(name: "end_count", scope: !3194, file: !3, line: 153, type: !175)
!3201 = !DILocalVariable(name: "current", scope: !3194, file: !3, line: 153, type: !175)
!3202 = !DILocation(line: 0, scope: !3194)
!3203 = !DILocation(line: 155, column: 17, scope: !3194)
!3204 = !DILocation(line: 156, column: 25, scope: !3194)
!3205 = !DILocation(line: 156, column: 33, scope: !3194)
!3206 = !DILocation(line: 159, column: 19, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3194, file: !3, line: 159, column: 9)
!3208 = !DILocation(line: 159, column: 9, scope: !3194)
!3209 = !DILocation(line: 160, column: 16, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3207, file: !3, line: 159, column: 30)
!3211 = !DILocation(line: 160, column: 39, scope: !3210)
!3212 = !DILocation(line: 160, column: 9, scope: !3210)
!3213 = distinct !{!3213, !3212, !3214}
!3214 = !DILocation(line: 160, column: 51, scope: !3210)
!3215 = !DILocation(line: 162, column: 16, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3207, file: !3, line: 161, column: 12)
!3217 = !DILocation(line: 162, column: 39, scope: !3216)
!3218 = !DILocation(line: 162, column: 9, scope: !3216)
!3219 = distinct !{!3219, !3218, !3220}
!3220 = !DILocation(line: 162, column: 50, scope: !3216)
!3221 = !DILocation(line: 163, column: 16, scope: !3216)
!3222 = !DILocation(line: 163, column: 39, scope: !3216)
!3223 = !DILocation(line: 163, column: 9, scope: !3216)
!3224 = distinct !{!3224, !3223, !3225}
!3225 = !DILocation(line: 163, column: 51, scope: !3216)
!3226 = !DILocation(line: 165, column: 1, scope: !3194)
!3227 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !3, file: !3, line: 166, type: !3228, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3230)
!3228 = !DISubroutineType(types: !3229)
!3229 = !{null, !179}
!3230 = !{!3231}
!3231 = !DILocalVariable(name: "gpt", arg: 1, scope: !3227, file: !3, line: 166, type: !179)
!3232 = !DILocation(line: 0, scope: !3227)
!3233 = !DILocation(line: 168, column: 10, scope: !3227)
!3234 = !DILocation(line: 168, column: 22, scope: !3227)
!3235 = !DILocation(line: 169, column: 10, scope: !3227)
!3236 = !DILocation(line: 169, column: 22, scope: !3227)
!3237 = !DILocation(line: 170, column: 21, scope: !3227)
!3238 = !DILocation(line: 171, column: 5, scope: !3227)
!3239 = !DILocation(line: 171, column: 16, scope: !3227)
!3240 = distinct !{!3240, !3238, !3241}
!3241 = !DILocation(line: 171, column: 26, scope: !3227)
!3242 = !DILocation(line: 172, column: 10, scope: !3227)
!3243 = !DILocation(line: 172, column: 22, scope: !3227)
!3244 = !DILocation(line: 173, column: 10, scope: !3227)
!3245 = !DILocation(line: 173, column: 22, scope: !3227)
!3246 = !DILocation(line: 174, column: 10, scope: !3227)
!3247 = !DILocation(line: 174, column: 22, scope: !3227)
!3248 = !DILocation(line: 176, column: 13, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 176, column: 9)
!3250 = !DILocation(line: 176, column: 9, scope: !3227)
!3251 = !DILocation(line: 177, column: 27, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3249, file: !3, line: 176, column: 22)
!3253 = !DILocation(line: 178, column: 5, scope: !3252)
!3254 = !DILocation(line: 179, column: 1, scope: !3227)
!3255 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !3, file: !3, line: 181, type: !3105, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3256)
!3256 = !{!3257, !3258}
!3257 = !DILocalVariable(name: "gpt", arg: 1, scope: !3255, file: !3, line: 181, type: !179)
!3258 = !DILocalVariable(name: "mask", scope: !3255, file: !3, line: 183, type: !184)
!3259 = !DILocation(line: 0, scope: !3255)
!3260 = !DILocation(line: 183, column: 5, scope: !3255)
!3261 = !DILocation(line: 183, column: 23, scope: !3255)
!3262 = !DILocation(line: 185, column: 17, scope: !3255)
!3263 = !DILocation(line: 185, column: 10, scope: !3255)
!3264 = !DILocation(line: 187, column: 22, scope: !3255)
!3265 = !DILocation(line: 189, column: 12, scope: !3255)
!3266 = !DILocation(line: 190, column: 1, scope: !3255)
!3267 = !DILocation(line: 189, column: 5, scope: !3255)
!3268 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !3, file: !3, line: 192, type: !3269, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3271)
!3269 = !DISubroutineType(types: !3270)
!3270 = !{null, !179, !175}
!3271 = !{!3272, !3273}
!3272 = !DILocalVariable(name: "gpt", arg: 1, scope: !3268, file: !3, line: 192, type: !179)
!3273 = !DILocalVariable(name: "mask", arg: 2, scope: !3268, file: !3, line: 192, type: !175)
!3274 = !DILocation(line: 0, scope: !3268)
!3275 = !DILocation(line: 194, column: 10, scope: !3268)
!3276 = !DILocation(line: 194, column: 21, scope: !3268)
!3277 = !DILocation(line: 195, column: 1, scope: !3268)
!3278 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !3, file: !3, line: 197, type: !870, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3279)
!3279 = !{!3280, !3281, !3282, !3283, !3284}
!3280 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3278, file: !3, line: 197, type: !780)
!3281 = !DILocalVariable(name: "i", scope: !3278, file: !3, line: 199, type: !175)
!3282 = !DILocalVariable(name: "mask", scope: !3278, file: !3, line: 200, type: !184)
!3283 = !DILocalVariable(name: "state", scope: !3278, file: !3, line: 201, type: !184)
!3284 = !DILocalVariable(name: "enable", scope: !3278, file: !3, line: 202, type: !184)
!3285 = !DILocation(line: 0, scope: !3278)
!3286 = !DILocation(line: 200, column: 5, scope: !3278)
!3287 = !DILocation(line: 200, column: 23, scope: !3278)
!3288 = !DILocation(line: 201, column: 5, scope: !3278)
!3289 = !DILocation(line: 201, column: 23, scope: !3278)
!3290 = !DILocation(line: 202, column: 5, scope: !3278)
!3291 = !DILocation(line: 202, column: 23, scope: !3278)
!3292 = !DILocation(line: 207, column: 5, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 207, column: 5)
!3294 = !DILocation(line: 209, column: 18, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !3296, file: !3, line: 207, column: 44)
!3296 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 207, column: 5)
!3297 = !DILocation(line: 209, column: 29, scope: !3295)
!3298 = !DILocation(line: 209, column: 16, scope: !3295)
!3299 = !DILocation(line: 210, column: 29, scope: !3295)
!3300 = !DILocation(line: 210, column: 16, scope: !3295)
!3301 = !DILocation(line: 212, column: 16, scope: !3295)
!3302 = !DILocation(line: 212, column: 14, scope: !3295)
!3303 = !DILocation(line: 214, column: 9, scope: !3295)
!3304 = !DILocation(line: 214, column: 20, scope: !3295)
!3305 = !DILocation(line: 214, column: 32, scope: !3295)
!3306 = !DILocation(line: 216, column: 14, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3295, file: !3, line: 216, column: 13)
!3308 = !DILocation(line: 216, column: 20, scope: !3307)
!3309 = !DILocation(line: 216, column: 40, scope: !3307)
!3310 = !DILocation(line: 216, column: 44, scope: !3307)
!3311 = !DILocation(line: 216, column: 51, scope: !3307)
!3312 = !DILocation(line: 216, column: 13, scope: !3295)
!3313 = !DILocation(line: 224, column: 51, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 224, column: 17)
!3315 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 216, column: 70)
!3316 = !DILocation(line: 224, column: 60, scope: !3314)
!3317 = !DILocation(line: 224, column: 17, scope: !3315)
!3318 = !DILocation(line: 225, column: 94, scope: !3319)
!3319 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 224, column: 69)
!3320 = !DILocation(line: 225, column: 17, scope: !3319)
!3321 = !DILocation(line: 226, column: 13, scope: !3319)
!3322 = !DILocation(line: 229, column: 31, scope: !3295)
!3323 = !DILocation(line: 229, column: 42, scope: !3295)
!3324 = !DILocation(line: 229, column: 9, scope: !3295)
!3325 = !DILocation(line: 207, column: 40, scope: !3296)
!3326 = !DILocation(line: 207, column: 19, scope: !3296)
!3327 = distinct !{!3327, !3292, !3328}
!3328 = !DILocation(line: 231, column: 5, scope: !3293)
!3329 = !DILocation(line: 233, column: 1, scope: !3278)
!3330 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !3, file: !3, line: 236, type: !208, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !210)
!3331 = !DILocation(line: 238, column: 5, scope: !3330)
!3332 = !DILocation(line: 239, column: 5, scope: !3330)
!3333 = !DILocation(line: 240, column: 5, scope: !3330)
!3334 = !DILocation(line: 241, column: 1, scope: !3330)
!3335 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !3, file: !3, line: 242, type: !3105, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3336)
!3336 = !{!3337, !3338, !3339, !3340, !3341}
!3337 = !DILocalVariable(name: "gpt", arg: 1, scope: !3335, file: !3, line: 242, type: !179)
!3338 = !DILocalVariable(name: "time", scope: !3335, file: !3, line: 244, type: !184)
!3339 = !DILocalVariable(name: "count", scope: !3335, file: !3, line: 245, type: !175)
!3340 = !DILocalVariable(name: "time_s", scope: !3335, file: !3, line: 245, type: !175)
!3341 = !DILocalVariable(name: "time_ms", scope: !3335, file: !3, line: 245, type: !175)
!3342 = !DILocation(line: 0, scope: !3335)
!3343 = !DILocation(line: 244, column: 5, scope: !3335)
!3344 = !DILocation(line: 244, column: 23, scope: !3335)
!3345 = !DILocation(line: 247, column: 13, scope: !3335)
!3346 = !DILocation(line: 248, column: 20, scope: !3335)
!3347 = !DILocation(line: 249, column: 23, scope: !3335)
!3348 = !DILocation(line: 249, column: 32, scope: !3335)
!3349 = !DILocation(line: 249, column: 39, scope: !3335)
!3350 = !DILocation(line: 249, column: 48, scope: !3335)
!3351 = !DILocation(line: 250, column: 19, scope: !3335)
!3352 = !DILocation(line: 250, column: 26, scope: !3335)
!3353 = !DILocation(line: 250, column: 10, scope: !3335)
!3354 = !DILocation(line: 253, column: 5, scope: !3335)
!3355 = !DILocation(line: 253, column: 30, scope: !3335)
!3356 = !DILocation(line: 253, column: 38, scope: !3335)
!3357 = !DILocation(line: 254, column: 5, scope: !3335)
!3358 = !DILocation(line: 254, column: 36, scope: !3335)
!3359 = distinct !{!3359, !3357, !3360}
!3360 = !DILocation(line: 254, column: 46, scope: !3335)
!3361 = !DILocation(line: 255, column: 12, scope: !3335)
!3362 = !DILocation(line: 256, column: 1, scope: !3335)
!3363 = !DILocation(line: 255, column: 5, scope: !3335)
!3364 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !3, file: !3, line: 258, type: !3365, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3367)
!3365 = !DISubroutineType(types: !3366)
!3366 = !{!175}
!3367 = !{!3368}
!3368 = !DILocalVariable(name: "i", scope: !3364, file: !3, line: 260, type: !175)
!3369 = !DILocation(line: 0, scope: !3364)
!3370 = !DILocation(line: 262, column: 5, scope: !3371)
!3371 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 262, column: 5)
!3372 = !DILocation(line: 263, column: 37, scope: !3373)
!3373 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 263, column: 13)
!3374 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 262, column: 45)
!3375 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 262, column: 5)
!3376 = !DILocation(line: 263, column: 45, scope: !3373)
!3377 = !DILocation(line: 263, column: 13, scope: !3374)
!3378 = !DILocation(line: 262, column: 41, scope: !3375)
!3379 = !DILocation(line: 262, column: 19, scope: !3375)
!3380 = distinct !{!3380, !3370, !3381}
!3381 = !DILocation(line: 266, column: 5, scope: !3371)
!3382 = !DILocation(line: 269, column: 1, scope: !3364)
!3383 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !3, file: !3, line: 271, type: !208, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3384)
!3384 = !{!3385, !3386}
!3385 = !DILocalVariable(name: "minimum_time", scope: !3383, file: !3, line: 273, type: !175)
!3386 = !DILocalVariable(name: "current_timer", scope: !3383, file: !3, line: 273, type: !175)
!3387 = !DILocation(line: 273, column: 5, scope: !3383)
!3388 = !DILocation(line: 275, column: 24, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3383, file: !3, line: 275, column: 9)
!3390 = !DILocation(line: 275, column: 9, scope: !3383)
!3391 = !DILocation(line: 0, scope: !3383)
!3392 = !DILocation(line: 279, column: 5, scope: !3383)
!3393 = !DILocation(line: 282, column: 56, scope: !3383)
!3394 = !DILocation(line: 282, column: 39, scope: !3383)
!3395 = !DILocation(line: 284, column: 30, scope: !3383)
!3396 = !DILocation(line: 285, column: 45, scope: !3383)
!3397 = !DILocation(line: 285, column: 5, scope: !3383)
!3398 = !DILocation(line: 286, column: 30, scope: !3383)
!3399 = !DILocation(line: 287, column: 1, scope: !3383)
!3400 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !3, file: !3, line: 308, type: !3401, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3403)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{null, !938, !938}
!3403 = !{!3404, !3405, !3406, !3407, !3408}
!3404 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !3400, file: !3, line: 308, type: !938)
!3405 = !DILocalVariable(name: "number", arg: 2, scope: !3400, file: !3, line: 308, type: !938)
!3406 = !DILocalVariable(name: "i", scope: !3400, file: !3, line: 310, type: !175)
!3407 = !DILocalVariable(name: "minimum", scope: !3400, file: !3, line: 311, type: !175)
!3408 = !DILocalVariable(name: "data", scope: !3400, file: !3, line: 312, type: !175)
!3409 = !DILocation(line: 0, scope: !3400)
!3410 = !DILocation(line: 314, column: 5, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 314, column: 5)
!3412 = !DILocation(line: 315, column: 37, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3414, file: !3, line: 315, column: 13)
!3414 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 314, column: 45)
!3415 = distinct !DILexicalBlock(scope: !3411, file: !3, line: 314, column: 5)
!3416 = !DILocation(line: 315, column: 13, scope: !3414)
!3417 = !DILocation(line: 316, column: 20, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3413, file: !3, line: 315, column: 57)
!3419 = !DILocation(line: 318, column: 22, scope: !3420)
!3420 = distinct !DILexicalBlock(scope: !3418, file: !3, line: 318, column: 17)
!3421 = !DILocation(line: 318, column: 17, scope: !3418)
!3422 = !DILocation(line: 320, column: 25, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 318, column: 33)
!3424 = !DILocation(line: 321, column: 13, scope: !3423)
!3425 = !DILocation(line: 314, column: 41, scope: !3415)
!3426 = !DILocation(line: 314, column: 19, scope: !3415)
!3427 = distinct !{!3427, !3410, !3428}
!3428 = !DILocation(line: 323, column: 5, scope: !3411)
!3429 = !DILocation(line: 325, column: 19, scope: !3400)
!3430 = !DILocation(line: 326, column: 1, scope: !3400)
!3431 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !3, file: !3, line: 289, type: !3113, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3432)
!3432 = !{!3433, !3434, !3435, !3436}
!3433 = !DILocalVariable(name: "timer_number", arg: 1, scope: !3431, file: !3, line: 289, type: !175)
!3434 = !DILocalVariable(name: "time_out_delta", scope: !3431, file: !3, line: 291, type: !175)
!3435 = !DILocalVariable(name: "current_delta", scope: !3431, file: !3, line: 292, type: !175)
!3436 = !DILocalVariable(name: "ret_value", scope: !3431, file: !3, line: 293, type: !175)
!3437 = !DILocation(line: 0, scope: !3431)
!3438 = !DILocation(line: 295, column: 22, scope: !3431)
!3439 = !DILocation(line: 296, column: 22, scope: !3431)
!3440 = !DILocation(line: 298, column: 24, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3431, file: !3, line: 298, column: 9)
!3442 = !DILocation(line: 298, column: 9, scope: !3431)
!3443 = !DILocation(line: 306, column: 5, scope: !3431)
!3444 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !3, file: !3, line: 329, type: !227, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3445)
!3445 = !{!3446, !3447, !3448, !3449}
!3446 = !DILocalVariable(name: "parameter", arg: 1, scope: !3444, file: !3, line: 329, type: !194)
!3447 = !DILocalVariable(name: "i", scope: !3444, file: !3, line: 331, type: !175)
!3448 = !DILocalVariable(name: "time_ms", scope: !3444, file: !3, line: 332, type: !184)
!3449 = !DILocalVariable(name: "data", scope: !3444, file: !3, line: 333, type: !184)
!3450 = !DILocation(line: 0, scope: !3444)
!3451 = !DILocation(line: 332, column: 5, scope: !3444)
!3452 = !DILocation(line: 332, column: 23, scope: !3444)
!3453 = !DILocation(line: 333, column: 5, scope: !3444)
!3454 = !DILocation(line: 333, column: 23, scope: !3444)
!3455 = !DILocation(line: 336, column: 24, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 336, column: 9)
!3457 = !DILocation(line: 336, column: 41, scope: !3456)
!3458 = !DILocation(line: 336, column: 9, scope: !3444)
!3459 = !DILocation(line: 338, column: 34, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3456, file: !3, line: 336, column: 47)
!3461 = !DILocation(line: 339, column: 9, scope: !3460)
!3462 = !DILocation(line: 340, column: 34, scope: !3460)
!3463 = !DILocation(line: 342, column: 46, scope: !3460)
!3464 = !DILocation(line: 342, column: 19, scope: !3460)
!3465 = !DILocation(line: 342, column: 17, scope: !3460)
!3466 = !DILocation(line: 344, column: 41, scope: !3460)
!3467 = !DILocation(line: 344, column: 38, scope: !3460)
!3468 = !DILocation(line: 345, column: 42, scope: !3460)
!3469 = !DILocation(line: 347, column: 9, scope: !3470)
!3470 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 347, column: 9)
!3471 = !DILocation(line: 348, column: 41, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3473, file: !3, line: 348, column: 17)
!3473 = distinct !DILexicalBlock(scope: !3474, file: !3, line: 347, column: 49)
!3474 = distinct !DILexicalBlock(scope: !3470, file: !3, line: 347, column: 9)
!3475 = !DILocation(line: 348, column: 17, scope: !3473)
!3476 = !DILocation(line: 350, column: 24, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3472, file: !3, line: 348, column: 61)
!3478 = !DILocation(line: 350, column: 22, scope: !3477)
!3479 = !DILocation(line: 352, column: 21, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 352, column: 21)
!3481 = !DILocation(line: 352, column: 26, scope: !3480)
!3482 = !DILocation(line: 352, column: 21, scope: !3477)
!3483 = !DILocation(line: 353, column: 56, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3480, file: !3, line: 352, column: 32)
!3485 = !DILocation(line: 354, column: 55, scope: !3484)
!3486 = !DILocation(line: 356, column: 62, scope: !3484)
!3487 = !DILocation(line: 356, column: 112, scope: !3484)
!3488 = !DILocation(line: 356, column: 21, scope: !3484)
!3489 = !DILocation(line: 357, column: 17, scope: !3484)
!3490 = !DILocation(line: 347, column: 45, scope: !3474)
!3491 = !DILocation(line: 347, column: 23, scope: !3474)
!3492 = distinct !{!3492, !3469, !3493}
!3493 = !DILocation(line: 360, column: 9, scope: !3470)
!3494 = !DILocation(line: 362, column: 42, scope: !3460)
!3495 = !DILocation(line: 364, column: 28, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 364, column: 13)
!3497 = !DILocation(line: 364, column: 48, scope: !3496)
!3498 = !DILocation(line: 364, column: 13, scope: !3460)
!3499 = !DILocation(line: 365, column: 13, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3496, file: !3, line: 364, column: 54)
!3501 = !DILocation(line: 366, column: 9, scope: !3500)
!3502 = !DILocation(line: 369, column: 1, scope: !3444)
!3503 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !264, file: !264, line: 50, type: !3504, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3507)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{!175, !3506}
!3506 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !6, line: 390, baseType: !266)
!3507 = !{!3508, !3509, !3510}
!3508 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3503, file: !264, line: 50, type: !3506)
!3509 = !DILocalVariable(name: "i", scope: !3503, file: !264, line: 52, type: !175)
!3510 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !3503, file: !264, line: 53, type: !826)
!3511 = !DILocation(line: 0, scope: !3503)
!3512 = !DILocation(line: 53, column: 14, scope: !3503)
!3513 = !DILocation(line: 55, column: 5, scope: !3514)
!3514 = distinct !DILexicalBlock(scope: !3503, file: !264, line: 55, column: 5)
!3515 = !DILocation(line: 55, column: 25, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3514, file: !264, line: 55, column: 5)
!3517 = !DILocation(line: 55, column: 19, scope: !3516)
!3518 = distinct !{!3518, !3513, !3519}
!3519 = !DILocation(line: 59, column: 5, scope: !3514)
!3520 = !DILocation(line: 56, column: 13, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3522, file: !264, line: 56, column: 13)
!3522 = distinct !DILexicalBlock(scope: !3516, file: !264, line: 55, column: 29)
!3523 = !DILocation(line: 56, column: 40, scope: !3521)
!3524 = !DILocation(line: 56, column: 13, scope: !3522)
!3525 = !DILocation(line: 61, column: 1, scope: !3503)
!3526 = distinct !DISubprogram(name: "hal_gpio_init", scope: !264, file: !264, line: 66, type: !3527, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3530)
!3527 = !DISubroutineType(types: !3528)
!3528 = !{!3529, !3506}
!3529 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !319, line: 229, baseType: !318)
!3530 = !{!3531}
!3531 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3526, file: !264, line: 66, type: !3506)
!3532 = !DILocation(line: 0, scope: !3526)
!3533 = !DILocation(line: 68, column: 5, scope: !3526)
!3534 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !264, file: !264, line: 72, type: !3527, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3535)
!3535 = !{!3536}
!3536 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3534, file: !264, line: 72, type: !3506)
!3537 = !DILocation(line: 0, scope: !3534)
!3538 = !DILocation(line: 74, column: 5, scope: !3534)
!3539 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !264, file: !264, line: 79, type: !3540, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3542)
!3540 = !DISubroutineType(types: !3541)
!3541 = !{!3529, !3506, !360}
!3542 = !{!3543, !3544, !3545, !3546}
!3543 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3539, file: !264, line: 79, type: !3506)
!3544 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !3539, file: !264, line: 79, type: !360)
!3545 = !DILocalVariable(name: "no", scope: !3539, file: !264, line: 81, type: !175)
!3546 = !DILocalVariable(name: "remainder", scope: !3539, file: !264, line: 82, type: !175)
!3547 = !DILocation(line: 0, scope: !3539)
!3548 = !DILocation(line: 84, column: 18, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3539, file: !264, line: 84, column: 9)
!3550 = !DILocation(line: 84, column: 9, scope: !3539)
!3551 = !DILocation(line: 89, column: 19, scope: !3539)
!3552 = !DILocation(line: 92, column: 26, scope: !3539)
!3553 = !DILocation(line: 94, column: 24, scope: !3554)
!3554 = distinct !DILexicalBlock(scope: !3539, file: !264, line: 94, column: 9)
!3555 = !DILocation(line: 0, scope: !3554)
!3556 = !DILocation(line: 94, column: 9, scope: !3539)
!3557 = !DILocation(line: 101, column: 1, scope: !3539)
!3558 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !264, file: !264, line: 105, type: !3559, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3562)
!3559 = !DISubroutineType(types: !3560)
!3560 = !{!3529, !3506, !3561}
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 32)
!3562 = !{!3563, !3564, !3565, !3566, !3567}
!3563 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3558, file: !264, line: 105, type: !3506)
!3564 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !3558, file: !264, line: 105, type: !3561)
!3565 = !DILocalVariable(name: "no", scope: !3558, file: !264, line: 107, type: !175)
!3566 = !DILocalVariable(name: "remainder", scope: !3558, file: !264, line: 108, type: !175)
!3567 = !DILocalVariable(name: "temp", scope: !3558, file: !264, line: 109, type: !175)
!3568 = !DILocation(line: 0, scope: !3558)
!3569 = !DILocation(line: 111, column: 18, scope: !3570)
!3570 = distinct !DILexicalBlock(scope: !3558, file: !264, line: 111, column: 9)
!3571 = !DILocation(line: 111, column: 9, scope: !3558)
!3572 = !DILocation(line: 115, column: 14, scope: !3573)
!3573 = distinct !DILexicalBlock(scope: !3558, file: !264, line: 115, column: 9)
!3574 = !DILocation(line: 115, column: 9, scope: !3558)
!3575 = !DILocation(line: 120, column: 19, scope: !3558)
!3576 = !DILocation(line: 123, column: 26, scope: !3558)
!3577 = !DILocation(line: 125, column: 12, scope: !3558)
!3578 = !DILocation(line: 125, column: 54, scope: !3558)
!3579 = !DILocation(line: 126, column: 45, scope: !3558)
!3580 = !DILocation(line: 126, column: 17, scope: !3558)
!3581 = !DILocation(line: 127, column: 51, scope: !3558)
!3582 = !DILocation(line: 127, column: 21, scope: !3558)
!3583 = !DILocation(line: 128, column: 5, scope: !3558)
!3584 = !DILocation(line: 130, column: 1, scope: !3558)
!3585 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !264, file: !264, line: 134, type: !3586, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3589)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{!3588, !3506, !378}
!3588 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !319, line: 238, baseType: !329)
!3589 = !{!3590, !3591, !3592, !3593, !3594}
!3590 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3585, file: !264, line: 134, type: !3506)
!3591 = !DILocalVariable(name: "function_index", arg: 2, scope: !3585, file: !264, line: 134, type: !378)
!3592 = !DILocalVariable(name: "no", scope: !3585, file: !264, line: 136, type: !175)
!3593 = !DILocalVariable(name: "remainder", scope: !3585, file: !264, line: 137, type: !175)
!3594 = !DILocalVariable(name: "irq_status", scope: !3585, file: !264, line: 138, type: !175)
!3595 = !DILocation(line: 0, scope: !3585)
!3596 = !DILocation(line: 140, column: 18, scope: !3597)
!3597 = distinct !DILexicalBlock(scope: !3585, file: !264, line: 140, column: 9)
!3598 = !DILocation(line: 140, column: 9, scope: !3585)
!3599 = !DILocation(line: 145, column: 24, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3585, file: !264, line: 145, column: 9)
!3601 = !DILocation(line: 145, column: 9, scope: !3585)
!3602 = !DILocation(line: 145, column: 9, scope: !3600)
!3603 = !DILocation(line: 150, column: 19, scope: !3585)
!3604 = !DILocation(line: 156, column: 18, scope: !3585)
!3605 = !DILocation(line: 157, column: 105, scope: !3585)
!3606 = !DILocation(line: 157, column: 91, scope: !3585)
!3607 = !DILocation(line: 157, column: 5, scope: !3585)
!3608 = !DILocation(line: 157, column: 48, scope: !3585)
!3609 = !DILocation(line: 157, column: 62, scope: !3585)
!3610 = !DILocation(line: 158, column: 80, scope: !3585)
!3611 = !DILocation(line: 158, column: 5, scope: !3585)
!3612 = !DILocation(line: 158, column: 48, scope: !3585)
!3613 = !DILocation(line: 158, column: 62, scope: !3585)
!3614 = !DILocation(line: 159, column: 5, scope: !3585)
!3615 = !DILocation(line: 160, column: 5, scope: !3585)
!3616 = !DILocation(line: 162, column: 1, scope: !3585)
!3617 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !264, file: !264, line: 166, type: !3618, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3621)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!3529, !3506, !3620}
!3620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 32)
!3621 = !{!3622, !3623, !3624, !3625, !3626}
!3622 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3617, file: !264, line: 166, type: !3506)
!3623 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !3617, file: !264, line: 166, type: !3620)
!3624 = !DILocalVariable(name: "no", scope: !3617, file: !264, line: 168, type: !175)
!3625 = !DILocalVariable(name: "remainder", scope: !3617, file: !264, line: 169, type: !175)
!3626 = !DILocalVariable(name: "temp", scope: !3617, file: !264, line: 170, type: !175)
!3627 = !DILocation(line: 0, scope: !3617)
!3628 = !DILocation(line: 172, column: 18, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3617, file: !264, line: 172, column: 9)
!3630 = !DILocation(line: 172, column: 9, scope: !3617)
!3631 = !DILocation(line: 176, column: 14, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3617, file: !264, line: 176, column: 9)
!3633 = !DILocation(line: 176, column: 9, scope: !3617)
!3634 = !DILocation(line: 181, column: 19, scope: !3617)
!3635 = !DILocation(line: 184, column: 26, scope: !3617)
!3636 = !DILocation(line: 186, column: 12, scope: !3617)
!3637 = !DILocation(line: 186, column: 54, scope: !3617)
!3638 = !DILocation(line: 187, column: 45, scope: !3617)
!3639 = !DILocation(line: 187, column: 17, scope: !3617)
!3640 = !DILocation(line: 188, column: 41, scope: !3617)
!3641 = !DILocation(line: 188, column: 16, scope: !3617)
!3642 = !DILocation(line: 189, column: 5, scope: !3617)
!3643 = !DILocation(line: 191, column: 1, scope: !3617)
!3644 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !264, file: !264, line: 195, type: !3645, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3647)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{!3529, !3506, !361}
!3647 = !{!3648, !3649, !3650, !3651}
!3648 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3644, file: !264, line: 195, type: !3506)
!3649 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !3644, file: !264, line: 195, type: !361)
!3650 = !DILocalVariable(name: "no", scope: !3644, file: !264, line: 197, type: !175)
!3651 = !DILocalVariable(name: "remainder", scope: !3644, file: !264, line: 198, type: !175)
!3652 = !DILocation(line: 0, scope: !3644)
!3653 = !DILocation(line: 200, column: 18, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3644, file: !264, line: 200, column: 9)
!3655 = !DILocation(line: 200, column: 9, scope: !3644)
!3656 = !DILocation(line: 205, column: 19, scope: !3644)
!3657 = !DILocation(line: 208, column: 26, scope: !3644)
!3658 = !DILocation(line: 210, column: 9, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3644, file: !264, line: 210, column: 9)
!3660 = !DILocation(line: 0, scope: !3659)
!3661 = !DILocation(line: 210, column: 9, scope: !3644)
!3662 = !DILocation(line: 216, column: 1, scope: !3644)
!3663 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !264, file: !264, line: 220, type: !3618, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3664)
!3664 = !{!3665, !3666, !3667, !3668, !3669}
!3665 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3663, file: !264, line: 220, type: !3506)
!3666 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !3663, file: !264, line: 220, type: !3620)
!3667 = !DILocalVariable(name: "no", scope: !3663, file: !264, line: 222, type: !175)
!3668 = !DILocalVariable(name: "remainder", scope: !3663, file: !264, line: 223, type: !175)
!3669 = !DILocalVariable(name: "temp", scope: !3663, file: !264, line: 224, type: !175)
!3670 = !DILocation(line: 0, scope: !3663)
!3671 = !DILocation(line: 226, column: 18, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3663, file: !264, line: 226, column: 9)
!3673 = !DILocation(line: 226, column: 9, scope: !3663)
!3674 = !DILocation(line: 230, column: 14, scope: !3675)
!3675 = distinct !DILexicalBlock(scope: !3663, file: !264, line: 230, column: 9)
!3676 = !DILocation(line: 230, column: 9, scope: !3663)
!3677 = !DILocation(line: 235, column: 19, scope: !3663)
!3678 = !DILocation(line: 238, column: 26, scope: !3663)
!3679 = !DILocation(line: 240, column: 12, scope: !3663)
!3680 = !DILocation(line: 240, column: 55, scope: !3663)
!3681 = !DILocation(line: 241, column: 45, scope: !3663)
!3682 = !DILocation(line: 241, column: 17, scope: !3663)
!3683 = !DILocation(line: 242, column: 41, scope: !3663)
!3684 = !DILocation(line: 242, column: 16, scope: !3663)
!3685 = !DILocation(line: 243, column: 5, scope: !3663)
!3686 = !DILocation(line: 245, column: 1, scope: !3663)
!3687 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !264, file: !264, line: 249, type: !3527, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3688)
!3688 = !{!3689, !3690, !3691, !3692}
!3689 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3687, file: !264, line: 249, type: !3506)
!3690 = !DILocalVariable(name: "no", scope: !3687, file: !264, line: 251, type: !175)
!3691 = !DILocalVariable(name: "remainder", scope: !3687, file: !264, line: 252, type: !175)
!3692 = !DILocalVariable(name: "temp", scope: !3687, file: !264, line: 253, type: !175)
!3693 = !DILocation(line: 0, scope: !3687)
!3694 = !DILocation(line: 255, column: 18, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3687, file: !264, line: 255, column: 9)
!3696 = !DILocation(line: 255, column: 9, scope: !3687)
!3697 = !DILocation(line: 260, column: 19, scope: !3687)
!3698 = !DILocation(line: 263, column: 26, scope: !3687)
!3699 = !DILocation(line: 265, column: 12, scope: !3687)
!3700 = !DILocation(line: 265, column: 55, scope: !3687)
!3701 = !DILocation(line: 266, column: 45, scope: !3687)
!3702 = !DILocation(line: 266, column: 17, scope: !3687)
!3703 = !DILocation(line: 267, column: 15, scope: !3704)
!3704 = distinct !DILexicalBlock(scope: !3687, file: !264, line: 267, column: 9)
!3705 = !DILocation(line: 267, column: 9, scope: !3687)
!3706 = !DILocation(line: 0, scope: !3704)
!3707 = !DILocation(line: 273, column: 1, scope: !3687)
!3708 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !264, file: !264, line: 278, type: !3527, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3709)
!3709 = !{!3710, !3711, !3712}
!3710 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3708, file: !264, line: 278, type: !3506)
!3711 = !DILocalVariable(name: "no", scope: !3708, file: !264, line: 280, type: !175)
!3712 = !DILocalVariable(name: "remainder", scope: !3708, file: !264, line: 281, type: !175)
!3713 = !DILocation(line: 0, scope: !3708)
!3714 = !DILocation(line: 283, column: 18, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3708, file: !264, line: 283, column: 9)
!3716 = !DILocation(line: 283, column: 9, scope: !3708)
!3717 = !DILocation(line: 288, column: 19, scope: !3708)
!3718 = !DILocation(line: 291, column: 26, scope: !3708)
!3719 = !DILocation(line: 293, column: 90, scope: !3708)
!3720 = !DILocation(line: 293, column: 5, scope: !3708)
!3721 = !DILocation(line: 293, column: 48, scope: !3708)
!3722 = !DILocation(line: 293, column: 62, scope: !3708)
!3723 = !DILocation(line: 294, column: 5, scope: !3708)
!3724 = !DILocation(line: 295, column: 1, scope: !3708)
!3725 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !264, file: !264, line: 299, type: !3527, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3726)
!3726 = !{!3727, !3728, !3729}
!3727 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3725, file: !264, line: 299, type: !3506)
!3728 = !DILocalVariable(name: "no", scope: !3725, file: !264, line: 301, type: !175)
!3729 = !DILocalVariable(name: "remainder", scope: !3725, file: !264, line: 302, type: !175)
!3730 = !DILocation(line: 0, scope: !3725)
!3731 = !DILocation(line: 304, column: 18, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3725, file: !264, line: 304, column: 9)
!3733 = !DILocation(line: 304, column: 9, scope: !3725)
!3734 = !DILocation(line: 309, column: 19, scope: !3725)
!3735 = !DILocation(line: 312, column: 26, scope: !3725)
!3736 = !DILocation(line: 314, column: 90, scope: !3725)
!3737 = !DILocation(line: 314, column: 5, scope: !3725)
!3738 = !DILocation(line: 314, column: 48, scope: !3725)
!3739 = !DILocation(line: 314, column: 62, scope: !3725)
!3740 = !DILocation(line: 315, column: 5, scope: !3725)
!3741 = !DILocation(line: 316, column: 1, scope: !3725)
!3742 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !264, file: !264, line: 321, type: !3527, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3743)
!3743 = !{!3744, !3745, !3746}
!3744 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3742, file: !264, line: 321, type: !3506)
!3745 = !DILocalVariable(name: "no", scope: !3742, file: !264, line: 323, type: !175)
!3746 = !DILocalVariable(name: "remainder", scope: !3742, file: !264, line: 324, type: !175)
!3747 = !DILocation(line: 0, scope: !3742)
!3748 = !DILocation(line: 326, column: 19, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3742, file: !264, line: 326, column: 9)
!3750 = !DILocation(line: 326, column: 36, scope: !3749)
!3751 = !DILocation(line: 326, column: 41, scope: !3749)
!3752 = !DILocation(line: 326, column: 9, scope: !3742)
!3753 = !DILocation(line: 331, column: 19, scope: !3742)
!3754 = !DILocation(line: 334, column: 26, scope: !3742)
!3755 = !DILocation(line: 336, column: 94, scope: !3742)
!3756 = !DILocation(line: 336, column: 5, scope: !3742)
!3757 = !DILocation(line: 336, column: 50, scope: !3742)
!3758 = !DILocation(line: 336, column: 66, scope: !3742)
!3759 = !DILocation(line: 337, column: 5, scope: !3742)
!3760 = !DILocation(line: 337, column: 51, scope: !3742)
!3761 = !DILocation(line: 337, column: 68, scope: !3742)
!3762 = !DILocation(line: 338, column: 5, scope: !3742)
!3763 = !DILocation(line: 339, column: 1, scope: !3742)
!3764 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !264, file: !264, line: 343, type: !3527, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3765)
!3765 = !{!3766, !3767, !3768}
!3766 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3764, file: !264, line: 343, type: !3506)
!3767 = !DILocalVariable(name: "no", scope: !3764, file: !264, line: 345, type: !175)
!3768 = !DILocalVariable(name: "remainder", scope: !3764, file: !264, line: 346, type: !175)
!3769 = !DILocation(line: 0, scope: !3764)
!3770 = !DILocation(line: 348, column: 19, scope: !3771)
!3771 = distinct !DILexicalBlock(scope: !3764, file: !264, line: 348, column: 9)
!3772 = !DILocation(line: 348, column: 36, scope: !3771)
!3773 = !DILocation(line: 348, column: 41, scope: !3771)
!3774 = !DILocation(line: 348, column: 9, scope: !3764)
!3775 = !DILocation(line: 353, column: 19, scope: !3764)
!3776 = !DILocation(line: 356, column: 26, scope: !3764)
!3777 = !DILocation(line: 358, column: 94, scope: !3764)
!3778 = !DILocation(line: 358, column: 5, scope: !3764)
!3779 = !DILocation(line: 358, column: 50, scope: !3764)
!3780 = !DILocation(line: 358, column: 66, scope: !3764)
!3781 = !DILocation(line: 359, column: 5, scope: !3764)
!3782 = !DILocation(line: 359, column: 51, scope: !3764)
!3783 = !DILocation(line: 359, column: 68, scope: !3764)
!3784 = !DILocation(line: 360, column: 5, scope: !3764)
!3785 = !DILocation(line: 361, column: 1, scope: !3764)
!3786 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !264, file: !264, line: 365, type: !3527, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3787)
!3787 = !{!3788, !3789, !3790}
!3788 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3786, file: !264, line: 365, type: !3506)
!3789 = !DILocalVariable(name: "no", scope: !3786, file: !264, line: 367, type: !175)
!3790 = !DILocalVariable(name: "remainder", scope: !3786, file: !264, line: 368, type: !175)
!3791 = !DILocation(line: 0, scope: !3786)
!3792 = !DILocation(line: 370, column: 19, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3786, file: !264, line: 370, column: 9)
!3794 = !DILocation(line: 370, column: 36, scope: !3793)
!3795 = !DILocation(line: 370, column: 41, scope: !3793)
!3796 = !DILocation(line: 370, column: 9, scope: !3786)
!3797 = !DILocation(line: 375, column: 19, scope: !3786)
!3798 = !DILocation(line: 378, column: 26, scope: !3786)
!3799 = !DILocation(line: 380, column: 94, scope: !3786)
!3800 = !DILocation(line: 380, column: 5, scope: !3786)
!3801 = !DILocation(line: 380, column: 50, scope: !3786)
!3802 = !DILocation(line: 380, column: 66, scope: !3786)
!3803 = !DILocation(line: 381, column: 5, scope: !3786)
!3804 = !DILocation(line: 382, column: 1, scope: !3786)
!3805 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !264, file: !264, line: 387, type: !3806, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3810)
!3806 = !DISubroutineType(types: !3807)
!3807 = !{!3529, !3808, !3809}
!3808 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !6, line: 423, baseType: !339)
!3809 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !6, line: 431, baseType: !348)
!3810 = !{!3811, !3812}
!3811 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !3805, file: !264, line: 387, type: !3808)
!3812 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !3805, file: !264, line: 387, type: !3809)
!3813 = !DILocation(line: 0, scope: !3805)
!3814 = !DILocation(line: 390, column: 24, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3805, file: !264, line: 390, column: 9)
!3816 = !DILocation(line: 390, column: 9, scope: !3805)
!3817 = !DILocation(line: 394, column: 5, scope: !3805)
!3818 = !DILocation(line: 394, column: 62, scope: !3805)
!3819 = !DILocation(line: 394, column: 74, scope: !3805)
!3820 = !DILocation(line: 395, column: 5, scope: !3805)
!3821 = !DILocation(line: 396, column: 1, scope: !3805)
!3822 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !264, file: !264, line: 403, type: !3823, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3825)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{!3529, !3506, !378, !378, !378}
!3825 = !{!3826, !3827, !3828, !3829, !3830, !3831}
!3826 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3822, file: !264, line: 403, type: !3506)
!3827 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !3822, file: !264, line: 403, type: !378)
!3828 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !3822, file: !264, line: 403, type: !378)
!3829 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !3822, file: !264, line: 403, type: !378)
!3830 = !DILocalVariable(name: "no", scope: !3822, file: !264, line: 405, type: !175)
!3831 = !DILocalVariable(name: "remainder", scope: !3822, file: !264, line: 406, type: !175)
!3832 = !DILocation(line: 0, scope: !3822)
!3833 = !DILocation(line: 408, column: 19, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3822, file: !264, line: 408, column: 9)
!3835 = !DILocation(line: 408, column: 36, scope: !3834)
!3836 = !DILocation(line: 408, column: 40, scope: !3834)
!3837 = !DILocation(line: 408, column: 9, scope: !3822)
!3838 = !DILocation(line: 413, column: 19, scope: !3822)
!3839 = !DILocation(line: 416, column: 26, scope: !3822)
!3840 = !DILocation(line: 418, column: 9, scope: !3841)
!3841 = distinct !DILexicalBlock(scope: !3822, file: !264, line: 418, column: 9)
!3842 = !DILocation(line: 0, scope: !3841)
!3843 = !DILocation(line: 418, column: 9, scope: !3822)
!3844 = !DILocation(line: 424, column: 9, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3822, file: !264, line: 424, column: 9)
!3846 = !DILocation(line: 0, scope: !3845)
!3847 = !DILocation(line: 424, column: 9, scope: !3822)
!3848 = !DILocation(line: 430, column: 9, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3822, file: !264, line: 430, column: 9)
!3850 = !DILocation(line: 0, scope: !3849)
!3851 = !DILocation(line: 430, column: 9, scope: !3822)
!3852 = !DILocation(line: 436, column: 1, scope: !3822)
!3853 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !264, file: !264, line: 441, type: !3527, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3854)
!3854 = !{!3855, !3856, !3857, !3858, !3859, !3860, !3861}
!3855 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3853, file: !264, line: 441, type: !3506)
!3856 = !DILocalVariable(name: "no1", scope: !3853, file: !264, line: 443, type: !175)
!3857 = !DILocalVariable(name: "no2", scope: !3853, file: !264, line: 443, type: !175)
!3858 = !DILocalVariable(name: "no3", scope: !3853, file: !264, line: 443, type: !175)
!3859 = !DILocalVariable(name: "remainder1", scope: !3853, file: !264, line: 444, type: !175)
!3860 = !DILocalVariable(name: "remainder2", scope: !3853, file: !264, line: 444, type: !175)
!3861 = !DILocalVariable(name: "remainder3", scope: !3853, file: !264, line: 444, type: !175)
!3862 = !DILocation(line: 0, scope: !3853)
!3863 = !DILocation(line: 446, column: 18, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3853, file: !264, line: 446, column: 9)
!3865 = !DILocation(line: 446, column: 9, scope: !3853)
!3866 = !DILocation(line: 451, column: 20, scope: !3853)
!3867 = !DILocation(line: 454, column: 27, scope: !3853)
!3868 = !DILocation(line: 457, column: 20, scope: !3853)
!3869 = !DILocation(line: 463, column: 20, scope: !3853)
!3870 = !DILocation(line: 469, column: 107, scope: !3853)
!3871 = !DILocation(line: 469, column: 92, scope: !3853)
!3872 = !DILocation(line: 469, column: 5, scope: !3853)
!3873 = !DILocation(line: 469, column: 49, scope: !3853)
!3874 = !DILocation(line: 469, column: 63, scope: !3853)
!3875 = !DILocation(line: 472, column: 89, scope: !3853)
!3876 = !DILocation(line: 472, column: 5, scope: !3853)
!3877 = !DILocation(line: 472, column: 48, scope: !3853)
!3878 = !DILocation(line: 472, column: 61, scope: !3853)
!3879 = !DILocation(line: 475, column: 5, scope: !3853)
!3880 = !DILocation(line: 475, column: 48, scope: !3853)
!3881 = !DILocation(line: 475, column: 61, scope: !3853)
!3882 = !DILocation(line: 478, column: 9, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3853, file: !264, line: 478, column: 9)
!3884 = !DILocation(line: 0, scope: !3883)
!3885 = !DILocation(line: 478, column: 9, scope: !3853)
!3886 = !DILocation(line: 479, column: 55, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3883, file: !264, line: 478, column: 40)
!3888 = !DILocation(line: 480, column: 5, scope: !3887)
!3889 = !DILocation(line: 483, column: 53, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3883, file: !264, line: 482, column: 10)
!3891 = !DILocation(line: 483, column: 67, scope: !3890)
!3892 = !DILocation(line: 484, column: 9, scope: !3890)
!3893 = !DILocation(line: 484, column: 55, scope: !3890)
!3894 = !DILocation(line: 484, column: 71, scope: !3890)
!3895 = !DILocation(line: 485, column: 9, scope: !3890)
!3896 = !DILocation(line: 485, column: 55, scope: !3890)
!3897 = !DILocation(line: 490, column: 5, scope: !3853)
!3898 = !DILocation(line: 490, column: 48, scope: !3853)
!3899 = !DILocation(line: 490, column: 61, scope: !3853)
!3900 = !DILocation(line: 493, column: 5, scope: !3853)
!3901 = !DILocation(line: 493, column: 47, scope: !3853)
!3902 = !DILocation(line: 493, column: 59, scope: !3853)
!3903 = !DILocation(line: 496, column: 108, scope: !3853)
!3904 = !DILocation(line: 496, column: 93, scope: !3853)
!3905 = !DILocation(line: 496, column: 5, scope: !3853)
!3906 = !DILocation(line: 496, column: 50, scope: !3853)
!3907 = !DILocation(line: 496, column: 65, scope: !3853)
!3908 = !DILocation(line: 498, column: 5, scope: !3853)
!3909 = !DILocation(line: 499, column: 1, scope: !3853)
!3910 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !264, file: !264, line: 502, type: !3527, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3911)
!3911 = !{!3912, !3913, !3914, !3915, !3916}
!3912 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3910, file: !264, line: 502, type: !3506)
!3913 = !DILocalVariable(name: "no1", scope: !3910, file: !264, line: 504, type: !175)
!3914 = !DILocalVariable(name: "no2", scope: !3910, file: !264, line: 504, type: !175)
!3915 = !DILocalVariable(name: "remainder1", scope: !3910, file: !264, line: 505, type: !175)
!3916 = !DILocalVariable(name: "remainder2", scope: !3910, file: !264, line: 505, type: !175)
!3917 = !DILocation(line: 0, scope: !3910)
!3918 = !DILocation(line: 507, column: 18, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3910, file: !264, line: 507, column: 9)
!3920 = !DILocation(line: 507, column: 9, scope: !3910)
!3921 = !DILocation(line: 512, column: 20, scope: !3910)
!3922 = !DILocation(line: 515, column: 27, scope: !3910)
!3923 = !DILocation(line: 518, column: 20, scope: !3910)
!3924 = !DILocation(line: 524, column: 107, scope: !3910)
!3925 = !DILocation(line: 524, column: 92, scope: !3910)
!3926 = !DILocation(line: 524, column: 5, scope: !3910)
!3927 = !DILocation(line: 524, column: 49, scope: !3910)
!3928 = !DILocation(line: 524, column: 63, scope: !3910)
!3929 = !DILocation(line: 527, column: 89, scope: !3910)
!3930 = !DILocation(line: 527, column: 5, scope: !3910)
!3931 = !DILocation(line: 527, column: 48, scope: !3910)
!3932 = !DILocation(line: 527, column: 61, scope: !3910)
!3933 = !DILocation(line: 530, column: 9, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3910, file: !264, line: 530, column: 9)
!3935 = !DILocation(line: 0, scope: !3934)
!3936 = !DILocation(line: 530, column: 9, scope: !3910)
!3937 = !DILocation(line: 531, column: 55, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3934, file: !264, line: 530, column: 40)
!3939 = !DILocation(line: 531, column: 71, scope: !3938)
!3940 = !DILocation(line: 532, column: 9, scope: !3938)
!3941 = !DILocation(line: 532, column: 56, scope: !3938)
!3942 = !DILocation(line: 533, column: 5, scope: !3938)
!3943 = !DILocation(line: 536, column: 53, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3934, file: !264, line: 535, column: 10)
!3945 = !DILocation(line: 536, column: 67, scope: !3944)
!3946 = !DILocation(line: 537, column: 9, scope: !3944)
!3947 = !DILocation(line: 537, column: 55, scope: !3944)
!3948 = !DILocation(line: 537, column: 71, scope: !3944)
!3949 = !DILocation(line: 538, column: 9, scope: !3944)
!3950 = !DILocation(line: 538, column: 55, scope: !3944)
!3951 = !DILocation(line: 543, column: 5, scope: !3910)
!3952 = !DILocation(line: 543, column: 48, scope: !3910)
!3953 = !DILocation(line: 543, column: 61, scope: !3910)
!3954 = !DILocation(line: 546, column: 5, scope: !3910)
!3955 = !DILocation(line: 546, column: 47, scope: !3910)
!3956 = !DILocation(line: 546, column: 59, scope: !3910)
!3957 = !DILocation(line: 549, column: 5, scope: !3910)
!3958 = !DILocation(line: 550, column: 1, scope: !3910)
!3959 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !264, file: !264, line: 554, type: !3960, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3962)
!3960 = !DISubroutineType(types: !3961)
!3961 = !{!3529, !3506, !362}
!3962 = !{!3963, !3964, !3965, !3966}
!3963 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3959, file: !264, line: 554, type: !3506)
!3964 = !DILocalVariable(name: "driving", arg: 2, scope: !3959, file: !264, line: 554, type: !362)
!3965 = !DILocalVariable(name: "no", scope: !3959, file: !264, line: 556, type: !175)
!3966 = !DILocalVariable(name: "remainder", scope: !3959, file: !264, line: 557, type: !175)
!3967 = !DILocation(line: 0, scope: !3959)
!3968 = !DILocation(line: 559, column: 19, scope: !3969)
!3969 = distinct !DILexicalBlock(scope: !3959, file: !264, line: 559, column: 9)
!3970 = !DILocation(line: 559, column: 9, scope: !3959)
!3971 = !DILocation(line: 564, column: 19, scope: !3959)
!3972 = !DILocation(line: 569, column: 102, scope: !3959)
!3973 = !DILocation(line: 569, column: 88, scope: !3959)
!3974 = !DILocation(line: 569, column: 5, scope: !3959)
!3975 = !DILocation(line: 569, column: 47, scope: !3959)
!3976 = !DILocation(line: 569, column: 60, scope: !3959)
!3977 = !DILocation(line: 570, column: 71, scope: !3959)
!3978 = !DILocation(line: 570, column: 5, scope: !3959)
!3979 = !DILocation(line: 570, column: 47, scope: !3959)
!3980 = !DILocation(line: 570, column: 60, scope: !3959)
!3981 = !DILocation(line: 571, column: 5, scope: !3959)
!3982 = !DILocation(line: 572, column: 1, scope: !3959)
!3983 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !264, file: !264, line: 575, type: !3984, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !263, retainedNodes: !3987)
!3984 = !DISubroutineType(types: !3985)
!3985 = !{!3529, !3506, !3986}
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 32)
!3987 = !{!3988, !3989, !3990, !3991, !3992}
!3988 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !3983, file: !264, line: 575, type: !3506)
!3989 = !DILocalVariable(name: "driving", arg: 2, scope: !3983, file: !264, line: 575, type: !3986)
!3990 = !DILocalVariable(name: "no", scope: !3983, file: !264, line: 577, type: !175)
!3991 = !DILocalVariable(name: "remainder", scope: !3983, file: !264, line: 578, type: !175)
!3992 = !DILocalVariable(name: "temp", scope: !3983, file: !264, line: 579, type: !175)
!3993 = !DILocation(line: 0, scope: !3983)
!3994 = !DILocation(line: 581, column: 19, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3983, file: !264, line: 581, column: 9)
!3996 = !DILocation(line: 581, column: 9, scope: !3983)
!3997 = !DILocation(line: 585, column: 14, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3983, file: !264, line: 585, column: 9)
!3999 = !DILocation(line: 585, column: 9, scope: !3983)
!4000 = !DILocation(line: 590, column: 19, scope: !3983)
!4001 = !DILocation(line: 595, column: 12, scope: !3983)
!4002 = !DILocation(line: 595, column: 54, scope: !3983)
!4003 = !DILocation(line: 596, column: 59, scope: !3983)
!4004 = !DILocation(line: 596, column: 45, scope: !3983)
!4005 = !DILocation(line: 596, column: 17, scope: !3983)
!4006 = !DILocation(line: 597, column: 18, scope: !3983)
!4007 = !DILocation(line: 600, column: 56, scope: !3983)
!4008 = !DILocation(line: 600, column: 14, scope: !3983)
!4009 = !DILocation(line: 602, column: 5, scope: !3983)
!4010 = !DILocation(line: 603, column: 1, scope: !3983)
!4011 = distinct !DISubprogram(name: "uart_receive_handler", scope: !547, file: !547, line: 146, type: !4012, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4014)
!4012 = !DISubroutineType(types: !4013)
!4013 = !{null, !653, !211}
!4014 = !{!4015, !4016, !4017, !4019, !4020, !4021, !4022, !4078}
!4015 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4011, file: !547, line: 146, type: !653)
!4016 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4011, file: !547, line: 146, type: !211)
!4017 = !DILocalVariable(name: "channel", scope: !4011, file: !547, line: 148, type: !4018)
!4018 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !557, line: 203, baseType: !556)
!4019 = !DILocalVariable(name: "avail_bytes", scope: !4011, file: !547, line: 149, type: !175)
!4020 = !DILocalVariable(name: "callback", scope: !4011, file: !547, line: 150, type: !662)
!4021 = !DILocalVariable(name: "arg", scope: !4011, file: !547, line: 151, type: !194)
!4022 = !DILocalVariable(name: "uartx", scope: !4011, file: !547, line: 152, type: !4023)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 32)
!4024 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !78, line: 588, baseType: !4025)
!4025 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 542, size: 800, elements: !4026)
!4026 = !{!4027, !4033, !4038, !4044, !4045, !4050, !4055, !4056, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4068, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4025, file: !78, line: 547, baseType: !4028, size: 32)
!4028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4025, file: !78, line: 543, size: 32, elements: !4029)
!4029 = !{!4030, !4031, !4032}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4028, file: !78, line: 544, baseType: !188, size: 32)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4028, file: !78, line: 545, baseType: !184, size: 32)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4028, file: !78, line: 546, baseType: !184, size: 32)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4025, file: !78, line: 551, baseType: !4034, size: 32, offset: 32)
!4034 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4025, file: !78, line: 548, size: 32, elements: !4035)
!4035 = !{!4036, !4037}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4034, file: !78, line: 549, baseType: !184, size: 32)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4034, file: !78, line: 550, baseType: !184, size: 32)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4025, file: !78, line: 556, baseType: !4039, size: 32, offset: 64)
!4039 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4025, file: !78, line: 552, size: 32, elements: !4040)
!4040 = !{!4041, !4042, !4043}
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4039, file: !78, line: 553, baseType: !188, size: 32)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4039, file: !78, line: 554, baseType: !184, size: 32)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4039, file: !78, line: 555, baseType: !184, size: 32)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4025, file: !78, line: 557, baseType: !184, size: 32, offset: 96)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4025, file: !78, line: 561, baseType: !4046, size: 32, offset: 128)
!4046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4025, file: !78, line: 558, size: 32, elements: !4047)
!4047 = !{!4048, !4049}
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4046, file: !78, line: 559, baseType: !184, size: 32)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4046, file: !78, line: 560, baseType: !184, size: 32)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4025, file: !78, line: 565, baseType: !4051, size: 32, offset: 160)
!4051 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4025, file: !78, line: 562, size: 32, elements: !4052)
!4052 = !{!4053, !4054}
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4051, file: !78, line: 563, baseType: !188, size: 32)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4051, file: !78, line: 564, baseType: !184, size: 32)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4025, file: !78, line: 566, baseType: !184, size: 32, offset: 192)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4025, file: !78, line: 570, baseType: !4057, size: 32, offset: 224)
!4057 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4025, file: !78, line: 567, size: 32, elements: !4058)
!4058 = !{!4059, !4060}
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4057, file: !78, line: 568, baseType: !184, size: 32)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4057, file: !78, line: 569, baseType: !184, size: 32)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4025, file: !78, line: 571, baseType: !184, size: 32, offset: 256)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4025, file: !78, line: 572, baseType: !184, size: 32, offset: 288)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4025, file: !78, line: 573, baseType: !184, size: 32, offset: 320)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4025, file: !78, line: 574, baseType: !184, size: 32, offset: 352)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4025, file: !78, line: 575, baseType: !188, size: 32, offset: 384)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4025, file: !78, line: 576, baseType: !184, size: 32, offset: 416)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4025, file: !78, line: 577, baseType: !184, size: 32, offset: 448)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4025, file: !78, line: 578, baseType: !184, size: 32, offset: 480)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4025, file: !78, line: 579, baseType: !184, size: 32, offset: 512)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4025, file: !78, line: 580, baseType: !184, size: 32, offset: 544)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4025, file: !78, line: 581, baseType: !184, size: 32, offset: 576)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4025, file: !78, line: 582, baseType: !184, size: 32, offset: 608)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4025, file: !78, line: 583, baseType: !184, size: 32, offset: 640)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4025, file: !78, line: 584, baseType: !184, size: 32, offset: 672)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4025, file: !78, line: 585, baseType: !184, size: 32, offset: 704)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4025, file: !78, line: 586, baseType: !188, size: 32, offset: 736)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4025, file: !78, line: 587, baseType: !184, size: 32, offset: 768)
!4078 = !DILocalVariable(name: "status", scope: !4011, file: !547, line: 153, type: !4079)
!4079 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !557, line: 211, baseType: !577)
!4080 = !DILocation(line: 0, scope: !4011)
!4081 = !DILocation(line: 149, column: 5, scope: !4011)
!4082 = !DILocation(line: 155, column: 9, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4011, file: !547, line: 155, column: 9)
!4084 = !DILocation(line: 155, column: 36, scope: !4083)
!4085 = !DILocation(line: 155, column: 9, scope: !4011)
!4086 = !DILocation(line: 156, column: 9, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4083, file: !547, line: 155, column: 70)
!4088 = !DILocation(line: 160, column: 13, scope: !4011)
!4089 = !DILocation(line: 161, column: 15, scope: !4011)
!4090 = !DILocation(line: 163, column: 9, scope: !4011)
!4091 = !DILocation(line: 164, column: 9, scope: !4092)
!4092 = distinct !DILexicalBlock(scope: !4093, file: !547, line: 163, column: 29)
!4093 = distinct !DILexicalBlock(scope: !4011, file: !547, line: 163, column: 9)
!4094 = !DILocation(line: 165, column: 5, scope: !4092)
!4095 = !DILocation(line: 167, column: 14, scope: !4011)
!4096 = !DILocation(line: 168, column: 16, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4011, file: !547, line: 168, column: 9)
!4098 = !DILocation(line: 168, column: 9, scope: !4011)
!4099 = !DILocation(line: 169, column: 9, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4097, file: !547, line: 168, column: 28)
!4101 = !DILocation(line: 172, column: 9, scope: !4102)
!4102 = distinct !DILexicalBlock(scope: !4011, file: !547, line: 172, column: 9)
!4103 = !DILocation(line: 172, column: 21, scope: !4102)
!4104 = !DILocation(line: 172, column: 9, scope: !4011)
!4105 = !DILocation(line: 176, column: 43, scope: !4011)
!4106 = !DILocation(line: 178, column: 18, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4011, file: !547, line: 178, column: 9)
!4108 = !DILocation(line: 178, column: 9, scope: !4011)
!4109 = !DILocation(line: 179, column: 9, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4107, file: !547, line: 178, column: 27)
!4111 = !DILocation(line: 177, column: 38, scope: !4011)
!4112 = !DILocation(line: 183, column: 5, scope: !4011)
!4113 = !DILocation(line: 184, column: 5, scope: !4011)
!4114 = !DILocation(line: 185, column: 5, scope: !4011)
!4115 = !DILocation(line: 187, column: 14, scope: !4011)
!4116 = !DILocation(line: 188, column: 16, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4011, file: !547, line: 188, column: 9)
!4118 = !DILocation(line: 188, column: 9, scope: !4011)
!4119 = !DILocation(line: 189, column: 9, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4117, file: !547, line: 188, column: 28)
!4121 = !DILocation(line: 192, column: 9, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4011, file: !547, line: 192, column: 9)
!4123 = !DILocation(line: 192, column: 53, scope: !4122)
!4124 = !DILocation(line: 192, column: 21, scope: !4122)
!4125 = !DILocation(line: 192, column: 9, scope: !4011)
!4126 = !DILocation(line: 193, column: 18, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4122, file: !547, line: 192, column: 83)
!4128 = !DILocation(line: 194, column: 20, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4127, file: !547, line: 194, column: 13)
!4130 = !DILocation(line: 194, column: 13, scope: !4127)
!4131 = !DILocation(line: 195, column: 13, scope: !4132)
!4132 = distinct !DILexicalBlock(scope: !4129, file: !547, line: 194, column: 32)
!4133 = !DILocation(line: 199, column: 1, scope: !4011)
!4134 = distinct !DISubprogram(name: "uart_send_handler", scope: !547, file: !547, line: 210, type: !4012, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4135)
!4135 = !{!4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143}
!4136 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4134, file: !547, line: 210, type: !653)
!4137 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4134, file: !547, line: 210, type: !211)
!4138 = !DILocalVariable(name: "channel", scope: !4134, file: !547, line: 212, type: !4018)
!4139 = !DILocalVariable(name: "status", scope: !4134, file: !547, line: 213, type: !4079)
!4140 = !DILocalVariable(name: "compare_space", scope: !4134, file: !547, line: 214, type: !175)
!4141 = !DILocalVariable(name: "avail_space", scope: !4134, file: !547, line: 214, type: !175)
!4142 = !DILocalVariable(name: "callback", scope: !4134, file: !547, line: 215, type: !662)
!4143 = !DILocalVariable(name: "arg", scope: !4134, file: !547, line: 216, type: !194)
!4144 = !DILocation(line: 0, scope: !4134)
!4145 = !DILocation(line: 214, column: 5, scope: !4134)
!4146 = !DILocation(line: 221, column: 9, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4134, file: !547, line: 221, column: 9)
!4148 = !DILocation(line: 221, column: 36, scope: !4147)
!4149 = !DILocation(line: 221, column: 9, scope: !4134)
!4150 = !DILocation(line: 222, column: 9, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4147, file: !547, line: 221, column: 70)
!4152 = !DILocation(line: 226, column: 15, scope: !4134)
!4153 = !DILocation(line: 228, column: 9, scope: !4134)
!4154 = !DILocation(line: 253, column: 47, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4156, file: !547, line: 252, column: 12)
!4156 = distinct !DILexicalBlock(scope: !4134, file: !547, line: 228, column: 9)
!4157 = !DILocation(line: 255, column: 22, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4155, file: !547, line: 255, column: 13)
!4159 = !DILocation(line: 255, column: 13, scope: !4155)
!4160 = !DILocation(line: 256, column: 13, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4158, file: !547, line: 255, column: 31)
!4162 = !DILocation(line: 254, column: 42, scope: !4155)
!4163 = !DILocation(line: 260, column: 9, scope: !4155)
!4164 = !DILocation(line: 261, column: 9, scope: !4155)
!4165 = !DILocation(line: 262, column: 9, scope: !4155)
!4166 = !DILocation(line: 264, column: 18, scope: !4155)
!4167 = !DILocation(line: 265, column: 20, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4155, file: !547, line: 265, column: 13)
!4169 = !DILocation(line: 265, column: 13, scope: !4155)
!4170 = !DILocation(line: 266, column: 13, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4168, file: !547, line: 265, column: 32)
!4172 = !DILocation(line: 269, column: 54, scope: !4155)
!4173 = !DILocation(line: 270, column: 56, scope: !4155)
!4174 = !DILocation(line: 270, column: 25, scope: !4155)
!4175 = !DILocation(line: 271, column: 13, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4155, file: !547, line: 271, column: 13)
!4177 = !DILocation(line: 271, column: 25, scope: !4176)
!4178 = !DILocation(line: 271, column: 13, scope: !4155)
!4179 = !DILocation(line: 272, column: 22, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4176, file: !547, line: 271, column: 43)
!4181 = !DILocation(line: 273, column: 24, scope: !4182)
!4182 = distinct !DILexicalBlock(scope: !4180, file: !547, line: 273, column: 17)
!4183 = !DILocation(line: 273, column: 17, scope: !4180)
!4184 = !DILocation(line: 274, column: 17, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4182, file: !547, line: 273, column: 36)
!4186 = !DILocation(line: 279, column: 1, scope: !4134)
!4187 = distinct !DISubprogram(name: "uart_error_handler", scope: !547, file: !547, line: 282, type: !4188, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4190)
!4188 = !DISubroutineType(types: !4189)
!4189 = !{null, !653}
!4190 = !{!4191, !4192, !4193, !4194}
!4191 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4187, file: !547, line: 282, type: !653)
!4192 = !DILocalVariable(name: "uartx", scope: !4187, file: !547, line: 284, type: !4023)
!4193 = !DILocalVariable(name: "callback", scope: !4187, file: !547, line: 285, type: !662)
!4194 = !DILocalVariable(name: "arg", scope: !4187, file: !547, line: 286, type: !194)
!4195 = !DILocation(line: 0, scope: !4187)
!4196 = !DILocation(line: 288, column: 13, scope: !4187)
!4197 = !DILocation(line: 290, column: 10, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4187, file: !547, line: 290, column: 9)
!4199 = !DILocation(line: 290, column: 9, scope: !4187)
!4200 = !DILocation(line: 291, column: 9, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4198, file: !547, line: 290, column: 36)
!4202 = !DILocation(line: 292, column: 9, scope: !4201)
!4203 = !DILocation(line: 293, column: 47, scope: !4201)
!4204 = !DILocation(line: 295, column: 22, scope: !4205)
!4205 = distinct !DILexicalBlock(scope: !4201, file: !547, line: 295, column: 13)
!4206 = !DILocation(line: 295, column: 13, scope: !4201)
!4207 = !DILocation(line: 296, column: 13, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4205, file: !547, line: 295, column: 31)
!4209 = !DILocation(line: 294, column: 42, scope: !4201)
!4210 = !DILocation(line: 299, column: 9, scope: !4201)
!4211 = !DILocation(line: 300, column: 5, scope: !4201)
!4212 = !DILocation(line: 301, column: 1, scope: !4187)
!4213 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !547, file: !547, line: 416, type: !4214, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4218)
!4214 = !DISubroutineType(types: !4215)
!4215 = !{!4216, !653, !4217}
!4216 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !572, line: 351, baseType: !588)
!4217 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !572, line: 317, baseType: !595)
!4218 = !{!4219, !4220, !4221, !4222, !4223}
!4219 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4213, file: !547, line: 416, type: !653)
!4220 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4213, file: !547, line: 416, type: !4217)
!4221 = !DILocalVariable(name: "actual_baudrate", scope: !4213, file: !547, line: 418, type: !175)
!4222 = !DILocalVariable(name: "irq_status", scope: !4213, file: !547, line: 418, type: !175)
!4223 = !DILocalVariable(name: "uartx", scope: !4213, file: !547, line: 419, type: !4023)
!4224 = !DILocation(line: 0, scope: !4213)
!4225 = !DILocation(line: 421, column: 11, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4213, file: !547, line: 421, column: 9)
!4227 = !DILocation(line: 421, column: 42, scope: !4226)
!4228 = !DILocation(line: 422, column: 11, scope: !4226)
!4229 = !DILocation(line: 421, column: 9, scope: !4213)
!4230 = !DILocation(line: 426, column: 9, scope: !4231)
!4231 = distinct !DILexicalBlock(scope: !4213, file: !547, line: 426, column: 9)
!4232 = !DILocation(line: 426, column: 36, scope: !4231)
!4233 = !DILocation(line: 426, column: 9, scope: !4213)
!4234 = !DILocation(line: 430, column: 18, scope: !4213)
!4235 = !DILocation(line: 434, column: 5, scope: !4213)
!4236 = !DILocation(line: 436, column: 13, scope: !4213)
!4237 = !DILocation(line: 437, column: 23, scope: !4213)
!4238 = !DILocation(line: 439, column: 5, scope: !4213)
!4239 = !DILocation(line: 441, column: 5, scope: !4213)
!4240 = !DILocation(line: 442, column: 1, scope: !4213)
!4241 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !547, file: !547, line: 120, type: !4242, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4244)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{!211, !653}
!4244 = !{!4245}
!4245 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4241, file: !547, line: 120, type: !653)
!4246 = !DILocation(line: 0, scope: !4241)
!4247 = !DILocation(line: 122, column: 23, scope: !4241)
!4248 = !DILocation(line: 122, column: 5, scope: !4241)
!4249 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !547, file: !547, line: 125, type: !4250, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4252)
!4250 = !DISubroutineType(types: !4251)
!4251 = !{!211, !4217}
!4252 = !{!4253}
!4253 = !DILocalVariable(name: "baudrate", arg: 1, scope: !4249, file: !547, line: 125, type: !4217)
!4254 = !DILocation(line: 0, scope: !4249)
!4255 = !DILocation(line: 127, column: 22, scope: !4249)
!4256 = !DILocation(line: 127, column: 5, scope: !4249)
!4257 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !547, file: !547, line: 444, type: !4258, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4272)
!4258 = !DISubroutineType(types: !4259)
!4259 = !{!4216, !653, !4260}
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 32)
!4261 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4262)
!4262 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !572, line: 378, baseType: !4263)
!4263 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 373, size: 128, elements: !4264)
!4264 = !{!4265, !4266, !4268, !4270}
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !4263, file: !572, line: 374, baseType: !4217, size: 32)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !4263, file: !572, line: 375, baseType: !4267, size: 32, offset: 32)
!4267 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !572, line: 326, baseType: !611)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !4263, file: !572, line: 376, baseType: !4269, size: 32, offset: 64)
!4269 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !572, line: 333, baseType: !617)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4263, file: !572, line: 377, baseType: !4271, size: 32, offset: 96)
!4271 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !572, line: 341, baseType: !621)
!4272 = !{!4273, !4274, !4275, !4276}
!4273 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4257, file: !547, line: 444, type: !653)
!4274 = !DILocalVariable(name: "config", arg: 2, scope: !4257, file: !547, line: 445, type: !4260)
!4275 = !DILocalVariable(name: "irq_status", scope: !4257, file: !547, line: 447, type: !175)
!4276 = !DILocalVariable(name: "uartx", scope: !4257, file: !547, line: 448, type: !4023)
!4277 = !DILocation(line: 0, scope: !4257)
!4278 = !DILocation(line: 450, column: 11, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4257, file: !547, line: 450, column: 9)
!4280 = !DILocation(line: 450, column: 42, scope: !4279)
!4281 = !DILocation(line: 451, column: 11, scope: !4279)
!4282 = !DILocation(line: 450, column: 9, scope: !4257)
!4283 = !DILocation(line: 455, column: 9, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4257, file: !547, line: 455, column: 9)
!4285 = !DILocation(line: 455, column: 36, scope: !4284)
!4286 = !DILocation(line: 455, column: 9, scope: !4257)
!4287 = !DILocation(line: 459, column: 18, scope: !4257)
!4288 = !DILocation(line: 466, column: 5, scope: !4257)
!4289 = !DILocation(line: 468, column: 13, scope: !4257)
!4290 = !DILocation(line: 470, column: 46, scope: !4257)
!4291 = !DILocation(line: 470, column: 5, scope: !4257)
!4292 = !DILocation(line: 471, column: 36, scope: !4257)
!4293 = !DILocation(line: 471, column: 57, scope: !4257)
!4294 = !DILocation(line: 471, column: 75, scope: !4257)
!4295 = !DILocation(line: 471, column: 5, scope: !4257)
!4296 = !DILocation(line: 473, column: 5, scope: !4257)
!4297 = !DILocation(line: 474, column: 1, scope: !4257)
!4298 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !547, file: !547, line: 130, type: !4299, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4301)
!4299 = !DISubroutineType(types: !4300)
!4300 = !{!211, !4260}
!4301 = !{!4302}
!4302 = !DILocalVariable(name: "config", arg: 1, scope: !4298, file: !547, line: 130, type: !4260)
!4303 = !DILocation(line: 0, scope: !4298)
!4304 = !DILocation(line: 132, column: 22, scope: !4298)
!4305 = !DILocation(line: 132, column: 31, scope: !4298)
!4306 = !DILocation(line: 132, column: 56, scope: !4298)
!4307 = !DILocation(line: 133, column: 22, scope: !4298)
!4308 = !DILocation(line: 133, column: 34, scope: !4298)
!4309 = !DILocation(line: 133, column: 61, scope: !4298)
!4310 = !DILocation(line: 134, column: 22, scope: !4298)
!4311 = !DILocation(line: 134, column: 31, scope: !4298)
!4312 = !DILocation(line: 134, column: 55, scope: !4298)
!4313 = !DILocation(line: 135, column: 22, scope: !4298)
!4314 = !DILocation(line: 135, column: 29, scope: !4298)
!4315 = !DILocation(line: 132, column: 5, scope: !4298)
!4316 = distinct !DISubprogram(name: "hal_uart_init", scope: !547, file: !547, line: 476, type: !4317, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4320)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{!4216, !653, !4319}
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 32)
!4320 = !{!4321, !4322, !4323, !4324, !4325, !4326, !4327}
!4321 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4316, file: !547, line: 476, type: !653)
!4322 = !DILocalVariable(name: "uart_config", arg: 2, scope: !4316, file: !547, line: 476, type: !4319)
!4323 = !DILocalVariable(name: "uartx", scope: !4316, file: !547, line: 478, type: !4023)
!4324 = !DILocalVariable(name: "i", scope: !4316, file: !547, line: 479, type: !175)
!4325 = !DILocalVariable(name: "actual_baudrate", scope: !4316, file: !547, line: 479, type: !175)
!4326 = !DILocalVariable(name: "irq_status", scope: !4316, file: !547, line: 479, type: !175)
!4327 = !DILocalVariable(name: "status", scope: !4316, file: !547, line: 480, type: !4328)
!4328 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !627, line: 106, baseType: !626)
!4329 = !DILocation(line: 0, scope: !4316)
!4330 = !DILocation(line: 482, column: 11, scope: !4331)
!4331 = distinct !DILexicalBlock(scope: !4316, file: !547, line: 482, column: 9)
!4332 = !DILocation(line: 482, column: 42, scope: !4331)
!4333 = !DILocation(line: 483, column: 11, scope: !4331)
!4334 = !DILocation(line: 482, column: 9, scope: !4316)
!4335 = !DILocation(line: 487, column: 18, scope: !4316)
!4336 = !DILocation(line: 488, column: 9, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4316, file: !547, line: 488, column: 9)
!4338 = !DILocation(line: 488, column: 36, scope: !4337)
!4339 = !DILocation(line: 488, column: 9, scope: !4316)
!4340 = !DILocation(line: 489, column: 9, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4337, file: !547, line: 488, column: 68)
!4342 = !DILocation(line: 490, column: 9, scope: !4341)
!4343 = !DILocation(line: 502, column: 9, scope: !4344)
!4344 = distinct !DILexicalBlock(scope: !4316, file: !547, line: 502, column: 9)
!4345 = !DILocation(line: 502, column: 9, scope: !4316)
!4346 = !DILocation(line: 504, column: 13, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !547, line: 503, column: 44)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !547, line: 503, column: 9)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !547, line: 503, column: 9)
!4350 = distinct !DILexicalBlock(scope: !4344, file: !547, line: 502, column: 50)
!4351 = !DILocation(line: 504, column: 32, scope: !4347)
!4352 = !DILocation(line: 510, column: 32, scope: !4347)
!4353 = !DILocation(line: 510, column: 36, scope: !4347)
!4354 = !DILocation(line: 511, column: 32, scope: !4347)
!4355 = !DILocation(line: 511, column: 37, scope: !4347)
!4356 = !DILocation(line: 503, column: 40, scope: !4348)
!4357 = !DILocation(line: 503, column: 23, scope: !4348)
!4358 = !DILocation(line: 503, column: 9, scope: !4349)
!4359 = distinct !{!4359, !4358, !4360}
!4360 = !DILocation(line: 512, column: 9, scope: !4349)
!4361 = !DILocation(line: 513, column: 40, scope: !4350)
!4362 = !DILocation(line: 514, column: 5, scope: !4350)
!4363 = !DILocation(line: 521, column: 32, scope: !4316)
!4364 = !DILocation(line: 522, column: 5, scope: !4316)
!4365 = !DILocation(line: 524, column: 31, scope: !4316)
!4366 = !DILocation(line: 524, column: 14, scope: !4316)
!4367 = !DILocation(line: 525, column: 16, scope: !4368)
!4368 = distinct !DILexicalBlock(scope: !4316, file: !547, line: 525, column: 9)
!4369 = !DILocation(line: 525, column: 9, scope: !4316)
!4370 = !DILocation(line: 526, column: 9, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4368, file: !547, line: 525, column: 40)
!4372 = !DILocation(line: 530, column: 13, scope: !4316)
!4373 = !DILocation(line: 532, column: 5, scope: !4316)
!4374 = !DILocation(line: 533, column: 56, scope: !4316)
!4375 = !DILocation(line: 533, column: 23, scope: !4316)
!4376 = !DILocation(line: 534, column: 5, scope: !4316)
!4377 = !DILocation(line: 535, column: 41, scope: !4316)
!4378 = !DILocation(line: 535, column: 67, scope: !4316)
!4379 = !DILocation(line: 535, column: 90, scope: !4316)
!4380 = !DILocation(line: 535, column: 5, scope: !4316)
!4381 = !DILocation(line: 536, column: 5, scope: !4316)
!4382 = !DILocation(line: 541, column: 5, scope: !4316)
!4383 = !DILocation(line: 542, column: 1, scope: !4316)
!4384 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !547, file: !547, line: 544, type: !4385, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4387)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{!4216, !653}
!4387 = !{!4388, !4389, !4390, !4391, !4392, !4393, !4394}
!4388 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4384, file: !547, line: 544, type: !653)
!4389 = !DILocalVariable(name: "uartx", scope: !4384, file: !547, line: 546, type: !4023)
!4390 = !DILocalVariable(name: "tx_dma_channel", scope: !4384, file: !547, line: 547, type: !4018)
!4391 = !DILocalVariable(name: "rx_dma_channel", scope: !4384, file: !547, line: 547, type: !4018)
!4392 = !DILocalVariable(name: "irq_status", scope: !4384, file: !547, line: 548, type: !175)
!4393 = !DILocalVariable(name: "status", scope: !4384, file: !547, line: 549, type: !4079)
!4394 = !DILocalVariable(name: "clock_status", scope: !4384, file: !547, line: 550, type: !4328)
!4395 = !DILocation(line: 0, scope: !4384)
!4396 = !DILocation(line: 552, column: 10, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4384, file: !547, line: 552, column: 9)
!4398 = !DILocation(line: 552, column: 9, scope: !4384)
!4399 = !DILocation(line: 556, column: 18, scope: !4384)
!4400 = !DILocation(line: 557, column: 9, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4384, file: !547, line: 557, column: 9)
!4402 = !DILocation(line: 557, column: 36, scope: !4401)
!4403 = !DILocation(line: 557, column: 9, scope: !4384)
!4404 = !DILocation(line: 562, column: 13, scope: !4384)
!4405 = !DILocation(line: 565, column: 5, scope: !4384)
!4406 = !DILocation(line: 568, column: 9, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4384, file: !547, line: 568, column: 9)
!4408 = !DILocation(line: 568, column: 36, scope: !4407)
!4409 = !DILocation(line: 568, column: 9, scope: !4384)
!4410 = !DILocation(line: 569, column: 26, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4407, file: !547, line: 568, column: 70)
!4412 = !DILocation(line: 570, column: 26, scope: !4411)
!4413 = !DILocation(line: 572, column: 18, scope: !4411)
!4414 = !DILocation(line: 573, column: 20, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4411, file: !547, line: 573, column: 13)
!4416 = !DILocation(line: 573, column: 13, scope: !4411)
!4417 = !DILocation(line: 574, column: 13, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4415, file: !547, line: 573, column: 32)
!4419 = !DILocation(line: 575, column: 13, scope: !4418)
!4420 = !DILocation(line: 578, column: 18, scope: !4411)
!4421 = !DILocation(line: 579, column: 20, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4411, file: !547, line: 579, column: 13)
!4423 = !DILocation(line: 579, column: 13, scope: !4411)
!4424 = !DILocation(line: 580, column: 13, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4422, file: !547, line: 579, column: 32)
!4426 = !DILocation(line: 581, column: 13, scope: !4425)
!4427 = !DILocation(line: 584, column: 18, scope: !4411)
!4428 = !DILocation(line: 585, column: 20, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4411, file: !547, line: 585, column: 13)
!4430 = !DILocation(line: 585, column: 13, scope: !4411)
!4431 = !DILocation(line: 586, column: 13, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4429, file: !547, line: 585, column: 32)
!4433 = !DILocation(line: 587, column: 13, scope: !4432)
!4434 = !DILocation(line: 590, column: 18, scope: !4411)
!4435 = !DILocation(line: 591, column: 20, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4411, file: !547, line: 591, column: 13)
!4437 = !DILocation(line: 591, column: 13, scope: !4411)
!4438 = !DILocation(line: 592, column: 13, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4436, file: !547, line: 591, column: 32)
!4440 = !DILocation(line: 593, column: 13, scope: !4439)
!4441 = !DILocation(line: 596, column: 18, scope: !4411)
!4442 = !DILocation(line: 597, column: 20, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4411, file: !547, line: 597, column: 13)
!4444 = !DILocation(line: 597, column: 13, scope: !4411)
!4445 = !DILocation(line: 598, column: 13, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4443, file: !547, line: 597, column: 32)
!4447 = !DILocation(line: 599, column: 13, scope: !4446)
!4448 = !DILocation(line: 602, column: 18, scope: !4411)
!4449 = !DILocation(line: 603, column: 20, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4411, file: !547, line: 603, column: 13)
!4451 = !DILocation(line: 603, column: 13, scope: !4411)
!4452 = !DILocation(line: 604, column: 13, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4450, file: !547, line: 603, column: 32)
!4454 = !DILocation(line: 605, column: 13, scope: !4453)
!4455 = !DILocation(line: 608, column: 30, scope: !4411)
!4456 = !DILocation(line: 608, column: 9, scope: !4411)
!4457 = !DILocation(line: 609, column: 5, scope: !4411)
!4458 = !DILocation(line: 610, column: 5, scope: !4384)
!4459 = !DILocation(line: 611, column: 38, scope: !4384)
!4460 = !DILocation(line: 611, column: 20, scope: !4384)
!4461 = !DILocation(line: 612, column: 22, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4384, file: !547, line: 612, column: 9)
!4463 = !DILocation(line: 612, column: 9, scope: !4384)
!4464 = !DILocation(line: 613, column: 9, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4462, file: !547, line: 612, column: 46)
!4466 = !DILocation(line: 614, column: 9, scope: !4465)
!4467 = !DILocation(line: 618, column: 32, scope: !4384)
!4468 = !DILocation(line: 618, column: 37, scope: !4384)
!4469 = !DILocation(line: 619, column: 32, scope: !4384)
!4470 = !DILocation(line: 619, column: 36, scope: !4384)
!4471 = !DILocation(line: 635, column: 32, scope: !4384)
!4472 = !DILocation(line: 639, column: 5, scope: !4384)
!4473 = !DILocation(line: 640, column: 1, scope: !4384)
!4474 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !547, file: !547, line: 642, type: !4475, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4477)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{null, !653, !1418}
!4477 = !{!4478, !4479, !4480}
!4478 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4474, file: !547, line: 642, type: !653)
!4479 = !DILocalVariable(name: "byte", arg: 2, scope: !4474, file: !547, line: 642, type: !1418)
!4480 = !DILocalVariable(name: "uartx", scope: !4474, file: !547, line: 644, type: !4023)
!4481 = !DILocation(line: 0, scope: !4474)
!4482 = !DILocation(line: 646, column: 10, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4474, file: !547, line: 646, column: 9)
!4484 = !DILocation(line: 646, column: 9, scope: !4474)
!4485 = !DILocation(line: 650, column: 9, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4474, file: !547, line: 650, column: 9)
!4487 = !DILocation(line: 650, column: 36, scope: !4486)
!4488 = !DILocation(line: 650, column: 9, scope: !4474)
!4489 = !DILocation(line: 654, column: 13, scope: !4474)
!4490 = !DILocation(line: 655, column: 5, scope: !4474)
!4491 = !DILocation(line: 656, column: 1, scope: !4474)
!4492 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !547, file: !547, line: 658, type: !4493, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4497)
!4493 = !DISubroutineType(types: !4494)
!4494 = !{!175, !653, !4495, !175}
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !378)
!4497 = !{!4498, !4499, !4500, !4501}
!4498 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4492, file: !547, line: 658, type: !653)
!4499 = !DILocalVariable(name: "data", arg: 2, scope: !4492, file: !547, line: 658, type: !4495)
!4500 = !DILocalVariable(name: "size", arg: 3, scope: !4492, file: !547, line: 658, type: !175)
!4501 = !DILocalVariable(name: "i", scope: !4492, file: !547, line: 660, type: !175)
!4502 = !DILocation(line: 0, scope: !4492)
!4503 = !DILocation(line: 662, column: 11, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4492, file: !547, line: 662, column: 9)
!4505 = !DILocation(line: 662, column: 42, scope: !4504)
!4506 = !DILocation(line: 666, column: 9, scope: !4507)
!4507 = distinct !DILexicalBlock(scope: !4492, file: !547, line: 666, column: 9)
!4508 = !DILocation(line: 666, column: 36, scope: !4507)
!4509 = !DILocation(line: 666, column: 9, scope: !4492)
!4510 = !DILocation(line: 671, column: 38, scope: !4511)
!4511 = distinct !DILexicalBlock(scope: !4512, file: !547, line: 670, column: 32)
!4512 = distinct !DILexicalBlock(scope: !4513, file: !547, line: 670, column: 5)
!4513 = distinct !DILexicalBlock(scope: !4492, file: !547, line: 670, column: 5)
!4514 = !DILocation(line: 671, column: 9, scope: !4511)
!4515 = !DILocation(line: 672, column: 13, scope: !4511)
!4516 = !DILocation(line: 670, column: 28, scope: !4512)
!4517 = !DILocation(line: 670, column: 19, scope: !4512)
!4518 = !DILocation(line: 670, column: 5, scope: !4513)
!4519 = distinct !{!4519, !4518, !4520}
!4520 = !DILocation(line: 673, column: 5, scope: !4513)
!4521 = !DILocation(line: 676, column: 1, scope: !4492)
!4522 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !547, file: !547, line: 678, type: !4493, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4523)
!4523 = !{!4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531}
!4524 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4522, file: !547, line: 678, type: !653)
!4525 = !DILocalVariable(name: "data", arg: 2, scope: !4522, file: !547, line: 678, type: !4495)
!4526 = !DILocalVariable(name: "size", arg: 3, scope: !4522, file: !547, line: 678, type: !175)
!4527 = !DILocalVariable(name: "channel", scope: !4522, file: !547, line: 680, type: !4018)
!4528 = !DILocalVariable(name: "i", scope: !4522, file: !547, line: 681, type: !175)
!4529 = !DILocalVariable(name: "real_count", scope: !4522, file: !547, line: 681, type: !175)
!4530 = !DILocalVariable(name: "avail_space", scope: !4522, file: !547, line: 681, type: !175)
!4531 = !DILocalVariable(name: "status", scope: !4522, file: !547, line: 682, type: !4079)
!4532 = !DILocation(line: 0, scope: !4522)
!4533 = !DILocation(line: 681, column: 5, scope: !4522)
!4534 = !DILocation(line: 687, column: 11, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4522, file: !547, line: 687, column: 9)
!4536 = !DILocation(line: 687, column: 42, scope: !4535)
!4537 = !DILocation(line: 691, column: 9, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4522, file: !547, line: 691, column: 9)
!4539 = !DILocation(line: 691, column: 36, scope: !4538)
!4540 = !DILocation(line: 691, column: 9, scope: !4522)
!4541 = !DILocation(line: 704, column: 15, scope: !4522)
!4542 = !DILocation(line: 706, column: 14, scope: !4522)
!4543 = !DILocation(line: 707, column: 16, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4522, file: !547, line: 707, column: 9)
!4545 = !DILocation(line: 707, column: 9, scope: !4522)
!4546 = !DILocation(line: 708, column: 9, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4544, file: !547, line: 707, column: 28)
!4548 = !DILocation(line: 712, column: 9, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4522, file: !547, line: 712, column: 9)
!4550 = !DILocation(line: 712, column: 21, scope: !4549)
!4551 = !DILocation(line: 717, column: 19, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !547, line: 717, column: 5)
!4553 = distinct !DILexicalBlock(scope: !4522, file: !547, line: 717, column: 5)
!4554 = !DILocation(line: 717, column: 5, scope: !4553)
!4555 = distinct !{!4555, !4554, !4556}
!4556 = !DILocation(line: 723, column: 5, scope: !4553)
!4557 = !DILocation(line: 718, column: 42, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4552, file: !547, line: 717, column: 38)
!4559 = !DILocation(line: 718, column: 18, scope: !4558)
!4560 = !DILocation(line: 719, column: 20, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4558, file: !547, line: 719, column: 13)
!4562 = !DILocation(line: 717, column: 34, scope: !4552)
!4563 = !DILocation(line: 719, column: 13, scope: !4558)
!4564 = !DILocation(line: 720, column: 13, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4561, file: !547, line: 719, column: 32)
!4566 = !DILocation(line: 728, column: 23, scope: !4567)
!4567 = distinct !DILexicalBlock(scope: !4522, file: !547, line: 728, column: 9)
!4568 = !DILocation(line: 728, column: 20, scope: !4567)
!4569 = !DILocation(line: 728, column: 9, scope: !4522)
!4570 = !DILocation(line: 729, column: 18, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4567, file: !547, line: 728, column: 36)
!4572 = !DILocation(line: 730, column: 20, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4571, file: !547, line: 730, column: 13)
!4574 = !DILocation(line: 730, column: 13, scope: !4571)
!4575 = !DILocation(line: 731, column: 13, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4573, file: !547, line: 730, column: 32)
!4577 = !DILocation(line: 737, column: 1, scope: !4522)
!4578 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !547, file: !547, line: 739, type: !4579, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4581)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!1418, !653}
!4581 = !{!4582, !4583, !4584}
!4582 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4578, file: !547, line: 739, type: !653)
!4583 = !DILocalVariable(name: "data", scope: !4578, file: !547, line: 741, type: !1418)
!4584 = !DILocalVariable(name: "uartx", scope: !4578, file: !547, line: 742, type: !4023)
!4585 = !DILocation(line: 0, scope: !4578)
!4586 = !DILocation(line: 744, column: 10, scope: !4587)
!4587 = distinct !DILexicalBlock(scope: !4578, file: !547, line: 744, column: 9)
!4588 = !DILocation(line: 744, column: 9, scope: !4578)
!4589 = !DILocation(line: 748, column: 9, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4578, file: !547, line: 748, column: 9)
!4591 = !DILocation(line: 748, column: 36, scope: !4590)
!4592 = !DILocation(line: 748, column: 9, scope: !4578)
!4593 = !DILocation(line: 752, column: 13, scope: !4578)
!4594 = !DILocation(line: 754, column: 12, scope: !4578)
!4595 = !DILocation(line: 756, column: 5, scope: !4578)
!4596 = !DILocation(line: 757, column: 1, scope: !4578)
!4597 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !547, file: !547, line: 759, type: !4598, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4600)
!4598 = !DISubroutineType(types: !4599)
!4599 = !{!175, !653}
!4600 = !{!4601, !4602, !4603}
!4601 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4597, file: !547, line: 759, type: !653)
!4602 = !DILocalVariable(name: "data", scope: !4597, file: !547, line: 761, type: !175)
!4603 = !DILocalVariable(name: "uartx", scope: !4597, file: !547, line: 762, type: !4023)
!4604 = !DILocation(line: 0, scope: !4597)
!4605 = !DILocation(line: 764, column: 10, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4597, file: !547, line: 764, column: 9)
!4607 = !DILocation(line: 764, column: 9, scope: !4597)
!4608 = !DILocation(line: 768, column: 9, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4597, file: !547, line: 768, column: 9)
!4610 = !DILocation(line: 768, column: 36, scope: !4609)
!4611 = !DILocation(line: 768, column: 9, scope: !4597)
!4612 = !DILocation(line: 772, column: 13, scope: !4597)
!4613 = !DILocation(line: 774, column: 12, scope: !4597)
!4614 = !DILocation(line: 776, column: 5, scope: !4597)
!4615 = !DILocation(line: 777, column: 1, scope: !4597)
!4616 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !547, file: !547, line: 779, type: !4617, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4619)
!4617 = !DISubroutineType(types: !4618)
!4618 = !{!175, !653, !680, !175}
!4619 = !{!4620, !4621, !4622, !4623, !4624}
!4620 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4616, file: !547, line: 779, type: !653)
!4621 = !DILocalVariable(name: "buffer", arg: 2, scope: !4616, file: !547, line: 779, type: !680)
!4622 = !DILocalVariable(name: "size", arg: 3, scope: !4616, file: !547, line: 779, type: !175)
!4623 = !DILocalVariable(name: "i", scope: !4616, file: !547, line: 781, type: !175)
!4624 = !DILocalVariable(name: "pbuf", scope: !4616, file: !547, line: 782, type: !680)
!4625 = !DILocation(line: 0, scope: !4616)
!4626 = !DILocation(line: 784, column: 11, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4616, file: !547, line: 784, column: 9)
!4628 = !DILocation(line: 784, column: 42, scope: !4627)
!4629 = !DILocation(line: 789, column: 9, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4616, file: !547, line: 789, column: 9)
!4631 = !DILocation(line: 789, column: 36, scope: !4630)
!4632 = !DILocation(line: 789, column: 9, scope: !4616)
!4633 = !DILocation(line: 794, column: 19, scope: !4634)
!4634 = distinct !DILexicalBlock(scope: !4635, file: !547, line: 793, column: 32)
!4635 = distinct !DILexicalBlock(scope: !4636, file: !547, line: 793, column: 5)
!4636 = distinct !DILexicalBlock(scope: !4616, file: !547, line: 793, column: 5)
!4637 = !DILocation(line: 794, column: 9, scope: !4634)
!4638 = !DILocation(line: 794, column: 17, scope: !4634)
!4639 = !DILocation(line: 793, column: 28, scope: !4635)
!4640 = !DILocation(line: 793, column: 19, scope: !4635)
!4641 = !DILocation(line: 793, column: 5, scope: !4636)
!4642 = distinct !{!4642, !4641, !4643}
!4643 = !DILocation(line: 795, column: 5, scope: !4636)
!4644 = !DILocation(line: 798, column: 1, scope: !4616)
!4645 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !547, file: !547, line: 800, type: !4617, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4646)
!4646 = !{!4647, !4648, !4649, !4650, !4651, !4652, !4653, !4654}
!4647 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4645, file: !547, line: 800, type: !653)
!4648 = !DILocalVariable(name: "buffer", arg: 2, scope: !4645, file: !547, line: 800, type: !680)
!4649 = !DILocalVariable(name: "size", arg: 3, scope: !4645, file: !547, line: 800, type: !175)
!4650 = !DILocalVariable(name: "channel", scope: !4645, file: !547, line: 802, type: !4018)
!4651 = !DILocalVariable(name: "receive_count", scope: !4645, file: !547, line: 803, type: !175)
!4652 = !DILocalVariable(name: "avail_count", scope: !4645, file: !547, line: 803, type: !175)
!4653 = !DILocalVariable(name: "index", scope: !4645, file: !547, line: 804, type: !175)
!4654 = !DILocalVariable(name: "status", scope: !4645, file: !547, line: 805, type: !4079)
!4655 = !DILocation(line: 0, scope: !4645)
!4656 = !DILocation(line: 803, column: 5, scope: !4645)
!4657 = !DILocation(line: 807, column: 11, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4645, file: !547, line: 807, column: 9)
!4659 = !DILocation(line: 807, column: 42, scope: !4658)
!4660 = !DILocation(line: 813, column: 9, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4645, file: !547, line: 813, column: 9)
!4662 = !DILocation(line: 813, column: 36, scope: !4661)
!4663 = !DILocation(line: 813, column: 9, scope: !4645)
!4664 = !DILocation(line: 817, column: 15, scope: !4645)
!4665 = !DILocation(line: 819, column: 14, scope: !4645)
!4666 = !DILocation(line: 820, column: 16, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !4645, file: !547, line: 820, column: 9)
!4668 = !DILocation(line: 820, column: 9, scope: !4645)
!4669 = !DILocation(line: 821, column: 9, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4667, file: !547, line: 820, column: 28)
!4671 = !DILocation(line: 825, column: 9, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4645, file: !547, line: 825, column: 9)
!4673 = !DILocation(line: 825, column: 21, scope: !4672)
!4674 = !DILocation(line: 830, column: 27, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4676, file: !547, line: 830, column: 5)
!4676 = distinct !DILexicalBlock(scope: !4645, file: !547, line: 830, column: 5)
!4677 = !DILocation(line: 830, column: 5, scope: !4676)
!4678 = distinct !{!4678, !4677, !4679}
!4679 = !DILocation(line: 836, column: 5, scope: !4676)
!4680 = !DILocation(line: 831, column: 42, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4675, file: !547, line: 830, column: 53)
!4682 = !DILocation(line: 831, column: 18, scope: !4681)
!4683 = !DILocation(line: 832, column: 20, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !547, line: 832, column: 13)
!4685 = !DILocation(line: 830, column: 49, scope: !4675)
!4686 = !DILocation(line: 832, column: 13, scope: !4681)
!4687 = !DILocation(line: 833, column: 13, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4684, file: !547, line: 832, column: 32)
!4689 = !DILocation(line: 841, column: 26, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4645, file: !547, line: 841, column: 9)
!4691 = !DILocation(line: 841, column: 23, scope: !4690)
!4692 = !DILocation(line: 841, column: 9, scope: !4645)
!4693 = !DILocation(line: 842, column: 18, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4690, file: !547, line: 841, column: 39)
!4695 = !DILocation(line: 843, column: 20, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4694, file: !547, line: 843, column: 13)
!4697 = !DILocation(line: 843, column: 13, scope: !4694)
!4698 = !DILocation(line: 844, column: 13, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4696, file: !547, line: 843, column: 32)
!4700 = !DILocation(line: 850, column: 1, scope: !4645)
!4701 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !547, file: !547, line: 891, type: !4702, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4704)
!4702 = !DISubroutineType(types: !4703)
!4703 = !{!4216, !653, !662, !194}
!4704 = !{!4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712}
!4705 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4701, file: !547, line: 891, type: !653)
!4706 = !DILocalVariable(name: "user_callback", arg: 2, scope: !4701, file: !547, line: 892, type: !662)
!4707 = !DILocalVariable(name: "user_data", arg: 3, scope: !4701, file: !547, line: 893, type: !194)
!4708 = !DILocalVariable(name: "tx_dma_channel", scope: !4701, file: !547, line: 895, type: !4018)
!4709 = !DILocalVariable(name: "rx_dma_channel", scope: !4701, file: !547, line: 895, type: !4018)
!4710 = !DILocalVariable(name: "irq_status", scope: !4701, file: !547, line: 896, type: !175)
!4711 = !DILocalVariable(name: "status", scope: !4701, file: !547, line: 897, type: !4079)
!4712 = !DILocalVariable(name: "nvic_status", scope: !4701, file: !547, line: 898, type: !790)
!4713 = !DILocation(line: 0, scope: !4701)
!4714 = !DILocation(line: 900, column: 11, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4701, file: !547, line: 900, column: 9)
!4716 = !DILocation(line: 900, column: 42, scope: !4715)
!4717 = !DILocation(line: 905, column: 18, scope: !4701)
!4718 = !DILocation(line: 906, column: 9, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4701, file: !547, line: 906, column: 9)
!4720 = !DILocation(line: 906, column: 36, scope: !4719)
!4721 = !DILocation(line: 906, column: 9, scope: !4701)
!4722 = !DILocation(line: 911, column: 22, scope: !4701)
!4723 = !DILocation(line: 912, column: 22, scope: !4701)
!4724 = !DILocation(line: 914, column: 32, scope: !4701)
!4725 = !DILocation(line: 914, column: 37, scope: !4701)
!4726 = !DILocation(line: 915, column: 32, scope: !4701)
!4727 = !DILocation(line: 915, column: 36, scope: !4701)
!4728 = !DILocation(line: 917, column: 91, scope: !4701)
!4729 = !DILocation(line: 917, column: 56, scope: !4701)
!4730 = !DILocation(line: 917, column: 5, scope: !4701)
!4731 = !DILocation(line: 918, column: 80, scope: !4701)
!4732 = !DILocation(line: 918, column: 14, scope: !4701)
!4733 = !DILocation(line: 919, column: 16, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4701, file: !547, line: 919, column: 9)
!4735 = !DILocation(line: 919, column: 9, scope: !4701)
!4736 = !DILocation(line: 920, column: 9, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4734, file: !547, line: 919, column: 28)
!4738 = !DILocation(line: 921, column: 9, scope: !4737)
!4739 = !DILocation(line: 924, column: 97, scope: !4701)
!4740 = !DILocation(line: 924, column: 56, scope: !4701)
!4741 = !DILocation(line: 924, column: 5, scope: !4701)
!4742 = !DILocation(line: 925, column: 80, scope: !4701)
!4743 = !DILocation(line: 925, column: 14, scope: !4701)
!4744 = !DILocation(line: 926, column: 16, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4701, file: !547, line: 926, column: 9)
!4746 = !DILocation(line: 926, column: 9, scope: !4701)
!4747 = !DILocation(line: 927, column: 9, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4745, file: !547, line: 926, column: 28)
!4749 = !DILocation(line: 928, column: 9, scope: !4748)
!4750 = !DILocation(line: 931, column: 49, scope: !4701)
!4751 = !DILocation(line: 931, column: 19, scope: !4701)
!4752 = !DILocation(line: 932, column: 21, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4701, file: !547, line: 932, column: 9)
!4754 = !DILocation(line: 932, column: 9, scope: !4701)
!4755 = !DILocation(line: 933, column: 9, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4753, file: !547, line: 932, column: 44)
!4757 = !DILocation(line: 934, column: 9, scope: !4756)
!4758 = !DILocation(line: 938, column: 5, scope: !4701)
!4759 = !DILocation(line: 940, column: 32, scope: !4701)
!4760 = !DILocation(line: 944, column: 5, scope: !4701)
!4761 = !DILocation(line: 945, column: 1, scope: !4701)
!4762 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !547, file: !547, line: 303, type: !4763, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4766)
!4763 = !DISubroutineType(types: !4764)
!4764 = !{null, !4765, !194}
!4765 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !557, line: 225, baseType: !641)
!4766 = !{!4767, !4768, !4769}
!4767 = !DILocalVariable(name: "event", arg: 1, scope: !4762, file: !547, line: 303, type: !4765)
!4768 = !DILocalVariable(name: "user_data", arg: 2, scope: !4762, file: !547, line: 303, type: !194)
!4769 = !DILocalVariable(name: "callback_data", scope: !4762, file: !547, line: 305, type: !646)
!4770 = !DILocation(line: 0, scope: !4762)
!4771 = !DILocation(line: 307, column: 24, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4762, file: !547, line: 307, column: 9)
!4773 = !DILocation(line: 0, scope: !4772)
!4774 = !DILocation(line: 307, column: 9, scope: !4762)
!4775 = !DILocation(line: 308, column: 9, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4772, file: !547, line: 307, column: 39)
!4777 = !DILocation(line: 309, column: 5, scope: !4776)
!4778 = !DILocation(line: 310, column: 9, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4772, file: !547, line: 309, column: 12)
!4780 = !DILocation(line: 312, column: 1, scope: !4762)
!4781 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !547, file: !547, line: 852, type: !4188, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4782)
!4782 = !{!4783, !4784, !4785, !4786, !4787}
!4783 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4781, file: !547, line: 852, type: !653)
!4784 = !DILocalVariable(name: "uartx", scope: !4781, file: !547, line: 854, type: !4023)
!4785 = !DILocalVariable(name: "tx_dma_channel", scope: !4781, file: !547, line: 855, type: !4018)
!4786 = !DILocalVariable(name: "rx_dma_channel", scope: !4781, file: !547, line: 855, type: !4018)
!4787 = !DILocalVariable(name: "status", scope: !4781, file: !547, line: 856, type: !4079)
!4788 = !DILocation(line: 0, scope: !4781)
!4789 = !DILocation(line: 858, column: 13, scope: !4781)
!4790 = !DILocation(line: 859, column: 22, scope: !4781)
!4791 = !DILocation(line: 860, column: 22, scope: !4781)
!4792 = !DILocation(line: 866, column: 5, scope: !4781)
!4793 = !DILocation(line: 867, column: 25, scope: !4781)
!4794 = !DILocation(line: 867, column: 5, scope: !4781)
!4795 = !DILocation(line: 868, column: 14, scope: !4781)
!4796 = !DILocation(line: 869, column: 16, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4781, file: !547, line: 869, column: 9)
!4798 = !DILocation(line: 869, column: 9, scope: !4781)
!4799 = !DILocation(line: 870, column: 9, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4797, file: !547, line: 869, column: 28)
!4801 = !DILocation(line: 873, column: 14, scope: !4781)
!4802 = !DILocation(line: 874, column: 16, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4781, file: !547, line: 874, column: 9)
!4804 = !DILocation(line: 874, column: 9, scope: !4781)
!4805 = !DILocation(line: 875, column: 9, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4803, file: !547, line: 874, column: 28)
!4807 = !DILocation(line: 878, column: 14, scope: !4781)
!4808 = !DILocation(line: 879, column: 16, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4781, file: !547, line: 879, column: 9)
!4810 = !DILocation(line: 879, column: 9, scope: !4781)
!4811 = !DILocation(line: 880, column: 9, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4809, file: !547, line: 879, column: 28)
!4813 = !DILocation(line: 883, column: 14, scope: !4781)
!4814 = !DILocation(line: 884, column: 16, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4781, file: !547, line: 884, column: 9)
!4816 = !DILocation(line: 884, column: 9, scope: !4781)
!4817 = !DILocation(line: 885, column: 9, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4815, file: !547, line: 884, column: 28)
!4819 = !DILocation(line: 888, column: 5, scope: !4781)
!4820 = !DILocation(line: 889, column: 1, scope: !4781)
!4821 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !547, file: !547, line: 947, type: !4598, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4822)
!4822 = !{!4823, !4824, !4825, !4826}
!4823 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4821, file: !547, line: 947, type: !653)
!4824 = !DILocalVariable(name: "channel", scope: !4821, file: !547, line: 949, type: !4018)
!4825 = !DILocalVariable(name: "roomleft", scope: !4821, file: !547, line: 950, type: !175)
!4826 = !DILocalVariable(name: "status", scope: !4821, file: !547, line: 951, type: !4079)
!4827 = !DILocation(line: 0, scope: !4821)
!4828 = !DILocation(line: 950, column: 5, scope: !4821)
!4829 = !DILocation(line: 953, column: 10, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4821, file: !547, line: 953, column: 9)
!4831 = !DILocation(line: 953, column: 9, scope: !4821)
!4832 = !DILocation(line: 957, column: 9, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4821, file: !547, line: 957, column: 9)
!4834 = !DILocation(line: 957, column: 36, scope: !4833)
!4835 = !DILocation(line: 957, column: 9, scope: !4821)
!4836 = !DILocation(line: 961, column: 15, scope: !4821)
!4837 = !DILocation(line: 962, column: 14, scope: !4821)
!4838 = !DILocation(line: 963, column: 16, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4821, file: !547, line: 963, column: 9)
!4840 = !DILocation(line: 963, column: 9, scope: !4821)
!4841 = !DILocation(line: 964, column: 9, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4839, file: !547, line: 963, column: 28)
!4843 = !DILocation(line: 968, column: 12, scope: !4821)
!4844 = !DILocation(line: 968, column: 5, scope: !4821)
!4845 = !DILocation(line: 969, column: 1, scope: !4821)
!4846 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !547, file: !547, line: 971, type: !4598, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4847)
!4847 = !{!4848, !4849, !4850, !4851}
!4848 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4846, file: !547, line: 971, type: !653)
!4849 = !DILocalVariable(name: "channel", scope: !4846, file: !547, line: 973, type: !4018)
!4850 = !DILocalVariable(name: "avail", scope: !4846, file: !547, line: 974, type: !175)
!4851 = !DILocalVariable(name: "status", scope: !4846, file: !547, line: 975, type: !4079)
!4852 = !DILocation(line: 0, scope: !4846)
!4853 = !DILocation(line: 974, column: 5, scope: !4846)
!4854 = !DILocation(line: 977, column: 10, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4846, file: !547, line: 977, column: 9)
!4856 = !DILocation(line: 977, column: 9, scope: !4846)
!4857 = !DILocation(line: 981, column: 9, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4846, file: !547, line: 981, column: 9)
!4859 = !DILocation(line: 981, column: 36, scope: !4858)
!4860 = !DILocation(line: 981, column: 9, scope: !4846)
!4861 = !DILocation(line: 985, column: 15, scope: !4846)
!4862 = !DILocation(line: 986, column: 14, scope: !4846)
!4863 = !DILocation(line: 987, column: 16, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4846, file: !547, line: 987, column: 9)
!4865 = !DILocation(line: 987, column: 9, scope: !4846)
!4866 = !DILocation(line: 988, column: 9, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4864, file: !547, line: 987, column: 28)
!4868 = !DILocation(line: 992, column: 12, scope: !4846)
!4869 = !DILocation(line: 992, column: 5, scope: !4846)
!4870 = !DILocation(line: 993, column: 1, scope: !4846)
!4871 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !547, file: !547, line: 995, type: !4385, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4872)
!4872 = !{!4873, !4874}
!4873 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4871, file: !547, line: 995, type: !653)
!4874 = !DILocalVariable(name: "uartx", scope: !4871, file: !547, line: 997, type: !4023)
!4875 = !DILocation(line: 0, scope: !4871)
!4876 = !DILocation(line: 999, column: 10, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4871, file: !547, line: 999, column: 9)
!4878 = !DILocation(line: 999, column: 9, scope: !4871)
!4879 = !DILocation(line: 1003, column: 9, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4871, file: !547, line: 1003, column: 9)
!4881 = !DILocation(line: 1003, column: 36, scope: !4880)
!4882 = !DILocation(line: 1003, column: 9, scope: !4871)
!4883 = !DILocation(line: 1007, column: 13, scope: !4871)
!4884 = !DILocation(line: 1009, column: 5, scope: !4871)
!4885 = !DILocation(line: 1015, column: 5, scope: !4871)
!4886 = !DILocation(line: 1016, column: 1, scope: !4871)
!4887 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !547, file: !547, line: 1018, type: !4888, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4890)
!4888 = !DISubroutineType(types: !4889)
!4889 = !{!4216, !653, !378, !378, !378}
!4890 = !{!4891, !4892, !4893, !4894, !4895}
!4891 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4887, file: !547, line: 1018, type: !653)
!4892 = !DILocalVariable(name: "xon", arg: 2, scope: !4887, file: !547, line: 1019, type: !378)
!4893 = !DILocalVariable(name: "xoff", arg: 3, scope: !4887, file: !547, line: 1020, type: !378)
!4894 = !DILocalVariable(name: "escape_character", arg: 4, scope: !4887, file: !547, line: 1021, type: !378)
!4895 = !DILocalVariable(name: "uartx", scope: !4887, file: !547, line: 1023, type: !4023)
!4896 = !DILocation(line: 0, scope: !4887)
!4897 = !DILocation(line: 1025, column: 10, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4887, file: !547, line: 1025, column: 9)
!4899 = !DILocation(line: 1025, column: 9, scope: !4887)
!4900 = !DILocation(line: 1029, column: 9, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4887, file: !547, line: 1029, column: 9)
!4902 = !DILocation(line: 1029, column: 36, scope: !4901)
!4903 = !DILocation(line: 1029, column: 9, scope: !4887)
!4904 = !DILocation(line: 1033, column: 13, scope: !4887)
!4905 = !DILocation(line: 1035, column: 5, scope: !4887)
!4906 = !DILocation(line: 1044, column: 5, scope: !4887)
!4907 = !DILocation(line: 1045, column: 1, scope: !4887)
!4908 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !547, file: !547, line: 1047, type: !4385, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4909)
!4909 = !{!4910, !4911}
!4910 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4908, file: !547, line: 1047, type: !653)
!4911 = !DILocalVariable(name: "uartx", scope: !4908, file: !547, line: 1049, type: !4023)
!4912 = !DILocation(line: 0, scope: !4908)
!4913 = !DILocation(line: 1051, column: 10, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4908, file: !547, line: 1051, column: 9)
!4915 = !DILocation(line: 1051, column: 9, scope: !4908)
!4916 = !DILocation(line: 1055, column: 9, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4908, file: !547, line: 1055, column: 9)
!4918 = !DILocation(line: 1055, column: 36, scope: !4917)
!4919 = !DILocation(line: 1055, column: 9, scope: !4908)
!4920 = !DILocation(line: 1059, column: 13, scope: !4908)
!4921 = !DILocation(line: 1061, column: 5, scope: !4908)
!4922 = !DILocation(line: 1067, column: 5, scope: !4908)
!4923 = !DILocation(line: 1068, column: 1, scope: !4908)
!4924 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !547, file: !547, line: 1071, type: !4925, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !546, retainedNodes: !4929)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{!4216, !653, !4927}
!4927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4928, size: 32)
!4928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !676)
!4929 = !{!4930, !4931, !4932, !4933, !4939, !4940, !4941}
!4930 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4924, file: !547, line: 1071, type: !653)
!4931 = !DILocalVariable(name: "dma_config", arg: 2, scope: !4924, file: !547, line: 1071, type: !4927)
!4932 = !DILocalVariable(name: "irq_status", scope: !4924, file: !547, line: 1073, type: !175)
!4933 = !DILocalVariable(name: "internal_dma_config", scope: !4924, file: !547, line: 1074, type: !4934)
!4934 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !557, line: 283, baseType: !4935)
!4935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !557, line: 280, size: 64, elements: !4936)
!4936 = !{!4937, !4938}
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !4935, file: !557, line: 281, baseType: !175, size: 32)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4935, file: !557, line: 282, baseType: !175, size: 32, offset: 32)
!4939 = !DILocalVariable(name: "tx_dma_channel", scope: !4924, file: !547, line: 1075, type: !4018)
!4940 = !DILocalVariable(name: "rx_dma_channel", scope: !4924, file: !547, line: 1075, type: !4018)
!4941 = !DILocalVariable(name: "status", scope: !4924, file: !547, line: 1076, type: !4079)
!4942 = !DILocation(line: 0, scope: !4924)
!4943 = !DILocation(line: 1074, column: 5, scope: !4924)
!4944 = !DILocation(line: 1074, column: 19, scope: !4924)
!4945 = !DILocation(line: 1078, column: 10, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1078, column: 9)
!4947 = !DILocation(line: 1078, column: 9, scope: !4924)
!4948 = !DILocation(line: 1081, column: 22, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1081, column: 9)
!4950 = !DILocation(line: 1081, column: 40, scope: !4949)
!4951 = !DILocation(line: 1081, column: 49, scope: !4949)
!4952 = !DILocation(line: 1082, column: 22, scope: !4949)
!4953 = !DILocation(line: 1082, column: 43, scope: !4949)
!4954 = !DILocation(line: 1081, column: 9, scope: !4924)
!4955 = !DILocation(line: 1085, column: 22, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1085, column: 9)
!4957 = !DILocation(line: 1085, column: 45, scope: !4956)
!4958 = !DILocation(line: 1085, column: 76, scope: !4956)
!4959 = !DILocation(line: 1086, column: 22, scope: !4956)
!4960 = !DILocation(line: 1086, column: 48, scope: !4956)
!4961 = !DILocation(line: 1086, column: 79, scope: !4956)
!4962 = !DILocation(line: 1090, column: 22, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1090, column: 9)
!4964 = !DILocation(line: 1090, column: 48, scope: !4963)
!4965 = !DILocation(line: 1090, column: 79, scope: !4963)
!4966 = !DILocation(line: 1091, column: 22, scope: !4963)
!4967 = !DILocation(line: 1091, column: 51, scope: !4963)
!4968 = !DILocation(line: 1091, column: 82, scope: !4963)
!4969 = !DILocation(line: 1092, column: 22, scope: !4963)
!4970 = !DILocation(line: 1092, column: 47, scope: !4963)
!4971 = !DILocation(line: 1092, column: 78, scope: !4963)
!4972 = !DILocation(line: 1098, column: 9, scope: !4973)
!4973 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1098, column: 9)
!4974 = !DILocation(line: 1098, column: 36, scope: !4973)
!4975 = !DILocation(line: 1098, column: 9, scope: !4924)
!4976 = !DILocation(line: 1102, column: 22, scope: !4924)
!4977 = !DILocation(line: 1103, column: 22, scope: !4924)
!4978 = !DILocation(line: 1105, column: 14, scope: !4924)
!4979 = !DILocation(line: 1106, column: 16, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1106, column: 9)
!4981 = !DILocation(line: 1106, column: 9, scope: !4924)
!4982 = !DILocation(line: 1107, column: 9, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4980, file: !547, line: 1106, column: 28)
!4984 = !DILocation(line: 1110, column: 62, scope: !4924)
!4985 = !DILocation(line: 1110, column: 40, scope: !4924)
!4986 = !DILocation(line: 1110, column: 25, scope: !4924)
!4987 = !DILocation(line: 1110, column: 38, scope: !4924)
!4988 = !DILocation(line: 1111, column: 44, scope: !4924)
!4989 = !DILocation(line: 1111, column: 25, scope: !4924)
!4990 = !DILocation(line: 1111, column: 30, scope: !4924)
!4991 = !DILocation(line: 1112, column: 14, scope: !4924)
!4992 = !DILocation(line: 1113, column: 16, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1113, column: 9)
!4994 = !DILocation(line: 1113, column: 9, scope: !4924)
!4995 = !DILocation(line: 1114, column: 9, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !547, line: 1113, column: 28)
!4997 = !DILocation(line: 1117, column: 61, scope: !4924)
!4998 = !DILocation(line: 1117, column: 14, scope: !4924)
!4999 = !DILocation(line: 1118, column: 16, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1118, column: 9)
!5001 = !DILocation(line: 1118, column: 9, scope: !4924)
!5002 = !DILocation(line: 1119, column: 9, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !5000, file: !547, line: 1118, column: 28)
!5004 = !DILocation(line: 1123, column: 14, scope: !4924)
!5005 = !DILocation(line: 1124, column: 16, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1124, column: 9)
!5007 = !DILocation(line: 1124, column: 9, scope: !4924)
!5008 = !DILocation(line: 1125, column: 9, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5006, file: !547, line: 1124, column: 28)
!5010 = !DILocation(line: 1128, column: 62, scope: !4924)
!5011 = !DILocation(line: 1128, column: 40, scope: !4924)
!5012 = !DILocation(line: 1128, column: 38, scope: !4924)
!5013 = !DILocation(line: 1129, column: 44, scope: !4924)
!5014 = !DILocation(line: 1129, column: 30, scope: !4924)
!5015 = !DILocation(line: 1130, column: 14, scope: !4924)
!5016 = !DILocation(line: 1131, column: 16, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1131, column: 9)
!5018 = !DILocation(line: 1131, column: 9, scope: !4924)
!5019 = !DILocation(line: 1132, column: 9, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !547, line: 1131, column: 28)
!5021 = !DILocation(line: 1135, column: 61, scope: !4924)
!5022 = !DILocation(line: 1135, column: 14, scope: !4924)
!5023 = !DILocation(line: 1136, column: 16, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1136, column: 9)
!5025 = !DILocation(line: 1136, column: 9, scope: !4924)
!5026 = !DILocation(line: 1137, column: 9, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5024, file: !547, line: 1136, column: 28)
!5028 = !DILocation(line: 1140, column: 64, scope: !4924)
!5029 = !DILocation(line: 1140, column: 14, scope: !4924)
!5030 = !DILocation(line: 1141, column: 16, scope: !5031)
!5031 = distinct !DILexicalBlock(scope: !4924, file: !547, line: 1141, column: 9)
!5032 = !DILocation(line: 1141, column: 9, scope: !4924)
!5033 = !DILocation(line: 1142, column: 9, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5031, file: !547, line: 1141, column: 28)
!5035 = !DILocation(line: 1146, column: 18, scope: !4924)
!5036 = !DILocation(line: 1147, column: 66, scope: !4924)
!5037 = !DILocation(line: 1147, column: 34, scope: !4924)
!5038 = !DILocation(line: 1147, column: 52, scope: !4924)
!5039 = !DILocation(line: 1148, column: 71, scope: !4924)
!5040 = !DILocation(line: 1148, column: 34, scope: !4924)
!5041 = !DILocation(line: 1148, column: 57, scope: !4924)
!5042 = !DILocation(line: 1149, column: 74, scope: !4924)
!5043 = !DILocation(line: 1149, column: 34, scope: !4924)
!5044 = !DILocation(line: 1149, column: 60, scope: !4924)
!5045 = !DILocation(line: 1150, column: 73, scope: !4924)
!5046 = !DILocation(line: 1150, column: 34, scope: !4924)
!5047 = !DILocation(line: 1150, column: 59, scope: !4924)
!5048 = !DILocation(line: 1151, column: 69, scope: !4924)
!5049 = !DILocation(line: 1151, column: 34, scope: !4924)
!5050 = !DILocation(line: 1151, column: 55, scope: !4924)
!5051 = !DILocation(line: 1152, column: 74, scope: !4924)
!5052 = !DILocation(line: 1152, column: 34, scope: !4924)
!5053 = !DILocation(line: 1152, column: 60, scope: !4924)
!5054 = !DILocation(line: 1153, column: 77, scope: !4924)
!5055 = !DILocation(line: 1153, column: 34, scope: !4924)
!5056 = !DILocation(line: 1153, column: 63, scope: !4924)
!5057 = !DILocation(line: 1154, column: 5, scope: !4924)
!5058 = !DILocation(line: 1156, column: 5, scope: !4924)
!5059 = !DILocation(line: 1157, column: 1, scope: !4924)
!5060 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2462, file: !2462, line: 52, type: !5061, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5118)
!5061 = !DISubroutineType(types: !5062)
!5062 = !{null, !5063, !175}
!5063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5064, size: 32)
!5064 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !78, line: 588, baseType: !5065)
!5065 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !78, line: 542, size: 800, elements: !5066)
!5066 = !{!5067, !5073, !5078, !5084, !5085, !5090, !5095, !5096, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5109, !5110, !5111, !5112, !5113, !5114, !5115, !5116, !5117}
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5065, file: !78, line: 547, baseType: !5068, size: 32)
!5068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5065, file: !78, line: 543, size: 32, elements: !5069)
!5069 = !{!5070, !5071, !5072}
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5068, file: !78, line: 544, baseType: !188, size: 32)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5068, file: !78, line: 545, baseType: !184, size: 32)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5068, file: !78, line: 546, baseType: !184, size: 32)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5065, file: !78, line: 551, baseType: !5074, size: 32, offset: 32)
!5074 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5065, file: !78, line: 548, size: 32, elements: !5075)
!5075 = !{!5076, !5077}
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5074, file: !78, line: 549, baseType: !184, size: 32)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5074, file: !78, line: 550, baseType: !184, size: 32)
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5065, file: !78, line: 556, baseType: !5079, size: 32, offset: 64)
!5079 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5065, file: !78, line: 552, size: 32, elements: !5080)
!5080 = !{!5081, !5082, !5083}
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5079, file: !78, line: 553, baseType: !188, size: 32)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5079, file: !78, line: 554, baseType: !184, size: 32)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5079, file: !78, line: 555, baseType: !184, size: 32)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5065, file: !78, line: 557, baseType: !184, size: 32, offset: 96)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5065, file: !78, line: 561, baseType: !5086, size: 32, offset: 128)
!5086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5065, file: !78, line: 558, size: 32, elements: !5087)
!5087 = !{!5088, !5089}
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5086, file: !78, line: 559, baseType: !184, size: 32)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5086, file: !78, line: 560, baseType: !184, size: 32)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5065, file: !78, line: 565, baseType: !5091, size: 32, offset: 160)
!5091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5065, file: !78, line: 562, size: 32, elements: !5092)
!5092 = !{!5093, !5094}
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5091, file: !78, line: 563, baseType: !188, size: 32)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5091, file: !78, line: 564, baseType: !184, size: 32)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5065, file: !78, line: 566, baseType: !184, size: 32, offset: 192)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5065, file: !78, line: 570, baseType: !5097, size: 32, offset: 224)
!5097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5065, file: !78, line: 567, size: 32, elements: !5098)
!5098 = !{!5099, !5100}
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5097, file: !78, line: 568, baseType: !184, size: 32)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5097, file: !78, line: 569, baseType: !184, size: 32)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5065, file: !78, line: 571, baseType: !184, size: 32, offset: 256)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5065, file: !78, line: 572, baseType: !184, size: 32, offset: 288)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5065, file: !78, line: 573, baseType: !184, size: 32, offset: 320)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5065, file: !78, line: 574, baseType: !184, size: 32, offset: 352)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5065, file: !78, line: 575, baseType: !188, size: 32, offset: 384)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5065, file: !78, line: 576, baseType: !184, size: 32, offset: 416)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5065, file: !78, line: 577, baseType: !184, size: 32, offset: 448)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5065, file: !78, line: 578, baseType: !184, size: 32, offset: 480)
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5065, file: !78, line: 579, baseType: !184, size: 32, offset: 512)
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5065, file: !78, line: 580, baseType: !184, size: 32, offset: 544)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5065, file: !78, line: 581, baseType: !184, size: 32, offset: 576)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5065, file: !78, line: 582, baseType: !184, size: 32, offset: 608)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5065, file: !78, line: 583, baseType: !184, size: 32, offset: 640)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5065, file: !78, line: 584, baseType: !184, size: 32, offset: 672)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5065, file: !78, line: 585, baseType: !184, size: 32, offset: 704)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5065, file: !78, line: 586, baseType: !188, size: 32, offset: 736)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5065, file: !78, line: 587, baseType: !184, size: 32, offset: 768)
!5118 = !{!5119, !5120, !5121, !5122, !5123, !5124, !5125, !5126, !5127, !5128, !5129, !5133}
!5119 = !DILocalVariable(name: "uartx", arg: 1, scope: !5060, file: !2462, line: 52, type: !5063)
!5120 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5060, file: !2462, line: 52, type: !175)
!5121 = !DILocalVariable(name: "uart_clock", scope: !5060, file: !2462, line: 54, type: !175)
!5122 = !DILocalVariable(name: "integer", scope: !5060, file: !2462, line: 54, type: !175)
!5123 = !DILocalVariable(name: "remainder", scope: !5060, file: !2462, line: 54, type: !175)
!5124 = !DILocalVariable(name: "fraction", scope: !5060, file: !2462, line: 54, type: !175)
!5125 = !DILocalVariable(name: "dll_dlm", scope: !5060, file: !2462, line: 55, type: !175)
!5126 = !DILocalVariable(name: "sample_count", scope: !5060, file: !2462, line: 55, type: !175)
!5127 = !DILocalVariable(name: "sample_point", scope: !5060, file: !2462, line: 55, type: !175)
!5128 = !DILocalVariable(name: "temp_lcr", scope: !5060, file: !2462, line: 55, type: !175)
!5129 = !DILocalVariable(name: "fraction_L_mapping", scope: !5060, file: !2462, line: 56, type: !5130)
!5130 = !DICompositeType(tag: DW_TAG_array_type, baseType: !175, size: 320, elements: !5131)
!5131 = !{!5132}
!5132 = !DISubrange(count: 10)
!5133 = !DILocalVariable(name: "fraction_M_mapping", scope: !5060, file: !2462, line: 57, type: !5130)
!5134 = !DILocation(line: 0, scope: !5060)
!5135 = !DILocation(line: 56, column: 14, scope: !5060)
!5136 = !DILocation(line: 57, column: 5, scope: !5060)
!5137 = !DILocation(line: 57, column: 14, scope: !5060)
!5138 = !DILocation(line: 59, column: 12, scope: !5060)
!5139 = !DILocation(line: 59, column: 23, scope: !5060)
!5140 = !DILocation(line: 60, column: 12, scope: !5060)
!5141 = !DILocation(line: 60, column: 22, scope: !5060)
!5142 = !DILocation(line: 61, column: 12, scope: !5060)
!5143 = !DILocation(line: 61, column: 22, scope: !5060)
!5144 = !DILocation(line: 63, column: 9, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5060, file: !2462, line: 63, column: 9)
!5146 = !DILocation(line: 63, column: 9, scope: !5060)
!5147 = !DILocation(line: 64, column: 22, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5145, file: !2462, line: 63, column: 37)
!5149 = !DILocation(line: 64, column: 45, scope: !5148)
!5150 = !DILocation(line: 65, column: 5, scope: !5148)
!5151 = !DILocation(line: 0, scope: !5145)
!5152 = !DILocation(line: 69, column: 45, scope: !5060)
!5153 = !DILocation(line: 69, column: 26, scope: !5060)
!5154 = !DILocation(line: 70, column: 30, scope: !5060)
!5155 = !DILocation(line: 70, column: 36, scope: !5060)
!5156 = !DILocation(line: 70, column: 63, scope: !5060)
!5157 = !DILocation(line: 71, column: 20, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5060, file: !2462, line: 71, column: 9)
!5159 = !DILocation(line: 71, column: 26, scope: !5158)
!5160 = !DILocation(line: 77, column: 5, scope: !5060)
!5161 = !DILocation(line: 77, column: 25, scope: !5060)
!5162 = !DILocation(line: 78, column: 16, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5060, file: !2462, line: 77, column: 32)
!5164 = distinct !{!5164, !5160, !5165}
!5165 = !DILocation(line: 80, column: 5, scope: !5060)
!5166 = !DILocation(line: 82, column: 35, scope: !5060)
!5167 = !DILocation(line: 82, column: 66, scope: !5060)
!5168 = !DILocation(line: 84, column: 18, scope: !5060)
!5169 = !DILocation(line: 85, column: 34, scope: !5060)
!5170 = !DILocation(line: 85, column: 39, scope: !5060)
!5171 = !DILocation(line: 87, column: 12, scope: !5060)
!5172 = !DILocation(line: 87, column: 22, scope: !5060)
!5173 = !DILocation(line: 89, column: 23, scope: !5060)
!5174 = !DILocation(line: 90, column: 27, scope: !5060)
!5175 = !DILocation(line: 90, column: 16, scope: !5060)
!5176 = !DILocation(line: 91, column: 38, scope: !5060)
!5177 = !DILocation(line: 91, column: 24, scope: !5060)
!5178 = !DILocation(line: 91, column: 28, scope: !5060)
!5179 = !DILocation(line: 92, column: 35, scope: !5060)
!5180 = !DILocation(line: 92, column: 41, scope: !5060)
!5181 = !DILocation(line: 92, column: 20, scope: !5060)
!5182 = !DILocation(line: 92, column: 24, scope: !5060)
!5183 = !DILocation(line: 93, column: 16, scope: !5060)
!5184 = !DILocation(line: 95, column: 12, scope: !5060)
!5185 = !DILocation(line: 95, column: 25, scope: !5060)
!5186 = !DILocation(line: 96, column: 12, scope: !5060)
!5187 = !DILocation(line: 96, column: 25, scope: !5060)
!5188 = !DILocation(line: 98, column: 24, scope: !5060)
!5189 = !DILocation(line: 98, column: 22, scope: !5060)
!5190 = !DILocation(line: 99, column: 24, scope: !5060)
!5191 = !DILocation(line: 99, column: 22, scope: !5060)
!5192 = !DILocation(line: 101, column: 25, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5060, file: !2462, line: 101, column: 9)
!5194 = !DILocation(line: 101, column: 9, scope: !5060)
!5195 = !DILocation(line: 102, column: 16, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5193, file: !2462, line: 101, column: 37)
!5197 = !DILocation(line: 102, column: 22, scope: !5196)
!5198 = !DILocation(line: 103, column: 5, scope: !5196)
!5199 = !DILocation(line: 104, column: 1, scope: !5060)
!5200 = distinct !DISubprogram(name: "uart_set_format", scope: !2462, file: !2462, line: 106, type: !5201, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5203)
!5201 = !DISubroutineType(types: !5202)
!5202 = !{null, !5063, !4267, !4269, !4271}
!5203 = !{!5204, !5205, !5206, !5207, !5208}
!5204 = !DILocalVariable(name: "uartx", arg: 1, scope: !5200, file: !2462, line: 106, type: !5063)
!5205 = !DILocalVariable(name: "word_length", arg: 2, scope: !5200, file: !2462, line: 107, type: !4267)
!5206 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5200, file: !2462, line: 108, type: !4269)
!5207 = !DILocalVariable(name: "parity", arg: 4, scope: !5200, file: !2462, line: 109, type: !4271)
!5208 = !DILocalVariable(name: "byte", scope: !5200, file: !2462, line: 111, type: !970)
!5209 = !DILocation(line: 0, scope: !5200)
!5210 = !DILocation(line: 114, column: 19, scope: !5200)
!5211 = !DILocation(line: 115, column: 16, scope: !5200)
!5212 = !DILocation(line: 118, column: 10, scope: !5200)
!5213 = !DILocation(line: 119, column: 5, scope: !5200)
!5214 = !DILocation(line: 124, column: 18, scope: !5215)
!5215 = distinct !DILexicalBlock(scope: !5200, file: !2462, line: 119, column: 26)
!5216 = !DILocation(line: 125, column: 13, scope: !5215)
!5217 = !DILocation(line: 127, column: 18, scope: !5215)
!5218 = !DILocation(line: 128, column: 13, scope: !5215)
!5219 = !DILocation(line: 130, column: 18, scope: !5215)
!5220 = !DILocation(line: 131, column: 13, scope: !5215)
!5221 = !DILocation(line: 137, column: 10, scope: !5200)
!5222 = !DILocation(line: 138, column: 5, scope: !5200)
!5223 = !DILocation(line: 151, column: 5, scope: !5200)
!5224 = !DILocation(line: 166, column: 18, scope: !5200)
!5225 = !DILocation(line: 166, column: 16, scope: !5200)
!5226 = !DILocation(line: 167, column: 1, scope: !5200)
!5227 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2462, file: !2462, line: 169, type: !5228, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5230)
!5228 = !DISubroutineType(types: !5229)
!5229 = !{null, !5063, !378}
!5230 = !{!5231, !5232, !5233}
!5231 = !DILocalVariable(name: "uartx", arg: 1, scope: !5227, file: !2462, line: 169, type: !5063)
!5232 = !DILocalVariable(name: "byte", arg: 2, scope: !5227, file: !2462, line: 169, type: !378)
!5233 = !DILocalVariable(name: "LSR", scope: !5227, file: !2462, line: 171, type: !970)
!5234 = !DILocation(line: 0, scope: !5227)
!5235 = !DILocation(line: 173, column: 5, scope: !5227)
!5236 = !DILocation(line: 174, column: 31, scope: !5237)
!5237 = distinct !DILexicalBlock(scope: !5227, file: !2462, line: 173, column: 15)
!5238 = !DILocation(line: 175, column: 17, scope: !5239)
!5239 = distinct !DILexicalBlock(scope: !5237, file: !2462, line: 175, column: 13)
!5240 = !DILocation(line: 175, column: 13, scope: !5237)
!5241 = distinct !{!5241, !5235, !5242}
!5242 = !DILocation(line: 179, column: 5, scope: !5227)
!5243 = !DILocation(line: 176, column: 38, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5239, file: !2462, line: 175, column: 39)
!5245 = !DILocation(line: 176, column: 32, scope: !5244)
!5246 = !DILocation(line: 176, column: 36, scope: !5244)
!5247 = !DILocation(line: 180, column: 1, scope: !5227)
!5248 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2462, file: !2462, line: 182, type: !5249, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5251)
!5249 = !DISubroutineType(types: !5250)
!5250 = !{!378, !5063}
!5251 = !{!5252, !5253, !5254}
!5252 = !DILocalVariable(name: "uartx", arg: 1, scope: !5248, file: !2462, line: 182, type: !5063)
!5253 = !DILocalVariable(name: "LSR", scope: !5248, file: !2462, line: 184, type: !970)
!5254 = !DILocalVariable(name: "byte", scope: !5248, file: !2462, line: 185, type: !378)
!5255 = !DILocation(line: 0, scope: !5248)
!5256 = !DILocation(line: 187, column: 5, scope: !5248)
!5257 = !DILocation(line: 188, column: 31, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5248, file: !2462, line: 187, column: 15)
!5259 = !DILocation(line: 189, column: 17, scope: !5260)
!5260 = distinct !DILexicalBlock(scope: !5258, file: !2462, line: 189, column: 13)
!5261 = !DILocation(line: 189, column: 13, scope: !5258)
!5262 = distinct !{!5262, !5256, !5263}
!5263 = !DILocation(line: 193, column: 5, scope: !5248)
!5264 = !DILocation(line: 190, column: 48, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5260, file: !2462, line: 189, column: 37)
!5266 = !DILocation(line: 190, column: 20, scope: !5265)
!5267 = !DILocation(line: 195, column: 5, scope: !5248)
!5268 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2462, file: !2462, line: 198, type: !5269, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5271)
!5269 = !DISubroutineType(types: !5270)
!5270 = !{!175, !5063}
!5271 = !{!5272, !5273, !5274}
!5272 = !DILocalVariable(name: "uartx", arg: 1, scope: !5268, file: !2462, line: 198, type: !5063)
!5273 = !DILocalVariable(name: "LSR", scope: !5268, file: !2462, line: 200, type: !970)
!5274 = !DILocalVariable(name: "value", scope: !5268, file: !2462, line: 201, type: !175)
!5275 = !DILocation(line: 0, scope: !5268)
!5276 = !DILocation(line: 203, column: 27, scope: !5268)
!5277 = !DILocation(line: 204, column: 13, scope: !5278)
!5278 = distinct !DILexicalBlock(scope: !5268, file: !2462, line: 204, column: 9)
!5279 = !DILocation(line: 204, column: 9, scope: !5268)
!5280 = !DILocation(line: 205, column: 36, scope: !5281)
!5281 = distinct !DILexicalBlock(scope: !5278, file: !2462, line: 204, column: 33)
!5282 = !DILocation(line: 206, column: 5, scope: !5281)
!5283 = !DILocation(line: 0, scope: !5278)
!5284 = !DILocation(line: 210, column: 5, scope: !5268)
!5285 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2462, file: !2462, line: 213, type: !5286, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5288)
!5286 = !DISubroutineType(types: !5287)
!5287 = !{null, !5063}
!5288 = !{!5289, !5290, !5291}
!5289 = !DILocalVariable(name: "uartx", arg: 1, scope: !5285, file: !2462, line: 213, type: !5063)
!5290 = !DILocalVariable(name: "EFR", scope: !5285, file: !2462, line: 215, type: !970)
!5291 = !DILocalVariable(name: "LCR", scope: !5285, file: !2462, line: 215, type: !970)
!5292 = !DILocation(line: 0, scope: !5285)
!5293 = !DILocation(line: 217, column: 18, scope: !5285)
!5294 = !DILocation(line: 219, column: 16, scope: !5285)
!5295 = !DILocation(line: 220, column: 30, scope: !5285)
!5296 = !DILocation(line: 222, column: 30, scope: !5285)
!5297 = !DILocation(line: 222, column: 28, scope: !5285)
!5298 = !DILocation(line: 223, column: 12, scope: !5285)
!5299 = !DILocation(line: 223, column: 22, scope: !5285)
!5300 = !DILocation(line: 225, column: 16, scope: !5285)
!5301 = !DILocation(line: 226, column: 21, scope: !5285)
!5302 = !DILocation(line: 226, column: 25, scope: !5285)
!5303 = !DILocation(line: 228, column: 18, scope: !5285)
!5304 = !DILocation(line: 228, column: 16, scope: !5285)
!5305 = !DILocation(line: 229, column: 1, scope: !5285)
!5306 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2462, file: !2462, line: 231, type: !5307, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5309)
!5307 = !DISubroutineType(types: !5308)
!5308 = !{null, !5063, !378, !378, !378}
!5309 = !{!5310, !5311, !5312, !5313, !5314, !5315}
!5310 = !DILocalVariable(name: "uartx", arg: 1, scope: !5306, file: !2462, line: 231, type: !5063)
!5311 = !DILocalVariable(name: "xon", arg: 2, scope: !5306, file: !2462, line: 232, type: !378)
!5312 = !DILocalVariable(name: "xoff", arg: 3, scope: !5306, file: !2462, line: 233, type: !378)
!5313 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5306, file: !2462, line: 234, type: !378)
!5314 = !DILocalVariable(name: "EFR", scope: !5306, file: !2462, line: 236, type: !970)
!5315 = !DILocalVariable(name: "LCR", scope: !5306, file: !2462, line: 236, type: !970)
!5316 = !DILocation(line: 0, scope: !5306)
!5317 = !DILocation(line: 238, column: 18, scope: !5306)
!5318 = !DILocation(line: 240, column: 16, scope: !5306)
!5319 = !DILocation(line: 241, column: 28, scope: !5306)
!5320 = !DILocation(line: 241, column: 21, scope: !5306)
!5321 = !DILocation(line: 241, column: 26, scope: !5306)
!5322 = !DILocation(line: 242, column: 20, scope: !5306)
!5323 = !DILocation(line: 242, column: 12, scope: !5306)
!5324 = !DILocation(line: 242, column: 18, scope: !5306)
!5325 = !DILocation(line: 243, column: 30, scope: !5306)
!5326 = !DILocation(line: 245, column: 30, scope: !5306)
!5327 = !DILocation(line: 245, column: 28, scope: !5306)
!5328 = !DILocation(line: 246, column: 25, scope: !5306)
!5329 = !DILocation(line: 246, column: 12, scope: !5306)
!5330 = !DILocation(line: 246, column: 23, scope: !5306)
!5331 = !DILocation(line: 247, column: 12, scope: !5306)
!5332 = !DILocation(line: 247, column: 22, scope: !5306)
!5333 = !DILocation(line: 249, column: 18, scope: !5306)
!5334 = !DILocation(line: 249, column: 16, scope: !5306)
!5335 = !DILocation(line: 250, column: 1, scope: !5306)
!5336 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2462, file: !2462, line: 252, type: !5286, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5337)
!5337 = !{!5338, !5339}
!5338 = !DILocalVariable(name: "uartx", arg: 1, scope: !5336, file: !2462, line: 252, type: !5063)
!5339 = !DILocalVariable(name: "LCR", scope: !5336, file: !2462, line: 254, type: !970)
!5340 = !DILocation(line: 0, scope: !5336)
!5341 = !DILocation(line: 256, column: 18, scope: !5336)
!5342 = !DILocation(line: 258, column: 16, scope: !5336)
!5343 = !DILocation(line: 259, column: 24, scope: !5336)
!5344 = !DILocation(line: 259, column: 28, scope: !5336)
!5345 = !DILocation(line: 261, column: 16, scope: !5336)
!5346 = !DILocation(line: 262, column: 18, scope: !5336)
!5347 = !DILocation(line: 262, column: 16, scope: !5336)
!5348 = !DILocation(line: 263, column: 1, scope: !5336)
!5349 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2462, file: !2462, line: 265, type: !5286, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5350)
!5350 = !{!5351, !5352, !5353}
!5351 = !DILocalVariable(name: "uartx", arg: 1, scope: !5349, file: !2462, line: 265, type: !5063)
!5352 = !DILocalVariable(name: "EFR", scope: !5349, file: !2462, line: 267, type: !970)
!5353 = !DILocalVariable(name: "LCR", scope: !5349, file: !2462, line: 267, type: !970)
!5354 = !DILocation(line: 0, scope: !5349)
!5355 = !DILocation(line: 269, column: 18, scope: !5349)
!5356 = !DILocation(line: 271, column: 16, scope: !5349)
!5357 = !DILocation(line: 272, column: 30, scope: !5349)
!5358 = !DILocation(line: 274, column: 30, scope: !5349)
!5359 = !DILocation(line: 274, column: 28, scope: !5349)
!5360 = !DILocation(line: 276, column: 16, scope: !5349)
!5361 = !DILocation(line: 277, column: 28, scope: !5349)
!5362 = !DILocation(line: 283, column: 18, scope: !5349)
!5363 = !DILocation(line: 283, column: 16, scope: !5349)
!5364 = !DILocation(line: 284, column: 1, scope: !5349)
!5365 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2462, file: !2462, line: 307, type: !5286, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5366)
!5366 = !{!5367, !5368, !5369}
!5367 = !DILocalVariable(name: "uartx", arg: 1, scope: !5365, file: !2462, line: 307, type: !5063)
!5368 = !DILocalVariable(name: "IER", scope: !5365, file: !2462, line: 309, type: !970)
!5369 = !DILocalVariable(name: "LCR", scope: !5365, file: !2462, line: 309, type: !970)
!5370 = !DILocation(line: 0, scope: !5365)
!5371 = !DILocation(line: 311, column: 18, scope: !5365)
!5372 = !DILocation(line: 313, column: 16, scope: !5365)
!5373 = !DILocation(line: 314, column: 26, scope: !5365)
!5374 = !DILocation(line: 316, column: 26, scope: !5365)
!5375 = !DILocation(line: 316, column: 24, scope: !5365)
!5376 = !DILocation(line: 318, column: 19, scope: !5365)
!5377 = !DILocation(line: 318, column: 16, scope: !5365)
!5378 = !DILocation(line: 319, column: 1, scope: !5365)
!5379 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2462, file: !2462, line: 321, type: !5380, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5382)
!5380 = !DISubroutineType(types: !5381)
!5381 = !{null, !5063, !858}
!5382 = !{!5383, !5384, !5385}
!5383 = !DILocalVariable(name: "uartx", arg: 1, scope: !5379, file: !2462, line: 321, type: !5063)
!5384 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5379, file: !2462, line: 321, type: !858)
!5385 = !DILocalVariable(name: "FCR", scope: !5379, file: !2462, line: 323, type: !970)
!5386 = !DILocation(line: 0, scope: !5379)
!5387 = !DILocation(line: 327, column: 9, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5379, file: !2462, line: 327, column: 9)
!5389 = !DILocation(line: 333, column: 24, scope: !5379)
!5390 = !DILocation(line: 333, column: 28, scope: !5379)
!5391 = !DILocation(line: 334, column: 1, scope: !5379)
!5392 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2462, file: !2462, line: 336, type: !5393, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5396)
!5393 = !DISubroutineType(types: !5394)
!5394 = !{!5395, !5063}
!5395 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !648, line: 55, baseType: !704)
!5396 = !{!5397, !5398, !5399, !5400}
!5397 = !DILocalVariable(name: "uartx", arg: 1, scope: !5392, file: !2462, line: 336, type: !5063)
!5398 = !DILocalVariable(name: "IIR", scope: !5392, file: !2462, line: 338, type: !970)
!5399 = !DILocalVariable(name: "LSR", scope: !5392, file: !2462, line: 338, type: !970)
!5400 = !DILocalVariable(name: "type", scope: !5392, file: !2462, line: 339, type: !5395)
!5401 = !DILocation(line: 0, scope: !5392)
!5402 = !DILocation(line: 341, column: 30, scope: !5392)
!5403 = !DILocation(line: 342, column: 13, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5392, file: !2462, line: 342, column: 9)
!5405 = !DILocation(line: 342, column: 9, scope: !5392)
!5406 = !DILocation(line: 346, column: 17, scope: !5392)
!5407 = !DILocation(line: 346, column: 5, scope: !5392)
!5408 = !DILocation(line: 350, column: 13, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5392, file: !2462, line: 346, column: 37)
!5410 = !DILocation(line: 353, column: 35, scope: !5409)
!5411 = !DILocation(line: 354, column: 21, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !5409, file: !2462, line: 354, column: 17)
!5413 = !DILocation(line: 363, column: 13, scope: !5409)
!5414 = !DILocation(line: 369, column: 1, scope: !5392)
!5415 = distinct !DISubprogram(name: "uart_verify_error", scope: !2462, file: !2462, line: 371, type: !5416, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5418)
!5416 = !DISubroutineType(types: !5417)
!5417 = !{!858, !5063}
!5418 = !{!5419, !5420, !5421}
!5419 = !DILocalVariable(name: "uartx", arg: 1, scope: !5415, file: !2462, line: 371, type: !5063)
!5420 = !DILocalVariable(name: "LSR", scope: !5415, file: !2462, line: 373, type: !970)
!5421 = !DILocalVariable(name: "ret", scope: !5415, file: !2462, line: 374, type: !858)
!5422 = !DILocation(line: 0, scope: !5415)
!5423 = !DILocation(line: 376, column: 27, scope: !5415)
!5424 = !DILocation(line: 377, column: 15, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5415, file: !2462, line: 377, column: 9)
!5426 = !DILocation(line: 377, column: 9, scope: !5415)
!5427 = !DILocation(line: 381, column: 5, scope: !5415)
!5428 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2462, file: !2462, line: 384, type: !5286, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5429)
!5429 = !{!5430, !5431}
!5430 = !DILocalVariable(name: "uartx", arg: 1, scope: !5428, file: !2462, line: 384, type: !5063)
!5431 = !DILocalVariable(name: "DMA_EN", scope: !5428, file: !2462, line: 386, type: !970)
!5432 = !DILocation(line: 0, scope: !5428)
!5433 = !DILocation(line: 388, column: 21, scope: !5428)
!5434 = !DILocation(line: 390, column: 1, scope: !5428)
!5435 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2462, file: !2462, line: 392, type: !5286, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5436)
!5436 = !{!5437}
!5437 = !DILocalVariable(name: "uartx", arg: 1, scope: !5435, file: !2462, line: 392, type: !5063)
!5438 = !DILocation(line: 0, scope: !5435)
!5439 = !DILocation(line: 394, column: 12, scope: !5435)
!5440 = !DILocation(line: 394, column: 16, scope: !5435)
!5441 = !DILocation(line: 395, column: 24, scope: !5435)
!5442 = !DILocation(line: 395, column: 28, scope: !5435)
!5443 = !DILocation(line: 396, column: 21, scope: !5435)
!5444 = !DILocation(line: 396, column: 26, scope: !5435)
!5445 = !DILocation(line: 397, column: 12, scope: !5435)
!5446 = !DILocation(line: 397, column: 18, scope: !5435)
!5447 = !DILocation(line: 399, column: 16, scope: !5435)
!5448 = !DILocation(line: 400, column: 24, scope: !5435)
!5449 = !DILocation(line: 400, column: 28, scope: !5435)
!5450 = !DILocation(line: 401, column: 20, scope: !5435)
!5451 = !DILocation(line: 401, column: 24, scope: !5435)
!5452 = !DILocation(line: 403, column: 16, scope: !5435)
!5453 = !DILocation(line: 404, column: 24, scope: !5435)
!5454 = !DILocation(line: 405, column: 28, scope: !5435)
!5455 = !DILocation(line: 407, column: 16, scope: !5435)
!5456 = !DILocation(line: 408, column: 28, scope: !5435)
!5457 = !DILocation(line: 409, column: 16, scope: !5435)
!5458 = !DILocation(line: 411, column: 25, scope: !5435)
!5459 = !DILocation(line: 412, column: 22, scope: !5435)
!5460 = !DILocation(line: 412, column: 26, scope: !5435)
!5461 = !DILocation(line: 413, column: 12, scope: !5435)
!5462 = !DILocation(line: 413, column: 24, scope: !5435)
!5463 = !DILocation(line: 414, column: 12, scope: !5435)
!5464 = !DILocation(line: 414, column: 22, scope: !5435)
!5465 = !DILocation(line: 415, column: 12, scope: !5435)
!5466 = !DILocation(line: 415, column: 25, scope: !5435)
!5467 = !DILocation(line: 416, column: 12, scope: !5435)
!5468 = !DILocation(line: 416, column: 25, scope: !5435)
!5469 = !DILocation(line: 417, column: 12, scope: !5435)
!5470 = !DILocation(line: 417, column: 23, scope: !5435)
!5471 = !DILocation(line: 418, column: 12, scope: !5435)
!5472 = !DILocation(line: 418, column: 27, scope: !5435)
!5473 = !DILocation(line: 419, column: 12, scope: !5435)
!5474 = !DILocation(line: 419, column: 18, scope: !5435)
!5475 = !DILocation(line: 420, column: 12, scope: !5435)
!5476 = !DILocation(line: 420, column: 23, scope: !5435)
!5477 = !DILocation(line: 421, column: 12, scope: !5435)
!5478 = !DILocation(line: 421, column: 22, scope: !5435)
!5479 = !DILocation(line: 422, column: 12, scope: !5435)
!5480 = !DILocation(line: 422, column: 21, scope: !5435)
!5481 = !DILocation(line: 423, column: 12, scope: !5435)
!5482 = !DILocation(line: 423, column: 19, scope: !5435)
!5483 = !DILocation(line: 424, column: 23, scope: !5435)
!5484 = !DILocation(line: 425, column: 12, scope: !5435)
!5485 = !DILocation(line: 425, column: 22, scope: !5435)
!5486 = !DILocation(line: 426, column: 12, scope: !5435)
!5487 = !DILocation(line: 426, column: 22, scope: !5435)
!5488 = !DILocation(line: 427, column: 1, scope: !5435)
!5489 = distinct !DISubprogram(name: "uart_query_empty", scope: !2462, file: !2462, line: 429, type: !5286, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2461, retainedNodes: !5490)
!5490 = !{!5491}
!5491 = !DILocalVariable(name: "uartx", arg: 1, scope: !5489, file: !2462, line: 429, type: !5063)
!5492 = !DILocation(line: 0, scope: !5489)
!5493 = !DILocation(line: 431, column: 5, scope: !5489)
!5494 = !DILocation(line: 431, column: 31, scope: !5489)
!5495 = !DILocation(line: 431, column: 36, scope: !5489)
!5496 = !DILocation(line: 431, column: 12, scope: !5489)
!5497 = distinct !{!5497, !5493, !5498}
!5498 = !DILocation(line: 431, column: 44, scope: !5489)
!5499 = !DILocation(line: 432, column: 1, scope: !5489)
!5500 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !702, file: !702, line: 134, type: !5501, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5503)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!4018, !653, !858}
!5503 = !{!5504, !5505, !5506}
!5504 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5500, file: !702, line: 134, type: !653)
!5505 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5500, file: !702, line: 134, type: !858)
!5506 = !DILocalVariable(name: "dma_channel", scope: !5500, file: !702, line: 136, type: !4018)
!5507 = !DILocation(line: 0, scope: !5500)
!5508 = !DILocation(line: 138, column: 5, scope: !5500)
!5509 = !DILocation(line: 140, column: 17, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !702, line: 140, column: 17)
!5511 = distinct !DILexicalBlock(scope: !5500, file: !702, line: 138, column: 24)
!5512 = !DILocation(line: 147, column: 17, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5511, file: !702, line: 147, column: 17)
!5514 = !DILocation(line: 154, column: 17, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5511, file: !702, line: 154, column: 17)
!5516 = !DILocation(line: 161, column: 17, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5511, file: !702, line: 161, column: 17)
!5518 = !DILocation(line: 171, column: 5, scope: !5500)
!5519 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !702, file: !702, line: 174, type: !5520, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5528)
!5520 = !DISubroutineType(types: !5521)
!5521 = !{null, !4018, !5522}
!5522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5523, size: 32)
!5523 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !648, line: 96, baseType: !5524)
!5524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !648, line: 93, size: 64, elements: !5525)
!5525 = !{!5526, !5527}
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !5524, file: !648, line: 94, baseType: !211, size: 8)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !5524, file: !648, line: 95, baseType: !653, size: 32, offset: 32)
!5528 = !{!5529, !5530}
!5529 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !5519, file: !702, line: 174, type: !4018)
!5530 = !DILocalVariable(name: "user_data", arg: 2, scope: !5519, file: !702, line: 174, type: !5522)
!5531 = !DILocation(line: 0, scope: !5519)
!5532 = !DILocation(line: 176, column: 5, scope: !5519)
!5533 = !DILocation(line: 0, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5519, file: !702, line: 176, column: 26)
!5535 = !DILocation(line: 212, column: 1, scope: !5519)
!5536 = distinct !DISubprogram(name: "uart_enable_dma", scope: !702, file: !702, line: 214, type: !5537, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5539)
!5537 = !DISubroutineType(types: !5538)
!5538 = !{null, !715}
!5539 = !{!5540}
!5540 = !DILocalVariable(name: "uartx", arg: 1, scope: !5536, file: !702, line: 214, type: !715)
!5541 = !DILocation(line: 0, scope: !5536)
!5542 = !DILocation(line: 216, column: 12, scope: !5536)
!5543 = !DILocation(line: 216, column: 19, scope: !5536)
!5544 = !DILocation(line: 217, column: 1, scope: !5536)
!5545 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !702, file: !702, line: 219, type: !870, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !701, retainedNodes: !5546)
!5546 = !{!5547, !5548, !5549, !5550}
!5547 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5545, file: !702, line: 219, type: !780)
!5548 = !DILocalVariable(name: "uart_port", scope: !5545, file: !702, line: 221, type: !653)
!5549 = !DILocalVariable(name: "type", scope: !5545, file: !702, line: 222, type: !5395)
!5550 = !DILocalVariable(name: "uartx", scope: !5545, file: !702, line: 223, type: !715)
!5551 = !DILocation(line: 0, scope: !5545)
!5552 = !DILocation(line: 225, column: 5, scope: !5545)
!5553 = !DILocation(line: 242, column: 13, scope: !5545)
!5554 = !DILocation(line: 243, column: 12, scope: !5545)
!5555 = !DILocation(line: 245, column: 5, scope: !5545)
!5556 = !DILocation(line: 248, column: 13, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5545, file: !702, line: 245, column: 19)
!5558 = !DILocation(line: 249, column: 13, scope: !5557)
!5559 = !DILocation(line: 252, column: 13, scope: !5557)
!5560 = !DILocation(line: 253, column: 13, scope: !5557)
!5561 = !DILocation(line: 263, column: 13, scope: !5557)
!5562 = !DILocation(line: 264, column: 13, scope: !5557)
!5563 = !DILocation(line: 276, column: 13, scope: !5557)
!5564 = !DILocation(line: 278, column: 1, scope: !5545)
!5565 = !DILocation(line: 131, column: 9, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !786, file: !787, line: 131, column: 9)
!5567 = !DILocation(line: 131, column: 9, scope: !786)
!5568 = !DILocation(line: 0, scope: !786)
!5569 = !DILocation(line: 134, column: 49, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5571, file: !787, line: 133, column: 46)
!5571 = distinct !DILexicalBlock(scope: !5572, file: !787, line: 133, column: 9)
!5572 = distinct !DILexicalBlock(scope: !5573, file: !787, line: 133, column: 9)
!5573 = distinct !DILexicalBlock(scope: !5566, file: !787, line: 131, column: 28)
!5574 = !DILocation(line: 134, column: 13, scope: !5570)
!5575 = !DILocation(line: 133, column: 42, scope: !5571)
!5576 = !DILocation(line: 133, column: 23, scope: !5571)
!5577 = !DILocation(line: 133, column: 9, scope: !5572)
!5578 = distinct !{!5578, !5577, !5579}
!5579 = !DILocation(line: 135, column: 9, scope: !5572)
!5580 = !DILocation(line: 136, column: 22, scope: !5573)
!5581 = !DILocation(line: 137, column: 5, scope: !5573)
!5582 = !DILocation(line: 138, column: 5, scope: !786)
!5583 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !796, file: !796, line: 1577, type: !5584, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5586)
!5584 = !DISubroutineType(types: !5585)
!5585 = !{null, !781, !175}
!5586 = !{!5587, !5588}
!5587 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5583, file: !796, line: 1577, type: !781)
!5588 = !DILocalVariable(name: "priority", arg: 2, scope: !5583, file: !796, line: 1577, type: !175)
!5589 = !DILocation(line: 0, scope: !5583)
!5590 = !DILocation(line: 1582, column: 34, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5592, file: !796, line: 1581, column: 8)
!5592 = distinct !DILexicalBlock(scope: !5583, file: !796, line: 1579, column: 6)
!5593 = !DILocation(line: 1582, column: 5, scope: !5591)
!5594 = !DILocation(line: 1582, column: 32, scope: !5591)
!5595 = !DILocation(line: 1583, column: 1, scope: !5583)
!5596 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !787, file: !787, line: 141, type: !5597, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5599)
!5597 = !DISubroutineType(types: !5598)
!5598 = !{!790, !780}
!5599 = !{!5600, !5601}
!5600 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5596, file: !787, line: 141, type: !780)
!5601 = !DILocalVariable(name: "status", scope: !5596, file: !787, line: 143, type: !790)
!5602 = !DILocation(line: 0, scope: !5596)
!5603 = !DILocation(line: 145, column: 40, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5596, file: !787, line: 145, column: 9)
!5605 = !DILocation(line: 149, column: 9, scope: !5606)
!5606 = distinct !DILexicalBlock(scope: !5604, file: !787, line: 148, column: 12)
!5607 = !DILocation(line: 153, column: 5, scope: !5596)
!5608 = !DILocation(line: 154, column: 1, scope: !5596)
!5609 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !796, file: !796, line: 1494, type: !5610, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5612)
!5610 = !DISubroutineType(types: !5611)
!5611 = !{null, !781}
!5612 = !{!5613}
!5613 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5609, file: !796, line: 1494, type: !781)
!5614 = !DILocation(line: 0, scope: !5609)
!5615 = !DILocation(line: 1497, column: 91, scope: !5609)
!5616 = !DILocation(line: 1497, column: 61, scope: !5609)
!5617 = !DILocation(line: 1497, column: 40, scope: !5609)
!5618 = !DILocation(line: 1497, column: 3, scope: !5609)
!5619 = !DILocation(line: 1497, column: 46, scope: !5609)
!5620 = !DILocation(line: 1498, column: 1, scope: !5609)
!5621 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !787, file: !787, line: 156, type: !5597, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5622)
!5622 = !{!5623, !5624}
!5623 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5621, file: !787, line: 156, type: !780)
!5624 = !DILocalVariable(name: "status", scope: !5621, file: !787, line: 158, type: !790)
!5625 = !DILocation(line: 0, scope: !5621)
!5626 = !DILocation(line: 160, column: 40, scope: !5627)
!5627 = distinct !DILexicalBlock(scope: !5621, file: !787, line: 160, column: 9)
!5628 = !DILocation(line: 164, column: 9, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5627, file: !787, line: 163, column: 12)
!5630 = !DILocation(line: 168, column: 5, scope: !5621)
!5631 = !DILocation(line: 169, column: 1, scope: !5621)
!5632 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !796, file: !796, line: 1507, type: !5610, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5633)
!5633 = !{!5634}
!5634 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5632, file: !796, line: 1507, type: !781)
!5635 = !DILocation(line: 0, scope: !5632)
!5636 = !DILocation(line: 1509, column: 65, scope: !5632)
!5637 = !DILocation(line: 1509, column: 44, scope: !5632)
!5638 = !DILocation(line: 1509, column: 32, scope: !5632)
!5639 = !DILocation(line: 1509, column: 3, scope: !5632)
!5640 = !DILocation(line: 1509, column: 39, scope: !5632)
!5641 = !DILocation(line: 1510, column: 1, scope: !5632)
!5642 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !787, file: !787, line: 171, type: !5643, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5645)
!5643 = !DISubroutineType(types: !5644)
!5644 = !{!175, !780}
!5645 = !{!5646, !5647}
!5646 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5642, file: !787, line: 171, type: !780)
!5647 = !DILocalVariable(name: "ret", scope: !5642, file: !787, line: 173, type: !175)
!5648 = !DILocation(line: 0, scope: !5642)
!5649 = !DILocation(line: 175, column: 40, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !5642, file: !787, line: 175, column: 9)
!5651 = !DILocation(line: 178, column: 15, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5650, file: !787, line: 177, column: 12)
!5653 = !DILocation(line: 181, column: 5, scope: !5642)
!5654 = !DILocation(line: 182, column: 1, scope: !5642)
!5655 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !796, file: !796, line: 1523, type: !5656, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5658)
!5656 = !DISubroutineType(types: !5657)
!5657 = !{!175, !781}
!5658 = !{!5659}
!5659 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5655, file: !796, line: 1523, type: !781)
!5660 = !DILocation(line: 0, scope: !5655)
!5661 = !DILocation(line: 1525, column: 51, scope: !5655)
!5662 = !DILocation(line: 1525, column: 23, scope: !5655)
!5663 = !DILocation(line: 1525, column: 83, scope: !5655)
!5664 = !DILocation(line: 1525, column: 22, scope: !5655)
!5665 = !DILocation(line: 1525, column: 3, scope: !5655)
!5666 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !787, file: !787, line: 184, type: !5597, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5667)
!5667 = !{!5668, !5669}
!5668 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5666, file: !787, line: 184, type: !780)
!5669 = !DILocalVariable(name: "status", scope: !5666, file: !787, line: 186, type: !790)
!5670 = !DILocation(line: 0, scope: !5666)
!5671 = !DILocation(line: 188, column: 40, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5666, file: !787, line: 188, column: 9)
!5673 = !DILocation(line: 192, column: 9, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5672, file: !787, line: 191, column: 12)
!5675 = !DILocation(line: 196, column: 5, scope: !5666)
!5676 = !DILocation(line: 197, column: 1, scope: !5666)
!5677 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !796, file: !796, line: 1535, type: !5610, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5678)
!5678 = !{!5679}
!5679 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5677, file: !796, line: 1535, type: !781)
!5680 = !DILocation(line: 0, scope: !5677)
!5681 = !DILocation(line: 1537, column: 65, scope: !5677)
!5682 = !DILocation(line: 1537, column: 44, scope: !5677)
!5683 = !DILocation(line: 1537, column: 32, scope: !5677)
!5684 = !DILocation(line: 1537, column: 3, scope: !5677)
!5685 = !DILocation(line: 1537, column: 39, scope: !5677)
!5686 = !DILocation(line: 1538, column: 1, scope: !5677)
!5687 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !787, file: !787, line: 199, type: !5597, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5688)
!5688 = !{!5689, !5690}
!5689 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5687, file: !787, line: 199, type: !780)
!5690 = !DILocalVariable(name: "status", scope: !5687, file: !787, line: 201, type: !790)
!5691 = !DILocation(line: 0, scope: !5687)
!5692 = !DILocation(line: 203, column: 40, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5687, file: !787, line: 203, column: 9)
!5694 = !DILocation(line: 207, column: 9, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5693, file: !787, line: 206, column: 12)
!5696 = !DILocation(line: 211, column: 5, scope: !5687)
!5697 = !DILocation(line: 212, column: 1, scope: !5687)
!5698 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !796, file: !796, line: 1547, type: !5610, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5699)
!5699 = !{!5700}
!5700 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5698, file: !796, line: 1547, type: !781)
!5701 = !DILocation(line: 0, scope: !5698)
!5702 = !DILocation(line: 1549, column: 65, scope: !5698)
!5703 = !DILocation(line: 1549, column: 44, scope: !5698)
!5704 = !DILocation(line: 1549, column: 32, scope: !5698)
!5705 = !DILocation(line: 1549, column: 3, scope: !5698)
!5706 = !DILocation(line: 1549, column: 39, scope: !5698)
!5707 = !DILocation(line: 1550, column: 1, scope: !5698)
!5708 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !787, file: !787, line: 214, type: !5709, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5711)
!5709 = !DISubroutineType(types: !5710)
!5710 = !{!790, !780, !175}
!5711 = !{!5712, !5713, !5714}
!5712 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5708, file: !787, line: 214, type: !780)
!5713 = !DILocalVariable(name: "priority", arg: 2, scope: !5708, file: !787, line: 214, type: !175)
!5714 = !DILocalVariable(name: "status", scope: !5708, file: !787, line: 216, type: !790)
!5715 = !DILocation(line: 0, scope: !5708)
!5716 = !DILocation(line: 218, column: 40, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5708, file: !787, line: 218, column: 9)
!5718 = !DILocation(line: 222, column: 9, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5717, file: !787, line: 221, column: 12)
!5720 = !DILocation(line: 226, column: 5, scope: !5708)
!5721 = !DILocation(line: 227, column: 1, scope: !5708)
!5722 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !787, file: !787, line: 229, type: !5643, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5723)
!5723 = !{!5724, !5725}
!5724 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5722, file: !787, line: 229, type: !780)
!5725 = !DILocalVariable(name: "ret", scope: !5722, file: !787, line: 231, type: !175)
!5726 = !DILocation(line: 0, scope: !5722)
!5727 = !DILocation(line: 233, column: 40, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5722, file: !787, line: 233, column: 9)
!5729 = !DILocation(line: 236, column: 15, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5728, file: !787, line: 235, column: 12)
!5731 = !DILocation(line: 239, column: 5, scope: !5722)
!5732 = !DILocation(line: 240, column: 1, scope: !5722)
!5733 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !796, file: !796, line: 1597, type: !5656, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5734)
!5734 = !{!5735}
!5735 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5733, file: !796, line: 1597, type: !781)
!5736 = !DILocation(line: 0, scope: !5733)
!5737 = !DILocation(line: 1603, column: 23, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5739, file: !796, line: 1602, column: 8)
!5739 = distinct !DILexicalBlock(scope: !5733, file: !796, line: 1600, column: 6)
!5740 = !DILocation(line: 1603, column: 60, scope: !5738)
!5741 = !DILocation(line: 1604, column: 1, scope: !5733)
!5742 = distinct !DISubprogram(name: "isrC_main", scope: !787, file: !787, line: 248, type: !788, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5743)
!5743 = !{!5744, !5745}
!5744 = !DILocalVariable(name: "status", scope: !5742, file: !787, line: 250, type: !790)
!5745 = !DILocalVariable(name: "irq_number", scope: !5742, file: !787, line: 251, type: !780)
!5746 = !DILocation(line: 0, scope: !5742)
!5747 = !DILocation(line: 253, column: 5, scope: !5742)
!5748 = !DILocation(line: 255, column: 35, scope: !5742)
!5749 = !DILocation(line: 256, column: 40, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5742, file: !787, line: 256, column: 9)
!5751 = !DILocation(line: 259, column: 48, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5750, file: !787, line: 259, column: 16)
!5753 = !DILocation(line: 259, column: 62, scope: !5752)
!5754 = !DILocation(line: 259, column: 16, scope: !5750)
!5755 = !DILocation(line: 261, column: 9, scope: !5756)
!5756 = distinct !DILexicalBlock(scope: !5752, file: !787, line: 259, column: 71)
!5757 = !DILocation(line: 262, column: 9, scope: !5756)
!5758 = !DILocation(line: 264, column: 55, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5752, file: !787, line: 263, column: 12)
!5760 = !DILocation(line: 264, column: 41, scope: !5759)
!5761 = !DILocation(line: 264, column: 53, scope: !5759)
!5762 = !DILocation(line: 265, column: 41, scope: !5759)
!5763 = !DILocation(line: 265, column: 9, scope: !5759)
!5764 = !DILocation(line: 269, column: 5, scope: !5742)
!5765 = !DILocation(line: 270, column: 1, scope: !5742)
!5766 = distinct !DISubprogram(name: "get_current_irq", scope: !787, file: !787, line: 242, type: !3365, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5767)
!5767 = !{!5768}
!5768 = !DILocalVariable(name: "irq_num", scope: !5766, file: !787, line: 244, type: !175)
!5769 = !DILocation(line: 244, column: 31, scope: !5766)
!5770 = !DILocation(line: 244, column: 36, scope: !5766)
!5771 = !DILocation(line: 0, scope: !5766)
!5772 = !DILocation(line: 245, column: 21, scope: !5766)
!5773 = !DILocation(line: 245, column: 5, scope: !5766)
!5774 = distinct !DISubprogram(name: "get_pending_irq", scope: !787, file: !787, line: 121, type: !3365, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !210)
!5775 = !DILocation(line: 123, column: 19, scope: !5774)
!5776 = !DILocation(line: 123, column: 51, scope: !5774)
!5777 = !DILocation(line: 123, column: 5, scope: !5774)
!5778 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !787, file: !787, line: 272, type: !5779, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5782)
!5779 = !DISubroutineType(types: !5780)
!5780 = !{!790, !780, !5781}
!5781 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !634, line: 175, baseType: !869)
!5782 = !{!5783, !5784, !5785}
!5783 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5778, file: !787, line: 272, type: !780)
!5784 = !DILocalVariable(name: "callback", arg: 2, scope: !5778, file: !787, line: 272, type: !5781)
!5785 = !DILocalVariable(name: "mask", scope: !5778, file: !787, line: 274, type: !175)
!5786 = !DILocation(line: 0, scope: !5778)
!5787 = !DILocation(line: 276, column: 40, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5778, file: !787, line: 276, column: 9)
!5789 = !DILocation(line: 280, column: 12, scope: !5778)
!5790 = !DILocation(line: 281, column: 5, scope: !5778)
!5791 = !DILocation(line: 282, column: 37, scope: !5778)
!5792 = !DILocation(line: 282, column: 51, scope: !5778)
!5793 = !DILocation(line: 283, column: 37, scope: !5778)
!5794 = !DILocation(line: 283, column: 49, scope: !5778)
!5795 = !DILocation(line: 284, column: 5, scope: !5778)
!5796 = !DILocation(line: 286, column: 5, scope: !5778)
!5797 = !DILocation(line: 287, column: 1, scope: !5778)
!5798 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !787, file: !787, line: 289, type: !5799, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5801)
!5799 = !DISubroutineType(types: !5800)
!5800 = !{!790, !938}
!5801 = !{!5802}
!5802 = !DILocalVariable(name: "mask", arg: 1, scope: !5798, file: !787, line: 289, type: !938)
!5803 = !DILocation(line: 0, scope: !5798)
!5804 = !DILocation(line: 291, column: 13, scope: !5798)
!5805 = !DILocation(line: 291, column: 11, scope: !5798)
!5806 = !DILocation(line: 292, column: 5, scope: !5798)
!5807 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !787, file: !787, line: 295, type: !5808, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !791, retainedNodes: !5810)
!5808 = !DISubroutineType(types: !5809)
!5809 = !{!790, !175}
!5810 = !{!5811}
!5811 = !DILocalVariable(name: "mask", arg: 1, scope: !5807, file: !787, line: 295, type: !175)
!5812 = !DILocation(line: 0, scope: !5807)
!5813 = !DILocation(line: 297, column: 5, scope: !5807)
!5814 = !DILocation(line: 298, column: 5, scope: !5807)
!5815 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2466, file: !2466, line: 51, type: !3365, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5816)
!5816 = !{!5817, !5818}
!5817 = !DILocalVariable(name: "mask", scope: !5815, file: !2466, line: 53, type: !175)
!5818 = !DILocalVariable(name: "priority", scope: !5815, file: !2466, line: 55, type: !175)
!5819 = !DILocation(line: 521, column: 3, scope: !5820, inlinedAt: !5824)
!5820 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !5821, file: !5821, line: 517, type: !3365, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5822)
!5821 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!5822 = !{!5823}
!5823 = !DILocalVariable(name: "result", scope: !5820, file: !5821, line: 519, type: !175)
!5824 = distinct !DILocation(line: 53, column: 21, scope: !5815)
!5825 = !{i64 457629}
!5826 = !DILocation(line: 0, scope: !5820, inlinedAt: !5824)
!5827 = !DILocation(line: 0, scope: !5815)
!5828 = !DILocalVariable(name: "value", arg: 1, scope: !5829, file: !5821, line: 532, type: !175)
!5829 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !5821, file: !5821, line: 532, type: !5830, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5832)
!5830 = !DISubroutineType(types: !5831)
!5831 = !{null, !175}
!5832 = !{!5828}
!5833 = !DILocation(line: 0, scope: !5829, inlinedAt: !5834)
!5834 = distinct !DILocation(line: 56, column: 5, scope: !5815)
!5835 = !DILocation(line: 534, column: 3, scope: !5829, inlinedAt: !5834)
!5836 = !{i64 457962}
!5837 = !DILocation(line: 456, column: 3, scope: !5838, inlinedAt: !5840)
!5838 = distinct !DISubprogram(name: "__DMB", scope: !5839, file: !5839, line: 454, type: !208, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !210)
!5839 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!5840 = distinct !DILocation(line: 57, column: 5, scope: !5815)
!5841 = !{i64 430718}
!5842 = !DILocation(line: 434, column: 3, scope: !5843, inlinedAt: !5844)
!5843 = distinct !DISubprogram(name: "__ISB", scope: !5839, file: !5839, line: 432, type: !208, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !210)
!5844 = distinct !DILocation(line: 58, column: 5, scope: !5815)
!5845 = !{i64 430133}
!5846 = !DILocation(line: 59, column: 5, scope: !5815)
!5847 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2466, file: !2466, line: 62, type: !5830, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5848)
!5848 = !{!5849}
!5849 = !DILocalVariable(name: "mask", arg: 1, scope: !5847, file: !2466, line: 62, type: !175)
!5850 = !DILocation(line: 0, scope: !5847)
!5851 = !DILocation(line: 0, scope: !5829, inlinedAt: !5852)
!5852 = distinct !DILocation(line: 64, column: 5, scope: !5847)
!5853 = !DILocation(line: 534, column: 3, scope: !5829, inlinedAt: !5852)
!5854 = !DILocation(line: 456, column: 3, scope: !5838, inlinedAt: !5855)
!5855 = distinct !DILocation(line: 65, column: 5, scope: !5847)
!5856 = !DILocation(line: 434, column: 3, scope: !5843, inlinedAt: !5857)
!5857 = distinct !DILocation(line: 66, column: 5, scope: !5847)
!5858 = !DILocation(line: 67, column: 1, scope: !5847)
!5859 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2466, file: !2466, line: 69, type: !208, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5860)
!5860 = !{!5861, !5862}
!5861 = !DILocalVariable(name: "irq_number", scope: !5859, file: !2466, line: 71, type: !780)
!5862 = !DILocalVariable(name: "mask", scope: !5859, file: !2466, line: 72, type: !175)
!5863 = !DILocation(line: 72, column: 21, scope: !5859)
!5864 = !DILocation(line: 0, scope: !5859)
!5865 = !DILocation(line: 73, column: 5, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5859, file: !2466, line: 73, column: 5)
!5867 = !DILocation(line: 74, column: 9, scope: !5868)
!5868 = distinct !DILexicalBlock(scope: !5869, file: !2466, line: 73, column: 85)
!5869 = distinct !DILexicalBlock(scope: !5866, file: !2466, line: 73, column: 5)
!5870 = !DILocation(line: 73, column: 81, scope: !5869)
!5871 = !DILocation(line: 73, column: 53, scope: !5869)
!5872 = distinct !{!5872, !5865, !5873}
!5873 = !DILocation(line: 75, column: 5, scope: !5866)
!5874 = !DILocation(line: 76, column: 5, scope: !5859)
!5875 = !DILocation(line: 77, column: 1, scope: !5859)
!5876 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !796, file: !796, line: 1507, type: !5610, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5877)
!5877 = !{!5878}
!5878 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5876, file: !796, line: 1507, type: !781)
!5879 = !DILocation(line: 0, scope: !5876)
!5880 = !DILocation(line: 1509, column: 65, scope: !5876)
!5881 = !DILocation(line: 1509, column: 44, scope: !5876)
!5882 = !DILocation(line: 1509, column: 32, scope: !5876)
!5883 = !DILocation(line: 1509, column: 3, scope: !5876)
!5884 = !DILocation(line: 1509, column: 39, scope: !5876)
!5885 = !DILocation(line: 1510, column: 1, scope: !5876)
!5886 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2466, file: !2466, line: 79, type: !208, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5887)
!5887 = !{!5888, !5889}
!5888 = !DILocalVariable(name: "irq_number", scope: !5886, file: !2466, line: 81, type: !780)
!5889 = !DILocalVariable(name: "mask", scope: !5886, file: !2466, line: 82, type: !175)
!5890 = !DILocation(line: 82, column: 21, scope: !5886)
!5891 = !DILocation(line: 0, scope: !5886)
!5892 = !DILocation(line: 84, column: 5, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !5886, file: !2466, line: 84, column: 5)
!5894 = !DILocation(line: 85, column: 9, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !2466, line: 84, column: 85)
!5896 = distinct !DILexicalBlock(scope: !5893, file: !2466, line: 84, column: 5)
!5897 = !DILocation(line: 84, column: 81, scope: !5896)
!5898 = !DILocation(line: 84, column: 53, scope: !5896)
!5899 = distinct !{!5899, !5892, !5900}
!5900 = !DILocation(line: 86, column: 5, scope: !5893)
!5901 = !DILocation(line: 87, column: 5, scope: !5886)
!5902 = !DILocation(line: 88, column: 1, scope: !5886)
!5903 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !796, file: !796, line: 1494, type: !5610, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5904)
!5904 = !{!5905}
!5905 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5903, file: !796, line: 1494, type: !781)
!5906 = !DILocation(line: 0, scope: !5903)
!5907 = !DILocation(line: 1497, column: 91, scope: !5903)
!5908 = !DILocation(line: 1497, column: 61, scope: !5903)
!5909 = !DILocation(line: 1497, column: 40, scope: !5903)
!5910 = !DILocation(line: 1497, column: 3, scope: !5903)
!5911 = !DILocation(line: 1497, column: 46, scope: !5903)
!5912 = !DILocation(line: 1498, column: 1, scope: !5903)
!5913 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2466, file: !2466, line: 90, type: !208, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5914)
!5914 = !{!5915}
!5915 = !DILocalVariable(name: "irq_number", scope: !5913, file: !2466, line: 92, type: !780)
!5916 = !DILocation(line: 0, scope: !5913)
!5917 = !DILocation(line: 93, column: 5, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5913, file: !2466, line: 93, column: 5)
!5919 = !DILocation(line: 94, column: 9, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5921, file: !2466, line: 93, column: 85)
!5921 = distinct !DILexicalBlock(scope: !5918, file: !2466, line: 93, column: 5)
!5922 = !DILocation(line: 93, column: 81, scope: !5921)
!5923 = !DILocation(line: 93, column: 53, scope: !5921)
!5924 = distinct !{!5924, !5917, !5925}
!5925 = !DILocation(line: 95, column: 5, scope: !5918)
!5926 = !DILocation(line: 96, column: 1, scope: !5913)
!5927 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !796, file: !796, line: 1547, type: !5610, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5928)
!5928 = !{!5929}
!5929 = !DILocalVariable(name: "IRQn", arg: 1, scope: !5927, file: !796, line: 1547, type: !781)
!5930 = !DILocation(line: 0, scope: !5927)
!5931 = !DILocation(line: 1549, column: 65, scope: !5927)
!5932 = !DILocation(line: 1549, column: 44, scope: !5927)
!5933 = !DILocation(line: 1549, column: 32, scope: !5927)
!5934 = !DILocation(line: 1549, column: 3, scope: !5927)
!5935 = !DILocation(line: 1549, column: 39, scope: !5927)
!5936 = !DILocation(line: 1550, column: 1, scope: !5927)
!5937 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2466, file: !2466, line: 98, type: !5597, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5938)
!5938 = !{!5939}
!5939 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5937, file: !2466, line: 98, type: !780)
!5940 = !DILocation(line: 0, scope: !5937)
!5941 = !DILocation(line: 100, column: 24, scope: !5942)
!5942 = distinct !DILexicalBlock(scope: !5937, file: !2466, line: 100, column: 9)
!5943 = !DILocation(line: 104, column: 5, scope: !5937)
!5944 = !DILocation(line: 105, column: 5, scope: !5937)
!5945 = !DILocation(line: 106, column: 1, scope: !5937)
!5946 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2466, file: !2466, line: 45, type: !870, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !5947)
!5947 = !{!5948}
!5948 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5946, file: !2466, line: 45, type: !780)
!5949 = !DILocation(line: 0, scope: !5946)
!5950 = !DILocation(line: 47, column: 54, scope: !5946)
!5951 = !DILocation(line: 47, column: 16, scope: !5946)
!5952 = !DILocation(line: 445, column: 3, scope: !5953, inlinedAt: !5954)
!5953 = distinct !DISubprogram(name: "__DSB", scope: !5839, file: !5839, line: 443, type: !208, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !210)
!5954 = distinct !DILocation(line: 48, column: 5, scope: !5946)
!5955 = !{i64 430429}
!5956 = !DILocation(line: 49, column: 1, scope: !5946)
!5957 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2466, file: !2466, line: 114, type: !3365, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2465, retainedNodes: !210)
!5958 = !DILocation(line: 116, column: 19, scope: !5957)
!5959 = !DILocation(line: 116, column: 24, scope: !5957)
!5960 = !DILocation(line: 116, column: 5, scope: !5957)
!5961 = distinct !DISubprogram(name: "hal_crypt_lock_take", scope: !883, file: !883, line: 55, type: !5962, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !5964)
!5962 = !DISubroutineType(types: !5963)
!5963 = !{!858}
!5964 = !{!5965}
!5965 = !DILocalVariable(name: "irq_status", scope: !5961, file: !883, line: 57, type: !175)
!5966 = !DILocation(line: 58, column: 18, scope: !5961)
!5967 = !DILocation(line: 0, scope: !5961)
!5968 = !DILocation(line: 59, column: 9, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5961, file: !883, line: 59, column: 9)
!5970 = !DILocation(line: 59, column: 9, scope: !5961)
!5971 = !DILocation(line: 63, column: 18, scope: !5961)
!5972 = !DILocation(line: 65, column: 5, scope: !5961)
!5973 = !DILocation(line: 66, column: 1, scope: !5961)
!5974 = distinct !DISubprogram(name: "hal_crypt_lock_give", scope: !883, file: !883, line: 69, type: !208, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !210)
!5975 = !DILocation(line: 71, column: 18, scope: !5974)
!5976 = !DILocation(line: 72, column: 1, scope: !5974)
!5977 = distinct !DISubprogram(name: "aes_operate", scope: !883, file: !883, line: 74, type: !5978, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !5994)
!5978 = !DISubroutineType(types: !5979)
!5979 = !{!896, !5980, !211, !211, !211}
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5981, size: 32)
!5981 = !DIDerivedType(tag: DW_TAG_typedef, name: "aes_parcel_t", file: !891, line: 54, baseType: !5982)
!5982 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !891, line: 49, size: 128, elements: !5983)
!5983 = !{!5984, !5991, !5992, !5993}
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !5982, file: !891, line: 50, baseType: !5985, size: 32)
!5985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5986, size: 32)
!5986 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_aes_buffer_t", file: !886, line: 307, baseType: !5987)
!5987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !886, line: 304, size: 64, elements: !5988)
!5988 = !{!5989, !5990}
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5987, file: !886, line: 305, baseType: !680, size: 32)
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5987, file: !886, line: 306, baseType: !175, size: 32, offset: 32)
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !5982, file: !891, line: 51, baseType: !5985, size: 32, offset: 32)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5982, file: !891, line: 52, baseType: !5985, size: 32, offset: 64)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !5982, file: !891, line: 53, baseType: !680, size: 32, offset: 96)
!5994 = !{!5995, !5996, !5997, !5998}
!5995 = !DILocalVariable(name: "parcel", arg: 1, scope: !5977, file: !883, line: 74, type: !5980)
!5996 = !DILocalVariable(name: "mode", arg: 2, scope: !5977, file: !883, line: 74, type: !211)
!5997 = !DILocalVariable(name: "sw_hw_key", arg: 3, scope: !5977, file: !883, line: 74, type: !211)
!5998 = !DILocalVariable(name: "encrypt", arg: 4, scope: !5977, file: !883, line: 74, type: !211)
!5999 = !DILocation(line: 0, scope: !5977)
!6000 = !DILocation(line: 76, column: 52, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5977, file: !883, line: 76, column: 9)
!6002 = !DILocation(line: 76, column: 30, scope: !6001)
!6003 = !DILocation(line: 76, column: 9, scope: !5977)
!6004 = !DILocation(line: 80, column: 9, scope: !5977)
!6005 = !DILocation(line: 81, column: 56, scope: !6006)
!6006 = distinct !DILexicalBlock(scope: !6007, file: !883, line: 81, column: 13)
!6007 = distinct !DILexicalBlock(scope: !6008, file: !883, line: 80, column: 26)
!6008 = distinct !DILexicalBlock(scope: !5977, file: !883, line: 80, column: 9)
!6009 = !DILocation(line: 81, column: 34, scope: !6006)
!6010 = !DILocation(line: 81, column: 13, scope: !6007)
!6011 = !DILocation(line: 85, column: 56, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6013, file: !883, line: 85, column: 13)
!6013 = distinct !DILexicalBlock(scope: !6008, file: !883, line: 84, column: 12)
!6014 = !DILocation(line: 85, column: 34, scope: !6012)
!6015 = !DILocation(line: 85, column: 13, scope: !6013)
!6016 = !DILocation(line: 90, column: 52, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !5977, file: !883, line: 90, column: 9)
!6018 = !DILocation(line: 90, column: 30, scope: !6017)
!6019 = !DILocation(line: 95, column: 1, scope: !5977)
!6020 = distinct !DISubprogram(name: "hal_aes_cbc_encrypt", scope: !883, file: !883, line: 97, type: !6021, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6023)
!6021 = !DISubroutineType(types: !6022)
!6022 = !{!896, !5985, !5985, !5985, !680}
!6023 = !{!6024, !6025, !6026, !6027, !6028, !6029, !6030, !6031, !6032, !6033, !6034, !6037, !6039, !6040}
!6024 = !DILocalVariable(name: "encrypted_text", arg: 1, scope: !6020, file: !883, line: 97, type: !5985)
!6025 = !DILocalVariable(name: "plain_text", arg: 2, scope: !6020, file: !883, line: 98, type: !5985)
!6026 = !DILocalVariable(name: "key", arg: 3, scope: !6020, file: !883, line: 99, type: !5985)
!6027 = !DILocalVariable(name: "init_vector", arg: 4, scope: !6020, file: !883, line: 100, type: !680)
!6028 = !DILocalVariable(name: "aes_buf", scope: !6020, file: !883, line: 109, type: !5986)
!6029 = !DILocalVariable(name: "aes_buf_out", scope: !6020, file: !883, line: 110, type: !5986)
!6030 = !DILocalVariable(name: "last_block_size", scope: !6020, file: !883, line: 111, type: !175)
!6031 = !DILocalVariable(name: "block_num", scope: !6020, file: !883, line: 112, type: !175)
!6032 = !DILocalVariable(name: "padding_size", scope: !6020, file: !883, line: 113, type: !378)
!6033 = !DILocalVariable(name: "parcel", scope: !6020, file: !883, line: 123, type: !5981)
!6034 = !DILocalVariable(name: "first_encrypt_size", scope: !6035, file: !883, line: 127, type: !175)
!6035 = distinct !DILexicalBlock(scope: !6036, file: !883, line: 125, column: 24)
!6036 = distinct !DILexicalBlock(scope: !6020, file: !883, line: 125, column: 9)
!6037 = !DILocalVariable(name: "data_block", scope: !6035, file: !883, line: 146, type: !6038)
!6038 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 128, elements: !2415)
!6039 = !DILocalVariable(name: "init_vector2", scope: !6035, file: !883, line: 149, type: !680)
!6040 = !DILocalVariable(name: "data_block", scope: !6041, file: !883, line: 168, type: !6038)
!6041 = distinct !DILexicalBlock(scope: !6036, file: !883, line: 167, column: 12)
!6042 = !DILocation(line: 0, scope: !6020)
!6043 = !DILocation(line: 102, column: 15, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6020, file: !883, line: 102, column: 9)
!6045 = !DILocation(line: 103, column: 13, scope: !6044)
!6046 = !DILocation(line: 109, column: 5, scope: !6020)
!6047 = !DILocation(line: 109, column: 22, scope: !6020)
!6048 = !DILocation(line: 110, column: 5, scope: !6020)
!6049 = !DILocation(line: 110, column: 22, scope: !6020)
!6050 = !DILocation(line: 111, column: 44, scope: !6020)
!6051 = !DILocation(line: 111, column: 51, scope: !6020)
!6052 = !DILocation(line: 127, column: 49, scope: !6035)
!6053 = !DILocation(line: 113, column: 28, scope: !6020)
!6054 = !DILocation(line: 116, column: 25, scope: !6055)
!6055 = distinct !DILexicalBlock(scope: !6020, file: !883, line: 116, column: 9)
!6056 = !DILocation(line: 116, column: 54, scope: !6055)
!6057 = !DILocation(line: 116, column: 32, scope: !6055)
!6058 = !DILocation(line: 116, column: 9, scope: !6020)
!6059 = !DILocation(line: 117, column: 9, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6055, file: !883, line: 116, column: 71)
!6061 = !DILocation(line: 118, column: 9, scope: !6060)
!6062 = !DILocation(line: 121, column: 5, scope: !6020)
!6063 = !DILocation(line: 123, column: 5, scope: !6020)
!6064 = !DILocation(line: 123, column: 18, scope: !6020)
!6065 = !DILocation(line: 125, column: 19, scope: !6036)
!6066 = !DILocation(line: 125, column: 9, scope: !6020)
!6067 = !DILocation(line: 0, scope: !6035)
!6068 = !DILocation(line: 129, column: 38, scope: !6035)
!6069 = !DILocation(line: 129, column: 17, scope: !6035)
!6070 = !DILocation(line: 129, column: 24, scope: !6035)
!6071 = !DILocation(line: 130, column: 17, scope: !6035)
!6072 = !DILocation(line: 130, column: 24, scope: !6035)
!6073 = !DILocation(line: 132, column: 46, scope: !6035)
!6074 = !DILocation(line: 132, column: 21, scope: !6035)
!6075 = !DILocation(line: 132, column: 28, scope: !6035)
!6076 = !DILocation(line: 133, column: 21, scope: !6035)
!6077 = !DILocation(line: 133, column: 28, scope: !6035)
!6078 = !DILocation(line: 135, column: 16, scope: !6035)
!6079 = !DILocation(line: 135, column: 19, scope: !6035)
!6080 = !DILocation(line: 136, column: 16, scope: !6035)
!6081 = !DILocation(line: 136, column: 20, scope: !6035)
!6082 = !DILocation(line: 137, column: 16, scope: !6035)
!6083 = !DILocation(line: 137, column: 20, scope: !6035)
!6084 = !DILocation(line: 138, column: 16, scope: !6035)
!6085 = !DILocation(line: 138, column: 19, scope: !6035)
!6086 = !DILocation(line: 140, column: 37, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6035, file: !883, line: 140, column: 13)
!6088 = !DILocation(line: 140, column: 34, scope: !6087)
!6089 = !DILocation(line: 140, column: 13, scope: !6035)
!6090 = !DILocation(line: 141, column: 13, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6087, file: !883, line: 140, column: 77)
!6092 = !DILocation(line: 146, column: 9, scope: !6035)
!6093 = !DILocation(line: 146, column: 17, scope: !6035)
!6094 = !DILocation(line: 147, column: 40, scope: !6035)
!6095 = !DILocation(line: 147, column: 47, scope: !6035)
!6096 = !DILocation(line: 147, column: 9, scope: !6035)
!6097 = !DILocation(line: 148, column: 27, scope: !6035)
!6098 = !DILocation(line: 148, column: 9, scope: !6035)
!6099 = !DILocation(line: 149, column: 49, scope: !6035)
!6100 = !DILocation(line: 149, column: 56, scope: !6035)
!6101 = !DILocation(line: 149, column: 77, scope: !6035)
!6102 = !DILocation(line: 151, column: 24, scope: !6035)
!6103 = !DILocation(line: 152, column: 24, scope: !6035)
!6104 = !DILocation(line: 154, column: 28, scope: !6035)
!6105 = !DILocation(line: 155, column: 28, scope: !6035)
!6106 = !DILocation(line: 157, column: 19, scope: !6035)
!6107 = !DILocation(line: 158, column: 20, scope: !6035)
!6108 = !DILocation(line: 159, column: 20, scope: !6035)
!6109 = !DILocation(line: 160, column: 19, scope: !6035)
!6110 = !DILocation(line: 162, column: 37, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6035, file: !883, line: 162, column: 13)
!6112 = !DILocation(line: 162, column: 34, scope: !6111)
!6113 = !DILocation(line: 162, column: 13, scope: !6035)
!6114 = !DILocation(line: 167, column: 5, scope: !6036)
!6115 = !DILocation(line: 163, column: 13, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6111, file: !883, line: 162, column: 77)
!6117 = !DILocation(line: 168, column: 9, scope: !6041)
!6118 = !DILocation(line: 168, column: 17, scope: !6041)
!6119 = !DILocation(line: 169, column: 40, scope: !6041)
!6120 = !DILocation(line: 169, column: 60, scope: !6041)
!6121 = !DILocation(line: 169, column: 9, scope: !6041)
!6122 = !DILocation(line: 170, column: 27, scope: !6041)
!6123 = !DILocation(line: 170, column: 9, scope: !6041)
!6124 = !DILocation(line: 172, column: 17, scope: !6041)
!6125 = !DILocation(line: 172, column: 24, scope: !6041)
!6126 = !DILocation(line: 173, column: 17, scope: !6041)
!6127 = !DILocation(line: 173, column: 24, scope: !6041)
!6128 = !DILocation(line: 175, column: 16, scope: !6041)
!6129 = !DILocation(line: 175, column: 19, scope: !6041)
!6130 = !DILocation(line: 176, column: 16, scope: !6041)
!6131 = !DILocation(line: 176, column: 20, scope: !6041)
!6132 = !DILocation(line: 177, column: 16, scope: !6041)
!6133 = !DILocation(line: 177, column: 20, scope: !6041)
!6134 = !DILocation(line: 178, column: 16, scope: !6041)
!6135 = !DILocation(line: 178, column: 19, scope: !6041)
!6136 = !DILocation(line: 180, column: 37, scope: !6137)
!6137 = distinct !DILexicalBlock(scope: !6041, file: !883, line: 180, column: 13)
!6138 = !DILocation(line: 180, column: 34, scope: !6137)
!6139 = !DILocation(line: 180, column: 13, scope: !6041)
!6140 = !DILocation(line: 181, column: 13, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6137, file: !883, line: 180, column: 77)
!6142 = !DILocation(line: 184, column: 5, scope: !6036)
!6143 = !DILocation(line: 186, column: 5, scope: !6020)
!6144 = !DILocation(line: 187, column: 5, scope: !6020)
!6145 = !DILocation(line: 188, column: 1, scope: !6020)
!6146 = distinct !DISubprogram(name: "hal_aes_cbc_decrypt", scope: !883, file: !883, line: 190, type: !6021, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6147)
!6147 = !{!6148, !6149, !6150, !6151, !6152}
!6148 = !DILocalVariable(name: "plain_text", arg: 1, scope: !6146, file: !883, line: 190, type: !5985)
!6149 = !DILocalVariable(name: "encrypted_text", arg: 2, scope: !6146, file: !883, line: 191, type: !5985)
!6150 = !DILocalVariable(name: "key", arg: 3, scope: !6146, file: !883, line: 192, type: !5985)
!6151 = !DILocalVariable(name: "init_vector", arg: 4, scope: !6146, file: !883, line: 193, type: !680)
!6152 = !DILocalVariable(name: "parcel", scope: !6146, file: !883, line: 204, type: !5981)
!6153 = !DILocation(line: 0, scope: !6146)
!6154 = !DILocation(line: 195, column: 15, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6146, file: !883, line: 195, column: 9)
!6156 = !DILocation(line: 196, column: 13, scope: !6155)
!6157 = !DILocation(line: 202, column: 5, scope: !6146)
!6158 = !DILocation(line: 204, column: 5, scope: !6146)
!6159 = !DILocation(line: 204, column: 18, scope: !6146)
!6160 = !DILocation(line: 205, column: 12, scope: !6146)
!6161 = !DILocation(line: 205, column: 15, scope: !6146)
!6162 = !DILocation(line: 206, column: 12, scope: !6146)
!6163 = !DILocation(line: 206, column: 16, scope: !6146)
!6164 = !DILocation(line: 207, column: 12, scope: !6146)
!6165 = !DILocation(line: 207, column: 16, scope: !6146)
!6166 = !DILocation(line: 208, column: 12, scope: !6146)
!6167 = !DILocation(line: 208, column: 15, scope: !6146)
!6168 = !DILocation(line: 210, column: 33, scope: !6169)
!6169 = distinct !DILexicalBlock(scope: !6146, file: !883, line: 210, column: 9)
!6170 = !DILocation(line: 210, column: 30, scope: !6169)
!6171 = !DILocation(line: 217, column: 1, scope: !6146)
!6172 = distinct !DISubprogram(name: "hal_aes_ecb_encrypt", scope: !883, file: !883, line: 219, type: !6173, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6175)
!6173 = !DISubroutineType(types: !6174)
!6174 = !{!896, !5985, !5985, !5985}
!6175 = !{!6176, !6177, !6178, !6179, !6180, !6181, !6182, !6183, !6184, !6185, !6188, !6189}
!6176 = !DILocalVariable(name: "encrypted_text", arg: 1, scope: !6172, file: !883, line: 219, type: !5985)
!6177 = !DILocalVariable(name: "plain_text", arg: 2, scope: !6172, file: !883, line: 220, type: !5985)
!6178 = !DILocalVariable(name: "key", arg: 3, scope: !6172, file: !883, line: 221, type: !5985)
!6179 = !DILocalVariable(name: "aes_buf", scope: !6172, file: !883, line: 229, type: !5986)
!6180 = !DILocalVariable(name: "aes_buf_out", scope: !6172, file: !883, line: 230, type: !5986)
!6181 = !DILocalVariable(name: "last_block_size", scope: !6172, file: !883, line: 231, type: !175)
!6182 = !DILocalVariable(name: "block_num", scope: !6172, file: !883, line: 232, type: !175)
!6183 = !DILocalVariable(name: "padding_size", scope: !6172, file: !883, line: 233, type: !378)
!6184 = !DILocalVariable(name: "parcel", scope: !6172, file: !883, line: 243, type: !5981)
!6185 = !DILocalVariable(name: "first_encrypt_size", scope: !6186, file: !883, line: 247, type: !175)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !883, line: 245, column: 24)
!6187 = distinct !DILexicalBlock(scope: !6172, file: !883, line: 245, column: 9)
!6188 = !DILocalVariable(name: "data_block", scope: !6186, file: !883, line: 265, type: !6038)
!6189 = !DILocalVariable(name: "data_block", scope: !6190, file: !883, line: 285, type: !6038)
!6190 = distinct !DILexicalBlock(scope: !6187, file: !883, line: 284, column: 12)
!6191 = !DILocation(line: 0, scope: !6172)
!6192 = !DILocation(line: 223, column: 15, scope: !6193)
!6193 = distinct !DILexicalBlock(scope: !6172, file: !883, line: 223, column: 9)
!6194 = !DILocation(line: 224, column: 13, scope: !6193)
!6195 = !DILocation(line: 229, column: 5, scope: !6172)
!6196 = !DILocation(line: 229, column: 22, scope: !6172)
!6197 = !DILocation(line: 230, column: 5, scope: !6172)
!6198 = !DILocation(line: 230, column: 22, scope: !6172)
!6199 = !DILocation(line: 231, column: 44, scope: !6172)
!6200 = !DILocation(line: 231, column: 51, scope: !6172)
!6201 = !DILocation(line: 247, column: 49, scope: !6186)
!6202 = !DILocation(line: 233, column: 28, scope: !6172)
!6203 = !DILocation(line: 236, column: 25, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6172, file: !883, line: 236, column: 9)
!6205 = !DILocation(line: 236, column: 54, scope: !6204)
!6206 = !DILocation(line: 236, column: 32, scope: !6204)
!6207 = !DILocation(line: 236, column: 9, scope: !6172)
!6208 = !DILocation(line: 237, column: 9, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6204, file: !883, line: 236, column: 71)
!6210 = !DILocation(line: 238, column: 9, scope: !6209)
!6211 = !DILocation(line: 241, column: 5, scope: !6172)
!6212 = !DILocation(line: 243, column: 5, scope: !6172)
!6213 = !DILocation(line: 243, column: 18, scope: !6172)
!6214 = !DILocation(line: 245, column: 19, scope: !6187)
!6215 = !DILocation(line: 245, column: 9, scope: !6172)
!6216 = !DILocation(line: 0, scope: !6186)
!6217 = !DILocation(line: 249, column: 38, scope: !6186)
!6218 = !DILocation(line: 249, column: 17, scope: !6186)
!6219 = !DILocation(line: 249, column: 24, scope: !6186)
!6220 = !DILocation(line: 250, column: 17, scope: !6186)
!6221 = !DILocation(line: 250, column: 24, scope: !6186)
!6222 = !DILocation(line: 252, column: 46, scope: !6186)
!6223 = !DILocation(line: 252, column: 21, scope: !6186)
!6224 = !DILocation(line: 252, column: 28, scope: !6186)
!6225 = !DILocation(line: 253, column: 21, scope: !6186)
!6226 = !DILocation(line: 253, column: 28, scope: !6186)
!6227 = !DILocation(line: 255, column: 16, scope: !6186)
!6228 = !DILocation(line: 255, column: 19, scope: !6186)
!6229 = !DILocation(line: 256, column: 16, scope: !6186)
!6230 = !DILocation(line: 256, column: 20, scope: !6186)
!6231 = !DILocation(line: 257, column: 16, scope: !6186)
!6232 = !DILocation(line: 257, column: 20, scope: !6186)
!6233 = !DILocation(line: 259, column: 37, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6186, file: !883, line: 259, column: 13)
!6235 = !DILocation(line: 259, column: 34, scope: !6234)
!6236 = !DILocation(line: 259, column: 13, scope: !6186)
!6237 = !DILocation(line: 260, column: 13, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6234, file: !883, line: 259, column: 77)
!6239 = !DILocation(line: 265, column: 9, scope: !6186)
!6240 = !DILocation(line: 265, column: 17, scope: !6186)
!6241 = !DILocation(line: 266, column: 40, scope: !6186)
!6242 = !DILocation(line: 266, column: 47, scope: !6186)
!6243 = !DILocation(line: 266, column: 9, scope: !6186)
!6244 = !DILocation(line: 267, column: 27, scope: !6186)
!6245 = !DILocation(line: 267, column: 9, scope: !6186)
!6246 = !DILocation(line: 269, column: 24, scope: !6186)
!6247 = !DILocation(line: 270, column: 24, scope: !6186)
!6248 = !DILocation(line: 272, column: 46, scope: !6186)
!6249 = !DILocation(line: 272, column: 53, scope: !6186)
!6250 = !DILocation(line: 272, column: 28, scope: !6186)
!6251 = !DILocation(line: 273, column: 28, scope: !6186)
!6252 = !DILocation(line: 275, column: 19, scope: !6186)
!6253 = !DILocation(line: 276, column: 20, scope: !6186)
!6254 = !DILocation(line: 277, column: 20, scope: !6186)
!6255 = !DILocation(line: 279, column: 37, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6186, file: !883, line: 279, column: 13)
!6257 = !DILocation(line: 279, column: 34, scope: !6256)
!6258 = !DILocation(line: 279, column: 13, scope: !6186)
!6259 = !DILocation(line: 284, column: 5, scope: !6187)
!6260 = !DILocation(line: 280, column: 13, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6256, file: !883, line: 279, column: 77)
!6262 = !DILocation(line: 285, column: 9, scope: !6190)
!6263 = !DILocation(line: 285, column: 17, scope: !6190)
!6264 = !DILocation(line: 286, column: 40, scope: !6190)
!6265 = !DILocation(line: 286, column: 60, scope: !6190)
!6266 = !DILocation(line: 286, column: 9, scope: !6190)
!6267 = !DILocation(line: 287, column: 27, scope: !6190)
!6268 = !DILocation(line: 287, column: 9, scope: !6190)
!6269 = !DILocation(line: 289, column: 17, scope: !6190)
!6270 = !DILocation(line: 289, column: 24, scope: !6190)
!6271 = !DILocation(line: 290, column: 17, scope: !6190)
!6272 = !DILocation(line: 290, column: 24, scope: !6190)
!6273 = !DILocation(line: 292, column: 16, scope: !6190)
!6274 = !DILocation(line: 292, column: 19, scope: !6190)
!6275 = !DILocation(line: 293, column: 16, scope: !6190)
!6276 = !DILocation(line: 293, column: 20, scope: !6190)
!6277 = !DILocation(line: 294, column: 16, scope: !6190)
!6278 = !DILocation(line: 294, column: 20, scope: !6190)
!6279 = !DILocation(line: 296, column: 37, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6190, file: !883, line: 296, column: 13)
!6281 = !DILocation(line: 296, column: 34, scope: !6280)
!6282 = !DILocation(line: 296, column: 13, scope: !6190)
!6283 = !DILocation(line: 297, column: 13, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6280, file: !883, line: 296, column: 77)
!6285 = !DILocation(line: 300, column: 5, scope: !6187)
!6286 = !DILocation(line: 302, column: 5, scope: !6172)
!6287 = !DILocation(line: 303, column: 5, scope: !6172)
!6288 = !DILocation(line: 304, column: 1, scope: !6172)
!6289 = distinct !DISubprogram(name: "hal_aes_ecb_decrypt", scope: !883, file: !883, line: 306, type: !6173, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !882, retainedNodes: !6290)
!6290 = !{!6291, !6292, !6293, !6294}
!6291 = !DILocalVariable(name: "plain_text", arg: 1, scope: !6289, file: !883, line: 306, type: !5985)
!6292 = !DILocalVariable(name: "encrypted_text", arg: 2, scope: !6289, file: !883, line: 307, type: !5985)
!6293 = !DILocalVariable(name: "key", arg: 3, scope: !6289, file: !883, line: 308, type: !5985)
!6294 = !DILocalVariable(name: "parcel", scope: !6289, file: !883, line: 318, type: !5981)
!6295 = !DILocation(line: 0, scope: !6289)
!6296 = !DILocation(line: 310, column: 15, scope: !6297)
!6297 = distinct !DILexicalBlock(scope: !6289, file: !883, line: 310, column: 9)
!6298 = !DILocation(line: 311, column: 13, scope: !6297)
!6299 = !DILocation(line: 316, column: 5, scope: !6289)
!6300 = !DILocation(line: 318, column: 5, scope: !6289)
!6301 = !DILocation(line: 318, column: 18, scope: !6289)
!6302 = !DILocation(line: 319, column: 12, scope: !6289)
!6303 = !DILocation(line: 319, column: 15, scope: !6289)
!6304 = !DILocation(line: 320, column: 12, scope: !6289)
!6305 = !DILocation(line: 320, column: 16, scope: !6289)
!6306 = !DILocation(line: 321, column: 12, scope: !6289)
!6307 = !DILocation(line: 321, column: 16, scope: !6289)
!6308 = !DILocation(line: 323, column: 33, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6289, file: !883, line: 323, column: 9)
!6310 = !DILocation(line: 323, column: 30, scope: !6309)
!6311 = !DILocation(line: 330, column: 1, scope: !6289)
!6312 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !901, file: !901, line: 71, type: !6313, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6315)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{null, !194, !175}
!6315 = !{!6316, !6317, !6318, !6412, !6413, !6414}
!6316 = !DILocalVariable(name: "MTDData", arg: 1, scope: !6312, file: !901, line: 71, type: !194)
!6317 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !6312, file: !901, line: 71, type: !175)
!6318 = !DILocalVariable(name: "D", scope: !6312, file: !901, line: 73, type: !6319)
!6319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6320, size: 32)
!6320 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1094, line: 193, baseType: !6321)
!6321 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 134, size: 1824, elements: !6322)
!6322 = !{!6323, !6324, !6325, !6331, !6337, !6338, !6345, !6346, !6353, !6354, !6355, !6356, !6363, !6364, !6394, !6395, !6396, !6397, !6398, !6399, !6400, !6401, !6402, !6403, !6404, !6405, !6406, !6407, !6408, !6409, !6410, !6411}
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !6321, file: !1094, line: 136, baseType: !175, size: 32)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !6321, file: !1094, line: 137, baseType: !680, size: 32, offset: 32)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !6321, file: !1094, line: 138, baseType: !6326, size: 32, offset: 64)
!6326 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1178, line: 56, baseType: !6327)
!6327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6328, size: 32)
!6328 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 54, size: 8, elements: !6329)
!6329 = !{!6330}
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6328, file: !1178, line: 55, baseType: !378, size: 8)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !6321, file: !1094, line: 139, baseType: !6332, size: 32, offset: 96)
!6332 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1178, line: 46, baseType: !6333)
!6333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6334, size: 32)
!6334 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1178, line: 44, size: 8, elements: !6335)
!6335 = !{!6336}
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !6334, file: !1178, line: 45, baseType: !378, size: 8)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !6321, file: !1094, line: 140, baseType: !1190, size: 8, offset: 128)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !6321, file: !1094, line: 143, baseType: !6339, size: 32, offset: 160)
!6339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6340, size: 32)
!6340 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1196, line: 146, baseType: !6341)
!6341 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 143, size: 64, elements: !6342)
!6342 = !{!6343, !6344}
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !6341, file: !1196, line: 144, baseType: !175, size: 32)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !6341, file: !1196, line: 145, baseType: !175, size: 32, offset: 32)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !6321, file: !1094, line: 144, baseType: !680, size: 32, offset: 192)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !6321, file: !1094, line: 145, baseType: !6347, size: 32, offset: 224)
!6347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6348, size: 32)
!6348 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1196, line: 152, baseType: !6349)
!6349 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 149, size: 64, elements: !6350)
!6350 = !{!6351, !6352}
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !6349, file: !1196, line: 150, baseType: !175, size: 32)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !6349, file: !1196, line: 151, baseType: !175, size: 32, offset: 32)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !6321, file: !1094, line: 146, baseType: !680, size: 32, offset: 256)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !6321, file: !1094, line: 147, baseType: !175, size: 32, offset: 288)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !6321, file: !1094, line: 148, baseType: !680, size: 32, offset: 320)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !6321, file: !1094, line: 151, baseType: !6357, size: 1024, offset: 352)
!6357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6358, size: 1024, elements: !1219)
!6358 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1196, line: 170, baseType: !6359)
!6359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 167, size: 64, elements: !6360)
!6360 = !{!6361, !6362}
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !6359, file: !1196, line: 168, baseType: !175, size: 32)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !6359, file: !1196, line: 169, baseType: !175, size: 32, offset: 32)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !6321, file: !1094, line: 155, baseType: !1221, size: 32, offset: 1376)
!6364 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !6321, file: !1094, line: 156, baseType: !6365, size: 32, offset: 1408)
!6365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6366, size: 32)
!6366 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1094, line: 124, baseType: !6367)
!6367 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1094, line: 90, size: 200, elements: !6368)
!6368 = !{!6369, !6370, !6371, !6372, !6373, !6374, !6375, !6376, !6377, !6378, !6379, !6380, !6381, !6382, !6383, !6384, !6385, !6386, !6387, !6388, !6389, !6390, !6391, !6392, !6393}
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !6367, file: !1094, line: 91, baseType: !378, size: 8)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !6367, file: !1094, line: 92, baseType: !378, size: 8, offset: 8)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !6367, file: !1094, line: 94, baseType: !378, size: 8, offset: 16)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !6367, file: !1094, line: 95, baseType: !378, size: 8, offset: 24)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !6367, file: !1094, line: 96, baseType: !378, size: 8, offset: 32)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !6367, file: !1094, line: 98, baseType: !378, size: 8, offset: 40)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !6367, file: !1094, line: 99, baseType: !378, size: 8, offset: 48)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !6367, file: !1094, line: 100, baseType: !378, size: 8, offset: 56)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !6367, file: !1094, line: 101, baseType: !378, size: 8, offset: 64)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !6367, file: !1094, line: 103, baseType: !378, size: 8, offset: 72)
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !6367, file: !1094, line: 104, baseType: !378, size: 8, offset: 80)
!6380 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !6367, file: !1094, line: 106, baseType: !378, size: 8, offset: 88)
!6381 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !6367, file: !1094, line: 107, baseType: !378, size: 8, offset: 96)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !6367, file: !1094, line: 108, baseType: !378, size: 8, offset: 104)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !6367, file: !1094, line: 109, baseType: !378, size: 8, offset: 112)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !6367, file: !1094, line: 110, baseType: !378, size: 8, offset: 120)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !6367, file: !1094, line: 111, baseType: !378, size: 8, offset: 128)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !6367, file: !1094, line: 112, baseType: !378, size: 8, offset: 136)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !6367, file: !1094, line: 114, baseType: !378, size: 8, offset: 144)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !6367, file: !1094, line: 115, baseType: !378, size: 8, offset: 152)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !6367, file: !1094, line: 118, baseType: !378, size: 8, offset: 160)
!6390 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6367, file: !1094, line: 119, baseType: !378, size: 8, offset: 168)
!6391 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !6367, file: !1094, line: 120, baseType: !378, size: 8, offset: 176)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !6367, file: !1094, line: 121, baseType: !378, size: 8, offset: 184)
!6393 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6367, file: !1094, line: 122, baseType: !378, size: 8, offset: 192)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !6321, file: !1094, line: 157, baseType: !175, size: 32, offset: 1440)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !6321, file: !1094, line: 158, baseType: !970, size: 16, offset: 1472)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !6321, file: !1094, line: 159, baseType: !970, size: 16, offset: 1488)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !6321, file: !1094, line: 163, baseType: !970, size: 16, offset: 1504)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !6321, file: !1094, line: 164, baseType: !970, size: 16, offset: 1520)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !6321, file: !1094, line: 167, baseType: !378, size: 8, offset: 1536)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !6321, file: !1094, line: 168, baseType: !1260, size: 24, offset: 1544)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !6321, file: !1094, line: 169, baseType: !378, size: 8, offset: 1568)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !6321, file: !1094, line: 170, baseType: !378, size: 8, offset: 1576)
!6403 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !6321, file: !1094, line: 173, baseType: !970, size: 16, offset: 1584)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !6321, file: !1094, line: 174, baseType: !175, size: 32, offset: 1600)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !6321, file: !1094, line: 175, baseType: !175, size: 32, offset: 1632)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !6321, file: !1094, line: 178, baseType: !211, size: 8, offset: 1664)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !6321, file: !1094, line: 179, baseType: !211, size: 8, offset: 1672)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !6321, file: !1094, line: 182, baseType: !1271, size: 32, offset: 1696)
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !6321, file: !1094, line: 186, baseType: !1271, size: 32, offset: 1728)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !6321, file: !1094, line: 187, baseType: !1276, size: 32, offset: 1760)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !6321, file: !1094, line: 188, baseType: !1276, size: 32, offset: 1792)
!6412 = !DILocalVariable(name: "i", scope: !6312, file: !901, line: 74, type: !175)
!6413 = !DILocalVariable(name: "data_cnt", scope: !6312, file: !901, line: 74, type: !175)
!6414 = !DILocalVariable(name: "p_data", scope: !6312, file: !901, line: 75, type: !938)
!6415 = !DILocation(line: 0, scope: !6312)
!6416 = !DILocation(line: 77, column: 16, scope: !6312)
!6417 = !DILocation(line: 79, column: 53, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6419, file: !901, line: 79, column: 5)
!6419 = distinct !DILexicalBlock(scope: !6312, file: !901, line: 79, column: 5)
!6420 = !DILocation(line: 79, column: 5, scope: !6419)
!6421 = !DILocation(line: 79, column: 41, scope: !6419)
!6422 = !DILocation(line: 77, column: 47, scope: !6312)
!6423 = !DILocation(line: 80, column: 13, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6425, file: !901, line: 80, column: 13)
!6425 = distinct !DILexicalBlock(scope: !6418, file: !901, line: 79, column: 80)
!6426 = !DILocation(line: 80, column: 21, scope: !6424)
!6427 = !DILocation(line: 80, column: 13, scope: !6425)
!6428 = !DILocation(line: 81, column: 13, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6430, file: !901, line: 81, column: 13)
!6430 = distinct !DILexicalBlock(scope: !6431, file: !901, line: 81, column: 13)
!6431 = distinct !DILexicalBlock(scope: !6432, file: !901, line: 81, column: 13)
!6432 = distinct !DILexicalBlock(scope: !6424, file: !901, line: 80, column: 36)
!6433 = !DILocation(line: 79, column: 65, scope: !6418)
!6434 = !DILocation(line: 79, column: 70, scope: !6418)
!6435 = distinct !{!6435, !6420, !6436}
!6436 = !DILocation(line: 84, column: 5, scope: !6419)
!6437 = !DILocation(line: 85, column: 1, scope: !6312)
!6438 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !901, file: !901, line: 93, type: !3113, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6439)
!6439 = !{!6440, !6441}
!6440 = !DILocalVariable(name: "num", arg: 1, scope: !6438, file: !901, line: 93, type: !175)
!6441 = !DILocalVariable(name: "ret", scope: !6438, file: !901, line: 95, type: !7)
!6442 = !DILocation(line: 0, scope: !6438)
!6443 = !DILocation(line: 100, column: 9, scope: !6438)
!6444 = !DILocation(line: 102, column: 5, scope: !6438)
!6445 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !901, file: !901, line: 110, type: !6446, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6449)
!6446 = !DISubroutineType(types: !6447)
!6447 = !{null, !6448}
!6448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !970)
!6449 = !{!6450, !6451}
!6450 = !DILocalVariable(name: "CS", arg: 1, scope: !6445, file: !901, line: 110, type: !6448)
!6451 = !DILocalVariable(name: "val", scope: !6445, file: !901, line: 112, type: !175)
!6452 = !DILocation(line: 0, scope: !6445)
!6453 = !DILocation(line: 114, column: 5, scope: !6454)
!6454 = distinct !DILexicalBlock(scope: !6455, file: !901, line: 114, column: 5)
!6455 = distinct !DILexicalBlock(scope: !6445, file: !901, line: 114, column: 5)
!6456 = !DILocation(line: 116, column: 16, scope: !6445)
!6457 = !DILocation(line: 117, column: 9, scope: !6445)
!6458 = !DILocation(line: 122, column: 13, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6460, file: !901, line: 121, column: 27)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !901, line: 121, column: 16)
!6461 = distinct !DILexicalBlock(scope: !6445, file: !901, line: 117, column: 9)
!6462 = !DILocation(line: 127, column: 9, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6464, file: !901, line: 127, column: 9)
!6464 = distinct !DILexicalBlock(scope: !6465, file: !901, line: 127, column: 9)
!6465 = distinct !DILexicalBlock(scope: !6466, file: !901, line: 127, column: 9)
!6466 = distinct !DILexicalBlock(scope: !6460, file: !901, line: 125, column: 12)
!6467 = !DILocation(line: 0, scope: !6461)
!6468 = !DILocation(line: 134, column: 5, scope: !6445)
!6469 = !DILocation(line: 134, column: 19, scope: !6445)
!6470 = !DILocation(line: 134, column: 35, scope: !6445)
!6471 = !DILocation(line: 134, column: 12, scope: !6445)
!6472 = distinct !{!6472, !6468, !6473}
!6473 = !DILocation(line: 134, column: 57, scope: !6445)
!6474 = !DILocation(line: 135, column: 19, scope: !6445)
!6475 = !DILocation(line: 135, column: 34, scope: !6445)
!6476 = !DILocation(line: 135, column: 12, scope: !6445)
!6477 = !DILocation(line: 135, column: 5, scope: !6445)
!6478 = distinct !{!6478, !6477, !6479}
!6479 = !DILocation(line: 135, column: 50, scope: !6445)
!6480 = !DILocation(line: 130, column: 9, scope: !6445)
!6481 = !DILocation(line: 138, column: 24, scope: !6445)
!6482 = !DILocation(line: 139, column: 1, scope: !6445)
!6483 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !901, file: !901, line: 148, type: !6446, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6484)
!6484 = !{!6485, !6486}
!6485 = !DILocalVariable(name: "CS", arg: 1, scope: !6483, file: !901, line: 148, type: !6448)
!6486 = !DILocalVariable(name: "val", scope: !6483, file: !901, line: 150, type: !175)
!6487 = !DILocation(line: 0, scope: !6483)
!6488 = !DILocation(line: 153, column: 16, scope: !6483)
!6489 = !DILocation(line: 154, column: 9, scope: !6483)
!6490 = !DILocation(line: 155, column: 24, scope: !6483)
!6491 = !DILocation(line: 158, column: 5, scope: !6483)
!6492 = !DILocation(line: 158, column: 18, scope: !6483)
!6493 = !DILocation(line: 158, column: 32, scope: !6483)
!6494 = distinct !{!6494, !6491, !6495}
!6495 = !DILocation(line: 158, column: 49, scope: !6483)
!6496 = !DILocation(line: 163, column: 16, scope: !6483)
!6497 = !DILocation(line: 164, column: 9, scope: !6483)
!6498 = !DILocation(line: 165, column: 24, scope: !6483)
!6499 = !DILocation(line: 168, column: 5, scope: !6483)
!6500 = !DILocation(line: 168, column: 18, scope: !6483)
!6501 = !DILocation(line: 168, column: 32, scope: !6483)
!6502 = distinct !{!6502, !6499, !6503}
!6503 = !DILocation(line: 168, column: 46, scope: !6483)
!6504 = !DILocation(line: 174, column: 10, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6483, file: !901, line: 174, column: 9)
!6506 = !DILocation(line: 174, column: 25, scope: !6505)
!6507 = !DILocation(line: 174, column: 9, scope: !6483)
!6508 = !DILocation(line: 175, column: 9, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6510, file: !901, line: 175, column: 9)
!6510 = distinct !DILexicalBlock(scope: !6511, file: !901, line: 175, column: 9)
!6511 = distinct !DILexicalBlock(scope: !6505, file: !901, line: 174, column: 36)
!6512 = !DILocation(line: 176, column: 5, scope: !6511)
!6513 = !DILocation(line: 179, column: 1, scope: !6483)
!6514 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !901, file: !901, line: 186, type: !6515, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6517)
!6515 = !DISubroutineType(types: !6516)
!6516 = !{!175, !6448}
!6517 = !{!6518, !6519, !6520}
!6518 = !DILocalVariable(name: "CS", arg: 1, scope: !6514, file: !901, line: 186, type: !6448)
!6519 = !DILocalVariable(name: "val", scope: !6514, file: !901, line: 188, type: !175)
!6520 = !DILocalVariable(name: "misc_ctl", scope: !6514, file: !901, line: 189, type: !175)
!6521 = !DILocation(line: 0, scope: !6514)
!6522 = !DILocation(line: 204, column: 16, scope: !6514)
!6523 = !DILocation(line: 208, column: 12, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6514, file: !901, line: 208, column: 9)
!6525 = !DILocation(line: 208, column: 9, scope: !6514)
!6526 = !DILocation(line: 212, column: 20, scope: !6514)
!6527 = !DILocation(line: 215, column: 1, scope: !6514)
!6528 = !DILocation(line: 215, column: 15, scope: !6514)
!6529 = !DILocation(line: 215, column: 29, scope: !6514)
!6530 = !DILocation(line: 215, column: 8, scope: !6514)
!6531 = distinct !{!6531, !6527, !6532}
!6532 = !DILocation(line: 215, column: 46, scope: !6514)
!6533 = !DILocation(line: 216, column: 22, scope: !6514)
!6534 = !DILocation(line: 216, column: 36, scope: !6514)
!6535 = !DILocation(line: 216, column: 9, scope: !6514)
!6536 = distinct !{!6536, !6535, !6537}
!6537 = !DILocation(line: 216, column: 47, scope: !6514)
!6538 = !DILocation(line: 218, column: 13, scope: !6514)
!6539 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !901, file: !901, line: 227, type: !6446, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6540)
!6540 = !{!6541}
!6541 = !DILocalVariable(name: "CS", arg: 1, scope: !6539, file: !901, line: 227, type: !6448)
!6542 = !DILocation(line: 0, scope: !6539)
!6543 = !DILocation(line: 235, column: 5, scope: !6539)
!6544 = !DILocation(line: 236, column: 5, scope: !6539)
!6545 = !DILocation(line: 238, column: 1, scope: !6539)
!6546 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !901, file: !901, line: 249, type: !6547, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6549)
!6547 = !DISubroutineType(types: !6548)
!6548 = !{null, !6448, !690}
!6549 = !{!6550, !6551, !6552, !6553, !6554}
!6550 = !DILocalVariable(name: "CS", arg: 1, scope: !6546, file: !901, line: 249, type: !6448)
!6551 = !DILocalVariable(name: "cmd", arg: 2, scope: !6546, file: !901, line: 249, type: !690)
!6552 = !DILocalVariable(name: "cmdi", scope: !6546, file: !901, line: 251, type: !175)
!6553 = !DILocalVariable(name: "cmdo", scope: !6546, file: !901, line: 251, type: !175)
!6554 = !DILocalVariable(name: "len", scope: !6546, file: !901, line: 252, type: !378)
!6555 = !DILocation(line: 0, scope: !6546)
!6556 = !DILocation(line: 254, column: 46, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6558, file: !901, line: 254, column: 5)
!6558 = distinct !DILexicalBlock(scope: !6546, file: !901, line: 254, column: 5)
!6559 = !DILocation(line: 254, column: 5, scope: !6558)
!6560 = !DILocation(line: 255, column: 22, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6557, file: !901, line: 254, column: 103)
!6562 = !DILocation(line: 255, column: 59, scope: !6561)
!6563 = !DILocation(line: 255, column: 51, scope: !6561)
!6564 = !DILocation(line: 254, column: 65, scope: !6557)
!6565 = !DILocation(line: 254, column: 97, scope: !6557)
!6566 = distinct !{!6566, !6559, !6567}
!6567 = !DILocation(line: 256, column: 5, scope: !6558)
!6568 = !DILocation(line: 258, column: 9, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6546, file: !901, line: 258, column: 9)
!6570 = !DILocation(line: 262, column: 5, scope: !6546)
!6571 = !DILocation(line: 263, column: 33, scope: !6546)
!6572 = !DILocation(line: 264, column: 25, scope: !6546)
!6573 = !DILocation(line: 265, column: 24, scope: !6546)
!6574 = !DILocation(line: 266, column: 5, scope: !6546)
!6575 = !DILocation(line: 268, column: 5, scope: !6546)
!6576 = !DILocation(line: 269, column: 1, scope: !6546)
!6577 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !901, file: !901, line: 281, type: !6578, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6580)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{null, !6448, !4496, !690, !690}
!6580 = !{!6581, !6582, !6583, !6584, !6585, !6586}
!6581 = !DILocalVariable(name: "CS", arg: 1, scope: !6577, file: !901, line: 281, type: !6448)
!6582 = !DILocalVariable(name: "cmd", arg: 2, scope: !6577, file: !901, line: 281, type: !4496)
!6583 = !DILocalVariable(name: "address", arg: 3, scope: !6577, file: !901, line: 281, type: !690)
!6584 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !6577, file: !901, line: 281, type: !690)
!6585 = !DILocalVariable(name: "cmd1", scope: !6577, file: !901, line: 283, type: !175)
!6586 = !DILocalVariable(name: "cmd2", scope: !6577, file: !901, line: 283, type: !175)
!6587 = !DILocation(line: 0, scope: !6577)
!6588 = !DILocation(line: 285, column: 12, scope: !6577)
!6589 = !DILocation(line: 287, column: 23, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6577, file: !901, line: 287, column: 9)
!6591 = !DILocation(line: 287, column: 9, scope: !6577)
!6592 = !DILocation(line: 288, column: 22, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6590, file: !901, line: 287, column: 31)
!6594 = !DILocation(line: 288, column: 55, scope: !6593)
!6595 = !DILocation(line: 288, column: 53, scope: !6593)
!6596 = !DILocation(line: 289, column: 5, scope: !6593)
!6597 = !DILocation(line: 290, column: 22, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6590, file: !901, line: 289, column: 12)
!6599 = !DILocation(line: 290, column: 53, scope: !6598)
!6600 = !DILocation(line: 290, column: 51, scope: !6598)
!6601 = !DILocation(line: 291, column: 21, scope: !6598)
!6602 = !DILocation(line: 0, scope: !6590)
!6603 = !DILocation(line: 294, column: 33, scope: !6577)
!6604 = !DILocation(line: 295, column: 38, scope: !6577)
!6605 = !DILocation(line: 296, column: 41, scope: !6577)
!6606 = !DILocation(line: 296, column: 25, scope: !6577)
!6607 = !DILocation(line: 297, column: 24, scope: !6577)
!6608 = !DILocation(line: 299, column: 5, scope: !6577)
!6609 = !DILocation(line: 300, column: 5, scope: !6577)
!6610 = !DILocation(line: 302, column: 1, scope: !6577)
!6611 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !901, file: !901, line: 312, type: !6612, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6614)
!6612 = !DISubroutineType(types: !6613)
!6613 = !{!175, !690, !690}
!6614 = !{!6615, !6616}
!6615 = !DILocalVariable(name: "cmd", arg: 1, scope: !6611, file: !901, line: 312, type: !690)
!6616 = !DILocalVariable(name: "address", arg: 2, scope: !6611, file: !901, line: 312, type: !690)
!6617 = !DILocation(line: 0, scope: !6611)
!6618 = !DILocation(line: 314, column: 14, scope: !6611)
!6619 = !DILocation(line: 314, column: 44, scope: !6611)
!6620 = !DILocation(line: 314, column: 82, scope: !6611)
!6621 = !DILocation(line: 314, column: 75, scope: !6611)
!6622 = !DILocation(line: 314, column: 5, scope: !6611)
!6623 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !901, file: !901, line: 332, type: !6624, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6627)
!6624 = !DISubroutineType(types: !6625)
!6625 = !{!175, !690, !690, !6626, !938}
!6626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 32)
!6627 = !{!6628, !6629, !6630, !6631, !6632, !6640, !6641, !6642}
!6628 = !DILocalVariable(name: "cmd", arg: 1, scope: !6623, file: !901, line: 332, type: !690)
!6629 = !DILocalVariable(name: "address", arg: 2, scope: !6623, file: !901, line: 332, type: !690)
!6630 = !DILocalVariable(name: "p_data", arg: 3, scope: !6623, file: !901, line: 332, type: !6626)
!6631 = !DILocalVariable(name: "length", arg: 4, scope: !6623, file: !901, line: 332, type: !938)
!6632 = !DILocalVariable(name: "tmp", scope: !6623, file: !901, line: 334, type: !6633)
!6633 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1094, line: 202, baseType: !6634)
!6634 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1094, line: 198, size: 32, elements: !6635)
!6635 = !{!6636, !6637, !6639}
!6636 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !6634, file: !1094, line: 199, baseType: !175, size: 32)
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !6634, file: !1094, line: 200, baseType: !6638, size: 32)
!6638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 32, elements: !383)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !6634, file: !1094, line: 201, baseType: !377, size: 32)
!6640 = !DILocalVariable(name: "cmd1", scope: !6623, file: !901, line: 335, type: !175)
!6641 = !DILocalVariable(name: "cmd2", scope: !6623, file: !901, line: 335, type: !175)
!6642 = !DILocalVariable(name: "i", scope: !6623, file: !901, line: 336, type: !175)
!6643 = !DILocation(line: 0, scope: !6623)
!6644 = !DILocation(line: 334, column: 5, scope: !6623)
!6645 = !DILocation(line: 334, column: 16, scope: !6623)
!6646 = !DILocation(line: 338, column: 12, scope: !6623)
!6647 = !DILocation(line: 340, column: 17, scope: !6623)
!6648 = !DILocation(line: 342, column: 17, scope: !6623)
!6649 = !DILocation(line: 342, column: 9, scope: !6623)
!6650 = !DILocation(line: 342, column: 15, scope: !6623)
!6651 = !DILocation(line: 344, column: 22, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6653, file: !901, line: 343, column: 29)
!6653 = distinct !DILexicalBlock(scope: !6654, file: !901, line: 343, column: 5)
!6654 = distinct !DILexicalBlock(scope: !6623, file: !901, line: 343, column: 5)
!6655 = !DILocation(line: 343, column: 5, scope: !6654)
!6656 = !DILocation(line: 344, column: 21, scope: !6652)
!6657 = !DILocation(line: 344, column: 9, scope: !6652)
!6658 = !DILocation(line: 344, column: 19, scope: !6652)
!6659 = !DILocation(line: 345, column: 18, scope: !6652)
!6660 = !DILocation(line: 343, column: 25, scope: !6653)
!6661 = !DILocation(line: 343, column: 19, scope: !6653)
!6662 = distinct !{!6662, !6655, !6663}
!6663 = !DILocation(line: 346, column: 5, scope: !6654)
!6664 = !DILocation(line: 347, column: 16, scope: !6623)
!6665 = !DILocation(line: 348, column: 16, scope: !6623)
!6666 = !DILocation(line: 348, column: 15, scope: !6623)
!6667 = !DILocation(line: 339, column: 17, scope: !6623)
!6668 = !DILocation(line: 339, column: 52, scope: !6623)
!6669 = !DILocation(line: 339, column: 45, scope: !6623)
!6670 = !DILocation(line: 348, column: 13, scope: !6623)
!6671 = !DILocation(line: 349, column: 38, scope: !6623)
!6672 = !DILocation(line: 351, column: 1, scope: !6623)
!6673 = !DILocation(line: 350, column: 5, scope: !6623)
!6674 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !901, file: !901, line: 367, type: !6675, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6677)
!6675 = !DISubroutineType(types: !6676)
!6676 = !{null, !175, !194, !858}
!6677 = !{!6678, !6679, !6680, !6681, !6682, !6683}
!6678 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !6674, file: !901, line: 367, type: !175)
!6679 = !DILocalVariable(name: "buff", arg: 2, scope: !6674, file: !901, line: 367, type: !194)
!6680 = !DILocalVariable(name: "length", arg: 3, scope: !6674, file: !901, line: 367, type: !858)
!6681 = !DILocalVariable(name: "i", scope: !6674, file: !901, line: 369, type: !175)
!6682 = !DILocalVariable(name: "p_data", scope: !6674, file: !901, line: 370, type: !680)
!6683 = !DILocalVariable(name: "tmp", scope: !6674, file: !901, line: 371, type: !6633)
!6684 = !DILocation(line: 0, scope: !6674)
!6685 = !DILocation(line: 371, column: 5, scope: !6674)
!6686 = !DILocation(line: 371, column: 13, scope: !6674)
!6687 = !DILocation(line: 373, column: 18, scope: !6674)
!6688 = !DILocation(line: 376, column: 15, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6674, file: !901, line: 376, column: 9)
!6690 = !DILocation(line: 376, column: 30, scope: !6689)
!6691 = !DILocation(line: 376, column: 11, scope: !6689)
!6692 = !DILocation(line: 376, column: 9, scope: !6674)
!6693 = !DILocation(line: 377, column: 23, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6695, file: !901, line: 377, column: 9)
!6695 = distinct !DILexicalBlock(scope: !6696, file: !901, line: 377, column: 9)
!6696 = distinct !DILexicalBlock(scope: !6689, file: !901, line: 376, column: 41)
!6697 = !DILocation(line: 377, column: 9, scope: !6695)
!6698 = !DILocation(line: 378, column: 13, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6694, file: !901, line: 377, column: 80)
!6700 = !DILocation(line: 377, column: 41, scope: !6694)
!6701 = !DILocation(line: 377, column: 54, scope: !6694)
!6702 = !DILocation(line: 377, column: 67, scope: !6694)
!6703 = distinct !{!6703, !6697, !6704}
!6704 = !DILocation(line: 379, column: 9, scope: !6695)
!6705 = !DILocation(line: 382, column: 37, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6689, file: !901, line: 382, column: 14)
!6707 = !DILocation(line: 382, column: 16, scope: !6706)
!6708 = !DILocation(line: 0, scope: !6706)
!6709 = !DILocation(line: 382, column: 14, scope: !6689)
!6710 = !DILocation(line: 391, column: 9, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6712, file: !901, line: 391, column: 9)
!6712 = distinct !DILexicalBlock(scope: !6706, file: !901, line: 390, column: 13)
!6713 = !DILocation(line: 383, column: 9, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !901, line: 383, column: 9)
!6715 = distinct !DILexicalBlock(scope: !6706, file: !901, line: 382, column: 49)
!6716 = !DILocation(line: 384, column: 26, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6718, file: !901, line: 383, column: 80)
!6718 = distinct !DILexicalBlock(scope: !6714, file: !901, line: 383, column: 9)
!6719 = !DILocation(line: 384, column: 24, scope: !6717)
!6720 = !DILocation(line: 385, column: 47, scope: !6717)
!6721 = !DILocation(line: 385, column: 26, scope: !6717)
!6722 = !DILocation(line: 385, column: 24, scope: !6717)
!6723 = !DILocation(line: 386, column: 13, scope: !6717)
!6724 = !DILocation(line: 383, column: 41, scope: !6718)
!6725 = !DILocation(line: 383, column: 54, scope: !6718)
!6726 = !DILocation(line: 383, column: 67, scope: !6718)
!6727 = !DILocation(line: 383, column: 23, scope: !6718)
!6728 = distinct !{!6728, !6713, !6729}
!6729 = !DILocation(line: 387, column: 9, scope: !6714)
!6730 = !DILocation(line: 392, column: 13, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6732, file: !901, line: 392, column: 13)
!6732 = distinct !DILexicalBlock(scope: !6733, file: !901, line: 391, column: 61)
!6733 = distinct !DILexicalBlock(scope: !6711, file: !901, line: 391, column: 9)
!6734 = !DILocation(line: 393, column: 36, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !901, line: 392, column: 51)
!6736 = distinct !DILexicalBlock(scope: !6731, file: !901, line: 392, column: 13)
!6737 = !DILocation(line: 393, column: 29, scope: !6735)
!6738 = !DILocation(line: 393, column: 17, scope: !6735)
!6739 = !DILocation(line: 393, column: 27, scope: !6735)
!6740 = !DILocation(line: 392, column: 47, scope: !6736)
!6741 = !DILocation(line: 392, column: 27, scope: !6736)
!6742 = !DILocation(line: 392, column: 31, scope: !6736)
!6743 = distinct !{!6743, !6730, !6744}
!6744 = !DILocation(line: 394, column: 13, scope: !6731)
!6745 = !DILocation(line: 395, column: 13, scope: !6732)
!6746 = !DILocation(line: 391, column: 41, scope: !6733)
!6747 = !DILocation(line: 391, column: 54, scope: !6733)
!6748 = !DILocation(line: 391, column: 23, scope: !6733)
!6749 = distinct !{!6749, !6710, !6750}
!6750 = !DILocation(line: 396, column: 9, scope: !6711)
!6751 = !DILocation(line: 398, column: 1, scope: !6674)
!6752 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !901, file: !901, line: 414, type: !6753, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6755)
!6753 = !DISubroutineType(types: !6754)
!6754 = !{null, !6448, !4495, !680, !6448, !6448}
!6755 = !{!6756, !6757, !6758, !6759, !6760, !6761, !6762, !6763, !6764, !6765}
!6756 = !DILocalVariable(name: "CS", arg: 1, scope: !6752, file: !901, line: 414, type: !6448)
!6757 = !DILocalVariable(name: "cmd", arg: 2, scope: !6752, file: !901, line: 414, type: !4495)
!6758 = !DILocalVariable(name: "data", arg: 3, scope: !6752, file: !901, line: 414, type: !680)
!6759 = !DILocalVariable(name: "outl", arg: 4, scope: !6752, file: !901, line: 414, type: !6448)
!6760 = !DILocalVariable(name: "inl", arg: 5, scope: !6752, file: !901, line: 414, type: !6448)
!6761 = !DILocalVariable(name: "tmp", scope: !6752, file: !901, line: 416, type: !175)
!6762 = !DILocalVariable(name: "i", scope: !6752, file: !901, line: 417, type: !175)
!6763 = !DILocalVariable(name: "j", scope: !6752, file: !901, line: 417, type: !175)
!6764 = !DILocalVariable(name: "p_data", scope: !6752, file: !901, line: 418, type: !680)
!6765 = !DILocalVariable(name: "p_tmp", scope: !6752, file: !901, line: 418, type: !680)
!6766 = !DILocation(line: 0, scope: !6752)
!6767 = !DILocation(line: 416, column: 5, scope: !6752)
!6768 = !DILocation(line: 422, column: 60, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !901, line: 422, column: 5)
!6770 = distinct !DILexicalBlock(scope: !6752, file: !901, line: 422, column: 5)
!6771 = !DILocation(line: 422, column: 5, scope: !6770)
!6772 = !DILocation(line: 423, column: 25, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !901, line: 423, column: 9)
!6774 = distinct !DILexicalBlock(scope: !6769, file: !901, line: 422, column: 83)
!6775 = !DILocation(line: 423, column: 32, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !901, line: 423, column: 9)
!6777 = !DILocation(line: 423, column: 9, scope: !6773)
!6778 = !DILocation(line: 424, column: 24, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6776, file: !901, line: 423, column: 59)
!6780 = !DILocation(line: 424, column: 13, scope: !6779)
!6781 = !DILocation(line: 424, column: 22, scope: !6779)
!6782 = !DILocation(line: 423, column: 50, scope: !6776)
!6783 = !DILocation(line: 423, column: 55, scope: !6776)
!6784 = !DILocation(line: 423, column: 39, scope: !6776)
!6785 = distinct !{!6785, !6777, !6786}
!6786 = !DILocation(line: 425, column: 9, scope: !6773)
!6787 = !DILocation(line: 426, column: 9, scope: !6774)
!6788 = !DILocation(line: 0, scope: !6770)
!6789 = !DILocation(line: 422, column: 75, scope: !6769)
!6790 = distinct !{!6790, !6771, !6791}
!6791 = !DILocation(line: 427, column: 5, scope: !6770)
!6792 = !DILocation(line: 428, column: 25, scope: !6752)
!6793 = !DILocation(line: 429, column: 26, scope: !6752)
!6794 = !DILocation(line: 429, column: 24, scope: !6752)
!6795 = !DILocation(line: 430, column: 5, scope: !6752)
!6796 = !DILocation(line: 431, column: 5, scope: !6752)
!6797 = !DILocation(line: 433, column: 67, scope: !6798)
!6798 = distinct !DILexicalBlock(scope: !6799, file: !901, line: 433, column: 5)
!6799 = distinct !DILexicalBlock(scope: !6752, file: !901, line: 433, column: 5)
!6800 = !DILocation(line: 433, column: 5, scope: !6799)
!6801 = !DILocation(line: 433, column: 56, scope: !6799)
!6802 = !DILocation(line: 434, column: 17, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6798, file: !901, line: 433, column: 100)
!6804 = !DILocation(line: 434, column: 15, scope: !6803)
!6805 = !DILocation(line: 433, column: 74, scope: !6798)
!6806 = !DILocation(line: 433, column: 79, scope: !6798)
!6807 = !DILocation(line: 433, column: 87, scope: !6798)
!6808 = distinct !{!6808, !6800, !6809}
!6809 = !DILocation(line: 435, column: 5, scope: !6799)
!6810 = !DILocation(line: 437, column: 1, scope: !6752)
!6811 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !901, file: !901, line: 462, type: !6812, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6814)
!6812 = !DISubroutineType(types: !6813)
!6813 = !{null, !6448, !4495}
!6814 = !{!6815, !6816, !6817, !6818, !6819}
!6815 = !DILocalVariable(name: "CS", arg: 1, scope: !6811, file: !901, line: 462, type: !6448)
!6816 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !6811, file: !901, line: 462, type: !4495)
!6817 = !DILocalVariable(name: "i", scope: !6811, file: !901, line: 464, type: !175)
!6818 = !DILocalVariable(name: "val", scope: !6811, file: !901, line: 465, type: !175)
!6819 = !DILocalVariable(name: "status", scope: !6820, file: !901, line: 492, type: !378)
!6820 = distinct !DILexicalBlock(scope: !6821, file: !901, line: 491, column: 47)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !901, line: 491, column: 13)
!6822 = distinct !DILexicalBlock(scope: !6811, file: !901, line: 477, column: 17)
!6823 = !DILocation(line: 0, scope: !6811)
!6824 = !DILocation(line: 467, column: 17, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6811, file: !901, line: 467, column: 9)
!6826 = !DILocation(line: 467, column: 9, scope: !6811)
!6827 = !DILocation(line: 474, column: 11, scope: !6811)
!6828 = !DILocation(line: 477, column: 5, scope: !6811)
!6829 = !DILocation(line: 478, column: 17, scope: !6822)
!6830 = !DILocation(line: 478, column: 9, scope: !6822)
!6831 = !DILocation(line: 481, column: 17, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6833, file: !901, line: 481, column: 17)
!6833 = distinct !DILexicalBlock(scope: !6822, file: !901, line: 478, column: 29)
!6834 = !DILocation(line: 481, column: 17, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !901, line: 481, column: 17)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !901, line: 481, column: 17)
!6837 = distinct !DILexicalBlock(scope: !6832, file: !901, line: 481, column: 17)
!6838 = !DILocation(line: 481, column: 17, scope: !6836)
!6839 = !DILocation(line: 481, column: 17, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6841, file: !901, line: 481, column: 17)
!6841 = distinct !DILexicalBlock(scope: !6837, file: !901, line: 481, column: 17)
!6842 = !DILocation(line: 484, column: 17, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6833, file: !901, line: 484, column: 17)
!6844 = !DILocation(line: 484, column: 17, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6846, file: !901, line: 484, column: 17)
!6846 = distinct !DILexicalBlock(scope: !6847, file: !901, line: 484, column: 17)
!6847 = distinct !DILexicalBlock(scope: !6843, file: !901, line: 484, column: 17)
!6848 = !DILocation(line: 484, column: 17, scope: !6846)
!6849 = !DILocation(line: 484, column: 17, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6851, file: !901, line: 484, column: 17)
!6851 = distinct !DILexicalBlock(scope: !6847, file: !901, line: 484, column: 17)
!6852 = !DILocation(line: 0, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6854, file: !901, line: 487, column: 17)
!6854 = distinct !DILexicalBlock(scope: !6833, file: !901, line: 487, column: 17)
!6855 = !DILocation(line: 487, column: 17, scope: !6854)
!6856 = !DILocation(line: 487, column: 17, scope: !6857)
!6857 = distinct !DILexicalBlock(scope: !6858, file: !901, line: 487, column: 17)
!6858 = distinct !DILexicalBlock(scope: !6853, file: !901, line: 487, column: 17)
!6859 = !DILocation(line: 487, column: 17, scope: !6858)
!6860 = !DILocation(line: 487, column: 17, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6862, file: !901, line: 487, column: 17)
!6862 = distinct !DILexicalBlock(scope: !6853, file: !901, line: 487, column: 17)
!6863 = !DILocation(line: 487, column: 17, scope: !6862)
!6864 = !DILocation(line: 491, column: 23, scope: !6821)
!6865 = !DILocation(line: 491, column: 13, scope: !6821)
!6866 = !DILocation(line: 491, column: 28, scope: !6821)
!6867 = !DILocation(line: 491, column: 13, scope: !6822)
!6868 = !DILocation(line: 492, column: 13, scope: !6820)
!6869 = !DILocation(line: 494, column: 13, scope: !6820)
!6870 = !DILocation(line: 0, scope: !6820)
!6871 = !DILocation(line: 495, column: 17, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6820, file: !901, line: 494, column: 16)
!6873 = !DILocation(line: 496, column: 22, scope: !6820)
!6874 = !DILocation(line: 496, column: 31, scope: !6820)
!6875 = !DILocation(line: 496, column: 29, scope: !6820)
!6876 = !DILocation(line: 496, column: 13, scope: !6872)
!6877 = distinct !{!6877, !6869, !6878}
!6878 = !DILocation(line: 496, column: 45, scope: !6820)
!6879 = !DILocation(line: 497, column: 9, scope: !6821)
!6880 = !DILocation(line: 503, column: 25, scope: !6822)
!6881 = !DILocation(line: 497, column: 9, scope: !6820)
!6882 = !DILocation(line: 500, column: 70, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6821, file: !901, line: 499, column: 14)
!6884 = !DILocation(line: 500, column: 60, scope: !6883)
!6885 = !DILocation(line: 500, column: 13, scope: !6883)
!6886 = !DILocation(line: 503, column: 15, scope: !6822)
!6887 = !DILocation(line: 503, column: 11, scope: !6822)
!6888 = distinct !{!6888, !6828, !6889}
!6889 = !DILocation(line: 504, column: 5, scope: !6811)
!6890 = !DILocation(line: 505, column: 1, scope: !6811)
!6891 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !901, file: !901, line: 514, type: !6892, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6894)
!6892 = !DISubroutineType(types: !6893)
!6893 = !{null, !6448, !680, !378}
!6894 = !{!6895, !6896, !6897}
!6895 = !DILocalVariable(name: "CS", arg: 1, scope: !6891, file: !901, line: 514, type: !6448)
!6896 = !DILocalVariable(name: "id", arg: 2, scope: !6891, file: !901, line: 514, type: !680)
!6897 = !DILocalVariable(name: "cmd", arg: 3, scope: !6891, file: !901, line: 514, type: !378)
!6898 = !DILocation(line: 0, scope: !6891)
!6899 = !DILocation(line: 517, column: 5, scope: !6891)
!6900 = !DILocation(line: 518, column: 1, scope: !6891)
!6901 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !901, file: !901, line: 521, type: !6902, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6904)
!6902 = !DISubroutineType(types: !6903)
!6903 = !{null, !6448, !680}
!6904 = !{!6905, !6906}
!6905 = !DILocalVariable(name: "CS", arg: 1, scope: !6901, file: !901, line: 521, type: !6448)
!6906 = !DILocalVariable(name: "id", arg: 2, scope: !6901, file: !901, line: 521, type: !680)
!6907 = !DILocation(line: 0, scope: !6901)
!6908 = !DILocation(line: 523, column: 5, scope: !6901)
!6909 = !DILocation(line: 524, column: 1, scope: !6901)
!6910 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !901, file: !901, line: 536, type: !6911, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !210)
!6911 = !DISubroutineType(types: !6912)
!6912 = !{!6913}
!6913 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !904, line: 57, baseType: !903)
!6914 = !DILocation(line: 540, column: 5, scope: !6910)
!6915 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !901, file: !901, line: 561, type: !6916, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !210)
!6916 = !DISubroutineType(types: !6917)
!6917 = !{!6918}
!6918 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !904, line: 66, baseType: !911)
!6919 = !DILocation(line: 564, column: 15, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6915, file: !901, line: 564, column: 9)
!6921 = !DILocation(line: 564, column: 31, scope: !6920)
!6922 = !DILocation(line: 564, column: 45, scope: !6920)
!6923 = !DILocation(line: 0, scope: !6920)
!6924 = !DILocation(line: 569, column: 1, scope: !6915)
!6925 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !901, file: !901, line: 580, type: !6926, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6928)
!6926 = !DISubroutineType(types: !6927)
!6927 = !{!211, !680}
!6928 = !{!6929, !6930}
!6929 = !DILocalVariable(name: "buffer", arg: 1, scope: !6925, file: !901, line: 580, type: !680)
!6930 = !DILocalVariable(name: "i", scope: !6925, file: !901, line: 582, type: !79)
!6931 = !DILocation(line: 0, scope: !6925)
!6932 = !DILocation(line: 583, column: 5, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6925, file: !901, line: 583, column: 5)
!6934 = !DILocation(line: 584, column: 9, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6936, file: !901, line: 583, column: 29)
!6936 = distinct !DILexicalBlock(scope: !6933, file: !901, line: 583, column: 5)
!6937 = !DILocation(line: 584, column: 19, scope: !6935)
!6938 = !DILocation(line: 583, column: 25, scope: !6936)
!6939 = !DILocation(line: 583, column: 19, scope: !6936)
!6940 = distinct !{!6940, !6932, !6941}
!6941 = !DILocation(line: 585, column: 5, scope: !6933)
!6942 = !DILocation(line: 586, column: 5, scope: !6925)
!6943 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !901, file: !901, line: 613, type: !208, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !6944)
!6944 = !{!6945}
!6945 = !DILocalVariable(name: "D", scope: !6943, file: !901, line: 615, type: !6319)
!6946 = !DILocation(line: 0, scope: !6943)
!6947 = !DILocation(line: 616, column: 32, scope: !6943)
!6948 = !DILocation(line: 616, column: 37, scope: !6943)
!6949 = !DILocation(line: 616, column: 27, scope: !6943)
!6950 = !DILocation(line: 617, column: 44, scope: !6943)
!6951 = !DILocation(line: 617, column: 31, scope: !6943)
!6952 = !DILocation(line: 617, column: 28, scope: !6943)
!6953 = !DILocation(line: 618, column: 32, scope: !6943)
!6954 = !DILocation(line: 618, column: 31, scope: !6943)
!6955 = !DILocation(line: 618, column: 29, scope: !6943)
!6956 = !DILocation(line: 621, column: 31, scope: !6943)
!6957 = !DILocation(line: 621, column: 24, scope: !6943)
!6958 = !DILocation(line: 622, column: 34, scope: !6943)
!6959 = !DILocation(line: 622, column: 27, scope: !6943)
!6960 = !DILocation(line: 623, column: 32, scope: !6943)
!6961 = !DILocation(line: 623, column: 25, scope: !6943)
!6962 = !DILocation(line: 624, column: 33, scope: !6943)
!6963 = !DILocation(line: 624, column: 26, scope: !6943)
!6964 = !DILocation(line: 625, column: 33, scope: !6943)
!6965 = !DILocation(line: 625, column: 26, scope: !6943)
!6966 = !DILocation(line: 629, column: 32, scope: !6943)
!6967 = !DILocation(line: 629, column: 47, scope: !6943)
!6968 = !DILocation(line: 629, column: 25, scope: !6943)
!6969 = !DILocation(line: 630, column: 32, scope: !6943)
!6970 = !DILocation(line: 630, column: 47, scope: !6943)
!6971 = !DILocation(line: 630, column: 25, scope: !6943)
!6972 = !DILocation(line: 633, column: 24, scope: !6943)
!6973 = !DILocation(line: 633, column: 31, scope: !6943)
!6974 = !DILocation(line: 633, column: 36, scope: !6943)
!6975 = !DILocation(line: 633, column: 28, scope: !6943)
!6976 = !DILocation(line: 633, column: 5, scope: !6943)
!6977 = !DILocation(line: 635, column: 5, scope: !6943)
!6978 = !DILocation(line: 636, column: 1, scope: !6943)
!6979 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !901, file: !901, line: 641, type: !208, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !210)
!6980 = !DILocation(line: 644, column: 26, scope: !6979)
!6981 = !DILocation(line: 644, column: 24, scope: !6979)
!6982 = !DILocation(line: 645, column: 29, scope: !6979)
!6983 = !DILocation(line: 645, column: 27, scope: !6979)
!6984 = !DILocation(line: 646, column: 27, scope: !6979)
!6985 = !DILocation(line: 646, column: 25, scope: !6979)
!6986 = !DILocation(line: 647, column: 28, scope: !6979)
!6987 = !DILocation(line: 647, column: 26, scope: !6979)
!6988 = !DILocation(line: 648, column: 27, scope: !6979)
!6989 = !DILocation(line: 648, column: 25, scope: !6979)
!6990 = !DILocation(line: 652, column: 32, scope: !6979)
!6991 = !DILocation(line: 652, column: 47, scope: !6979)
!6992 = !DILocation(line: 652, column: 25, scope: !6979)
!6993 = !DILocation(line: 655, column: 24, scope: !6979)
!6994 = !DILocation(line: 655, column: 5, scope: !6979)
!6995 = !DILocation(line: 657, column: 5, scope: !6979)
!6996 = !DILocation(line: 660, column: 9, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6979, file: !901, line: 660, column: 9)
!6998 = !DILocation(line: 660, column: 59, scope: !6997)
!6999 = !DILocation(line: 660, column: 38, scope: !6997)
!7000 = !DILocation(line: 660, column: 37, scope: !6997)
!7001 = !DILocation(line: 660, column: 33, scope: !6997)
!7002 = !DILocation(line: 660, column: 9, scope: !6979)
!7003 = !DILocation(line: 661, column: 9, scope: !6997)
!7004 = distinct !{!7004, !7003, !7005}
!7005 = !DILocation(line: 661, column: 18, scope: !6997)
!7006 = !DILocation(line: 662, column: 1, scope: !6979)
!7007 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !901, file: !901, line: 668, type: !208, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !210)
!7008 = !DILocation(line: 671, column: 9, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !7007, file: !901, line: 671, column: 9)
!7010 = !DILocation(line: 671, column: 40, scope: !7009)
!7011 = !DILocation(line: 671, column: 9, scope: !7007)
!7012 = !DILocation(line: 672, column: 47, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7009, file: !901, line: 671, column: 46)
!7014 = !DILocation(line: 672, column: 40, scope: !7013)
!7015 = !DILocation(line: 673, column: 5, scope: !7013)
!7016 = !DILocation(line: 674, column: 9, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7007, file: !901, line: 674, column: 9)
!7018 = !DILocation(line: 674, column: 41, scope: !7017)
!7019 = !DILocation(line: 674, column: 9, scope: !7007)
!7020 = !DILocation(line: 675, column: 48, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7017, file: !901, line: 674, column: 47)
!7022 = !DILocation(line: 675, column: 41, scope: !7021)
!7023 = !DILocation(line: 676, column: 5, scope: !7021)
!7024 = !DILocation(line: 679, column: 33, scope: !7007)
!7025 = !DILocation(line: 679, column: 48, scope: !7007)
!7026 = !DILocation(line: 679, column: 25, scope: !7007)
!7027 = !DILocation(line: 680, column: 25, scope: !7007)
!7028 = !DILocation(line: 686, column: 5, scope: !7007)
!7029 = !DILocation(line: 688, column: 1, scope: !7007)
!7030 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !901, file: !901, line: 689, type: !208, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !900, retainedNodes: !210)
!7031 = !DILocation(line: 692, column: 9, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7030, file: !901, line: 692, column: 9)
!7033 = !DILocation(line: 692, column: 40, scope: !7032)
!7034 = !DILocation(line: 692, column: 9, scope: !7030)
!7035 = !DILocation(line: 693, column: 29, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7032, file: !901, line: 692, column: 46)
!7037 = !DILocation(line: 694, column: 5, scope: !7036)
!7038 = !DILocation(line: 695, column: 9, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7030, file: !901, line: 695, column: 9)
!7040 = !DILocation(line: 695, column: 41, scope: !7039)
!7041 = !DILocation(line: 695, column: 9, scope: !7030)
!7042 = !DILocation(line: 696, column: 29, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7039, file: !901, line: 695, column: 47)
!7044 = !DILocation(line: 697, column: 5, scope: !7043)
!7045 = !DILocation(line: 698, column: 5, scope: !7030)
!7046 = !DILocation(line: 699, column: 1, scope: !7030)
!7047 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1000, file: !1000, line: 91, type: !3365, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7048)
!7048 = !{!7049}
!7049 = !DILocalVariable(name: "counter", scope: !7047, file: !1000, line: 102, type: !175)
!7050 = !DILocation(line: 0, scope: !7047)
!7051 = !DILocation(line: 110, column: 5, scope: !7047)
!7052 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1000, file: !1000, line: 114, type: !3365, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7053)
!7053 = !{!7054}
!7054 = !DILocalVariable(name: "counter", scope: !7052, file: !1000, line: 125, type: !175)
!7055 = !DILocation(line: 0, scope: !7052)
!7056 = !DILocation(line: 133, column: 5, scope: !7052)
!7057 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1000, file: !1000, line: 137, type: !5830, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7058)
!7058 = !{!7059}
!7059 = !DILocalVariable(name: "delay_us", arg: 1, scope: !7057, file: !1000, line: 137, type: !175)
!7060 = !DILocation(line: 0, scope: !7057)
!7061 = !DILocation(line: 142, column: 5, scope: !7057)
!7062 = !DILocation(line: 144, column: 1, scope: !7057)
!7063 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1000, file: !1000, line: 163, type: !3365, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7064)
!7064 = !{!7065}
!7065 = !DILocalVariable(name: "mask", scope: !7063, file: !1000, line: 165, type: !175)
!7066 = !DILocation(line: 166, column: 12, scope: !7063)
!7067 = !DILocation(line: 0, scope: !7063)
!7068 = !DILocation(line: 167, column: 5, scope: !7063)
!7069 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1000, file: !1000, line: 171, type: !5830, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7070)
!7070 = !{!7071}
!7071 = !DILocalVariable(name: "mask", arg: 1, scope: !7069, file: !1000, line: 171, type: !175)
!7072 = !DILocation(line: 0, scope: !7069)
!7073 = !DILocation(line: 173, column: 5, scope: !7069)
!7074 = !DILocation(line: 174, column: 1, scope: !7069)
!7075 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1000, file: !1000, line: 199, type: !1272, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7076)
!7076 = !{!7077}
!7077 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7075, file: !1000, line: 199, type: !194)
!7078 = !DILocation(line: 0, scope: !7075)
!7079 = !DILocation(line: 201, column: 5, scope: !7075)
!7080 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1000, file: !1000, line: 388, type: !5962, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !210)
!7081 = !DILocation(line: 390, column: 5, scope: !7080)
!7082 = distinct !DISubprogram(name: "CompareData", scope: !1000, file: !1000, line: 872, type: !7083, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7085)
!7083 = !DISubroutineType(types: !7084)
!7084 = !{!211, !194, !194, !175}
!7085 = !{!7086, !7087, !7088, !7089, !7090, !7093, !7094, !7097, !7098, !7100}
!7086 = !DILocalVariable(name: "Address", arg: 1, scope: !7082, file: !1000, line: 872, type: !194)
!7087 = !DILocalVariable(name: "Data", arg: 2, scope: !7082, file: !1000, line: 872, type: !194)
!7088 = !DILocalVariable(name: "Length", arg: 3, scope: !7082, file: !1000, line: 872, type: !175)
!7089 = !DILocalVariable(name: "i", scope: !7082, file: !1000, line: 874, type: !175)
!7090 = !DILocalVariable(name: "Source", scope: !7091, file: !1000, line: 877, type: !938)
!7091 = distinct !DILexicalBlock(scope: !7092, file: !1000, line: 876, column: 74)
!7092 = distinct !DILexicalBlock(scope: !7082, file: !1000, line: 876, column: 9)
!7093 = !DILocalVariable(name: "Dest", scope: !7091, file: !1000, line: 878, type: !938)
!7094 = !DILocalVariable(name: "Source", scope: !7095, file: !1000, line: 885, type: !969)
!7095 = distinct !DILexicalBlock(scope: !7096, file: !1000, line: 884, column: 79)
!7096 = distinct !DILexicalBlock(scope: !7092, file: !1000, line: 884, column: 16)
!7097 = !DILocalVariable(name: "Dest", scope: !7095, file: !1000, line: 886, type: !969)
!7098 = !DILocalVariable(name: "Source", scope: !7099, file: !1000, line: 893, type: !680)
!7099 = distinct !DILexicalBlock(scope: !7096, file: !1000, line: 892, column: 12)
!7100 = !DILocalVariable(name: "Dest", scope: !7099, file: !1000, line: 894, type: !680)
!7101 = !DILocation(line: 0, scope: !7082)
!7102 = !DILocation(line: 876, column: 11, scope: !7092)
!7103 = !DILocation(line: 876, column: 42, scope: !7092)
!7104 = !DILocation(line: 877, column: 28, scope: !7091)
!7105 = !DILocation(line: 0, scope: !7091)
!7106 = !DILocation(line: 878, column: 26, scope: !7091)
!7107 = !DILocation(line: 879, column: 23, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7109, file: !1000, line: 879, column: 9)
!7109 = distinct !DILexicalBlock(scope: !7091, file: !1000, line: 879, column: 9)
!7110 = !DILocation(line: 879, column: 9, scope: !7109)
!7111 = !DILocation(line: 880, column: 17, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !1000, line: 880, column: 17)
!7113 = distinct !DILexicalBlock(scope: !7108, file: !1000, line: 879, column: 68)
!7114 = !DILocation(line: 880, column: 30, scope: !7112)
!7115 = !DILocation(line: 880, column: 27, scope: !7112)
!7116 = !DILocation(line: 879, column: 64, scope: !7108)
!7117 = !DILocation(line: 880, column: 17, scope: !7113)
!7118 = distinct !{!7118, !7110, !7119}
!7119 = !DILocation(line: 883, column: 9, scope: !7109)
!7120 = !DILocation(line: 884, column: 47, scope: !7096)
!7121 = !DILocation(line: 895, column: 23, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7123, file: !1000, line: 895, column: 9)
!7123 = distinct !DILexicalBlock(scope: !7099, file: !1000, line: 895, column: 9)
!7124 = !DILocation(line: 895, column: 9, scope: !7123)
!7125 = !DILocation(line: 885, column: 28, scope: !7095)
!7126 = !DILocation(line: 0, scope: !7095)
!7127 = !DILocation(line: 886, column: 26, scope: !7095)
!7128 = !DILocation(line: 887, column: 23, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !1000, line: 887, column: 9)
!7130 = distinct !DILexicalBlock(scope: !7095, file: !1000, line: 887, column: 9)
!7131 = !DILocation(line: 887, column: 9, scope: !7130)
!7132 = !DILocation(line: 888, column: 17, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !7134, file: !1000, line: 888, column: 17)
!7134 = distinct !DILexicalBlock(scope: !7129, file: !1000, line: 887, column: 68)
!7135 = !DILocation(line: 888, column: 30, scope: !7133)
!7136 = !DILocation(line: 888, column: 27, scope: !7133)
!7137 = !DILocation(line: 887, column: 64, scope: !7129)
!7138 = !DILocation(line: 888, column: 17, scope: !7134)
!7139 = distinct !{!7139, !7131, !7140}
!7140 = !DILocation(line: 891, column: 9, scope: !7130)
!7141 = !DILocation(line: 896, column: 17, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7143, file: !1000, line: 896, column: 17)
!7143 = distinct !DILexicalBlock(scope: !7122, file: !1000, line: 895, column: 38)
!7144 = !DILocation(line: 896, column: 30, scope: !7142)
!7145 = !DILocation(line: 896, column: 27, scope: !7142)
!7146 = !DILocation(line: 895, column: 34, scope: !7122)
!7147 = !DILocation(line: 896, column: 17, scope: !7143)
!7148 = distinct !{!7148, !7124, !7149}
!7149 = !DILocation(line: 899, column: 9, scope: !7123)
!7150 = !DILocation(line: 902, column: 1, scope: !7082)
!7151 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1000, file: !1000, line: 919, type: !7152, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7154)
!7152 = !DISubroutineType(types: !7153)
!7153 = !{null, !194, !194, !175}
!7154 = !{!7155, !7156, !7157, !7158, !7159, !7160, !7161, !7162, !7163, !7164, !7165}
!7155 = !DILocalVariable(name: "Target", arg: 1, scope: !7151, file: !1000, line: 919, type: !194)
!7156 = !DILocalVariable(name: "Data", arg: 2, scope: !7151, file: !1000, line: 919, type: !194)
!7157 = !DILocalVariable(name: "Size", arg: 3, scope: !7151, file: !1000, line: 919, type: !175)
!7158 = !DILocalVariable(name: "D", scope: !7151, file: !1000, line: 921, type: !1170)
!7159 = !DILocalVariable(name: "address", scope: !7151, file: !1000, line: 922, type: !175)
!7160 = !DILocalVariable(name: "p_data", scope: !7151, file: !1000, line: 923, type: !680)
!7161 = !DILocalVariable(name: "cmd1", scope: !7151, file: !1000, line: 924, type: !175)
!7162 = !DILocalVariable(name: "length", scope: !7151, file: !1000, line: 924, type: !175)
!7163 = !DILocalVariable(name: "written", scope: !7151, file: !1000, line: 924, type: !175)
!7164 = !DILocalVariable(name: "status", scope: !7151, file: !1000, line: 925, type: !1222)
!7165 = !DILocalVariable(name: "savedMask", scope: !7151, file: !1000, line: 926, type: !175)
!7166 = !DILocation(line: 0, scope: !7151)
!7167 = !DILocation(line: 921, column: 60, scope: !7151)
!7168 = !DILocation(line: 923, column: 5, scope: !7151)
!7169 = !DILocation(line: 923, column: 19, scope: !7151)
!7170 = !DILocation(line: 924, column: 5, scope: !7151)
!7171 = !DILocation(line: 932, column: 9, scope: !7151)
!7172 = !DILocation(line: 933, column: 8, scope: !7151)
!7173 = !DILocation(line: 933, column: 21, scope: !7151)
!7174 = !DILocation(line: 935, column: 14, scope: !7151)
!7175 = !DILocation(line: 935, column: 5, scope: !7151)
!7176 = !DILocation(line: 922, column: 29, scope: !7151)
!7177 = !DILocation(line: 937, column: 18, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7151, file: !1000, line: 935, column: 23)
!7179 = !DILocation(line: 937, column: 35, scope: !7178)
!7180 = !DILocation(line: 937, column: 74, scope: !7178)
!7181 = !DILocation(line: 937, column: 50, scope: !7178)
!7182 = !DILocation(line: 937, column: 39, scope: !7178)
!7183 = !DILocation(line: 940, column: 35, scope: !7178)
!7184 = !DILocation(line: 940, column: 29, scope: !7178)
!7185 = !DILocation(line: 940, column: 16, scope: !7178)
!7186 = !DILocation(line: 942, column: 18, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7178, file: !1000, line: 942, column: 13)
!7188 = !DILocation(line: 942, column: 29, scope: !7187)
!7189 = !DILocation(line: 942, column: 13, scope: !7178)
!7190 = !DILocation(line: 943, column: 13, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7187, file: !1000, line: 942, column: 55)
!7192 = !DILocation(line: 944, column: 9, scope: !7191)
!7193 = !DILocation(line: 947, column: 16, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7178, file: !1000, line: 947, column: 13)
!7195 = !DILocation(line: 947, column: 29, scope: !7194)
!7196 = !DILocation(line: 0, scope: !7194)
!7197 = !DILocation(line: 947, column: 13, scope: !7178)
!7198 = !DILocation(line: 948, column: 20, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7194, file: !1000, line: 947, column: 35)
!7200 = !DILocation(line: 949, column: 32, scope: !7199)
!7201 = !DILocation(line: 949, column: 40, scope: !7199)
!7202 = !DILocation(line: 949, column: 13, scope: !7199)
!7203 = !DILocation(line: 950, column: 9, scope: !7199)
!7204 = !DILocation(line: 953, column: 20, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7194, file: !1000, line: 952, column: 9)
!7206 = !DILocation(line: 954, column: 32, scope: !7205)
!7207 = !DILocation(line: 954, column: 40, scope: !7205)
!7208 = !DILocation(line: 954, column: 13, scope: !7205)
!7209 = !DILocation(line: 957, column: 21, scope: !7178)
!7210 = !DILocation(line: 963, column: 45, scope: !7178)
!7211 = !DILocation(line: 963, column: 42, scope: !7178)
!7212 = !DILocation(line: 963, column: 40, scope: !7178)
!7213 = !DILocation(line: 963, column: 58, scope: !7178)
!7214 = !DILocation(line: 963, column: 29, scope: !7178)
!7215 = !DILocation(line: 964, column: 28, scope: !7178)
!7216 = !DILocation(line: 965, column: 37, scope: !7178)
!7217 = !DILocation(line: 966, column: 9, scope: !7178)
!7218 = !DILocation(line: 967, column: 26, scope: !7178)
!7219 = !DILocation(line: 967, column: 9, scope: !7178)
!7220 = !DILocation(line: 968, column: 29, scope: !7178)
!7221 = !DILocation(line: 968, column: 9, scope: !7178)
!7222 = !DILocation(line: 972, column: 9, scope: !7178)
!7223 = !DILocation(line: 978, column: 9, scope: !7178)
!7224 = !DILocation(line: 979, column: 50, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7178, file: !1000, line: 978, column: 22)
!7226 = !DILocation(line: 979, column: 55, scope: !7225)
!7227 = !DILocation(line: 979, column: 22, scope: !7225)
!7228 = !DILocation(line: 980, column: 35, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7225, file: !1000, line: 980, column: 17)
!7230 = !DILocation(line: 980, column: 32, scope: !7229)
!7231 = !DILocation(line: 980, column: 30, scope: !7229)
!7232 = !DILocation(line: 980, column: 19, scope: !7229)
!7233 = !DILocation(line: 980, column: 17, scope: !7225)
!7234 = distinct !{!7234, !7223, !7235}
!7235 = !DILocation(line: 983, column: 9, scope: !7178)
!7236 = !DILocation(line: 991, column: 9, scope: !7178)
!7237 = !DILocation(line: 993, column: 19, scope: !7178)
!7238 = !DILocation(line: 993, column: 16, scope: !7178)
!7239 = !DILocation(line: 994, column: 14, scope: !7178)
!7240 = !DILocation(line: 995, column: 17, scope: !7178)
!7241 = distinct !{!7241, !7175, !7242}
!7242 = !DILocation(line: 996, column: 5, scope: !7151)
!7243 = !DILocation(line: 998, column: 21, scope: !7151)
!7244 = !DILocation(line: 1005, column: 9, scope: !7151)
!7245 = !DILocation(line: 1008, column: 1, scope: !7151)
!7246 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1000, file: !1000, line: 1427, type: !7247, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7249)
!7247 = !DISubroutineType(types: !7248)
!7248 = !{null, !1170}
!7249 = !{!7250, !7251}
!7250 = !DILocalVariable(name: "D", arg: 1, scope: !7246, file: !1000, line: 1427, type: !1170)
!7251 = !DILocalVariable(name: "Result", scope: !7246, file: !1000, line: 1429, type: !1838)
!7252 = !DILocation(line: 0, scope: !7246)
!7253 = !DILocation(line: 1430, column: 5, scope: !7246)
!7254 = !DILocation(line: 1431, column: 18, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7246, file: !1000, line: 1430, column: 8)
!7256 = !DILocation(line: 1432, column: 21, scope: !7246)
!7257 = !DILocation(line: 1432, column: 5, scope: !7255)
!7258 = distinct !{!7258, !7253, !7259}
!7259 = !DILocation(line: 1432, column: 43, scope: !7246)
!7260 = !DILocation(line: 1433, column: 1, scope: !7246)
!7261 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1000, file: !1000, line: 3478, type: !7247, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7262)
!7262 = !{!7263}
!7263 = !DILocalVariable(name: "D", arg: 1, scope: !7261, file: !1000, line: 3478, type: !1170)
!7264 = !DILocation(line: 0, scope: !7261)
!7265 = !DILocation(line: 3480, column: 30, scope: !7261)
!7266 = !DILocation(line: 3480, column: 35, scope: !7261)
!7267 = !DILocation(line: 3480, column: 27, scope: !7261)
!7268 = !DILocation(line: 3480, column: 5, scope: !7261)
!7269 = !DILocation(line: 3481, column: 1, scope: !7261)
!7270 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1000, file: !1000, line: 2382, type: !208, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7271)
!7271 = !{!7272}
!7272 = !DILocalVariable(name: "savedMask", scope: !7270, file: !1000, line: 2384, type: !175)
!7273 = !DILocation(line: 2385, column: 17, scope: !7270)
!7274 = !DILocation(line: 0, scope: !7270)
!7275 = !DILocation(line: 2390, column: 20, scope: !7270)
!7276 = !DILocation(line: 2391, column: 5, scope: !7270)
!7277 = !DILocation(line: 2392, column: 1, scope: !7270)
!7278 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1000, file: !1000, line: 3536, type: !7279, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7281)
!7279 = !DISubroutineType(types: !7280)
!7280 = !{!175, !1170, !378}
!7281 = !{!7282, !7283, !7284, !7285}
!7282 = !DILocalVariable(name: "D", arg: 1, scope: !7278, file: !1000, line: 3536, type: !1170)
!7283 = !DILocalVariable(name: "cmd", arg: 2, scope: !7278, file: !1000, line: 3536, type: !378)
!7284 = !DILocalVariable(name: "savedMask", scope: !7278, file: !1000, line: 3538, type: !175)
!7285 = !DILocalVariable(name: "result", scope: !7278, file: !1000, line: 3539, type: !175)
!7286 = !DILocation(line: 0, scope: !7278)
!7287 = !DILocation(line: 3541, column: 17, scope: !7278)
!7288 = !DILocation(line: 3542, column: 22, scope: !7278)
!7289 = !DILocation(line: 3542, column: 5, scope: !7278)
!7290 = !DILocation(line: 3543, column: 35, scope: !7278)
!7291 = !DILocation(line: 3543, column: 33, scope: !7278)
!7292 = !DILocation(line: 3544, column: 25, scope: !7278)
!7293 = !DILocation(line: 3545, column: 24, scope: !7278)
!7294 = !DILocation(line: 3546, column: 25, scope: !7278)
!7295 = !DILocation(line: 3546, column: 5, scope: !7278)
!7296 = !DILocation(line: 3547, column: 42, scope: !7278)
!7297 = !DILocation(line: 3547, column: 60, scope: !7278)
!7298 = !DILocation(line: 3547, column: 14, scope: !7278)
!7299 = !DILocation(line: 3548, column: 5, scope: !7278)
!7300 = !DILocation(line: 3550, column: 5, scope: !7278)
!7301 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1000, file: !1000, line: 2393, type: !208, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7302)
!7302 = !{!7303}
!7303 = !DILocalVariable(name: "savedMask", scope: !7301, file: !1000, line: 2395, type: !175)
!7304 = !DILocation(line: 2396, column: 17, scope: !7301)
!7305 = !DILocation(line: 0, scope: !7301)
!7306 = !DILocation(line: 2401, column: 20, scope: !7301)
!7307 = !DILocation(line: 2402, column: 5, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7309, file: !1000, line: 2402, column: 5)
!7309 = distinct !DILexicalBlock(scope: !7301, file: !1000, line: 2402, column: 5)
!7310 = !DILocation(line: 2403, column: 5, scope: !7301)
!7311 = !DILocation(line: 2404, column: 1, scope: !7301)
!7312 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1000, file: !1000, line: 1440, type: !7247, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7313)
!7313 = !{!7314, !7315}
!7314 = !DILocalVariable(name: "D", arg: 1, scope: !7312, file: !1000, line: 1440, type: !1170)
!7315 = !DILocalVariable(name: "savedMask", scope: !7312, file: !1000, line: 1442, type: !858)
!7316 = !DILocation(line: 0, scope: !7312)
!7317 = !DILocation(line: 1443, column: 17, scope: !7312)
!7318 = !DILocation(line: 1444, column: 9, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7312, file: !1000, line: 1444, column: 9)
!7320 = !DILocation(line: 1444, column: 9, scope: !7312)
!7321 = !DILocation(line: 1445, column: 17, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7319, file: !1000, line: 1444, column: 24)
!7323 = !DILocation(line: 1446, column: 9, scope: !7322)
!7324 = !DILocation(line: 1451, column: 1, scope: !7312)
!7325 = !DILocation(line: 1448, column: 9, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7319, file: !1000, line: 1447, column: 12)
!7327 = !DILocation(line: 1449, column: 9, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7329, file: !1000, line: 1449, column: 9)
!7329 = distinct !DILexicalBlock(scope: !7330, file: !1000, line: 1449, column: 9)
!7330 = distinct !DILexicalBlock(scope: !7326, file: !1000, line: 1449, column: 9)
!7331 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1000, file: !1000, line: 1027, type: !208, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7332)
!7332 = !{!7333, !7334, !7335, !7336}
!7333 = !DILocalVariable(name: "D", scope: !7331, file: !1000, line: 1029, type: !1170)
!7334 = !DILocalVariable(name: "status", scope: !7331, file: !1000, line: 1030, type: !1222)
!7335 = !DILocalVariable(name: "savedMask", scope: !7331, file: !1000, line: 1031, type: !175)
!7336 = !DILocalVariable(name: "duration", scope: !7337, file: !1000, line: 1231, type: !175)
!7337 = distinct !DILexicalBlock(scope: !7331, file: !1000, line: 1230, column: 5)
!7338 = !DILocation(line: 0, scope: !7331)
!7339 = !DILocation(line: 1033, column: 17, scope: !7331)
!7340 = !DILocation(line: 1034, column: 8, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7331, file: !1000, line: 1034, column: 8)
!7342 = !DILocation(line: 1034, column: 30, scope: !7341)
!7343 = !DILocation(line: 1034, column: 8, scope: !7331)
!7344 = !DILocation(line: 1039, column: 27, scope: !7331)
!7345 = !DILocation(line: 1058, column: 48, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7331, file: !1000, line: 1055, column: 5)
!7347 = !DILocation(line: 1069, column: 5, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !1000, line: 1069, column: 5)
!7349 = distinct !DILexicalBlock(scope: !7331, file: !1000, line: 1069, column: 5)
!7350 = !DILocation(line: 1069, column: 5, scope: !7349)
!7351 = !DILocation(line: 1069, column: 5, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7348, file: !1000, line: 1069, column: 5)
!7353 = !DILocation(line: 1075, column: 10, scope: !7354)
!7354 = distinct !DILexicalBlock(scope: !7331, file: !1000, line: 1075, column: 9)
!7355 = !DILocation(line: 1075, column: 27, scope: !7354)
!7356 = !DILocation(line: 1075, column: 33, scope: !7354)
!7357 = !DILocation(line: 1075, column: 40, scope: !7354)
!7358 = !DILocation(line: 1075, column: 53, scope: !7354)
!7359 = !DILocation(line: 1075, column: 9, scope: !7331)
!7360 = !DILocation(line: 1084, column: 9, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7354, file: !1000, line: 1083, column: 11)
!7362 = !DILocation(line: 1085, column: 50, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7361, file: !1000, line: 1084, column: 21)
!7364 = !DILocation(line: 1085, column: 55, scope: !7363)
!7365 = !DILocation(line: 1085, column: 22, scope: !7363)
!7366 = !DILocation(line: 1086, column: 35, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7363, file: !1000, line: 1086, column: 17)
!7368 = !DILocation(line: 1086, column: 32, scope: !7367)
!7369 = !DILocation(line: 1086, column: 30, scope: !7367)
!7370 = !DILocation(line: 1086, column: 19, scope: !7367)
!7371 = !DILocation(line: 1086, column: 17, scope: !7363)
!7372 = distinct !{!7372, !7360, !7373}
!7373 = !DILocation(line: 1089, column: 9, scope: !7361)
!7374 = !DILocation(line: 1107, column: 11, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7331, file: !1000, line: 1107, column: 9)
!7376 = !DILocation(line: 1107, column: 30, scope: !7375)
!7377 = !DILocation(line: 1117, column: 46, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7375, file: !1000, line: 1107, column: 53)
!7379 = !DILocation(line: 1117, column: 51, scope: !7378)
!7380 = !DILocation(line: 1117, column: 18, scope: !7378)
!7381 = !DILocation(line: 1120, column: 31, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !7378, file: !1000, line: 1120, column: 13)
!7383 = !DILocation(line: 1120, column: 28, scope: !7382)
!7384 = !DILocation(line: 1120, column: 26, scope: !7382)
!7385 = !DILocation(line: 1120, column: 15, scope: !7382)
!7386 = !DILocation(line: 1120, column: 13, scope: !7378)
!7387 = !DILocation(line: 1128, column: 13, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7382, file: !1000, line: 1120, column: 55)
!7389 = !DILocation(line: 1131, column: 13, scope: !7388)
!7390 = !DILocation(line: 1132, column: 54, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7388, file: !1000, line: 1131, column: 23)
!7392 = !DILocation(line: 1132, column: 59, scope: !7391)
!7393 = !DILocation(line: 1132, column: 26, scope: !7391)
!7394 = !DILocation(line: 1133, column: 39, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !1000, line: 1133, column: 21)
!7396 = !DILocation(line: 1133, column: 36, scope: !7395)
!7397 = !DILocation(line: 1133, column: 34, scope: !7395)
!7398 = !DILocation(line: 1133, column: 23, scope: !7395)
!7399 = !DILocation(line: 1133, column: 21, scope: !7391)
!7400 = distinct !{!7400, !7389, !7401}
!7401 = !DILocation(line: 1158, column: 13, scope: !7388)
!7402 = !DILocation(line: 1162, column: 21, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7388, file: !1000, line: 1162, column: 17)
!7404 = !DILocation(line: 1162, column: 32, scope: !7403)
!7405 = !DILocation(line: 1162, column: 51, scope: !7403)
!7406 = !DILocation(line: 1162, column: 58, scope: !7403)
!7407 = !DILocation(line: 1162, column: 71, scope: !7403)
!7408 = !DILocation(line: 1162, column: 17, scope: !7388)
!7409 = !DILocation(line: 1164, column: 45, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7403, file: !1000, line: 1162, column: 91)
!7411 = !DILocation(line: 1165, column: 36, scope: !7410)
!7412 = !DILocation(line: 1166, column: 37, scope: !7410)
!7413 = !DILocation(line: 1167, column: 34, scope: !7410)
!7414 = !DILocation(line: 1167, column: 17, scope: !7410)
!7415 = !DILocation(line: 1168, column: 37, scope: !7410)
!7416 = !DILocation(line: 1168, column: 17, scope: !7410)
!7417 = !DILocation(line: 1171, column: 50, scope: !7410)
!7418 = !DILocation(line: 1172, column: 37, scope: !7410)
!7419 = !DILocation(line: 1173, column: 45, scope: !7410)
!7420 = !DILocation(line: 1174, column: 34, scope: !7410)
!7421 = !DILocation(line: 1174, column: 17, scope: !7410)
!7422 = !DILocation(line: 1175, column: 37, scope: !7410)
!7423 = !DILocation(line: 1175, column: 17, scope: !7410)
!7424 = !DILocation(line: 1178, column: 17, scope: !7410)
!7425 = !DILocation(line: 1179, column: 49, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7410, file: !1000, line: 1178, column: 20)
!7427 = !DILocation(line: 1180, column: 40, scope: !7426)
!7428 = !DILocation(line: 1181, column: 41, scope: !7426)
!7429 = !DILocation(line: 1182, column: 38, scope: !7426)
!7430 = !DILocation(line: 1182, column: 21, scope: !7426)
!7431 = !DILocation(line: 1183, column: 41, scope: !7426)
!7432 = !DILocation(line: 1183, column: 21, scope: !7426)
!7433 = !DILocation(line: 1184, column: 43, scope: !7426)
!7434 = !DILocation(line: 1185, column: 17, scope: !7426)
!7435 = distinct !{!7435, !7424, !7436}
!7436 = !DILocation(line: 1185, column: 32, scope: !7410)
!7437 = !DILocation(line: 1194, column: 13, scope: !7388)
!7438 = !DILocation(line: 1195, column: 9, scope: !7388)
!7439 = !DILocation(line: 1197, column: 21, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7441, file: !1000, line: 1197, column: 17)
!7441 = distinct !DILexicalBlock(scope: !7382, file: !1000, line: 1195, column: 16)
!7442 = !DILocation(line: 1197, column: 32, scope: !7440)
!7443 = !DILocation(line: 1197, column: 53, scope: !7440)
!7444 = !DILocation(line: 1197, column: 60, scope: !7440)
!7445 = !DILocation(line: 1197, column: 76, scope: !7440)
!7446 = !DILocation(line: 1197, column: 17, scope: !7441)
!7447 = !DILocation(line: 1198, column: 54, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7440, file: !1000, line: 1197, column: 98)
!7449 = !DILocation(line: 1198, column: 59, scope: !7448)
!7450 = !DILocation(line: 1198, column: 26, scope: !7448)
!7451 = !DILocation(line: 1199, column: 40, scope: !7452)
!7452 = distinct !DILexicalBlock(scope: !7448, file: !1000, line: 1199, column: 21)
!7453 = !DILocation(line: 1199, column: 37, scope: !7452)
!7454 = !DILocation(line: 1199, column: 35, scope: !7452)
!7455 = !DILocation(line: 1199, column: 24, scope: !7452)
!7456 = !DILocation(line: 1199, column: 63, scope: !7452)
!7457 = !DILocation(line: 1200, column: 41, scope: !7452)
!7458 = !DILocation(line: 1200, column: 39, scope: !7452)
!7459 = !DILocation(line: 1200, column: 28, scope: !7452)
!7460 = !DILocation(line: 1199, column: 21, scope: !7448)
!7461 = !DILocation(line: 1201, column: 40, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7452, file: !1000, line: 1200, column: 68)
!7463 = !DILocation(line: 1201, column: 21, scope: !7462)
!7464 = !DILocation(line: 1202, column: 40, scope: !7462)
!7465 = !DILocation(line: 1202, column: 21, scope: !7462)
!7466 = !DILocation(line: 1203, column: 17, scope: !7462)
!7467 = !DILocation(line: 1206, column: 13, scope: !7441)
!7468 = !DILocation(line: 1228, column: 25, scope: !7331)
!7469 = !DILocation(line: 1231, column: 29, scope: !7337)
!7470 = !DILocation(line: 0, scope: !7337)
!7471 = !DILocation(line: 1232, column: 13, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7337, file: !1000, line: 1232, column: 13)
!7473 = !DILocation(line: 1232, column: 43, scope: !7472)
!7474 = !DILocation(line: 1232, column: 13, scope: !7337)
!7475 = !DILocation(line: 1233, column: 43, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7472, file: !1000, line: 1232, column: 55)
!7477 = !DILocation(line: 1234, column: 9, scope: !7476)
!7478 = !DILocation(line: 1237, column: 5, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7480, file: !1000, line: 1237, column: 5)
!7480 = distinct !DILexicalBlock(scope: !7331, file: !1000, line: 1237, column: 5)
!7481 = !DILocation(line: 1240, column: 5, scope: !7331)
!7482 = !DILocation(line: 1241, column: 1, scope: !7331)
!7483 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1000, file: !1000, line: 3421, type: !7247, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7484)
!7484 = !{!7485, !7486, !7487, !7488}
!7485 = !DILocalVariable(name: "D", arg: 1, scope: !7483, file: !1000, line: 3421, type: !1170)
!7486 = !DILocalVariable(name: "savedMask", scope: !7483, file: !1000, line: 3423, type: !175)
!7487 = !DILocalVariable(name: "currtime", scope: !7483, file: !1000, line: 3424, type: !175)
!7488 = !DILocalVariable(name: "difftime", scope: !7483, file: !1000, line: 3424, type: !175)
!7489 = !DILocation(line: 0, scope: !7483)
!7490 = !DILocation(line: 3427, column: 9, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7483, file: !1000, line: 3427, column: 9)
!7492 = !DILocation(line: 3427, column: 28, scope: !7491)
!7493 = !DILocation(line: 3427, column: 9, scope: !7483)
!7494 = !DILocation(line: 3429, column: 20, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7491, file: !1000, line: 3427, column: 59)
!7496 = !DILocation(line: 3430, column: 27, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7495, file: !1000, line: 3430, column: 13)
!7498 = !DILocation(line: 3430, column: 24, scope: !7497)
!7499 = !DILocation(line: 3430, column: 22, scope: !7497)
!7500 = !DILocation(line: 3430, column: 13, scope: !7495)
!7501 = !DILocation(line: 3431, column: 47, scope: !7502)
!7502 = distinct !DILexicalBlock(scope: !7497, file: !1000, line: 3430, column: 46)
!7503 = !DILocation(line: 3431, column: 13, scope: !7502)
!7504 = !DILocation(line: 3432, column: 9, scope: !7502)
!7505 = !DILocation(line: 3435, column: 17, scope: !7483)
!7506 = !DILocation(line: 3436, column: 24, scope: !7483)
!7507 = !DILocation(line: 3436, column: 31, scope: !7483)
!7508 = !DILocation(line: 3436, column: 36, scope: !7483)
!7509 = !DILocation(line: 3436, column: 28, scope: !7483)
!7510 = !DILocation(line: 3436, column: 5, scope: !7483)
!7511 = !DILocation(line: 3442, column: 5, scope: !7483)
!7512 = !DILocation(line: 3443, column: 1, scope: !7483)
!7513 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1000, file: !1000, line: 2405, type: !208, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7514)
!7514 = !{!7515}
!7515 = !DILocalVariable(name: "savedMask", scope: !7513, file: !1000, line: 2407, type: !175)
!7516 = !DILocation(line: 2408, column: 17, scope: !7513)
!7517 = !DILocation(line: 0, scope: !7513)
!7518 = !DILocation(line: 2413, column: 25, scope: !7513)
!7519 = !DILocation(line: 2414, column: 5, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7521, file: !1000, line: 2414, column: 5)
!7521 = distinct !DILexicalBlock(scope: !7513, file: !1000, line: 2414, column: 5)
!7522 = !DILocation(line: 2415, column: 5, scope: !7513)
!7523 = !DILocation(line: 2416, column: 1, scope: !7513)
!7524 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1000, file: !1000, line: 3561, type: !7525, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7527)
!7525 = !DISubroutineType(types: !7526)
!7526 = !{null, !1170, !690, !378}
!7527 = !{!7528, !7529, !7530, !7531}
!7528 = !DILocalVariable(name: "D", arg: 1, scope: !7524, file: !1000, line: 3561, type: !1170)
!7529 = !DILocalVariable(name: "cmd", arg: 2, scope: !7524, file: !1000, line: 3561, type: !690)
!7530 = !DILocalVariable(name: "outlen", arg: 3, scope: !7524, file: !1000, line: 3561, type: !378)
!7531 = !DILocalVariable(name: "savedMask", scope: !7524, file: !1000, line: 3563, type: !175)
!7532 = !DILocation(line: 0, scope: !7524)
!7533 = !DILocation(line: 3565, column: 17, scope: !7524)
!7534 = !DILocation(line: 3566, column: 22, scope: !7524)
!7535 = !DILocation(line: 3566, column: 5, scope: !7524)
!7536 = !DILocation(line: 3567, column: 33, scope: !7524)
!7537 = !DILocation(line: 3568, column: 27, scope: !7524)
!7538 = !DILocation(line: 3568, column: 25, scope: !7524)
!7539 = !DILocation(line: 3569, column: 24, scope: !7524)
!7540 = !DILocation(line: 3570, column: 25, scope: !7524)
!7541 = !DILocation(line: 3570, column: 5, scope: !7524)
!7542 = !DILocation(line: 3571, column: 5, scope: !7524)
!7543 = !DILocation(line: 3573, column: 1, scope: !7524)
!7544 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1000, file: !1000, line: 1410, type: !7545, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7547)
!7545 = !DISubroutineType(types: !7546)
!7546 = !{!1838}
!7547 = !{!7548}
!7548 = !DILocalVariable(name: "savedMask", scope: !7544, file: !1000, line: 1412, type: !858)
!7549 = !DILocation(line: 1413, column: 17, scope: !7544)
!7550 = !DILocation(line: 0, scope: !7544)
!7551 = !DILocation(line: 1414, column: 9, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7544, file: !1000, line: 1414, column: 9)
!7553 = !DILocation(line: 1414, column: 9, scope: !7544)
!7554 = !DILocation(line: 1415, column: 17, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7552, file: !1000, line: 1414, column: 24)
!7556 = !DILocation(line: 1417, column: 9, scope: !7555)
!7557 = !DILocation(line: 0, scope: !7552)
!7558 = !DILocation(line: 1425, column: 1, scope: !7544)
!7559 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1000, file: !1000, line: 1257, type: !7560, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7562)
!7560 = !DISubroutineType(types: !7561)
!7561 = !{!211}
!7562 = !{!7563, !7564, !7565}
!7563 = !DILocalVariable(name: "D", scope: !7559, file: !1000, line: 1259, type: !1170)
!7564 = !DILocalVariable(name: "status", scope: !7559, file: !1000, line: 1260, type: !1222)
!7565 = !DILocalVariable(name: "result", scope: !7559, file: !1000, line: 1261, type: !211)
!7566 = !DILocation(line: 1259, column: 57, scope: !7559)
!7567 = !DILocation(line: 0, scope: !7559)
!7568 = !DILocation(line: 1263, column: 5, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7570, file: !1000, line: 1263, column: 5)
!7570 = distinct !DILexicalBlock(scope: !7559, file: !1000, line: 1263, column: 5)
!7571 = !DILocation(line: 1263, column: 5, scope: !7570)
!7572 = !DILocation(line: 1263, column: 5, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7569, file: !1000, line: 1263, column: 5)
!7574 = !DILocation(line: 1265, column: 5, scope: !7559)
!7575 = !DILocation(line: 1267, column: 42, scope: !7559)
!7576 = !DILocation(line: 1267, column: 47, scope: !7559)
!7577 = !DILocation(line: 1267, column: 14, scope: !7559)
!7578 = !DILocation(line: 1269, column: 27, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7559, file: !1000, line: 1269, column: 9)
!7580 = !DILocation(line: 1269, column: 24, scope: !7579)
!7581 = !DILocation(line: 1269, column: 22, scope: !7579)
!7582 = !DILocation(line: 1269, column: 11, scope: !7579)
!7583 = !DILocation(line: 1269, column: 9, scope: !7559)
!7584 = !DILocation(line: 1270, column: 9, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7579, file: !1000, line: 1269, column: 51)
!7586 = !DILocation(line: 1272, column: 5, scope: !7585)
!7587 = !DILocation(line: 1274, column: 5, scope: !7559)
!7588 = !DILocation(line: 1276, column: 5, scope: !7559)
!7589 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1000, file: !1000, line: 1289, type: !208, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7590)
!7590 = !{!7591}
!7591 = !DILocalVariable(name: "D", scope: !7589, file: !1000, line: 1291, type: !1170)
!7592 = !DILocation(line: 0, scope: !7589)
!7593 = !DILocation(line: 1293, column: 5, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7595, file: !1000, line: 1293, column: 5)
!7595 = distinct !DILexicalBlock(scope: !7589, file: !1000, line: 1293, column: 5)
!7596 = !DILocation(line: 1293, column: 5, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7594, file: !1000, line: 1293, column: 5)
!7598 = !DILocation(line: 1293, column: 5, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7600, file: !1000, line: 1293, column: 5)
!7600 = distinct !DILexicalBlock(scope: !7601, file: !1000, line: 1293, column: 5)
!7601 = distinct !DILexicalBlock(scope: !7597, file: !1000, line: 1293, column: 5)
!7602 = !DILocation(line: 1291, column: 60, scope: !7589)
!7603 = !DILocation(line: 1295, column: 5, scope: !7589)
!7604 = !DILocation(line: 1296, column: 1, scope: !7589)
!7605 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1000, file: !1000, line: 3452, type: !7247, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7606)
!7606 = !{!7607, !7608}
!7607 = !DILocalVariable(name: "D", arg: 1, scope: !7605, file: !1000, line: 3452, type: !1170)
!7608 = !DILocalVariable(name: "savedMask", scope: !7605, file: !1000, line: 3454, type: !175)
!7609 = !DILocation(line: 0, scope: !7605)
!7610 = !DILocation(line: 3456, column: 17, scope: !7605)
!7611 = !DILocation(line: 3462, column: 24, scope: !7605)
!7612 = !DILocation(line: 3462, column: 31, scope: !7605)
!7613 = !DILocation(line: 3462, column: 36, scope: !7605)
!7614 = !DILocation(line: 3462, column: 28, scope: !7605)
!7615 = !DILocation(line: 3462, column: 5, scope: !7605)
!7616 = !DILocation(line: 3463, column: 12, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7605, file: !1000, line: 3463, column: 9)
!7618 = !DILocation(line: 3463, column: 27, scope: !7617)
!7619 = !DILocation(line: 3463, column: 9, scope: !7605)
!7620 = !DILocation(line: 3464, column: 28, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7617, file: !1000, line: 3463, column: 33)
!7622 = !DILocation(line: 3465, column: 5, scope: !7621)
!7623 = !DILocation(line: 3467, column: 5, scope: !7605)
!7624 = !DILocation(line: 3468, column: 5, scope: !7605)
!7625 = !DILocation(line: 3469, column: 1, scope: !7605)
!7626 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1000, file: !1000, line: 2417, type: !208, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7627)
!7627 = !{!7628}
!7628 = !DILocalVariable(name: "savedMask", scope: !7626, file: !1000, line: 2419, type: !175)
!7629 = !DILocation(line: 2420, column: 17, scope: !7626)
!7630 = !DILocation(line: 0, scope: !7626)
!7631 = !DILocation(line: 2425, column: 25, scope: !7626)
!7632 = !DILocation(line: 2426, column: 5, scope: !7626)
!7633 = !DILocation(line: 2427, column: 1, scope: !7626)
!7634 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1000, file: !1000, line: 1308, type: !208, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7635)
!7635 = !{!7636, !7637}
!7636 = !DILocalVariable(name: "D", scope: !7634, file: !1000, line: 1310, type: !1170)
!7637 = !DILocalVariable(name: "status", scope: !7634, file: !1000, line: 1311, type: !1222)
!7638 = !DILocation(line: 1310, column: 60, scope: !7634)
!7639 = !DILocation(line: 0, scope: !7634)
!7640 = !DILocation(line: 1313, column: 5, scope: !7641)
!7641 = distinct !DILexicalBlock(scope: !7642, file: !1000, line: 1313, column: 5)
!7642 = distinct !DILexicalBlock(scope: !7634, file: !1000, line: 1313, column: 5)
!7643 = !DILocation(line: 1313, column: 5, scope: !7644)
!7644 = distinct !DILexicalBlock(scope: !7641, file: !1000, line: 1313, column: 5)
!7645 = !DILocation(line: 1313, column: 5, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !1000, line: 1313, column: 5)
!7647 = distinct !DILexicalBlock(scope: !7648, file: !1000, line: 1313, column: 5)
!7648 = distinct !DILexicalBlock(scope: !7644, file: !1000, line: 1313, column: 5)
!7649 = !DILocation(line: 1315, column: 5, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7651, file: !1000, line: 1315, column: 5)
!7651 = distinct !DILexicalBlock(scope: !7634, file: !1000, line: 1315, column: 5)
!7652 = !DILocation(line: 1315, column: 5, scope: !7651)
!7653 = !DILocation(line: 1315, column: 5, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7650, file: !1000, line: 1315, column: 5)
!7655 = !DILocation(line: 1317, column: 5, scope: !7634)
!7656 = !DILocation(line: 1319, column: 5, scope: !7634)
!7657 = !DILocation(line: 1320, column: 46, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7634, file: !1000, line: 1319, column: 15)
!7659 = !DILocation(line: 1320, column: 51, scope: !7658)
!7660 = !DILocation(line: 1320, column: 18, scope: !7658)
!7661 = !DILocation(line: 1322, column: 31, scope: !7662)
!7662 = distinct !DILexicalBlock(scope: !7658, file: !1000, line: 1322, column: 13)
!7663 = !DILocation(line: 1322, column: 28, scope: !7662)
!7664 = !DILocation(line: 1322, column: 26, scope: !7662)
!7665 = !DILocation(line: 1322, column: 15, scope: !7662)
!7666 = !DILocation(line: 1322, column: 13, scope: !7658)
!7667 = distinct !{!7667, !7656, !7668}
!7668 = !DILocation(line: 1325, column: 5, scope: !7634)
!7669 = !DILocation(line: 1327, column: 5, scope: !7634)
!7670 = !DILocation(line: 1328, column: 1, scope: !7634)
!7671 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1000, file: !1000, line: 1394, type: !7247, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7672)
!7672 = !{!7673}
!7673 = !DILocalVariable(name: "D", arg: 1, scope: !7671, file: !1000, line: 1394, type: !1170)
!7674 = !DILocation(line: 0, scope: !7671)
!7675 = !DILocation(line: 1401, column: 1, scope: !7671)
!7676 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1000, file: !1000, line: 1556, type: !7677, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7698)
!7677 = !DISubroutineType(types: !7678)
!7678 = !{!858, !7679, !1170}
!7679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7680, size: 32)
!7680 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1196, line: 121, baseType: !7681)
!7681 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 105, size: 480, elements: !7682)
!7682 = !{!7683, !7684, !7685, !7686, !7687, !7688, !7689, !7690, !7691, !7692, !7693, !7694, !7695, !7696, !7697}
!7683 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !7681, file: !1196, line: 106, baseType: !1470, size: 32)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !7681, file: !1196, line: 107, baseType: !1271, size: 32, offset: 32)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !7681, file: !1196, line: 108, baseType: !1475, size: 32, offset: 64)
!7686 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !7681, file: !1196, line: 109, baseType: !1479, size: 32, offset: 96)
!7687 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !7681, file: !1196, line: 110, baseType: !1483, size: 32, offset: 128)
!7688 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !7681, file: !1196, line: 111, baseType: !1479, size: 32, offset: 160)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !7681, file: !1196, line: 112, baseType: !1488, size: 32, offset: 192)
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !7681, file: !1196, line: 113, baseType: !1479, size: 32, offset: 224)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !7681, file: !1196, line: 114, baseType: !1479, size: 32, offset: 256)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !7681, file: !1196, line: 115, baseType: !1479, size: 32, offset: 288)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !7681, file: !1196, line: 116, baseType: !1495, size: 32, offset: 320)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !7681, file: !1196, line: 117, baseType: !1500, size: 32, offset: 352)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !7681, file: !1196, line: 118, baseType: !1505, size: 32, offset: 384)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !7681, file: !1196, line: 119, baseType: !1509, size: 32, offset: 416)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !7681, file: !1196, line: 120, baseType: !1513, size: 32, offset: 448)
!7698 = !{!7699, !7700, !7701}
!7699 = !DILocalVariable(name: "driver", arg: 1, scope: !7676, file: !1000, line: 1556, type: !7679)
!7700 = !DILocalVariable(name: "D", arg: 2, scope: !7676, file: !1000, line: 1556, type: !1170)
!7701 = !DILocalVariable(name: "smap", scope: !7676, file: !1000, line: 1558, type: !1221)
!7702 = !DILocation(line: 0, scope: !7676)
!7703 = !DILocation(line: 1561, column: 15, scope: !7676)
!7704 = !DILocation(line: 1562, column: 22, scope: !7676)
!7705 = !DILocation(line: 1563, column: 5, scope: !7676)
!7706 = !DILocation(line: 1563, column: 22, scope: !7676)
!7707 = !DILocation(line: 1565, column: 5, scope: !7676)
!7708 = !DILocation(line: 1565, column: 22, scope: !7676)
!7709 = !DILocation(line: 1566, column: 5, scope: !7676)
!7710 = !DILocation(line: 1566, column: 22, scope: !7676)
!7711 = !DILocation(line: 1568, column: 5, scope: !7676)
!7712 = !DILocation(line: 1568, column: 22, scope: !7676)
!7713 = !DILocation(line: 1569, column: 5, scope: !7676)
!7714 = !DILocation(line: 1569, column: 22, scope: !7676)
!7715 = !DILocation(line: 1570, column: 5, scope: !7676)
!7716 = !DILocation(line: 1570, column: 22, scope: !7676)
!7717 = !DILocation(line: 1573, column: 8, scope: !7676)
!7718 = !DILocation(line: 1573, column: 13, scope: !7676)
!7719 = !DILocation(line: 1573, column: 28, scope: !7676)
!7720 = !DILocation(line: 1574, column: 8, scope: !7676)
!7721 = !DILocation(line: 1574, column: 13, scope: !7676)
!7722 = !DILocation(line: 1574, column: 29, scope: !7676)
!7723 = !DILocation(line: 1575, column: 8, scope: !7676)
!7724 = !DILocation(line: 1575, column: 13, scope: !7676)
!7725 = !DILocation(line: 1575, column: 30, scope: !7676)
!7726 = !DILocation(line: 1576, column: 8, scope: !7676)
!7727 = !DILocation(line: 1576, column: 13, scope: !7676)
!7728 = !DILocation(line: 1576, column: 23, scope: !7676)
!7729 = !DILocation(line: 1577, column: 8, scope: !7676)
!7730 = !DILocation(line: 1577, column: 13, scope: !7676)
!7731 = !DILocation(line: 1577, column: 24, scope: !7676)
!7732 = !DILocation(line: 1578, column: 8, scope: !7676)
!7733 = !DILocation(line: 1578, column: 13, scope: !7676)
!7734 = !DILocation(line: 1578, column: 25, scope: !7676)
!7735 = !DILocation(line: 1579, column: 8, scope: !7676)
!7736 = !DILocation(line: 1579, column: 23, scope: !7676)
!7737 = !DILocation(line: 1583, column: 10, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7676, file: !1000, line: 1583, column: 9)
!7739 = !DILocation(line: 1583, column: 24, scope: !7738)
!7740 = !DILocation(line: 1583, column: 32, scope: !7738)
!7741 = !DILocation(line: 1583, column: 35, scope: !7738)
!7742 = !DILocation(line: 1583, column: 49, scope: !7738)
!7743 = !DILocation(line: 1583, column: 9, scope: !7676)
!7744 = !DILocation(line: 1586, column: 12, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7738, file: !1000, line: 1583, column: 59)
!7746 = !DILocation(line: 1586, column: 17, scope: !7745)
!7747 = !DILocation(line: 1586, column: 25, scope: !7745)
!7748 = !DILocation(line: 1587, column: 12, scope: !7745)
!7749 = !DILocation(line: 1587, column: 17, scope: !7745)
!7750 = !DILocation(line: 1587, column: 24, scope: !7745)
!7751 = !DILocation(line: 1591, column: 10, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7676, file: !1000, line: 1591, column: 9)
!7753 = !DILocation(line: 1589, column: 5, scope: !7745)
!7754 = !DILocation(line: 1600, column: 32, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7676, file: !1000, line: 1600, column: 9)
!7756 = !DILocation(line: 1600, column: 35, scope: !7755)
!7757 = !DILocation(line: 1600, column: 49, scope: !7755)
!7758 = !DILocation(line: 1600, column: 9, scope: !7676)
!7759 = !DILocation(line: 1601, column: 12, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7755, file: !1000, line: 1600, column: 59)
!7761 = !DILocation(line: 1601, column: 17, scope: !7760)
!7762 = !DILocation(line: 1601, column: 25, scope: !7760)
!7763 = !DILocation(line: 1602, column: 12, scope: !7760)
!7764 = !DILocation(line: 1602, column: 17, scope: !7760)
!7765 = !DILocation(line: 1602, column: 24, scope: !7760)
!7766 = !DILocation(line: 1603, column: 5, scope: !7760)
!7767 = !DILocation(line: 1607, column: 8, scope: !7676)
!7768 = !DILocation(line: 1607, column: 20, scope: !7676)
!7769 = !DILocation(line: 1622, column: 5, scope: !7676)
!7770 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1000, file: !1000, line: 4553, type: !1272, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7771)
!7771 = !{!7772, !7773, !7774, !7775}
!7772 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7770, file: !1000, line: 4553, type: !194)
!7773 = !DILocalVariable(name: "D", scope: !7770, file: !1000, line: 4555, type: !1170)
!7774 = !DILocalVariable(name: "unlock", scope: !7770, file: !1000, line: 4556, type: !175)
!7775 = !DILocalVariable(name: "cmd", scope: !7770, file: !1000, line: 4557, type: !378)
!7776 = !DILocation(line: 0, scope: !7770)
!7777 = !DILocation(line: 4555, column: 24, scope: !7770)
!7778 = !DILocation(line: 4557, column: 5, scope: !7770)
!7779 = !DILocation(line: 4558, column: 12, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7770, file: !1000, line: 4558, column: 9)
!7781 = !DILocation(line: 4558, column: 9, scope: !7780)
!7782 = !DILocation(line: 4558, column: 23, scope: !7780)
!7783 = !DILocation(line: 4558, column: 31, scope: !7780)
!7784 = !DILocation(line: 4558, column: 34, scope: !7780)
!7785 = !DILocation(line: 4558, column: 48, scope: !7780)
!7786 = !DILocation(line: 4558, column: 56, scope: !7780)
!7787 = !DILocation(line: 4558, column: 59, scope: !7780)
!7788 = !DILocation(line: 4558, column: 73, scope: !7780)
!7789 = !DILocation(line: 4558, column: 9, scope: !7770)
!7790 = !DILocation(line: 4563, column: 24, scope: !7770)
!7791 = !DILocation(line: 4563, column: 31, scope: !7770)
!7792 = !DILocation(line: 4563, column: 36, scope: !7770)
!7793 = !DILocation(line: 4563, column: 28, scope: !7770)
!7794 = !DILocation(line: 4563, column: 5, scope: !7770)
!7795 = !DILocation(line: 4564, column: 5, scope: !7770)
!7796 = !DILocation(line: 4567, column: 28, scope: !7770)
!7797 = !DILocation(line: 4567, column: 36, scope: !7770)
!7798 = !DILocation(line: 4567, column: 41, scope: !7770)
!7799 = !DILocation(line: 4567, column: 5, scope: !7770)
!7800 = !DILocation(line: 4568, column: 17, scope: !7770)
!7801 = !DILocation(line: 4568, column: 22, scope: !7770)
!7802 = !DILocation(line: 4568, column: 14, scope: !7770)
!7803 = !DILocation(line: 4569, column: 22, scope: !7770)
!7804 = !DILocation(line: 4569, column: 54, scope: !7770)
!7805 = !DILocation(line: 4569, column: 65, scope: !7770)
!7806 = !DILocation(line: 4569, column: 62, scope: !7770)
!7807 = !DILocation(line: 4569, column: 87, scope: !7770)
!7808 = !DILocation(line: 4569, column: 85, scope: !7770)
!7809 = !DILocation(line: 4569, column: 60, scope: !7770)
!7810 = !DILocation(line: 4569, column: 58, scope: !7770)
!7811 = !DILocation(line: 4569, column: 51, scope: !7770)
!7812 = !DILocation(line: 4572, column: 24, scope: !7770)
!7813 = !DILocation(line: 4572, column: 5, scope: !7770)
!7814 = !DILocation(line: 4573, column: 5, scope: !7770)
!7815 = !DILocation(line: 4575, column: 5, scope: !7770)
!7816 = !DILocation(line: 4576, column: 1, scope: !7770)
!7817 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1000, file: !1000, line: 4488, type: !7247, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7818)
!7818 = !{!7819, !7820}
!7819 = !DILocalVariable(name: "D", arg: 1, scope: !7817, file: !1000, line: 4488, type: !1170)
!7820 = !DILocalVariable(name: "status", scope: !7817, file: !1000, line: 4490, type: !1222)
!7821 = !DILocation(line: 0, scope: !7817)
!7822 = !DILocation(line: 4490, column: 5, scope: !7817)
!7823 = !DILocation(line: 4491, column: 5, scope: !7817)
!7824 = !DILocation(line: 4492, column: 32, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7817, file: !1000, line: 4491, column: 10)
!7826 = !DILocation(line: 4492, column: 40, scope: !7825)
!7827 = !DILocation(line: 4492, column: 45, scope: !7825)
!7828 = !DILocation(line: 4492, column: 9, scope: !7825)
!7829 = !DILocation(line: 4493, column: 20, scope: !7817)
!7830 = !DILocation(line: 4493, column: 32, scope: !7817)
!7831 = !DILocation(line: 4493, column: 29, scope: !7817)
!7832 = !DILocation(line: 4493, column: 27, scope: !7817)
!7833 = !DILocation(line: 4493, column: 16, scope: !7817)
!7834 = !DILocation(line: 4493, column: 5, scope: !7825)
!7835 = distinct !{!7835, !7823, !7836}
!7836 = !DILocation(line: 4493, column: 54, scope: !7817)
!7837 = !DILocation(line: 4494, column: 1, scope: !7817)
!7838 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1000, file: !1000, line: 1742, type: !7677, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7839)
!7839 = !{!7840, !7841, !7842}
!7840 = !DILocalVariable(name: "driver", arg: 1, scope: !7838, file: !1000, line: 1742, type: !7679)
!7841 = !DILocalVariable(name: "D", arg: 2, scope: !7838, file: !1000, line: 1742, type: !1170)
!7842 = !DILocalVariable(name: "smap", scope: !7838, file: !1000, line: 1744, type: !1221)
!7843 = !DILocation(line: 0, scope: !7838)
!7844 = !DILocation(line: 1747, column: 15, scope: !7838)
!7845 = !DILocation(line: 1748, column: 22, scope: !7838)
!7846 = !DILocation(line: 1749, column: 5, scope: !7838)
!7847 = !DILocation(line: 1749, column: 22, scope: !7838)
!7848 = !DILocation(line: 1750, column: 5, scope: !7838)
!7849 = !DILocation(line: 1750, column: 22, scope: !7838)
!7850 = !DILocation(line: 1751, column: 5, scope: !7838)
!7851 = !DILocation(line: 1751, column: 22, scope: !7838)
!7852 = !DILocation(line: 1752, column: 5, scope: !7838)
!7853 = !DILocation(line: 1752, column: 22, scope: !7838)
!7854 = !DILocation(line: 1753, column: 5, scope: !7838)
!7855 = !DILocation(line: 1753, column: 22, scope: !7838)
!7856 = !DILocation(line: 1756, column: 8, scope: !7838)
!7857 = !DILocation(line: 1756, column: 13, scope: !7838)
!7858 = !DILocation(line: 1756, column: 24, scope: !7838)
!7859 = !DILocation(line: 1758, column: 8, scope: !7838)
!7860 = !DILocation(line: 1758, column: 13, scope: !7838)
!7861 = !DILocation(line: 1758, column: 28, scope: !7838)
!7862 = !DILocation(line: 1759, column: 8, scope: !7838)
!7863 = !DILocation(line: 1759, column: 13, scope: !7838)
!7864 = !DILocation(line: 1759, column: 29, scope: !7838)
!7865 = !DILocation(line: 1760, column: 8, scope: !7838)
!7866 = !DILocation(line: 1760, column: 13, scope: !7838)
!7867 = !DILocation(line: 1760, column: 23, scope: !7838)
!7868 = !DILocation(line: 1761, column: 8, scope: !7838)
!7869 = !DILocation(line: 1761, column: 13, scope: !7838)
!7870 = !DILocation(line: 1761, column: 24, scope: !7838)
!7871 = !DILocation(line: 1762, column: 8, scope: !7838)
!7872 = !DILocation(line: 1762, column: 13, scope: !7838)
!7873 = !DILocation(line: 1762, column: 21, scope: !7838)
!7874 = !DILocation(line: 1763, column: 8, scope: !7838)
!7875 = !DILocation(line: 1763, column: 13, scope: !7838)
!7876 = !DILocation(line: 1763, column: 20, scope: !7838)
!7877 = !DILocation(line: 1764, column: 8, scope: !7838)
!7878 = !DILocation(line: 1764, column: 23, scope: !7838)
!7879 = !DILocation(line: 1768, column: 8, scope: !7838)
!7880 = !DILocation(line: 1768, column: 20, scope: !7838)
!7881 = !DILocation(line: 1770, column: 5, scope: !7838)
!7882 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1000, file: !1000, line: 1775, type: !7677, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7883)
!7883 = !{!7884, !7885}
!7884 = !DILocalVariable(name: "driver", arg: 1, scope: !7882, file: !1000, line: 1775, type: !7679)
!7885 = !DILocalVariable(name: "D", arg: 2, scope: !7882, file: !1000, line: 1775, type: !1170)
!7886 = !DILocation(line: 0, scope: !7882)
!7887 = !DILocation(line: 1793, column: 5, scope: !7882)
!7888 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1000, file: !1000, line: 1932, type: !7677, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7889)
!7889 = !{!7890, !7891}
!7890 = !DILocalVariable(name: "driver", arg: 1, scope: !7888, file: !1000, line: 1932, type: !7679)
!7891 = !DILocalVariable(name: "D", arg: 2, scope: !7888, file: !1000, line: 1932, type: !1170)
!7892 = !DILocation(line: 0, scope: !7888)
!7893 = !DILocation(line: 1935, column: 13, scope: !7888)
!7894 = !DILocation(line: 1935, column: 25, scope: !7888)
!7895 = !DILocation(line: 1936, column: 13, scope: !7888)
!7896 = !DILocation(line: 1936, column: 22, scope: !7888)
!7897 = !DILocation(line: 1937, column: 13, scope: !7888)
!7898 = !DILocation(line: 1937, column: 23, scope: !7888)
!7899 = !DILocation(line: 1939, column: 13, scope: !7888)
!7900 = !DILocation(line: 1939, column: 24, scope: !7888)
!7901 = !DILocation(line: 1940, column: 13, scope: !7888)
!7902 = !DILocation(line: 1940, column: 25, scope: !7888)
!7903 = !DILocation(line: 1945, column: 13, scope: !7888)
!7904 = !DILocation(line: 1945, column: 32, scope: !7888)
!7905 = !DILocation(line: 1946, column: 13, scope: !7888)
!7906 = !DILocation(line: 1946, column: 30, scope: !7888)
!7907 = !DILocation(line: 1947, column: 13, scope: !7888)
!7908 = !DILocation(line: 1947, column: 26, scope: !7888)
!7909 = !DILocation(line: 1948, column: 13, scope: !7888)
!7910 = !DILocation(line: 1948, column: 25, scope: !7888)
!7911 = !DILocation(line: 1949, column: 13, scope: !7888)
!7912 = !DILocation(line: 1949, column: 24, scope: !7888)
!7913 = !DILocation(line: 1956, column: 13, scope: !7888)
!7914 = !DILocation(line: 1956, column: 23, scope: !7888)
!7915 = !DILocation(line: 1957, column: 13, scope: !7888)
!7916 = !DILocation(line: 1957, column: 28, scope: !7888)
!7917 = !DILocation(line: 1960, column: 13, scope: !7888)
!7918 = !DILocation(line: 1960, column: 30, scope: !7888)
!7919 = !DILocation(line: 1961, column: 13, scope: !7888)
!7920 = !DILocation(line: 1961, column: 30, scope: !7888)
!7921 = !DILocation(line: 1962, column: 13, scope: !7888)
!7922 = !DILocation(line: 1962, column: 20, scope: !7888)
!7923 = !DILocation(line: 1968, column: 9, scope: !7924)
!7924 = distinct !DILexicalBlock(scope: !7888, file: !1000, line: 1968, column: 9)
!7925 = !DILocation(line: 1968, column: 36, scope: !7924)
!7926 = !DILocation(line: 1968, column: 9, scope: !7888)
!7927 = !DILocation(line: 1971, column: 12, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7924, file: !1000, line: 1970, column: 5)
!7929 = !DILocation(line: 1971, column: 25, scope: !7928)
!7930 = !DILocation(line: 1979, column: 8, scope: !7888)
!7931 = !DILocation(line: 1979, column: 13, scope: !7888)
!7932 = !DILocation(line: 1979, column: 25, scope: !7888)
!7933 = !DILocation(line: 1980, column: 8, scope: !7888)
!7934 = !DILocation(line: 1980, column: 13, scope: !7888)
!7935 = !DILocation(line: 1980, column: 24, scope: !7888)
!7936 = !DILocation(line: 1981, column: 8, scope: !7888)
!7937 = !DILocation(line: 1981, column: 13, scope: !7888)
!7938 = !DILocation(line: 1981, column: 24, scope: !7888)
!7939 = !DILocation(line: 1982, column: 8, scope: !7888)
!7940 = !DILocation(line: 1982, column: 13, scope: !7888)
!7941 = !DILocation(line: 1982, column: 22, scope: !7888)
!7942 = !DILocation(line: 1983, column: 8, scope: !7888)
!7943 = !DILocation(line: 1983, column: 13, scope: !7888)
!7944 = !DILocation(line: 1983, column: 21, scope: !7888)
!7945 = !DILocation(line: 1984, column: 8, scope: !7888)
!7946 = !DILocation(line: 1984, column: 13, scope: !7888)
!7947 = !DILocation(line: 1984, column: 22, scope: !7888)
!7948 = !DILocation(line: 1985, column: 8, scope: !7888)
!7949 = !DILocation(line: 1985, column: 13, scope: !7888)
!7950 = !DILocation(line: 1985, column: 22, scope: !7888)
!7951 = !DILocation(line: 1986, column: 8, scope: !7888)
!7952 = !DILocation(line: 1986, column: 13, scope: !7888)
!7953 = !DILocation(line: 1986, column: 21, scope: !7888)
!7954 = !DILocation(line: 1987, column: 8, scope: !7888)
!7955 = !DILocation(line: 1987, column: 13, scope: !7888)
!7956 = !DILocation(line: 1987, column: 20, scope: !7888)
!7957 = !DILocation(line: 1988, column: 8, scope: !7888)
!7958 = !DILocation(line: 1988, column: 13, scope: !7888)
!7959 = !DILocation(line: 1988, column: 25, scope: !7888)
!7960 = !DILocation(line: 1989, column: 8, scope: !7888)
!7961 = !DILocation(line: 1989, column: 13, scope: !7888)
!7962 = !DILocation(line: 1989, column: 22, scope: !7888)
!7963 = !DILocation(line: 1990, column: 8, scope: !7888)
!7964 = !DILocation(line: 1990, column: 13, scope: !7888)
!7965 = !DILocation(line: 1990, column: 22, scope: !7888)
!7966 = !DILocation(line: 1993, column: 8, scope: !7888)
!7967 = !DILocation(line: 1993, column: 13, scope: !7888)
!7968 = !DILocation(line: 1993, column: 26, scope: !7888)
!7969 = !DILocation(line: 1996, column: 8, scope: !7888)
!7970 = !DILocation(line: 1996, column: 20, scope: !7888)
!7971 = !DILocation(line: 1999, column: 8, scope: !7888)
!7972 = !DILocation(line: 1999, column: 24, scope: !7888)
!7973 = !DILocation(line: 2000, column: 8, scope: !7888)
!7974 = !DILocation(line: 2000, column: 19, scope: !7888)
!7975 = !DILocation(line: 2001, column: 8, scope: !7888)
!7976 = !DILocation(line: 2001, column: 24, scope: !7888)
!7977 = !DILocation(line: 2002, column: 8, scope: !7888)
!7978 = !DILocation(line: 2002, column: 23, scope: !7888)
!7979 = !DILocation(line: 2004, column: 5, scope: !7888)
!7980 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1000, file: !1000, line: 2160, type: !1471, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !7981)
!7981 = !{!7982, !7983, !7984, !7997, !7998, !7999}
!7982 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7980, file: !1000, line: 2160, type: !194)
!7983 = !DILocalVariable(name: "Info", arg: 2, scope: !7980, file: !1000, line: 2160, type: !194)
!7984 = !DILocalVariable(name: "FlashInfo", scope: !7980, file: !1000, line: 2162, type: !7985)
!7985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7986, size: 32)
!7986 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1196, line: 99, baseType: !7987)
!7987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 90, size: 928, elements: !7988)
!7988 = !{!7989, !7990, !7991, !7992, !7993, !7994, !7995, !7996}
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !7987, file: !1196, line: 91, baseType: !175, size: 32)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !7987, file: !1196, line: 92, baseType: !1527, size: 256, offset: 32)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !7987, file: !1196, line: 93, baseType: !1527, size: 256, offset: 288)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !7987, file: !1196, line: 94, baseType: !1527, size: 256, offset: 544)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !7987, file: !1196, line: 95, baseType: !175, size: 32, offset: 800)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !7987, file: !1196, line: 96, baseType: !1519, size: 16, offset: 832)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !7987, file: !1196, line: 97, baseType: !175, size: 32, offset: 864)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !7987, file: !1196, line: 98, baseType: !175, size: 32, offset: 896)
!7997 = !DILocalVariable(name: "D", scope: !7980, file: !1000, line: 2163, type: !1170)
!7998 = !DILocalVariable(name: "i", scope: !7980, file: !1000, line: 2164, type: !175)
!7999 = !DILocalVariable(name: "result", scope: !7980, file: !1000, line: 2166, type: !858)
!8000 = !DILocation(line: 0, scope: !7980)
!8001 = !DILocation(line: 2163, column: 37, scope: !7980)
!8002 = !DILocation(line: 2202, column: 16, scope: !7980)
!8003 = !DILocation(line: 2202, column: 28, scope: !7980)
!8004 = !DILocation(line: 2204, column: 15, scope: !7980)
!8005 = !DILocation(line: 2204, column: 29, scope: !7980)
!8006 = !DILocation(line: 2204, column: 39, scope: !7980)
!8007 = !DILocation(line: 2204, column: 5, scope: !7980)
!8008 = !DILocation(line: 2205, column: 9, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !7980, file: !1000, line: 2204, column: 45)
!8010 = !DILocation(line: 2205, column: 33, scope: !8009)
!8011 = !DILocation(line: 2206, column: 41, scope: !8009)
!8012 = !DILocation(line: 2206, column: 55, scope: !8009)
!8013 = !DILocation(line: 2206, column: 9, scope: !8009)
!8014 = !DILocation(line: 2206, column: 36, scope: !8009)
!8015 = !DILocation(line: 2207, column: 38, scope: !8009)
!8016 = !DILocation(line: 2207, column: 52, scope: !8009)
!8017 = !DILocation(line: 2207, column: 32, scope: !8009)
!8018 = !DILocation(line: 2209, column: 10, scope: !8009)
!8019 = distinct !{!8019, !8007, !8020}
!8020 = !DILocation(line: 2210, column: 5, scope: !7980)
!8021 = !DILocation(line: 2212, column: 16, scope: !7980)
!8022 = !DILocation(line: 2212, column: 32, scope: !7980)
!8023 = !DILocation(line: 2213, column: 16, scope: !7980)
!8024 = !DILocation(line: 2213, column: 25, scope: !7980)
!8025 = !DILocation(line: 2236, column: 5, scope: !7980)
!8026 = !DILocation(line: 2238, column: 5, scope: !7980)
!8027 = !DILocation(line: 2239, column: 18, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !7980, file: !1000, line: 2238, column: 10)
!8029 = !DILocation(line: 2240, column: 34, scope: !7980)
!8030 = !DILocation(line: 2240, column: 5, scope: !8028)
!8031 = distinct !{!8031, !8026, !8032}
!8032 = !DILocation(line: 2240, column: 43, scope: !7980)
!8033 = !DILocation(line: 2259, column: 5, scope: !7980)
!8034 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1000, file: !1000, line: 2275, type: !1272, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8035)
!8035 = !{!8036, !8037, !8038, !8039}
!8036 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8034, file: !1000, line: 2275, type: !194)
!8037 = !DILocalVariable(name: "D", scope: !8034, file: !1000, line: 2278, type: !1170)
!8038 = !DILocalVariable(name: "status", scope: !8034, file: !1000, line: 2279, type: !1222)
!8039 = !DILocalVariable(name: "saved_mask", scope: !8034, file: !1000, line: 2280, type: !175)
!8040 = !DILocation(line: 0, scope: !8034)
!8041 = !DILocation(line: 2278, column: 33, scope: !8034)
!8042 = !DILocation(line: 2286, column: 5, scope: !8034)
!8043 = !DILocation(line: 2293, column: 9, scope: !8034)
!8044 = !DILocation(line: 2294, column: 26, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8034, file: !1000, line: 2293, column: 19)
!8046 = !DILocation(line: 2297, column: 17, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8045, file: !1000, line: 2297, column: 17)
!8048 = !DILocation(line: 2297, column: 17, scope: !8045)
!8049 = !DILocation(line: 2298, column: 17, scope: !8050)
!8050 = distinct !DILexicalBlock(scope: !8047, file: !1000, line: 2297, column: 36)
!8051 = !DILocation(line: 2299, column: 37, scope: !8050)
!8052 = !DILocation(line: 2300, column: 13, scope: !8050)
!8053 = !DILocation(line: 2303, column: 50, scope: !8045)
!8054 = !DILocation(line: 2303, column: 55, scope: !8045)
!8055 = !DILocation(line: 2303, column: 22, scope: !8045)
!8056 = !DILocation(line: 2306, column: 35, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8045, file: !1000, line: 2306, column: 17)
!8058 = !DILocation(line: 2306, column: 32, scope: !8057)
!8059 = !DILocation(line: 2306, column: 30, scope: !8057)
!8060 = !DILocation(line: 2306, column: 19, scope: !8057)
!8061 = !DILocation(line: 2306, column: 17, scope: !8045)
!8062 = !DILocation(line: 2307, column: 17, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8057, file: !1000, line: 2306, column: 59)
!8064 = !DILocation(line: 2308, column: 17, scope: !8063)
!8065 = !DILocation(line: 2315, column: 12, scope: !8034)
!8066 = !DILocation(line: 2315, column: 21, scope: !8034)
!8067 = !DILocation(line: 2325, column: 9, scope: !8034)
!8068 = !DILocation(line: 2326, column: 5, scope: !8034)
!8069 = !DILocation(line: 2311, column: 17, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8057, file: !1000, line: 2310, column: 20)
!8071 = distinct !{!8071, !8043, !8072}
!8072 = !DILocation(line: 2313, column: 9, scope: !8034)
!8073 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1000, file: !1000, line: 2819, type: !1480, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8074)
!8074 = !{!8075, !8076, !8077, !8078, !8079, !8080, !8081, !8082, !8083, !8084, !8087, !8088}
!8075 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8073, file: !1000, line: 2819, type: !194)
!8076 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8073, file: !1000, line: 2819, type: !175)
!8077 = !DILocalVariable(name: "result", scope: !8073, file: !1000, line: 2821, type: !858)
!8078 = !DILocalVariable(name: "blocksize", scope: !8073, file: !1000, line: 2822, type: !175)
!8079 = !DILocalVariable(name: "eraseunit", scope: !8073, file: !1000, line: 2823, type: !175)
!8080 = !DILocalVariable(name: "eraseaddr", scope: !8073, file: !1000, line: 2824, type: !175)
!8081 = !DILocalVariable(name: "iteration", scope: !8073, file: !1000, line: 2825, type: !175)
!8082 = !DILocalVariable(name: "D", scope: !8073, file: !1000, line: 2826, type: !1170)
!8083 = !DILocalVariable(name: "erase_block", scope: !8073, file: !1000, line: 2827, type: !175)
!8084 = !DILocalVariable(name: "a", scope: !8085, file: !1000, line: 2853, type: !175)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !1000, line: 2852, column: 56)
!8086 = distinct !DILexicalBlock(scope: !8073, file: !1000, line: 2852, column: 9)
!8087 = !DILocalVariable(name: "b", scope: !8085, file: !1000, line: 2853, type: !175)
!8088 = !DILocalVariable(name: "c", scope: !8085, file: !1000, line: 2853, type: !175)
!8089 = !DILocation(line: 0, scope: !8073)
!8090 = !DILocation(line: 2826, column: 30, scope: !8073)
!8091 = !DILocation(line: 2829, column: 5, scope: !8092)
!8092 = distinct !DILexicalBlock(scope: !8093, file: !1000, line: 2829, column: 5)
!8093 = distinct !DILexicalBlock(scope: !8073, file: !1000, line: 2829, column: 5)
!8094 = !DILocation(line: 2829, column: 5, scope: !8093)
!8095 = !DILocation(line: 2829, column: 5, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8092, file: !1000, line: 2829, column: 5)
!8097 = !DILocation(line: 2836, column: 9, scope: !8073)
!8098 = !DILocation(line: 2838, column: 8, scope: !8073)
!8099 = !DILocation(line: 2838, column: 21, scope: !8073)
!8100 = !DILocation(line: 2847, column: 5, scope: !8073)
!8101 = !DILocation(line: 2848, column: 18, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8073, file: !1000, line: 2847, column: 10)
!8103 = !DILocation(line: 2850, column: 34, scope: !8073)
!8104 = !DILocation(line: 2850, column: 5, scope: !8102)
!8105 = distinct !{!8105, !8100, !8106}
!8106 = !DILocation(line: 2850, column: 43, scope: !8073)
!8107 = !DILocation(line: 2839, column: 32, scope: !8073)
!8108 = !DILocation(line: 2861, column: 53, scope: !8085)
!8109 = !DILocation(line: 2861, column: 40, scope: !8085)
!8110 = !DILocation(line: 2861, column: 25, scope: !8085)
!8111 = !DILocation(line: 2874, column: 16, scope: !8085)
!8112 = !DILocation(line: 2874, column: 13, scope: !8085)
!8113 = !DILocation(line: 0, scope: !8085)
!8114 = !DILocation(line: 2875, column: 24, scope: !8085)
!8115 = !DILocation(line: 2877, column: 21, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8085, file: !1000, line: 2877, column: 13)
!8117 = !DILocation(line: 2877, column: 13, scope: !8085)
!8118 = !DILocation(line: 2879, column: 23, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8120, file: !1000, line: 2879, column: 21)
!8120 = distinct !DILexicalBlock(scope: !8121, file: !1000, line: 2878, column: 120)
!8121 = distinct !DILexicalBlock(scope: !8122, file: !1000, line: 2878, column: 13)
!8122 = distinct !DILexicalBlock(scope: !8123, file: !1000, line: 2878, column: 13)
!8123 = distinct !DILexicalBlock(scope: !8116, file: !1000, line: 2877, column: 27)
!8124 = !DILocation(line: 2879, column: 21, scope: !8120)
!8125 = !DILocation(line: 2878, column: 48, scope: !8121)
!8126 = !DILocation(line: 2878, column: 83, scope: !8121)
!8127 = !DILocation(line: 2878, column: 113, scope: !8121)
!8128 = !DILocation(line: 2878, column: 35, scope: !8121)
!8129 = !DILocation(line: 2878, column: 13, scope: !8122)
!8130 = distinct !{!8130, !8129, !8131}
!8131 = !DILocation(line: 2883, column: 13, scope: !8122)
!8132 = !DILocation(line: 2863, column: 19, scope: !8085)
!8133 = !DILocation(line: 2825, column: 24, scope: !8073)
!8134 = !DILocation(line: 2886, column: 9, scope: !8085)
!8135 = !DILocation(line: 2888, column: 36, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8085, file: !1000, line: 2886, column: 31)
!8137 = !DILocation(line: 2888, column: 41, scope: !8136)
!8138 = !DILocation(line: 2889, column: 17, scope: !8136)
!8139 = !DILocation(line: 2891, column: 36, scope: !8136)
!8140 = !DILocation(line: 2891, column: 41, scope: !8136)
!8141 = !DILocation(line: 2892, column: 17, scope: !8136)
!8142 = !DILocation(line: 2894, column: 36, scope: !8136)
!8143 = !DILocation(line: 2894, column: 41, scope: !8136)
!8144 = !DILocation(line: 2895, column: 17, scope: !8136)
!8145 = !DILocation(line: 2897, column: 17, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8147, file: !1000, line: 2897, column: 17)
!8147 = distinct !DILexicalBlock(scope: !8148, file: !1000, line: 2897, column: 17)
!8148 = distinct !DILexicalBlock(scope: !8136, file: !1000, line: 2897, column: 17)
!8149 = !DILocation(line: 0, scope: !8136)
!8150 = !DILocation(line: 2906, column: 5, scope: !8073)
!8151 = !DILocation(line: 2908, column: 32, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8073, file: !1000, line: 2906, column: 27)
!8153 = !DILocation(line: 2908, column: 37, scope: !8152)
!8154 = !DILocation(line: 2909, column: 13, scope: !8152)
!8155 = !DILocation(line: 2911, column: 32, scope: !8152)
!8156 = !DILocation(line: 2911, column: 37, scope: !8152)
!8157 = !DILocation(line: 2912, column: 13, scope: !8152)
!8158 = !DILocation(line: 2914, column: 32, scope: !8152)
!8159 = !DILocation(line: 2914, column: 37, scope: !8152)
!8160 = !DILocation(line: 2915, column: 13, scope: !8152)
!8161 = !DILocation(line: 0, scope: !8152)
!8162 = !DILocation(line: 2921, column: 56, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8164, file: !1000, line: 2921, column: 5)
!8164 = distinct !DILexicalBlock(scope: !8073, file: !1000, line: 2921, column: 5)
!8165 = !DILocation(line: 2921, column: 5, scope: !8164)
!8166 = !DILocation(line: 2921, column: 35, scope: !8164)
!8167 = !DILocation(line: 2921, column: 22, scope: !8164)
!8168 = !DILocation(line: 2922, column: 9, scope: !8169)
!8169 = distinct !DILexicalBlock(scope: !8163, file: !1000, line: 2921, column: 99)
!8170 = !DILocation(line: 2929, column: 9, scope: !8169)
!8171 = !DILocation(line: 2938, column: 26, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8169, file: !1000, line: 2929, column: 26)
!8173 = !DILocation(line: 2939, column: 37, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8172, file: !1000, line: 2939, column: 17)
!8175 = !DILocation(line: 2939, column: 17, scope: !8172)
!8176 = distinct !{!8176, !8170, !8177}
!8177 = !DILocation(line: 2943, column: 9, scope: !8169)
!8178 = !DILocation(line: 2921, column: 71, scope: !8163)
!8179 = !DILocation(line: 2921, column: 85, scope: !8163)
!8180 = distinct !{!8180, !8165, !8181}
!8181 = !DILocation(line: 2983, column: 5, scope: !8164)
!8182 = !DILocation(line: 2985, column: 21, scope: !8073)
!8183 = !DILocation(line: 2992, column: 9, scope: !8073)
!8184 = !DILocation(line: 3000, column: 5, scope: !8073)
!8185 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1000, file: !1000, line: 2533, type: !1484, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8186)
!8186 = !{!8187, !8188, !8189, !8190, !8191, !8192, !8193, !8194, !8195, !8196, !8197, !8198, !8199, !8200}
!8187 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8185, file: !1000, line: 2533, type: !194)
!8188 = !DILocalVariable(name: "Address", arg: 2, scope: !8185, file: !1000, line: 2533, type: !194)
!8189 = !DILocalVariable(name: "Data", arg: 3, scope: !8185, file: !1000, line: 2533, type: !194)
!8190 = !DILocalVariable(name: "Length", arg: 4, scope: !8185, file: !1000, line: 2533, type: !175)
!8191 = !DILocalVariable(name: "D", scope: !8185, file: !1000, line: 2535, type: !1170)
!8192 = !DILocalVariable(name: "savedMask", scope: !8185, file: !1000, line: 2536, type: !175)
!8193 = !DILocalVariable(name: "address", scope: !8185, file: !1000, line: 2537, type: !175)
!8194 = !DILocalVariable(name: "p_data", scope: !8185, file: !1000, line: 2538, type: !680)
!8195 = !DILocalVariable(name: "p_data_first", scope: !8185, file: !1000, line: 2539, type: !680)
!8196 = !DILocalVariable(name: "result", scope: !8185, file: !1000, line: 2540, type: !858)
!8197 = !DILocalVariable(name: "written", scope: !8185, file: !1000, line: 2541, type: !175)
!8198 = !DILocalVariable(name: "length", scope: !8185, file: !1000, line: 2542, type: !175)
!8199 = !DILocalVariable(name: "cmd1", scope: !8185, file: !1000, line: 2543, type: !175)
!8200 = !DILocalVariable(name: "j", scope: !8201, file: !1000, line: 2599, type: !175)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !1000, line: 2597, column: 61)
!8202 = distinct !DILexicalBlock(scope: !8203, file: !1000, line: 2597, column: 13)
!8203 = distinct !DILexicalBlock(scope: !8185, file: !1000, line: 2583, column: 25)
!8204 = !DILocation(line: 0, scope: !8185)
!8205 = !DILocation(line: 2535, column: 26, scope: !8185)
!8206 = !DILocation(line: 2537, column: 37, scope: !8185)
!8207 = !DILocation(line: 2538, column: 5, scope: !8185)
!8208 = !DILocation(line: 2538, column: 19, scope: !8185)
!8209 = !DILocation(line: 2542, column: 5, scope: !8185)
!8210 = !DILocation(line: 2545, column: 5, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8212, file: !1000, line: 2545, column: 5)
!8212 = distinct !DILexicalBlock(scope: !8185, file: !1000, line: 2545, column: 5)
!8213 = !DILocation(line: 2545, column: 5, scope: !8212)
!8214 = !DILocation(line: 2545, column: 5, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8211, file: !1000, line: 2545, column: 5)
!8216 = !DILocation(line: 2567, column: 9, scope: !8185)
!8217 = !DILocation(line: 2569, column: 8, scope: !8185)
!8218 = !DILocation(line: 2569, column: 21, scope: !8185)
!8219 = !DILocation(line: 2576, column: 5, scope: !8185)
!8220 = !DILocation(line: 2577, column: 18, scope: !8221)
!8221 = distinct !DILexicalBlock(scope: !8185, file: !1000, line: 2576, column: 10)
!8222 = !DILocation(line: 2579, column: 34, scope: !8185)
!8223 = !DILocation(line: 2579, column: 5, scope: !8221)
!8224 = distinct !{!8224, !8219, !8225}
!8225 = !DILocation(line: 2579, column: 43, scope: !8185)
!8226 = !DILocation(line: 2583, column: 14, scope: !8185)
!8227 = !DILocation(line: 2583, column: 5, scope: !8185)
!8228 = !DILocation(line: 2584, column: 27, scope: !8203)
!8229 = !DILocation(line: 2592, column: 18, scope: !8203)
!8230 = !DILocation(line: 2592, column: 35, scope: !8203)
!8231 = !DILocation(line: 2592, column: 74, scope: !8203)
!8232 = !DILocation(line: 2592, column: 50, scope: !8203)
!8233 = !DILocation(line: 2592, column: 39, scope: !8203)
!8234 = !DILocation(line: 2595, column: 37, scope: !8203)
!8235 = !DILocation(line: 2595, column: 29, scope: !8203)
!8236 = !DILocation(line: 2595, column: 16, scope: !8203)
!8237 = !DILocation(line: 2597, column: 13, scope: !8202)
!8238 = !DILocation(line: 2597, column: 30, scope: !8202)
!8239 = !DILocation(line: 2597, column: 13, scope: !8203)
!8240 = !DILocation(line: 0, scope: !8201)
!8241 = !DILocation(line: 2600, column: 27, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !1000, line: 2600, column: 13)
!8243 = distinct !DILexicalBlock(scope: !8201, file: !1000, line: 2600, column: 13)
!8244 = !DILocation(line: 2600, column: 13, scope: !8243)
!8245 = !DILocation(line: 2601, column: 38, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8242, file: !1000, line: 2600, column: 42)
!8247 = !DILocation(line: 2601, column: 17, scope: !8246)
!8248 = !DILocation(line: 2601, column: 36, scope: !8246)
!8249 = !DILocation(line: 2600, column: 38, scope: !8242)
!8250 = distinct !{!8250, !8244, !8251}
!8251 = !DILocation(line: 2602, column: 13, scope: !8243)
!8252 = !DILocation(line: 0, scope: !8203)
!8253 = !DILocation(line: 2606, column: 18, scope: !8254)
!8254 = distinct !DILexicalBlock(scope: !8203, file: !1000, line: 2606, column: 13)
!8255 = !DILocation(line: 2606, column: 29, scope: !8254)
!8256 = !DILocation(line: 2606, column: 13, scope: !8203)
!8257 = !DILocation(line: 2607, column: 13, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8254, file: !1000, line: 2606, column: 55)
!8259 = !DILocation(line: 2608, column: 9, scope: !8258)
!8260 = !DILocation(line: 2613, column: 16, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8203, file: !1000, line: 2613, column: 13)
!8262 = !DILocation(line: 2613, column: 29, scope: !8261)
!8263 = !DILocation(line: 0, scope: !8261)
!8264 = !DILocation(line: 2613, column: 13, scope: !8203)
!8265 = !DILocation(line: 2614, column: 20, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8261, file: !1000, line: 2613, column: 35)
!8267 = !DILocation(line: 2615, column: 32, scope: !8266)
!8268 = !DILocation(line: 2615, column: 40, scope: !8266)
!8269 = !DILocation(line: 2615, column: 13, scope: !8266)
!8270 = !DILocation(line: 2616, column: 9, scope: !8266)
!8271 = !DILocation(line: 2619, column: 20, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8261, file: !1000, line: 2618, column: 9)
!8273 = !DILocation(line: 2620, column: 32, scope: !8272)
!8274 = !DILocation(line: 2620, column: 40, scope: !8272)
!8275 = !DILocation(line: 2620, column: 13, scope: !8272)
!8276 = !DILocation(line: 2626, column: 21, scope: !8203)
!8277 = !DILocation(line: 2633, column: 37, scope: !8203)
!8278 = !DILocation(line: 2634, column: 45, scope: !8203)
!8279 = !DILocation(line: 2634, column: 42, scope: !8203)
!8280 = !DILocation(line: 2634, column: 40, scope: !8203)
!8281 = !DILocation(line: 2634, column: 58, scope: !8203)
!8282 = !DILocation(line: 2634, column: 29, scope: !8203)
!8283 = !DILocation(line: 2635, column: 28, scope: !8203)
!8284 = !DILocation(line: 2636, column: 9, scope: !8203)
!8285 = !DILocation(line: 2638, column: 26, scope: !8203)
!8286 = !DILocation(line: 2638, column: 9, scope: !8203)
!8287 = !DILocation(line: 2639, column: 29, scope: !8203)
!8288 = !DILocation(line: 2639, column: 9, scope: !8203)
!8289 = !DILocation(line: 2662, column: 9, scope: !8203)
!8290 = !DILocation(line: 2670, column: 9, scope: !8203)
!8291 = !DILocation(line: 2676, column: 89, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8203, file: !1000, line: 2670, column: 13)
!8293 = !DILocation(line: 2676, column: 26, scope: !8292)
!8294 = !DILocation(line: 2678, column: 36, scope: !8203)
!8295 = !DILocation(line: 2678, column: 9, scope: !8292)
!8296 = distinct !{!8296, !8290, !8297}
!8297 = !DILocation(line: 2678, column: 45, scope: !8203)
!8298 = !DILocation(line: 2718, column: 19, scope: !8203)
!8299 = !DILocation(line: 2718, column: 16, scope: !8203)
!8300 = !DILocation(line: 2719, column: 16, scope: !8203)
!8301 = !DILocation(line: 2722, column: 31, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8203, file: !1000, line: 2722, column: 13)
!8303 = !DILocation(line: 2722, column: 13, scope: !8203)
!8304 = distinct !{!8304, !8227, !8305}
!8305 = !DILocation(line: 2725, column: 5, scope: !8185)
!8306 = !DILocation(line: 2748, column: 21, scope: !8185)
!8307 = !DILocation(line: 2755, column: 9, scope: !8185)
!8308 = !DILocation(line: 2757, column: 16, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8185, file: !1000, line: 2757, column: 9)
!8310 = !DILocation(line: 2761, column: 1, scope: !8185)
!8311 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1000, file: !1000, line: 3019, type: !1480, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8312)
!8312 = !{!8313, !8314}
!8313 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8311, file: !1000, line: 3019, type: !194)
!8314 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8311, file: !1000, line: 3019, type: !175)
!8315 = !DILocation(line: 0, scope: !8311)
!8316 = !DILocation(line: 3021, column: 5, scope: !8311)
!8317 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1000, file: !1000, line: 3124, type: !1489, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8318)
!8318 = !{!8319, !8320, !8321, !8322, !8323, !8324, !8325, !8326}
!8319 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8317, file: !1000, line: 3124, type: !194)
!8320 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8317, file: !1000, line: 3124, type: !175)
!8321 = !DILocalVariable(name: "result", scope: !8317, file: !1000, line: 3126, type: !858)
!8322 = !DILocalVariable(name: "savedMask", scope: !8317, file: !1000, line: 3127, type: !175)
!8323 = !DILocalVariable(name: "D", scope: !8317, file: !1000, line: 3128, type: !1170)
!8324 = !DILocalVariable(name: "status_busy", scope: !8317, file: !1000, line: 3129, type: !1222)
!8325 = !DILocalVariable(name: "status_suspend", scope: !8317, file: !1000, line: 3129, type: !1222)
!8326 = !DILocalVariable(name: "check_status", scope: !8327, file: !1000, line: 3141, type: !1222)
!8327 = distinct !DILexicalBlock(scope: !8328, file: !1000, line: 3140, column: 56)
!8328 = distinct !DILexicalBlock(scope: !8317, file: !1000, line: 3140, column: 9)
!8329 = !DILocation(line: 0, scope: !8317)
!8330 = !DILocation(line: 3128, column: 47, scope: !8317)
!8331 = !DILocation(line: 3131, column: 5, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8333, file: !1000, line: 3131, column: 5)
!8333 = distinct !DILexicalBlock(scope: !8317, file: !1000, line: 3131, column: 5)
!8334 = !DILocation(line: 3131, column: 5, scope: !8333)
!8335 = !DILocation(line: 3131, column: 5, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8332, file: !1000, line: 3131, column: 5)
!8337 = !DILocation(line: 3134, column: 50, scope: !8317)
!8338 = !DILocation(line: 3134, column: 55, scope: !8317)
!8339 = !DILocation(line: 3134, column: 22, scope: !8317)
!8340 = !DILocation(line: 3135, column: 50, scope: !8317)
!8341 = !DILocation(line: 3135, column: 55, scope: !8317)
!8342 = !DILocation(line: 3135, column: 22, scope: !8317)
!8343 = !DILocation(line: 3138, column: 17, scope: !8317)
!8344 = !DILocation(line: 3140, column: 32, scope: !8328)
!8345 = !DILocation(line: 3140, column: 29, scope: !8328)
!8346 = !DILocation(line: 3140, column: 27, scope: !8328)
!8347 = !DILocation(line: 3140, column: 11, scope: !8328)
!8348 = !DILocation(line: 3140, column: 9, scope: !8317)
!8349 = !DILocation(line: 3141, column: 34, scope: !8327)
!8350 = !DILocation(line: 3141, column: 60, scope: !8327)
!8351 = !DILocation(line: 3141, column: 58, scope: !8327)
!8352 = !DILocation(line: 0, scope: !8327)
!8353 = !DILocation(line: 3144, column: 37, scope: !8354)
!8354 = distinct !DILexicalBlock(scope: !8327, file: !1000, line: 3144, column: 13)
!8355 = !DILocation(line: 3144, column: 35, scope: !8354)
!8356 = !DILocation(line: 3144, column: 16, scope: !8354)
!8357 = !DILocation(line: 3144, column: 52, scope: !8354)
!8358 = !DILocation(line: 3145, column: 21, scope: !8354)
!8359 = !DILocation(line: 3145, column: 38, scope: !8354)
!8360 = !DILocation(line: 3147, column: 13, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8362, file: !1000, line: 3147, column: 13)
!8362 = distinct !DILexicalBlock(scope: !8363, file: !1000, line: 3147, column: 13)
!8363 = distinct !DILexicalBlock(scope: !8354, file: !1000, line: 3145, column: 61)
!8364 = !DILocation(line: 3147, column: 13, scope: !8362)
!8365 = !DILocation(line: 3147, column: 13, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8361, file: !1000, line: 3147, column: 13)
!8367 = !DILocation(line: 3150, column: 13, scope: !8363)
!8368 = !DILocation(line: 3151, column: 33, scope: !8363)
!8369 = !DILocation(line: 3153, column: 9, scope: !8363)
!8370 = !DILocation(line: 3155, column: 20, scope: !8371)
!8371 = distinct !DILexicalBlock(scope: !8372, file: !1000, line: 3155, column: 17)
!8372 = distinct !DILexicalBlock(scope: !8354, file: !1000, line: 3153, column: 16)
!8373 = !DILocation(line: 3155, column: 31, scope: !8371)
!8374 = !DILocation(line: 3155, column: 17, scope: !8372)
!8375 = !DILocation(line: 3156, column: 36, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8371, file: !1000, line: 3155, column: 54)
!8377 = !DILocation(line: 3156, column: 17, scope: !8376)
!8378 = !DILocation(line: 3157, column: 36, scope: !8376)
!8379 = !DILocation(line: 3157, column: 17, scope: !8376)
!8380 = !DILocation(line: 3158, column: 13, scope: !8376)
!8381 = !DILocation(line: 3191, column: 5, scope: !8317)
!8382 = !DILocation(line: 3193, column: 9, scope: !8317)
!8383 = !DILocation(line: 3160, column: 13, scope: !8372)
!8384 = !DILocation(line: 3173, column: 13, scope: !8372)
!8385 = !DILocation(line: 3194, column: 18, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8387, file: !1000, line: 3193, column: 32)
!8387 = distinct !DILexicalBlock(scope: !8317, file: !1000, line: 3193, column: 9)
!8388 = !DILocation(line: 3195, column: 5, scope: !8386)
!8389 = !DILocation(line: 3197, column: 5, scope: !8317)
!8390 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1000, file: !1000, line: 3225, type: !1480, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8391)
!8391 = !{!8392, !8393, !8394, !8395, !8396}
!8392 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8390, file: !1000, line: 3225, type: !194)
!8393 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8390, file: !1000, line: 3225, type: !175)
!8394 = !DILocalVariable(name: "D", scope: !8390, file: !1000, line: 3227, type: !1170)
!8395 = !DILocalVariable(name: "status", scope: !8390, file: !1000, line: 3228, type: !1222)
!8396 = !DILocalVariable(name: "savedMask", scope: !8390, file: !1000, line: 3229, type: !175)
!8397 = !DILocation(line: 0, scope: !8390)
!8398 = !DILocation(line: 3227, column: 30, scope: !8390)
!8399 = !DILocation(line: 3231, column: 17, scope: !8390)
!8400 = !DILocation(line: 3234, column: 5, scope: !8390)
!8401 = !DILocation(line: 3238, column: 5, scope: !8390)
!8402 = !DILocation(line: 3239, column: 46, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8390, file: !1000, line: 3238, column: 15)
!8404 = !DILocation(line: 3239, column: 51, scope: !8403)
!8405 = !DILocation(line: 3239, column: 18, scope: !8403)
!8406 = !DILocation(line: 3241, column: 31, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8403, file: !1000, line: 3241, column: 13)
!8408 = !DILocation(line: 3241, column: 28, scope: !8407)
!8409 = !DILocation(line: 3241, column: 26, scope: !8407)
!8410 = !DILocation(line: 3241, column: 15, scope: !8407)
!8411 = !DILocation(line: 3241, column: 13, scope: !8403)
!8412 = distinct !{!8412, !8401, !8413}
!8413 = !DILocation(line: 3244, column: 5, scope: !8390)
!8414 = !DILocation(line: 3246, column: 5, scope: !8390)
!8415 = !DILocation(line: 3248, column: 5, scope: !8390)
!8416 = !DILocation(line: 3250, column: 5, scope: !8390)
!8417 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1000, file: !1000, line: 3277, type: !1480, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8418)
!8418 = !{!8419, !8420, !8421}
!8419 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8417, file: !1000, line: 3277, type: !194)
!8420 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8417, file: !1000, line: 3277, type: !175)
!8421 = !DILocalVariable(name: "D", scope: !8417, file: !1000, line: 3279, type: !1170)
!8422 = !DILocation(line: 0, scope: !8417)
!8423 = !DILocation(line: 3279, column: 29, scope: !8417)
!8424 = !DILocation(line: 3281, column: 5, scope: !8417)
!8425 = !DILocation(line: 3282, column: 5, scope: !8417)
!8426 = !DILocation(line: 3283, column: 5, scope: !8417)
!8427 = !DILocation(line: 3285, column: 5, scope: !8417)
!8428 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1000, file: !1000, line: 3332, type: !1506, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8429)
!8429 = !{!8430, !8431, !8432}
!8430 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8428, file: !1000, line: 3332, type: !194)
!8431 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !8428, file: !1000, line: 3332, type: !194)
!8432 = !DILocalVariable(name: "ACTION", arg: 3, scope: !8428, file: !1000, line: 3332, type: !175)
!8433 = !DILocation(line: 0, scope: !8428)
!8434 = !DILocation(line: 3334, column: 5, scope: !8428)
!8435 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1000, file: !1000, line: 2350, type: !1514, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8436)
!8436 = !{!8437, !8438, !8439, !8440}
!8437 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8435, file: !1000, line: 2350, type: !194)
!8438 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !8435, file: !1000, line: 2350, type: !175)
!8439 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !8435, file: !1000, line: 2350, type: !194)
!8440 = !DILocalVariable(name: "D", scope: !8435, file: !1000, line: 2352, type: !1170)
!8441 = !DILocation(line: 0, scope: !8435)
!8442 = !DILocation(line: 2353, column: 9, scope: !8435)
!8443 = !DILocation(line: 2354, column: 12, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8445, file: !1000, line: 2353, column: 51)
!8445 = distinct !DILexicalBlock(scope: !8435, file: !1000, line: 2353, column: 9)
!8446 = !DILocation(line: 2354, column: 9, scope: !8444)
!8447 = !DILocation(line: 2355, column: 5, scope: !8444)
!8448 = !DILocation(line: 2356, column: 17, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8450, file: !1000, line: 2356, column: 13)
!8450 = distinct !DILexicalBlock(scope: !8451, file: !1000, line: 2355, column: 71)
!8451 = distinct !DILexicalBlock(scope: !8445, file: !1000, line: 2355, column: 16)
!8452 = !DILocation(line: 2356, column: 14, scope: !8449)
!8453 = !DILocation(line: 2356, column: 28, scope: !8449)
!8454 = !DILocation(line: 2356, column: 49, scope: !8449)
!8455 = !DILocation(line: 2356, column: 56, scope: !8449)
!8456 = !DILocation(line: 2356, column: 70, scope: !8449)
!8457 = !DILocation(line: 2356, column: 80, scope: !8449)
!8458 = !DILocation(line: 2356, column: 13, scope: !8450)
!8459 = !DILocation(line: 2361, column: 9, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !1000, line: 2361, column: 9)
!8461 = distinct !DILexicalBlock(scope: !8462, file: !1000, line: 2361, column: 9)
!8462 = distinct !DILexicalBlock(scope: !8463, file: !1000, line: 2361, column: 9)
!8463 = distinct !DILexicalBlock(scope: !8451, file: !1000, line: 2359, column: 12)
!8464 = !DILocation(line: 2363, column: 5, scope: !8435)
!8465 = !DILocation(line: 2364, column: 1, scope: !8435)
!8466 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1000, file: !1000, line: 3355, type: !1272, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8467)
!8467 = !{!8468, !8469, !8470}
!8468 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8466, file: !1000, line: 3355, type: !194)
!8469 = !DILocalVariable(name: "D", scope: !8466, file: !1000, line: 3357, type: !1170)
!8470 = !DILocalVariable(name: "status", scope: !8466, file: !1000, line: 3358, type: !970)
!8471 = !DILocation(line: 0, scope: !8466)
!8472 = !DILocation(line: 3366, column: 12, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8466, file: !1000, line: 3366, column: 9)
!8474 = !DILocation(line: 3366, column: 17, scope: !8473)
!8475 = !DILocation(line: 3366, column: 9, scope: !8473)
!8476 = !DILocation(line: 3366, column: 9, scope: !8466)
!8477 = !DILocation(line: 3357, column: 25, scope: !8466)
!8478 = !DILocation(line: 3367, column: 18, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !8473, file: !1000, line: 3366, column: 33)
!8480 = !DILocation(line: 3368, column: 25, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8479, file: !1000, line: 3368, column: 13)
!8482 = !DILocation(line: 3368, column: 22, scope: !8481)
!8483 = !DILocation(line: 3368, column: 20, scope: !8481)
!8484 = !DILocation(line: 3368, column: 13, scope: !8479)
!8485 = !DILocation(line: 3373, column: 5, scope: !8466)
!8486 = !DILocation(line: 3374, column: 1, scope: !8466)
!8487 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1000, file: !1000, line: 3044, type: !8488, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8490)
!8488 = !DISubroutineType(types: !8489)
!8489 = !{!858, !194, !175, !378}
!8490 = !{!8491, !8492, !8493, !8494, !8495, !8496, !8497, !8498}
!8491 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8487, file: !1000, line: 3044, type: !194)
!8492 = !DILocalVariable(name: "addr", arg: 2, scope: !8487, file: !1000, line: 3044, type: !175)
!8493 = !DILocalVariable(name: "data", arg: 3, scope: !8487, file: !1000, line: 3044, type: !378)
!8494 = !DILocalVariable(name: "savedMask", scope: !8487, file: !1000, line: 3046, type: !175)
!8495 = !DILocalVariable(name: "D", scope: !8487, file: !1000, line: 3047, type: !1170)
!8496 = !DILocalVariable(name: "result", scope: !8487, file: !1000, line: 3048, type: !858)
!8497 = !DILocalVariable(name: "check_data", scope: !8487, file: !1000, line: 3049, type: !378)
!8498 = !DILocalVariable(name: "status_busy", scope: !8487, file: !1000, line: 3050, type: !970)
!8499 = !DILocation(line: 0, scope: !8487)
!8500 = !DILocation(line: 3047, column: 43, scope: !8487)
!8501 = !DILocation(line: 3053, column: 47, scope: !8487)
!8502 = !DILocation(line: 3053, column: 52, scope: !8487)
!8503 = !DILocation(line: 3053, column: 19, scope: !8487)
!8504 = !DILocation(line: 3056, column: 9, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8487, file: !1000, line: 3056, column: 9)
!8506 = !DILocation(line: 3056, column: 9, scope: !8487)
!8507 = !DILocation(line: 3058, column: 9, scope: !8508)
!8508 = distinct !DILexicalBlock(scope: !8509, file: !1000, line: 3058, column: 9)
!8509 = distinct !DILexicalBlock(scope: !8510, file: !1000, line: 3058, column: 9)
!8510 = distinct !DILexicalBlock(scope: !8505, file: !1000, line: 3056, column: 28)
!8511 = !DILocation(line: 3058, column: 9, scope: !8509)
!8512 = !DILocation(line: 3058, column: 9, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8508, file: !1000, line: 3058, column: 9)
!8514 = !DILocation(line: 3060, column: 9, scope: !8510)
!8515 = !DILocation(line: 3062, column: 29, scope: !8510)
!8516 = !DILocation(line: 3063, column: 5, scope: !8510)
!8517 = !DILocation(line: 3065, column: 38, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8505, file: !1000, line: 3065, column: 15)
!8519 = !DILocation(line: 3065, column: 35, scope: !8518)
!8520 = !DILocation(line: 3065, column: 33, scope: !8518)
!8521 = !DILocation(line: 3065, column: 17, scope: !8518)
!8522 = !DILocation(line: 3065, column: 15, scope: !8505)
!8523 = !DILocation(line: 3066, column: 21, scope: !8524)
!8524 = distinct !DILexicalBlock(scope: !8518, file: !1000, line: 3065, column: 62)
!8525 = !DILocation(line: 3068, column: 9, scope: !8524)
!8526 = !DILocation(line: 3071, column: 23, scope: !8524)
!8527 = !DILocation(line: 3071, column: 22, scope: !8524)
!8528 = !DILocation(line: 3073, column: 24, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8524, file: !1000, line: 3073, column: 13)
!8530 = !DILocation(line: 3088, column: 9, scope: !8524)
!8531 = !DILocation(line: 3092, column: 13, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8533, file: !1000, line: 3092, column: 13)
!8533 = distinct !DILexicalBlock(scope: !8487, file: !1000, line: 3091, column: 9)
!8534 = !DILocation(line: 3092, column: 33, scope: !8532)
!8535 = !DILocation(line: 3092, column: 13, scope: !8533)
!8536 = !DILocation(line: 3106, column: 5, scope: !8487)
!8537 = !DILocation(line: 3107, column: 1, scope: !8487)
!8538 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1000, file: !1000, line: 3497, type: !8539, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8541)
!8539 = !DISubroutineType(types: !8540)
!8540 = !{null, !1170, !175}
!8541 = !{!8542, !8543, !8544}
!8542 = !DILocalVariable(name: "D", arg: 1, scope: !8538, file: !1000, line: 3497, type: !1170)
!8543 = !DILocalVariable(name: "addr", arg: 2, scope: !8538, file: !1000, line: 3497, type: !175)
!8544 = !DILocalVariable(name: "savedMask", scope: !8538, file: !1000, line: 3499, type: !175)
!8545 = !DILocation(line: 0, scope: !8538)
!8546 = !DILocation(line: 3501, column: 14, scope: !8547)
!8547 = distinct !DILexicalBlock(scope: !8538, file: !1000, line: 3501, column: 9)
!8548 = !DILocation(line: 3501, column: 25, scope: !8547)
!8549 = !DILocation(line: 3501, column: 9, scope: !8538)
!8550 = !DILocation(line: 3502, column: 9, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8547, file: !1000, line: 3501, column: 51)
!8552 = !DILocation(line: 3503, column: 5, scope: !8551)
!8553 = !DILocation(line: 3507, column: 17, scope: !8538)
!8554 = !DILocation(line: 3516, column: 5, scope: !8538)
!8555 = !DILocation(line: 3517, column: 31, scope: !8538)
!8556 = !DILocation(line: 3517, column: 38, scope: !8538)
!8557 = !DILocation(line: 3517, column: 43, scope: !8538)
!8558 = !DILocation(line: 3517, column: 59, scope: !8538)
!8559 = !DILocation(line: 3517, column: 56, scope: !8538)
!8560 = !DILocation(line: 3517, column: 5, scope: !8538)
!8561 = !DILocation(line: 3523, column: 5, scope: !8538)
!8562 = !DILocation(line: 3524, column: 1, scope: !8538)
!8563 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1000, file: !1000, line: 2018, type: !7677, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8564)
!8564 = !{!8565, !8566, !8567}
!8565 = !DILocalVariable(name: "driver", arg: 1, scope: !8563, file: !1000, line: 2018, type: !7679)
!8566 = !DILocalVariable(name: "D", arg: 2, scope: !8563, file: !1000, line: 2018, type: !1170)
!8567 = !DILocalVariable(name: "result", scope: !8563, file: !1000, line: 2020, type: !858)
!8568 = !DILocation(line: 0, scope: !8563)
!8569 = !DILocation(line: 2022, column: 13, scope: !8563)
!8570 = !DILocation(line: 2022, column: 5, scope: !8563)
!8571 = !DILocation(line: 2031, column: 16, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8563, file: !1000, line: 2022, column: 31)
!8573 = !DILocation(line: 2031, column: 27, scope: !8572)
!8574 = !DILocation(line: 2033, column: 22, scope: !8572)
!8575 = !DILocation(line: 2034, column: 13, scope: !8572)
!8576 = !DILocation(line: 2049, column: 16, scope: !8572)
!8577 = !DILocation(line: 2049, column: 27, scope: !8572)
!8578 = !DILocation(line: 2051, column: 23, scope: !8572)
!8579 = !DILocation(line: 2053, column: 13, scope: !8572)
!8580 = !DILocation(line: 2058, column: 22, scope: !8572)
!8581 = !DILocation(line: 2059, column: 13, scope: !8572)
!8582 = !DILocation(line: 2079, column: 13, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8584, file: !1000, line: 2079, column: 13)
!8584 = distinct !DILexicalBlock(scope: !8585, file: !1000, line: 2079, column: 13)
!8585 = distinct !DILexicalBlock(scope: !8572, file: !1000, line: 2079, column: 13)
!8586 = !DILocation(line: 2083, column: 5, scope: !8563)
!8587 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1000, file: !1000, line: 2100, type: !8588, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8590)
!8588 = !DISubroutineType(types: !8589)
!8589 = !{!858, !7679, !1170, !175, !175}
!8590 = !{!8591, !8592, !8593, !8594, !8595}
!8591 = !DILocalVariable(name: "driver", arg: 1, scope: !8587, file: !1000, line: 2100, type: !7679)
!8592 = !DILocalVariable(name: "D", arg: 2, scope: !8587, file: !1000, line: 2100, type: !1170)
!8593 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !8587, file: !1000, line: 2100, type: !175)
!8594 = !DILocalVariable(name: "parameter", arg: 4, scope: !8587, file: !1000, line: 2100, type: !175)
!8595 = !DILocalVariable(name: "result", scope: !8587, file: !1000, line: 2102, type: !858)
!8596 = !DILocation(line: 0, scope: !8587)
!8597 = !DILocation(line: 2105, column: 16, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8587, file: !1000, line: 2105, column: 9)
!8599 = !DILocation(line: 2105, column: 24, scope: !8598)
!8600 = !DILocation(line: 2109, column: 12, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8587, file: !1000, line: 2109, column: 9)
!8602 = !DILocation(line: 2109, column: 16, scope: !8601)
!8603 = !DILocation(line: 2109, column: 24, scope: !8601)
!8604 = !DILocation(line: 2109, column: 30, scope: !8601)
!8605 = !DILocation(line: 2109, column: 40, scope: !8601)
!8606 = !DILocation(line: 2109, column: 9, scope: !8587)
!8607 = !DILocation(line: 2118, column: 19, scope: !8587)
!8608 = !DILocation(line: 2118, column: 8, scope: !8587)
!8609 = !DILocation(line: 2118, column: 17, scope: !8587)
!8610 = !DILocation(line: 2119, column: 23, scope: !8587)
!8611 = !DILocation(line: 2119, column: 8, scope: !8587)
!8612 = !DILocation(line: 2119, column: 21, scope: !8587)
!8613 = !DILocation(line: 2122, column: 5, scope: !8587)
!8614 = !DILocation(line: 2125, column: 8, scope: !8587)
!8615 = !DILocation(line: 2125, column: 13, scope: !8587)
!8616 = !DILocation(line: 2125, column: 24, scope: !8587)
!8617 = !DILocation(line: 2126, column: 26, scope: !8587)
!8618 = !DILocation(line: 2126, column: 5, scope: !8587)
!8619 = !DILocation(line: 2128, column: 9, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8587, file: !1000, line: 2128, column: 9)
!8621 = !DILocation(line: 2128, column: 31, scope: !8620)
!8622 = !DILocation(line: 2128, column: 60, scope: !8620)
!8623 = !DILocation(line: 2128, column: 9, scope: !8587)
!8624 = !DILocation(line: 2129, column: 12, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8620, file: !1000, line: 2128, column: 110)
!8626 = !DILocation(line: 2129, column: 17, scope: !8625)
!8627 = !DILocation(line: 2129, column: 28, scope: !8625)
!8628 = !DILocation(line: 2130, column: 9, scope: !8625)
!8629 = !DILocation(line: 2131, column: 5, scope: !8625)
!8630 = !DILocation(line: 2134, column: 14, scope: !8587)
!8631 = !DILocation(line: 2136, column: 5, scope: !8587)
!8632 = !DILocation(line: 2137, column: 1, scope: !8587)
!8633 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1000, file: !1000, line: 3387, type: !8634, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8636)
!8634 = !DISubroutineType(types: !8635)
!8635 = !{null, !1170, !680}
!8636 = !{!8637, !8638, !8639}
!8637 = !DILocalVariable(name: "D", arg: 1, scope: !8633, file: !1000, line: 3387, type: !1170)
!8638 = !DILocalVariable(name: "id", arg: 2, scope: !8633, file: !1000, line: 3387, type: !680)
!8639 = !DILocalVariable(name: "cmd", scope: !8633, file: !1000, line: 3389, type: !378)
!8640 = !DILocation(line: 0, scope: !8633)
!8641 = !DILocation(line: 3389, column: 5, scope: !8633)
!8642 = !DILocation(line: 3405, column: 9, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8633, file: !1000, line: 3405, column: 9)
!8644 = !DILocation(line: 3405, column: 21, scope: !8643)
!8645 = !DILocation(line: 0, scope: !8643)
!8646 = !DILocation(line: 3405, column: 9, scope: !8633)
!8647 = !DILocation(line: 3411, column: 31, scope: !8633)
!8648 = !DILocation(line: 3411, column: 5, scope: !8633)
!8649 = !DILocation(line: 3412, column: 1, scope: !8633)
!8650 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1000, file: !1000, line: 3585, type: !8651, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !999, retainedNodes: !8653)
!8651 = !DISubroutineType(types: !8652)
!8652 = !{null, !6448, !680, !680, !6448, !6448}
!8653 = !{!8654, !8655, !8656, !8657, !8658, !8659}
!8654 = !DILocalVariable(name: "CS", arg: 1, scope: !8650, file: !1000, line: 3585, type: !6448)
!8655 = !DILocalVariable(name: "cmd", arg: 2, scope: !8650, file: !1000, line: 3585, type: !680)
!8656 = !DILocalVariable(name: "data", arg: 3, scope: !8650, file: !1000, line: 3585, type: !680)
!8657 = !DILocalVariable(name: "outl", arg: 4, scope: !8650, file: !1000, line: 3585, type: !6448)
!8658 = !DILocalVariable(name: "inl", arg: 5, scope: !8650, file: !1000, line: 3585, type: !6448)
!8659 = !DILocalVariable(name: "savedMask", scope: !8650, file: !1000, line: 3587, type: !175)
!8660 = !DILocation(line: 0, scope: !8650)
!8661 = !DILocation(line: 3589, column: 17, scope: !8650)
!8662 = !DILocation(line: 3590, column: 5, scope: !8650)
!8663 = !DILocation(line: 3591, column: 5, scope: !8650)
!8664 = !DILocation(line: 3593, column: 1, scope: !8650)
!8665 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1325, file: !1325, line: 110, type: !6926, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1324, retainedNodes: !8666)
!8666 = !{!8667, !8668, !8669, !8670}
!8667 = !DILocalVariable(name: "id", arg: 1, scope: !8665, file: !1325, line: 110, type: !680)
!8668 = !DILocalVariable(name: "i", scope: !8665, file: !1325, line: 114, type: !858)
!8669 = !DILocalVariable(name: "j", scope: !8665, file: !1325, line: 114, type: !858)
!8670 = !DILocalVariable(name: "id_list", scope: !8665, file: !1325, line: 115, type: !8671)
!8671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8672, size: 32)
!8672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!8673 = !DILocation(line: 0, scope: !8665)
!8674 = !DILocation(line: 119, column: 5, scope: !8675)
!8675 = distinct !DILexicalBlock(scope: !8665, file: !1325, line: 119, column: 5)
!8676 = !DILocation(line: 119, column: 46, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8675, file: !1325, line: 119, column: 5)
!8678 = !DILocation(line: 119, column: 19, scope: !8677)
!8679 = distinct !{!8679, !8674, !8680}
!8680 = !DILocation(line: 131, column: 5, scope: !8675)
!8681 = !DILocation(line: 121, column: 23, scope: !8682)
!8682 = distinct !DILexicalBlock(scope: !8683, file: !1325, line: 121, column: 9)
!8683 = distinct !DILexicalBlock(scope: !8684, file: !1325, line: 121, column: 9)
!8684 = distinct !DILexicalBlock(scope: !8677, file: !1325, line: 119, column: 50)
!8685 = !DILocation(line: 121, column: 9, scope: !8683)
!8686 = !DILocation(line: 122, column: 17, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8688, file: !1325, line: 122, column: 17)
!8688 = distinct !DILexicalBlock(scope: !8682, file: !1325, line: 121, column: 51)
!8689 = !DILocation(line: 122, column: 37, scope: !8687)
!8690 = !DILocation(line: 122, column: 34, scope: !8687)
!8691 = !DILocation(line: 122, column: 17, scope: !8688)
!8692 = !DILocation(line: 121, column: 47, scope: !8682)
!8693 = distinct !{!8693, !8685, !8694}
!8694 = !DILocation(line: 125, column: 9, scope: !8683)
!8695 = !DILocation(line: 0, scope: !8683)
!8696 = !DILocation(line: 127, column: 15, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8684, file: !1325, line: 127, column: 13)
!8698 = !DILocation(line: 127, column: 13, scope: !8684)
!8699 = !DILocation(line: 134, column: 1, scope: !8665)
!8700 = distinct !DISubprogram(name: "CMEM_Index", scope: !1325, file: !1325, line: 153, type: !5962, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1324, retainedNodes: !8701)
!8701 = !{!8702, !8703, !8704, !8711}
!8702 = !DILocalVariable(name: "i", scope: !8700, file: !1325, line: 156, type: !858)
!8703 = !DILocalVariable(name: "j", scope: !8700, file: !1325, line: 156, type: !858)
!8704 = !DILocalVariable(name: "id", scope: !8700, file: !1325, line: 157, type: !8705)
!8705 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1396, line: 89, baseType: !8706)
!8706 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1396, line: 86, size: 64, elements: !8707)
!8707 = !{!8708, !8709}
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !8706, file: !1396, line: 87, baseType: !1409, size: 64)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !8706, file: !1396, line: 88, baseType: !8710, size: 64)
!8710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 64, elements: !381)
!8711 = !DILocalVariable(name: "id_list", scope: !8700, file: !1325, line: 158, type: !8671)
!8712 = !DILocation(line: 157, column: 5, scope: !8700)
!8713 = !DILocation(line: 157, column: 17, scope: !8700)
!8714 = !DILocation(line: 0, scope: !8700)
!8715 = !DILocation(line: 161, column: 9, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8700, file: !1325, line: 161, column: 9)
!8717 = !DILocation(line: 161, column: 20, scope: !8716)
!8718 = !DILocation(line: 161, column: 9, scope: !8700)
!8719 = !DILocation(line: 172, column: 58, scope: !8700)
!8720 = !DILocation(line: 172, column: 5, scope: !8700)
!8721 = !DILocation(line: 178, column: 5, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8700, file: !1325, line: 178, column: 5)
!8723 = !DILocation(line: 180, column: 23, scope: !8724)
!8724 = distinct !DILexicalBlock(scope: !8725, file: !1325, line: 180, column: 9)
!8725 = distinct !DILexicalBlock(scope: !8726, file: !1325, line: 180, column: 9)
!8726 = distinct !DILexicalBlock(scope: !8727, file: !1325, line: 178, column: 53)
!8727 = distinct !DILexicalBlock(scope: !8722, file: !1325, line: 178, column: 5)
!8728 = !DILocation(line: 180, column: 9, scope: !8725)
!8729 = !DILocation(line: 181, column: 17, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8731, file: !1325, line: 181, column: 17)
!8731 = distinct !DILexicalBlock(scope: !8724, file: !1325, line: 180, column: 51)
!8732 = !DILocation(line: 181, column: 37, scope: !8730)
!8733 = !DILocation(line: 181, column: 34, scope: !8730)
!8734 = !DILocation(line: 181, column: 17, scope: !8731)
!8735 = !DILocation(line: 180, column: 47, scope: !8724)
!8736 = distinct !{!8736, !8728, !8737}
!8737 = !DILocation(line: 184, column: 9, scope: !8725)
!8738 = !DILocation(line: 0, scope: !8725)
!8739 = !DILocation(line: 186, column: 15, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8726, file: !1325, line: 186, column: 13)
!8741 = !DILocation(line: 186, column: 13, scope: !8726)
!8742 = !DILocation(line: 188, column: 26, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8740, file: !1325, line: 186, column: 41)
!8744 = !DILocation(line: 188, column: 24, scope: !8743)
!8745 = !DILocation(line: 189, column: 13, scope: !8743)
!8746 = !DILocation(line: 178, column: 46, scope: !8727)
!8747 = !DILocation(line: 178, column: 19, scope: !8727)
!8748 = distinct !{!8748, !8721, !8749}
!8749 = !DILocation(line: 191, column: 5, scope: !8722)
!8750 = !DILocation(line: 222, column: 12, scope: !8700)
!8751 = !DILocation(line: 223, column: 1, scope: !8700)
!8752 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1325, file: !1325, line: 240, type: !8753, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1324, retainedNodes: !8755)
!8753 = !DISubroutineType(types: !8754)
!8754 = !{!8671, !175}
!8755 = !{!8756}
!8756 = !DILocalVariable(name: "index", arg: 1, scope: !8752, file: !1325, line: 240, type: !175)
!8757 = !DILocation(line: 0, scope: !8752)
!8758 = !DILocation(line: 242, column: 13, scope: !8752)
!8759 = !DILocation(line: 242, column: 5, scope: !8752)
!8760 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1325, file: !1325, line: 254, type: !8761, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1324, retainedNodes: !8763)
!8761 = !DISubroutineType(types: !8762)
!8762 = !{null, !6448, !194, !969}
!8763 = !{!8764, !8765, !8766, !8767, !8769, !8770}
!8764 = !DILocalVariable(name: "CS", arg: 1, scope: !8760, file: !1325, line: 254, type: !6448)
!8765 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !8760, file: !1325, line: 254, type: !194)
!8766 = !DILocalVariable(name: "flashid", arg: 3, scope: !8760, file: !1325, line: 254, type: !969)
!8767 = !DILocalVariable(name: "cmd", scope: !8768, file: !1325, line: 258, type: !378)
!8768 = distinct !DILexicalBlock(scope: !8760, file: !1325, line: 257, column: 5)
!8769 = !DILocalVariable(name: "id", scope: !8768, file: !1325, line: 258, type: !1260)
!8770 = !DILocalVariable(name: "i", scope: !8768, file: !1325, line: 258, type: !378)
!8771 = !DILocation(line: 0, scope: !8760)
!8772 = !DILocation(line: 258, column: 9, scope: !8768)
!8773 = !DILocation(line: 258, column: 22, scope: !8768)
!8774 = !DILocation(line: 0, scope: !8768)
!8775 = !DILocation(line: 260, column: 13, scope: !8768)
!8776 = !DILocation(line: 261, column: 9, scope: !8768)
!8777 = !DILocation(line: 263, column: 13, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8768, file: !1325, line: 263, column: 13)
!8779 = !DILocation(line: 263, column: 27, scope: !8778)
!8780 = !DILocation(line: 263, column: 48, scope: !8778)
!8781 = !DILocation(line: 263, column: 13, scope: !8768)
!8782 = !DILocation(line: 264, column: 17, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8778, file: !1325, line: 263, column: 95)
!8784 = !DILocation(line: 265, column: 13, scope: !8783)
!8785 = !DILocation(line: 266, column: 9, scope: !8783)
!8786 = !DILocation(line: 268, column: 9, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8768, file: !1325, line: 268, column: 9)
!8788 = !DILocation(line: 269, column: 26, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8790, file: !1325, line: 268, column: 50)
!8790 = distinct !DILexicalBlock(scope: !8787, file: !1325, line: 268, column: 9)
!8791 = !DILocation(line: 269, column: 13, scope: !8789)
!8792 = !DILocation(line: 269, column: 24, scope: !8789)
!8793 = !DILocation(line: 268, column: 46, scope: !8790)
!8794 = !DILocation(line: 268, column: 23, scope: !8790)
!8795 = distinct !{!8795, !8786, !8796}
!8796 = !DILocation(line: 270, column: 9, scope: !8787)
!8797 = !DILocation(line: 271, column: 5, scope: !8760)
!8798 = !DILocation(line: 272, column: 5, scope: !8760)
!8799 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1325, file: !1325, line: 285, type: !6926, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1324, retainedNodes: !8800)
!8800 = !{!8801, !8802, !8803, !8804}
!8801 = !DILocalVariable(name: "id", arg: 1, scope: !8799, file: !1325, line: 285, type: !680)
!8802 = !DILocalVariable(name: "i", scope: !8799, file: !1325, line: 289, type: !858)
!8803 = !DILocalVariable(name: "j", scope: !8799, file: !1325, line: 289, type: !858)
!8804 = !DILocalVariable(name: "id_list", scope: !8799, file: !1325, line: 290, type: !8671)
!8805 = !DILocation(line: 0, scope: !8799)
!8806 = !DILocation(line: 294, column: 5, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8799, file: !1325, line: 294, column: 5)
!8808 = !DILocation(line: 294, column: 46, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8807, file: !1325, line: 294, column: 5)
!8810 = !DILocation(line: 294, column: 19, scope: !8809)
!8811 = distinct !{!8811, !8806, !8812}
!8812 = !DILocation(line: 306, column: 5, scope: !8807)
!8813 = !DILocation(line: 296, column: 23, scope: !8814)
!8814 = distinct !DILexicalBlock(scope: !8815, file: !1325, line: 296, column: 9)
!8815 = distinct !DILexicalBlock(scope: !8816, file: !1325, line: 296, column: 9)
!8816 = distinct !DILexicalBlock(scope: !8809, file: !1325, line: 294, column: 53)
!8817 = !DILocation(line: 296, column: 9, scope: !8815)
!8818 = !DILocation(line: 297, column: 17, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !1325, line: 297, column: 17)
!8820 = distinct !DILexicalBlock(scope: !8814, file: !1325, line: 296, column: 51)
!8821 = !DILocation(line: 297, column: 37, scope: !8819)
!8822 = !DILocation(line: 297, column: 34, scope: !8819)
!8823 = !DILocation(line: 297, column: 17, scope: !8820)
!8824 = !DILocation(line: 296, column: 47, scope: !8814)
!8825 = distinct !{!8825, !8817, !8826}
!8826 = !DILocation(line: 300, column: 9, scope: !8815)
!8827 = !DILocation(line: 0, scope: !8815)
!8828 = !DILocation(line: 302, column: 15, scope: !8829)
!8829 = distinct !DILexicalBlock(scope: !8816, file: !1325, line: 302, column: 13)
!8830 = !DILocation(line: 302, column: 13, scope: !8816)
!8831 = !DILocation(line: 310, column: 1, scope: !8799)
!8832 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1325, file: !1325, line: 328, type: !5962, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1324, retainedNodes: !8833)
!8833 = !{!8834, !8835, !8836, !8837}
!8834 = !DILocalVariable(name: "i", scope: !8832, file: !1325, line: 331, type: !858)
!8835 = !DILocalVariable(name: "j", scope: !8832, file: !1325, line: 331, type: !858)
!8836 = !DILocalVariable(name: "id", scope: !8832, file: !1325, line: 332, type: !8705)
!8837 = !DILocalVariable(name: "id_list", scope: !8832, file: !1325, line: 333, type: !8671)
!8838 = !DILocation(line: 332, column: 5, scope: !8832)
!8839 = !DILocation(line: 332, column: 17, scope: !8832)
!8840 = !DILocation(line: 0, scope: !8832)
!8841 = !DILocation(line: 336, column: 9, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8832, file: !1325, line: 336, column: 9)
!8843 = !DILocation(line: 336, column: 28, scope: !8842)
!8844 = !DILocation(line: 336, column: 9, scope: !8832)
!8845 = !DILocation(line: 344, column: 60, scope: !8832)
!8846 = !DILocation(line: 344, column: 5, scope: !8832)
!8847 = !DILocation(line: 350, column: 5, scope: !8848)
!8848 = distinct !DILexicalBlock(scope: !8832, file: !1325, line: 350, column: 5)
!8849 = !DILocation(line: 352, column: 23, scope: !8850)
!8850 = distinct !DILexicalBlock(scope: !8851, file: !1325, line: 352, column: 9)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !1325, line: 352, column: 9)
!8852 = distinct !DILexicalBlock(scope: !8853, file: !1325, line: 350, column: 53)
!8853 = distinct !DILexicalBlock(scope: !8848, file: !1325, line: 350, column: 5)
!8854 = !DILocation(line: 352, column: 9, scope: !8851)
!8855 = !DILocation(line: 353, column: 17, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8857, file: !1325, line: 353, column: 17)
!8857 = distinct !DILexicalBlock(scope: !8850, file: !1325, line: 352, column: 51)
!8858 = !DILocation(line: 353, column: 37, scope: !8856)
!8859 = !DILocation(line: 353, column: 34, scope: !8856)
!8860 = !DILocation(line: 353, column: 17, scope: !8857)
!8861 = !DILocation(line: 352, column: 47, scope: !8850)
!8862 = distinct !{!8862, !8854, !8863}
!8863 = !DILocation(line: 356, column: 9, scope: !8851)
!8864 = !DILocation(line: 0, scope: !8851)
!8865 = !DILocation(line: 358, column: 15, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8852, file: !1325, line: 358, column: 13)
!8867 = !DILocation(line: 358, column: 13, scope: !8852)
!8868 = !DILocation(line: 360, column: 34, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8866, file: !1325, line: 358, column: 41)
!8870 = !DILocation(line: 360, column: 32, scope: !8869)
!8871 = !DILocation(line: 361, column: 13, scope: !8869)
!8872 = !DILocation(line: 350, column: 46, scope: !8853)
!8873 = !DILocation(line: 350, column: 19, scope: !8853)
!8874 = distinct !{!8874, !8847, !8875}
!8875 = !DILocation(line: 363, column: 5, scope: !8848)
!8876 = !DILocation(line: 364, column: 12, scope: !8832)
!8877 = !DILocation(line: 365, column: 1, scope: !8832)
!8878 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2512, file: !2512, line: 64, type: !8879, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2511, retainedNodes: !8885)
!8879 = !DISubroutineType(types: !8880)
!8880 = !{null, !6448, !8881, !969}
!8881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8882, size: 32)
!8882 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !8883)
!8883 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !8884, line: 158, baseType: !970)
!8884 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!8885 = !{!8886, !8887, !8888, !8889, !8890, !8892, !8893}
!8886 = !DILocalVariable(name: "CS", arg: 1, scope: !8878, file: !2512, line: 64, type: !6448)
!8887 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !8878, file: !2512, line: 64, type: !8881)
!8888 = !DILocalVariable(name: "flashid", arg: 3, scope: !8878, file: !2512, line: 64, type: !969)
!8889 = !DILocalVariable(name: "savedMask", scope: !8878, file: !2512, line: 66, type: !175)
!8890 = !DILocalVariable(name: "cmd", scope: !8891, file: !2512, line: 70, type: !378)
!8891 = distinct !DILexicalBlock(scope: !8878, file: !2512, line: 69, column: 5)
!8892 = !DILocalVariable(name: "id", scope: !8891, file: !2512, line: 70, type: !1260)
!8893 = !DILocalVariable(name: "i", scope: !8891, file: !2512, line: 70, type: !378)
!8894 = !DILocation(line: 0, scope: !8878)
!8895 = !DILocation(line: 70, column: 9, scope: !8891)
!8896 = !DILocation(line: 70, column: 22, scope: !8891)
!8897 = !DILocation(line: 0, scope: !8891)
!8898 = !DILocation(line: 72, column: 13, scope: !8891)
!8899 = !DILocation(line: 73, column: 21, scope: !8891)
!8900 = !DILocation(line: 74, column: 9, scope: !8891)
!8901 = !DILocation(line: 75, column: 9, scope: !8891)
!8902 = !DILocation(line: 77, column: 13, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8891, file: !2512, line: 77, column: 13)
!8904 = !DILocation(line: 77, column: 27, scope: !8903)
!8905 = !DILocation(line: 77, column: 48, scope: !8903)
!8906 = !DILocation(line: 77, column: 13, scope: !8891)
!8907 = !DILocation(line: 78, column: 17, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8903, file: !2512, line: 77, column: 87)
!8909 = !DILocation(line: 79, column: 25, scope: !8908)
!8910 = !DILocation(line: 80, column: 13, scope: !8908)
!8911 = !DILocation(line: 81, column: 13, scope: !8908)
!8912 = !DILocation(line: 82, column: 9, scope: !8908)
!8913 = !DILocation(line: 84, column: 9, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8891, file: !2512, line: 84, column: 9)
!8915 = !DILocation(line: 85, column: 26, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !2512, line: 84, column: 50)
!8917 = distinct !DILexicalBlock(scope: !8914, file: !2512, line: 84, column: 9)
!8918 = !DILocation(line: 85, column: 13, scope: !8916)
!8919 = !DILocation(line: 85, column: 24, scope: !8916)
!8920 = !DILocation(line: 84, column: 46, scope: !8917)
!8921 = !DILocation(line: 84, column: 23, scope: !8917)
!8922 = distinct !{!8922, !8913, !8923}
!8923 = !DILocation(line: 86, column: 9, scope: !8914)
!8924 = !DILocation(line: 87, column: 5, scope: !8878)
!8925 = !DILocation(line: 89, column: 1, scope: !8878)
!8926 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1413, file: !1413, line: 248, type: !3365, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1412, retainedNodes: !210)
!8927 = !DILocation(line: 250, column: 5, scope: !8926)
!8928 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1413, file: !1413, line: 270, type: !3365, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1412, retainedNodes: !210)
!8929 = !DILocation(line: 272, column: 5, scope: !8928)
!8930 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1413, file: !1413, line: 294, type: !208, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1412, retainedNodes: !210)
!8931 = !DILocation(line: 296, column: 5, scope: !8930)
!8932 = !DILocation(line: 297, column: 5, scope: !8930)
!8933 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1413, file: !1413, line: 304, type: !208, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1412, retainedNodes: !210)
!8934 = !DILocation(line: 309, column: 5, scope: !8933)
!8935 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1413, file: !1413, line: 312, type: !208, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1412, retainedNodes: !210)
!8936 = !DILocation(line: 317, column: 5, scope: !8935)
!8937 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1413, file: !1413, line: 334, type: !3365, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1412, retainedNodes: !210)
!8938 = !DILocation(line: 336, column: 5, scope: !8937)
!8939 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1413, file: !1413, line: 353, type: !3365, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1412, retainedNodes: !210)
!8940 = !DILocation(line: 355, column: 5, scope: !8939)
!8941 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1413, file: !1413, line: 374, type: !208, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1412, retainedNodes: !210)
!8942 = !DILocation(line: 376, column: 5, scope: !8941)
!8943 = !DILocation(line: 377, column: 1, scope: !8941)
!8944 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1413, file: !1413, line: 395, type: !3365, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1412, retainedNodes: !210)
!8945 = !DILocation(line: 397, column: 5, scope: !8944)
!8946 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1413, file: !1413, line: 416, type: !3365, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1412, retainedNodes: !210)
!8947 = !DILocation(line: 418, column: 5, scope: !8946)
!8948 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1424, file: !1424, line: 254, type: !3365, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !210)
!8949 = !DILocation(line: 256, column: 32, scope: !8948)
!8950 = !DILocation(line: 257, column: 5, scope: !8948)
!8951 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1424, file: !1424, line: 269, type: !5962, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !210)
!8952 = !DILocation(line: 275, column: 24, scope: !8951)
!8953 = !DILocation(line: 278, column: 24, scope: !8951)
!8954 = !DILocation(line: 278, column: 33, scope: !8951)
!8955 = !DILocation(line: 278, column: 49, scope: !8951)
!8956 = !DILocation(line: 278, column: 22, scope: !8951)
!8957 = !DILocation(line: 281, column: 5, scope: !8951)
!8958 = !DILocation(line: 283, column: 34, scope: !8951)
!8959 = !DILocation(line: 283, column: 23, scope: !8951)
!8960 = !DILocation(line: 286, column: 25, scope: !8951)
!8961 = !DILocation(line: 321, column: 5, scope: !8951)
!8962 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1424, file: !1424, line: 332, type: !5962, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !8963)
!8963 = !{!8964}
!8964 = !DILocalVariable(name: "result", scope: !8962, file: !1424, line: 334, type: !858)
!8965 = !DILocation(line: 340, column: 30, scope: !8962)
!8966 = !DILocation(line: 343, column: 24, scope: !8962)
!8967 = !DILocation(line: 344, column: 18, scope: !8962)
!8968 = !DILocation(line: 348, column: 17, scope: !8962)
!8969 = !DILocation(line: 353, column: 19, scope: !8962)
!8970 = !DILocation(line: 354, column: 18, scope: !8962)
!8971 = !DILocation(line: 354, column: 27, scope: !8962)
!8972 = !DILocation(line: 354, column: 43, scope: !8962)
!8973 = !DILocation(line: 350, column: 14, scope: !8962)
!8974 = !DILocation(line: 0, scope: !8962)
!8975 = !DILocation(line: 356, column: 16, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8962, file: !1424, line: 356, column: 9)
!8977 = !DILocation(line: 395, column: 1, scope: !8962)
!8978 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1424, file: !1424, line: 406, type: !8979, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !210)
!8979 = !DISubroutineType(types: !2464)
!8980 = !DILocation(line: 408, column: 5, scope: !8978)
!8981 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1424, file: !1424, line: 420, type: !8982, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !8984)
!8982 = !DISubroutineType(types: !8983)
!8983 = !{!175, !378}
!8984 = !{!8985, !8986, !8987}
!8985 = !DILocalVariable(name: "CS", arg: 1, scope: !8981, file: !1424, line: 420, type: !378)
!8986 = !DILocalVariable(name: "index", scope: !8981, file: !1424, line: 422, type: !175)
!8987 = !DILocalVariable(name: "list", scope: !8981, file: !1424, line: 423, type: !1741)
!8988 = !DILocation(line: 0, scope: !8981)
!8989 = !DILocation(line: 427, column: 13, scope: !8981)
!8990 = !DILocation(line: 430, column: 34, scope: !8981)
!8991 = !DILocation(line: 430, column: 5, scope: !8981)
!8992 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1424, file: !1424, line: 442, type: !8993, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !8995)
!8993 = !DISubroutineType(types: !8994)
!8994 = !{!175, !175, !1613}
!8995 = !{!8996, !8997, !8998}
!8996 = !DILocalVariable(name: "address", arg: 1, scope: !8992, file: !1424, line: 442, type: !175)
!8997 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !8992, file: !1424, line: 442, type: !1613)
!8998 = !DILocalVariable(name: "i", scope: !8992, file: !1424, line: 444, type: !970)
!8999 = !DILocation(line: 0, scope: !8992)
!9000 = !DILocation(line: 446, column: 23, scope: !8992)
!9001 = !DILocation(line: 448, column: 36, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !1424, line: 448, column: 5)
!9003 = distinct !DILexicalBlock(scope: !8992, file: !1424, line: 448, column: 5)
!9004 = !DILocation(line: 448, column: 41, scope: !9002)
!9005 = !DILocation(line: 448, column: 5, scope: !9003)
!9006 = !DILocation(line: 449, column: 39, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !9008, file: !1424, line: 449, column: 13)
!9008 = distinct !DILexicalBlock(scope: !9002, file: !1424, line: 448, column: 54)
!9009 = !DILocation(line: 449, column: 21, scope: !9007)
!9010 = !DILocation(line: 449, column: 46, scope: !9007)
!9011 = !DILocation(line: 450, column: 46, scope: !9007)
!9012 = !DILocation(line: 450, column: 25, scope: !9007)
!9013 = !DILocation(line: 449, column: 13, scope: !9008)
!9014 = !DILocation(line: 448, column: 48, scope: !9002)
!9015 = !DILocation(line: 448, column: 29, scope: !9002)
!9016 = !DILocation(line: 448, column: 31, scope: !9002)
!9017 = distinct !{!9017, !9005, !9018}
!9018 = !DILocation(line: 453, column: 5, scope: !9003)
!9019 = !DILocation(line: 454, column: 27, scope: !8992)
!9020 = !DILocation(line: 454, column: 5, scope: !8992)
!9021 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1424, file: !1424, line: 462, type: !3113, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9022)
!9022 = !{!9023}
!9023 = !DILocalVariable(name: "address", arg: 1, scope: !9021, file: !1424, line: 462, type: !175)
!9024 = !DILocation(line: 0, scope: !9021)
!9025 = !DILocation(line: 464, column: 45, scope: !9021)
!9026 = !DILocation(line: 464, column: 12, scope: !9021)
!9027 = !DILocation(line: 464, column: 5, scope: !9021)
!9028 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1424, file: !1424, line: 487, type: !3113, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9029)
!9029 = !{!9030, !9031, !9032}
!9030 = !DILocalVariable(name: "address", arg: 1, scope: !9028, file: !1424, line: 487, type: !175)
!9031 = !DILocalVariable(name: "index", scope: !9028, file: !1424, line: 490, type: !175)
!9032 = !DILocalVariable(name: "list", scope: !9028, file: !1424, line: 491, type: !1741)
!9033 = !DILocation(line: 0, scope: !9028)
!9034 = !DILocation(line: 490, column: 22, scope: !9028)
!9035 = !DILocation(line: 495, column: 45, scope: !9028)
!9036 = !DILocation(line: 495, column: 12, scope: !9028)
!9037 = !DILocation(line: 495, column: 5, scope: !9028)
!9038 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1424, file: !1424, line: 517, type: !9039, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9043)
!9039 = !DISubroutineType(types: !9040)
!9040 = !{!858, !9041}
!9041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9042, size: 32)
!9042 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1627)
!9043 = !{!9044, !9045, !9046}
!9044 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !9038, file: !1424, line: 517, type: !9041)
!9045 = !DILocalVariable(name: "result", scope: !9038, file: !1424, line: 519, type: !175)
!9046 = !DILocalVariable(name: "i", scope: !9038, file: !1424, line: 519, type: !175)
!9047 = !DILocation(line: 0, scope: !9038)
!9048 = !DILocation(line: 522, column: 29, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9050, file: !1424, line: 522, column: 5)
!9050 = distinct !DILexicalBlock(scope: !9038, file: !1424, line: 522, column: 5)
!9051 = !DILocation(line: 522, column: 38, scope: !9049)
!9052 = !DILocation(line: 522, column: 5, scope: !9050)
!9053 = !DILocation(line: 523, column: 31, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9049, file: !1424, line: 522, column: 51)
!9055 = !DILocation(line: 523, column: 37, scope: !9054)
!9056 = !DILocation(line: 523, column: 16, scope: !9054)
!9057 = !DILocation(line: 522, column: 45, scope: !9049)
!9058 = distinct !{!9058, !9052, !9059}
!9059 = !DILocation(line: 524, column: 5, scope: !9050)
!9060 = !DILocation(line: 525, column: 5, scope: !9038)
!9061 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1424, file: !1424, line: 535, type: !9062, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9064)
!9062 = !DISubroutineType(types: !9063)
!9063 = !{!175, !175, !175, !1439, !1613}
!9064 = !{!9065, !9066, !9067, !9068, !9069, !9070, !9071, !9072, !9073}
!9065 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9061, file: !1424, line: 536, type: !175)
!9066 = !DILocalVariable(name: "length", arg: 2, scope: !9061, file: !1424, line: 537, type: !175)
!9067 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9061, file: !1424, line: 538, type: !1439)
!9068 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !9061, file: !1424, line: 539, type: !1613)
!9069 = !DILocalVariable(name: "addr", scope: !9061, file: !1424, line: 541, type: !175)
!9070 = !DILocalVariable(name: "ptr", scope: !9061, file: !1424, line: 541, type: !175)
!9071 = !DILocalVariable(name: "blksize", scope: !9061, file: !1424, line: 541, type: !175)
!9072 = !DILocalVariable(name: "total_blocks", scope: !9061, file: !1424, line: 541, type: !175)
!9073 = !DILocalVariable(name: "endaddr", scope: !9061, file: !1424, line: 542, type: !175)
!9074 = !DILocation(line: 0, scope: !9061)
!9075 = !DILocation(line: 542, column: 33, scope: !9061)
!9076 = !DILocation(line: 557, column: 59, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9078, file: !1424, line: 557, column: 5)
!9078 = distinct !DILexicalBlock(scope: !9061, file: !1424, line: 557, column: 5)
!9079 = !DILocation(line: 557, column: 5, scope: !9078)
!9080 = !DILocation(line: 560, column: 19, scope: !9081)
!9081 = distinct !DILexicalBlock(scope: !9077, file: !1424, line: 559, column: 5)
!9082 = !DILocation(line: 562, column: 26, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9081, file: !1424, line: 562, column: 13)
!9084 = !DILocation(line: 0, scope: !9083)
!9085 = !DILocation(line: 562, column: 13, scope: !9081)
!9086 = !DILocation(line: 563, column: 39, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9083, file: !1424, line: 562, column: 34)
!9088 = !DILocation(line: 564, column: 29, scope: !9087)
!9089 = !DILocation(line: 564, column: 42, scope: !9087)
!9090 = !DILocation(line: 565, column: 9, scope: !9087)
!9091 = !DILocation(line: 567, column: 45, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9083, file: !1424, line: 567, column: 18)
!9093 = !DILocation(line: 567, column: 26, scope: !9092)
!9094 = !DILocation(line: 567, column: 18, scope: !9083)
!9095 = !DILocation(line: 568, column: 29, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9092, file: !1424, line: 567, column: 59)
!9097 = !DILocation(line: 568, column: 41, scope: !9096)
!9098 = !DILocation(line: 569, column: 9, scope: !9096)
!9099 = !DILocation(line: 572, column: 16, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9092, file: !1424, line: 571, column: 14)
!9101 = !DILocation(line: 573, column: 21, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9100, file: !1424, line: 573, column: 17)
!9103 = !DILocation(line: 573, column: 17, scope: !9100)
!9104 = !DILocation(line: 576, column: 29, scope: !9100)
!9105 = !DILocation(line: 576, column: 39, scope: !9100)
!9106 = !DILocation(line: 577, column: 29, scope: !9100)
!9107 = !DILocation(line: 577, column: 42, scope: !9100)
!9108 = !DILocation(line: 0, scope: !9078)
!9109 = !DILocation(line: 579, column: 14, scope: !9081)
!9110 = !DILocation(line: 580, column: 21, scope: !9081)
!9111 = distinct !{!9111, !9079, !9112}
!9112 = !DILocation(line: 581, column: 5, scope: !9078)
!9113 = !DILocation(line: 586, column: 1, scope: !9061)
!9114 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1424, file: !1424, line: 593, type: !9115, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9117)
!9115 = !DISubroutineType(types: !9116)
!9116 = !{!858, !175, !175, !1439}
!9117 = !{!9118, !9119, !9120}
!9118 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9114, file: !1424, line: 593, type: !175)
!9119 = !DILocalVariable(name: "length", arg: 2, scope: !9114, file: !1424, line: 593, type: !175)
!9120 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9114, file: !1424, line: 593, type: !1439)
!9121 = !DILocation(line: 0, scope: !9114)
!9122 = !DILocation(line: 595, column: 12, scope: !9114)
!9123 = !DILocation(line: 595, column: 5, scope: !9114)
!9124 = !DILocation(line: 597, column: 81, scope: !9114)
!9125 = !DILocation(line: 597, column: 12, scope: !9114)
!9126 = !DILocation(line: 597, column: 5, scope: !9114)
!9127 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1424, file: !1424, line: 606, type: !9115, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9128)
!9128 = !{!9129, !9130, !9131}
!9129 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9127, file: !1424, line: 606, type: !175)
!9130 = !DILocalVariable(name: "length", arg: 2, scope: !9127, file: !1424, line: 606, type: !175)
!9131 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9127, file: !1424, line: 606, type: !1439)
!9132 = !DILocation(line: 0, scope: !9127)
!9133 = !DILocation(line: 624, column: 5, scope: !9127)
!9134 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1424, file: !1424, line: 637, type: !9115, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9135)
!9135 = !{!9136, !9137, !9138, !9139, !9140}
!9136 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9134, file: !1424, line: 637, type: !175)
!9137 = !DILocalVariable(name: "length", arg: 2, scope: !9134, file: !1424, line: 637, type: !175)
!9138 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9134, file: !1424, line: 637, type: !1439)
!9139 = !DILocalVariable(name: "index", scope: !9134, file: !1424, line: 642, type: !175)
!9140 = !DILocalVariable(name: "list", scope: !9134, file: !1424, line: 644, type: !1741)
!9141 = !DILocation(line: 0, scope: !9134)
!9142 = !DILocation(line: 642, column: 22, scope: !9134)
!9143 = !DILocation(line: 648, column: 81, scope: !9134)
!9144 = !DILocation(line: 648, column: 12, scope: !9134)
!9145 = !DILocation(line: 648, column: 5, scope: !9134)
!9146 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1424, file: !1424, line: 658, type: !9115, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9147)
!9147 = !{!9148, !9149, !9150}
!9148 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9146, file: !1424, line: 658, type: !175)
!9149 = !DILocalVariable(name: "length", arg: 2, scope: !9146, file: !1424, line: 658, type: !175)
!9150 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9146, file: !1424, line: 658, type: !1439)
!9151 = !DILocation(line: 0, scope: !9146)
!9152 = !DILocation(line: 688, column: 5, scope: !9146)
!9153 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1424, file: !1424, line: 700, type: !6515, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9154)
!9154 = !{!9155, !9156, !9157}
!9155 = !DILocalVariable(name: "CS", arg: 1, scope: !9153, file: !1424, line: 700, type: !6448)
!9156 = !DILocalVariable(name: "index", scope: !9153, file: !1424, line: 705, type: !175)
!9157 = !DILocalVariable(name: "list", scope: !9153, file: !1424, line: 707, type: !1741)
!9158 = !DILocation(line: 0, scope: !9153)
!9159 = !DILocation(line: 705, column: 22, scope: !9153)
!9160 = !DILocation(line: 711, column: 24, scope: !9153)
!9161 = !DILocation(line: 711, column: 5, scope: !9153)
!9162 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1424, file: !1424, line: 721, type: !9163, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9165)
!9163 = !DISubroutineType(types: !9164)
!9164 = !{null, !1659, !938, !175}
!9165 = !{!9166, !9167, !9168}
!9166 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !9162, file: !1424, line: 721, type: !1659)
!9167 = !DILocalVariable(name: "index", arg: 2, scope: !9162, file: !1424, line: 721, type: !938)
!9168 = !DILocalVariable(name: "bankSize", arg: 3, scope: !9162, file: !1424, line: 721, type: !175)
!9169 = !DILocation(line: 0, scope: !9162)
!9170 = !DILocation(line: 723, column: 18, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9162, file: !1424, line: 723, column: 9)
!9172 = !DILocation(line: 723, column: 26, scope: !9171)
!9173 = !DILocation(line: 723, column: 35, scope: !9171)
!9174 = !DILocation(line: 723, column: 9, scope: !9162)
!9175 = !DILocation(line: 724, column: 26, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9171, file: !1424, line: 723, column: 48)
!9177 = !DILocation(line: 724, column: 32, scope: !9176)
!9178 = !DILocation(line: 725, column: 5, scope: !9176)
!9179 = !DILocation(line: 726, column: 18, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9171, file: !1424, line: 725, column: 12)
!9181 = !DILocation(line: 727, column: 26, scope: !9180)
!9182 = !DILocation(line: 727, column: 32, scope: !9180)
!9183 = !DILocation(line: 728, column: 18, scope: !9180)
!9184 = !DILocation(line: 728, column: 26, scope: !9180)
!9185 = !DILocation(line: 728, column: 35, scope: !9180)
!9186 = !DILocation(line: 731, column: 1, scope: !9162)
!9187 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1424, file: !1424, line: 739, type: !9188, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9190)
!9188 = !DISubroutineType(types: !9189)
!9189 = !{!175, !175, !175, !1659, !9041}
!9190 = !{!9191, !9192, !9193, !9194, !9195, !9196, !9197, !9198, !9199}
!9191 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9187, file: !1424, line: 740, type: !175)
!9192 = !DILocalVariable(name: "length", arg: 2, scope: !9187, file: !1424, line: 741, type: !175)
!9193 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !9187, file: !1424, line: 742, type: !1659)
!9194 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !9187, file: !1424, line: 743, type: !9041)
!9195 = !DILocalVariable(name: "Partition", scope: !9187, file: !1424, line: 745, type: !175)
!9196 = !DILocalVariable(name: "Index", scope: !9187, file: !1424, line: 746, type: !858)
!9197 = !DILocalVariable(name: "bankSize", scope: !9187, file: !1424, line: 747, type: !175)
!9198 = !DILocalVariable(name: "NextBankAddr", scope: !9187, file: !1424, line: 748, type: !175)
!9199 = !DILocalVariable(name: "srcBankIdx", scope: !9187, file: !1424, line: 748, type: !175)
!9200 = !DILocation(line: 0, scope: !9187)
!9201 = !DILocation(line: 750, column: 12, scope: !9187)
!9202 = !DILocation(line: 750, column: 5, scope: !9187)
!9203 = !DILocation(line: 752, column: 51, scope: !9204)
!9204 = distinct !DILexicalBlock(scope: !9205, file: !1424, line: 752, column: 5)
!9205 = distinct !DILexicalBlock(scope: !9187, file: !1424, line: 752, column: 5)
!9206 = !DILocation(line: 752, column: 5, scope: !9205)
!9207 = !DILocation(line: 753, column: 51, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9209, file: !1424, line: 753, column: 13)
!9209 = distinct !DILexicalBlock(scope: !9204, file: !1424, line: 752, column: 70)
!9210 = !DILocation(line: 753, column: 24, scope: !9208)
!9211 = !DILocation(line: 753, column: 13, scope: !9209)
!9212 = !DILocation(line: 758, column: 49, scope: !9209)
!9213 = !DILocation(line: 758, column: 22, scope: !9209)
!9214 = !DILocation(line: 760, column: 22, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9209, file: !1424, line: 760, column: 13)
!9216 = !DILocation(line: 760, column: 13, scope: !9209)
!9217 = !DILocation(line: 761, column: 37, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9215, file: !1424, line: 760, column: 39)
!9219 = !DILocation(line: 762, column: 24, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9218, file: !1424, line: 762, column: 17)
!9221 = !DILocation(line: 762, column: 17, scope: !9218)
!9222 = !DILocation(line: 767, column: 33, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9218, file: !1424, line: 767, column: 17)
!9224 = !DILocation(line: 767, column: 42, scope: !9223)
!9225 = !DILocation(line: 767, column: 17, scope: !9218)
!9226 = !DILocation(line: 768, column: 33, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9223, file: !1424, line: 767, column: 55)
!9228 = !DILocation(line: 768, column: 39, scope: !9227)
!9229 = !DILocation(line: 769, column: 13, scope: !9227)
!9230 = !DILocation(line: 770, column: 46, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9232, file: !1424, line: 770, column: 21)
!9232 = distinct !DILexicalBlock(scope: !9223, file: !1424, line: 769, column: 20)
!9233 = !DILocation(line: 770, column: 21, scope: !9232)
!9234 = !DILocation(line: 773, column: 33, scope: !9232)
!9235 = !DILocation(line: 773, column: 39, scope: !9232)
!9236 = !DILocation(line: 774, column: 33, scope: !9232)
!9237 = !DILocation(line: 774, column: 42, scope: !9232)
!9238 = !DILocation(line: 777, column: 22, scope: !9218)
!9239 = !DILocation(line: 778, column: 20, scope: !9218)
!9240 = !DILocation(line: 779, column: 9, scope: !9218)
!9241 = !DILocation(line: 746, column: 13, scope: !9187)
!9242 = !DILocation(line: 752, column: 66, scope: !9204)
!9243 = distinct !{!9243, !9206, !9244}
!9244 = !DILocation(line: 781, column: 5, scope: !9205)
!9245 = !DILocation(line: 784, column: 5, scope: !9187)
!9246 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1424, file: !1424, line: 796, type: !5962, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9247)
!9247 = !{!9248, !9249}
!9248 = !DILocalVariable(name: "result", scope: !9246, file: !1424, line: 798, type: !858)
!9249 = !DILocalVariable(name: "i", scope: !9246, file: !1424, line: 799, type: !858)
!9250 = !DILocation(line: 803, column: 19, scope: !9246)
!9251 = !DILocation(line: 803, column: 28, scope: !9246)
!9252 = !DILocation(line: 803, column: 17, scope: !9246)
!9253 = !DILocation(line: 822, column: 33, scope: !9246)
!9254 = !DILocation(line: 822, column: 56, scope: !9246)
!9255 = !DILocation(line: 822, column: 88, scope: !9246)
!9256 = !DILocation(line: 822, column: 97, scope: !9246)
!9257 = !DILocation(line: 822, column: 5, scope: !9246)
!9258 = !DILocation(line: 829, column: 39, scope: !9246)
!9259 = !DILocation(line: 829, column: 62, scope: !9246)
!9260 = !DILocation(line: 829, column: 14, scope: !9246)
!9261 = !DILocation(line: 0, scope: !9246)
!9262 = !DILocation(line: 834, column: 16, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9246, file: !1424, line: 834, column: 9)
!9264 = !DILocation(line: 834, column: 9, scope: !9246)
!9265 = !DILocation(line: 838, column: 30, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9246, file: !1424, line: 838, column: 5)
!9267 = !DILocation(line: 838, column: 58, scope: !9266)
!9268 = !DILocation(line: 838, column: 78, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9266, file: !1424, line: 838, column: 5)
!9270 = !DILocation(line: 838, column: 88, scope: !9269)
!9271 = !DILocation(line: 838, column: 5, scope: !9266)
!9272 = !DILocation(line: 839, column: 39, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9269, file: !1424, line: 838, column: 102)
!9274 = !DILocation(line: 839, column: 22, scope: !9273)
!9275 = !DILocation(line: 840, column: 37, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9273, file: !1424, line: 840, column: 13)
!9277 = !DILocation(line: 840, column: 13, scope: !9273)
!9278 = !DILocation(line: 841, column: 36, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9276, file: !1424, line: 840, column: 63)
!9280 = !DILocation(line: 842, column: 9, scope: !9279)
!9281 = !DILocation(line: 838, column: 95, scope: !9269)
!9282 = distinct !{!9282, !9271, !9283}
!9283 = !DILocation(line: 843, column: 5, scope: !9266)
!9284 = !DILocation(line: 871, column: 49, scope: !9246)
!9285 = !DILocation(line: 871, column: 72, scope: !9246)
!9286 = !DILocation(line: 871, column: 47, scope: !9246)
!9287 = !DILocation(line: 871, column: 97, scope: !9246)
!9288 = !DILocation(line: 871, column: 19, scope: !9246)
!9289 = !DILocation(line: 882, column: 14, scope: !9246)
!9290 = !DILocation(line: 887, column: 13, scope: !9246)
!9291 = !DILocation(line: 887, column: 22, scope: !9246)
!9292 = !DILocation(line: 887, column: 5, scope: !9246)
!9293 = !DILocation(line: 889, column: 22, scope: !9294)
!9294 = distinct !DILexicalBlock(scope: !9246, file: !1424, line: 887, column: 34)
!9295 = !DILocation(line: 890, column: 13, scope: !9294)
!9296 = !DILocation(line: 902, column: 1, scope: !9246)
!9297 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1424, file: !1424, line: 912, type: !9298, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9300)
!9298 = !DISubroutineType(types: !9299)
!9299 = !{null, !690}
!9300 = !{!9301}
!9301 = !DILocalVariable(name: "CS", arg: 1, scope: !9297, file: !1424, line: 912, type: !690)
!9302 = !DILocation(line: 0, scope: !9297)
!9303 = !DILocation(line: 914, column: 12, scope: !9304)
!9304 = distinct !DILexicalBlock(scope: !9297, file: !1424, line: 914, column: 9)
!9305 = !DILocation(line: 914, column: 9, scope: !9297)
!9306 = !DILocation(line: 918, column: 26, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9304, file: !1424, line: 914, column: 18)
!9308 = !DILocation(line: 918, column: 24, scope: !9307)
!9309 = !DILocation(line: 920, column: 28, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9307, file: !1424, line: 920, column: 13)
!9311 = !DILocation(line: 920, column: 13, scope: !9307)
!9312 = !DILocation(line: 921, column: 13, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9314, file: !1424, line: 921, column: 13)
!9314 = distinct !DILexicalBlock(scope: !9315, file: !1424, line: 921, column: 13)
!9315 = distinct !DILexicalBlock(scope: !9316, file: !1424, line: 921, column: 13)
!9316 = distinct !DILexicalBlock(scope: !9310, file: !1424, line: 920, column: 33)
!9317 = !DILocation(line: 923, column: 19, scope: !9307)
!9318 = !DILocation(line: 923, column: 17, scope: !9307)
!9319 = !DILocation(line: 924, column: 5, scope: !9307)
!9320 = !DILocation(line: 935, column: 14, scope: !9297)
!9321 = !DILocation(line: 936, column: 1, scope: !9297)
!9322 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1424, file: !1424, line: 952, type: !5962, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !210)
!9323 = !DILocation(line: 955, column: 5, scope: !9322)
!9324 = !DILocation(line: 956, column: 12, scope: !9322)
!9325 = !DILocation(line: 956, column: 5, scope: !9322)
!9326 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1424, file: !1424, line: 974, type: !5962, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1423, retainedNodes: !9327)
!9327 = !{!9328}
!9328 = !DILocalVariable(name: "result", scope: !9326, file: !1424, line: 976, type: !858)
!9329 = !DILocation(line: 981, column: 5, scope: !9326)
!9330 = !DILocation(line: 986, column: 24, scope: !9326)
!9331 = !DILocation(line: 986, column: 33, scope: !9326)
!9332 = !DILocation(line: 986, column: 49, scope: !9326)
!9333 = !DILocation(line: 986, column: 22, scope: !9326)
!9334 = !DILocation(line: 1002, column: 19, scope: !9326)
!9335 = !DILocation(line: 1002, column: 17, scope: !9326)
!9336 = !DILocation(line: 1014, column: 22, scope: !9326)
!9337 = !DILocation(line: 1014, column: 5, scope: !9326)
!9338 = !DILocation(line: 1024, column: 33, scope: !9326)
!9339 = !DILocation(line: 1026, column: 27, scope: !9326)
!9340 = !DILocation(line: 1027, column: 26, scope: !9326)
!9341 = !DILocation(line: 1042, column: 33, scope: !9326)
!9342 = !DILocation(line: 1044, column: 32, scope: !9326)
!9343 = !DILocation(line: 1052, column: 18, scope: !9326)
!9344 = !DILocation(line: 1052, column: 27, scope: !9326)
!9345 = !DILocation(line: 1052, column: 43, scope: !9326)
!9346 = !DILocation(line: 1048, column: 14, scope: !9326)
!9347 = !DILocation(line: 0, scope: !9326)
!9348 = !DILocation(line: 1063, column: 5, scope: !9349)
!9349 = distinct !DILexicalBlock(scope: !9350, file: !1424, line: 1063, column: 5)
!9350 = distinct !DILexicalBlock(scope: !9326, file: !1424, line: 1063, column: 5)
!9351 = !DILocation(line: 1063, column: 5, scope: !9350)
!9352 = !DILocation(line: 1063, column: 5, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9349, file: !1424, line: 1063, column: 5)
!9354 = !DILocation(line: 1096, column: 36, scope: !9326)
!9355 = !DILocation(line: 1096, column: 34, scope: !9326)
!9356 = !DILocation(line: 1101, column: 5, scope: !9326)
!9357 = !DILocation(line: 1103, column: 34, scope: !9326)
!9358 = !DILocation(line: 1109, column: 35, scope: !9326)
!9359 = !DILocation(line: 1110, column: 33, scope: !9326)
!9360 = !DILocation(line: 1111, column: 34, scope: !9326)
!9361 = !DILocation(line: 1113, column: 5, scope: !9326)
!9362 = distinct !DISubprogram(name: "CreateFDMLock", scope: !1782, file: !1782, line: 84, type: !208, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !210)
!9363 = !DILocation(line: 86, column: 1, scope: !9362)
!9364 = distinct !DISubprogram(name: "GetFDMLock", scope: !1782, file: !1782, line: 87, type: !7545, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9365)
!9365 = !{!9366}
!9366 = !DILocalVariable(name: "savedMask", scope: !9364, file: !1782, line: 89, type: !858)
!9367 = !DILocation(line: 90, column: 17, scope: !9364)
!9368 = !DILocation(line: 0, scope: !9364)
!9369 = !DILocation(line: 91, column: 9, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9364, file: !1782, line: 91, column: 9)
!9371 = !DILocation(line: 91, column: 9, scope: !9364)
!9372 = !DILocation(line: 92, column: 17, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9370, file: !1782, line: 91, column: 24)
!9374 = !DILocation(line: 94, column: 9, scope: !9373)
!9375 = !DILocation(line: 0, scope: !9370)
!9376 = !DILocation(line: 102, column: 1, scope: !9364)
!9377 = distinct !DISubprogram(name: "FreeFDMLock", scope: !1782, file: !1782, line: 103, type: !208, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9378)
!9378 = !{!9379}
!9379 = !DILocalVariable(name: "savedMask", scope: !9377, file: !1782, line: 105, type: !858)
!9380 = !DILocation(line: 106, column: 17, scope: !9377)
!9381 = !DILocation(line: 0, scope: !9377)
!9382 = !DILocation(line: 107, column: 9, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9377, file: !1782, line: 107, column: 9)
!9384 = !DILocation(line: 107, column: 9, scope: !9377)
!9385 = !DILocation(line: 108, column: 17, scope: !9386)
!9386 = distinct !DILexicalBlock(scope: !9383, file: !1782, line: 107, column: 24)
!9387 = !DILocation(line: 109, column: 9, scope: !9386)
!9388 = !DILocation(line: 114, column: 1, scope: !9377)
!9389 = !DILocation(line: 111, column: 9, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9383, file: !1782, line: 110, column: 12)
!9391 = !DILocation(line: 112, column: 9, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9393, file: !1782, line: 112, column: 9)
!9393 = distinct !DILexicalBlock(scope: !9394, file: !1782, line: 112, column: 9)
!9394 = distinct !DILexicalBlock(scope: !9390, file: !1782, line: 112, column: 9)
!9395 = distinct !DISubprogram(name: "create_FDM_lock", scope: !1782, file: !1782, line: 119, type: !208, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !210)
!9396 = !DILocation(line: 123, column: 1, scope: !9395)
!9397 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !1782, file: !1782, line: 130, type: !208, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9398)
!9398 = !{!9399}
!9399 = !DILocalVariable(name: "Result", scope: !9397, file: !1782, line: 132, type: !1838)
!9400 = !DILocation(line: 133, column: 5, scope: !9397)
!9401 = !DILocation(line: 134, column: 18, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9397, file: !1782, line: 133, column: 8)
!9403 = !DILocation(line: 0, scope: !9397)
!9404 = !DILocation(line: 135, column: 21, scope: !9397)
!9405 = !DILocation(line: 135, column: 5, scope: !9402)
!9406 = distinct !{!9406, !9400, !9407}
!9407 = !DILocation(line: 135, column: 43, scope: !9397)
!9408 = !DILocation(line: 136, column: 1, scope: !9397)
!9409 = distinct !DISubprogram(name: "release_FDM_lock", scope: !1782, file: !1782, line: 143, type: !208, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !210)
!9410 = !DILocation(line: 147, column: 5, scope: !9409)
!9411 = !DILocation(line: 148, column: 1, scope: !9409)
!9412 = distinct !DISubprogram(name: "readRawDiskData", scope: !1782, file: !1782, line: 216, type: !9413, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9454)
!9413 = !DISubroutineType(types: !9414)
!9414 = !{!858, !9415, !175, !680, !175}
!9415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9416, size: 32)
!9416 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1729, line: 93, baseType: !9417)
!9417 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1729, line: 83, size: 1056, elements: !9418)
!9418 = !{!9419, !9420, !9440, !9441, !9453}
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !9417, file: !1729, line: 84, baseType: !175, size: 32)
!9420 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !9417, file: !1729, line: 85, baseType: !9421, size: 32, offset: 32)
!9421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9422, size: 32)
!9422 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1196, line: 121, baseType: !9423)
!9423 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 105, size: 480, elements: !9424)
!9424 = !{!9425, !9426, !9427, !9428, !9429, !9430, !9431, !9432, !9433, !9434, !9435, !9436, !9437, !9438, !9439}
!9425 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9423, file: !1196, line: 106, baseType: !1470, size: 32)
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9423, file: !1196, line: 107, baseType: !1271, size: 32, offset: 32)
!9427 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9423, file: !1196, line: 108, baseType: !1475, size: 32, offset: 64)
!9428 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9423, file: !1196, line: 109, baseType: !1479, size: 32, offset: 96)
!9429 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9423, file: !1196, line: 110, baseType: !1483, size: 32, offset: 128)
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9423, file: !1196, line: 111, baseType: !1479, size: 32, offset: 160)
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9423, file: !1196, line: 112, baseType: !1488, size: 32, offset: 192)
!9432 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9423, file: !1196, line: 113, baseType: !1479, size: 32, offset: 224)
!9433 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9423, file: !1196, line: 114, baseType: !1479, size: 32, offset: 256)
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9423, file: !1196, line: 115, baseType: !1479, size: 32, offset: 288)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9423, file: !1196, line: 116, baseType: !1495, size: 32, offset: 320)
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9423, file: !1196, line: 117, baseType: !1500, size: 32, offset: 352)
!9437 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9423, file: !1196, line: 118, baseType: !1505, size: 32, offset: 384)
!9438 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9423, file: !1196, line: 119, baseType: !1509, size: 32, offset: 416)
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9423, file: !1196, line: 120, baseType: !1513, size: 32, offset: 448)
!9440 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !9417, file: !1729, line: 86, baseType: !194, size: 32, offset: 64)
!9441 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !9417, file: !1729, line: 87, baseType: !9442, size: 928, offset: 96)
!9442 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1196, line: 99, baseType: !9443)
!9443 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1196, line: 90, size: 928, elements: !9444)
!9444 = !{!9445, !9446, !9447, !9448, !9449, !9450, !9451, !9452}
!9445 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9443, file: !1196, line: 91, baseType: !175, size: 32)
!9446 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9443, file: !1196, line: 92, baseType: !1527, size: 256, offset: 32)
!9447 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9443, file: !1196, line: 93, baseType: !1527, size: 256, offset: 288)
!9448 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9443, file: !1196, line: 94, baseType: !1527, size: 256, offset: 544)
!9449 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9443, file: !1196, line: 95, baseType: !175, size: 32, offset: 800)
!9450 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9443, file: !1196, line: 96, baseType: !1519, size: 16, offset: 832)
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9443, file: !1196, line: 97, baseType: !175, size: 32, offset: 864)
!9452 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9443, file: !1196, line: 98, baseType: !175, size: 32, offset: 896)
!9453 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !9417, file: !1729, line: 92, baseType: !211, size: 8, offset: 1024)
!9454 = !{!9455, !9456, !9457, !9458, !9459, !9460}
!9455 = !DILocalVariable(name: "D", arg: 1, scope: !9412, file: !1782, line: 216, type: !9415)
!9456 = !DILocalVariable(name: "addr", arg: 2, scope: !9412, file: !1782, line: 216, type: !175)
!9457 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9412, file: !1782, line: 216, type: !680)
!9458 = !DILocalVariable(name: "len", arg: 4, scope: !9412, file: !1782, line: 216, type: !175)
!9459 = !DILocalVariable(name: "phyAddr", scope: !9412, file: !1782, line: 219, type: !175)
!9460 = !DILocalVariable(name: "diskSize", scope: !9412, file: !1782, line: 220, type: !175)
!9461 = !DILocation(line: 0, scope: !9412)
!9462 = !DILocation(line: 220, column: 28, scope: !9412)
!9463 = !DILocation(line: 222, column: 14, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9412, file: !1782, line: 222, column: 9)
!9465 = !DILocation(line: 222, column: 26, scope: !9464)
!9466 = !DILocation(line: 225, column: 51, scope: !9412)
!9467 = !DILocation(line: 225, column: 61, scope: !9412)
!9468 = !DILocation(line: 225, column: 15, scope: !9412)
!9469 = !DILocation(line: 225, column: 70, scope: !9412)
!9470 = !DILocation(line: 227, column: 13, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9412, file: !1782, line: 227, column: 9)
!9472 = !DILocation(line: 227, column: 9, scope: !9412)
!9473 = !DILocation(line: 228, column: 9, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9471, file: !1782, line: 227, column: 23)
!9475 = !DILocation(line: 229, column: 5, scope: !9474)
!9476 = !DILocation(line: 231, column: 5, scope: !9412)
!9477 = !DILocation(line: 233, column: 22, scope: !9412)
!9478 = !DILocation(line: 233, column: 5, scope: !9412)
!9479 = !DILocation(line: 235, column: 5, scope: !9412)
!9480 = !DILocation(line: 237, column: 5, scope: !9412)
!9481 = !DILocation(line: 238, column: 1, scope: !9412)
!9482 = distinct !DISubprogram(name: "MountDevice", scope: !1782, file: !1782, line: 165, type: !9483, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9485)
!9483 = !DISubroutineType(types: !9484)
!9484 = !{null, !9415}
!9485 = !{!9486, !9487}
!9486 = !DILocalVariable(name: "D", arg: 1, scope: !9482, file: !1782, line: 165, type: !9415)
!9487 = !DILocalVariable(name: "Result", scope: !9482, file: !1782, line: 167, type: !858)
!9488 = !DILocation(line: 0, scope: !9482)
!9489 = !DILocation(line: 171, column: 12, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9482, file: !1782, line: 171, column: 9)
!9491 = !DILocation(line: 171, column: 9, scope: !9482)
!9492 = !DILocation(line: 176, column: 5, scope: !9482)
!9493 = !DILocation(line: 186, column: 17, scope: !9482)
!9494 = !DILocation(line: 186, column: 28, scope: !9482)
!9495 = !DILocation(line: 186, column: 43, scope: !9482)
!9496 = !DILocation(line: 186, column: 64, scope: !9482)
!9497 = !DILocation(line: 186, column: 52, scope: !9482)
!9498 = !DILocation(line: 186, column: 14, scope: !9482)
!9499 = !DILocation(line: 188, column: 5, scope: !9482)
!9500 = !DILocation(line: 190, column: 16, scope: !9501)
!9501 = distinct !DILexicalBlock(scope: !9482, file: !1782, line: 190, column: 9)
!9502 = !DILocation(line: 190, column: 9, scope: !9482)
!9503 = !DILocation(line: 191, column: 9, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9505, file: !1782, line: 191, column: 9)
!9505 = distinct !DILexicalBlock(scope: !9506, file: !1782, line: 191, column: 9)
!9506 = distinct !DILexicalBlock(scope: !9507, file: !1782, line: 191, column: 9)
!9507 = distinct !DILexicalBlock(scope: !9501, file: !1782, line: 190, column: 31)
!9508 = !DILocation(line: 194, column: 17, scope: !9482)
!9509 = !DILocation(line: 195, column: 1, scope: !9482)
!9510 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1782, file: !1782, line: 277, type: !9413, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9511)
!9511 = !{!9512, !9513, !9514, !9515, !9516, !9517, !9518, !9519, !9520, !9521, !9525, !9526, !9527, !9532}
!9512 = !DILocalVariable(name: "D", arg: 1, scope: !9510, file: !1782, line: 277, type: !9415)
!9513 = !DILocalVariable(name: "addr", arg: 2, scope: !9510, file: !1782, line: 277, type: !175)
!9514 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9510, file: !1782, line: 277, type: !680)
!9515 = !DILocalVariable(name: "len", arg: 4, scope: !9510, file: !1782, line: 277, type: !175)
!9516 = !DILocalVariable(name: "dest", scope: !9510, file: !1782, line: 279, type: !175)
!9517 = !DILocalVariable(name: "src", scope: !9510, file: !1782, line: 279, type: !175)
!9518 = !DILocalVariable(name: "diskSize", scope: !9510, file: !1782, line: 280, type: !175)
!9519 = !DILocalVariable(name: "result", scope: !9510, file: !1782, line: 281, type: !858)
!9520 = !DILocalVariable(name: "DoneLength", scope: !9510, file: !1782, line: 282, type: !175)
!9521 = !DILocalVariable(name: "blockSize", scope: !9522, file: !1782, line: 313, type: !175)
!9522 = distinct !DILexicalBlock(scope: !9523, file: !1782, line: 312, column: 14)
!9523 = distinct !DILexicalBlock(scope: !9524, file: !1782, line: 305, column: 13)
!9524 = distinct !DILexicalBlock(scope: !9510, file: !1782, line: 298, column: 30)
!9525 = !DILocalVariable(name: "programBytes", scope: !9522, file: !1782, line: 314, type: !175)
!9526 = !DILocalVariable(name: "nextBlkAddr", scope: !9522, file: !1782, line: 316, type: !175)
!9527 = !DILocalVariable(name: "Cell", scope: !9528, file: !1782, line: 346, type: !9530)
!9528 = distinct !DILexicalBlock(scope: !9529, file: !1782, line: 345, column: 83)
!9529 = distinct !DILexicalBlock(scope: !9522, file: !1782, line: 345, column: 17)
!9530 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9531, line: 76, baseType: !970)
!9531 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/aes_encrypt_decrypt_data/GCC")
!9532 = !DILocalVariable(name: "b", scope: !9528, file: !1782, line: 347, type: !680)
!9533 = !DILocation(line: 0, scope: !9510)
!9534 = !DILocation(line: 280, column: 28, scope: !9510)
!9535 = !DILocation(line: 284, column: 14, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9510, file: !1782, line: 284, column: 9)
!9537 = !DILocation(line: 284, column: 9, scope: !9510)
!9538 = !DILocation(line: 288, column: 14, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9510, file: !1782, line: 288, column: 9)
!9540 = !DILocation(line: 288, column: 20, scope: !9539)
!9541 = !DILocation(line: 288, column: 9, scope: !9510)
!9542 = !DILocation(line: 292, column: 13, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9510, file: !1782, line: 292, column: 9)
!9544 = !DILocation(line: 292, column: 9, scope: !9510)
!9545 = !DILocation(line: 293, column: 9, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9543, file: !1782, line: 292, column: 23)
!9547 = !DILocation(line: 294, column: 5, scope: !9546)
!9548 = !DILocation(line: 296, column: 5, scope: !9510)
!9549 = !DILocation(line: 346, column: 17, scope: !9528)
!9550 = !DILocation(line: 298, column: 23, scope: !9510)
!9551 = !DILocation(line: 298, column: 5, scope: !9510)
!9552 = !DILocation(line: 299, column: 52, scope: !9524)
!9553 = !DILocation(line: 299, column: 62, scope: !9524)
!9554 = !DILocation(line: 299, column: 16, scope: !9524)
!9555 = !DILocation(line: 299, column: 71, scope: !9524)
!9556 = !DILocation(line: 299, column: 78, scope: !9524)
!9557 = !DILocation(line: 300, column: 34, scope: !9524)
!9558 = !DILocation(line: 302, column: 12, scope: !9524)
!9559 = !DILocation(line: 302, column: 23, scope: !9524)
!9560 = !DILocation(line: 302, column: 81, scope: !9524)
!9561 = !DILocation(line: 302, column: 45, scope: !9524)
!9562 = !DILocation(line: 302, column: 9, scope: !9524)
!9563 = !DILocation(line: 305, column: 29, scope: !9523)
!9564 = !DILocation(line: 305, column: 57, scope: !9523)
!9565 = !DILocation(line: 305, column: 66, scope: !9523)
!9566 = !DILocation(line: 305, column: 80, scope: !9523)
!9567 = !DILocation(line: 305, column: 13, scope: !9524)
!9568 = !DILocation(line: 306, column: 25, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9523, file: !1782, line: 305, column: 87)
!9570 = !DILocation(line: 306, column: 36, scope: !9569)
!9571 = !DILocation(line: 306, column: 51, scope: !9569)
!9572 = !DILocation(line: 306, column: 60, scope: !9569)
!9573 = !DILocation(line: 306, column: 74, scope: !9569)
!9574 = !DILocation(line: 306, column: 22, scope: !9569)
!9575 = !DILocation(line: 307, column: 24, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9569, file: !1782, line: 307, column: 17)
!9577 = !DILocation(line: 307, column: 17, scope: !9569)
!9578 = !DILocation(line: 310, column: 23, scope: !9569)
!9579 = !DILocation(line: 311, column: 9, scope: !9569)
!9580 = !DILocation(line: 313, column: 47, scope: !9522)
!9581 = !DILocation(line: 313, column: 56, scope: !9522)
!9582 = !DILocation(line: 313, column: 34, scope: !9522)
!9583 = !DILocation(line: 0, scope: !9522)
!9584 = !DILocation(line: 316, column: 42, scope: !9522)
!9585 = !DILocation(line: 316, column: 58, scope: !9522)
!9586 = !DILocation(line: 316, column: 55, scope: !9522)
!9587 = !DILocation(line: 326, column: 22, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9522, file: !1782, line: 326, column: 17)
!9589 = !DILocation(line: 326, column: 37, scope: !9588)
!9590 = !DILocation(line: 326, column: 17, scope: !9522)
!9591 = !DILocation(line: 332, column: 43, scope: !9522)
!9592 = !DILocation(line: 345, column: 30, scope: !9529)
!9593 = !DILocation(line: 345, column: 52, scope: !9529)
!9594 = !DILocation(line: 0, scope: !9528)
!9595 = !DILocation(line: 348, column: 26, scope: !9528)
!9596 = !DILocation(line: 348, column: 24, scope: !9528)
!9597 = !DILocation(line: 348, column: 22, scope: !9528)
!9598 = !DILocation(line: 349, column: 41, scope: !9528)
!9599 = !DILocation(line: 349, column: 24, scope: !9528)
!9600 = !DILocation(line: 349, column: 22, scope: !9528)
!9601 = !DILocation(line: 350, column: 29, scope: !9528)
!9602 = !DILocation(line: 350, column: 40, scope: !9528)
!9603 = !DILocation(line: 350, column: 55, scope: !9528)
!9604 = !DILocation(line: 350, column: 64, scope: !9528)
!9605 = !DILocation(line: 350, column: 26, scope: !9528)
!9606 = !DILocation(line: 351, column: 28, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9528, file: !1782, line: 351, column: 21)
!9608 = !DILocation(line: 354, column: 13, scope: !9529)
!9609 = !DILocation(line: 362, column: 33, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9611, file: !1782, line: 361, column: 24)
!9611 = distinct !DILexicalBlock(scope: !9612, file: !1782, line: 355, column: 21)
!9612 = distinct !DILexicalBlock(scope: !9529, file: !1782, line: 354, column: 20)
!9613 = !DILocation(line: 362, column: 44, scope: !9610)
!9614 = !DILocation(line: 362, column: 59, scope: !9610)
!9615 = !DILocation(line: 362, column: 68, scope: !9610)
!9616 = !DILocation(line: 362, column: 82, scope: !9610)
!9617 = !DILocation(line: 362, column: 30, scope: !9610)
!9618 = !DILocation(line: 364, column: 28, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9612, file: !1782, line: 364, column: 21)
!9620 = !DILocation(line: 364, column: 21, scope: !9612)
!9621 = !DILocation(line: 368, column: 24, scope: !9522)
!9622 = !DILocation(line: 0, scope: !9523)
!9623 = distinct !{!9623, !9551, !9624}
!9624 = !DILocation(line: 370, column: 5, scope: !9510)
!9625 = !DILocation(line: 372, column: 5, scope: !9510)
!9626 = !DILocation(line: 379, column: 1, scope: !9510)
!9627 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1782, file: !1782, line: 398, type: !9628, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9630)
!9628 = !DISubroutineType(types: !9629)
!9629 = !{!858, !9415, !175}
!9630 = !{!9631, !9632, !9633, !9634}
!9631 = !DILocalVariable(name: "D", arg: 1, scope: !9627, file: !1782, line: 398, type: !9415)
!9632 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !9627, file: !1782, line: 398, type: !175)
!9633 = !DILocalVariable(name: "result", scope: !9627, file: !1782, line: 401, type: !858)
!9634 = !DILocalVariable(name: "block_index", scope: !9627, file: !1782, line: 402, type: !175)
!9635 = !DILocation(line: 0, scope: !9627)
!9636 = !DILocation(line: 402, column: 36, scope: !9627)
!9637 = !DILocation(line: 403, column: 13, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9627, file: !1782, line: 403, column: 9)
!9639 = !DILocation(line: 403, column: 9, scope: !9627)
!9640 = !DILocation(line: 404, column: 9, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9638, file: !1782, line: 403, column: 23)
!9642 = !DILocation(line: 405, column: 5, scope: !9641)
!9643 = !DILocation(line: 407, column: 37, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9627, file: !1782, line: 407, column: 9)
!9645 = !DILocation(line: 407, column: 21, scope: !9644)
!9646 = !DILocation(line: 407, column: 9, scope: !9627)
!9647 = !DILocation(line: 412, column: 5, scope: !9627)
!9648 = !DILocation(line: 414, column: 8, scope: !9627)
!9649 = !DILocation(line: 414, column: 19, scope: !9627)
!9650 = !DILocation(line: 414, column: 32, scope: !9627)
!9651 = !DILocation(line: 414, column: 5, scope: !9627)
!9652 = !DILocation(line: 416, column: 17, scope: !9627)
!9653 = !DILocation(line: 416, column: 28, scope: !9627)
!9654 = !DILocation(line: 416, column: 42, scope: !9627)
!9655 = !DILocation(line: 416, column: 14, scope: !9627)
!9656 = !DILocation(line: 418, column: 5, scope: !9627)
!9657 = !DILocation(line: 420, column: 16, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !9627, file: !1782, line: 420, column: 9)
!9659 = !DILocation(line: 424, column: 1, scope: !9627)
!9660 = distinct !DISubprogram(name: "NOR_init", scope: !1782, file: !1782, line: 433, type: !5962, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !210)
!9661 = !DILocation(line: 436, column: 9, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9660, file: !1782, line: 436, column: 9)
!9663 = !DILocation(line: 436, column: 9, scope: !9660)
!9664 = !DILocation(line: 437, column: 9, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9662, file: !1782, line: 436, column: 62)
!9666 = !DILocation(line: 438, column: 9, scope: !9665)
!9667 = !DILocation(line: 439, column: 27, scope: !9665)
!9668 = !DILocation(line: 440, column: 5, scope: !9665)
!9669 = !DILocation(line: 441, column: 5, scope: !9660)
!9670 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1782, file: !1782, line: 444, type: !7545, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !210)
!9671 = !DILocation(line: 446, column: 12, scope: !9670)
!9672 = !DILocation(line: 446, column: 5, scope: !9670)
!9673 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1782, file: !1782, line: 449, type: !9674, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9676)
!9674 = !DISubroutineType(types: !9675)
!9675 = !{!858, !175, !175, !680}
!9676 = !{!9677, !9678, !9679, !9680, !9681, !9682, !9683}
!9677 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9673, file: !1782, line: 449, type: !175)
!9678 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9673, file: !1782, line: 449, type: !175)
!9679 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9673, file: !1782, line: 449, type: !680)
!9680 = !DILocalVariable(name: "D", scope: !9673, file: !1782, line: 451, type: !9415)
!9681 = !DILocalVariable(name: "mtdData", scope: !9673, file: !1782, line: 452, type: !1790)
!9682 = !DILocalVariable(name: "result", scope: !9673, file: !1782, line: 453, type: !858)
!9683 = !DILocalVariable(name: "addr", scope: !9673, file: !1782, line: 455, type: !175)
!9684 = !DILocation(line: 0, scope: !9673)
!9685 = !DILocation(line: 452, column: 60, scope: !9673)
!9686 = !DILocation(line: 455, column: 32, scope: !9673)
!9687 = !DILocation(line: 455, column: 22, scope: !9673)
!9688 = !DILocation(line: 455, column: 95, scope: !9673)
!9689 = !DILocation(line: 455, column: 76, scope: !9673)
!9690 = !DILocation(line: 455, column: 118, scope: !9673)
!9691 = !DILocation(line: 455, column: 74, scope: !9673)
!9692 = !DILocation(line: 455, column: 106, scope: !9673)
!9693 = !DILocation(line: 457, column: 14, scope: !9673)
!9694 = !DILocation(line: 459, column: 16, scope: !9695)
!9695 = distinct !DILexicalBlock(scope: !9673, file: !1782, line: 459, column: 9)
!9696 = !DILocation(line: 463, column: 1, scope: !9673)
!9697 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1782, file: !1782, line: 466, type: !9674, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9698)
!9698 = !{!9699, !9700, !9701, !9702, !9703, !9704, !9705}
!9699 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9697, file: !1782, line: 466, type: !175)
!9700 = !DILocalVariable(name: "page_idx", arg: 2, scope: !9697, file: !1782, line: 466, type: !175)
!9701 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !9697, file: !1782, line: 466, type: !680)
!9702 = !DILocalVariable(name: "D", scope: !9697, file: !1782, line: 468, type: !9415)
!9703 = !DILocalVariable(name: "mtdData", scope: !9697, file: !1782, line: 469, type: !1790)
!9704 = !DILocalVariable(name: "result", scope: !9697, file: !1782, line: 470, type: !858)
!9705 = !DILocalVariable(name: "addr", scope: !9697, file: !1782, line: 472, type: !175)
!9706 = !DILocation(line: 0, scope: !9697)
!9707 = !DILocation(line: 469, column: 60, scope: !9697)
!9708 = !DILocation(line: 472, column: 32, scope: !9697)
!9709 = !DILocation(line: 472, column: 22, scope: !9697)
!9710 = !DILocation(line: 472, column: 95, scope: !9697)
!9711 = !DILocation(line: 472, column: 76, scope: !9697)
!9712 = !DILocation(line: 472, column: 118, scope: !9697)
!9713 = !DILocation(line: 472, column: 74, scope: !9697)
!9714 = !DILocation(line: 472, column: 106, scope: !9697)
!9715 = !DILocation(line: 474, column: 14, scope: !9697)
!9716 = !DILocation(line: 475, column: 16, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9697, file: !1782, line: 475, column: 9)
!9718 = !DILocation(line: 479, column: 1, scope: !9697)
!9719 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1782, file: !1782, line: 481, type: !9720, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9722)
!9720 = !DISubroutineType(types: !9721)
!9721 = !{!858, !175}
!9722 = !{!9723, !9724}
!9723 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9719, file: !1782, line: 481, type: !175)
!9724 = !DILocalVariable(name: "result", scope: !9719, file: !1782, line: 483, type: !858)
!9725 = !DILocation(line: 0, scope: !9719)
!9726 = !DILocation(line: 484, column: 14, scope: !9719)
!9727 = !DILocation(line: 485, column: 16, scope: !9728)
!9728 = distinct !DILexicalBlock(scope: !9719, file: !1782, line: 485, column: 9)
!9729 = !DILocation(line: 489, column: 1, scope: !9719)
!9730 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1782, file: !1782, line: 492, type: !3113, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9731)
!9731 = !{!9732, !9733, !9734}
!9732 = !DILocalVariable(name: "block_idx", arg: 1, scope: !9730, file: !1782, line: 492, type: !175)
!9733 = !DILocalVariable(name: "D", scope: !9730, file: !1782, line: 494, type: !9415)
!9734 = !DILocalVariable(name: "mtdData", scope: !9730, file: !1782, line: 495, type: !1790)
!9735 = !DILocation(line: 0, scope: !9730)
!9736 = !DILocation(line: 495, column: 60, scope: !9730)
!9737 = !DILocation(line: 496, column: 12, scope: !9730)
!9738 = !DILocation(line: 496, column: 5, scope: !9730)
!9739 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1782, file: !1782, line: 499, type: !3113, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9740)
!9740 = !{!9741, !9742, !9743}
!9741 = !DILocalVariable(name: "block_addr", arg: 1, scope: !9739, file: !1782, line: 499, type: !175)
!9742 = !DILocalVariable(name: "D", scope: !9739, file: !1782, line: 501, type: !9415)
!9743 = !DILocalVariable(name: "mtdData", scope: !9739, file: !1782, line: 502, type: !1790)
!9744 = !DILocation(line: 0, scope: !9739)
!9745 = !DILocation(line: 502, column: 60, scope: !9739)
!9746 = !DILocation(line: 504, column: 12, scope: !9739)
!9747 = !DILocation(line: 504, column: 5, scope: !9739)
!9748 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1782, file: !1782, line: 510, type: !9749, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9751)
!9749 = !DISubroutineType(types: !9750)
!9750 = !{!858, !175, !938, !938}
!9751 = !{!9752, !9753, !9754, !9755, !9756}
!9752 = !DILocalVariable(name: "block_addr", arg: 1, scope: !9748, file: !1782, line: 510, type: !175)
!9753 = !DILocalVariable(name: "block_index", arg: 2, scope: !9748, file: !1782, line: 510, type: !938)
!9754 = !DILocalVariable(name: "offset", arg: 3, scope: !9748, file: !1782, line: 510, type: !938)
!9755 = !DILocalVariable(name: "D", scope: !9748, file: !1782, line: 512, type: !9415)
!9756 = !DILocalVariable(name: "mtdData", scope: !9748, file: !1782, line: 513, type: !1790)
!9757 = !DILocation(line: 0, scope: !9748)
!9758 = !DILocation(line: 513, column: 60, scope: !9748)
!9759 = !DILocation(line: 519, column: 20, scope: !9748)
!9760 = !DILocation(line: 519, column: 18, scope: !9748)
!9761 = !DILocation(line: 520, column: 22, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9748, file: !1782, line: 520, column: 9)
!9763 = !DILocation(line: 520, column: 9, scope: !9748)
!9764 = !DILocation(line: 524, column: 28, scope: !9748)
!9765 = !DILocation(line: 524, column: 26, scope: !9748)
!9766 = !DILocation(line: 524, column: 13, scope: !9748)
!9767 = !DILocation(line: 526, column: 5, scope: !9748)
!9768 = !DILocation(line: 527, column: 1, scope: !9748)
!9769 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1782, file: !1782, line: 532, type: !9770, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9772)
!9770 = !DISubroutineType(types: !9771)
!9771 = !{!858, !175, !175, !938}
!9772 = !{!9773, !9774, !9775, !9776, !9777}
!9773 = !DILocalVariable(name: "block_index", arg: 1, scope: !9769, file: !1782, line: 532, type: !175)
!9774 = !DILocalVariable(name: "offset", arg: 2, scope: !9769, file: !1782, line: 532, type: !175)
!9775 = !DILocalVariable(name: "addr", arg: 3, scope: !9769, file: !1782, line: 532, type: !938)
!9776 = !DILocalVariable(name: "D", scope: !9769, file: !1782, line: 534, type: !9415)
!9777 = !DILocalVariable(name: "mtdData", scope: !9769, file: !1782, line: 535, type: !1790)
!9778 = !DILocation(line: 0, scope: !9769)
!9779 = !DILocation(line: 535, column: 60, scope: !9769)
!9780 = !DILocation(line: 537, column: 23, scope: !9769)
!9781 = !DILocation(line: 537, column: 13, scope: !9769)
!9782 = !DILocation(line: 537, column: 79, scope: !9769)
!9783 = !DILocation(line: 537, column: 60, scope: !9769)
!9784 = !DILocation(line: 537, column: 58, scope: !9769)
!9785 = !DILocation(line: 537, column: 88, scope: !9769)
!9786 = !DILocation(line: 537, column: 11, scope: !9769)
!9787 = !DILocation(line: 539, column: 5, scope: !9769)
!9788 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1782, file: !1782, line: 545, type: !9789, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9791)
!9789 = !DISubroutineType(types: !9790)
!9790 = !{!1838, !858}
!9791 = !{!9792}
!9792 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !9788, file: !1782, line: 545, type: !858)
!9793 = !DILocation(line: 0, scope: !9788)
!9794 = !DILocation(line: 547, column: 9, scope: !9788)
!9795 = !DILocation(line: 558, column: 9, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9797, file: !1782, line: 558, column: 9)
!9797 = distinct !DILexicalBlock(scope: !9798, file: !1782, line: 558, column: 9)
!9798 = distinct !DILexicalBlock(scope: !9799, file: !1782, line: 558, column: 9)
!9799 = distinct !DILexicalBlock(scope: !9800, file: !1782, line: 557, column: 12)
!9800 = distinct !DILexicalBlock(scope: !9801, file: !1782, line: 555, column: 16)
!9801 = distinct !DILexicalBlock(scope: !9802, file: !1782, line: 553, column: 16)
!9802 = distinct !DILexicalBlock(scope: !9803, file: !1782, line: 551, column: 16)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !1782, line: 549, column: 16)
!9804 = distinct !DILexicalBlock(scope: !9788, file: !1782, line: 547, column: 9)
!9805 = !DILocation(line: 560, column: 1, scope: !9788)
!9806 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1782, file: !1782, line: 561, type: !9807, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9810)
!9807 = !DISubroutineType(types: !9808)
!9808 = !{!9809, !175}
!9809 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1119, line: 127, baseType: !1784)
!9810 = !{!9811, !9812, !9813}
!9811 = !DILocalVariable(name: "address", arg: 1, scope: !9806, file: !1782, line: 561, type: !175)
!9812 = !DILocalVariable(name: "block_size", scope: !9806, file: !1782, line: 563, type: !175)
!9813 = !DILocalVariable(name: "block_index", scope: !9806, file: !1782, line: 564, type: !175)
!9814 = !DILocation(line: 0, scope: !9806)
!9815 = !DILocation(line: 566, column: 19, scope: !9806)
!9816 = !DILocation(line: 567, column: 21, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9806, file: !1782, line: 567, column: 9)
!9818 = !DILocation(line: 567, column: 9, scope: !9806)
!9819 = !DILocation(line: 568, column: 9, scope: !9820)
!9820 = distinct !DILexicalBlock(scope: !9821, file: !1782, line: 568, column: 9)
!9821 = distinct !DILexicalBlock(scope: !9822, file: !1782, line: 568, column: 9)
!9822 = distinct !DILexicalBlock(scope: !9823, file: !1782, line: 568, column: 9)
!9823 = distinct !DILexicalBlock(scope: !9817, file: !1782, line: 567, column: 45)
!9824 = !DILocation(line: 570, column: 18, scope: !9806)
!9825 = !DILocation(line: 571, column: 9, scope: !9806)
!9826 = !DILocation(line: 574, column: 9, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9828, file: !1782, line: 573, column: 38)
!9828 = distinct !DILexicalBlock(scope: !9829, file: !1782, line: 573, column: 16)
!9829 = distinct !DILexicalBlock(scope: !9806, file: !1782, line: 571, column: 9)
!9830 = !DILocation(line: 576, column: 9, scope: !9831)
!9831 = distinct !DILexicalBlock(scope: !9832, file: !1782, line: 575, column: 39)
!9832 = distinct !DILexicalBlock(scope: !9828, file: !1782, line: 575, column: 16)
!9833 = !DILocation(line: 578, column: 9, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9835, file: !1782, line: 578, column: 9)
!9835 = distinct !DILexicalBlock(scope: !9836, file: !1782, line: 578, column: 9)
!9836 = distinct !DILexicalBlock(scope: !9837, file: !1782, line: 578, column: 9)
!9837 = distinct !DILexicalBlock(scope: !9832, file: !1782, line: 577, column: 12)
!9838 = !DILocation(line: 0, scope: !9829)
!9839 = !DILocation(line: 580, column: 1, scope: !9806)
!9840 = distinct !DISubprogram(name: "hal_flash_init", scope: !1782, file: !1782, line: 583, type: !7545, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !210)
!9841 = !DILocation(line: 585, column: 5, scope: !9840)
!9842 = !DILocation(line: 586, column: 5, scope: !9840)
!9843 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1782, file: !1782, line: 589, type: !7545, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !210)
!9844 = !DILocation(line: 591, column: 5, scope: !9843)
!9845 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1782, file: !1782, line: 595, type: !9846, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9848)
!9846 = !DISubroutineType(types: !9847)
!9847 = !{!1838, !175, !9809}
!9848 = !{!9849, !9850, !9851, !9852, !9853}
!9849 = !DILocalVariable(name: "start_address", arg: 1, scope: !9845, file: !1782, line: 595, type: !175)
!9850 = !DILocalVariable(name: "block", arg: 2, scope: !9845, file: !1782, line: 595, type: !9809)
!9851 = !DILocalVariable(name: "result", scope: !9845, file: !1782, line: 597, type: !858)
!9852 = !DILocalVariable(name: "block_index", scope: !9845, file: !1782, line: 598, type: !175)
!9853 = !DILocalVariable(name: "erase_type", scope: !9845, file: !1782, line: 599, type: !175)
!9854 = !DILocation(line: 0, scope: !9845)
!9855 = !DILocation(line: 601, column: 9, scope: !9845)
!9856 = !DILocation(line: 602, column: 28, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9858, file: !1782, line: 602, column: 13)
!9858 = distinct !DILexicalBlock(scope: !9859, file: !1782, line: 601, column: 38)
!9859 = distinct !DILexicalBlock(scope: !9845, file: !1782, line: 601, column: 9)
!9860 = !DILocation(line: 602, column: 37, scope: !9857)
!9861 = !DILocation(line: 602, column: 13, scope: !9858)
!9862 = !DILocation(line: 607, column: 28, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9864, file: !1782, line: 607, column: 13)
!9864 = distinct !DILexicalBlock(scope: !9865, file: !1782, line: 606, column: 46)
!9865 = distinct !DILexicalBlock(scope: !9859, file: !1782, line: 606, column: 16)
!9866 = !DILocation(line: 607, column: 38, scope: !9863)
!9867 = !DILocation(line: 607, column: 13, scope: !9864)
!9868 = !DILocation(line: 612, column: 28, scope: !9869)
!9869 = distinct !DILexicalBlock(scope: !9870, file: !1782, line: 612, column: 13)
!9870 = distinct !DILexicalBlock(scope: !9871, file: !1782, line: 611, column: 46)
!9871 = distinct !DILexicalBlock(scope: !9865, file: !1782, line: 611, column: 16)
!9872 = !DILocation(line: 612, column: 38, scope: !9869)
!9873 = !DILocation(line: 612, column: 13, scope: !9870)
!9874 = !DILocation(line: 0, scope: !9859)
!9875 = !DILocation(line: 621, column: 19, scope: !9845)
!9876 = !DILocation(line: 622, column: 21, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9845, file: !1782, line: 622, column: 9)
!9878 = !DILocation(line: 622, column: 9, scope: !9845)
!9879 = !DILocation(line: 626, column: 17, scope: !9845)
!9880 = !DILocation(line: 627, column: 14, scope: !9845)
!9881 = !DILocation(line: 628, column: 16, scope: !9882)
!9882 = distinct !DILexicalBlock(scope: !9845, file: !1782, line: 628, column: 9)
!9883 = !DILocation(line: 628, column: 9, scope: !9845)
!9884 = !DILocation(line: 629, column: 16, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9882, file: !1782, line: 628, column: 38)
!9886 = !DILocation(line: 629, column: 9, scope: !9885)
!9887 = !DILocation(line: 632, column: 1, scope: !9845)
!9888 = distinct !DISubprogram(name: "hal_flash_read", scope: !1782, file: !1782, line: 634, type: !9889, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9891)
!9889 = !DISubroutineType(types: !9890)
!9890 = !{!1838, !175, !680, !175}
!9891 = !{!9892, !9893, !9894, !9895, !9896}
!9892 = !DILocalVariable(name: "start_address", arg: 1, scope: !9888, file: !1782, line: 634, type: !175)
!9893 = !DILocalVariable(name: "buffer", arg: 2, scope: !9888, file: !1782, line: 634, type: !680)
!9894 = !DILocalVariable(name: "length", arg: 3, scope: !9888, file: !1782, line: 634, type: !175)
!9895 = !DILocalVariable(name: "D", scope: !9888, file: !1782, line: 636, type: !9415)
!9896 = !DILocalVariable(name: "result", scope: !9888, file: !1782, line: 637, type: !858)
!9897 = !DILocation(line: 0, scope: !9888)
!9898 = !DILocation(line: 639, column: 14, scope: !9888)
!9899 = !DILocation(line: 641, column: 16, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9888, file: !1782, line: 641, column: 9)
!9901 = !DILocation(line: 641, column: 9, scope: !9888)
!9902 = !DILocation(line: 642, column: 16, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9900, file: !1782, line: 641, column: 38)
!9904 = !DILocation(line: 642, column: 9, scope: !9903)
!9905 = !DILocation(line: 645, column: 1, scope: !9888)
!9906 = distinct !DISubprogram(name: "hal_flash_write", scope: !1782, file: !1782, line: 647, type: !9907, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1781, retainedNodes: !9909)
!9907 = !DISubroutineType(types: !9908)
!9908 = !{!1838, !175, !4495, !175}
!9909 = !{!9910, !9911, !9912, !9913, !9914}
!9910 = !DILocalVariable(name: "address", arg: 1, scope: !9906, file: !1782, line: 647, type: !175)
!9911 = !DILocalVariable(name: "data", arg: 2, scope: !9906, file: !1782, line: 647, type: !4495)
!9912 = !DILocalVariable(name: "length", arg: 3, scope: !9906, file: !1782, line: 647, type: !175)
!9913 = !DILocalVariable(name: "D", scope: !9906, file: !1782, line: 649, type: !9415)
!9914 = !DILocalVariable(name: "result", scope: !9906, file: !1782, line: 650, type: !858)
!9915 = !DILocation(line: 0, scope: !9906)
!9916 = !DILocation(line: 652, column: 14, scope: !9906)
!9917 = !DILocation(line: 653, column: 16, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9906, file: !1782, line: 653, column: 9)
!9919 = !DILocation(line: 653, column: 9, scope: !9906)
!9920 = !DILocation(line: 654, column: 16, scope: !9921)
!9921 = distinct !DILexicalBlock(scope: !9918, file: !1782, line: 653, column: 38)
!9922 = !DILocation(line: 654, column: 9, scope: !9921)
!9923 = !DILocation(line: 668, column: 1, scope: !9906)
!9924 = distinct !DISubprogram(name: "BlockAddress", scope: !1843, file: !1843, line: 111, type: !9925, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1842, retainedNodes: !9927)
!9925 = !DISubroutineType(types: !9926)
!9926 = !{!194, !194, !175}
!9927 = !{!9928, !9929, !9930, !9931, !9932, !9933}
!9928 = !DILocalVariable(name: "DriverData", arg: 1, scope: !9924, file: !1843, line: 111, type: !194)
!9929 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9924, file: !1843, line: 111, type: !175)
!9930 = !DILocalVariable(name: "D", scope: !9924, file: !1843, line: 113, type: !1871)
!9931 = !DILocalVariable(name: "addr", scope: !9924, file: !1843, line: 114, type: !175)
!9932 = !DILocalVariable(name: "region", scope: !9924, file: !1843, line: 115, type: !175)
!9933 = !DILocalVariable(name: "BlockUpperBound", scope: !9924, file: !1843, line: 115, type: !175)
!9934 = !DILocation(line: 0, scope: !9924)
!9935 = !DILocation(line: 117, column: 26, scope: !9924)
!9936 = !DILocation(line: 117, column: 40, scope: !9924)
!9937 = !DILocation(line: 118, column: 28, scope: !9924)
!9938 = !DILocation(line: 118, column: 5, scope: !9924)
!9939 = !DILocation(line: 119, column: 39, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9924, file: !1843, line: 118, column: 43)
!9941 = !DILocation(line: 119, column: 76, scope: !9940)
!9942 = !DILocation(line: 119, column: 52, scope: !9940)
!9943 = !DILocation(line: 119, column: 14, scope: !9940)
!9944 = !DILocation(line: 120, column: 15, scope: !9940)
!9945 = !DILocation(line: 121, column: 50, scope: !9940)
!9946 = !DILocation(line: 121, column: 25, scope: !9940)
!9947 = distinct !{!9947, !9938, !9948}
!9948 = !DILocation(line: 122, column: 5, scope: !9924)
!9949 = !DILocation(line: 123, column: 68, scope: !9924)
!9950 = !DILocation(line: 123, column: 44, scope: !9924)
!9951 = !DILocation(line: 123, column: 25, scope: !9924)
!9952 = !DILocation(line: 123, column: 107, scope: !9924)
!9953 = !DILocation(line: 123, column: 83, scope: !9924)
!9954 = !DILocation(line: 123, column: 10, scope: !9924)
!9955 = !DILocation(line: 125, column: 16, scope: !9924)
!9956 = !DILocation(line: 125, column: 25, scope: !9924)
!9957 = !DILocation(line: 125, column: 5, scope: !9924)
!9958 = distinct !DISubprogram(name: "MapWindow", scope: !1843, file: !1843, line: 180, type: !1476, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1842, retainedNodes: !9959)
!9959 = !{!9960, !9961, !9962, !9963}
!9960 = !DILocalVariable(name: "DriveData", arg: 1, scope: !9958, file: !1843, line: 180, type: !194)
!9961 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9958, file: !1843, line: 180, type: !175)
!9962 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !9958, file: !1843, line: 180, type: !175)
!9963 = !DILocalVariable(name: "D", scope: !9958, file: !1843, line: 182, type: !1871)
!9964 = !DILocation(line: 0, scope: !9958)
!9965 = !DILocation(line: 185, column: 5, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9967, file: !1843, line: 185, column: 5)
!9967 = distinct !DILexicalBlock(scope: !9958, file: !1843, line: 185, column: 5)
!9968 = !DILocation(line: 185, column: 5, scope: !9967)
!9969 = !DILocation(line: 185, column: 5, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9966, file: !1843, line: 185, column: 5)
!9971 = !DILocation(line: 186, column: 27, scope: !9958)
!9972 = !DILocation(line: 186, column: 19, scope: !9958)
!9973 = !DILocation(line: 186, column: 8, scope: !9958)
!9974 = !DILocation(line: 186, column: 17, scope: !9958)
!9975 = !DILocation(line: 188, column: 5, scope: !9958)
!9976 = !DILocation(line: 0, scope: !1864)
!9977 = !DILocation(line: 142, column: 12, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !1864, file: !1843, line: 142, column: 9)
!9979 = !DILocation(line: 142, column: 34, scope: !9978)
!9980 = !DILocation(line: 142, column: 64, scope: !9978)
!9981 = !DILocation(line: 142, column: 75, scope: !9978)
!9982 = !DILocation(line: 142, column: 9, scope: !1864)
!9983 = !DILocation(line: 143, column: 79, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9985, file: !1843, line: 143, column: 13)
!9985 = distinct !DILexicalBlock(scope: !9978, file: !1843, line: 142, column: 99)
!9986 = !DILocation(line: 143, column: 13, scope: !9985)
!9987 = !DILocation(line: 144, column: 72, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9989, file: !1843, line: 144, column: 17)
!9989 = distinct !DILexicalBlock(scope: !9984, file: !1843, line: 143, column: 94)
!9990 = !DILocation(line: 144, column: 83, scope: !9988)
!9991 = !DILocation(line: 144, column: 17, scope: !9989)
!9992 = !DILocation(line: 145, column: 87, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !1843, line: 145, column: 21)
!9994 = distinct !DILexicalBlock(scope: !9988, file: !1843, line: 144, column: 107)
!9995 = !DILocation(line: 145, column: 21, scope: !9994)
!9996 = !DILocation(line: 146, column: 33, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9993, file: !1843, line: 145, column: 102)
!9998 = !DILocation(line: 147, column: 25, scope: !9999)
!9999 = distinct !DILexicalBlock(scope: !9997, file: !1843, line: 147, column: 25)
!10000 = !DILocation(line: 147, column: 62, scope: !9999)
!10001 = !DILocation(line: 147, column: 34, scope: !9999)
!10002 = !DILocation(line: 147, column: 25, scope: !9997)
!10003 = !DILocation(line: 148, column: 91, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9999, file: !1843, line: 147, column: 106)
!10005 = !DILocation(line: 149, column: 111, scope: !10004)
!10006 = !DILocation(line: 149, column: 101, scope: !10004)
!10007 = !DILocation(line: 149, column: 87, scope: !10004)
!10008 = !DILocation(line: 149, column: 99, scope: !10004)
!10009 = !DILocation(line: 150, column: 37, scope: !10004)
!10010 = !DILocation(line: 150, column: 34, scope: !10004)
!10011 = !DILocation(line: 151, column: 21, scope: !10004)
!10012 = !DILocation(line: 152, column: 91, scope: !10013)
!10013 = distinct !DILexicalBlock(scope: !9999, file: !1843, line: 151, column: 28)
!10014 = !DILocation(line: 153, column: 111, scope: !10013)
!10015 = !DILocation(line: 153, column: 101, scope: !10013)
!10016 = !DILocation(line: 153, column: 87, scope: !10013)
!10017 = !DILocation(line: 153, column: 99, scope: !10013)
!10018 = !DILocation(line: 154, column: 34, scope: !10013)
!10019 = !DILocation(line: 157, column: 32, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !9993, file: !1843, line: 156, column: 24)
!10021 = !DILocation(line: 158, column: 83, scope: !10020)
!10022 = !DILocation(line: 159, column: 60, scope: !10020)
!10023 = !DILocation(line: 159, column: 33, scope: !10020)
!10024 = !DILocation(line: 159, column: 30, scope: !10020)
!10025 = !DILocation(line: 162, column: 29, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !9988, file: !1843, line: 161, column: 20)
!10027 = !DILocation(line: 163, column: 83, scope: !10026)
!10028 = !DILocation(line: 164, column: 103, scope: !10026)
!10029 = !DILocation(line: 164, column: 93, scope: !10026)
!10030 = !DILocation(line: 164, column: 79, scope: !10026)
!10031 = !DILocation(line: 164, column: 91, scope: !10026)
!10032 = !DILocation(line: 165, column: 56, scope: !10026)
!10033 = !DILocation(line: 165, column: 29, scope: !10026)
!10034 = !DILocation(line: 165, column: 26, scope: !10026)
!10035 = !DILocation(line: 168, column: 24, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !9984, file: !1843, line: 167, column: 16)
!10037 = !DILocation(line: 169, column: 75, scope: !10036)
!10038 = !DILocation(line: 170, column: 50, scope: !10036)
!10039 = !DILocation(line: 170, column: 22, scope: !10036)
!10040 = !DILocation(line: 173, column: 21, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !9978, file: !1843, line: 172, column: 12)
!10042 = !DILocation(line: 174, column: 75, scope: !10041)
!10043 = !DILocation(line: 175, column: 95, scope: !10041)
!10044 = !DILocation(line: 175, column: 85, scope: !10041)
!10045 = !DILocation(line: 175, column: 71, scope: !10041)
!10046 = !DILocation(line: 175, column: 83, scope: !10041)
!10047 = !DILocation(line: 176, column: 46, scope: !10041)
!10048 = !DILocation(line: 176, column: 18, scope: !10041)
!10049 = !DILocation(line: 0, scope: !9978)
!10050 = !DILocation(line: 178, column: 5, scope: !1864)
!10051 = distinct !DISubprogram(name: "BlockSize", scope: !1843, file: !1843, line: 191, type: !1865, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1842, retainedNodes: !10052)
!10052 = !{!10053, !10054, !10055, !10056, !10057}
!10053 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10051, file: !1843, line: 191, type: !194)
!10054 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10051, file: !1843, line: 191, type: !175)
!10055 = !DILocalVariable(name: "D", scope: !10051, file: !1843, line: 193, type: !1871)
!10056 = !DILocalVariable(name: "region", scope: !10051, file: !1843, line: 194, type: !175)
!10057 = !DILocalVariable(name: "BlockUpperBound", scope: !10051, file: !1843, line: 194, type: !175)
!10058 = !DILocation(line: 0, scope: !10051)
!10059 = !DILocation(line: 196, column: 26, scope: !10051)
!10060 = !DILocation(line: 196, column: 45, scope: !10051)
!10061 = !DILocation(line: 197, column: 28, scope: !10051)
!10062 = !DILocation(line: 197, column: 5, scope: !10051)
!10063 = !DILocation(line: 198, column: 15, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10051, file: !1843, line: 197, column: 43)
!10065 = !DILocation(line: 199, column: 50, scope: !10064)
!10066 = !DILocation(line: 199, column: 25, scope: !10064)
!10067 = distinct !{!10067, !10062, !10068}
!10068 = !DILocation(line: 200, column: 5, scope: !10051)
!10069 = !DILocation(line: 202, column: 35, scope: !10051)
!10070 = !DILocation(line: 202, column: 5, scope: !10051)
!10071 = distinct !DISubprogram(name: "BlockIndex", scope: !1843, file: !1843, line: 205, type: !1865, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1842, retainedNodes: !10072)
!10072 = !{!10073, !10074, !10075, !10076, !10077, !10078}
!10073 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10071, file: !1843, line: 205, type: !194)
!10074 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !10071, file: !1843, line: 205, type: !175)
!10075 = !DILocalVariable(name: "D", scope: !10071, file: !1843, line: 207, type: !1871)
!10076 = !DILocalVariable(name: "region", scope: !10071, file: !1843, line: 208, type: !175)
!10077 = !DILocalVariable(name: "BlockUpperAddr", scope: !10071, file: !1843, line: 208, type: !175)
!10078 = !DILocalVariable(name: "blk_idx", scope: !10071, file: !1843, line: 209, type: !175)
!10079 = !DILocation(line: 0, scope: !10071)
!10080 = !DILocation(line: 211, column: 25, scope: !10071)
!10081 = !DILocation(line: 211, column: 44, scope: !10071)
!10082 = !DILocation(line: 211, column: 81, scope: !10071)
!10083 = !DILocation(line: 211, column: 57, scope: !10071)
!10084 = !DILocation(line: 213, column: 28, scope: !10071)
!10085 = !DILocation(line: 213, column: 40, scope: !10071)
!10086 = !DILocation(line: 213, column: 66, scope: !10071)
!10087 = !DILocation(line: 213, column: 5, scope: !10071)
!10088 = !DILocation(line: 214, column: 17, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10071, file: !1843, line: 213, column: 78)
!10090 = !DILocation(line: 215, column: 18, scope: !10089)
!10091 = !DILocation(line: 216, column: 15, scope: !10089)
!10092 = !DILocation(line: 217, column: 48, scope: !10089)
!10093 = !DILocation(line: 217, column: 85, scope: !10089)
!10094 = !DILocation(line: 217, column: 61, scope: !10089)
!10095 = distinct !{!10095, !10087, !10096}
!10096 = !DILocation(line: 218, column: 5, scope: !10071)
!10097 = !DILocation(line: 221, column: 53, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10099, file: !1843, line: 220, column: 37)
!10099 = distinct !DILexicalBlock(scope: !10071, file: !1843, line: 220, column: 9)
!10100 = !DILocation(line: 221, column: 29, scope: !10098)
!10101 = !DILocation(line: 221, column: 17, scope: !10098)
!10102 = !DILocation(line: 222, column: 5, scope: !10098)
!10103 = !DILocation(line: 0, scope: !10099)
!10104 = !DILocation(line: 225, column: 5, scope: !10071)
!10105 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !1843, file: !1843, line: 232, type: !3365, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1842, retainedNodes: !210)
!10106 = !DILocation(line: 238, column: 5, scope: !10105)
!10107 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !1843, file: !1843, line: 243, type: !3365, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1842, retainedNodes: !210)
!10108 = !DILocation(line: 245, column: 5, scope: !10107)
!10109 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !1843, file: !1843, line: 249, type: !3365, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1842, retainedNodes: !210)
!10110 = !DILocation(line: 254, column: 5, scope: !10109)
!10111 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !1843, file: !1843, line: 259, type: !3365, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1842, retainedNodes: !210)
!10112 = !DILocation(line: 261, column: 5, scope: !10111)
!10113 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !1843, file: !1843, line: 271, type: !5830, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1842, retainedNodes: !10114)
!10114 = !{!10115, !10116}
!10115 = !DILocalVariable(name: "delay", arg: 1, scope: !10113, file: !1843, line: 271, type: !175)
!10116 = !DILocalVariable(name: "ret", scope: !10113, file: !1843, line: 276, type: !2531)
!10117 = !DILocation(line: 0, scope: !10113)
!10118 = !DILocation(line: 277, column: 11, scope: !10113)
!10119 = !DILocation(line: 278, column: 13, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10113, file: !1843, line: 278, column: 9)
!10121 = !DILocation(line: 278, column: 9, scope: !10113)
!10122 = !DILocation(line: 279, column: 9, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10124, file: !1843, line: 279, column: 9)
!10124 = distinct !DILexicalBlock(scope: !10125, file: !1843, line: 279, column: 9)
!10125 = distinct !DILexicalBlock(scope: !10126, file: !1843, line: 279, column: 9)
!10126 = distinct !DILexicalBlock(scope: !10120, file: !1843, line: 278, column: 35)
!10127 = !DILocation(line: 282, column: 1, scope: !10113)
!10128 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2514, file: !2514, line: 58, type: !10129, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !10131)
!10129 = !DISubroutineType(types: !10130)
!10130 = !{null, !2141, !79, !2141, null}
!10131 = !{!10132, !10133, !10134, !10135, !10144}
!10132 = !DILocalVariable(name: "func", arg: 1, scope: !10128, file: !2514, line: 58, type: !2141)
!10133 = !DILocalVariable(name: "line", arg: 2, scope: !10128, file: !2514, line: 58, type: !79)
!10134 = !DILocalVariable(name: "message", arg: 3, scope: !10128, file: !2514, line: 58, type: !2141)
!10135 = !DILocalVariable(name: "ap", scope: !10128, file: !2514, line: 60, type: !10136)
!10136 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !10137, line: 46, baseType: !10138)
!10137 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!10138 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !10139, line: 32, baseType: !10140)
!10139 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!10140 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2514, baseType: !10141)
!10141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !10142)
!10142 = !{!10143}
!10143 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !10141, file: !2514, line: 60, baseType: !194, size: 32)
!10144 = !DILocalVariable(name: "mask", scope: !10128, file: !2514, line: 62, type: !175)
!10145 = !DILocation(line: 0, scope: !10128)
!10146 = !DILocation(line: 60, column: 5, scope: !10128)
!10147 = !DILocation(line: 60, column: 13, scope: !10128)
!10148 = !DILocation(line: 62, column: 5, scope: !10128)
!10149 = !DILocation(line: 63, column: 5, scope: !10128)
!10150 = !DILocation(line: 65, column: 5, scope: !10128)
!10151 = !DILocation(line: 66, column: 5, scope: !10128)
!10152 = !DILocation(line: 67, column: 5, scope: !10128)
!10153 = !DILocation(line: 69, column: 37, scope: !10128)
!10154 = !DILocation(line: 69, column: 5, scope: !10128)
!10155 = !DILocation(line: 71, column: 1, scope: !10128)
!10156 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2514, file: !2514, line: 72, type: !10129, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !10157)
!10157 = !{!10158, !10159, !10160, !10161, !10162}
!10158 = !DILocalVariable(name: "func", arg: 1, scope: !10156, file: !2514, line: 72, type: !2141)
!10159 = !DILocalVariable(name: "line", arg: 2, scope: !10156, file: !2514, line: 72, type: !79)
!10160 = !DILocalVariable(name: "message", arg: 3, scope: !10156, file: !2514, line: 72, type: !2141)
!10161 = !DILocalVariable(name: "ap", scope: !10156, file: !2514, line: 74, type: !10136)
!10162 = !DILocalVariable(name: "mask", scope: !10156, file: !2514, line: 76, type: !175)
!10163 = !DILocation(line: 0, scope: !10156)
!10164 = !DILocation(line: 74, column: 5, scope: !10156)
!10165 = !DILocation(line: 74, column: 13, scope: !10156)
!10166 = !DILocation(line: 76, column: 5, scope: !10156)
!10167 = !DILocation(line: 77, column: 5, scope: !10156)
!10168 = !DILocation(line: 79, column: 5, scope: !10156)
!10169 = !DILocation(line: 80, column: 5, scope: !10156)
!10170 = !DILocation(line: 81, column: 5, scope: !10156)
!10171 = !DILocation(line: 83, column: 37, scope: !10156)
!10172 = !DILocation(line: 83, column: 5, scope: !10156)
!10173 = !DILocation(line: 85, column: 1, scope: !10156)
!10174 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2514, file: !2514, line: 86, type: !10129, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !10175)
!10175 = !{!10176, !10177, !10178, !10179, !10180}
!10176 = !DILocalVariable(name: "func", arg: 1, scope: !10174, file: !2514, line: 86, type: !2141)
!10177 = !DILocalVariable(name: "line", arg: 2, scope: !10174, file: !2514, line: 86, type: !79)
!10178 = !DILocalVariable(name: "message", arg: 3, scope: !10174, file: !2514, line: 86, type: !2141)
!10179 = !DILocalVariable(name: "ap", scope: !10174, file: !2514, line: 88, type: !10136)
!10180 = !DILocalVariable(name: "mask", scope: !10174, file: !2514, line: 90, type: !175)
!10181 = !DILocation(line: 0, scope: !10174)
!10182 = !DILocation(line: 88, column: 5, scope: !10174)
!10183 = !DILocation(line: 88, column: 13, scope: !10174)
!10184 = !DILocation(line: 90, column: 5, scope: !10174)
!10185 = !DILocation(line: 91, column: 5, scope: !10174)
!10186 = !DILocation(line: 93, column: 5, scope: !10174)
!10187 = !DILocation(line: 94, column: 5, scope: !10174)
!10188 = !DILocation(line: 95, column: 5, scope: !10174)
!10189 = !DILocation(line: 97, column: 37, scope: !10174)
!10190 = !DILocation(line: 97, column: 5, scope: !10174)
!10191 = !DILocation(line: 99, column: 1, scope: !10174)
!10192 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2514, file: !2514, line: 101, type: !10193, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2513, retainedNodes: !10197)
!10193 = !DISubroutineType(types: !10194)
!10194 = !{null, !2141, !79, !2141, !10195, !79, null}
!10195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10196, size: 32)
!10196 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!10197 = !{!10198, !10199, !10200, !10201, !10202}
!10198 = !DILocalVariable(name: "func", arg: 1, scope: !10192, file: !2514, line: 101, type: !2141)
!10199 = !DILocalVariable(name: "line", arg: 2, scope: !10192, file: !2514, line: 101, type: !79)
!10200 = !DILocalVariable(name: "message", arg: 3, scope: !10192, file: !2514, line: 101, type: !2141)
!10201 = !DILocalVariable(name: "data", arg: 4, scope: !10192, file: !2514, line: 101, type: !10195)
!10202 = !DILocalVariable(name: "length", arg: 5, scope: !10192, file: !2514, line: 101, type: !79)
!10203 = !DILocation(line: 0, scope: !10192)
!10204 = !DILocation(line: 103, column: 1, scope: !10192)
!10205 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !1923, file: !1923, line: 87, type: !3113, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !10206)
!10206 = !{!10207, !10208}
!10207 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10205, file: !1923, line: 87, type: !175)
!10208 = !DILocalVariable(name: "value", scope: !10205, file: !1923, line: 89, type: !175)
!10209 = !DILocation(line: 0, scope: !10205)
!10210 = !DILocation(line: 91, column: 41, scope: !10205)
!10211 = !DILocation(line: 91, column: 5, scope: !10205)
!10212 = !DILocation(line: 91, column: 19, scope: !10205)
!10213 = !DILocation(line: 91, column: 31, scope: !10205)
!10214 = !DILocation(line: 92, column: 77, scope: !10205)
!10215 = !DILocation(line: 92, column: 60, scope: !10205)
!10216 = !DILocation(line: 92, column: 31, scope: !10205)
!10217 = !DILocation(line: 94, column: 5, scope: !10205)
!10218 = !DILocation(line: 94, column: 27, scope: !10205)
!10219 = !DILocation(line: 94, column: 39, scope: !10205)
!10220 = !DILocation(line: 94, column: 65, scope: !10205)
!10221 = distinct !{!10221, !10217, !10222}
!10222 = !DILocation(line: 94, column: 70, scope: !10205)
!10223 = !DILocation(line: 96, column: 29, scope: !10205)
!10224 = !DILocation(line: 96, column: 64, scope: !10205)
!10225 = !DILocation(line: 98, column: 5, scope: !10205)
!10226 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !1923, file: !1923, line: 102, type: !10227, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !10229)
!10227 = !DISubroutineType(types: !10228)
!10228 = !{null, !175, !175}
!10229 = !{!10230, !10231}
!10230 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10226, file: !1923, line: 102, type: !175)
!10231 = !DILocalVariable(name: "value", arg: 2, scope: !10226, file: !1923, line: 102, type: !175)
!10232 = !DILocation(line: 0, scope: !10226)
!10233 = !DILocation(line: 106, column: 40, scope: !10226)
!10234 = !DILocation(line: 106, column: 77, scope: !10226)
!10235 = !DILocation(line: 106, column: 102, scope: !10226)
!10236 = !DILocation(line: 106, column: 5, scope: !10226)
!10237 = !DILocation(line: 106, column: 19, scope: !10226)
!10238 = !DILocation(line: 106, column: 31, scope: !10226)
!10239 = !DILocation(line: 107, column: 77, scope: !10226)
!10240 = !DILocation(line: 107, column: 60, scope: !10226)
!10241 = !DILocation(line: 107, column: 31, scope: !10226)
!10242 = !DILocation(line: 109, column: 5, scope: !10226)
!10243 = !DILocation(line: 109, column: 27, scope: !10226)
!10244 = !DILocation(line: 109, column: 39, scope: !10226)
!10245 = !DILocation(line: 109, column: 65, scope: !10226)
!10246 = distinct !{!10246, !10242, !10247}
!10247 = !DILocation(line: 109, column: 70, scope: !10226)
!10248 = !DILocation(line: 111, column: 5, scope: !10226)
!10249 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !1923, file: !1923, line: 114, type: !208, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10250 = !DILocation(line: 117, column: 36, scope: !10249)
!10251 = !DILocation(line: 117, column: 18, scope: !10249)
!10252 = !DILocation(line: 118, column: 37, scope: !10249)
!10253 = !DILocation(line: 118, column: 18, scope: !10249)
!10254 = !DILocation(line: 119, column: 37, scope: !10249)
!10255 = !DILocation(line: 119, column: 19, scope: !10249)
!10256 = !DILocation(line: 120, column: 37, scope: !10249)
!10257 = !DILocation(line: 120, column: 19, scope: !10249)
!10258 = !DILocation(line: 121, column: 37, scope: !10249)
!10259 = !DILocation(line: 121, column: 19, scope: !10249)
!10260 = !DILocation(line: 122, column: 37, scope: !10249)
!10261 = !DILocation(line: 122, column: 19, scope: !10249)
!10262 = !DILocation(line: 123, column: 37, scope: !10249)
!10263 = !DILocation(line: 123, column: 19, scope: !10249)
!10264 = !DILocation(line: 125, column: 37, scope: !10249)
!10265 = !DILocation(line: 125, column: 19, scope: !10249)
!10266 = !DILocation(line: 126, column: 37, scope: !10249)
!10267 = !DILocation(line: 126, column: 19, scope: !10249)
!10268 = !DILocation(line: 127, column: 37, scope: !10249)
!10269 = !DILocation(line: 127, column: 19, scope: !10249)
!10270 = !DILocation(line: 128, column: 37, scope: !10249)
!10271 = !DILocation(line: 128, column: 19, scope: !10249)
!10272 = !DILocation(line: 130, column: 36, scope: !10249)
!10273 = !DILocation(line: 130, column: 18, scope: !10249)
!10274 = !DILocation(line: 131, column: 36, scope: !10249)
!10275 = !DILocation(line: 131, column: 18, scope: !10249)
!10276 = !DILocation(line: 133, column: 5, scope: !10249)
!10277 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !1923, file: !1923, line: 140, type: !10278, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10278 = !DISubroutineType(types: !10279)
!10279 = !{!79}
!10280 = !DILocation(line: 144, column: 5, scope: !10277)
!10281 = !DILocation(line: 144, column: 19, scope: !10277)
!10282 = !DILocation(line: 144, column: 28, scope: !10277)
!10283 = !DILocation(line: 147, column: 19, scope: !10277)
!10284 = !DILocation(line: 147, column: 28, scope: !10277)
!10285 = !DILocation(line: 150, column: 19, scope: !10277)
!10286 = !DILocation(line: 150, column: 28, scope: !10277)
!10287 = !DILocation(line: 152, column: 5, scope: !10277)
!10288 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !1923, file: !1923, line: 157, type: !5962, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !10289)
!10289 = !{!10290, !10291, !10292, !10293, !10294, !10295}
!10290 = !DILocalVariable(name: "mbist_src", scope: !10288, file: !1923, line: 159, type: !175)
!10291 = !DILocalVariable(name: "mbist_len", scope: !10288, file: !1923, line: 159, type: !175)
!10292 = !DILocalVariable(name: "mbist_data", scope: !10288, file: !1923, line: 159, type: !3086)
!10293 = !DILocalVariable(name: "i", scope: !10288, file: !1923, line: 160, type: !175)
!10294 = !DILocalVariable(name: "bist_data_inv", scope: !10288, file: !1923, line: 160, type: !175)
!10295 = !DILocalVariable(name: "bist_data_random", scope: !10288, file: !1923, line: 160, type: !175)
!10296 = !DILocation(line: 159, column: 36, scope: !10288)
!10297 = !DILocation(line: 0, scope: !10288)
!10298 = !DILocation(line: 165, column: 5, scope: !10288)
!10299 = !DILocation(line: 165, column: 19, scope: !10288)
!10300 = !DILocation(line: 165, column: 30, scope: !10288)
!10301 = !DILocation(line: 166, column: 5, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10288, file: !1923, line: 166, column: 5)
!10303 = !DILocation(line: 167, column: 9, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10305, file: !1923, line: 167, column: 9)
!10305 = distinct !DILexicalBlock(scope: !10306, file: !1923, line: 166, column: 66)
!10306 = distinct !DILexicalBlock(scope: !10302, file: !1923, line: 166, column: 5)
!10307 = !DILocation(line: 168, column: 13, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10309, file: !1923, line: 168, column: 13)
!10309 = distinct !DILexicalBlock(scope: !10310, file: !1923, line: 167, column: 34)
!10310 = distinct !DILexicalBlock(scope: !10304, file: !1923, line: 167, column: 9)
!10311 = !DILocation(line: 168, column: 57, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10308, file: !1923, line: 168, column: 13)
!10313 = distinct !{!10313, !10307, !10314}
!10314 = !DILocation(line: 183, column: 13, scope: !10308)
!10315 = !DILocation(line: 170, column: 42, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10312, file: !1923, line: 168, column: 83)
!10317 = !DILocation(line: 172, column: 42, scope: !10316)
!10318 = !DILocation(line: 174, column: 45, scope: !10316)
!10319 = !DILocation(line: 174, column: 59, scope: !10316)
!10320 = !DILocation(line: 174, column: 154, scope: !10316)
!10321 = !DILocation(line: 174, column: 87, scope: !10316)
!10322 = !DILocation(line: 174, column: 134, scope: !10316)
!10323 = !DILocation(line: 174, column: 42, scope: !10316)
!10324 = !DILocation(line: 175, column: 42, scope: !10316)
!10325 = !DILocation(line: 177, column: 17, scope: !10316)
!10326 = !DILocation(line: 177, column: 39, scope: !10316)
!10327 = !DILocation(line: 177, column: 50, scope: !10316)
!10328 = !DILocation(line: 177, column: 71, scope: !10316)
!10329 = distinct !{!10329, !10325, !10330}
!10330 = !DILocation(line: 177, column: 78, scope: !10316)
!10331 = !DILocation(line: 179, column: 36, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10316, file: !1923, line: 179, column: 21)
!10333 = !DILocation(line: 179, column: 47, scope: !10332)
!10334 = !DILocation(line: 179, column: 69, scope: !10332)
!10335 = !DILocation(line: 168, column: 79, scope: !10312)
!10336 = !DILocation(line: 179, column: 21, scope: !10316)
!10337 = !DILocation(line: 167, column: 30, scope: !10310)
!10338 = !DILocation(line: 167, column: 23, scope: !10310)
!10339 = distinct !{!10339, !10303, !10340}
!10340 = !DILocation(line: 184, column: 9, scope: !10304)
!10341 = !DILocation(line: 166, column: 62, scope: !10306)
!10342 = !DILocation(line: 166, column: 43, scope: !10306)
!10343 = distinct !{!10343, !10301, !10344}
!10344 = !DILocation(line: 185, column: 5, scope: !10302)
!10345 = !DILocation(line: 189, column: 1, scope: !10288)
!10346 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !1923, file: !1923, line: 190, type: !5962, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10347 = !DILocation(line: 192, column: 9, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10346, file: !1923, line: 192, column: 9)
!10349 = !DILocation(line: 192, column: 26, scope: !10348)
!10350 = !DILocation(line: 0, scope: !10346)
!10351 = !DILocation(line: 197, column: 1, scope: !10346)
!10352 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !1923, file: !1923, line: 201, type: !208, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !10353)
!10353 = !{!10354, !10355}
!10354 = !DILocalVariable(name: "dqy_in_del", scope: !10352, file: !1923, line: 203, type: !858)
!10355 = !DILocalVariable(name: "dqs_in_del", scope: !10352, file: !1923, line: 204, type: !858)
!10356 = !DILocation(line: 0, scope: !10352)
!10357 = !DILocation(line: 206, column: 5, scope: !10352)
!10358 = !DILocation(line: 206, column: 19, scope: !10352)
!10359 = !DILocation(line: 206, column: 28, scope: !10352)
!10360 = !DILocation(line: 207, column: 19, scope: !10352)
!10361 = !DILocation(line: 207, column: 28, scope: !10352)
!10362 = !DILocation(line: 208, column: 19, scope: !10352)
!10363 = !DILocation(line: 208, column: 28, scope: !10352)
!10364 = !DILocation(line: 209, column: 19, scope: !10352)
!10365 = !DILocation(line: 209, column: 28, scope: !10352)
!10366 = !DILocation(line: 212, column: 23, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10368, file: !1923, line: 211, column: 78)
!10368 = distinct !DILexicalBlock(scope: !10369, file: !1923, line: 211, column: 5)
!10369 = distinct !DILexicalBlock(scope: !10352, file: !1923, line: 211, column: 5)
!10370 = !DILocation(line: 212, column: 32, scope: !10367)
!10371 = !DILocation(line: 213, column: 23, scope: !10367)
!10372 = !DILocation(line: 213, column: 32, scope: !10367)
!10373 = !DILocation(line: 215, column: 19, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10367, file: !1923, line: 215, column: 13)
!10375 = !DILocation(line: 215, column: 15, scope: !10374)
!10376 = !DILocation(line: 215, column: 13, scope: !10367)
!10377 = !DILocation(line: 211, column: 40, scope: !10368)
!10378 = !DILocation(line: 211, column: 5, scope: !10369)
!10379 = distinct !{!10379, !10378, !10380}
!10380 = !DILocation(line: 218, column: 5, scope: !10369)
!10381 = !DILocation(line: 211, column: 57, scope: !10368)
!10382 = !DILocation(line: 212, column: 9, scope: !10367)
!10383 = !DILocation(line: 212, column: 45, scope: !10367)
!10384 = !DILocation(line: 212, column: 83, scope: !10367)
!10385 = !DILocation(line: 212, column: 121, scope: !10367)
!10386 = !DILocation(line: 212, column: 70, scope: !10367)
!10387 = !DILocation(line: 212, column: 108, scope: !10367)
!10388 = !DILocation(line: 212, column: 146, scope: !10367)
!10389 = !DILocation(line: 222, column: 49, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10391, file: !1923, line: 221, column: 84)
!10391 = distinct !DILexicalBlock(scope: !10392, file: !1923, line: 221, column: 9)
!10392 = distinct !DILexicalBlock(scope: !10393, file: !1923, line: 221, column: 9)
!10393 = distinct !DILexicalBlock(scope: !10394, file: !1923, line: 220, column: 25)
!10394 = distinct !DILexicalBlock(scope: !10352, file: !1923, line: 220, column: 9)
!10395 = !DILocation(line: 222, column: 13, scope: !10390)
!10396 = !DILocation(line: 222, column: 27, scope: !10390)
!10397 = !DILocation(line: 222, column: 36, scope: !10390)
!10398 = !DILocation(line: 224, column: 23, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10390, file: !1923, line: 224, column: 17)
!10400 = !DILocation(line: 224, column: 19, scope: !10399)
!10401 = !DILocation(line: 224, column: 17, scope: !10390)
!10402 = distinct !{!10402, !10403, !10404}
!10403 = !DILocation(line: 221, column: 9, scope: !10392)
!10404 = !DILocation(line: 227, column: 9, scope: !10392)
!10405 = !DILocation(line: 230, column: 1, scope: !10352)
!10406 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !1923, file: !1923, line: 253, type: !208, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10407 = !DILocation(line: 257, column: 26, scope: !10406)
!10408 = !DILocation(line: 259, column: 5, scope: !10406)
!10409 = !DILocation(line: 259, column: 19, scope: !10406)
!10410 = !DILocation(line: 259, column: 29, scope: !10406)
!10411 = !DILocation(line: 260, column: 5, scope: !10406)
!10412 = !DILocation(line: 260, column: 27, scope: !10406)
!10413 = !DILocation(line: 260, column: 93, scope: !10406)
!10414 = distinct !{!10414, !10411, !10415}
!10415 = !DILocation(line: 260, column: 98, scope: !10406)
!10416 = !DILocation(line: 261, column: 29, scope: !10406)
!10417 = !DILocation(line: 262, column: 5, scope: !10406)
!10418 = !DILocation(line: 262, column: 27, scope: !10406)
!10419 = !DILocation(line: 262, column: 93, scope: !10406)
!10420 = distinct !{!10420, !10417, !10421}
!10421 = !DILocation(line: 262, column: 98, scope: !10406)
!10422 = !DILocation(line: 264, column: 42, scope: !10406)
!10423 = !DILocation(line: 265, column: 48, scope: !10406)
!10424 = !DILocation(line: 267, column: 5, scope: !10406)
!10425 = !DILocation(line: 267, column: 27, scope: !10406)
!10426 = !DILocation(line: 267, column: 39, scope: !10406)
!10427 = !DILocation(line: 267, column: 65, scope: !10406)
!10428 = distinct !{!10428, !10424, !10429}
!10429 = !DILocation(line: 267, column: 70, scope: !10406)
!10430 = !DILocation(line: 269, column: 5, scope: !10406)
!10431 = !DILocation(line: 273, column: 8, scope: !10406)
!10432 = !DILocation(line: 275, column: 5, scope: !10406)
!10433 = !DILocation(line: 275, column: 27, scope: !10406)
!10434 = !DILocation(line: 275, column: 39, scope: !10406)
!10435 = !DILocation(line: 275, column: 65, scope: !10406)
!10436 = distinct !{!10436, !10432, !10437}
!10437 = !DILocation(line: 275, column: 70, scope: !10406)
!10438 = !DILocation(line: 278, column: 9, scope: !10439)
!10439 = distinct !DILexicalBlock(scope: !10406, file: !1923, line: 278, column: 9)
!10440 = !DILocation(line: 278, column: 44, scope: !10439)
!10441 = !DILocation(line: 278, column: 9, scope: !10406)
!10442 = !DILocation(line: 279, column: 13, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10444, file: !1923, line: 279, column: 12)
!10444 = distinct !DILexicalBlock(scope: !10439, file: !1923, line: 278, column: 55)
!10445 = !DILocation(line: 279, column: 48, scope: !10443)
!10446 = !DILocation(line: 279, column: 56, scope: !10443)
!10447 = !DILocation(line: 0, scope: !10443)
!10448 = !DILocation(line: 288, column: 1, scope: !10406)
!10449 = distinct !DISubprogram(name: "custom_setEMI", scope: !1923, file: !1923, line: 294, type: !10450, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10450 = !DISubroutineType(types: !10451)
!10451 = !{!1190}
!10452 = !DILocation(line: 298, column: 5, scope: !10449)
!10453 = !DILocation(line: 300, column: 5, scope: !10449)
!10454 = !DILocation(line: 302, column: 20, scope: !10449)
!10455 = !DILocation(line: 302, column: 18, scope: !10449)
!10456 = !DILocation(line: 303, column: 20, scope: !10449)
!10457 = !DILocation(line: 303, column: 18, scope: !10449)
!10458 = !DILocation(line: 304, column: 20, scope: !10449)
!10459 = !DILocation(line: 304, column: 18, scope: !10449)
!10460 = !DILocation(line: 307, column: 5, scope: !10449)
!10461 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !1923, file: !1923, line: 312, type: !10450, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10462 = !DILocation(line: 319, column: 29, scope: !10461)
!10463 = !DILocation(line: 319, column: 5, scope: !10461)
!10464 = !DILocation(line: 319, column: 19, scope: !10461)
!10465 = !DILocation(line: 319, column: 27, scope: !10461)
!10466 = !DILocation(line: 320, column: 29, scope: !10461)
!10467 = !DILocation(line: 320, column: 19, scope: !10461)
!10468 = !DILocation(line: 320, column: 27, scope: !10461)
!10469 = !DILocation(line: 322, column: 30, scope: !10461)
!10470 = !DILocation(line: 322, column: 19, scope: !10461)
!10471 = !DILocation(line: 322, column: 28, scope: !10461)
!10472 = !DILocation(line: 324, column: 30, scope: !10461)
!10473 = !DILocation(line: 324, column: 19, scope: !10461)
!10474 = !DILocation(line: 324, column: 28, scope: !10461)
!10475 = !DILocation(line: 326, column: 31, scope: !10461)
!10476 = !DILocation(line: 326, column: 19, scope: !10461)
!10477 = !DILocation(line: 326, column: 29, scope: !10461)
!10478 = !DILocation(line: 327, column: 31, scope: !10461)
!10479 = !DILocation(line: 327, column: 19, scope: !10461)
!10480 = !DILocation(line: 327, column: 29, scope: !10461)
!10481 = !DILocation(line: 332, column: 30, scope: !10461)
!10482 = !DILocation(line: 332, column: 19, scope: !10461)
!10483 = !DILocation(line: 332, column: 28, scope: !10461)
!10484 = !DILocation(line: 333, column: 30, scope: !10461)
!10485 = !DILocation(line: 333, column: 19, scope: !10461)
!10486 = !DILocation(line: 333, column: 28, scope: !10461)
!10487 = !DILocation(line: 334, column: 30, scope: !10461)
!10488 = !DILocation(line: 334, column: 19, scope: !10461)
!10489 = !DILocation(line: 334, column: 28, scope: !10461)
!10490 = !DILocation(line: 336, column: 30, scope: !10461)
!10491 = !DILocation(line: 336, column: 19, scope: !10461)
!10492 = !DILocation(line: 336, column: 28, scope: !10461)
!10493 = !DILocation(line: 337, column: 30, scope: !10461)
!10494 = !DILocation(line: 337, column: 19, scope: !10461)
!10495 = !DILocation(line: 337, column: 28, scope: !10461)
!10496 = !DILocation(line: 338, column: 30, scope: !10461)
!10497 = !DILocation(line: 338, column: 19, scope: !10461)
!10498 = !DILocation(line: 338, column: 28, scope: !10461)
!10499 = !DILocation(line: 339, column: 30, scope: !10461)
!10500 = !DILocation(line: 339, column: 19, scope: !10461)
!10501 = !DILocation(line: 339, column: 28, scope: !10461)
!10502 = !DILocation(line: 341, column: 5, scope: !10461)
!10503 = !DILocation(line: 345, column: 5, scope: !10461)
!10504 = !DILocation(line: 345, column: 19, scope: !10461)
!10505 = !DILocation(line: 345, column: 28, scope: !10461)
!10506 = !DILocation(line: 346, column: 5, scope: !10461)
!10507 = !DILocation(line: 346, column: 28, scope: !10461)
!10508 = !DILocation(line: 346, column: 82, scope: !10461)
!10509 = distinct !{!10509, !10506, !10510}
!10510 = !DILocation(line: 346, column: 87, scope: !10461)
!10511 = !DILocation(line: 347, column: 28, scope: !10461)
!10512 = !DILocation(line: 348, column: 5, scope: !10461)
!10513 = !DILocation(line: 348, column: 28, scope: !10461)
!10514 = !DILocation(line: 348, column: 82, scope: !10461)
!10515 = distinct !{!10515, !10512, !10516}
!10516 = !DILocation(line: 348, column: 87, scope: !10461)
!10517 = !DILocation(line: 349, column: 28, scope: !10461)
!10518 = !DILocation(line: 351, column: 5, scope: !10461)
!10519 = !DILocation(line: 353, column: 5, scope: !10461)
!10520 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !1923, file: !1923, line: 358, type: !208, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10521 = !DILocation(line: 361, column: 36, scope: !10520)
!10522 = !DILocation(line: 361, column: 50, scope: !10520)
!10523 = !DILocation(line: 361, column: 34, scope: !10520)
!10524 = !DILocation(line: 362, column: 50, scope: !10520)
!10525 = !DILocation(line: 362, column: 34, scope: !10520)
!10526 = !DILocation(line: 363, column: 50, scope: !10520)
!10527 = !DILocation(line: 363, column: 34, scope: !10520)
!10528 = !DILocation(line: 364, column: 50, scope: !10520)
!10529 = !DILocation(line: 364, column: 34, scope: !10520)
!10530 = !DILocation(line: 365, column: 50, scope: !10520)
!10531 = !DILocation(line: 365, column: 34, scope: !10520)
!10532 = !DILocation(line: 366, column: 50, scope: !10520)
!10533 = !DILocation(line: 366, column: 34, scope: !10520)
!10534 = !DILocation(line: 367, column: 50, scope: !10520)
!10535 = !DILocation(line: 367, column: 34, scope: !10520)
!10536 = !DILocation(line: 368, column: 50, scope: !10520)
!10537 = !DILocation(line: 368, column: 34, scope: !10520)
!10538 = !DILocation(line: 369, column: 50, scope: !10520)
!10539 = !DILocation(line: 369, column: 34, scope: !10520)
!10540 = !DILocation(line: 370, column: 50, scope: !10520)
!10541 = !DILocation(line: 370, column: 34, scope: !10520)
!10542 = !DILocation(line: 371, column: 50, scope: !10520)
!10543 = !DILocation(line: 371, column: 34, scope: !10520)
!10544 = !DILocation(line: 372, column: 50, scope: !10520)
!10545 = !DILocation(line: 372, column: 34, scope: !10520)
!10546 = !DILocation(line: 373, column: 51, scope: !10520)
!10547 = !DILocation(line: 373, column: 35, scope: !10520)
!10548 = !DILocation(line: 374, column: 51, scope: !10520)
!10549 = !DILocation(line: 374, column: 35, scope: !10520)
!10550 = !DILocation(line: 375, column: 50, scope: !10520)
!10551 = !DILocation(line: 375, column: 34, scope: !10520)
!10552 = !DILocation(line: 376, column: 50, scope: !10520)
!10553 = !DILocation(line: 376, column: 34, scope: !10520)
!10554 = !DILocation(line: 377, column: 50, scope: !10520)
!10555 = !DILocation(line: 377, column: 34, scope: !10520)
!10556 = !DILocation(line: 378, column: 50, scope: !10520)
!10557 = !DILocation(line: 378, column: 34, scope: !10520)
!10558 = !DILocation(line: 379, column: 50, scope: !10520)
!10559 = !DILocation(line: 379, column: 34, scope: !10520)
!10560 = !DILocation(line: 380, column: 50, scope: !10520)
!10561 = !DILocation(line: 380, column: 34, scope: !10520)
!10562 = !DILocation(line: 382, column: 1, scope: !10520)
!10563 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !1923, file: !1923, line: 384, type: !208, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10564 = !DILocation(line: 387, column: 5, scope: !10563)
!10565 = !DILocation(line: 387, column: 27, scope: !10563)
!10566 = !DILocation(line: 387, column: 36, scope: !10563)
!10567 = !DILocation(line: 387, column: 76, scope: !10563)
!10568 = distinct !{!10568, !10564, !10569}
!10569 = !DILocation(line: 387, column: 84, scope: !10563)
!10570 = !DILocation(line: 388, column: 50, scope: !10563)
!10571 = !DILocation(line: 388, column: 19, scope: !10563)
!10572 = !DILocation(line: 388, column: 28, scope: !10563)
!10573 = !DILocation(line: 389, column: 50, scope: !10563)
!10574 = !DILocation(line: 389, column: 19, scope: !10563)
!10575 = !DILocation(line: 389, column: 28, scope: !10563)
!10576 = !DILocation(line: 390, column: 50, scope: !10563)
!10577 = !DILocation(line: 390, column: 19, scope: !10563)
!10578 = !DILocation(line: 390, column: 28, scope: !10563)
!10579 = !DILocation(line: 391, column: 50, scope: !10563)
!10580 = !DILocation(line: 391, column: 19, scope: !10563)
!10581 = !DILocation(line: 391, column: 28, scope: !10563)
!10582 = !DILocation(line: 392, column: 50, scope: !10563)
!10583 = !DILocation(line: 392, column: 19, scope: !10563)
!10584 = !DILocation(line: 392, column: 28, scope: !10563)
!10585 = !DILocation(line: 393, column: 50, scope: !10563)
!10586 = !DILocation(line: 393, column: 19, scope: !10563)
!10587 = !DILocation(line: 393, column: 28, scope: !10563)
!10588 = !DILocation(line: 394, column: 51, scope: !10563)
!10589 = !DILocation(line: 394, column: 19, scope: !10563)
!10590 = !DILocation(line: 394, column: 29, scope: !10563)
!10591 = !DILocation(line: 395, column: 51, scope: !10563)
!10592 = !DILocation(line: 395, column: 19, scope: !10563)
!10593 = !DILocation(line: 395, column: 29, scope: !10563)
!10594 = !DILocation(line: 396, column: 50, scope: !10563)
!10595 = !DILocation(line: 396, column: 19, scope: !10563)
!10596 = !DILocation(line: 396, column: 28, scope: !10563)
!10597 = !DILocation(line: 397, column: 50, scope: !10563)
!10598 = !DILocation(line: 397, column: 19, scope: !10563)
!10599 = !DILocation(line: 397, column: 28, scope: !10563)
!10600 = !DILocation(line: 398, column: 50, scope: !10563)
!10601 = !DILocation(line: 398, column: 19, scope: !10563)
!10602 = !DILocation(line: 398, column: 28, scope: !10563)
!10603 = !DILocation(line: 399, column: 50, scope: !10563)
!10604 = !DILocation(line: 399, column: 19, scope: !10563)
!10605 = !DILocation(line: 399, column: 28, scope: !10563)
!10606 = !DILocation(line: 400, column: 50, scope: !10563)
!10607 = !DILocation(line: 400, column: 19, scope: !10563)
!10608 = !DILocation(line: 400, column: 28, scope: !10563)
!10609 = !DILocation(line: 401, column: 50, scope: !10563)
!10610 = !DILocation(line: 401, column: 19, scope: !10563)
!10611 = !DILocation(line: 401, column: 28, scope: !10563)
!10612 = !DILocation(line: 402, column: 50, scope: !10563)
!10613 = !DILocation(line: 402, column: 19, scope: !10563)
!10614 = !DILocation(line: 402, column: 28, scope: !10563)
!10615 = !DILocation(line: 403, column: 50, scope: !10563)
!10616 = !DILocation(line: 403, column: 19, scope: !10563)
!10617 = !DILocation(line: 403, column: 28, scope: !10563)
!10618 = !DILocation(line: 404, column: 50, scope: !10563)
!10619 = !DILocation(line: 404, column: 19, scope: !10563)
!10620 = !DILocation(line: 404, column: 28, scope: !10563)
!10621 = !DILocation(line: 405, column: 50, scope: !10563)
!10622 = !DILocation(line: 405, column: 19, scope: !10563)
!10623 = !DILocation(line: 405, column: 28, scope: !10563)
!10624 = !DILocation(line: 406, column: 50, scope: !10563)
!10625 = !DILocation(line: 406, column: 19, scope: !10563)
!10626 = !DILocation(line: 406, column: 28, scope: !10563)
!10627 = !DILocation(line: 408, column: 1, scope: !10563)
!10628 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !1923, file: !1923, line: 410, type: !208, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10629 = !DILocation(line: 413, column: 29, scope: !10628)
!10630 = !DILocation(line: 413, column: 43, scope: !10628)
!10631 = !DILocation(line: 413, column: 51, scope: !10628)
!10632 = !DILocation(line: 413, column: 27, scope: !10628)
!10633 = !DILocation(line: 416, column: 19, scope: !10628)
!10634 = !DILocation(line: 416, column: 29, scope: !10628)
!10635 = !DILocation(line: 417, column: 5, scope: !10628)
!10636 = !DILocation(line: 417, column: 27, scope: !10628)
!10637 = !DILocation(line: 417, column: 93, scope: !10628)
!10638 = distinct !{!10638, !10635, !10639}
!10639 = !DILocation(line: 417, column: 98, scope: !10628)
!10640 = !DILocation(line: 418, column: 29, scope: !10628)
!10641 = !DILocation(line: 419, column: 5, scope: !10628)
!10642 = !DILocation(line: 419, column: 27, scope: !10628)
!10643 = !DILocation(line: 419, column: 93, scope: !10628)
!10644 = distinct !{!10644, !10641, !10645}
!10645 = !DILocation(line: 419, column: 98, scope: !10628)
!10646 = !DILocation(line: 421, column: 5, scope: !10628)
!10647 = !DILocation(line: 422, column: 5, scope: !10628)
!10648 = !DILocation(line: 422, column: 19, scope: !10628)
!10649 = !DILocation(line: 422, column: 28, scope: !10628)
!10650 = !DILocation(line: 423, column: 5, scope: !10628)
!10651 = !DILocation(line: 423, column: 28, scope: !10628)
!10652 = !DILocation(line: 423, column: 82, scope: !10628)
!10653 = distinct !{!10653, !10650, !10654}
!10654 = !DILocation(line: 423, column: 87, scope: !10628)
!10655 = !DILocation(line: 424, column: 28, scope: !10628)
!10656 = !DILocation(line: 425, column: 5, scope: !10628)
!10657 = !DILocation(line: 425, column: 28, scope: !10628)
!10658 = !DILocation(line: 425, column: 82, scope: !10628)
!10659 = distinct !{!10659, !10656, !10660}
!10660 = !DILocation(line: 425, column: 87, scope: !10628)
!10661 = !DILocation(line: 426, column: 28, scope: !10628)
!10662 = !DILocation(line: 428, column: 50, scope: !10628)
!10663 = !DILocation(line: 428, column: 19, scope: !10628)
!10664 = !DILocation(line: 428, column: 28, scope: !10628)
!10665 = !DILocation(line: 432, column: 1, scope: !10628)
!10666 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !1923, file: !1923, line: 434, type: !208, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10667 = !DILocation(line: 437, column: 5, scope: !10666)
!10668 = !DILocation(line: 440, column: 5, scope: !10666)
!10669 = !DILocation(line: 440, column: 27, scope: !10666)
!10670 = !DILocation(line: 440, column: 36, scope: !10666)
!10671 = !DILocation(line: 440, column: 76, scope: !10666)
!10672 = distinct !{!10672, !10668, !10673}
!10673 = !DILocation(line: 440, column: 84, scope: !10666)
!10674 = !DILocation(line: 441, column: 45, scope: !10666)
!10675 = !DILocation(line: 441, column: 54, scope: !10666)
!10676 = !DILocation(line: 441, column: 28, scope: !10666)
!10677 = !DILocation(line: 442, column: 19, scope: !10666)
!10678 = !DILocation(line: 442, column: 31, scope: !10666)
!10679 = !DILocation(line: 443, column: 5, scope: !10666)
!10680 = !DILocation(line: 443, column: 27, scope: !10666)
!10681 = !DILocation(line: 443, column: 39, scope: !10666)
!10682 = !DILocation(line: 443, column: 65, scope: !10666)
!10683 = distinct !{!10683, !10679, !10684}
!10684 = !DILocation(line: 443, column: 70, scope: !10666)
!10685 = !DILocation(line: 444, column: 19, scope: !10666)
!10686 = !DILocation(line: 444, column: 28, scope: !10666)
!10687 = !DILocation(line: 445, column: 5, scope: !10666)
!10688 = !DILocation(line: 445, column: 27, scope: !10666)
!10689 = !DILocation(line: 445, column: 91, scope: !10666)
!10690 = distinct !{!10690, !10687, !10691}
!10691 = !DILocation(line: 445, column: 96, scope: !10666)
!10692 = !DILocation(line: 447, column: 43, scope: !10666)
!10693 = !DILocation(line: 447, column: 51, scope: !10666)
!10694 = !DILocation(line: 447, column: 27, scope: !10666)
!10695 = !DILocation(line: 450, column: 1, scope: !10666)
!10696 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !1923, file: !1923, line: 452, type: !10697, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !10700)
!10697 = !DISubroutineType(types: !10698)
!10698 = !{!858, !10699}
!10699 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !1926, line: 43, baseType: !1925)
!10700 = !{!10701, !10702}
!10701 = !DILocalVariable(name: "clock", arg: 1, scope: !10696, file: !1923, line: 452, type: !10699)
!10702 = !DILocalVariable(name: "delay", scope: !10696, file: !1923, line: 457, type: !184)
!10703 = !DILocation(line: 0, scope: !10696)
!10704 = !DILocation(line: 457, column: 5, scope: !10696)
!10705 = !DILocation(line: 457, column: 23, scope: !10696)
!10706 = !DILocation(line: 458, column: 9, scope: !10696)
!10707 = !DILocation(line: 465, column: 9, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10709, file: !1923, line: 458, column: 39)
!10709 = distinct !DILexicalBlock(scope: !10696, file: !1923, line: 458, column: 9)
!10710 = !DILocation(line: 465, column: 23, scope: !10708)
!10711 = !DILocation(line: 465, column: 32, scope: !10708)
!10712 = !DILocation(line: 466, column: 32, scope: !10708)
!10713 = !DILocation(line: 467, column: 9, scope: !10708)
!10714 = !DILocation(line: 467, column: 32, scope: !10708)
!10715 = !DILocation(line: 467, column: 86, scope: !10708)
!10716 = distinct !{!10716, !10713, !10717}
!10717 = !DILocation(line: 467, column: 91, scope: !10708)
!10718 = !DILocation(line: 468, column: 32, scope: !10708)
!10719 = !DILocation(line: 469, column: 9, scope: !10708)
!10720 = !DILocation(line: 469, column: 32, scope: !10708)
!10721 = !DILocation(line: 469, column: 86, scope: !10708)
!10722 = distinct !{!10722, !10719, !10723}
!10723 = !DILocation(line: 469, column: 91, scope: !10708)
!10724 = !DILocation(line: 470, column: 32, scope: !10708)
!10725 = !DILocation(line: 472, column: 20, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10708, file: !1923, line: 472, column: 9)
!10727 = !DILocation(line: 472, column: 25, scope: !10728)
!10728 = distinct !DILexicalBlock(scope: !10726, file: !1923, line: 472, column: 9)
!10729 = !DILocation(line: 472, column: 31, scope: !10728)
!10730 = !DILocation(line: 472, column: 9, scope: !10726)
!10731 = !DILocation(line: 472, column: 44, scope: !10728)
!10732 = distinct !{!10732, !10730, !10733}
!10733 = !DILocation(line: 472, column: 47, scope: !10726)
!10734 = !DILocation(line: 478, column: 9, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10736, file: !1923, line: 477, column: 12)
!10736 = distinct !DILexicalBlock(scope: !10709, file: !1923, line: 475, column: 16)
!10737 = !DILocation(line: 483, column: 1, scope: !10696)
!10738 = distinct !DISubprogram(name: "emi_mask_master", scope: !1923, file: !1923, line: 487, type: !208, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10739 = !DILocation(line: 490, column: 30, scope: !10738)
!10740 = !DILocation(line: 490, column: 44, scope: !10738)
!10741 = !DILocation(line: 490, column: 53, scope: !10738)
!10742 = !DILocation(line: 490, column: 28, scope: !10738)
!10743 = !DILocation(line: 492, column: 1, scope: !10738)
!10744 = distinct !DISubprogram(name: "emi_unmask_master", scope: !1923, file: !1923, line: 494, type: !208, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1922, retainedNodes: !210)
!10745 = !DILocation(line: 497, column: 30, scope: !10744)
!10746 = !DILocation(line: 497, column: 44, scope: !10744)
!10747 = !DILocation(line: 497, column: 53, scope: !10744)
!10748 = !DILocation(line: 497, column: 28, scope: !10744)
!10749 = !DILocation(line: 500, column: 1, scope: !10744)
!10750 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2091, file: !2091, line: 56, type: !7560, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2090, retainedNodes: !210)
!10751 = !DILocation(line: 61, column: 5, scope: !10750)
!10752 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2091, file: !2091, line: 65, type: !7560, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2090, retainedNodes: !210)
!10753 = !DILocation(line: 70, column: 5, scope: !10752)
!10754 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2091, file: !2091, line: 74, type: !208, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2090, retainedNodes: !210)
!10755 = !DILocation(line: 79, column: 9, scope: !10756)
!10756 = distinct !DILexicalBlock(scope: !10757, file: !2091, line: 78, column: 12)
!10757 = distinct !DILexicalBlock(scope: !10754, file: !2091, line: 76, column: 9)
!10758 = !DILocation(line: 81, column: 1, scope: !10754)
!10759 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2091, file: !2091, line: 83, type: !208, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2090, retainedNodes: !210)
!10760 = !DILocation(line: 88, column: 9, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10762, file: !2091, line: 87, column: 12)
!10762 = distinct !DILexicalBlock(scope: !10759, file: !2091, line: 85, column: 9)
!10763 = !DILocation(line: 90, column: 1, scope: !10759)
!10764 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2091, file: !2091, line: 92, type: !208, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2090, retainedNodes: !210)
!10765 = !DILocation(line: 97, column: 9, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10767, file: !2091, line: 96, column: 12)
!10767 = distinct !DILexicalBlock(scope: !10764, file: !2091, line: 94, column: 9)
!10768 = !DILocation(line: 99, column: 1, scope: !10764)
!10769 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2091, file: !2091, line: 101, type: !208, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2090, retainedNodes: !210)
!10770 = !DILocation(line: 106, column: 9, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10772, file: !2091, line: 105, column: 12)
!10772 = distinct !DILexicalBlock(scope: !10769, file: !2091, line: 103, column: 9)
!10773 = !DILocation(line: 108, column: 1, scope: !10769)
!10774 = distinct !DISubprogram(name: "__io_putchar", scope: !2516, file: !2516, line: 52, type: !10775, scopeLine: 56, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !10777)
!10775 = !DISubroutineType(types: !10776)
!10776 = !{!79, !79}
!10777 = !{!10778}
!10778 = !DILocalVariable(name: "ch", arg: 1, scope: !10774, file: !2516, line: 52, type: !79)
!10779 = !DILocation(line: 0, scope: !10774)
!10780 = !DILocation(line: 59, column: 35, scope: !10774)
!10781 = !DILocation(line: 59, column: 5, scope: !10774)
!10782 = !DILocation(line: 60, column: 5, scope: !10774)
!10783 = distinct !DISubprogram(name: "main", scope: !2516, file: !2516, line: 198, type: !10278, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !210)
!10784 = !DILocation(line: 201, column: 5, scope: !10783)
!10785 = !DILocation(line: 203, column: 5, scope: !10783)
!10786 = !DILocation(line: 206, column: 5, scope: !10783)
!10787 = !DILocation(line: 209, column: 5, scope: !10783)
!10788 = !DILocation(line: 210, column: 5, scope: !10783)
!10789 = !DILocation(line: 211, column: 5, scope: !10783)
!10790 = !DILocation(line: 213, column: 5, scope: !10783)
!10791 = !DILocation(line: 215, column: 5, scope: !10783)
!10792 = !DILocation(line: 215, column: 5, scope: !10793)
!10793 = distinct !DILexicalBlock(scope: !10794, file: !2516, line: 215, column: 5)
!10794 = distinct !DILexicalBlock(scope: !10783, file: !2516, line: 215, column: 5)
!10795 = distinct !{!10795, !10796, !10797}
!10796 = !DILocation(line: 215, column: 5, scope: !10794)
!10797 = !DILocation(line: 215, column: 13, scope: !10794)
!10798 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2516, file: !2516, line: 90, type: !208, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !210)
!10799 = !DILocation(line: 92, column: 5, scope: !10798)
!10800 = !DILocation(line: 93, column: 1, scope: !10798)
!10801 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2516, file: !2516, line: 99, type: !208, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !210)
!10802 = !DILocation(line: 102, column: 5, scope: !10801)
!10803 = !DILocation(line: 103, column: 5, scope: !10801)
!10804 = !DILocation(line: 104, column: 5, scope: !10801)
!10805 = !DILocation(line: 106, column: 1, scope: !10801)
!10806 = distinct !DISubprogram(name: "aes_encrypt_decrypt_data_example", scope: !2516, file: !2516, line: 133, type: !208, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !10807)
!10807 = !{!10808, !10809, !10810, !10814, !10816, !10817, !10823, !10824, !10825}
!10808 = !DILocalVariable(name: "hardware_id", scope: !10806, file: !2516, line: 137, type: !6038)
!10809 = !DILocalVariable(name: "aes_cbc_iv", scope: !10806, file: !2516, line: 141, type: !6038)
!10810 = !DILocalVariable(name: "plain", scope: !10806, file: !2516, line: 145, type: !10811)
!10811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 240, elements: !10812)
!10812 = !{!10813}
!10813 = !DISubrange(count: 30)
!10814 = !DILocalVariable(name: "encrypted_buffer", scope: !10806, file: !2516, line: 150, type: !10815)
!10815 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 256, elements: !248)
!10816 = !DILocalVariable(name: "decrypted_buffer", scope: !10806, file: !2516, line: 151, type: !10815)
!10817 = !DILocalVariable(name: "plain_text", scope: !10806, file: !2516, line: 153, type: !10818)
!10818 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_aes_buffer_t", file: !886, line: 307, baseType: !10819)
!10819 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !886, line: 304, size: 64, elements: !10820)
!10820 = !{!10821, !10822}
!10821 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !10819, file: !886, line: 305, baseType: !680, size: 32)
!10822 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10819, file: !886, line: 306, baseType: !175, size: 32, offset: 32)
!10823 = !DILocalVariable(name: "key", scope: !10806, file: !2516, line: 157, type: !10818)
!10824 = !DILocalVariable(name: "encrypted_text", scope: !10806, file: !2516, line: 162, type: !10818)
!10825 = !DILocalVariable(name: "decrypted_text", scope: !10806, file: !2516, line: 180, type: !10818)
!10826 = !DILocation(line: 137, column: 5, scope: !10806)
!10827 = !DILocation(line: 137, column: 13, scope: !10806)
!10828 = !DILocation(line: 141, column: 5, scope: !10806)
!10829 = !DILocation(line: 141, column: 13, scope: !10806)
!10830 = !DILocation(line: 145, column: 5, scope: !10806)
!10831 = !DILocation(line: 145, column: 13, scope: !10806)
!10832 = !DILocation(line: 150, column: 5, scope: !10806)
!10833 = !DILocation(line: 150, column: 13, scope: !10806)
!10834 = !DILocation(line: 151, column: 5, scope: !10806)
!10835 = !DILocation(line: 151, column: 13, scope: !10806)
!10836 = !DILocation(line: 153, column: 5, scope: !10806)
!10837 = !DILocation(line: 153, column: 22, scope: !10806)
!10838 = !DILocation(line: 153, column: 35, scope: !10806)
!10839 = !DILocation(line: 157, column: 5, scope: !10806)
!10840 = !DILocation(line: 157, column: 22, scope: !10806)
!10841 = !DILocation(line: 157, column: 28, scope: !10806)
!10842 = !DILocation(line: 162, column: 5, scope: !10806)
!10843 = !DILocation(line: 162, column: 22, scope: !10806)
!10844 = !DILocation(line: 162, column: 39, scope: !10806)
!10845 = !DILocation(line: 168, column: 5, scope: !10806)
!10846 = !DILocation(line: 169, column: 5, scope: !10806)
!10847 = !DILocation(line: 170, column: 5, scope: !10806)
!10848 = !DILocation(line: 171, column: 5, scope: !10806)
!10849 = !DILocation(line: 172, column: 5, scope: !10806)
!10850 = !DILocation(line: 173, column: 5, scope: !10806)
!10851 = !DILocation(line: 175, column: 5, scope: !10806)
!10852 = !DILocation(line: 177, column: 5, scope: !10806)
!10853 = !DILocation(line: 178, column: 36, scope: !10806)
!10854 = !DILocation(line: 178, column: 59, scope: !10806)
!10855 = !DILocation(line: 178, column: 44, scope: !10806)
!10856 = !DILocation(line: 178, column: 5, scope: !10806)
!10857 = !DILocation(line: 180, column: 5, scope: !10806)
!10858 = !DILocation(line: 180, column: 22, scope: !10806)
!10859 = !DILocation(line: 180, column: 39, scope: !10806)
!10860 = !DILocation(line: 184, column: 5, scope: !10806)
!10861 = !DILocation(line: 185, column: 5, scope: !10806)
!10862 = !DILocation(line: 186, column: 36, scope: !10806)
!10863 = !DILocation(line: 186, column: 59, scope: !10806)
!10864 = !DILocation(line: 186, column: 44, scope: !10806)
!10865 = !DILocation(line: 186, column: 5, scope: !10806)
!10866 = !DILocation(line: 188, column: 5, scope: !10806)
!10867 = !DILocation(line: 189, column: 5, scope: !10806)
!10868 = !DILocation(line: 190, column: 36, scope: !10806)
!10869 = !DILocation(line: 190, column: 59, scope: !10806)
!10870 = !DILocation(line: 190, column: 44, scope: !10806)
!10871 = !DILocation(line: 190, column: 5, scope: !10806)
!10872 = !DILocation(line: 192, column: 5, scope: !10806)
!10873 = !DILocation(line: 193, column: 5, scope: !10806)
!10874 = !DILocation(line: 194, column: 36, scope: !10806)
!10875 = !DILocation(line: 194, column: 59, scope: !10806)
!10876 = !DILocation(line: 194, column: 44, scope: !10806)
!10877 = !DILocation(line: 194, column: 5, scope: !10806)
!10878 = !DILocation(line: 195, column: 1, scope: !10806)
!10879 = distinct !DISubprogram(name: "aes_result_dump", scope: !2516, file: !2516, line: 114, type: !10880, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !10882)
!10880 = !DISubroutineType(types: !10881)
!10881 = !{null, !680, !378}
!10882 = !{!10883, !10884, !10885}
!10883 = !DILocalVariable(name: "result", arg: 1, scope: !10879, file: !2516, line: 114, type: !680)
!10884 = !DILocalVariable(name: "length", arg: 2, scope: !10879, file: !2516, line: 114, type: !378)
!10885 = !DILocalVariable(name: "i", scope: !10879, file: !2516, line: 116, type: !378)
!10886 = !DILocation(line: 0, scope: !10879)
!10887 = !DILocation(line: 118, column: 19, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10889, file: !2516, line: 118, column: 5)
!10889 = distinct !DILexicalBlock(scope: !10879, file: !2516, line: 118, column: 5)
!10890 = !DILocation(line: 118, column: 5, scope: !10889)
!10891 = !DILocation(line: 119, column: 15, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10893, file: !2516, line: 119, column: 13)
!10893 = distinct !DILexicalBlock(scope: !10888, file: !2516, line: 118, column: 34)
!10894 = !DILocation(line: 119, column: 20, scope: !10892)
!10895 = !DILocation(line: 119, column: 13, scope: !10893)
!10896 = !DILocation(line: 120, column: 13, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10892, file: !2516, line: 119, column: 26)
!10898 = !DILocation(line: 121, column: 9, scope: !10897)
!10899 = !DILocation(line: 123, column: 26, scope: !10893)
!10900 = !DILocation(line: 123, column: 9, scope: !10893)
!10901 = !DILocation(line: 118, column: 30, scope: !10888)
!10902 = distinct !{!10902, !10890, !10903}
!10903 = !DILocation(line: 124, column: 5, scope: !10889)
!10904 = !DILocation(line: 125, column: 5, scope: !10879)
!10905 = !DILocation(line: 127, column: 1, scope: !10879)
!10906 = distinct !DISubprogram(name: "log_uart_init", scope: !2516, file: !2516, line: 68, type: !208, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2515, retainedNodes: !10907)
!10907 = !{!10908}
!10908 = !DILocalVariable(name: "uart_config", scope: !10906, file: !2516, line: 70, type: !10909)
!10909 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !572, line: 378, baseType: !10910)
!10910 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !572, line: 373, size: 128, elements: !10911)
!10911 = !{!10912, !10913, !10914, !10915}
!10912 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !10910, file: !572, line: 374, baseType: !4217, size: 32)
!10913 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !10910, file: !572, line: 375, baseType: !4267, size: 32, offset: 32)
!10914 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !10910, file: !572, line: 376, baseType: !4269, size: 32, offset: 64)
!10915 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !10910, file: !572, line: 377, baseType: !4271, size: 32, offset: 96)
!10916 = !DILocation(line: 70, column: 5, scope: !10906)
!10917 = !DILocation(line: 70, column: 23, scope: !10906)
!10918 = !DILocation(line: 72, column: 5, scope: !10906)
!10919 = !DILocation(line: 73, column: 5, scope: !10906)
!10920 = !DILocation(line: 74, column: 5, scope: !10906)
!10921 = !DILocation(line: 75, column: 5, scope: !10906)
!10922 = !DILocation(line: 78, column: 17, scope: !10906)
!10923 = !DILocation(line: 78, column: 26, scope: !10906)
!10924 = !DILocation(line: 79, column: 17, scope: !10906)
!10925 = !DILocation(line: 79, column: 29, scope: !10906)
!10926 = !DILocation(line: 80, column: 17, scope: !10906)
!10927 = !DILocation(line: 80, column: 26, scope: !10906)
!10928 = !DILocation(line: 81, column: 17, scope: !10906)
!10929 = !DILocation(line: 81, column: 24, scope: !10906)
!10930 = !DILocation(line: 82, column: 5, scope: !10906)
!10931 = !DILocation(line: 84, column: 1, scope: !10906)
!10932 = distinct !DISubprogram(name: "_close", scope: !2103, file: !2103, line: 5, type: !10775, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !10933)
!10933 = !{!10934}
!10934 = !DILocalVariable(name: "file", arg: 1, scope: !10932, file: !2103, line: 5, type: !79)
!10935 = !DILocation(line: 0, scope: !10932)
!10936 = !DILocation(line: 7, column: 5, scope: !10932)
!10937 = distinct !DISubprogram(name: "_fstat", scope: !2103, file: !2103, line: 10, type: !10938, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !10986)
!10938 = !DISubroutineType(types: !10939)
!10939 = !{!79, !79, !10940}
!10940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10941, size: 32)
!10941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !10942, line: 27, size: 704, elements: !10943)
!10942 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!10943 = !{!10944, !10947, !10950, !10953, !10956, !10959, !10962, !10963, !10966, !10976, !10977, !10978, !10981, !10984}
!10944 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !10941, file: !10942, line: 29, baseType: !10945, size: 16)
!10945 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2107, line: 161, baseType: !10946)
!10946 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2147, line: 56, baseType: !1376)
!10947 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !10941, file: !10942, line: 30, baseType: !10948, size: 16, offset: 16)
!10948 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2107, line: 139, baseType: !10949)
!10949 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2147, line: 75, baseType: !972)
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !10941, file: !10942, line: 31, baseType: !10951, size: 32, offset: 32)
!10951 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2107, line: 189, baseType: !10952)
!10952 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2147, line: 90, baseType: !177)
!10953 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !10941, file: !10942, line: 32, baseType: !10954, size: 16, offset: 64)
!10954 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2107, line: 194, baseType: !10955)
!10955 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2147, line: 209, baseType: !972)
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !10941, file: !10942, line: 33, baseType: !10957, size: 16, offset: 80)
!10957 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2107, line: 165, baseType: !10958)
!10958 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2147, line: 60, baseType: !972)
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !10941, file: !10942, line: 34, baseType: !10960, size: 16, offset: 96)
!10960 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2107, line: 169, baseType: !10961)
!10961 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2147, line: 63, baseType: !972)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !10941, file: !10942, line: 35, baseType: !10945, size: 16, offset: 112)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !10941, file: !10942, line: 36, baseType: !10964, size: 32, offset: 128)
!10964 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2107, line: 157, baseType: !10965)
!10965 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2147, line: 102, baseType: !2163)
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !10941, file: !10942, line: 42, baseType: !10967, size: 128, offset: 192)
!10967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !10968, line: 47, size: 128, elements: !10969)
!10968 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!10969 = !{!10970, !10975}
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !10967, file: !10968, line: 48, baseType: !10971, size: 64)
!10971 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !10972, line: 42, baseType: !10973)
!10972 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!10973 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !178, line: 200, baseType: !10974)
!10974 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!10975 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !10967, file: !10968, line: 49, baseType: !2148, size: 32, offset: 64)
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !10941, file: !10942, line: 43, baseType: !10967, size: 128, offset: 320)
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !10941, file: !10942, line: 44, baseType: !10967, size: 128, offset: 448)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !10941, file: !10942, line: 45, baseType: !10979, size: 32, offset: 576)
!10979 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2107, line: 102, baseType: !10980)
!10980 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2147, line: 34, baseType: !2148)
!10981 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !10941, file: !10942, line: 46, baseType: !10982, size: 32, offset: 608)
!10982 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2107, line: 97, baseType: !10983)
!10983 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2147, line: 30, baseType: !2148)
!10984 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !10941, file: !10942, line: 48, baseType: !10985, size: 64, offset: 640)
!10985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2148, size: 64, elements: !383)
!10986 = !{!10987, !10988}
!10987 = !DILocalVariable(name: "file", arg: 1, scope: !10937, file: !2103, line: 10, type: !79)
!10988 = !DILocalVariable(name: "st", arg: 2, scope: !10937, file: !2103, line: 10, type: !10940)
!10989 = !DILocation(line: 0, scope: !10937)
!10990 = !DILocation(line: 12, column: 5, scope: !10937)
!10991 = distinct !DISubprogram(name: "_isatty", scope: !2103, file: !2103, line: 15, type: !10775, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !10992)
!10992 = !{!10993}
!10993 = !DILocalVariable(name: "file", arg: 1, scope: !10991, file: !2103, line: 15, type: !79)
!10994 = !DILocation(line: 0, scope: !10991)
!10995 = !DILocation(line: 17, column: 5, scope: !10991)
!10996 = distinct !DISubprogram(name: "_lseek", scope: !2103, file: !2103, line: 20, type: !10997, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !10999)
!10997 = !DISubroutineType(types: !10998)
!10998 = !{!79, !79, !79, !79}
!10999 = !{!11000, !11001, !11002}
!11000 = !DILocalVariable(name: "file", arg: 1, scope: !10996, file: !2103, line: 20, type: !79)
!11001 = !DILocalVariable(name: "ptr", arg: 2, scope: !10996, file: !2103, line: 20, type: !79)
!11002 = !DILocalVariable(name: "dir", arg: 3, scope: !10996, file: !2103, line: 20, type: !79)
!11003 = !DILocation(line: 0, scope: !10996)
!11004 = !DILocation(line: 22, column: 5, scope: !10996)
!11005 = distinct !DISubprogram(name: "_open", scope: !2103, file: !2103, line: 25, type: !11006, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !11008)
!11006 = !DISubroutineType(types: !11007)
!11007 = !{!79, !2141, !79, !79}
!11008 = !{!11009, !11010, !11011}
!11009 = !DILocalVariable(name: "name", arg: 1, scope: !11005, file: !2103, line: 25, type: !2141)
!11010 = !DILocalVariable(name: "flags", arg: 2, scope: !11005, file: !2103, line: 25, type: !79)
!11011 = !DILocalVariable(name: "mode", arg: 3, scope: !11005, file: !2103, line: 25, type: !79)
!11012 = !DILocation(line: 0, scope: !11005)
!11013 = !DILocation(line: 27, column: 5, scope: !11005)
!11014 = distinct !DISubprogram(name: "_read", scope: !2103, file: !2103, line: 30, type: !11015, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !11017)
!11015 = !DISubroutineType(types: !11016)
!11016 = !{!79, !79, !2108, !79}
!11017 = !{!11018, !11019, !11020}
!11018 = !DILocalVariable(name: "file", arg: 1, scope: !11014, file: !2103, line: 30, type: !79)
!11019 = !DILocalVariable(name: "ptr", arg: 2, scope: !11014, file: !2103, line: 30, type: !2108)
!11020 = !DILocalVariable(name: "len", arg: 3, scope: !11014, file: !2103, line: 30, type: !79)
!11021 = !DILocation(line: 0, scope: !11014)
!11022 = !DILocation(line: 32, column: 5, scope: !11014)
!11023 = distinct !DISubprogram(name: "_getpid", scope: !2103, file: !2103, line: 48, type: !10278, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !210)
!11024 = !DILocation(line: 50, column: 5, scope: !11023)
!11025 = distinct !DISubprogram(name: "_kill", scope: !2103, file: !2103, line: 56, type: !11026, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !11028)
!11026 = !DISubroutineType(types: !11027)
!11027 = !{!79, !79, !79}
!11028 = !{!11029, !11030}
!11029 = !DILocalVariable(name: "pid", arg: 1, scope: !11025, file: !2103, line: 56, type: !79)
!11030 = !DILocalVariable(name: "sig", arg: 2, scope: !11025, file: !2103, line: 56, type: !79)
!11031 = !DILocation(line: 0, scope: !11025)
!11032 = !DILocation(line: 58, column: 5, scope: !11025)
!11033 = distinct !DISubprogram(name: "_exit", scope: !2103, file: !2103, line: 61, type: !10775, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !11034)
!11034 = !{!11035}
!11035 = !DILocalVariable(name: "val", arg: 1, scope: !11033, file: !2103, line: 61, type: !79)
!11036 = !DILocation(line: 0, scope: !11033)
!11037 = !DILocation(line: 63, column: 5, scope: !11033)
!11038 = !DILocation(line: 0, scope: !2102)
!11039 = !DILocation(line: 73, column: 5, scope: !2102)
!11040 = !{i64 1127}
!11041 = !DILocation(line: 75, column: 14, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !2102, file: !2103, line: 75, column: 9)
!11043 = !DILocation(line: 75, column: 11, scope: !11042)
!11044 = !DILocation(line: 75, column: 9, scope: !2102)
!11045 = !DILocation(line: 81, column: 32, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !2102, file: !2103, line: 81, column: 9)
!11047 = !DILocation(line: 81, column: 15, scope: !11046)
!11048 = !DILocation(line: 92, column: 1, scope: !2102)
!11049 = !DILocation(line: 81, column: 9, scope: !2102)
!11050 = distinct !DISubprogram(name: "_write", scope: !2103, file: !2103, line: 94, type: !11015, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2295, retainedNodes: !11051)
!11051 = !{!11052, !11053, !11054, !11055}
!11052 = !DILocalVariable(name: "file", arg: 1, scope: !11050, file: !2103, line: 94, type: !79)
!11053 = !DILocalVariable(name: "ptr", arg: 2, scope: !11050, file: !2103, line: 94, type: !2108)
!11054 = !DILocalVariable(name: "len", arg: 3, scope: !11050, file: !2103, line: 94, type: !79)
!11055 = !DILocalVariable(name: "DataIdx", scope: !11050, file: !2103, line: 96, type: !79)
!11056 = !DILocation(line: 0, scope: !11050)
!11057 = !DILocation(line: 98, column: 31, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11059, file: !2103, line: 98, column: 5)
!11059 = distinct !DILexicalBlock(scope: !11050, file: !2103, line: 98, column: 5)
!11060 = !DILocation(line: 98, column: 5, scope: !11059)
!11061 = !DILocation(line: 99, column: 26, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11058, file: !2103, line: 98, column: 49)
!11063 = !DILocation(line: 99, column: 22, scope: !11062)
!11064 = !DILocation(line: 99, column: 9, scope: !11062)
!11065 = !DILocation(line: 98, column: 45, scope: !11058)
!11066 = distinct !{!11066, !11060, !11067}
!11067 = !DILocation(line: 100, column: 5, scope: !11059)
!11068 = !DILocation(line: 101, column: 5, scope: !11050)
!11069 = distinct !DISubprogram(name: "SysTick_Set", scope: !2307, file: !2307, line: 62, type: !3113, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !11070)
!11070 = !{!11071, !11072}
!11071 = !DILocalVariable(name: "ticks", arg: 1, scope: !11069, file: !2307, line: 62, type: !175)
!11072 = !DILocalVariable(name: "val", scope: !11069, file: !2307, line: 64, type: !175)
!11073 = !DILocation(line: 0, scope: !11069)
!11074 = !DILocation(line: 67, column: 16, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11069, file: !2307, line: 67, column: 9)
!11076 = !DILocation(line: 67, column: 21, scope: !11075)
!11077 = !DILocation(line: 67, column: 9, scope: !11069)
!11078 = !DILocation(line: 72, column: 20, scope: !11069)
!11079 = !DILocation(line: 75, column: 19, scope: !11069)
!11080 = !DILocation(line: 79, column: 20, scope: !11069)
!11081 = !DILocation(line: 80, column: 20, scope: !11069)
!11082 = !DILocation(line: 83, column: 19, scope: !11069)
!11083 = !DILocation(line: 85, column: 5, scope: !11069)
!11084 = !DILocation(line: 86, column: 1, scope: !11069)
!11085 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2307, file: !2307, line: 95, type: !208, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !210)
!11086 = !DILocation(line: 97, column: 28, scope: !11085)
!11087 = !DILocation(line: 98, column: 1, scope: !11085)
!11088 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2307, file: !2307, line: 107, type: !3365, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !210)
!11089 = !DILocation(line: 109, column: 12, scope: !11088)
!11090 = !DILocation(line: 109, column: 5, scope: !11088)
!11091 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2307, file: !2307, line: 119, type: !208, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !11092)
!11092 = !{!11093}
!11093 = !DILocalVariable(name: "cm_mux_sel", scope: !11091, file: !2307, line: 121, type: !378)
!11094 = !DILocation(line: 121, column: 38, scope: !11091)
!11095 = !DILocation(line: 121, column: 26, scope: !11091)
!11096 = !DILocation(line: 0, scope: !11091)
!11097 = !DILocation(line: 123, column: 5, scope: !11091)
!11098 = !DILocation(line: 132, column: 13, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11091, file: !2307, line: 123, column: 25)
!11100 = !DILocation(line: 140, column: 13, scope: !11099)
!11101 = !DILocation(line: 0, scope: !11099)
!11102 = !DILocation(line: 146, column: 26, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11091, file: !2307, line: 146, column: 9)
!11104 = !DILocation(line: 146, column: 50, scope: !11103)
!11105 = !DILocation(line: 146, column: 41, scope: !11103)
!11106 = !DILocation(line: 148, column: 25, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11103, file: !2307, line: 147, column: 52)
!11108 = !DILocation(line: 149, column: 5, scope: !11107)
!11109 = !DILocation(line: 150, column: 1, scope: !11091)
!11110 = distinct !DISubprogram(name: "SystemInit", scope: !2307, file: !2307, line: 158, type: !208, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !210)
!11111 = !DILocation(line: 162, column: 16, scope: !11110)
!11112 = !DILocation(line: 166, column: 16, scope: !11110)
!11113 = !DILocation(line: 169, column: 16, scope: !11110)
!11114 = !DILocation(line: 172, column: 1, scope: !11110)
!11115 = distinct !DISubprogram(name: "CachePreInit", scope: !2307, file: !2307, line: 180, type: !208, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2306, retainedNodes: !210)
!11116 = !DILocation(line: 183, column: 22, scope: !11115)
!11117 = !DILocation(line: 186, column: 21, scope: !11115)
!11118 = !DILocation(line: 189, column: 21, scope: !11115)
!11119 = !DILocation(line: 192, column: 29, scope: !11115)
!11120 = !DILocation(line: 193, column: 33, scope: !11115)
!11121 = !DILocation(line: 195, column: 28, scope: !11115)
!11122 = !DILocation(line: 200, column: 30, scope: !11115)
!11123 = !DILocation(line: 214, column: 1, scope: !11115)
