; ModuleID = './build/gdma_transfer_data_interrupt.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GDMA_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.PDMA_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32 }
%struct.VDMA_REGISTER_T = type { i32, i32, i32, i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32 }
%struct.gdma_user_callback_t = type { void (i32, i8*)*, i8* }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.9 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.pdma_config_t = type { i8, i32, i32, i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !92
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !279
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !342
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !339
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !294
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !316
@gdma_init_status = internal global [1 x i8] zeroinitializer, align 1, !dbg !343
@.str.35 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_gdma.c\00", align 1
@__func__.hal_gdma_deinit = private unnamed_addr constant [16 x i8] c"hal_gdma_deinit\00", align 1
@.str.1.36 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.hal_gdma_start_polling = private unnamed_addr constant [23 x i8] c"hal_gdma_start_polling\00", align 1
@__func__.hal_gdma_start_interrupt = private unnamed_addr constant [25 x i8] c"hal_gdma_start_interrupt\00", align 1
@gdma = dso_local local_unnamed_addr global [1 x %struct.GDMA_REGISTER_T*] [%struct.GDMA_REGISTER_T* inttoptr (i32 -1610612480 to %struct.GDMA_REGISTER_T*)], align 4, !dbg !384
@gdma_global = dso_local local_unnamed_addr global [1 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*)], align 4, !dbg !457
@pdma = dso_local local_unnamed_addr global [6 x %struct.PDMA_REGISTER_T*] [%struct.PDMA_REGISTER_T* inttoptr (i32 -1610612216 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1610611960 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608318456 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608318200 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608317944 to %struct.PDMA_REGISTER_T*), %struct.PDMA_REGISTER_T* inttoptr (i32 -1608317688 to %struct.PDMA_REGISTER_T*)], align 4, !dbg !465
@pdma_global = dso_local local_unnamed_addr global [6 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*), %struct.anon* inttoptr (i32 -1608318976 to %struct.anon*)], align 4, !dbg !483
@g_pdma_global_running_bit = dso_local local_unnamed_addr global [6 x i8] c"\02\04\02\04\06\08", align 1, !dbg !491
@vdma = dso_local local_unnamed_addr global [10 x %struct.VDMA_REGISTER_T*] [%struct.VDMA_REGISTER_T* inttoptr (i32 -1610610416 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610610160 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609904 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609648 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609392 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610609136 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610608880 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1610608624 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1608054512 to %struct.VDMA_REGISTER_T*), %struct.VDMA_REGISTER_T* inttoptr (i32 -1608054256 to %struct.VDMA_REGISTER_T*)], align 4, !dbg !494
@vdma_port = dso_local local_unnamed_addr global [10 x %struct.anon*] [%struct.anon* inttoptr (i32 -1601044480 to %struct.anon*), %struct.anon* inttoptr (i32 -1601044224 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043968 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043712 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043456 to %struct.anon*), %struct.anon* inttoptr (i32 -1601043200 to %struct.anon*), %struct.anon* inttoptr (i32 -1601042944 to %struct.anon*), %struct.anon* inttoptr (i32 -1601042688 to %struct.anon*), %struct.anon* inttoptr (i32 -1567490048 to %struct.anon*), %struct.anon* inttoptr (i32 -1567489792 to %struct.anon*)], align 4, !dbg !519
@vdma_global = dso_local local_unnamed_addr global [10 x %struct.anon*] [%struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1610612736 to %struct.anon*), %struct.anon* inttoptr (i32 -1608056832 to %struct.anon*), %struct.anon* inttoptr (i32 -1608056832 to %struct.anon*)], align 4, !dbg !527
@g_vdma_global_running_bit = dso_local local_unnamed_addr global [10 x i8] c"\10\12\14\16\18\1A\1C\1E\10\12", align 1, !dbg !535
@g_gdma_callback = dso_local local_unnamed_addr global [1 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !538
@pdma_init_status = internal global [7 x i8] zeroinitializer, align 1, !dbg !575
@__FUNCTION__.pdma_init = private unnamed_addr constant [10 x i8] c"pdma_init\00", align 1
@.str.55 = private unnamed_addr constant [52 x i8] c"This peripheral dma channel %d has been initialized\00", align 1
@.str.1.56 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_pdma_internal.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.pdma_deinit = private unnamed_addr constant [12 x i8] c"pdma_deinit\00", align 1
@.str.3 = private unnamed_addr constant [54 x i8] c"This peripheral dma channel %d has been deinitialized\00", align 1
@__func__.pdma_start_polling = private unnamed_addr constant [19 x i8] c"pdma_start_polling\00", align 1
@__func__.pdma_start_interrupt = private unnamed_addr constant [21 x i8] c"pdma_start_interrupt\00", align 1
@g_pdma_callback = internal unnamed_addr global [6 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !580
@vdma_init_status = internal global [18 x i8] zeroinitializer, align 1, !dbg !588
@__FUNCTION__.vdma_init = private unnamed_addr constant [10 x i8] c"vdma_init\00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"This vfifo dma channel %d has been initialized\00", align 1
@__func__.vdma_deinit = private unnamed_addr constant [12 x i8] c"vdma_deinit\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"This vfifo dma channel %d has been deinitialized\00", align 1
@__func__.vdma_configure = private unnamed_addr constant [15 x i8] c"vdma_configure\00", align 1
@g_vdma_callback = internal unnamed_addr global [10 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !593
@pd_domain_dma_interrupt_hander.count = internal unnamed_addr global i32 0, align 4, !dbg !551
@__func__.pd_domain_dma_interrupt_hander = private unnamed_addr constant [31 x i8] c"pd_domain_dma_interrupt_hander\00", align 1
@__func__.ao_domain_dma_interrupt_hander = private unnamed_addr constant [31 x i8] c"ao_domain_dma_interrupt_hander\00", align 1
@switch.table.pdma_configure = private unnamed_addr constant [4 x i32] [i32 4, i32 262152, i32 131076, i32 458756], align 4
@switch.table.vdma_init = private unnamed_addr constant [10 x %struct.VDMA_REGISTER_T**] [%struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 0), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 1), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 2), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 3), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 4), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 5), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 6), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 7), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 8), %struct.VDMA_REGISTER_T** getelementptr inbounds ([10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 9)], align 4
@switch.table.vdma_init.6 = private unnamed_addr constant [10 x i32] [i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160, i32 16, i32 262160], align 4
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !616
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !892
@.str.61 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.62 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.gdma_user_callback_t] zeroinitializer, align 4, !dbg !971
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !989
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !1003
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !1014
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !984
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !1015
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !1087
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !1092
@.str.107 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.108 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !1098
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1186
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1175
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.113 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1191
@.str.123 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.124 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1270
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1272
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1274
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1276
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1278
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1280
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1282
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1284
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1286
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1288
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1290
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1603
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1605
@.str.127 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.128 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1614
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1607
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1615
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1666
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1669
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1702
@nor_egid = dso_local local_unnamed_addr global %struct.anon.9* null, align 4, !dbg !1713
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !2029
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1900
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1928
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !2031
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1738
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1924
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1926
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1750
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !2011
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !2014
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !2044
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !1903
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1916
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1887
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1891
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1889
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1740
@.str.143 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.144 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !2016
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1895
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1912
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1914
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !2071
@.str.149 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.150 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !2131
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !2018
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2132
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2146
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2148
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2150
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2152
@.str.165 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.166 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !2154
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2208
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2210
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2212
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2224
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2226
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2228
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2230
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2333
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2335
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2337
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2339
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2341
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2343
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2345
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2347
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2349
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2351
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2353
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2355
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2357
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2359
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2331
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2378
@.str.179 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.180 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2.181 = private unnamed_addr constant [30 x i8] c"\0D\0A ---gdma_example begin---\0D\0A\00", align 1
@source_data = internal global [64 x i8] zeroinitializer, section ".noncached_zidata", align 4, !dbg !2390
@destination_data = internal global [64 x i8] zeroinitializer, section ".noncached_zidata", align 4, !dbg !2398
@.str.3.182 = private unnamed_addr constant [54 x i8] c"GDMA destination data is not match with source data.\0A\00", align 1
@.str.4.183 = private unnamed_addr constant [36 x i8] c"\0D\0A ---gdma_example finished!!!---\0D\0A\00", align 1
@.str.5.184 = private unnamed_addr constant [31 x i8] c"example project test success.\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2401
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2605
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2713
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 07:59:49 GMT +00:00\00", align 1, !dbg !2715
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2720
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2726

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2822 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2830
  call void @llvm.dbg.value(metadata i32 %1, metadata !2829, metadata !DIExpression()), !dbg !2831
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2832, !range !2834
  %3 = icmp eq i8 %2, 0, !dbg !2832
  br i1 %3, label %5, label %4, !dbg !2835

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2836
  br label %15, !dbg !2838

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2839
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2841
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2842
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2843
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2844
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2845
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2846
  call void @llvm.dbg.value(metadata i32 0, metadata !2827, metadata !DIExpression()), !dbg !2831
  br label %7, !dbg !2847

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2827, metadata !DIExpression()), !dbg !2831
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !2849
  store volatile i32 0, i32* %9, align 4, !dbg !2852
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !2853
  store volatile i32 0, i32* %10, align 4, !dbg !2854
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !2855
  store i32 0, i32* %11, align 4, !dbg !2856
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !2857
  store i32 0, i32* %12, align 4, !dbg !2858
  %13 = add nuw nsw i32 %8, 1, !dbg !2859
  call void @llvm.dbg.value(metadata i32 %13, metadata !2827, metadata !DIExpression()), !dbg !2831
  %14 = icmp eq i32 %13, 16, !dbg !2860
  br i1 %14, label %15, label %7, !dbg !2847, !llvm.loop !2861

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2831
  ret i32 %16, !dbg !2863
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2864 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2867
  call void @llvm.dbg.value(metadata i32 %1, metadata !2866, metadata !DIExpression()), !dbg !2868
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2869
  %3 = and i32 %2, -31, !dbg !2869
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2869
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2870
  %5 = or i32 %4, 19, !dbg !2870
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2870
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2871
  %7 = and i32 %6, -31, !dbg !2871
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2871
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2872
  %9 = or i32 %8, 3, !dbg !2872
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2872
  tail call void asm sideeffect "isb", ""() #22, !dbg !2873, !srcloc !2877
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2878
  ret i32 0, !dbg !2879
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !2880 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2883
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2884
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2885
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2886
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2887
  call void @llvm.dbg.value(metadata i32 0, metadata !2882, metadata !DIExpression()), !dbg !2888
  br label %2, !dbg !2889

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2882, metadata !DIExpression()), !dbg !2888
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !2891
  store volatile i32 0, i32* %4, align 4, !dbg !2894
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !2895
  store volatile i32 0, i32* %5, align 4, !dbg !2896
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !2897
  store i32 0, i32* %6, align 4, !dbg !2898
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !2899
  store i32 0, i32* %7, align 4, !dbg !2900
  %8 = add nuw nsw i32 %3, 1, !dbg !2901
  call void @llvm.dbg.value(metadata i32 %8, metadata !2882, metadata !DIExpression()), !dbg !2888
  %9 = icmp eq i32 %8, 16, !dbg !2902
  br i1 %9, label %10, label %2, !dbg !2889, !llvm.loop !2903

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !2905
  ret i32 0, !dbg !2906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !2907 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2908
  %2 = and i32 %1, 768, !dbg !2910
  %3 = icmp eq i32 %2, 0, !dbg !2910
  br i1 %3, label %8, label %4, !dbg !2911

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2912
  %6 = or i32 %5, 13, !dbg !2912
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2912
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2913
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2914
  br label %8, !dbg !2915

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !2916
  ret i32 %9, !dbg !2917
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !2918 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2921
  call void @llvm.dbg.value(metadata i32 %1, metadata !2920, metadata !DIExpression()), !dbg !2922
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2923
  %3 = and i32 %2, 1, !dbg !2925
  %4 = icmp eq i32 %3, 0, !dbg !2925
  br i1 %4, label %7, label %5, !dbg !2926

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2927
  br label %7, !dbg !2929

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2930
  %9 = and i32 %8, -2, !dbg !2930
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2930
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2931
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2932
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2933
  ret i32 0, !dbg !2934
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !2935 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2939, metadata !DIExpression()), !dbg !2940
  %2 = icmp ugt i32 %0, 15, !dbg !2941
  br i1 %2, label %13, label %3, !dbg !2943

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2944
  %5 = load volatile i32, i32* %4, align 4, !dbg !2944
  %6 = and i32 %5, 256, !dbg !2946
  %7 = icmp eq i32 %6, 0, !dbg !2946
  br i1 %7, label %13, label %8, !dbg !2947

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !2948
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2950
  %11 = or i32 %10, %9, !dbg !2950
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2950
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2951
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !2952
  br label %13, !dbg !2953

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !2940
  ret i32 %14, !dbg !2954
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !2955 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2957, metadata !DIExpression()), !dbg !2958
  %2 = icmp ugt i32 %0, 15, !dbg !2959
  br i1 %2, label %11, label %3, !dbg !2961

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !2962
  %5 = xor i32 %4, -1, !dbg !2963
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2964
  %7 = and i32 %6, %5, !dbg !2964
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2964
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2965
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !2966
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2967
  store i32 0, i32* %9, align 4, !dbg !2968
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2969
  store i32 0, i32* %10, align 4, !dbg !2970
  br label %11, !dbg !2971

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !2958
  ret i32 %12, !dbg !2972
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !2973 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2978, metadata !DIExpression()), !dbg !2979
  %2 = icmp ugt i32 %0, 3, !dbg !2980
  br i1 %2, label %13, label %3, !dbg !2982

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2983
  %5 = and i32 %4, -769, !dbg !2983
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2983
  %6 = shl nuw nsw i32 %0, 8, !dbg !2984
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2985
  %8 = or i32 %7, %6, !dbg !2985
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2985
  %9 = icmp eq i32 %0, 0, !dbg !2986
  br i1 %9, label %10, label %11, !dbg !2988

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2989
  br label %11, !dbg !2991

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2992
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2993
  br label %13, !dbg !2994

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !2979
  ret i32 %14, !dbg !2995
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !2996 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3007, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !3008, metadata !DIExpression()), !dbg !3009
  %3 = icmp ugt i32 %0, 15, !dbg !3010
  br i1 %3, label %30, label %4, !dbg !3012

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !3013
  br i1 %5, label %30, label %6, !dbg !3015

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !3016
  %8 = load i32, i32* %7, align 4, !dbg !3016
  %9 = and i32 %8, 4095, !dbg !3018
  %10 = icmp eq i32 %9, 0, !dbg !3018
  br i1 %10, label %12, label %11, !dbg !3019

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !3020
  unreachable, !dbg !3020

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !3022
  %14 = load i32, i32* %13, align 4, !dbg !3022
  %15 = and i32 %14, 4095, !dbg !3024
  %16 = icmp eq i32 %15, 0, !dbg !3024
  br i1 %16, label %18, label %17, !dbg !3025

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !3026
  unreachable, !dbg !3026

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !3028
  store volatile i32 %8, i32* %19, align 4, !dbg !3029
  %20 = load i32, i32* %7, align 4, !dbg !3030
  %21 = load i32, i32* %13, align 4, !dbg !3031
  %22 = add i32 %21, %20, !dbg !3032
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !3033
  store volatile i32 %22, i32* %23, align 4, !dbg !3034
  %24 = load volatile i32, i32* %19, align 4, !dbg !3035
  %25 = or i32 %24, 256, !dbg !3035
  store volatile i32 %25, i32* %19, align 4, !dbg !3035
  %26 = load volatile i32, i32* %19, align 4, !dbg !3036
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !3037
  store i32 %26, i32* %27, align 4, !dbg !3038
  %28 = load volatile i32, i32* %23, align 4, !dbg !3039
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !3040
  store i32 %28, i32* %29, align 4, !dbg !3041
  br label %30, !dbg !3042

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !3009
  ret i32 %31, !dbg !3043
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3044 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3048, metadata !DIExpression()), !dbg !3050
  %2 = and i32 %0, 31, !dbg !3051
  %3 = icmp eq i32 %2, 0, !dbg !3051
  br i1 %3, label %4, label %9, !dbg !3053

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3054
  call void @llvm.dbg.value(metadata i32 %5, metadata !3049, metadata !DIExpression()), !dbg !3050
  %6 = and i32 %0, -32, !dbg !3055
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3056
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3057
  %8 = or i32 %7, 5, !dbg !3057
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3057
  tail call void asm sideeffect "isb", ""() #22, !dbg !3058, !srcloc !2877
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3060
  br label %9, !dbg !3061

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3050
  ret i32 %10, !dbg !3062
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3063 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3067, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32 %1, metadata !3068, metadata !DIExpression()), !dbg !3071
  %3 = add i32 %1, %0, !dbg !3072
  call void @llvm.dbg.value(metadata i32 %3, metadata !3070, metadata !DIExpression()), !dbg !3071
  %4 = or i32 %1, %0, !dbg !3073
  %5 = and i32 %4, 31, !dbg !3073
  %6 = icmp eq i32 %5, 0, !dbg !3073
  br i1 %6, label %7, label %16, !dbg !3073

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3075
  call void @llvm.dbg.value(metadata i32 %8, metadata !3069, metadata !DIExpression()), !dbg !3071
  call void @llvm.dbg.value(metadata i32 %0, metadata !3067, metadata !DIExpression()), !dbg !3071
  %9 = icmp ugt i32 %3, %0, !dbg !3076
  br i1 %9, label %10, label %15, !dbg !3077

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3067, metadata !DIExpression()), !dbg !3071
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !3078
  %13 = add i32 %11, 32, !dbg !3080
  call void @llvm.dbg.value(metadata i32 %13, metadata !3067, metadata !DIExpression()), !dbg !3071
  %14 = icmp ult i32 %13, %3, !dbg !3076
  br i1 %14, label %10, label %15, !dbg !3077, !llvm.loop !3081

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3083, !srcloc !2877
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3085
  br label %16, !dbg !3086

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3071
  ret i32 %17, !dbg !3087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3088 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3090, metadata !DIExpression()), !dbg !3092
  %2 = and i32 %0, 31, !dbg !3093
  %3 = icmp eq i32 %2, 0, !dbg !3093
  br i1 %3, label %4, label %9, !dbg !3095

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3096
  call void @llvm.dbg.value(metadata i32 %5, metadata !3091, metadata !DIExpression()), !dbg !3092
  %6 = and i32 %0, -32, !dbg !3097
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3098
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3099
  %8 = or i32 %7, 21, !dbg !3099
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3099
  tail call void asm sideeffect "isb", ""() #22, !dbg !3100, !srcloc !2877
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3102
  br label %9, !dbg !3103

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3092
  ret i32 %10, !dbg !3104
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3105 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3107, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.value(metadata i32 %1, metadata !3108, metadata !DIExpression()), !dbg !3111
  %3 = add i32 %1, %0, !dbg !3112
  call void @llvm.dbg.value(metadata i32 %3, metadata !3110, metadata !DIExpression()), !dbg !3111
  %4 = or i32 %1, %0, !dbg !3113
  %5 = and i32 %4, 31, !dbg !3113
  %6 = icmp eq i32 %5, 0, !dbg !3113
  br i1 %6, label %7, label %16, !dbg !3113

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3115
  call void @llvm.dbg.value(metadata i32 %8, metadata !3109, metadata !DIExpression()), !dbg !3111
  call void @llvm.dbg.value(metadata i32 %0, metadata !3107, metadata !DIExpression()), !dbg !3111
  %9 = icmp ugt i32 %3, %0, !dbg !3116
  br i1 %9, label %10, label %15, !dbg !3117

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3107, metadata !DIExpression()), !dbg !3111
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !3118
  %13 = add i32 %11, 32, !dbg !3120
  call void @llvm.dbg.value(metadata i32 %13, metadata !3107, metadata !DIExpression()), !dbg !3111
  %14 = icmp ult i32 %13, %3, !dbg !3116
  br i1 %14, label %10, label %15, !dbg !3117, !llvm.loop !3121

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3123, !srcloc !2877
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3125
  br label %16, !dbg !3126

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3111
  ret i32 %17, !dbg !3127
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !3128 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3131
  call void @llvm.dbg.value(metadata i32 %1, metadata !3130, metadata !DIExpression()), !dbg !3132
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3133
  %3 = and i32 %2, -31, !dbg !3133
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3133
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3134
  %5 = or i32 %4, 19, !dbg !3134
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3134
  tail call void asm sideeffect "isb", ""() #22, !dbg !3135, !srcloc !2877
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3137
  ret i32 0, !dbg !3138
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !3139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3143, metadata !DIExpression()), !dbg !3145
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3146
  %3 = and i32 %2, 8, !dbg !3148
  %4 = icmp eq i32 %3, 0, !dbg !3148
  br i1 %4, label %23, label %5, !dbg !3149

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3144, metadata !DIExpression()), !dbg !3145
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3150
  %8 = shl nuw nsw i32 1, %6, !dbg !3155
  %9 = and i32 %7, %8, !dbg !3156
  %10 = icmp eq i32 %9, 0, !dbg !3156
  br i1 %10, label %20, label %11, !dbg !3157

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !3158
  %13 = load volatile i32, i32* %12, align 4, !dbg !3158
  %14 = and i32 %13, -257, !dbg !3161
  %15 = icmp ugt i32 %14, %0, !dbg !3162
  br i1 %15, label %20, label %16, !dbg !3163

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !3164
  %18 = load volatile i32, i32* %17, align 4, !dbg !3164
  %19 = icmp ugt i32 %18, %0, !dbg !3165
  br i1 %19, label %23, label %20, !dbg !3166

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !3167
  call void @llvm.dbg.value(metadata i32 %21, metadata !3144, metadata !DIExpression()), !dbg !3145
  %22 = icmp eq i32 %21, 16, !dbg !3168
  br i1 %22, label %23, label %5, !dbg !3169, !llvm.loop !3170

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !3145
  ret i1 %24, !dbg !3172
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !3173 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3179, metadata !DIExpression()), !dbg !3180
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3181
  br i1 %2, label %3, label %26, !dbg !3183

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3184
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3186
  %6 = load i32, i32* %5, align 4, !dbg !3186
  %7 = icmp eq i32 %6, 1, !dbg !3187
  br i1 %7, label %26, label %8, !dbg !3188

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3189
  %10 = load i8, i8* %9, align 4, !dbg !3189, !range !2834
  %11 = icmp eq i8 %10, 0, !dbg !3189
  br i1 %11, label %12, label %26, !dbg !3190

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3191
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !3192
  tail call void @gpt_open_clock_source() #20, !dbg !3193
  store i8 1, i8* %9, align 4, !dbg !3194
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3195
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3195
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3196
  %18 = load volatile i32, i32* %17, align 4, !dbg !3197
  %19 = and i32 %18, -2, !dbg !3197
  store volatile i32 %19, i32* %17, align 4, !dbg !3197
  %20 = shl nuw i32 1, %0, !dbg !3198
  %21 = xor i32 %20, -1, !dbg !3199
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3200
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3201
  %24 = load volatile i32, i32* %23, align 4, !dbg !3202
  %25 = and i32 %24, %21, !dbg !3202
  store volatile i32 %25, i32* %23, align 4, !dbg !3202
  br label %26, !dbg !3203

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !3180
  ret i32 %27, !dbg !3204
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3205 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3209, metadata !DIExpression()), !dbg !3210
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3211, !range !2834
  %3 = icmp ne i8 %2, 0, !dbg !3213
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3214
  %7 = and i1 %5, %6, !dbg !3214
  ret i1 %7, !dbg !3215
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3216 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3218, metadata !DIExpression()), !dbg !3219
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3220
  br i1 %2, label %3, label %14, !dbg !3222

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3223
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3225
  %6 = load i32, i32* %5, align 4, !dbg !3225
  %7 = icmp eq i32 %6, 1, !dbg !3226
  br i1 %7, label %14, label %8, !dbg !3227

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3228
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3229
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3230
  store i8 0, i8* %11, align 4, !dbg !3231
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3232
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3232
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3233
  br label %14, !dbg !3234

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3219
  ret i32 %15, !dbg !3235
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3236 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3241, metadata !DIExpression()), !dbg !3243
  call void @llvm.dbg.value(metadata i32* %1, metadata !3242, metadata !DIExpression()), !dbg !3243
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3244

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3245
  %5 = icmp eq i32 %4, 1, !dbg !3249
  br i1 %5, label %8, label %6, !dbg !3250

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3251
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3253
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3254
  br label %8, !dbg !3255

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3256
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3257
  br label %20, !dbg !3258

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3259
  %13 = icmp eq i32 %12, 1, !dbg !3263
  br i1 %13, label %16, label %14, !dbg !3264

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3265
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3267
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3268
  br label %16, !dbg !3269

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3270
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3271
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3272
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3273
  store i32 %21, i32* %1, align 4, !dbg !3273
  br label %22, !dbg !3274

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3243
  ret i32 %23, !dbg !3275
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3276 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3280, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32 %1, metadata !3281, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.value(metadata i32* %2, metadata !3282, metadata !DIExpression()), !dbg !3283
  %4 = icmp eq i32* %2, null, !dbg !3284
  br i1 %4, label %7, label %5, !dbg !3286

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3287
  store i32 %6, i32* %2, align 4, !dbg !3287
  br label %7, !dbg !3289

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3283
  ret i32 %8, !dbg !3290
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3291 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3296, metadata !DIExpression()), !dbg !3298
  call void @llvm.dbg.value(metadata i32* %1, metadata !3297, metadata !DIExpression()), !dbg !3298
  %3 = icmp ugt i32 %0, 5, !dbg !3299
  br i1 %3, label %7, label %4, !dbg !3301

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3302
  %6 = load i32, i32* %5, align 4, !dbg !3302
  store i32 %6, i32* %1, align 4, !dbg !3303
  br label %7, !dbg !3304

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3298
  ret i32 %8, !dbg !3305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3306 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3310, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3311, metadata !DIExpression()), !dbg !3313
  call void @llvm.dbg.value(metadata i8* %2, metadata !3312, metadata !DIExpression()), !dbg !3313
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3314
  br i1 %4, label %5, label %18, !dbg !3316

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3317
  %7 = load i32, i32* %6, align 4, !dbg !3317
  %8 = icmp eq i32 %7, 1, !dbg !3319
  br i1 %8, label %18, label %9, !dbg !3320

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3321
  %11 = load i8, i8* %10, align 4, !dbg !3321, !range !2834
  %12 = icmp eq i8 %11, 1, !dbg !3322
  br i1 %12, label %13, label %18, !dbg !3323

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3324
  br i1 %14, label %18, label %15, !dbg !3326

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3327
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3328
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3329
  store i8* %2, i8** %17, align 4, !dbg !3330
  tail call void @gpt_nvic_register() #20, !dbg !3331
  br label %18, !dbg !3332

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3313
  ret i32 %19, !dbg !3333
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3334 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3339, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %1, metadata !3340, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.value(metadata i32 %2, metadata !3341, metadata !DIExpression()), !dbg !3343
  %5 = bitcast i32* %4 to i8*, !dbg !3344
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3344
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3342, metadata !DIExpression()), !dbg !3345
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3346
  br i1 %6, label %7, label %51, !dbg !3348

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3349
  %9 = load i32, i32* %8, align 4, !dbg !3349
  %10 = icmp eq i32 %9, 1, !dbg !3351
  br i1 %10, label %51, label %11, !dbg !3352

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3353
  %13 = load i8, i8* %12, align 4, !dbg !3353, !range !2834
  %14 = icmp eq i8 %13, 1, !dbg !3354
  br i1 %14, label %15, label %51, !dbg !3355

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3356
  br i1 %16, label %51, label %17, !dbg !3358

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3359
  store volatile i32 %18, i32* %4, align 4, !dbg !3360
  tail call void @gpt_open_clock_source() #20, !dbg !3361
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3362
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3362
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3363
  %22 = load volatile i32, i32* %21, align 4, !dbg !3364
  %23 = and i32 %22, -2, !dbg !3364
  store volatile i32 %23, i32* %21, align 4, !dbg !3364
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3365
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3366
  %26 = load volatile i32, i32* %25, align 4, !dbg !3367
  %27 = and i32 %26, -2, !dbg !3367
  store volatile i32 %27, i32* %25, align 4, !dbg !3367
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3368
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3369
  store volatile i32 16, i32* %29, align 4, !dbg !3370
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3371
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3372
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3373
  store volatile i32 %30, i32* %32, align 4, !dbg !3374
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3375
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3376
  store volatile i32 1, i32* %34, align 4, !dbg !3377
  %35 = shl i32 %2, 4, !dbg !3378
  %36 = or i32 %35, 2, !dbg !3379
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3380
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3381
  store volatile i32 %36, i32* %38, align 4, !dbg !3382
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3383

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3384
  %43 = icmp eq i32 %42, 0, !dbg !3383
  br i1 %43, label %44, label %41, !dbg !3383, !llvm.loop !3385

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3387
  %46 = load volatile i32, i32* %45, align 4, !dbg !3388
  %47 = or i32 %46, 1, !dbg !3388
  store volatile i32 %47, i32* %45, align 4, !dbg !3388
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3389
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3390
  store volatile i32 1, i32* %49, align 4, !dbg !3391
  store i32 1, i32* %8, align 4, !dbg !3392
  %50 = load volatile i32, i32* %4, align 4, !dbg !3393
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3394
  br label %51, !dbg !3395

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3343
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3396
  ret i32 %52, !dbg !3396
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3397 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3401, metadata !DIExpression()), !dbg !3402
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3403
  %3 = icmp eq i32 %2, 1, !dbg !3405
  br i1 %3, label %6, label %4, !dbg !3406

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3407
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3409
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3410
  br label %6, !dbg !3411

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3412
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3413
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3414
  ret i32 0, !dbg !3415
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3416 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3418, metadata !DIExpression()), !dbg !3422
  call void @llvm.dbg.value(metadata i32 %1, metadata !3419, metadata !DIExpression()), !dbg !3422
  call void @llvm.dbg.value(metadata i32 %2, metadata !3420, metadata !DIExpression()), !dbg !3422
  %5 = bitcast i32* %4 to i8*, !dbg !3423
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3423
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3421, metadata !DIExpression()), !dbg !3424
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3425
  br i1 %6, label %7, label %50, !dbg !3427

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3428
  %9 = load i32, i32* %8, align 4, !dbg !3428
  %10 = icmp eq i32 %9, 1, !dbg !3430
  br i1 %10, label %50, label %11, !dbg !3431

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3432
  %13 = load i8, i8* %12, align 4, !dbg !3432, !range !2834
  %14 = icmp eq i8 %13, 1, !dbg !3433
  br i1 %14, label %15, label %50, !dbg !3434

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3435
  store i8 1, i8* %16, align 1, !dbg !3436
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3437
  store volatile i32 %17, i32* %4, align 4, !dbg !3438
  tail call void @gpt_open_clock_source() #20, !dbg !3439
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3440
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3440
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !3441
  %21 = load volatile i32, i32* %20, align 4, !dbg !3442
  %22 = and i32 %21, -2, !dbg !3442
  store volatile i32 %22, i32* %20, align 4, !dbg !3442
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3443
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !3444
  %25 = load volatile i32, i32* %24, align 4, !dbg !3445
  %26 = and i32 %25, -2, !dbg !3445
  store volatile i32 %26, i32* %24, align 4, !dbg !3445
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3446
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !3447
  store volatile i32 12, i32* %28, align 4, !dbg !3448
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3449
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3450
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !3451
  store volatile i32 %29, i32* %31, align 4, !dbg !3452
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3453
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !3454
  store volatile i32 1, i32* %33, align 4, !dbg !3455
  %34 = shl i32 %2, 4, !dbg !3456
  %35 = or i32 %34, 2, !dbg !3457
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3458
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !3459
  store volatile i32 %35, i32* %37, align 4, !dbg !3460
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !3461

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !3462
  %42 = icmp eq i32 %41, 0, !dbg !3461
  br i1 %42, label %43, label %40, !dbg !3461, !llvm.loop !3463

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !3465
  %45 = load volatile i32, i32* %44, align 4, !dbg !3466
  %46 = or i32 %45, 1, !dbg !3466
  store volatile i32 %46, i32* %44, align 4, !dbg !3466
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3467
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !3468
  store volatile i32 1, i32* %48, align 4, !dbg !3469
  %49 = load volatile i32, i32* %4, align 4, !dbg !3470
  tail call void @restore_interrupt_mask(i32 noundef %49) #20, !dbg !3471
  store i32 1, i32* %8, align 4, !dbg !3472
  br label %50, !dbg !3473

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3422
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3474
  ret i32 %51, !dbg !3474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3475 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3477, metadata !DIExpression()), !dbg !3478
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3479
  %3 = icmp eq i32 %2, 1, !dbg !3481
  br i1 %3, label %6, label %4, !dbg !3482

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3483
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3485
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3486
  br label %6, !dbg !3487

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3488
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3489
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3490
  ret i32 0, !dbg !3491
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3492 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3494, metadata !DIExpression()), !dbg !3496
  %3 = bitcast i32* %2 to i8*, !dbg !3497
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3497
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3495, metadata !DIExpression()), !dbg !3498
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3499
  br i1 %4, label %5, label %24, !dbg !3501

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3502
  store volatile i32 %6, i32* %2, align 4, !dbg !3503
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3504
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3504
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3505
  %10 = load volatile i32, i32* %9, align 4, !dbg !3506
  %11 = and i32 %10, -2, !dbg !3506
  store volatile i32 %11, i32* %9, align 4, !dbg !3506
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3507
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3508
  %14 = load volatile i32, i32* %13, align 4, !dbg !3509
  %15 = and i32 %14, -2, !dbg !3509
  store volatile i32 %15, i32* %13, align 4, !dbg !3509
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3510
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3511
  store volatile i32 1, i32* %17, align 4, !dbg !3512
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3513
  store i32 0, i32* %18, align 4, !dbg !3514
  %19 = load volatile i32, i32* %2, align 4, !dbg !3515
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !3516
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3517
  %21 = load i8, i8* %20, align 1, !dbg !3517, !range !2834
  %22 = icmp eq i8 %21, 0, !dbg !3517
  br i1 %22, label %24, label %23, !dbg !3519

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !3520
  br label %24, !dbg !3522

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3496
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3523
  ret i32 %25, !dbg !3523
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3524 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3528, metadata !DIExpression()), !dbg !3531
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3532
  %3 = icmp ugt i32 %2, 31, !dbg !3534
  br i1 %3, label %13, label %4, !dbg !3535

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3536
  br i1 %5, label %13, label %6, !dbg !3538

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3539
  call void @llvm.dbg.value(metadata i32 %7, metadata !3530, metadata !DIExpression()), !dbg !3531
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !3540
  call void @llvm.dbg.value(metadata i32 %8, metadata !3529, metadata !DIExpression()), !dbg !3531
  %9 = or i32 %8, -559087616, !dbg !3541
  store i32 %9, i32* %0, align 4, !dbg !3542
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3543
  store i8 1, i8* %10, align 4, !dbg !3544
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3545
  %12 = add i32 %11, 1, !dbg !3545
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3545
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3546
  br label %13, !dbg !3547

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3531
  ret i32 %14, !dbg !3548
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3549 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3551, metadata !DIExpression()), !dbg !3553
  %3 = bitcast i32* %2 to i8*, !dbg !3554
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3554
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3552, metadata !DIExpression()), !dbg !3555
  %4 = and i32 %0, -559087616, !dbg !3556
  %5 = icmp eq i32 %4, -559087616, !dbg !3558
  br i1 %5, label %6, label %24, !dbg !3559

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3560
  store volatile i32 %7, i32* %2, align 4, !dbg !3561
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3562
  %9 = icmp eq i32 %8, 0, !dbg !3564
  br i1 %9, label %24, label %10, !dbg !3565

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3566
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3568
  %13 = load i8, i8* %12, align 1, !dbg !3568, !range !2834
  %14 = icmp eq i8 %13, 0, !dbg !3568
  br i1 %14, label %15, label %24, !dbg !3569

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3570
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3572
  %18 = load i8, i8* %17, align 4, !dbg !3572, !range !2834
  %19 = icmp eq i8 %18, 1, !dbg !3573
  br i1 %19, label %20, label %24, !dbg !3574

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3575
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3576
  store i8 0, i8* %22, align 4, !dbg !3577
  %23 = add i32 %8, -1, !dbg !3578
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3578
  br label %24, !dbg !3579

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3553
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3580
  ret i32 %25, !dbg !3580
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3581 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3585, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i32 %1, metadata !3586, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3587, metadata !DIExpression()), !dbg !3592
  call void @llvm.dbg.value(metadata i8* %3, metadata !3588, metadata !DIExpression()), !dbg !3592
  %5 = and i32 %0, -559087616, !dbg !3593
  %6 = icmp ne i32 %5, -559087616, !dbg !3595
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3596
  call void @llvm.dbg.value(metadata i32 %0, metadata !3591, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3592
  br i1 %8, label %44, label %9, !dbg !3596

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3597
  call void @llvm.dbg.value(metadata i32 %10, metadata !3591, metadata !DIExpression()), !dbg !3592
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3598
  %12 = load i8, i8* %11, align 1, !dbg !3598, !range !2834
  %13 = icmp eq i8 %12, 0, !dbg !3598
  br i1 %13, label %14, label %44, !dbg !3600

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3601
  %16 = load i8, i8* %15, align 4, !dbg !3601, !range !2834
  %17 = icmp eq i8 %16, 1, !dbg !3603
  br i1 %17, label %18, label %44, !dbg !3604

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3605
  br i1 %19, label %44, label %20, !dbg !3607

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3608
  call void @llvm.dbg.value(metadata i32 %21, metadata !3590, metadata !DIExpression()), !dbg !3592
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3609
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3610, !range !2834
  %23 = icmp eq i8 %22, 0, !dbg !3612
  br i1 %23, label %24, label %27, !dbg !3613

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !3614
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !3616
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3617
  br label %27, !dbg !3618

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3619
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3620, !range !2834
  %30 = icmp eq i8 %29, 0, !dbg !3622
  br i1 %30, label %31, label %34, !dbg !3623

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3624
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !3626
  call void @llvm.dbg.value(metadata i32 %33, metadata !3589, metadata !DIExpression()), !dbg !3592
  br label %34, !dbg !3627

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3628
  call void @llvm.dbg.value(metadata i32 %35, metadata !3589, metadata !DIExpression()), !dbg !3592
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3629
  %37 = add i32 %36, %35, !dbg !3629
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3629
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3630
  %39 = add i32 %38, 1, !dbg !3630
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3630
  store i8 1, i8* %11, align 1, !dbg !3631
  %40 = add i32 %37, %1, !dbg !3632
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3633
  store i32 %40, i32* %41, align 4, !dbg !3634
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3635
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3636
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3637
  store i8* %3, i8** %43, align 4, !dbg !3638
  tail call void @gpt_sw_start_timer() #20, !dbg !3639
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3640
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !3641
  br label %44, !dbg !3642

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3592
  ret i32 %45, !dbg !3643
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3646, metadata !DIExpression()), !dbg !3650
  %2 = and i32 %0, -559087616, !dbg !3651
  %3 = icmp eq i32 %2, -559087616, !dbg !3653
  br i1 %3, label %4, label %31, !dbg !3654

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3655
  call void @llvm.dbg.value(metadata i32 %5, metadata !3649, metadata !DIExpression()), !dbg !3650
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3656
  %7 = load i8, i8* %6, align 1, !dbg !3656, !range !2834
  %8 = icmp eq i8 %7, 1, !dbg !3658
  br i1 %8, label %9, label %31, !dbg !3659

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3660
  %11 = load i8, i8* %10, align 4, !dbg !3660, !range !2834
  %12 = icmp eq i8 %11, 1, !dbg !3662
  br i1 %12, label %13, label %31, !dbg !3663

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3664
  call void @llvm.dbg.value(metadata i32 %14, metadata !3648, metadata !DIExpression()), !dbg !3650
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3665
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3666
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3667
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3668, !range !2834
  %17 = icmp eq i8 %16, 0, !dbg !3670
  br i1 %17, label %18, label %21, !dbg !3671

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3672
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !3674
  call void @llvm.dbg.value(metadata i32 %20, metadata !3647, metadata !DIExpression()), !dbg !3650
  br label %21, !dbg !3675

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3676
  call void @llvm.dbg.value(metadata i32 %22, metadata !3647, metadata !DIExpression()), !dbg !3650
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3677
  %24 = add i32 %23, %22, !dbg !3677
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3677
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3678
  %26 = add i32 %25, -1, !dbg !3678
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3678
  store i8 0, i8* %6, align 1, !dbg !3679
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3680
  %28 = icmp eq i32 %27, 0, !dbg !3682
  br i1 %28, label %30, label %29, !dbg !3683

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !3684
  br label %30, !dbg !3686

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3687
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !3688
  br label %31, !dbg !3689

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3650
  ret i32 %32, !dbg !3690
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3691 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3695, metadata !DIExpression()), !dbg !3700
  call void @llvm.dbg.value(metadata i32* %1, metadata !3696, metadata !DIExpression()), !dbg !3700
  %3 = and i32 %0, -559087616, !dbg !3701
  %4 = icmp eq i32 %3, -559087616, !dbg !3703
  br i1 %4, label %5, label %20, !dbg !3704

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3705
  call void @llvm.dbg.value(metadata i32 %6, metadata !3699, metadata !DIExpression()), !dbg !3700
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3706
  %8 = load i8, i8* %7, align 4, !dbg !3706, !range !2834
  %9 = icmp eq i8 %8, 1, !dbg !3708
  br i1 %9, label %10, label %20, !dbg !3709

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3710
  call void @llvm.dbg.value(metadata i32 %11, metadata !3698, metadata !DIExpression()), !dbg !3700
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3711
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3712
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3713
  %15 = load volatile i32, i32* %14, align 4, !dbg !3713
  %16 = add i32 %15, %12, !dbg !3714
  call void @llvm.dbg.value(metadata i32 %16, metadata !3697, metadata !DIExpression()), !dbg !3700
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3715
  %18 = load i32, i32* %17, align 4, !dbg !3715
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3717
  store i32 %19, i32* %1, align 4, !dbg !3718
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !3719
  br label %20, !dbg !3720

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3700
  ret i32 %21, !dbg !3721
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3726, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i32 %1, metadata !3727, metadata !DIExpression()), !dbg !3733
  call void @llvm.dbg.value(metadata i32 %2, metadata !3728, metadata !DIExpression()), !dbg !3733
  %4 = and i32 %0, 65535, !dbg !3734
  %5 = mul i32 %4, %1, !dbg !3735
  call void @llvm.dbg.value(metadata i32 %5, metadata !3729, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3733
  %6 = lshr i32 %0, 16, !dbg !3736
  %7 = mul i32 %6, %1, !dbg !3737
  call void @llvm.dbg.value(metadata i32 %7, metadata !3729, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3733
  %8 = and i32 %5, 65535, !dbg !3738
  call void @llvm.dbg.value(metadata i32 %8, metadata !3731, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3733
  %9 = lshr i32 %5, 16, !dbg !3739
  %10 = add i32 %9, %7, !dbg !3740
  call void @llvm.dbg.value(metadata i32 %10, metadata !3731, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3733
  %11 = udiv i32 %10, %2, !dbg !3741
  call void @llvm.dbg.value(metadata i32 %11, metadata !3732, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3733
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3742
  %15 = or i32 %14, %8, !dbg !3743
  %16 = udiv i32 %15, %2, !dbg !3744
  call void @llvm.dbg.value(metadata i32 %16, metadata !3732, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3733
  %17 = shl i32 %11, 16, !dbg !3745
  %18 = add i32 %16, %17, !dbg !3746
  ret i32 %18, !dbg !3747
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3748 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3752, metadata !DIExpression()), !dbg !3753
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3754
  %3 = load volatile i32, i32* %2, align 4, !dbg !3754
  ret i32 %3, !dbg !3755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3756 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3760, metadata !DIExpression()), !dbg !3761
  %2 = shl i32 %0, 5, !dbg !3762
  %3 = mul i32 %0, 7, !dbg !3763
  %4 = udiv i32 %3, 10, !dbg !3764
  %5 = add i32 %4, %2, !dbg !3765
  %6 = mul i32 %0, 6, !dbg !3766
  %7 = udiv i32 %6, 100, !dbg !3767
  %8 = add i32 %5, %7, !dbg !3768
  %9 = shl i32 %0, 3, !dbg !3769
  %10 = udiv i32 %9, 1000, !dbg !3770
  %11 = add i32 %8, %10, !dbg !3771
  ret i32 %11, !dbg !3772
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !290 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3773
  br i1 %1, label %10, label %2, !dbg !3775

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3776
  br i1 %3, label %4, label %6, !dbg !3779

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !3780
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3782
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3783

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3785
  br label %8, !dbg !3785

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3785
  br label %10, !dbg !3786

10:                                               ; preds = %8, %0
  ret void, !dbg !3786
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3787 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !3788
  br i1 %1, label %4, label %2, !dbg !3790

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !3791
  br label %4, !dbg !3793

4:                                                ; preds = %2, %0
  ret void, !dbg !3794
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3795 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3797, metadata !DIExpression()), !dbg !3798
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3799
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3800
  br i1 %2, label %3, label %6, !dbg !3802

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3803
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3805
  br label %6, !dbg !3806

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3807
  ret i32 %7, !dbg !3808
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3809 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3811, metadata !DIExpression()), !dbg !3812
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3813
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3814
  br i1 %2, label %3, label %6, !dbg !3816

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3817
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3819
  br label %6, !dbg !3820

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3821
  ret i32 %7, !dbg !3822
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3823 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3827, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i32 %1, metadata !3828, metadata !DIExpression()), !dbg !3830
  call void @llvm.dbg.value(metadata i32 %2, metadata !3829, metadata !DIExpression()), !dbg !3830
  tail call void @gpt_open_clock_source() #21, !dbg !3831
  %4 = or i32 %2, %1, !dbg !3832
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3833
  store volatile i32 %4, i32* %5, align 4, !dbg !3834
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3835
  store volatile i32 49, i32* %6, align 4, !dbg !3836
  ret void, !dbg !3837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3838 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3842, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.value(metadata i32 %1, metadata !3843, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.value(metadata i32 0, metadata !3844, metadata !DIExpression()), !dbg !3846
  call void @llvm.dbg.value(metadata i32 0, metadata !3845, metadata !DIExpression()), !dbg !3846
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3847
  call void @llvm.dbg.value(metadata i32 %3, metadata !3845, metadata !DIExpression()), !dbg !3846
  %4 = add i32 %1, 1, !dbg !3848
  %5 = add i32 %4, %3, !dbg !3849
  call void @llvm.dbg.value(metadata i32 %5, metadata !3844, metadata !DIExpression()), !dbg !3846
  %6 = icmp ugt i32 %5, %3, !dbg !3850
  br i1 %6, label %7, label %10, !dbg !3852

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3853
  %9 = icmp ult i32 %8, %5, !dbg !3855
  br i1 %9, label %7, label %16, !dbg !3856, !llvm.loop !3857

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3859
  %12 = icmp ult i32 %11, %3, !dbg !3861
  br i1 %12, label %13, label %10, !dbg !3862, !llvm.loop !3863

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3865
  %15 = icmp ult i32 %14, %5, !dbg !3866
  br i1 %15, label %13, label %16, !dbg !3867, !llvm.loop !3868

16:                                               ; preds = %13, %7
  ret void, !dbg !3870
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !3871 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3875, metadata !DIExpression()), !dbg !3876
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3877
  store volatile i32 0, i32* %2, align 4, !dbg !3878
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3879
  store volatile i32 0, i32* %3, align 4, !dbg !3880
  %4 = load volatile i32, i32* %3, align 4, !dbg !3881
  %5 = or i32 %4, 2, !dbg !3881
  store volatile i32 %5, i32* %3, align 4, !dbg !3881
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3882

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3883
  %9 = icmp eq i32 %8, 0, !dbg !3882
  br i1 %9, label %10, label %7, !dbg !3882, !llvm.loop !3884

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3886
  store volatile i32 16, i32* %11, align 4, !dbg !3887
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3888
  store volatile i32 1, i32* %12, align 4, !dbg !3889
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3890
  store volatile i32 -1, i32* %13, align 4, !dbg !3891
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3892
  br i1 %14, label %15, label %16, !dbg !3894

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3895
  br label %16, !dbg !3897

16:                                               ; preds = %15, %10
  ret void, !dbg !3898
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3899 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3901, metadata !DIExpression()), !dbg !3903
  %3 = bitcast i32* %2 to i8*, !dbg !3904
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3904
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3902, metadata !DIExpression()), !dbg !3905
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3906
  %5 = load volatile i32, i32* %4, align 4, !dbg !3906
  store volatile i32 %5, i32* %2, align 4, !dbg !3907
  %6 = load volatile i32, i32* %4, align 4, !dbg !3908
  %7 = and i32 %6, -2, !dbg !3908
  store volatile i32 %7, i32* %4, align 4, !dbg !3908
  %8 = load volatile i32, i32* %2, align 4, !dbg !3909
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3910
  ret i32 %8, !dbg !3911
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3912 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3916, metadata !DIExpression()), !dbg !3918
  call void @llvm.dbg.value(metadata i32 %1, metadata !3917, metadata !DIExpression()), !dbg !3918
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3919
  store volatile i32 %1, i32* %3, align 4, !dbg !3920
  ret void, !dbg !3921
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3922 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3924, metadata !DIExpression()), !dbg !3929
  %5 = bitcast i32* %2 to i8*, !dbg !3930
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3930
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3926, metadata !DIExpression()), !dbg !3931
  %6 = bitcast i32* %3 to i8*, !dbg !3932
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3932
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3927, metadata !DIExpression()), !dbg !3933
  %7 = bitcast i32* %4 to i8*, !dbg !3934
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3934
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3928, metadata !DIExpression()), !dbg !3935
  call void @llvm.dbg.value(metadata i32 undef, metadata !3924, metadata !DIExpression()), !dbg !3929
  call void @llvm.dbg.value(metadata i32 0, metadata !3925, metadata !DIExpression()), !dbg !3929
  br label %8, !dbg !3936

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3925, metadata !DIExpression()), !dbg !3929
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3938
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3938
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3941
  %13 = load volatile i32, i32* %12, align 4, !dbg !3941
  store volatile i32 %13, i32* %3, align 4, !dbg !3942
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3943
  %15 = load volatile i32, i32* %14, align 4, !dbg !3943
  store volatile i32 %15, i32* %4, align 4, !dbg !3944
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !3945
  store volatile i32 %16, i32* %2, align 4, !dbg !3946
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3947
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3948
  store volatile i32 1, i32* %18, align 4, !dbg !3949
  %19 = load volatile i32, i32* %3, align 4, !dbg !3950
  %20 = and i32 %19, 1, !dbg !3952
  %21 = icmp eq i32 %20, 0, !dbg !3952
  br i1 %21, label %33, label %22, !dbg !3953

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3954
  %24 = and i32 %23, 1, !dbg !3955
  %25 = icmp eq i32 %24, 0, !dbg !3955
  br i1 %25, label %33, label %26, !dbg !3956

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3957
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3957
  %29 = icmp eq void (i8*)* %28, null, !dbg !3960
  br i1 %29, label %33, label %30, !dbg !3961

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3962
  %32 = load i8*, i8** %31, align 4, !dbg !3962
  tail call void %28(i8* noundef %32) #20, !dbg !3964
  br label %33, !dbg !3965

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3966
  %35 = load volatile i32, i32* %2, align 4, !dbg !3967
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !3968
  %36 = add nuw nsw i32 %9, 1, !dbg !3969
  call void @llvm.dbg.value(metadata i32 %36, metadata !3925, metadata !DIExpression()), !dbg !3929
  %37 = icmp eq i32 %36, 6, !dbg !3970
  br i1 %37, label %38, label %8, !dbg !3936, !llvm.loop !3971

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3973
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3973
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3973
  ret void, !dbg !3973
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3974 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !3975
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !3976
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !3977
  ret void, !dbg !3978
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3979 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3981, metadata !DIExpression()), !dbg !3986
  %3 = bitcast i32* %2 to i8*, !dbg !3987
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3987
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3982, metadata !DIExpression()), !dbg !3988
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3989
  call void @llvm.dbg.value(metadata i32 %4, metadata !3983, metadata !DIExpression()), !dbg !3986
  %5 = lshr i32 %4, 15, !dbg !3990
  call void @llvm.dbg.value(metadata i32 %5, metadata !3984, metadata !DIExpression()), !dbg !3986
  %6 = and i32 %4, 32767, !dbg !3991
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3992
  %8 = add nuw nsw i32 %7, 16384, !dbg !3993
  %9 = lshr i32 %8, 15, !dbg !3994
  call void @llvm.dbg.value(metadata i32 %9, metadata !3985, metadata !DIExpression()), !dbg !3986
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3995
  %11 = add nuw nsw i32 %9, %10, !dbg !3996
  store volatile i32 %11, i32* %2, align 4, !dbg !3997
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3998
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3999
  %14 = load volatile i32, i32* %13, align 4, !dbg !4000
  %15 = or i32 %14, 2, !dbg !4000
  store volatile i32 %15, i32* %13, align 4, !dbg !4000
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !4001

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !4002
  %20 = icmp eq i32 %19, 0, !dbg !4001
  br i1 %20, label %21, label %18, !dbg !4001, !llvm.loop !4003

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !4005
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4006
  ret i32 %22, !dbg !4007
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !4008 {
  call void @llvm.dbg.value(metadata i32 0, metadata !4012, metadata !DIExpression()), !dbg !4013
  br label %1, !dbg !4014

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !4012, metadata !DIExpression()), !dbg !4013
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !4016
  %4 = load i8, i8* %3, align 4, !dbg !4016, !range !2834
  %5 = icmp eq i8 %4, 1, !dbg !4020
  br i1 %5, label %6, label %9, !dbg !4021

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !4022
  call void @llvm.dbg.value(metadata i32 %7, metadata !4012, metadata !DIExpression()), !dbg !4013
  %8 = icmp eq i32 %7, 32, !dbg !4023
  br i1 %8, label %9, label %1, !dbg !4014, !llvm.loop !4024

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !4013
  ret i32 %10, !dbg !4026
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !4027 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !4031
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4031
  %4 = bitcast i32* %2 to i8*, !dbg !4031
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4031
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4032, !range !2834
  %6 = icmp eq i8 %5, 0, !dbg !4032
  br i1 %6, label %7, label %11, !dbg !4034

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !4029, metadata !DIExpression(DW_OP_deref)), !dbg !4035
  call void @llvm.dbg.value(metadata i32* %2, metadata !4030, metadata !DIExpression(DW_OP_deref)), !dbg !4035
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !4036
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4037
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4038
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4039
  %9 = load i32, i32* %1, align 4, !dbg !4040
  call void @llvm.dbg.value(metadata i32 %9, metadata !4029, metadata !DIExpression()), !dbg !4035
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !4041
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4042
  br label %11, !dbg !4043

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4043
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !4043
  ret void, !dbg !4043
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !4044 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !4048, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata i32* %1, metadata !4049, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata i32 -1, metadata !4051, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata i32 0, metadata !4050, metadata !DIExpression()), !dbg !4053
  br label %3, !dbg !4054

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !4050, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.value(metadata i32 %5, metadata !4051, metadata !DIExpression()), !dbg !4053
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !4056
  %7 = load i8, i8* %6, align 1, !dbg !4056, !range !2834
  %8 = icmp eq i8 %7, 0, !dbg !4056
  br i1 %8, label %13, label %9, !dbg !4060

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !4061
  call void @llvm.dbg.value(metadata i32 %10, metadata !4052, metadata !DIExpression()), !dbg !4053
  %11 = icmp ult i32 %10, %5, !dbg !4063
  br i1 %11, label %12, label %13, !dbg !4065

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !4051, metadata !DIExpression()), !dbg !4053
  store i32 %4, i32* %1, align 4, !dbg !4066
  br label %13, !dbg !4068

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !4053
  call void @llvm.dbg.value(metadata i32 %14, metadata !4051, metadata !DIExpression()), !dbg !4053
  %15 = add nuw nsw i32 %4, 1, !dbg !4069
  call void @llvm.dbg.value(metadata i32 %15, metadata !4050, metadata !DIExpression()), !dbg !4053
  %16 = icmp eq i32 %15, 32, !dbg !4070
  br i1 %16, label %17, label %3, !dbg !4054, !llvm.loop !4071

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !4073
  ret void, !dbg !4074
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !4075 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4077, metadata !DIExpression()), !dbg !4081
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !4082
  %3 = load i32, i32* %2, align 4, !dbg !4082
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4082
  %5 = sub i32 %3, %4, !dbg !4082
  call void @llvm.dbg.value(metadata i32 %5, metadata !4078, metadata !DIExpression()), !dbg !4081
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4083
  %7 = sub i32 %6, %4, !dbg !4083
  call void @llvm.dbg.value(metadata i32 %7, metadata !4079, metadata !DIExpression()), !dbg !4081
  %8 = icmp ugt i32 %5, %7, !dbg !4084
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !4086
  call void @llvm.dbg.value(metadata i32 %10, metadata !4080, metadata !DIExpression()), !dbg !4081
  ret i32 %10, !dbg !4087
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !4088 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4090, metadata !DIExpression()), !dbg !4094
  %4 = bitcast i32* %2 to i8*, !dbg !4095
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4095
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4092, metadata !DIExpression()), !dbg !4096
  %5 = bitcast i32* %3 to i8*, !dbg !4097
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4097
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4093, metadata !DIExpression()), !dbg !4098
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4099
  %7 = icmp eq i32 %6, 0, !dbg !4101
  br i1 %7, label %38, label %8, !dbg !4102

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4103
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !4105
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4106
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4107
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !4108
  store volatile i32 %11, i32* %2, align 4, !dbg !4109
  %12 = load volatile i32, i32* %2, align 4, !dbg !4110
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4111
  %14 = add i32 %13, %12, !dbg !4111
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4111
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4112
  call void @llvm.dbg.value(metadata i32 0, metadata !4091, metadata !DIExpression()), !dbg !4094
  br label %15, !dbg !4113

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4091, metadata !DIExpression()), !dbg !4094
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !4115
  %18 = load i8, i8* %17, align 1, !dbg !4115, !range !2834
  %19 = icmp eq i8 %18, 0, !dbg !4115
  br i1 %19, label %31, label %20, !dbg !4119

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !4120
  store volatile i32 %21, i32* %3, align 4, !dbg !4122
  %22 = load volatile i32, i32* %3, align 4, !dbg !4123
  %23 = icmp eq i32 %22, 0, !dbg !4125
  br i1 %23, label %24, label %31, !dbg !4126

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !4127
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4129
  %26 = add i32 %25, -1, !dbg !4129
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4129
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !4130
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4130
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !4131
  %30 = load i8*, i8** %29, align 4, !dbg !4131
  tail call void %28(i8* noundef %30) #20, !dbg !4132
  br label %31, !dbg !4133

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !4134
  call void @llvm.dbg.value(metadata i32 %32, metadata !4091, metadata !DIExpression()), !dbg !4094
  %33 = icmp eq i32 %32, 32, !dbg !4135
  br i1 %33, label %34, label %15, !dbg !4113, !llvm.loop !4136

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4138
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4139
  %36 = icmp eq i32 %35, 0, !dbg !4141
  br i1 %36, label %38, label %37, !dbg !4142

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !4143
  br label %38, !dbg !4145

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4146
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4146
  ret void, !dbg !4146
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gdma_init(i32 noundef %0) local_unnamed_addr #0 !dbg !4147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4153, metadata !DIExpression()), !dbg !4158
  %2 = tail call fastcc i32 @hal_gdma_check_valid_channel(i32 noundef %0) #21, !dbg !4159
  call void @llvm.dbg.value(metadata i32 %2, metadata !4154, metadata !DIExpression()), !dbg !4158
  %3 = icmp eq i32 %2, 255, !dbg !4160
  br i1 %3, label %16, label %4, !dbg !4162

4:                                                ; preds = %1
  %5 = tail call i32 @dma_enable_clock(i32 noundef 0) #20, !dbg !4163
  call void @llvm.dbg.value(metadata i32 %5, metadata !4154, metadata !DIExpression()), !dbg !4158
  %6 = icmp eq i32 %5, 255, !dbg !4164
  br i1 %6, label %16, label %7, !dbg !4166

7:                                                ; preds = %4
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4167
  call void @llvm.dbg.value(metadata i32 %8, metadata !4156, metadata !DIExpression()), !dbg !4168
  %9 = getelementptr inbounds [1 x i8], [1 x i8]* @gdma_init_status, i32 0, i32 %0, !dbg !4169
  %10 = load volatile i8, i8* %9, align 1, !dbg !4169
  %11 = icmp eq i8 %10, 1, !dbg !4169
  br i1 %11, label %15, label %12, !dbg !4167

12:                                               ; preds = %7
  store volatile i8 1, i8* %9, align 1, !dbg !4171
  call void @llvm.dbg.value(metadata i32 0, metadata !4155, metadata !DIExpression()), !dbg !4158
  call void @llvm.dbg.value(metadata i32 undef, metadata !4155, metadata !DIExpression()), !dbg !4158
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !4167
  tail call void @gdma_reset(i32 noundef %5) #20, !dbg !4173
  %13 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 21, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #20, !dbg !4174
  %14 = tail call i32 @hal_nvic_enable_irq(i32 noundef 21) #20, !dbg !4175
  br label %16, !dbg !4176

15:                                               ; preds = %7
  call void @llvm.dbg.value(metadata i32 undef, metadata !4155, metadata !DIExpression()), !dbg !4158
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !4167
  br label %16, !dbg !4177

16:                                               ; preds = %15, %4, %1, %12
  %17 = phi i32 [ 0, %12 ], [ -1, %1 ], [ -3, %4 ], [ -3, %15 ], !dbg !4158
  ret i32 %17, !dbg !4178
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @hal_gdma_check_valid_channel(i32 noundef %0) unnamed_addr #10 !dbg !4179 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4183, metadata !DIExpression()), !dbg !4185
  call void @llvm.dbg.value(metadata i32 255, metadata !4184, metadata !DIExpression()), !dbg !4185
  %2 = icmp eq i32 %0, 0, !dbg !4186
  %3 = select i1 %2, i32 0, i32 255
  call void @llvm.dbg.value(metadata i32 %3, metadata !4184, metadata !DIExpression()), !dbg !4185
  ret i32 %3, !dbg !4188
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gdma_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4189 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4191, metadata !DIExpression()), !dbg !4195
  %3 = bitcast i32* %2 to i8*, !dbg !4196
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4196
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4193, metadata !DIExpression()), !dbg !4197
  store volatile i32 0, i32* %2, align 4, !dbg !4197
  %4 = tail call fastcc i32 @hal_gdma_check_valid_channel(i32 noundef %0) #21, !dbg !4198
  call void @llvm.dbg.value(metadata i32 %4, metadata !4192, metadata !DIExpression()), !dbg !4195
  %5 = icmp eq i32 %4, 255, !dbg !4199
  br i1 %5, label %23, label %6, !dbg !4201

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4202
  call void @llvm.dbg.value(metadata i32 %7, metadata !4194, metadata !DIExpression()), !dbg !4195
  %8 = tail call i32 @gdma_get_global_status(i32 noundef %4) #20, !dbg !4203
  store volatile i32 %8, i32* %2, align 4, !dbg !4204
  %9 = load volatile i32, i32* %2, align 4, !dbg !4205
  %10 = and i32 %9, 1, !dbg !4207
  %11 = icmp eq i32 %10, 0, !dbg !4207
  br i1 %11, label %13, label %12, !dbg !4208

12:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 139, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_gdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4209
  unreachable, !dbg !4209

13:                                               ; preds = %6
  %14 = load volatile i32, i32* %2, align 4, !dbg !4211
  %15 = and i32 %14, 2, !dbg !4213
  %16 = icmp eq i32 %15, 0, !dbg !4213
  br i1 %16, label %18, label %17, !dbg !4214

17:                                               ; preds = %13
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 150, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_gdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4215
  unreachable, !dbg !4215

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4217
  %19 = getelementptr inbounds [1 x i8], [1 x i8]* @gdma_init_status, i32 0, i32 %0, !dbg !4218
  store volatile i8 0, i8* %19, align 1, !dbg !4218
  %20 = tail call i32 @dma_disable_clock(i32 noundef 0) #20, !dbg !4220
  call void @llvm.dbg.value(metadata i32 %20, metadata !4192, metadata !DIExpression()), !dbg !4195
  %21 = icmp eq i32 %20, 255, !dbg !4221
  %22 = select i1 %21, i32 -3, i32 0, !dbg !4195
  br label %23, !dbg !4195

23:                                               ; preds = %18, %1
  %24 = phi i32 [ -1, %1 ], [ %22, %18 ], !dbg !4195
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4223
  ret i32 %24, !dbg !4223
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gdma_start_polling(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !4224 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4228, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata i32 %1, metadata !4229, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata i32 %2, metadata !4230, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata i32 %3, metadata !4231, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata i32 0, metadata !4234, metadata !DIExpression()), !dbg !4239
  %7 = bitcast i32* %5 to i8*, !dbg !4240
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !4240
  call void @llvm.dbg.value(metadata i32 0, metadata !4235, metadata !DIExpression()), !dbg !4239
  store i32 0, i32* %5, align 4, !dbg !4241
  %8 = bitcast i32* %6 to i8*, !dbg !4242
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8), !dbg !4242
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4237, metadata !DIExpression()), !dbg !4243
  store volatile i32 0, i32* %6, align 4, !dbg !4243
  %9 = tail call fastcc i32 @hal_gdma_check_valid_channel(i32 noundef %0) #21, !dbg !4244
  call void @llvm.dbg.value(metadata i32 %9, metadata !4238, metadata !DIExpression()), !dbg !4239
  %10 = icmp eq i32 %9, 255, !dbg !4245
  %11 = add i32 %3, -262141
  %12 = icmp ult i32 %11, -262140
  %13 = or i1 %12, %10, !dbg !4247
  br i1 %13, label %55, label %14, !dbg !4247

14:                                               ; preds = %4
  %15 = and i32 %1, 3, !dbg !4248
  %16 = icmp eq i32 %15, 0, !dbg !4250
  br i1 %16, label %18, label %17, !dbg !4251

17:                                               ; preds = %14
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 203, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.hal_gdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4252
  unreachable, !dbg !4252

18:                                               ; preds = %14
  %19 = and i32 %2, 3, !dbg !4254
  %20 = icmp eq i32 %19, 0, !dbg !4256
  br i1 %20, label %22, label %21, !dbg !4257

21:                                               ; preds = %18
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 209, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.hal_gdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4258
  unreachable, !dbg !4258

22:                                               ; preds = %18
  %23 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !4260
  br i1 %23, label %24, label %25, !dbg !4262

24:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 216, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.hal_gdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4263
  unreachable, !dbg !4263

25:                                               ; preds = %22
  %26 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %2) #20, !dbg !4265
  br i1 %26, label %27, label %28, !dbg !4267

27:                                               ; preds = %25
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.hal_gdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4268
  unreachable, !dbg !4268

28:                                               ; preds = %25
  %29 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4270
  call void @llvm.dbg.value(metadata i32 %29, metadata !4236, metadata !DIExpression()), !dbg !4239
  %30 = tail call i32 @gdma_get_global_status(i32 noundef %9) #20, !dbg !4271
  store volatile i32 %30, i32* %6, align 4, !dbg !4272
  %31 = load volatile i32, i32* %6, align 4, !dbg !4273
  %32 = and i32 %31, 1, !dbg !4275
  %33 = icmp eq i32 %32, 0, !dbg !4275
  br i1 %33, label %35, label %34, !dbg !4276

34:                                               ; preds = %28
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 234, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.hal_gdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4277
  unreachable, !dbg !4277

35:                                               ; preds = %28
  %36 = load volatile i32, i32* %6, align 4, !dbg !4279
  %37 = and i32 %36, 2, !dbg !4281
  %38 = icmp eq i32 %37, 0, !dbg !4281
  br i1 %38, label %40, label %39, !dbg !4282

39:                                               ; preds = %35
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 245, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.hal_gdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4283
  unreachable, !dbg !4283

40:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %29) #20, !dbg !4285
  call void @llvm.dbg.value(metadata i32 0, metadata !4234, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.value(metadata i32* %5, metadata !4235, metadata !DIExpression(DW_OP_deref)), !dbg !4239
  %41 = call i32 @gdma_calculate_size(i32 noundef %3, i32* noundef nonnull %5) #20, !dbg !4286
  call void @llvm.dbg.value(metadata i32 %41, metadata !4232, metadata !DIExpression()), !dbg !4239
  %42 = load i32, i32* %5, align 4, !dbg !4287
  call void @llvm.dbg.value(metadata i32 %42, metadata !4235, metadata !DIExpression()), !dbg !4239
  %43 = icmp ugt i32 %42, 65535, !dbg !4289
  br i1 %43, label %55, label %44, !dbg !4290

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata i32 12, metadata !4234, metadata !DIExpression()), !dbg !4239
  %45 = or i32 %41, 12, !dbg !4291
  call void @llvm.dbg.value(metadata i32 %45, metadata !4234, metadata !DIExpression()), !dbg !4239
  call void @gdma_set_control(i32 noundef %9, i32 noundef %45, i32 noundef %42) #20, !dbg !4292
  call void @gdma_set_address(i32 noundef %9, i32 noundef %1, i32 noundef %2) #20, !dbg !4293
  call void @gdma_start(i32 noundef %9) #20, !dbg !4294
  %46 = call i32 @gdma_get_global_status(i32 noundef %9) #20, !dbg !4295
  store volatile i32 %46, i32* %6, align 4, !dbg !4296
  %47 = load volatile i32, i32* %6, align 4, !dbg !4297
  %48 = and i32 %47, 1, !dbg !4298
  %49 = icmp eq i32 %48, 0, !dbg !4299
  br i1 %49, label %55, label %50, !dbg !4299

50:                                               ; preds = %44, %50
  %51 = call i32 @gdma_get_global_status(i32 noundef %9) #20, !dbg !4300
  store volatile i32 %51, i32* %6, align 4, !dbg !4302
  %52 = load volatile i32, i32* %6, align 4, !dbg !4297
  %53 = and i32 %52, 1, !dbg !4298
  %54 = icmp eq i32 %53, 0, !dbg !4299
  br i1 %54, label %55, label %50, !dbg !4299, !llvm.loop !4303

55:                                               ; preds = %50, %44, %40, %4
  %56 = phi i32 [ -1, %4 ], [ -3, %40 ], [ 0, %44 ], [ 0, %50 ], !dbg !4239
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8), !dbg !4305
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !4305
  ret i32 %56, !dbg !4305
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gdma_start_interrupt(i32 noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !4306 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4308, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i32 %1, metadata !4309, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i32 %2, metadata !4310, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i32 %3, metadata !4311, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i32 0, metadata !4313, metadata !DIExpression()), !dbg !4318
  %7 = bitcast i32* %5 to i8*, !dbg !4319
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !4319
  call void @llvm.dbg.value(metadata i32 0, metadata !4314, metadata !DIExpression()), !dbg !4318
  store i32 0, i32* %5, align 4, !dbg !4320
  %8 = bitcast i32* %6 to i8*, !dbg !4321
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8), !dbg !4321
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4315, metadata !DIExpression()), !dbg !4322
  store volatile i32 0, i32* %6, align 4, !dbg !4322
  %9 = tail call fastcc i32 @hal_gdma_check_valid_channel(i32 noundef %0) #21, !dbg !4323
  call void @llvm.dbg.value(metadata i32 %9, metadata !4316, metadata !DIExpression()), !dbg !4318
  %10 = icmp eq i32 %9, 255, !dbg !4324
  %11 = add i32 %3, -262141
  %12 = icmp ult i32 %11, -262140
  %13 = or i1 %12, %10, !dbg !4326
  br i1 %13, label %46, label %14, !dbg !4326

14:                                               ; preds = %4
  %15 = and i32 %1, 3, !dbg !4327
  %16 = icmp eq i32 %15, 0, !dbg !4329
  br i1 %16, label %18, label %17, !dbg !4330

17:                                               ; preds = %14
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 323, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.hal_gdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4331
  unreachable, !dbg !4331

18:                                               ; preds = %14
  %19 = and i32 %2, 3, !dbg !4333
  %20 = icmp eq i32 %19, 0, !dbg !4335
  br i1 %20, label %22, label %21, !dbg !4336

21:                                               ; preds = %18
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 329, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.hal_gdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4337
  unreachable, !dbg !4337

22:                                               ; preds = %18
  %23 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !4339
  br i1 %23, label %24, label %25, !dbg !4341

24:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 336, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.hal_gdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4342
  unreachable, !dbg !4342

25:                                               ; preds = %22
  %26 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %2) #20, !dbg !4344
  br i1 %26, label %27, label %28, !dbg !4346

27:                                               ; preds = %25
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 342, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.hal_gdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4347
  unreachable, !dbg !4347

28:                                               ; preds = %25
  %29 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %29, metadata !4317, metadata !DIExpression()), !dbg !4318
  %30 = tail call i32 @gdma_get_global_status(i32 noundef %9) #20, !dbg !4350
  store volatile i32 %30, i32* %6, align 4, !dbg !4351
  %31 = load volatile i32, i32* %6, align 4, !dbg !4352
  %32 = and i32 %31, 1, !dbg !4354
  %33 = icmp eq i32 %32, 0, !dbg !4354
  br i1 %33, label %35, label %34, !dbg !4355

34:                                               ; preds = %28
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 355, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.hal_gdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4356
  unreachable, !dbg !4356

35:                                               ; preds = %28
  %36 = load volatile i32, i32* %6, align 4, !dbg !4358
  %37 = and i32 %36, 2, !dbg !4360
  %38 = icmp eq i32 %37, 0, !dbg !4360
  br i1 %38, label %40, label %39, !dbg !4361

39:                                               ; preds = %35
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 366, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.hal_gdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4362
  unreachable, !dbg !4362

40:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %29) #20, !dbg !4364
  call void @llvm.dbg.value(metadata i32 32768, metadata !4313, metadata !DIExpression()), !dbg !4318
  call void @llvm.dbg.value(metadata i32* %5, metadata !4314, metadata !DIExpression(DW_OP_deref)), !dbg !4318
  %41 = call i32 @gdma_calculate_size(i32 noundef %3, i32* noundef nonnull %5) #20, !dbg !4365
  call void @llvm.dbg.value(metadata i32 %41, metadata !4312, metadata !DIExpression()), !dbg !4318
  %42 = load i32, i32* %5, align 4, !dbg !4366
  call void @llvm.dbg.value(metadata i32 %42, metadata !4314, metadata !DIExpression()), !dbg !4318
  %43 = icmp ugt i32 %42, 65535, !dbg !4368
  br i1 %43, label %46, label %44, !dbg !4369

44:                                               ; preds = %40
  call void @llvm.dbg.value(metadata i32 32780, metadata !4313, metadata !DIExpression()), !dbg !4318
  %45 = or i32 %41, 32780, !dbg !4370
  call void @llvm.dbg.value(metadata i32 %45, metadata !4313, metadata !DIExpression()), !dbg !4318
  call void @gdma_set_control(i32 noundef %9, i32 noundef %45, i32 noundef %42) #20, !dbg !4371
  call void @gdma_set_address(i32 noundef %9, i32 noundef %1, i32 noundef %2) #20, !dbg !4372
  call void @gdma_start(i32 noundef %9) #20, !dbg !4373
  br label %46, !dbg !4374

46:                                               ; preds = %40, %4, %44
  %47 = phi i32 [ 0, %44 ], [ -1, %4 ], [ -3, %40 ], !dbg !4318
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8), !dbg !4375
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !4375
  ret i32 %47, !dbg !4375
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gdma_stop(i32 noundef %0) local_unnamed_addr #0 !dbg !4376 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4378, metadata !DIExpression()), !dbg !4380
  %2 = tail call fastcc i32 @hal_gdma_check_valid_channel(i32 noundef %0) #21, !dbg !4381
  call void @llvm.dbg.value(metadata i32 %2, metadata !4379, metadata !DIExpression()), !dbg !4380
  %3 = icmp eq i32 %2, 255, !dbg !4382
  br i1 %3, label %5, label %4, !dbg !4384

4:                                                ; preds = %1
  tail call void @gdma_stop(i32 noundef %2) #20, !dbg !4385
  br label %5, !dbg !4386

5:                                                ; preds = %1, %4
  %6 = phi i32 [ 0, %4 ], [ -1, %1 ], !dbg !4380
  ret i32 %6, !dbg !4387
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !4388 {
  %4 = alloca i8*, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4392, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !4393, metadata !DIExpression()), !dbg !4396
  call void @llvm.dbg.value(metadata i8* %2, metadata !4394, metadata !DIExpression()), !dbg !4396
  store i8* %2, i8** %4, align 4
  %5 = tail call fastcc i32 @hal_gdma_check_valid_channel(i32 noundef %0) #21, !dbg !4397
  call void @llvm.dbg.value(metadata i32 %5, metadata !4395, metadata !DIExpression()), !dbg !4396
  %6 = icmp eq i32 %5, 255, !dbg !4398
  br i1 %6, label %9, label %7, !dbg !4400

7:                                                ; preds = %3
  %8 = bitcast i8** %4 to i8*, !dbg !4401
  call void @llvm.dbg.value(metadata i8** %4, metadata !4394, metadata !DIExpression(DW_OP_deref)), !dbg !4396
  call void @gdma_register_callback(i32 noundef %5, void (i32, i8*)* noundef %1, i8* noundef nonnull %8) #20, !dbg !4402
  br label %9, !dbg !4403

9:                                                ; preds = %3, %7
  %10 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !4396
  ret i32 %10, !dbg !4404
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gdma_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !4405 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4411, metadata !DIExpression()), !dbg !4415
  call void @llvm.dbg.value(metadata i32* %1, metadata !4412, metadata !DIExpression()), !dbg !4415
  %4 = bitcast i32* %3 to i8*, !dbg !4416
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4416
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4413, metadata !DIExpression()), !dbg !4417
  store volatile i32 0, i32* %3, align 4, !dbg !4417
  %5 = tail call fastcc i32 @hal_gdma_check_valid_channel(i32 noundef %0) #21, !dbg !4418
  call void @llvm.dbg.value(metadata i32 %5, metadata !4414, metadata !DIExpression()), !dbg !4415
  %6 = icmp eq i32 %5, 255, !dbg !4419
  br i1 %6, label %11, label %7, !dbg !4421

7:                                                ; preds = %2
  %8 = tail call i32 @gdma_get_global_status(i32 noundef %5) #20, !dbg !4422
  store volatile i32 %8, i32* %3, align 4, !dbg !4423
  %9 = load volatile i32, i32* %3, align 4, !dbg !4424
  %10 = and i32 %9, 1, !dbg !4426
  store i32 %10, i32* %1, align 4, !dbg !4427
  br label %11, !dbg !4428

11:                                               ; preds = %2, %7
  %12 = phi i32 [ 0, %7 ], [ -1, %2 ], !dbg !4415
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4429
  ret i32 %12, !dbg !4429
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_reset(i32 noundef %0) local_unnamed_addr #2 !dbg !4430 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4434, metadata !DIExpression()), !dbg !4435
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4436
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4436
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 5, !dbg !4437
  store volatile i32 0, i32* %4, align 4, !dbg !4438
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4439
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 6, !dbg !4440
  store volatile i32 0, i32* %6, align 4, !dbg !4441
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4442
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 7, !dbg !4443
  store volatile i32 0, i32* %8, align 4, !dbg !4444
  %9 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4445
  %10 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %9, i32 0, i32 0, !dbg !4446
  store volatile i32 0, i32* %10, align 4, !dbg !4447
  %11 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4448
  %12 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %11, i32 0, i32 1, !dbg !4449
  store volatile i32 0, i32* %12, align 4, !dbg !4450
  %13 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4451
  %14 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %13, i32 0, i32 8, !dbg !4452
  store volatile i32 32768, i32* %14, align 4, !dbg !4453
  ret void, !dbg !4454
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gdma_get_global_status(i32 noundef %0) local_unnamed_addr #11 !dbg !4455 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4457, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.value(metadata i32 0, metadata !4458, metadata !DIExpression()), !dbg !4459
  %2 = getelementptr inbounds [1 x %struct.anon*], [1 x %struct.anon*]* @gdma_global, i32 0, i32 %0, !dbg !4460
  %3 = load %struct.anon*, %struct.anon** %2, align 4, !dbg !4460
  %4 = getelementptr inbounds %struct.anon, %struct.anon* %3, i32 0, i32 0, !dbg !4461
  %5 = load volatile i32, i32* %4, align 4, !dbg !4461
  call void @llvm.dbg.value(metadata i32 %5, metadata !4458, metadata !DIExpression()), !dbg !4459
  ret i32 %5, !dbg !4462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @gdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !4463 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4467, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !4468, metadata !DIExpression()), !dbg !4470
  call void @llvm.dbg.value(metadata i8* %2, metadata !4469, metadata !DIExpression()), !dbg !4470
  %4 = getelementptr inbounds [1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 %0, i32 0, !dbg !4471
  %5 = load void (i32, i8*)*, void (i32, i8*)** %4, align 4, !dbg !4471
  %6 = icmp eq void (i32, i8*)* %5, null, !dbg !4473
  br i1 %6, label %7, label %9, !dbg !4474

7:                                                ; preds = %3
  store void (i32, i8*)* %1, void (i32, i8*)** %4, align 4, !dbg !4475
  %8 = getelementptr inbounds [1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 %0, i32 1, !dbg !4477
  store i8* %2, i8** %8, align 4, !dbg !4478
  br label %9, !dbg !4479

9:                                                ; preds = %7, %3
  ret void, !dbg !4480
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !4481 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4483, metadata !DIExpression()), !dbg !4484
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4485
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4485
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 6, !dbg !4486
  store volatile i32 0, i32* %4, align 4, !dbg !4487
  ret void, !dbg !4488
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_start(i32 noundef %0) local_unnamed_addr #2 !dbg !4489 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4491, metadata !DIExpression()), !dbg !4492
  %2 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4493
  %3 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %2, align 4, !dbg !4493
  %4 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %3, i32 0, i32 6, !dbg !4494
  store volatile i32 32768, i32* %4, align 4, !dbg !4495
  ret void, !dbg !4496
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_set_control(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !4497 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4501, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i32 %1, metadata !4502, metadata !DIExpression()), !dbg !4504
  call void @llvm.dbg.value(metadata i32 %2, metadata !4503, metadata !DIExpression()), !dbg !4504
  %4 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4505
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4505
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 5, !dbg !4506
  store volatile i32 %1, i32* %6, align 4, !dbg !4507
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4508
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 4, !dbg !4509
  store volatile i32 %2, i32* %8, align 4, !dbg !4510
  ret void, !dbg !4511
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gdma_set_address(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !4512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4514, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %1, metadata !4515, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.value(metadata i32 %2, metadata !4516, metadata !DIExpression()), !dbg !4517
  %4 = getelementptr inbounds [1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 %0, !dbg !4518
  %5 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4518
  %6 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %5, i32 0, i32 0, !dbg !4519
  store volatile i32 %2, i32* %6, align 4, !dbg !4520
  %7 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** %4, align 4, !dbg !4521
  %8 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %7, i32 0, i32 1, !dbg !4522
  store volatile i32 %1, i32* %8, align 4, !dbg !4523
  ret void, !dbg !4524
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @dma_enable_clock(i32 noundef %0) local_unnamed_addr #0 !dbg !4525 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4530, metadata !DIExpression()), !dbg !4534
  call void @llvm.dbg.value(metadata i32 255, metadata !4533, metadata !DIExpression()), !dbg !4534
  %2 = icmp eq i32 %0, 0, !dbg !4535
  br i1 %2, label %3, label %9, !dbg !4537

3:                                                ; preds = %1
  %4 = tail call i32 @hal_clock_enable(i32 noundef 33) #20, !dbg !4538
  call void @llvm.dbg.value(metadata i32 %4, metadata !4531, metadata !DIExpression()), !dbg !4534
  %5 = icmp eq i32 %4, 0, !dbg !4540
  call void @llvm.dbg.value(metadata i32 undef, metadata !4533, metadata !DIExpression()), !dbg !4534
  %6 = tail call i32 @hal_clock_enable(i32 noundef 136) #20, !dbg !4542
  call void @llvm.dbg.value(metadata i32 %6, metadata !4531, metadata !DIExpression()), !dbg !4534
  %7 = icmp eq i32 %6, 0, !dbg !4543
  %8 = select i1 %7, i1 true, i1 %5, !dbg !4545
  br label %12, !dbg !4545

9:                                                ; preds = %1
  %10 = tail call i32 @hal_clock_enable(i32 noundef 44) #20, !dbg !4546
  call void @llvm.dbg.value(metadata i32 %10, metadata !4531, metadata !DIExpression()), !dbg !4534
  %11 = icmp eq i32 %10, 0, !dbg !4548
  br label %12, !dbg !4550

12:                                               ; preds = %3, %9
  %13 = phi i1 [ %8, %3 ], [ %11, %9 ]
  %14 = select i1 %13, i32 0, i32 255, !dbg !4551
  call void @llvm.dbg.value(metadata i32 %14, metadata !4533, metadata !DIExpression()), !dbg !4534
  ret i32 %14, !dbg !4552
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @dma_disable_clock(i32 noundef %0) local_unnamed_addr #0 !dbg !4553 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4555, metadata !DIExpression()), !dbg !4558
  call void @llvm.dbg.value(metadata i32 255, metadata !4556, metadata !DIExpression()), !dbg !4558
  %2 = icmp eq i32 %0, 0, !dbg !4559
  br i1 %2, label %3, label %9, !dbg !4561

3:                                                ; preds = %1
  %4 = tail call i32 @hal_clock_disable(i32 noundef 33) #20, !dbg !4562
  call void @llvm.dbg.value(metadata i32 %4, metadata !4557, metadata !DIExpression()), !dbg !4558
  %5 = icmp eq i32 %4, 0, !dbg !4564
  call void @llvm.dbg.value(metadata i32 undef, metadata !4556, metadata !DIExpression()), !dbg !4558
  %6 = tail call i32 @hal_clock_disable(i32 noundef 136) #20, !dbg !4566
  call void @llvm.dbg.value(metadata i32 %6, metadata !4557, metadata !DIExpression()), !dbg !4558
  %7 = icmp eq i32 %6, 0, !dbg !4567
  %8 = select i1 %7, i1 true, i1 %5, !dbg !4569
  br label %12, !dbg !4569

9:                                                ; preds = %1
  %10 = tail call i32 @hal_clock_disable(i32 noundef 44) #20, !dbg !4570
  call void @llvm.dbg.value(metadata i32 %10, metadata !4557, metadata !DIExpression()), !dbg !4558
  %11 = icmp eq i32 %10, 0, !dbg !4572
  br label %12, !dbg !4574

12:                                               ; preds = %3, %9
  %13 = phi i1 [ %8, %3 ], [ %11, %9 ]
  %14 = select i1 %13, i32 0, i32 255, !dbg !4575
  call void @llvm.dbg.value(metadata i32 %14, metadata !4556, metadata !DIExpression()), !dbg !4558
  ret i32 %14, !dbg !4576
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_init(i32 noundef %0) local_unnamed_addr #0 !dbg !4577 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4583, metadata !DIExpression()), !dbg !4588
  call void @llvm.dbg.value(metadata i32 0, metadata !4584, metadata !DIExpression()), !dbg !4588
  %2 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4589
  call void @llvm.dbg.value(metadata i32 %2, metadata !4584, metadata !DIExpression()), !dbg !4588
  %3 = icmp eq i32 %2, 255, !dbg !4590
  br i1 %3, label %32, label %4, !dbg !4592

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4593
  call void @llvm.dbg.value(metadata i32 %5, metadata !4586, metadata !DIExpression()), !dbg !4594
  %6 = getelementptr inbounds [7 x i8], [7 x i8]* @pdma_init_status, i32 0, i32 %0, !dbg !4595
  %7 = load volatile i8, i8* %6, align 1, !dbg !4595
  %8 = icmp eq i8 %7, 1, !dbg !4595
  br i1 %8, label %9, label %10, !dbg !4593

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.pdma_init, i32 0, i32 0), i32 noundef 291, i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.55, i32 0, i32 0), i32 noundef %0) #20, !dbg !4597
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 291, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.pdma_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4597
  unreachable, !dbg !4597

10:                                               ; preds = %4
  store volatile i8 1, i8* %6, align 1, !dbg !4599
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !4593
  %11 = tail call i32 @dma_enable_clock(i32 noundef 0) #21, !dbg !4601
  call void @llvm.dbg.value(metadata i32 %11, metadata !4585, metadata !DIExpression()), !dbg !4588
  %12 = icmp eq i32 %11, 255, !dbg !4602
  br i1 %12, label %32, label %13, !dbg !4604

13:                                               ; preds = %10
  %14 = tail call i32 @dma_enable_clock(i32 noundef 1) #21, !dbg !4605
  call void @llvm.dbg.value(metadata i32 %14, metadata !4585, metadata !DIExpression()), !dbg !4588
  %15 = icmp eq i32 %14, 255, !dbg !4606
  br i1 %15, label %32, label %16, !dbg !4608

16:                                               ; preds = %13
  %17 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %2, !dbg !4609
  %18 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4609
  %19 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !4610
  store volatile i32 0, i32* %19, align 4, !dbg !4611
  %20 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4612
  %21 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %20, i32 0, i32 2, !dbg !4613
  store volatile i32 0, i32* %21, align 4, !dbg !4614
  %22 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4615
  %23 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %22, i32 0, i32 4, !dbg !4616
  store volatile i32 0, i32* %23, align 4, !dbg !4617
  %24 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4618
  %25 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %24, i32 0, i32 5, !dbg !4619
  store volatile i32 0, i32* %25, align 4, !dbg !4620
  %26 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %17, align 4, !dbg !4621
  %27 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %26, i32 0, i32 9, !dbg !4622
  store volatile i32 0, i32* %27, align 4, !dbg !4623
  %28 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 21, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #20, !dbg !4624
  %29 = tail call i32 @hal_nvic_enable_irq(i32 noundef 21) #20, !dbg !4625
  %30 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 40, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #20, !dbg !4626
  %31 = tail call i32 @hal_nvic_enable_irq(i32 noundef 40) #20, !dbg !4627
  br label %32, !dbg !4628

32:                                               ; preds = %13, %10, %1, %16
  %33 = phi i32 [ 0, %16 ], [ -2, %1 ], [ -3, %10 ], [ -3, %13 ], !dbg !4588
  ret i32 %33, !dbg !4629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @pdma_check_valid_channel(i32 noundef %0) unnamed_addr #10 !dbg !4630 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4634, metadata !DIExpression()), !dbg !4636
  call void @llvm.dbg.value(metadata i32 0, metadata !4635, metadata !DIExpression()), !dbg !4636
  %2 = add i32 %0, -1, !dbg !4637
  call void @llvm.dbg.value(metadata i32 %2, metadata !4635, metadata !DIExpression()), !dbg !4636
  %3 = icmp ugt i32 %2, 5, !dbg !4638
  %4 = select i1 %3, i32 255, i32 %2, !dbg !4640
  ret i32 %4, !dbg !4641
}

; Function Attrs: noinline nounwind optsize
define dso_local void @pd_domain_dma_interrupt_hander(i32 %0) #0 !dbg !553 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !559, metadata !DIExpression()), !dbg !4642
  %3 = bitcast i32* %2 to i8*, !dbg !4643
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4643
  call void @llvm.dbg.declare(metadata i32* %2, metadata !560, metadata !DIExpression()), !dbg !4644
  store volatile i32 0, i32* %2, align 4, !dbg !4644
  %4 = load %struct.anon*, %struct.anon** getelementptr inbounds ([1 x %struct.anon*], [1 x %struct.anon*]* @gdma_global, i32 0, i32 0), align 4, !dbg !4645
  %5 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0, !dbg !4646
  %6 = load volatile i32, i32* %5, align 4, !dbg !4646
  store volatile i32 %6, i32* %2, align 4, !dbg !4647
  %7 = load volatile i32, i32* %2, align 4, !dbg !4648
  %8 = and i32 %7, 2, !dbg !4650
  %9 = icmp eq i32 %8, 0, !dbg !4650
  br i1 %9, label %18, label %10, !dbg !4651

10:                                               ; preds = %1
  %11 = load %struct.GDMA_REGISTER_T*, %struct.GDMA_REGISTER_T** getelementptr inbounds ([1 x %struct.GDMA_REGISTER_T*], [1 x %struct.GDMA_REGISTER_T*]* @gdma, i32 0, i32 0), align 4, !dbg !4652
  %12 = getelementptr inbounds %struct.GDMA_REGISTER_T, %struct.GDMA_REGISTER_T* %11, i32 0, i32 8, !dbg !4654
  store volatile i32 32768, i32* %12, align 4, !dbg !4655
  %13 = load void (i32, i8*)*, void (i32, i8*)** getelementptr inbounds ([1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 0, i32 0), align 4, !dbg !4656
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !561, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i8* undef, metadata !574, metadata !DIExpression()), !dbg !4642
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4657
  br i1 %14, label %17, label %15, !dbg !4659

15:                                               ; preds = %10
  %16 = load i8*, i8** getelementptr inbounds ([1 x %struct.gdma_user_callback_t], [1 x %struct.gdma_user_callback_t]* @g_gdma_callback, i32 0, i32 0, i32 1), align 4, !dbg !4660
  call void @llvm.dbg.value(metadata i8* %16, metadata !574, metadata !DIExpression()), !dbg !4642
  tail call void %13(i32 noundef 0, i8* noundef %16) #20, !dbg !4661
  br label %18, !dbg !4663

17:                                               ; preds = %10
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 1138, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4664
  unreachable, !dbg !4664

18:                                               ; preds = %15, %1
  store i32 0, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4666
  br label %20, !dbg !4668

19:                                               ; preds = %50
  store i32 0, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4669
  br label %54, !dbg !4671

20:                                               ; preds = %18, %50
  %21 = phi i32 [ 0, %18 ], [ %52, %50 ]
  %22 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %21, !dbg !4672
  %23 = load %struct.anon*, %struct.anon** %22, align 4, !dbg !4672
  %24 = getelementptr inbounds %struct.anon, %struct.anon* %23, i32 0, i32 0, !dbg !4675
  %25 = load volatile i32, i32* %24, align 4, !dbg !4675
  store volatile i32 %25, i32* %2, align 4, !dbg !4676
  %26 = load volatile i32, i32* %2, align 4, !dbg !4677
  %27 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %21, !dbg !4679
  %28 = load i8, i8* %27, align 1, !dbg !4679
  %29 = zext i8 %28 to i32, !dbg !4679
  %30 = shl i32 2, %29, !dbg !4680
  %31 = and i32 %30, %26, !dbg !4681
  %32 = icmp eq i32 %31, 0, !dbg !4681
  br i1 %32, label %50, label %33, !dbg !4682

33:                                               ; preds = %20
  %34 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %21, !dbg !4683
  %35 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %34, align 4, !dbg !4683
  %36 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %35, i32 0, i32 6, !dbg !4686
  store volatile i32 32768, i32* %36, align 4, !dbg !4687
  %37 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %21, i32 0, !dbg !4688
  %38 = load void (i32, i8*)*, void (i32, i8*)** %37, align 4, !dbg !4688
  call void @llvm.dbg.value(metadata void (i32, i8*)* %38, metadata !562, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i8* undef, metadata !574, metadata !DIExpression()), !dbg !4642
  %39 = icmp eq void (i32, i8*)* %38, null, !dbg !4689
  br i1 %39, label %49, label %40, !dbg !4691

40:                                               ; preds = %33
  %41 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %21, i32 1, !dbg !4692
  %42 = load i8*, i8** %41, align 4, !dbg !4692
  call void @llvm.dbg.value(metadata i8* %42, metadata !574, metadata !DIExpression()), !dbg !4642
  tail call void %38(i32 noundef 0, i8* noundef %42) #20, !dbg !4693
  %43 = load i32, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4695
  %44 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %43, !dbg !4696
  %45 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %44, align 4, !dbg !4696
  %46 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %45, i32 0, i32 4, !dbg !4697
  %47 = load volatile i32, i32* %46, align 4, !dbg !4698
  %48 = and i32 %47, -32769, !dbg !4698
  store volatile i32 %48, i32* %46, align 4, !dbg !4698
  br label %50, !dbg !4699

49:                                               ; preds = %33
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 1161, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4700
  unreachable, !dbg !4700

50:                                               ; preds = %20, %40
  %51 = phi i32 [ %21, %20 ], [ %43, %40 ], !dbg !4702
  %52 = add i32 %51, 1, !dbg !4702
  store i32 %52, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4666
  %53 = icmp ult i32 %52, 6, !dbg !4703
  br i1 %53, label %20, label %19, !dbg !4668, !llvm.loop !4704

54:                                               ; preds = %19, %79
  %55 = phi i32 [ 0, %19 ], [ %81, %79 ]
  %56 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %55, !dbg !4706
  %57 = load %struct.anon*, %struct.anon** %56, align 4, !dbg !4706
  %58 = getelementptr inbounds %struct.anon, %struct.anon* %57, i32 0, i32 0, !dbg !4709
  %59 = load volatile i32, i32* %58, align 4, !dbg !4709
  store volatile i32 %59, i32* %2, align 4, !dbg !4710
  %60 = load volatile i32, i32* %2, align 4, !dbg !4711
  %61 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %55, !dbg !4713
  %62 = load i8, i8* %61, align 1, !dbg !4713
  %63 = zext i8 %62 to i32, !dbg !4713
  %64 = shl i32 2, %63, !dbg !4714
  %65 = and i32 %64, %60, !dbg !4715
  %66 = icmp eq i32 %65, 0, !dbg !4715
  br i1 %66, label %79, label %67, !dbg !4716

67:                                               ; preds = %54
  %68 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %55, !dbg !4717
  %69 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %68, align 4, !dbg !4717
  %70 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %69, i32 0, i32 4, !dbg !4720
  store volatile i32 32768, i32* %70, align 4, !dbg !4721
  %71 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %55, i32 0, !dbg !4722
  %72 = load void (i32, i8*)*, void (i32, i8*)** %71, align 4, !dbg !4722
  call void @llvm.dbg.value(metadata void (i32, i8*)* %72, metadata !568, metadata !DIExpression()), !dbg !4642
  call void @llvm.dbg.value(metadata i8* undef, metadata !574, metadata !DIExpression()), !dbg !4642
  %73 = icmp eq void (i32, i8*)* %72, null, !dbg !4723
  br i1 %73, label %78, label %74, !dbg !4725

74:                                               ; preds = %67
  %75 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %55, i32 1, !dbg !4726
  %76 = load i8*, i8** %75, align 4, !dbg !4726
  call void @llvm.dbg.value(metadata i8* %76, metadata !574, metadata !DIExpression()), !dbg !4642
  tail call void %72(i32 noundef 0, i8* noundef %76) #20, !dbg !4727
  %77 = load i32, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4729
  br label %79, !dbg !4730

78:                                               ; preds = %67
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 1185, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.pd_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4731
  unreachable, !dbg !4731

79:                                               ; preds = %54, %74
  %80 = phi i32 [ %55, %54 ], [ %77, %74 ], !dbg !4729
  %81 = add i32 %80, 1, !dbg !4729
  store i32 %81, i32* @pd_domain_dma_interrupt_hander.count, align 4, !dbg !4669
  %82 = icmp ult i32 %81, 8, !dbg !4733
  br i1 %82, label %54, label %83, !dbg !4671, !llvm.loop !4734

83:                                               ; preds = %79
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4736
  ret void, !dbg !4736
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4737 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4739, metadata !DIExpression()), !dbg !4746
  call void @llvm.dbg.value(metadata i32 0, metadata !4740, metadata !DIExpression()), !dbg !4746
  %3 = bitcast i32* %2 to i8*, !dbg !4747
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !4747
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4743, metadata !DIExpression()), !dbg !4748
  store volatile i32 0, i32* %2, align 4, !dbg !4748
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %4, metadata !4740, metadata !DIExpression()), !dbg !4746
  %5 = icmp eq i32 %4, 255, !dbg !4750
  br i1 %5, label %39, label %6, !dbg !4752

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4753
  call void @llvm.dbg.value(metadata i32 %7, metadata !4742, metadata !DIExpression()), !dbg !4746
  %8 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %4, !dbg !4754
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !4754
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !4755
  %11 = load volatile i32, i32* %10, align 4, !dbg !4755
  store volatile i32 %11, i32* %2, align 4, !dbg !4756
  %12 = load volatile i32, i32* %2, align 4, !dbg !4757
  %13 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %4, !dbg !4759
  %14 = load i8, i8* %13, align 1, !dbg !4759
  %15 = zext i8 %14 to i32, !dbg !4759
  %16 = shl i32 2, %15, !dbg !4760
  %17 = and i32 %16, %12, !dbg !4761
  %18 = icmp eq i32 %17, 0, !dbg !4761
  br i1 %18, label %20, label %19, !dbg !4762

19:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 341, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4763
  unreachable, !dbg !4763

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !4765
  %22 = shl nuw i32 1, %15, !dbg !4767
  %23 = and i32 %21, %22, !dbg !4768
  %24 = icmp eq i32 %23, 0, !dbg !4768
  br i1 %24, label %26, label %25, !dbg !4769

25:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 349, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4770
  unreachable, !dbg !4770

26:                                               ; preds = %20
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4772
  %27 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4773
  call void @llvm.dbg.value(metadata i32 %27, metadata !4744, metadata !DIExpression()), !dbg !4774
  %28 = getelementptr inbounds [7 x i8], [7 x i8]* @pdma_init_status, i32 0, i32 %0, !dbg !4775
  %29 = load volatile i8, i8* %28, align 1, !dbg !4775
  %30 = icmp eq i8 %29, 0, !dbg !4775
  br i1 %30, label %31, label %32, !dbg !4773

31:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i32 noundef 356, i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3, i32 0, i32 0), i32 noundef %0) #20, !dbg !4777
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 356, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.pdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4777
  unreachable, !dbg !4777

32:                                               ; preds = %26
  store volatile i8 0, i8* %28, align 1, !dbg !4779
  tail call void @restore_interrupt_mask(i32 noundef %27) #20, !dbg !4773
  %33 = tail call i32 @dma_disable_clock(i32 noundef 0) #21, !dbg !4781
  call void @llvm.dbg.value(metadata i32 %33, metadata !4741, metadata !DIExpression()), !dbg !4746
  %34 = icmp eq i32 %33, 255, !dbg !4782
  br i1 %34, label %39, label %35, !dbg !4784

35:                                               ; preds = %32
  %36 = tail call i32 @dma_disable_clock(i32 noundef 1) #21, !dbg !4785
  call void @llvm.dbg.value(metadata i32 %36, metadata !4741, metadata !DIExpression()), !dbg !4746
  %37 = icmp eq i32 %36, 255, !dbg !4786
  %38 = select i1 %37, i32 -3, i32 0, !dbg !4746
  br label %39, !dbg !4746

39:                                               ; preds = %35, %32, %1
  %40 = phi i32 [ -2, %1 ], [ -3, %32 ], [ %38, %35 ], !dbg !4746
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !4788
  ret i32 %40, !dbg !4788
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pdma_set_ring_buffer(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #2 !dbg !4789 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4793, metadata !DIExpression()), !dbg !4797
  call void @llvm.dbg.value(metadata i32 %1, metadata !4794, metadata !DIExpression()), !dbg !4797
  call void @llvm.dbg.value(metadata i32 %2, metadata !4795, metadata !DIExpression()), !dbg !4797
  call void @llvm.dbg.value(metadata i32 0, metadata !4796, metadata !DIExpression()), !dbg !4797
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4798
  call void @llvm.dbg.value(metadata i32 %4, metadata !4796, metadata !DIExpression()), !dbg !4797
  %5 = icmp eq i32 %4, 255, !dbg !4799
  br i1 %5, label %14, label %6, !dbg !4801

6:                                                ; preds = %3
  %7 = icmp ugt i32 %1, 65535, !dbg !4802
  br i1 %7, label %14, label %8, !dbg !4804

8:                                                ; preds = %6
  %9 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %4, !dbg !4805
  %10 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %9, align 4, !dbg !4805
  %11 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %10, i32 0, i32 0, !dbg !4806
  store volatile i32 %1, i32* %11, align 4, !dbg !4807
  %12 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %9, align 4, !dbg !4808
  %13 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %12, i32 0, i32 1, !dbg !4809
  store volatile i32 %2, i32* %13, align 4, !dbg !4810
  br label %14, !dbg !4811

14:                                               ; preds = %6, %3, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %3 ], [ -1, %6 ], !dbg !4797
  ret i32 %15, !dbg !4812
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_configure(i32 noundef %0, %struct.pdma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4813 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4827, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata %struct.pdma_config_t* %1, metadata !4828, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata i32 0, metadata !4829, metadata !DIExpression()), !dbg !4833
  call void @llvm.dbg.value(metadata i32 0, metadata !4831, metadata !DIExpression()), !dbg !4833
  %4 = bitcast i32* %3 to i8*, !dbg !4834
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4834
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4832, metadata !DIExpression()), !dbg !4835
  store volatile i32 0, i32* %3, align 4, !dbg !4835
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4836
  call void @llvm.dbg.value(metadata i32 %5, metadata !4829, metadata !DIExpression()), !dbg !4833
  %6 = icmp eq i32 %5, 255, !dbg !4837
  br i1 %6, label %64, label %7, !dbg !4839

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 0, !dbg !4840
  %9 = load i8, i8* %8, align 4, !dbg !4840, !range !2834
  %10 = icmp eq i8 %9, 0, !dbg !4840
  %11 = select i1 %10, i32 0, i32 512, !dbg !4842
  call void @llvm.dbg.value(metadata i32 %11, metadata !4831, metadata !DIExpression()), !dbg !4833
  %12 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4843
  call void @llvm.dbg.value(metadata i32 %12, metadata !4830, metadata !DIExpression()), !dbg !4833
  %13 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %5, !dbg !4844
  %14 = load %struct.anon*, %struct.anon** %13, align 4, !dbg !4844
  %15 = getelementptr inbounds %struct.anon, %struct.anon* %14, i32 0, i32 0, !dbg !4845
  %16 = load volatile i32, i32* %15, align 4, !dbg !4845
  store volatile i32 %16, i32* %3, align 4, !dbg !4846
  %17 = load volatile i32, i32* %3, align 4, !dbg !4847
  %18 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %5, !dbg !4849
  %19 = load i8, i8* %18, align 1, !dbg !4849
  %20 = zext i8 %19 to i32, !dbg !4849
  %21 = shl nuw i32 1, %20, !dbg !4850
  %22 = and i32 %21, %17, !dbg !4851
  %23 = icmp eq i32 %22, 0, !dbg !4851
  br i1 %23, label %25, label %24, !dbg !4852

24:                                               ; preds = %7
  tail call void @restore_interrupt_mask(i32 noundef %12) #20, !dbg !4853
  br label %64, !dbg !4855

25:                                               ; preds = %7
  %26 = load volatile i32, i32* %3, align 4, !dbg !4856
  %27 = shl i32 2, %20, !dbg !4858
  %28 = and i32 %26, %27, !dbg !4859
  %29 = icmp eq i32 %28, 0, !dbg !4859
  tail call void @restore_interrupt_mask(i32 noundef %12) #20, !dbg !4833
  br i1 %29, label %30, label %64, !dbg !4860

30:                                               ; preds = %25
  %31 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %5, !dbg !4861
  %32 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !4861
  %33 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %32, i32 0, i32 4, !dbg !4862
  %34 = load volatile i32, i32* %33, align 4, !dbg !4863
  %35 = and i32 %34, -32769, !dbg !4863
  store volatile i32 %35, i32* %33, align 4, !dbg !4863
  %36 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 3, !dbg !4864
  %37 = load i32, i32* %36, align 4, !dbg !4864
  %38 = icmp ult i32 %37, 4, !dbg !4865
  br i1 %38, label %39, label %64, !dbg !4865

39:                                               ; preds = %30
  %40 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table.pdma_configure, i32 0, i32 %37, !dbg !4865
  %41 = load i32, i32* %40, align 4, !dbg !4865
  %42 = or i32 %11, %41, !dbg !4866
  call void @llvm.dbg.value(metadata i32 %42, metadata !4831, metadata !DIExpression()), !dbg !4833
  %43 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 1, !dbg !4868
  %44 = load i32, i32* %43, align 4, !dbg !4868
  switch i32 %44, label %64 [
    i32 0, label %49
    i32 1, label %45
    i32 2, label %47
  ], !dbg !4869

45:                                               ; preds = %39
  %46 = or i32 %42, 1, !dbg !4870
  call void @llvm.dbg.value(metadata i32 %46, metadata !4831, metadata !DIExpression()), !dbg !4833
  br label %49, !dbg !4872

47:                                               ; preds = %39
  %48 = or i32 %42, 2, !dbg !4873
  call void @llvm.dbg.value(metadata i32 %48, metadata !4831, metadata !DIExpression()), !dbg !4833
  br label %49, !dbg !4874

49:                                               ; preds = %39, %47, %45
  %50 = phi i32 [ %48, %47 ], [ %46, %45 ], [ %42, %39 ], !dbg !4875
  call void @llvm.dbg.value(metadata i32 %50, metadata !4831, metadata !DIExpression()), !dbg !4833
  %51 = load i8, i8* %8, align 4, !dbg !4876, !range !2834
  %52 = icmp eq i8 %51, 0, !dbg !4876
  %53 = icmp eq i32 %44, 0, !dbg !4878
  %54 = or i32 %50, 32, !dbg !4878
  %55 = select i1 %53, i32 %54, i32 %50, !dbg !4878
  %56 = select i1 %52, i32 %50, i32 %55, !dbg !4878
  call void @llvm.dbg.value(metadata i32 %56, metadata !4831, metadata !DIExpression()), !dbg !4833
  %57 = or i32 %56, 16, !dbg !4879
  call void @llvm.dbg.value(metadata i32 %57, metadata !4831, metadata !DIExpression()), !dbg !4833
  %58 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !4880
  %59 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %58, i32 0, i32 3, !dbg !4881
  store volatile i32 %57, i32* %59, align 4, !dbg !4882
  %60 = getelementptr inbounds %struct.pdma_config_t, %struct.pdma_config_t* %1, i32 0, i32 2, !dbg !4883
  %61 = load i32, i32* %60, align 4, !dbg !4883
  %62 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %31, align 4, !dbg !4884
  %63 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %62, i32 0, i32 2, !dbg !4885
  store volatile i32 %61, i32* %63, align 4, !dbg !4886
  br label %64, !dbg !4887

64:                                               ; preds = %30, %25, %39, %2, %49, %24
  %65 = phi i32 [ -3, %24 ], [ 0, %49 ], [ -2, %2 ], [ -3, %30 ], [ -3, %39 ], [ -3, %25 ], !dbg !4833
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4888
  ret i32 %65, !dbg !4888
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_start_polling(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4889 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4893, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.value(metadata i32 %1, metadata !4894, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.value(metadata i32 0, metadata !4895, metadata !DIExpression()), !dbg !4898
  %4 = bitcast i32* %3 to i8*, !dbg !4899
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4899
  call void @llvm.dbg.value(metadata i32 0, metadata !4896, metadata !DIExpression()), !dbg !4898
  store i32 0, i32* %3, align 4, !dbg !4900
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4901
  call void @llvm.dbg.value(metadata i32 %5, metadata !4895, metadata !DIExpression()), !dbg !4898
  %6 = icmp eq i32 %5, 255, !dbg !4902
  br i1 %6, label %33, label %7, !dbg !4904

7:                                                ; preds = %2
  %8 = and i32 %1, 3, !dbg !4905
  %9 = icmp eq i32 %8, 0, !dbg !4907
  br i1 %9, label %11, label %10, !dbg !4908

10:                                               ; preds = %7
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 527, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.pdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4909
  unreachable, !dbg !4909

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !4911
  br i1 %12, label %13, label %14, !dbg !4913

13:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 533, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.pdma_start_polling, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4914
  unreachable, !dbg !4914

14:                                               ; preds = %11
  %15 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %5, !dbg !4916
  %16 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !4916
  %17 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %16, i32 0, i32 9, !dbg !4917
  store volatile i32 %1, i32* %17, align 4, !dbg !4918
  %18 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !4919
  %19 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !4920
  %20 = load volatile i32, i32* %19, align 4, !dbg !4921
  %21 = and i32 %20, -32769, !dbg !4921
  store volatile i32 %21, i32* %19, align 4, !dbg !4921
  %22 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %15, align 4, !dbg !4922
  %23 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %22, i32 0, i32 4, !dbg !4923
  store volatile i32 32768, i32* %23, align 4, !dbg !4924
  call void @llvm.dbg.value(metadata i32* %3, metadata !4896, metadata !DIExpression(DW_OP_deref)), !dbg !4898
  %24 = call i32 @pdma_get_running_status(i32 noundef %0, i32* noundef nonnull %3) #21, !dbg !4925
  %25 = load i32, i32* %3, align 4, !dbg !4926
  call void @llvm.dbg.value(metadata i32 %25, metadata !4896, metadata !DIExpression()), !dbg !4898
  %26 = icmp eq i32 %25, 0, !dbg !4927
  br i1 %26, label %31, label %27, !dbg !4927

27:                                               ; preds = %14, %27
  call void @llvm.dbg.value(metadata i32* %3, metadata !4896, metadata !DIExpression(DW_OP_deref)), !dbg !4898
  %28 = call i32 @pdma_get_running_status(i32 noundef %0, i32* noundef nonnull %3) #21, !dbg !4928
  %29 = load i32, i32* %3, align 4, !dbg !4926
  call void @llvm.dbg.value(metadata i32 %29, metadata !4896, metadata !DIExpression()), !dbg !4898
  %30 = icmp eq i32 %29, 0, !dbg !4927
  br i1 %30, label %31, label %27, !dbg !4927, !llvm.loop !4930

31:                                               ; preds = %27, %14
  %32 = tail call i32 @pdma_stop(i32 noundef %0) #21, !dbg !4932
  br label %33, !dbg !4933

33:                                               ; preds = %2, %31
  %34 = phi i32 [ 0, %31 ], [ -2, %2 ], !dbg !4898
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4934
  ret i32 %34, !dbg !4934
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @pdma_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #9 !dbg !4935 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4940, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.value(metadata i32* %1, metadata !4941, metadata !DIExpression()), !dbg !4944
  call void @llvm.dbg.value(metadata i32 0, metadata !4942, metadata !DIExpression()), !dbg !4944
  %4 = bitcast i32* %3 to i8*, !dbg !4945
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4945
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4943, metadata !DIExpression()), !dbg !4946
  store volatile i32 0, i32* %3, align 4, !dbg !4946
  %5 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4947
  call void @llvm.dbg.value(metadata i32 %5, metadata !4942, metadata !DIExpression()), !dbg !4944
  %6 = icmp eq i32 %5, 255, !dbg !4948
  br i1 %6, label %18, label %7, !dbg !4950

7:                                                ; preds = %2
  %8 = getelementptr inbounds [6 x %struct.anon*], [6 x %struct.anon*]* @pdma_global, i32 0, i32 %5, !dbg !4951
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !4951
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !4952
  %11 = load volatile i32, i32* %10, align 4, !dbg !4952
  store volatile i32 %11, i32* %3, align 4, !dbg !4953
  %12 = load volatile i32, i32* %3, align 4, !dbg !4954
  %13 = getelementptr inbounds [6 x i8], [6 x i8]* @g_pdma_global_running_bit, i32 0, i32 %5, !dbg !4956
  %14 = load i8, i8* %13, align 1, !dbg !4956
  %15 = zext i8 %14 to i32, !dbg !4956
  %16 = lshr i32 %12, %15
  %17 = and i32 %16, 1
  store i32 %17, i32* %1, align 4, !dbg !4957
  br label %18, !dbg !4958

18:                                               ; preds = %2, %7
  %19 = phi i32 [ 0, %7 ], [ -2, %2 ], !dbg !4944
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4959
  ret i32 %19, !dbg !4959
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @pdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !4960 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4962, metadata !DIExpression()), !dbg !4964
  call void @llvm.dbg.value(metadata i32 0, metadata !4963, metadata !DIExpression()), !dbg !4964
  %2 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %2, metadata !4963, metadata !DIExpression()), !dbg !4964
  %3 = icmp eq i32 %2, 255, !dbg !4966
  br i1 %3, label %12, label %4, !dbg !4968

4:                                                ; preds = %1
  %5 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %2, !dbg !4969
  %6 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %5, align 4, !dbg !4969
  %7 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %6, i32 0, i32 4, !dbg !4970
  %8 = load volatile i32, i32* %7, align 4, !dbg !4971
  %9 = and i32 %8, -32769, !dbg !4971
  store volatile i32 %9, i32* %7, align 4, !dbg !4971
  %10 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %5, align 4, !dbg !4972
  %11 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %10, i32 0, i32 6, !dbg !4973
  store volatile i32 32768, i32* %11, align 4, !dbg !4974
  br label %12, !dbg !4975

12:                                               ; preds = %1, %4
  %13 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !4964
  ret i32 %13, !dbg !4976
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @pdma_start_interrupt(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4977 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4979, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 %1, metadata !4980, metadata !DIExpression()), !dbg !4982
  call void @llvm.dbg.value(metadata i32 0, metadata !4981, metadata !DIExpression()), !dbg !4982
  %3 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !4983
  call void @llvm.dbg.value(metadata i32 %3, metadata !4981, metadata !DIExpression()), !dbg !4982
  %4 = icmp eq i32 %3, 255, !dbg !4984
  br i1 %4, label %22, label %5, !dbg !4986

5:                                                ; preds = %2
  %6 = and i32 %1, 3, !dbg !4987
  %7 = icmp eq i32 %6, 0, !dbg !4989
  br i1 %7, label %9, label %8, !dbg !4990

8:                                                ; preds = %5
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 567, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.pdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4991
  unreachable, !dbg !4991

9:                                                ; preds = %5
  %10 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !4993
  br i1 %10, label %11, label %12, !dbg !4995

11:                                               ; preds = %9
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 573, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.pdma_start_interrupt, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !4996
  unreachable, !dbg !4996

12:                                               ; preds = %9
  %13 = getelementptr inbounds [6 x %struct.PDMA_REGISTER_T*], [6 x %struct.PDMA_REGISTER_T*]* @pdma, i32 0, i32 %3, !dbg !4998
  %14 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !4998
  %15 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %14, i32 0, i32 9, !dbg !4999
  store volatile i32 %1, i32* %15, align 4, !dbg !5000
  %16 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !5001
  %17 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %16, i32 0, i32 3, !dbg !5002
  %18 = load volatile i32, i32* %17, align 4, !dbg !5003
  %19 = or i32 %18, 32768, !dbg !5003
  store volatile i32 %19, i32* %17, align 4, !dbg !5003
  %20 = load %struct.PDMA_REGISTER_T*, %struct.PDMA_REGISTER_T** %13, align 4, !dbg !5004
  %21 = getelementptr inbounds %struct.PDMA_REGISTER_T, %struct.PDMA_REGISTER_T* %20, i32 0, i32 4, !dbg !5005
  store volatile i32 32768, i32* %21, align 4, !dbg !5006
  br label %22, !dbg !5007

22:                                               ; preds = %2, %12
  %23 = phi i32 [ 0, %12 ], [ -2, %2 ], !dbg !4982
  ret i32 %23, !dbg !5008
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @pdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !5009 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5013, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5014, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i8* %2, metadata !5015, metadata !DIExpression()), !dbg !5017
  call void @llvm.dbg.value(metadata i32 0, metadata !5016, metadata !DIExpression()), !dbg !5017
  %4 = tail call fastcc i32 @pdma_check_valid_channel(i32 noundef %0) #21, !dbg !5018
  call void @llvm.dbg.value(metadata i32 %4, metadata !5016, metadata !DIExpression()), !dbg !5017
  %5 = icmp eq i32 %4, 255, !dbg !5019
  br i1 %5, label %12, label %6, !dbg !5021

6:                                                ; preds = %3
  %7 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %4, i32 0, !dbg !5022
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !5022
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !5024
  br i1 %9, label %10, label %12, !dbg !5025

10:                                               ; preds = %6
  store void (i32, i8*)* %1, void (i32, i8*)** %7, align 4, !dbg !5026
  %11 = getelementptr inbounds [6 x %struct.gdma_user_callback_t], [6 x %struct.gdma_user_callback_t]* @g_pdma_callback, i32 0, i32 %4, i32 1, !dbg !5028
  store i8* %2, i8** %11, align 4, !dbg !5029
  br label %12, !dbg !5030

12:                                               ; preds = %6, %10, %3
  %13 = phi i32 [ -2, %3 ], [ 0, %10 ], [ 0, %6 ], !dbg !5017
  ret i32 %13, !dbg !5031
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_init(i32 noundef %0) local_unnamed_addr #0 !dbg !5032 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5038, metadata !DIExpression()), !dbg !5044
  call void @llvm.dbg.value(metadata i32 0, metadata !5039, metadata !DIExpression()), !dbg !5044
  call void @llvm.dbg.value(metadata i32 0, metadata !5041, metadata !DIExpression()), !dbg !5044
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5045
  call void @llvm.dbg.value(metadata i32 %2, metadata !5039, metadata !DIExpression()), !dbg !5044
  %3 = icmp eq i32 %2, 255, !dbg !5046
  br i1 %3, label %47, label %4, !dbg !5048

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5049
  call void @llvm.dbg.value(metadata i32 %5, metadata !5042, metadata !DIExpression()), !dbg !5050
  %6 = getelementptr inbounds [18 x i8], [18 x i8]* @vdma_init_status, i32 0, i32 %0, !dbg !5051
  %7 = load volatile i8, i8* %6, align 1, !dbg !5051
  %8 = icmp eq i8 %7, 1, !dbg !5051
  br i1 %8, label %9, label %10, !dbg !5049

9:                                                ; preds = %4
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.vdma_init, i32 0, i32 0), i32 noundef 690, i8* noundef getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i32 0, i32 0), i32 noundef %0) #20, !dbg !5053
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 690, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.vdma_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5053
  unreachable, !dbg !5053

10:                                               ; preds = %4
  store volatile i8 1, i8* %6, align 1, !dbg !5055
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !5049
  %11 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !5057
  %12 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !5057
  %13 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %12, i32 0, i32 1, !dbg !5058
  store volatile i32 0, i32* %13, align 4, !dbg !5059
  %14 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !5060
  %15 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %14, i32 0, i32 0, !dbg !5061
  store volatile i32 0, i32* %15, align 4, !dbg !5062
  %16 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !5063
  %17 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %16, i32 0, i32 2, !dbg !5064
  store volatile i32 0, i32* %17, align 4, !dbg !5065
  %18 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !5066
  %19 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %18, i32 0, i32 3, !dbg !5067
  store volatile i32 0, i32* %19, align 4, !dbg !5068
  %20 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !5069
  %21 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %20, i32 0, i32 6, !dbg !5070
  store volatile i32 0, i32* %21, align 4, !dbg !5071
  %22 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !5072
  %23 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %22, i32 0, i32 11, !dbg !5073
  store volatile i32 0, i32* %23, align 4, !dbg !5074
  %24 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %11, align 4, !dbg !5075
  %25 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %24, i32 0, i32 12, !dbg !5076
  store volatile i32 0, i32* %25, align 4, !dbg !5077
  %26 = icmp ult i32 %2, 8, !dbg !5078
  br i1 %26, label %27, label %30, !dbg !5080

27:                                               ; preds = %10
  %28 = tail call i32 @dma_enable_clock(i32 noundef 0) #21, !dbg !5081
  call void @llvm.dbg.value(metadata i32 %28, metadata !5040, metadata !DIExpression()), !dbg !5044
  %29 = icmp eq i32 %28, 255, !dbg !5083
  br i1 %29, label %47, label %33, !dbg !5085

30:                                               ; preds = %10
  %31 = tail call i32 @dma_enable_clock(i32 noundef 1) #21, !dbg !5086
  call void @llvm.dbg.value(metadata i32 %31, metadata !5040, metadata !DIExpression()), !dbg !5044
  %32 = icmp eq i32 %31, 255, !dbg !5088
  br i1 %32, label %47, label %33, !dbg !5090

33:                                               ; preds = %30, %27
  %34 = add i32 %0, -8, !dbg !5091
  %35 = icmp ult i32 %34, 10, !dbg !5091
  br i1 %35, label %36, label %47, !dbg !5091

36:                                               ; preds = %33
  %37 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T**], [10 x %struct.VDMA_REGISTER_T**]* @switch.table.vdma_init, i32 0, i32 %34, !dbg !5091
  %38 = load %struct.VDMA_REGISTER_T**, %struct.VDMA_REGISTER_T*** %37, align 4, !dbg !5091
  %39 = getelementptr inbounds [10 x i32], [10 x i32]* @switch.table.vdma_init.6, i32 0, i32 %34, !dbg !5091
  %40 = load i32, i32* %39, align 4, !dbg !5091
  %41 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %38, align 4, !dbg !5092
  %42 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %41, i32 0, i32 1, !dbg !5092
  store volatile i32 %40, i32* %42, align 4, !dbg !5092
  %43 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 21, void (i32)* noundef nonnull @pd_domain_dma_interrupt_hander) #20, !dbg !5094
  %44 = tail call i32 @hal_nvic_enable_irq(i32 noundef 21) #20, !dbg !5095
  %45 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 22, void (i32)* noundef nonnull @ao_domain_dma_interrupt_hander) #20, !dbg !5096
  %46 = tail call i32 @hal_nvic_enable_irq(i32 noundef 22) #20, !dbg !5097
  br label %47, !dbg !5098

47:                                               ; preds = %33, %30, %27, %1, %36
  %48 = phi i32 [ 0, %36 ], [ -2, %1 ], [ -3, %27 ], [ -3, %30 ], [ -3, %33 ], !dbg !5044
  ret i32 %48, !dbg !5099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc i32 @vdma_check_valid_channel(i32 noundef %0) unnamed_addr #10 !dbg !5100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5104, metadata !DIExpression()), !dbg !5106
  call void @llvm.dbg.value(metadata i32 0, metadata !5105, metadata !DIExpression()), !dbg !5106
  %2 = add i32 %0, -8, !dbg !5107
  call void @llvm.dbg.value(metadata i32 %2, metadata !5105, metadata !DIExpression()), !dbg !5106
  %3 = icmp ugt i32 %2, 9, !dbg !5108
  %4 = select i1 %3, i32 255, i32 %2, !dbg !5110
  ret i32 %4, !dbg !5111
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ao_domain_dma_interrupt_hander(i32 %0) #0 !dbg !5112 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !5114, metadata !DIExpression()), !dbg !5119
  %3 = bitcast i32* %2 to i8*, !dbg !5120
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5120
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5115, metadata !DIExpression()), !dbg !5121
  store volatile i32 0, i32* %2, align 4, !dbg !5121
  call void @llvm.dbg.value(metadata i32 0, metadata !5118, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i32 8, metadata !5118, metadata !DIExpression()), !dbg !5119
  br label %4, !dbg !5122

4:                                                ; preds = %1, %28
  %5 = phi i32 [ 8, %1 ], [ %29, %28 ]
  call void @llvm.dbg.value(metadata i32 %5, metadata !5118, metadata !DIExpression()), !dbg !5119
  %6 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %5, !dbg !5124
  %7 = load %struct.anon*, %struct.anon** %6, align 4, !dbg !5124
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, !dbg !5127
  %9 = load volatile i32, i32* %8, align 4, !dbg !5127
  store volatile i32 %9, i32* %2, align 4, !dbg !5128
  %10 = load volatile i32, i32* %2, align 4, !dbg !5129
  %11 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %5, !dbg !5131
  %12 = load i8, i8* %11, align 1, !dbg !5131
  %13 = zext i8 %12 to i32, !dbg !5131
  %14 = shl i32 2, %13, !dbg !5132
  %15 = and i32 %14, %10, !dbg !5133
  %16 = icmp eq i32 %15, 0, !dbg !5133
  br i1 %16, label %28, label %17, !dbg !5134

17:                                               ; preds = %4
  %18 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %5, !dbg !5135
  %19 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %18, align 4, !dbg !5135
  %20 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %19, i32 0, i32 4, !dbg !5138
  store volatile i32 32768, i32* %20, align 4, !dbg !5139
  %21 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %5, i32 0, !dbg !5140
  %22 = load void (i32, i8*)*, void (i32, i8*)** %21, align 4, !dbg !5140
  call void @llvm.dbg.value(metadata void (i32, i8*)* %22, metadata !5116, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.value(metadata i8* undef, metadata !5117, metadata !DIExpression()), !dbg !5119
  %23 = icmp eq void (i32, i8*)* %22, null, !dbg !5141
  br i1 %23, label %27, label %24, !dbg !5143

24:                                               ; preds = %17
  %25 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %5, i32 1, !dbg !5144
  %26 = load i8*, i8** %25, align 4, !dbg !5144
  call void @llvm.dbg.value(metadata i8* %26, metadata !5117, metadata !DIExpression()), !dbg !5119
  tail call void %22(i32 noundef 0, i8* noundef %26) #20, !dbg !5145
  br label %28, !dbg !5147

27:                                               ; preds = %17
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 1234, i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.ao_domain_dma_interrupt_hander, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5148
  unreachable, !dbg !5148

28:                                               ; preds = %4, %24
  %29 = add nuw nsw i32 %5, 1, !dbg !5150
  call void @llvm.dbg.value(metadata i32 %29, metadata !5118, metadata !DIExpression()), !dbg !5119
  %30 = icmp eq i32 %29, 10, !dbg !5151
  br i1 %30, label %31, label %4, !dbg !5122, !llvm.loop !5152

31:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5154
  ret void, !dbg !5154
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !5155 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5157, metadata !DIExpression()), !dbg !5164
  call void @llvm.dbg.value(metadata i32 255, metadata !5158, metadata !DIExpression()), !dbg !5164
  %3 = bitcast i32* %2 to i8*, !dbg !5165
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5165
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5161, metadata !DIExpression()), !dbg !5166
  store volatile i32 0, i32* %2, align 4, !dbg !5166
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5167
  call void @llvm.dbg.value(metadata i32 %4, metadata !5158, metadata !DIExpression()), !dbg !5164
  %5 = icmp eq i32 %4, 255, !dbg !5168
  br i1 %5, label %41, label %6, !dbg !5170

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5171
  call void @llvm.dbg.value(metadata i32 %7, metadata !5160, metadata !DIExpression()), !dbg !5164
  %8 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %4, !dbg !5172
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !5172
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !5173
  %11 = load volatile i32, i32* %10, align 4, !dbg !5173
  store volatile i32 %11, i32* %2, align 4, !dbg !5174
  %12 = load volatile i32, i32* %2, align 4, !dbg !5175
  %13 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %4, !dbg !5177
  %14 = load i8, i8* %13, align 1, !dbg !5177
  %15 = zext i8 %14 to i32, !dbg !5177
  %16 = shl i32 2, %15, !dbg !5178
  %17 = and i32 %16, %12, !dbg !5179
  %18 = icmp eq i32 %17, 0, !dbg !5179
  br i1 %18, label %20, label %19, !dbg !5180

19:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 806, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5181
  unreachable, !dbg !5181

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !5183
  %22 = shl nuw i32 1, %15, !dbg !5185
  %23 = and i32 %21, %22, !dbg !5186
  %24 = icmp eq i32 %23, 0, !dbg !5186
  br i1 %24, label %26, label %25, !dbg !5187

25:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 812, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5188
  unreachable, !dbg !5188

26:                                               ; preds = %20
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5190
  %27 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5191
  call void @llvm.dbg.value(metadata i32 %27, metadata !5162, metadata !DIExpression()), !dbg !5192
  %28 = getelementptr inbounds [18 x i8], [18 x i8]* @vdma_init_status, i32 0, i32 %0, !dbg !5193
  %29 = load volatile i8, i8* %28, align 1, !dbg !5193
  %30 = icmp eq i8 %29, 0, !dbg !5193
  br i1 %30, label %31, label %32, !dbg !5191

31:                                               ; preds = %26
  tail call void (i8*, i32, i8*, ...) @log_hal_info_internal(i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i32 noundef 820, i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i32 0, i32 0), i32 noundef %0) #20, !dbg !5195
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 820, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.vdma_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5195
  unreachable, !dbg !5195

32:                                               ; preds = %26
  store volatile i8 0, i8* %28, align 1, !dbg !5197
  tail call void @restore_interrupt_mask(i32 noundef %27) #20, !dbg !5191
  %33 = icmp ult i32 %4, 8, !dbg !5199
  br i1 %33, label %34, label %37, !dbg !5201

34:                                               ; preds = %32
  %35 = tail call i32 @dma_disable_clock(i32 noundef 0) #21, !dbg !5202
  call void @llvm.dbg.value(metadata i32 %35, metadata !5159, metadata !DIExpression()), !dbg !5164
  %36 = icmp eq i32 %35, 255, !dbg !5204
  br i1 %36, label %41, label %40, !dbg !5206

37:                                               ; preds = %32
  %38 = tail call i32 @dma_disable_clock(i32 noundef 1) #21, !dbg !5207
  call void @llvm.dbg.value(metadata i32 %38, metadata !5159, metadata !DIExpression()), !dbg !5164
  %39 = icmp eq i32 %38, 255, !dbg !5209
  br i1 %39, label %41, label %40, !dbg !5211

40:                                               ; preds = %37, %34
  br label %41, !dbg !5212

41:                                               ; preds = %37, %34, %1, %40
  %42 = phi i32 [ 0, %40 ], [ -2, %1 ], [ -3, %34 ], [ -3, %37 ], !dbg !5164
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5213
  ret i32 %42, !dbg !5213
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_configure(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5214 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5224, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !5225, metadata !DIExpression()), !dbg !5227
  call void @llvm.dbg.value(metadata i32 0, metadata !5226, metadata !DIExpression()), !dbg !5227
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5228
  call void @llvm.dbg.value(metadata i32 %3, metadata !5226, metadata !DIExpression()), !dbg !5227
  %4 = icmp eq i32 %3, 255, !dbg !5229
  br i1 %4, label %23, label %5, !dbg !5231

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !5232
  %7 = load i32, i32* %6, align 4, !dbg !5232
  %8 = and i32 %7, 3, !dbg !5234
  %9 = icmp eq i32 %8, 0, !dbg !5235
  br i1 %9, label %11, label %10, !dbg !5236

10:                                               ; preds = %5
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 857, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vdma_configure, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5237
  unreachable, !dbg !5237

11:                                               ; preds = %5
  %12 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %7) #20, !dbg !5239
  br i1 %12, label %13, label %14, !dbg !5241

13:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1.56, i32 0, i32 0), i32 noundef 863, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.vdma_configure, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)) #23, !dbg !5242
  unreachable, !dbg !5242

14:                                               ; preds = %11
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !5244
  %16 = load i32, i32* %15, align 4, !dbg !5244
  %17 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5245
  %18 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %17, align 4, !dbg !5245
  %19 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %18, i32 0, i32 12, !dbg !5246
  store volatile i32 %16, i32* %19, align 4, !dbg !5247
  %20 = load i32, i32* %6, align 4, !dbg !5248
  %21 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %17, align 4, !dbg !5249
  %22 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %21, i32 0, i32 6, !dbg !5250
  store volatile i32 %20, i32* %22, align 4, !dbg !5251
  br label %23, !dbg !5252

23:                                               ; preds = %2, %14
  %24 = phi i32 [ 0, %14 ], [ -2, %2 ], !dbg !5227
  ret i32 %24, !dbg !5253
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_enable_interrupt(i32 noundef %0) local_unnamed_addr #2 !dbg !5254 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5256, metadata !DIExpression()), !dbg !5258
  call void @llvm.dbg.value(metadata i32 0, metadata !5257, metadata !DIExpression()), !dbg !5258
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5259
  call void @llvm.dbg.value(metadata i32 %2, metadata !5257, metadata !DIExpression()), !dbg !5258
  %3 = icmp eq i32 %2, 255, !dbg !5260
  br i1 %3, label %10, label %4, !dbg !5262

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !5263
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !5263
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 1, !dbg !5264
  %8 = load volatile i32, i32* %7, align 4, !dbg !5265
  %9 = or i32 %8, 32768, !dbg !5265
  store volatile i32 %9, i32* %7, align 4, !dbg !5265
  br label %10, !dbg !5266

10:                                               ; preds = %1, %4
  %11 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !5258
  ret i32 %11, !dbg !5267
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @vdma_start(i32 noundef %0) local_unnamed_addr #0 !dbg !5268 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5270, metadata !DIExpression()), !dbg !5274
  call void @llvm.dbg.value(metadata i32 0, metadata !5271, metadata !DIExpression()), !dbg !5274
  %3 = bitcast i32* %2 to i8*, !dbg !5275
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !5275
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5273, metadata !DIExpression()), !dbg !5276
  store volatile i32 0, i32* %2, align 4, !dbg !5276
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5277
  call void @llvm.dbg.value(metadata i32 %4, metadata !5271, metadata !DIExpression()), !dbg !5274
  %5 = icmp eq i32 %4, 255, !dbg !5278
  br i1 %5, label %29, label %6, !dbg !5280

6:                                                ; preds = %1
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5281
  call void @llvm.dbg.value(metadata i32 %7, metadata !5272, metadata !DIExpression()), !dbg !5274
  %8 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_global, i32 0, i32 %4, !dbg !5282
  %9 = load %struct.anon*, %struct.anon** %8, align 4, !dbg !5282
  %10 = getelementptr inbounds %struct.anon, %struct.anon* %9, i32 0, i32 0, !dbg !5283
  %11 = load volatile i32, i32* %10, align 4, !dbg !5283
  store volatile i32 %11, i32* %2, align 4, !dbg !5284
  %12 = load volatile i32, i32* %2, align 4, !dbg !5285
  %13 = getelementptr inbounds [10 x i8], [10 x i8]* @g_vdma_global_running_bit, i32 0, i32 %4, !dbg !5287
  %14 = load i8, i8* %13, align 1, !dbg !5287
  %15 = zext i8 %14 to i32, !dbg !5287
  %16 = shl nuw i32 1, %15, !dbg !5288
  %17 = and i32 %16, %12, !dbg !5289
  %18 = icmp eq i32 %17, 0, !dbg !5289
  br i1 %18, label %20, label %19, !dbg !5290

19:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5291
  br label %29, !dbg !5293

20:                                               ; preds = %6
  %21 = load volatile i32, i32* %2, align 4, !dbg !5294
  %22 = shl i32 2, %15, !dbg !5296
  %23 = and i32 %21, %22, !dbg !5297
  %24 = icmp eq i32 %23, 0, !dbg !5297
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !5274
  br i1 %24, label %25, label %29, !dbg !5298

25:                                               ; preds = %20
  %26 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %4, !dbg !5299
  %27 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %26, align 4, !dbg !5299
  %28 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %27, i32 0, i32 2, !dbg !5300
  store volatile i32 32768, i32* %28, align 4, !dbg !5301
  br label %29, !dbg !5302

29:                                               ; preds = %20, %1, %25, %19
  %30 = phi i32 [ -3, %19 ], [ 0, %25 ], [ -2, %1 ], [ -3, %20 ], !dbg !5274
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !5303
  ret i32 %30, !dbg !5303
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_disable_interrupt(i32 noundef %0) local_unnamed_addr #2 !dbg !5304 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5306, metadata !DIExpression()), !dbg !5308
  call void @llvm.dbg.value(metadata i32 0, metadata !5307, metadata !DIExpression()), !dbg !5308
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5309
  call void @llvm.dbg.value(metadata i32 %2, metadata !5307, metadata !DIExpression()), !dbg !5308
  %3 = icmp eq i32 %2, 255, !dbg !5310
  br i1 %3, label %10, label %4, !dbg !5312

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !5313
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !5313
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 1, !dbg !5314
  %8 = load volatile i32, i32* %7, align 4, !dbg !5315
  %9 = and i32 %8, -32769, !dbg !5315
  store volatile i32 %9, i32* %7, align 4, !dbg !5315
  br label %10, !dbg !5316

10:                                               ; preds = %1, %4
  %11 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !5308
  ret i32 %11, !dbg !5317
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_stop(i32 noundef %0) local_unnamed_addr #2 !dbg !5318 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5320, metadata !DIExpression()), !dbg !5322
  call void @llvm.dbg.value(metadata i32 0, metadata !5321, metadata !DIExpression()), !dbg !5322
  %2 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5323
  call void @llvm.dbg.value(metadata i32 %2, metadata !5321, metadata !DIExpression()), !dbg !5322
  %3 = icmp eq i32 %2, 255, !dbg !5324
  br i1 %3, label %8, label %4, !dbg !5326

4:                                                ; preds = %1
  %5 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %2, !dbg !5327
  %6 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %5, align 4, !dbg !5327
  %7 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %6, i32 0, i32 2, !dbg !5328
  store volatile i32 0, i32* %7, align 4, !dbg !5329
  br label %8, !dbg !5330

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ -2, %1 ], !dbg !5322
  ret i32 %9, !dbg !5331
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_set_threshold(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5336, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.value(metadata i32 %1, metadata !5337, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.value(metadata i32 0, metadata !5338, metadata !DIExpression()), !dbg !5339
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5340
  call void @llvm.dbg.value(metadata i32 %3, metadata !5338, metadata !DIExpression()), !dbg !5339
  %4 = icmp eq i32 %3, 255, !dbg !5341
  br i1 %4, label %11, label %5, !dbg !5343

5:                                                ; preds = %2
  %6 = icmp ugt i32 %1, 65535, !dbg !5344
  br i1 %6, label %11, label %7, !dbg !5346

7:                                                ; preds = %5
  %8 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5347
  %9 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %8, align 4, !dbg !5347
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %9, i32 0, i32 0, !dbg !5348
  store volatile i32 %1, i32* %10, align 4, !dbg !5349
  br label %11, !dbg !5350

11:                                               ; preds = %5, %2, %7
  %12 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !5339
  ret i32 %12, !dbg !5351
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_set_alert_length(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5352 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5354, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 %1, metadata !5355, metadata !DIExpression()), !dbg !5357
  call void @llvm.dbg.value(metadata i32 0, metadata !5356, metadata !DIExpression()), !dbg !5357
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5358
  call void @llvm.dbg.value(metadata i32 %3, metadata !5356, metadata !DIExpression()), !dbg !5357
  %4 = icmp eq i32 %3, 255, !dbg !5359
  br i1 %4, label %11, label %5, !dbg !5361

5:                                                ; preds = %2
  %6 = icmp ugt i32 %1, 63, !dbg !5362
  br i1 %6, label %11, label %7, !dbg !5364

7:                                                ; preds = %5
  %8 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5365
  %9 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %8, align 4, !dbg !5365
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %9, i32 0, i32 11, !dbg !5366
  store volatile i32 %1, i32* %10, align 4, !dbg !5367
  br label %11, !dbg !5368

11:                                               ; preds = %5, %2, %7
  %12 = phi i32 [ 0, %7 ], [ -2, %2 ], [ -1, %5 ], !dbg !5357
  ret i32 %12, !dbg !5369
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @vdma_push_data(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5374, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i8 %1, metadata !5375, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.value(metadata i32 0, metadata !5376, metadata !DIExpression()), !dbg !5377
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5378
  call void @llvm.dbg.value(metadata i32 %3, metadata !5376, metadata !DIExpression()), !dbg !5377
  %4 = icmp eq i32 %3, 255, !dbg !5379
  br i1 %4, label %10, label %5, !dbg !5381

5:                                                ; preds = %2
  %6 = zext i8 %1 to i32, !dbg !5382
  %7 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_port, i32 0, i32 %3, !dbg !5383
  %8 = load %struct.anon*, %struct.anon** %7, align 4, !dbg !5383
  %9 = getelementptr inbounds %struct.anon, %struct.anon* %8, i32 0, i32 0, !dbg !5384
  store volatile i32 %6, i32* %9, align 4, !dbg !5385
  br label %10, !dbg !5386

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5377
  ret i32 %11, !dbg !5387
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_pop_data(i32 noundef %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !5388 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5392, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i8* %1, metadata !5393, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.value(metadata i32 0, metadata !5394, metadata !DIExpression()), !dbg !5395
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5396
  call void @llvm.dbg.value(metadata i32 %3, metadata !5394, metadata !DIExpression()), !dbg !5395
  %4 = icmp eq i32 %3, 255, !dbg !5397
  br i1 %4, label %11, label %5, !dbg !5399

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.anon*], [10 x %struct.anon*]* @vdma_port, i32 0, i32 %3, !dbg !5400
  %7 = load %struct.anon*, %struct.anon** %6, align 4, !dbg !5400
  %8 = getelementptr inbounds %struct.anon, %struct.anon* %7, i32 0, i32 0, !dbg !5401
  %9 = load volatile i32, i32* %8, align 4, !dbg !5401
  %10 = trunc i32 %9 to i8, !dbg !5400
  store i8 %10, i8* %1, align 1, !dbg !5402
  br label %11, !dbg !5403

11:                                               ; preds = %2, %5
  %12 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5395
  ret i32 %12, !dbg !5404
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_get_available_receive_bytes(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !5405 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5409, metadata !DIExpression()), !dbg !5412
  call void @llvm.dbg.value(metadata i32* %1, metadata !5410, metadata !DIExpression()), !dbg !5412
  call void @llvm.dbg.value(metadata i32 0, metadata !5411, metadata !DIExpression()), !dbg !5412
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5413
  call void @llvm.dbg.value(metadata i32 %3, metadata !5411, metadata !DIExpression()), !dbg !5412
  %4 = icmp eq i32 %3, 255, !dbg !5414
  br i1 %4, label %10, label %5, !dbg !5416

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5417
  %7 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %6, align 4, !dbg !5417
  %8 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 9, !dbg !5418
  %9 = load volatile i32, i32* %8, align 4, !dbg !5418
  store i32 %9, i32* %1, align 4, !dbg !5419
  br label %10, !dbg !5420

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5412
  ret i32 %11, !dbg !5421
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @vdma_get_available_send_space(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #11 !dbg !5422 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5424, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.value(metadata i32* %1, metadata !5425, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.value(metadata i32 0, metadata !5426, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.value(metadata i32 0, metadata !5427, metadata !DIExpression()), !dbg !5429
  call void @llvm.dbg.value(metadata i32 0, metadata !5428, metadata !DIExpression()), !dbg !5429
  %3 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5430
  call void @llvm.dbg.value(metadata i32 %3, metadata !5426, metadata !DIExpression()), !dbg !5429
  %4 = icmp eq i32 %3, 255, !dbg !5431
  br i1 %4, label %13, label %5, !dbg !5433

5:                                                ; preds = %2
  %6 = getelementptr inbounds [10 x %struct.VDMA_REGISTER_T*], [10 x %struct.VDMA_REGISTER_T*]* @vdma, i32 0, i32 %3, !dbg !5434
  %7 = load %struct.VDMA_REGISTER_T*, %struct.VDMA_REGISTER_T** %6, align 4, !dbg !5434
  %8 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 12, !dbg !5435
  %9 = load volatile i32, i32* %8, align 4, !dbg !5435
  call void @llvm.dbg.value(metadata i32 %9, metadata !5427, metadata !DIExpression()), !dbg !5429
  %10 = getelementptr inbounds %struct.VDMA_REGISTER_T, %struct.VDMA_REGISTER_T* %7, i32 0, i32 9, !dbg !5436
  %11 = load volatile i32, i32* %10, align 4, !dbg !5436
  call void @llvm.dbg.value(metadata i32 %11, metadata !5428, metadata !DIExpression()), !dbg !5429
  %12 = sub i32 %9, %11, !dbg !5437
  store i32 %12, i32* %1, align 4, !dbg !5438
  br label %13, !dbg !5439

13:                                               ; preds = %2, %5
  %14 = phi i32 [ 0, %5 ], [ -2, %2 ], !dbg !5429
  ret i32 %14, !dbg !5440
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @vdma_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #7 !dbg !5441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5445, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5446, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i8* %2, metadata !5447, metadata !DIExpression()), !dbg !5449
  call void @llvm.dbg.value(metadata i32 0, metadata !5448, metadata !DIExpression()), !dbg !5449
  %4 = tail call fastcc i32 @vdma_check_valid_channel(i32 noundef %0) #21, !dbg !5450
  call void @llvm.dbg.value(metadata i32 %4, metadata !5448, metadata !DIExpression()), !dbg !5449
  %5 = icmp eq i32 %4, 255, !dbg !5451
  br i1 %5, label %12, label %6, !dbg !5453

6:                                                ; preds = %3
  %7 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %4, i32 0, !dbg !5454
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !5454
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !5456
  br i1 %9, label %10, label %12, !dbg !5457

10:                                               ; preds = %6
  store void (i32, i8*)* %1, void (i32, i8*)** %7, align 4, !dbg !5458
  %11 = getelementptr inbounds [10 x %struct.gdma_user_callback_t], [10 x %struct.gdma_user_callback_t]* @g_vdma_callback, i32 0, i32 %4, i32 1, !dbg !5460
  store i8* %2, i8** %11, align 4, !dbg !5461
  br label %12, !dbg !5462

12:                                               ; preds = %6, %10, %3
  %13 = phi i32 [ -2, %3 ], [ 0, %10 ], [ 0, %6 ], !dbg !5449
  ret i32 %13, !dbg !5463
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @gdma_calculate_size(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !5464 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5468, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i32* %1, metadata !5469, metadata !DIExpression()), !dbg !5470
  %3 = icmp eq i32 %0, 262140, !dbg !5471
  br i1 %3, label %14, label %4, !dbg !5473

4:                                                ; preds = %2
  %5 = and i32 %0, 3, !dbg !5474
  %6 = icmp eq i32 %5, 0, !dbg !5476
  br i1 %6, label %7, label %9, !dbg !5477

7:                                                ; preds = %4
  %8 = lshr i32 %0, 2, !dbg !5478
  br label %14, !dbg !5480

9:                                                ; preds = %4
  %10 = and i32 %0, 1, !dbg !5481
  %11 = xor i32 %10, 1, !dbg !5483
  %12 = lshr i32 %0, %11, !dbg !5483
  %13 = xor i32 %10, 1, !dbg !5483
  br label %14, !dbg !5483

14:                                               ; preds = %9, %2, %7
  %15 = phi i32 [ %8, %7 ], [ 65535, %2 ], [ %12, %9 ]
  %16 = phi i32 [ 2, %7 ], [ 2, %2 ], [ %13, %9 ], !dbg !5470
  store i32 %15, i32* %1, align 4, !dbg !5470
  ret i32 %16, !dbg !5484
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !5485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5490, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !5492, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.value(metadata i32 0, metadata !5491, metadata !DIExpression()), !dbg !5493
  br label %5, !dbg !5495

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !5497
  call void @llvm.dbg.value(metadata i32 %3, metadata !5491, metadata !DIExpression()), !dbg !5493
  call void @llvm.dbg.value(metadata i32 %6, metadata !5491, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5493
  %4 = icmp eq i32 %3, 5, !dbg !5499
  br i1 %4, label %10, label %5, !dbg !5495, !llvm.loop !5500

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !5491, metadata !DIExpression()), !dbg !5493
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !5502
  %8 = load i32, i32* %7, align 4, !dbg !5502
  %9 = icmp eq i32 %8, %0, !dbg !5505
  call void @llvm.dbg.value(metadata i32 %6, metadata !5491, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5493
  br i1 %9, label %10, label %2, !dbg !5506

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !5493
  ret i32 %11, !dbg !5507
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !5508 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5513, metadata !DIExpression()), !dbg !5514
  ret i32 0, !dbg !5515
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !5516 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5518, metadata !DIExpression()), !dbg !5519
  ret i32 0, !dbg !5520
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5521 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5525, metadata !DIExpression()), !dbg !5529
  call void @llvm.dbg.value(metadata i32 %1, metadata !5526, metadata !DIExpression()), !dbg !5529
  %3 = icmp ugt i32 %0, 48, !dbg !5530
  br i1 %3, label %13, label %4, !dbg !5532

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !5533
  call void @llvm.dbg.value(metadata i32 %5, metadata !5527, metadata !DIExpression()), !dbg !5529
  %6 = and i32 %0, 31, !dbg !5534
  call void @llvm.dbg.value(metadata i32 %6, metadata !5528, metadata !DIExpression()), !dbg !5529
  %7 = icmp eq i32 %1, 0, !dbg !5535
  %8 = shl nuw i32 1, %6, !dbg !5537
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5537
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !5538
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !5538
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !5538
  store volatile i32 %8, i32* %12, align 4, !dbg !5537
  br label %13, !dbg !5539

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !5529
  ret i32 %14, !dbg !5539
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5540 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5545, metadata !DIExpression()), !dbg !5550
  call void @llvm.dbg.value(metadata i32* %1, metadata !5546, metadata !DIExpression()), !dbg !5550
  %3 = icmp ugt i32 %0, 48, !dbg !5551
  br i1 %3, label %15, label %4, !dbg !5553

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5554
  br i1 %5, label %15, label %6, !dbg !5556

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5557
  call void @llvm.dbg.value(metadata i32 %7, metadata !5547, metadata !DIExpression()), !dbg !5550
  %8 = and i32 %0, 31, !dbg !5558
  call void @llvm.dbg.value(metadata i32 %8, metadata !5548, metadata !DIExpression()), !dbg !5550
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5559
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !5560
  %11 = load volatile i32, i32* %10, align 4, !dbg !5560
  call void @llvm.dbg.value(metadata i32 %11, metadata !5549, metadata !DIExpression()), !dbg !5550
  %12 = shl nuw i32 1, %8, !dbg !5561
  %13 = and i32 %11, %12, !dbg !5562
  call void @llvm.dbg.value(metadata i32 %13, metadata !5549, metadata !DIExpression()), !dbg !5550
  %14 = lshr i32 %13, %8, !dbg !5563
  store i32 %14, i32* %1, align 4, !dbg !5564
  br label %15, !dbg !5565

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5550
  ret i32 %16, !dbg !5566
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5567 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5572, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata i8 %1, metadata !5573, metadata !DIExpression()), !dbg !5577
  %3 = icmp ugt i32 %0, 48, !dbg !5578
  br i1 %3, label %18, label %4, !dbg !5580

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !5581
  br i1 %5, label %18, label %6, !dbg !5583

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !5584
  %8 = lshr i32 %0, 3, !dbg !5585
  call void @llvm.dbg.value(metadata i32 %8, metadata !5574, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.value(metadata i32 %0, metadata !5575, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5577
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5586
  call void @llvm.dbg.value(metadata i32 %9, metadata !5576, metadata !DIExpression()), !dbg !5577
  %10 = shl nuw nsw i32 %0, 2, !dbg !5587
  %11 = and i32 %10, 28, !dbg !5587
  %12 = shl nuw i32 15, %11, !dbg !5588
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5589
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !5590
  store volatile i32 %12, i32* %14, align 4, !dbg !5591
  %15 = shl nuw i32 %7, %11, !dbg !5592
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5593
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !5594
  store volatile i32 %15, i32* %17, align 4, !dbg !5595
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !5596
  br label %18, !dbg !5597

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5577
  ret i32 %19, !dbg !5598
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5599 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5604, metadata !DIExpression()), !dbg !5609
  call void @llvm.dbg.value(metadata i32* %1, metadata !5605, metadata !DIExpression()), !dbg !5609
  %3 = icmp ugt i32 %0, 48, !dbg !5610
  br i1 %3, label %15, label %4, !dbg !5612

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5613
  br i1 %5, label %15, label %6, !dbg !5615

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5616
  call void @llvm.dbg.value(metadata i32 %7, metadata !5606, metadata !DIExpression()), !dbg !5609
  %8 = and i32 %0, 31, !dbg !5617
  call void @llvm.dbg.value(metadata i32 %8, metadata !5607, metadata !DIExpression()), !dbg !5609
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5618
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !5619
  %11 = load volatile i32, i32* %10, align 4, !dbg !5619
  call void @llvm.dbg.value(metadata i32 %11, metadata !5608, metadata !DIExpression()), !dbg !5609
  %12 = shl nuw i32 1, %8, !dbg !5620
  %13 = and i32 %11, %12, !dbg !5621
  call void @llvm.dbg.value(metadata i32 %13, metadata !5608, metadata !DIExpression()), !dbg !5609
  %14 = lshr i32 %13, %8, !dbg !5622
  store i32 %14, i32* %1, align 4, !dbg !5623
  br label %15, !dbg !5624

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5609
  ret i32 %16, !dbg !5625
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5630, metadata !DIExpression()), !dbg !5634
  call void @llvm.dbg.value(metadata i32 %1, metadata !5631, metadata !DIExpression()), !dbg !5634
  %3 = icmp ugt i32 %0, 48, !dbg !5635
  br i1 %3, label %13, label %4, !dbg !5637

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !5638
  call void @llvm.dbg.value(metadata i32 %5, metadata !5632, metadata !DIExpression()), !dbg !5634
  %6 = and i32 %0, 31, !dbg !5639
  call void @llvm.dbg.value(metadata i32 %6, metadata !5633, metadata !DIExpression()), !dbg !5634
  %7 = icmp eq i32 %1, 0, !dbg !5640
  %8 = shl nuw i32 1, %6, !dbg !5642
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5642
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !5643
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !5643
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !5643
  store volatile i32 %8, i32* %12, align 4, !dbg !5642
  br label %13, !dbg !5644

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !5634
  ret i32 %14, !dbg !5644
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5647, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.value(metadata i32* %1, metadata !5648, metadata !DIExpression()), !dbg !5652
  %3 = icmp ugt i32 %0, 48, !dbg !5653
  br i1 %3, label %15, label %4, !dbg !5655

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5656
  br i1 %5, label %15, label %6, !dbg !5658

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !5659
  call void @llvm.dbg.value(metadata i32 %7, metadata !5649, metadata !DIExpression()), !dbg !5652
  %8 = and i32 %0, 31, !dbg !5660
  call void @llvm.dbg.value(metadata i32 %8, metadata !5650, metadata !DIExpression()), !dbg !5652
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5661
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !5662
  %11 = load volatile i32, i32* %10, align 4, !dbg !5662
  call void @llvm.dbg.value(metadata i32 %11, metadata !5651, metadata !DIExpression()), !dbg !5652
  %12 = shl nuw i32 1, %8, !dbg !5663
  %13 = and i32 %11, %12, !dbg !5664
  call void @llvm.dbg.value(metadata i32 %13, metadata !5651, metadata !DIExpression()), !dbg !5652
  %14 = lshr i32 %13, %8, !dbg !5665
  store i32 %14, i32* %1, align 4, !dbg !5666
  br label %15, !dbg !5667

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5652
  ret i32 %16, !dbg !5668
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !5669 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5671, metadata !DIExpression()), !dbg !5675
  %2 = icmp ugt i32 %0, 48, !dbg !5676
  br i1 %2, label %16, label %3, !dbg !5678

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5679
  call void @llvm.dbg.value(metadata i32 %4, metadata !5672, metadata !DIExpression()), !dbg !5675
  %5 = and i32 %0, 31, !dbg !5680
  call void @llvm.dbg.value(metadata i32 %5, metadata !5673, metadata !DIExpression()), !dbg !5675
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5681
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !5682
  %8 = load volatile i32, i32* %7, align 4, !dbg !5682
  call void @llvm.dbg.value(metadata i32 %8, metadata !5674, metadata !DIExpression()), !dbg !5675
  %9 = shl nuw i32 1, %5, !dbg !5683
  %10 = and i32 %8, %9, !dbg !5684
  call void @llvm.dbg.value(metadata i32 %10, metadata !5674, metadata !DIExpression()), !dbg !5675
  %11 = lshr i32 %10, %5, !dbg !5685
  %12 = icmp eq i32 %11, 0, !dbg !5685
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !5687
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !5687
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !5687
  store volatile i32 %9, i32* %15, align 4, !dbg !5688
  br label %16, !dbg !5689

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !5675
  ret i32 %17, !dbg !5689
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !5690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5692, metadata !DIExpression()), !dbg !5695
  %2 = icmp ugt i32 %0, 48, !dbg !5696
  br i1 %2, label %9, label %3, !dbg !5698

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5699
  call void @llvm.dbg.value(metadata i32 %4, metadata !5693, metadata !DIExpression()), !dbg !5695
  %5 = and i32 %0, 31, !dbg !5700
  call void @llvm.dbg.value(metadata i32 %5, metadata !5694, metadata !DIExpression()), !dbg !5695
  %6 = shl nuw i32 1, %5, !dbg !5701
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5702
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !5703
  store volatile i32 %6, i32* %8, align 4, !dbg !5704
  br label %9, !dbg !5705

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !5695
  ret i32 %10, !dbg !5706
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !5707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5709, metadata !DIExpression()), !dbg !5712
  %2 = icmp ugt i32 %0, 48, !dbg !5713
  br i1 %2, label %9, label %3, !dbg !5715

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5716
  call void @llvm.dbg.value(metadata i32 %4, metadata !5710, metadata !DIExpression()), !dbg !5712
  %5 = and i32 %0, 31, !dbg !5717
  call void @llvm.dbg.value(metadata i32 %5, metadata !5711, metadata !DIExpression()), !dbg !5712
  %6 = shl nuw i32 1, %5, !dbg !5718
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5719
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !5720
  store volatile i32 %6, i32* %8, align 4, !dbg !5721
  br label %9, !dbg !5722

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !5712
  ret i32 %10, !dbg !5723
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !5724 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5726, metadata !DIExpression()), !dbg !5729
  %2 = icmp ugt i32 %0, 48, !dbg !5730
  br i1 %2, label %14, label %3, !dbg !5732

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5733
  %5 = icmp eq i32 %4, 0, !dbg !5733
  br i1 %5, label %14, label %6, !dbg !5734

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5735
  call void @llvm.dbg.value(metadata i32 %7, metadata !5727, metadata !DIExpression()), !dbg !5729
  %8 = and i32 %0, 31, !dbg !5736
  call void @llvm.dbg.value(metadata i32 %8, metadata !5728, metadata !DIExpression()), !dbg !5729
  %9 = shl nuw i32 1, %8, !dbg !5737
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5738
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !5739
  store volatile i32 %9, i32* %11, align 4, !dbg !5740
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5741
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !5742
  store volatile i32 %9, i32* %13, align 4, !dbg !5743
  br label %14, !dbg !5744

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5729
  ret i32 %15, !dbg !5745
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !5746 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5748, metadata !DIExpression()), !dbg !5751
  %2 = icmp ugt i32 %0, 48, !dbg !5752
  br i1 %2, label %14, label %3, !dbg !5754

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5755
  %5 = icmp eq i32 %4, 0, !dbg !5755
  br i1 %5, label %14, label %6, !dbg !5756

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5757
  call void @llvm.dbg.value(metadata i32 %7, metadata !5749, metadata !DIExpression()), !dbg !5751
  %8 = and i32 %0, 31, !dbg !5758
  call void @llvm.dbg.value(metadata i32 %8, metadata !5750, metadata !DIExpression()), !dbg !5751
  %9 = shl nuw i32 1, %8, !dbg !5759
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5760
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !5761
  store volatile i32 %9, i32* %11, align 4, !dbg !5762
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5763
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !5764
  store volatile i32 %9, i32* %13, align 4, !dbg !5765
  br label %14, !dbg !5766

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5751
  ret i32 %15, !dbg !5767
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !5768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5770, metadata !DIExpression()), !dbg !5773
  %2 = icmp ugt i32 %0, 48, !dbg !5774
  br i1 %2, label %12, label %3, !dbg !5776

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5777
  %5 = icmp eq i32 %4, 0, !dbg !5777
  br i1 %5, label %12, label %6, !dbg !5778

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !5779
  call void @llvm.dbg.value(metadata i32 %7, metadata !5771, metadata !DIExpression()), !dbg !5773
  %8 = and i32 %0, 31, !dbg !5780
  call void @llvm.dbg.value(metadata i32 %8, metadata !5772, metadata !DIExpression()), !dbg !5773
  %9 = shl nuw i32 1, %8, !dbg !5781
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5782
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !5783
  store volatile i32 %9, i32* %11, align 4, !dbg !5784
  br label %12, !dbg !5785

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !5773
  ret i32 %13, !dbg !5786
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5793, metadata !DIExpression()), !dbg !5795
  call void @llvm.dbg.value(metadata i32 %1, metadata !5794, metadata !DIExpression()), !dbg !5795
  %3 = icmp ugt i32 %0, 5, !dbg !5796
  br i1 %3, label %7, label %4, !dbg !5798

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5799
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !5800
  store volatile i32 %1, i32* %6, align 4, !dbg !5801
  br label %7, !dbg !5802

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !5795
  ret i32 %8, !dbg !5803
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !5804 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5808, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata i8 %1, metadata !5809, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata i8 %2, metadata !5810, metadata !DIExpression()), !dbg !5814
  call void @llvm.dbg.value(metadata i8 %3, metadata !5811, metadata !DIExpression()), !dbg !5814
  %5 = icmp ugt i32 %0, 48, !dbg !5815
  br i1 %5, label %30, label %6, !dbg !5817

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5818
  %8 = icmp eq i32 %7, 0, !dbg !5818
  br i1 %8, label %9, label %30, !dbg !5819

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !5820
  call void @llvm.dbg.value(metadata i32 %10, metadata !5812, metadata !DIExpression()), !dbg !5814
  %11 = and i32 %0, 31, !dbg !5821
  call void @llvm.dbg.value(metadata i32 %11, metadata !5813, metadata !DIExpression()), !dbg !5814
  %12 = icmp eq i8 %1, 0, !dbg !5822
  %13 = shl nuw i32 1, %11, !dbg !5824
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5824
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !5825
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !5825
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !5825
  store volatile i32 %13, i32* %17, align 4, !dbg !5824
  %18 = icmp eq i8 %2, 0, !dbg !5826
  %19 = shl nuw i32 1, %11, !dbg !5828
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5828
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !5829
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !5829
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !5829
  store volatile i32 %19, i32* %23, align 4, !dbg !5828
  %24 = icmp eq i8 %3, 0, !dbg !5830
  %25 = shl nuw i32 1, %11, !dbg !5832
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5832
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !5833
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !5833
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !5833
  store volatile i32 %25, i32* %29, align 4, !dbg !5832
  br label %30, !dbg !5834

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !5814
  ret i32 %31, !dbg !5834
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !5835 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5837, metadata !DIExpression()), !dbg !5844
  %2 = icmp ugt i32 %0, 48, !dbg !5845
  br i1 %2, label %40, label %3, !dbg !5847

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5848
  call void @llvm.dbg.value(metadata i32 %4, metadata !5838, metadata !DIExpression()), !dbg !5844
  %5 = and i32 %0, 31, !dbg !5849
  call void @llvm.dbg.value(metadata i32 %5, metadata !5841, metadata !DIExpression()), !dbg !5844
  %6 = lshr i32 %0, 4, !dbg !5850
  call void @llvm.dbg.value(metadata i32 %6, metadata !5839, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i32 %0, metadata !5842, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5844
  %7 = lshr i32 %0, 3, !dbg !5851
  call void @llvm.dbg.value(metadata i32 %7, metadata !5840, metadata !DIExpression()), !dbg !5844
  call void @llvm.dbg.value(metadata i32 %0, metadata !5843, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5844
  %8 = shl nuw nsw i32 %0, 2, !dbg !5852
  %9 = and i32 %8, 28, !dbg !5852
  %10 = shl nuw i32 15, %9, !dbg !5853
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5854
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !5855
  store volatile i32 %10, i32* %12, align 4, !dbg !5856
  %13 = shl nuw i32 1, %5, !dbg !5857
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5858
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !5859
  store volatile i32 %13, i32* %15, align 4, !dbg !5860
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5861
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !5862
  store volatile i32 %13, i32* %17, align 4, !dbg !5863
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5864
  %19 = icmp eq i32 %18, 0, !dbg !5864
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5866
  br i1 %19, label %23, label %21, !dbg !5867

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !5868
  br label %29, !dbg !5870

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !5871
  store volatile i32 %13, i32* %24, align 4, !dbg !5873
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5874
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !5875
  store volatile i32 %13, i32* %26, align 4, !dbg !5876
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5877
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !5878
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !5866
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5879
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !5880
  store volatile i32 %13, i32* %32, align 4, !dbg !5881
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5882
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !5883
  store volatile i32 %13, i32* %34, align 4, !dbg !5884
  %35 = shl nuw nsw i32 %0, 1, !dbg !5885
  %36 = and i32 %35, 30, !dbg !5885
  %37 = shl nuw i32 3, %36, !dbg !5886
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5887
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !5888
  store volatile i32 %37, i32* %39, align 4, !dbg !5889
  br label %40, !dbg !5890

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !5844
  ret i32 %41, !dbg !5891
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !5892 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5894, metadata !DIExpression()), !dbg !5899
  %2 = icmp ugt i32 %0, 48, !dbg !5900
  br i1 %2, label %34, label %3, !dbg !5902

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !5903
  call void @llvm.dbg.value(metadata i32 %4, metadata !5895, metadata !DIExpression()), !dbg !5899
  %5 = and i32 %0, 31, !dbg !5904
  call void @llvm.dbg.value(metadata i32 %5, metadata !5897, metadata !DIExpression()), !dbg !5899
  %6 = lshr i32 %0, 3, !dbg !5905
  call void @llvm.dbg.value(metadata i32 %6, metadata !5896, metadata !DIExpression()), !dbg !5899
  call void @llvm.dbg.value(metadata i32 %0, metadata !5898, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !5899
  %7 = shl nuw nsw i32 %0, 2, !dbg !5906
  %8 = and i32 %7, 28, !dbg !5906
  %9 = shl nuw i32 15, %8, !dbg !5907
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5908
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !5909
  store volatile i32 %9, i32* %11, align 4, !dbg !5910
  %12 = shl nuw i32 1, %5, !dbg !5911
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5912
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !5913
  store volatile i32 %12, i32* %14, align 4, !dbg !5914
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !5915
  %16 = icmp eq i32 %15, 0, !dbg !5915
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5917
  br i1 %16, label %22, label %18, !dbg !5918

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !5919
  store volatile i32 %12, i32* %19, align 4, !dbg !5921
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5922
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !5923
  br label %28, !dbg !5924

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !5925
  store volatile i32 %12, i32* %23, align 4, !dbg !5927
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5928
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !5929
  store volatile i32 %12, i32* %25, align 4, !dbg !5930
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5931
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !5932
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !5917
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5933
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !5934
  store volatile i32 %12, i32* %31, align 4, !dbg !5935
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5936
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !5937
  store volatile i32 %12, i32* %33, align 4, !dbg !5938
  br label %34, !dbg !5939

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !5899
  ret i32 %35, !dbg !5940
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5941 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5945, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata i32 %1, metadata !5946, metadata !DIExpression()), !dbg !5949
  %3 = icmp ugt i32 %0, 48, !dbg !5950
  br i1 %3, label %14, label %4, !dbg !5952

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !5953
  call void @llvm.dbg.value(metadata i32 %5, metadata !5947, metadata !DIExpression()), !dbg !5949
  call void @llvm.dbg.value(metadata i32 %0, metadata !5948, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5949
  %6 = shl nuw nsw i32 %0, 1, !dbg !5954
  %7 = and i32 %6, 30, !dbg !5954
  %8 = shl nuw i32 3, %7, !dbg !5955
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5956
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !5957
  store volatile i32 %8, i32* %10, align 4, !dbg !5958
  %11 = shl i32 %1, %7, !dbg !5959
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5960
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !5961
  store volatile i32 %11, i32* %13, align 4, !dbg !5962
  br label %14, !dbg !5963

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !5949
  ret i32 %15, !dbg !5964
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !5965 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5970, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata i32* %1, metadata !5971, metadata !DIExpression()), !dbg !5975
  %3 = icmp ugt i32 %0, 48, !dbg !5976
  br i1 %3, label %18, label %4, !dbg !5978

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !5979
  br i1 %5, label %18, label %6, !dbg !5981

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !5982
  call void @llvm.dbg.value(metadata i32 %7, metadata !5972, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata i32 %0, metadata !5973, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !5975
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !5983
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !5984
  %10 = load volatile i32, i32* %9, align 4, !dbg !5984
  call void @llvm.dbg.value(metadata i32 %10, metadata !5974, metadata !DIExpression()), !dbg !5975
  %11 = shl nuw nsw i32 %0, 1, !dbg !5985
  %12 = and i32 %11, 30, !dbg !5985
  %13 = shl nuw i32 3, %12, !dbg !5986
  %14 = and i32 %10, %13, !dbg !5987
  call void @llvm.dbg.value(metadata i32 %14, metadata !5974, metadata !DIExpression()), !dbg !5975
  %15 = lshr i32 %14, %12, !dbg !5988
  call void @llvm.dbg.value(metadata i32 %15, metadata !5974, metadata !DIExpression()), !dbg !5975
  %16 = shl i32 %15, 2, !dbg !5989
  %17 = add i32 %16, 4, !dbg !5989
  store i32 %17, i32* %1, align 4, !dbg !5990
  br label %18, !dbg !5991

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !5975
  ret i32 %19, !dbg !5992
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !5993 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5997, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i1 %1, metadata !5998, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6060
  %4 = bitcast i32* %3 to i8*, !dbg !6061
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !6061
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6062
  %6 = load volatile i32, i32* %5, align 4, !dbg !6062
  %7 = icmp eq i32 %6, 2, !dbg !6064
  br i1 %7, label %9, label %8, !dbg !6065

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6066
  unreachable, !dbg !6066

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6068
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !6068
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !6003, metadata !DIExpression()), !dbg !6060
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6069
  call void @llvm.dbg.value(metadata i32 %12, metadata !5999, metadata !DIExpression()), !dbg !6060
  br i1 %1, label %13, label %14, !dbg !6070

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !6071
  br label %14, !dbg !6074

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !6000, metadata !DIExpression(DW_OP_deref)), !dbg !6060
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !6075
  call void @llvm.dbg.value(metadata i32 %15, metadata !6059, metadata !DIExpression()), !dbg !6060
  %16 = icmp eq i32 %15, 0, !dbg !6076
  br i1 %16, label %18, label %17, !dbg !6078

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6079
  unreachable, !dbg !6079

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !6081
  call void @llvm.dbg.value(metadata i32 %19, metadata !6000, metadata !DIExpression()), !dbg !6060
  %20 = icmp eq i32 %19, 0, !dbg !6083
  br i1 %20, label %43, label %21, !dbg !6084

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !6085
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !6085
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !6001, metadata !DIExpression()), !dbg !6060
  call void @llvm.dbg.value(metadata i8* undef, metadata !6002, metadata !DIExpression()), !dbg !6060
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !6086
  br i1 %24, label %25, label %26, !dbg !6088

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6089
  unreachable, !dbg !6089

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !6091
  %28 = load i8*, i8** %27, align 4, !dbg !6091
  call void @llvm.dbg.value(metadata i8* %28, metadata !6002, metadata !DIExpression()), !dbg !6060
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !6092
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !6093
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !6094
  call void @llvm.dbg.value(metadata i32* %3, metadata !6000, metadata !DIExpression(DW_OP_deref)), !dbg !6060
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !6095
  call void @llvm.dbg.value(metadata i32 %31, metadata !6059, metadata !DIExpression()), !dbg !6060
  %32 = icmp eq i32 %31, 0, !dbg !6096
  br i1 %32, label %34, label %33, !dbg !6098

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6099
  unreachable, !dbg !6099

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !6101
  call void @llvm.dbg.value(metadata i32 %35, metadata !6000, metadata !DIExpression()), !dbg !6060
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !6103
  %37 = load i32, i32* %36, align 4, !dbg !6103
  %38 = icmp ult i32 %35, %37, !dbg !6104
  br i1 %38, label %43, label %39, !dbg !6105

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !6106
  call void @llvm.dbg.value(metadata i32 %40, metadata !6059, metadata !DIExpression()), !dbg !6060
  %41 = icmp eq i32 %40, 0, !dbg !6108
  br i1 %41, label %43, label %42, !dbg !6110

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6111
  unreachable, !dbg !6111

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !6113
  ret void, !dbg !6113
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !6114 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6116, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i1 %1, metadata !6117, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6124
  %4 = bitcast i32* %3 to i8*, !dbg !6125
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !6125
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6126
  %6 = load volatile i32, i32* %5, align 4, !dbg !6126
  %7 = icmp eq i32 %6, 2, !dbg !6128
  br i1 %7, label %9, label %8, !dbg !6129

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6130
  unreachable, !dbg !6130

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6132
  call void @llvm.dbg.value(metadata i32 %10, metadata !6118, metadata !DIExpression()), !dbg !6124
  br i1 %1, label %36, label %11, !dbg !6133

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !6134
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !6134
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !6122, metadata !DIExpression()), !dbg !6124
  call void @llvm.dbg.value(metadata i8* undef, metadata !6123, metadata !DIExpression()), !dbg !6124
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !6137
  br i1 %14, label %15, label %16, !dbg !6139

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6140
  unreachable, !dbg !6140

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !6142
  %18 = load i8*, i8** %17, align 4, !dbg !6142
  call void @llvm.dbg.value(metadata i8* %18, metadata !6123, metadata !DIExpression()), !dbg !6124
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !6143
  tail call void %13(i32 noundef 2, i8* noundef %18) #20, !dbg !6144
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !6145
  call void @llvm.dbg.value(metadata i32* %3, metadata !6121, metadata !DIExpression(DW_OP_deref)), !dbg !6124
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !6146
  call void @llvm.dbg.value(metadata i32 %21, metadata !6119, metadata !DIExpression()), !dbg !6124
  %22 = icmp eq i32 %21, 0, !dbg !6147
  br i1 %22, label %24, label %23, !dbg !6149

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6150
  unreachable, !dbg !6150

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !6152
  %26 = load i32, i32* %25, align 4, !dbg !6152
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !6153
  %28 = load i32, i32* %27, align 4, !dbg !6153
  %29 = sub i32 %26, %28, !dbg !6154
  call void @llvm.dbg.value(metadata i32 %29, metadata !6120, metadata !DIExpression()), !dbg !6124
  %30 = load i32, i32* %3, align 4, !dbg !6155
  call void @llvm.dbg.value(metadata i32 %30, metadata !6121, metadata !DIExpression()), !dbg !6124
  %31 = icmp ult i32 %30, %29, !dbg !6157
  br i1 %31, label %36, label %32, !dbg !6158

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !6159
  call void @llvm.dbg.value(metadata i32 %33, metadata !6119, metadata !DIExpression()), !dbg !6124
  %34 = icmp eq i32 %33, 0, !dbg !6161
  br i1 %34, label %36, label %35, !dbg !6163

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6164
  unreachable, !dbg !6164

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !6166
  ret void, !dbg !6166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !6167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6171, metadata !DIExpression()), !dbg !6175
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6176
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !6176
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !6172, metadata !DIExpression()), !dbg !6175
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !6177
  %5 = icmp eq i32 %4, 0, !dbg !6177
  br i1 %5, label %6, label %14, !dbg !6179

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !6180
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !6182
  %7 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !6183
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !6183
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !6173, metadata !DIExpression()), !dbg !6175
  call void @llvm.dbg.value(metadata i8* undef, metadata !6174, metadata !DIExpression()), !dbg !6175
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !6184
  br i1 %9, label %10, label %11, !dbg !6186

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6187
  unreachable, !dbg !6187

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !6189
  %13 = load i8*, i8** %12, align 4, !dbg !6189
  call void @llvm.dbg.value(metadata i8* %13, metadata !6174, metadata !DIExpression()), !dbg !6175
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !6190
  br label %14, !dbg !6191

14:                                               ; preds = %11, %1
  ret void, !dbg !6192
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6193 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6199, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.value(metadata i32 %1, metadata !6200, metadata !DIExpression()), !dbg !6204
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6205
  br i1 %3, label %4, label %16, !dbg !6207

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !6208
  br i1 %5, label %6, label %16, !dbg !6209

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6210
  %8 = load volatile i32, i32* %7, align 4, !dbg !6210
  %9 = icmp eq i32 %8, 0, !dbg !6212
  br i1 %9, label %16, label %10, !dbg !6213

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6214
  call void @llvm.dbg.value(metadata i32 %11, metadata !6202, metadata !DIExpression()), !dbg !6204
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !6215
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6216
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !6216
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !6203, metadata !DIExpression()), !dbg !6204
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !6217
  %15 = load i32, i32* %14, align 4, !dbg !6217
  call void @llvm.dbg.value(metadata i32 %15, metadata !6201, metadata !DIExpression()), !dbg !6204
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #20, !dbg !6218
  br label %16, !dbg !6219

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !6204
  ret i32 %17, !dbg !6220
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !6221 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6225, metadata !DIExpression()), !dbg !6226
  %2 = icmp ult i32 %0, 4, !dbg !6227
  ret i1 %2, !dbg !6228
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !6229 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6233, metadata !DIExpression()), !dbg !6234
  %2 = icmp ult i32 %0, 13, !dbg !6235
  ret i1 %2, !dbg !6236
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6253, metadata !DIExpression()), !dbg !6257
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6254, metadata !DIExpression()), !dbg !6257
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6258
  br i1 %3, label %4, label %23, !dbg !6260

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !6261
  br i1 %5, label %6, label %23, !dbg !6262

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6263
  %8 = load volatile i32, i32* %7, align 4, !dbg !6263
  %9 = icmp eq i32 %8, 0, !dbg !6265
  br i1 %9, label %23, label %10, !dbg !6266

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6267
  call void @llvm.dbg.value(metadata i32 %11, metadata !6255, metadata !DIExpression()), !dbg !6257
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !6268
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6269
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !6269
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !6256, metadata !DIExpression()), !dbg !6257
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6270
  %15 = load i32, i32* %14, align 4, !dbg !6270
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #21, !dbg !6271
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6272
  %18 = load i32, i32* %17, align 4, !dbg !6272
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6273
  %20 = load i32, i32* %19, align 4, !dbg !6273
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6274
  %22 = load i32, i32* %21, align 4, !dbg !6274
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #20, !dbg !6275
  br label %23, !dbg !6276

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !6257
  ret i32 %24, !dbg !6277
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !6278 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !6282, metadata !DIExpression()), !dbg !6283
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !6284
  %3 = load i32, i32* %2, align 4, !dbg !6284
  %4 = icmp ult i32 %3, 13, !dbg !6285
  br i1 %4, label %5, label %17, !dbg !6286

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !6287
  %7 = load i32, i32* %6, align 4, !dbg !6287
  %8 = icmp ult i32 %7, 4, !dbg !6288
  br i1 %8, label %9, label %17, !dbg !6289

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !6290
  %11 = load i32, i32* %10, align 4, !dbg !6290
  %12 = icmp ult i32 %11, 2, !dbg !6291
  br i1 %12, label %13, label %17, !dbg !6292

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !6293
  %15 = load i32, i32* %14, align 4, !dbg !6293
  %16 = icmp ult i32 %15, 3, !dbg !6294
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !6283
  ret i1 %18, !dbg !6295
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6296 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6301, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6302, metadata !DIExpression()), !dbg !6308
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6309
  br i1 %3, label %4, label %41, !dbg !6311

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !6312
  br i1 %5, label %6, label %41, !dbg !6313

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6314
  call void @llvm.dbg.value(metadata i32 %7, metadata !6306, metadata !DIExpression()), !dbg !6308
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6315
  %9 = load volatile i32, i32* %8, align 4, !dbg !6315
  %10 = icmp eq i32 %9, 0, !dbg !6317
  br i1 %10, label %12, label %11, !dbg !6318

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6319
  br label %41, !dbg !6321

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !6322
  br i1 %13, label %22, label %14, !dbg !6324

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !6304, metadata !DIExpression()), !dbg !6308
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !6325
  store volatile i32 0, i32* %16, align 4, !dbg !6330
  %17 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !6331
  store i8* null, i8** %17, align 4, !dbg !6332
  %18 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !6333
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !6334
  %19 = add nuw nsw i32 %15, 1, !dbg !6335
  call void @llvm.dbg.value(metadata i32 %19, metadata !6304, metadata !DIExpression()), !dbg !6308
  %20 = icmp eq i32 %19, 4, !dbg !6336
  br i1 %20, label %21, label %14, !dbg !6337, !llvm.loop !6338

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !6340
  br label %22, !dbg !6341

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !6342
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6343
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !6344
  %24 = load i32, i32* %23, align 4, !dbg !6344
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #20, !dbg !6345
  call void @llvm.dbg.value(metadata i32 %25, metadata !6307, metadata !DIExpression()), !dbg !6308
  %26 = icmp eq i32 %25, 0, !dbg !6346
  br i1 %26, label %28, label %27, !dbg !6348

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6349
  unreachable, !dbg !6349

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6351
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !6351
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !6303, metadata !DIExpression()), !dbg !6308
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !6352
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6353
  %32 = load i32, i32* %31, align 4, !dbg !6353
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !6354
  %34 = load i32, i32* %33, align 4, !dbg !6354
  call void @llvm.dbg.value(metadata i32 %34, metadata !6305, metadata !DIExpression()), !dbg !6308
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #20, !dbg !6355
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6356
  %36 = load i32, i32* %35, align 4, !dbg !6356
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6357
  %38 = load i32, i32* %37, align 4, !dbg !6357
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6358
  %40 = load i32, i32* %39, align 4, !dbg !6358
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #20, !dbg !6359
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !6360
  br label %41, !dbg !6361

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !6308
  ret i32 %42, !dbg !6362
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6363 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6367, metadata !DIExpression()), !dbg !6374
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6375
  br i1 %2, label %3, label %54, !dbg !6377

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6378
  call void @llvm.dbg.value(metadata i32 %4, metadata !6371, metadata !DIExpression()), !dbg !6374
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6379
  %6 = load volatile i32, i32* %5, align 4, !dbg !6379
  %7 = icmp eq i32 %6, 0, !dbg !6381
  br i1 %7, label %52, label %8, !dbg !6382

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6383
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !6383
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !6368, metadata !DIExpression()), !dbg !6374
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !6384
  %11 = load volatile i32, i32* %5, align 4, !dbg !6385
  %12 = icmp eq i32 %11, 2, !dbg !6387
  br i1 %12, label %13, label %43, !dbg !6388

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6389
  call void @llvm.dbg.value(metadata i32 %14, metadata !6369, metadata !DIExpression()), !dbg !6374
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6391
  call void @llvm.dbg.value(metadata i32 %15, metadata !6370, metadata !DIExpression()), !dbg !6374
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !6392
  call void @llvm.dbg.value(metadata i32 %16, metadata !6372, metadata !DIExpression()), !dbg !6374
  %17 = icmp eq i32 %16, 0, !dbg !6393
  br i1 %17, label %19, label %18, !dbg !6395

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6396
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6398
  unreachable, !dbg !6398

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !6399
  call void @llvm.dbg.value(metadata i32 %20, metadata !6372, metadata !DIExpression()), !dbg !6374
  %21 = icmp eq i32 %20, 0, !dbg !6400
  br i1 %21, label %23, label %22, !dbg !6402

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6403
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6405
  unreachable, !dbg !6405

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !6406
  call void @llvm.dbg.value(metadata i32 %24, metadata !6372, metadata !DIExpression()), !dbg !6374
  %25 = icmp eq i32 %24, 0, !dbg !6407
  br i1 %25, label %27, label %26, !dbg !6409

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6410
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6412
  unreachable, !dbg !6412

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !6413
  call void @llvm.dbg.value(metadata i32 %28, metadata !6372, metadata !DIExpression()), !dbg !6374
  %29 = icmp eq i32 %28, 0, !dbg !6414
  br i1 %29, label %31, label %30, !dbg !6416

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6417
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6419
  unreachable, !dbg !6419

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !6420
  call void @llvm.dbg.value(metadata i32 %32, metadata !6372, metadata !DIExpression()), !dbg !6374
  %33 = icmp eq i32 %32, 0, !dbg !6421
  br i1 %33, label %35, label %34, !dbg !6423

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6424
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6426
  unreachable, !dbg !6426

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !6427
  call void @llvm.dbg.value(metadata i32 %36, metadata !6372, metadata !DIExpression()), !dbg !6374
  %37 = icmp eq i32 %36, 0, !dbg !6428
  br i1 %37, label %39, label %38, !dbg !6430

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6431
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6433
  unreachable, !dbg !6433

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6434
  %41 = load i32, i32* %40, align 4, !dbg !6434
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !6435
  br label %43, !dbg !6436

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !6437
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !6438
  %45 = load i32, i32* %44, align 4, !dbg !6438
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !6439
  call void @llvm.dbg.value(metadata i32 %46, metadata !6373, metadata !DIExpression()), !dbg !6374
  %47 = icmp eq i32 %46, 0, !dbg !6440
  br i1 %47, label %49, label %48, !dbg !6442

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6443
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6445
  unreachable, !dbg !6445

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !6446
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !6447
  %51 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !6448
  store i8* null, i8** %51, align 4, !dbg !6449
  store volatile i32 0, i32* %5, align 4, !dbg !6450
  br label %52, !dbg !6451

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !6374
  br label %54, !dbg !6452

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !6374
  ret i32 %55, !dbg !6452
}

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !6453 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6457, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.value(metadata i8 %1, metadata !6458, metadata !DIExpression()), !dbg !6460
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6461
  br i1 %3, label %4, label %11, !dbg !6463

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6464
  %6 = load volatile i32, i32* %5, align 4, !dbg !6464
  %7 = icmp eq i32 %6, 1, !dbg !6466
  br i1 %7, label %8, label %11, !dbg !6467

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6468
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !6468
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !6459, metadata !DIExpression()), !dbg !6460
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !6469
  br label %11, !dbg !6470

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !6470
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6471 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6477, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata i8* %1, metadata !6478, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata i32 %2, metadata !6479, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata i32 0, metadata !6480, metadata !DIExpression()), !dbg !6481
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6482
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !6484
  br i1 %6, label %7, label %20, !dbg !6484

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6485
  %9 = load volatile i32, i32* %8, align 4, !dbg !6485
  %10 = icmp ne i32 %9, 1, !dbg !6487
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6488
  call void @llvm.dbg.value(metadata i32 0, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata i8* %1, metadata !6478, metadata !DIExpression()), !dbg !6481
  br i1 %12, label %20, label %13, !dbg !6488

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.value(metadata i8* %15, metadata !6478, metadata !DIExpression()), !dbg !6481
  %16 = load i8, i8* %15, align 1, !dbg !6489
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !6493
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !6494
  call void @llvm.dbg.value(metadata i8* %17, metadata !6478, metadata !DIExpression()), !dbg !6481
  %18 = add nuw i32 %14, 1, !dbg !6495
  call void @llvm.dbg.value(metadata i32 %18, metadata !6480, metadata !DIExpression()), !dbg !6481
  %19 = icmp eq i32 %18, %2, !dbg !6496
  br i1 %19, label %20, label %13, !dbg !6497, !llvm.loop !6498

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !6481
  ret i32 %21, !dbg !6500
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6501 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6503, metadata !DIExpression()), !dbg !6511
  call void @llvm.dbg.value(metadata i8* %1, metadata !6504, metadata !DIExpression()), !dbg !6511
  call void @llvm.dbg.value(metadata i32 %2, metadata !6505, metadata !DIExpression()), !dbg !6511
  %5 = bitcast i32* %4 to i8*, !dbg !6512
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6512
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6513
  %7 = xor i1 %6, true, !dbg !6515
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !6515
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !6515
  br i1 %11, label %45, label %12, !dbg !6515

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6516
  %14 = load volatile i32, i32* %13, align 4, !dbg !6516
  %15 = icmp eq i32 %14, 2, !dbg !6518
  br i1 %15, label %16, label %45, !dbg !6519

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6520
  call void @llvm.dbg.value(metadata i32 %17, metadata !6506, metadata !DIExpression()), !dbg !6511
  call void @llvm.dbg.value(metadata i32* %4, metadata !6509, metadata !DIExpression(DW_OP_deref)), !dbg !6511
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !6521
  call void @llvm.dbg.value(metadata i32 %18, metadata !6510, metadata !DIExpression()), !dbg !6511
  %19 = icmp eq i32 %18, 0, !dbg !6522
  br i1 %19, label %21, label %20, !dbg !6524

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6525
  unreachable, !dbg !6525

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !6527
  call void @llvm.dbg.value(metadata i32 %22, metadata !6509, metadata !DIExpression()), !dbg !6511
  %23 = icmp ult i32 %22, %2, !dbg !6529
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !6508, metadata !DIExpression()), !dbg !6511
  call void @llvm.dbg.value(metadata i32 0, metadata !6507, metadata !DIExpression()), !dbg !6511
  %25 = icmp eq i32 %24, 0, !dbg !6530
  br i1 %25, label %38, label %28, !dbg !6533

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !6507, metadata !DIExpression()), !dbg !6511
  %27 = icmp eq i32 %34, %24, !dbg !6530
  br i1 %27, label %36, label %28, !dbg !6533, !llvm.loop !6534

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !6507, metadata !DIExpression()), !dbg !6511
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !6536
  %31 = load i8, i8* %30, align 1, !dbg !6536
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #20, !dbg !6538
  call void @llvm.dbg.value(metadata i32 %32, metadata !6510, metadata !DIExpression()), !dbg !6511
  %33 = icmp eq i32 %32, 0, !dbg !6539
  %34 = add nuw i32 %29, 1, !dbg !6541
  call void @llvm.dbg.value(metadata i32 %34, metadata !6507, metadata !DIExpression()), !dbg !6511
  br i1 %33, label %26, label %35, !dbg !6542

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6543
  unreachable, !dbg !6543

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !6545
  br label %38, !dbg !6545

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !6545
  call void @llvm.dbg.value(metadata i32 %39, metadata !6509, metadata !DIExpression()), !dbg !6511
  %40 = icmp eq i32 %24, %39, !dbg !6547
  br i1 %40, label %41, label %45, !dbg !6548

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !6549
  call void @llvm.dbg.value(metadata i32 %42, metadata !6510, metadata !DIExpression()), !dbg !6511
  %43 = icmp eq i32 %42, 0, !dbg !6551
  br i1 %43, label %45, label %44, !dbg !6553

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6554
  unreachable, !dbg !6554

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !6511
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6556
  ret i32 %46, !dbg !6556
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !6557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6561, metadata !DIExpression()), !dbg !6564
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6565
  br i1 %2, label %3, label %11, !dbg !6567

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6568
  %5 = load volatile i32, i32* %4, align 4, !dbg !6568
  %6 = icmp eq i32 %5, 1, !dbg !6570
  br i1 %6, label %7, label %11, !dbg !6571

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6572
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6572
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6563, metadata !DIExpression()), !dbg !6564
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6573
  call void @llvm.dbg.value(metadata i8 %10, metadata !6562, metadata !DIExpression()), !dbg !6564
  br label %11, !dbg !6574

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !6564
  ret i8 %12, !dbg !6575
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !6576 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6580, metadata !DIExpression()), !dbg !6583
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6584
  br i1 %2, label %3, label %11, !dbg !6586

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6587
  %5 = load volatile i32, i32* %4, align 4, !dbg !6587
  %6 = icmp eq i32 %5, 1, !dbg !6589
  br i1 %6, label %7, label %11, !dbg !6590

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6591
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6591
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6582, metadata !DIExpression()), !dbg !6583
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6592
  call void @llvm.dbg.value(metadata i32 %10, metadata !6581, metadata !DIExpression()), !dbg !6583
  br label %11, !dbg !6593

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !6583
  ret i32 %12, !dbg !6594
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6599, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.value(metadata i8* %1, metadata !6600, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.value(metadata i32 %2, metadata !6601, metadata !DIExpression()), !dbg !6604
  call void @llvm.dbg.value(metadata i8* %1, metadata !6603, metadata !DIExpression()), !dbg !6604
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6605
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !6607
  br i1 %6, label %7, label %19, !dbg !6607

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6608
  %9 = load volatile i32, i32* %8, align 4, !dbg !6608
  %10 = icmp ne i32 %9, 1, !dbg !6610
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !6611
  call void @llvm.dbg.value(metadata i32 0, metadata !6602, metadata !DIExpression()), !dbg !6604
  br i1 %12, label %19, label %13, !dbg !6611

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !6602, metadata !DIExpression()), !dbg !6604
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !6612
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !6616
  store i8 %15, i8* %16, align 1, !dbg !6617
  %17 = add nuw i32 %14, 1, !dbg !6618
  call void @llvm.dbg.value(metadata i32 %17, metadata !6602, metadata !DIExpression()), !dbg !6604
  %18 = icmp eq i32 %17, %2, !dbg !6619
  br i1 %18, label %19, label %13, !dbg !6620, !llvm.loop !6621

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !6604
  ret i32 %20, !dbg !6623
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6624 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6626, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i8* %1, metadata !6627, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i32 %2, metadata !6628, metadata !DIExpression()), !dbg !6634
  %5 = bitcast i32* %4 to i8*, !dbg !6635
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6635
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6636
  %7 = xor i1 %6, true, !dbg !6638
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !6638
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !6638
  br i1 %11, label %44, label %12, !dbg !6638

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6639
  %14 = load volatile i32, i32* %13, align 4, !dbg !6639
  %15 = icmp eq i32 %14, 2, !dbg !6641
  br i1 %15, label %16, label %44, !dbg !6642

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6643
  call void @llvm.dbg.value(metadata i32 %17, metadata !6629, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i32* %4, metadata !6631, metadata !DIExpression(DW_OP_deref)), !dbg !6634
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !6644
  call void @llvm.dbg.value(metadata i32 %18, metadata !6633, metadata !DIExpression()), !dbg !6634
  %19 = icmp eq i32 %18, 0, !dbg !6645
  br i1 %19, label %21, label %20, !dbg !6647

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6648
  unreachable, !dbg !6648

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !6650
  call void @llvm.dbg.value(metadata i32 %22, metadata !6631, metadata !DIExpression()), !dbg !6634
  %23 = icmp ult i32 %22, %2, !dbg !6652
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !6630, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.value(metadata i32 0, metadata !6632, metadata !DIExpression()), !dbg !6634
  %25 = icmp eq i32 %24, 0, !dbg !6653
  br i1 %25, label %37, label %28, !dbg !6656

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !6632, metadata !DIExpression()), !dbg !6634
  %27 = icmp eq i32 %33, %24, !dbg !6653
  br i1 %27, label %35, label %28, !dbg !6656, !llvm.loop !6657

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !6632, metadata !DIExpression()), !dbg !6634
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !6659
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !6661
  call void @llvm.dbg.value(metadata i32 %31, metadata !6633, metadata !DIExpression()), !dbg !6634
  %32 = icmp eq i32 %31, 0, !dbg !6662
  %33 = add nuw i32 %29, 1, !dbg !6664
  call void @llvm.dbg.value(metadata i32 %33, metadata !6632, metadata !DIExpression()), !dbg !6634
  br i1 %32, label %26, label %34, !dbg !6665

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6666
  unreachable, !dbg !6666

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !6668
  br label %37, !dbg !6668

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !6668
  call void @llvm.dbg.value(metadata i32 %38, metadata !6631, metadata !DIExpression()), !dbg !6634
  %39 = icmp eq i32 %24, %38, !dbg !6670
  br i1 %39, label %40, label %44, !dbg !6671

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !6672
  call void @llvm.dbg.value(metadata i32 %41, metadata !6633, metadata !DIExpression()), !dbg !6634
  %42 = icmp eq i32 %41, 0, !dbg !6674
  br i1 %42, label %44, label %43, !dbg !6676

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6677
  unreachable, !dbg !6677

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !6634
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !6679
  ret i32 %45, !dbg !6679
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6680 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6684, metadata !DIExpression()), !dbg !6692
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !6685, metadata !DIExpression()), !dbg !6692
  call void @llvm.dbg.value(metadata i8* %2, metadata !6686, metadata !DIExpression()), !dbg !6692
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6693
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !6695
  br i1 %6, label %7, label %39, !dbg !6695

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6696
  call void @llvm.dbg.value(metadata i32 %8, metadata !6689, metadata !DIExpression()), !dbg !6692
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6697
  %10 = load volatile i32, i32* %9, align 4, !dbg !6697
  %11 = icmp eq i32 %10, 1, !dbg !6699
  br i1 %11, label %12, label %37, !dbg !6700

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6701
  call void @llvm.dbg.value(metadata i32 %13, metadata !6687, metadata !DIExpression()), !dbg !6692
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6702
  call void @llvm.dbg.value(metadata i32 %14, metadata !6688, metadata !DIExpression()), !dbg !6692
  %15 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !6703
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !6704
  %16 = getelementptr inbounds [4 x %struct.gdma_user_callback_t], [4 x %struct.gdma_user_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !6705
  store i8* %2, i8** %16, align 4, !dbg !6706
  %17 = shl i32 %0, 1, !dbg !6707
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !6708
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !6709
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !6710
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !6711
  call void @llvm.dbg.value(metadata i32 %20, metadata !6690, metadata !DIExpression()), !dbg !6692
  %21 = icmp eq i32 %20, 0, !dbg !6712
  br i1 %21, label %23, label %22, !dbg !6714

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6715
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6717
  unreachable, !dbg !6717

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !6718
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !6719
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !6720
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !6721
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !6722
  call void @llvm.dbg.value(metadata i32 %27, metadata !6690, metadata !DIExpression()), !dbg !6692
  %28 = icmp eq i32 %27, 0, !dbg !6723
  br i1 %28, label %30, label %29, !dbg !6725

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6726
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6728
  unreachable, !dbg !6728

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6729
  %32 = load i32, i32* %31, align 4, !dbg !6729
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !6730
  call void @llvm.dbg.value(metadata i32 %33, metadata !6691, metadata !DIExpression()), !dbg !6692
  %34 = icmp eq i32 %33, 0, !dbg !6731
  br i1 %34, label %36, label %35, !dbg !6733

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6734
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6736
  unreachable, !dbg !6736

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !6737
  store volatile i32 2, i32* %9, align 4, !dbg !6738
  br label %37, !dbg !6739

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !6692
  br label %39, !dbg !6740

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !6692
  ret i32 %40, !dbg !6740
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !6741 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6743, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i8* %1, metadata !6744, metadata !DIExpression()), !dbg !6746
  call void @llvm.dbg.value(metadata i8* %1, metadata !6745, metadata !DIExpression()), !dbg !6746
  %3 = load i8, i8* %1, align 4, !dbg !6747, !range !2834
  %4 = icmp eq i8 %3, 0, !dbg !6747
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !6749
  %6 = bitcast i8* %5 to i32*, !dbg !6749
  %7 = load i32, i32* %6, align 4, !dbg !6749
  br i1 %4, label %9, label %8, !dbg !6750

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !6745, metadata !DIExpression()), !dbg !6746
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !6751
  br label %10, !dbg !6753

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !6754
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !6756
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !6757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6759, metadata !DIExpression()), !dbg !6764
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6765
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !6765
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !6760, metadata !DIExpression()), !dbg !6764
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6766
  call void @llvm.dbg.value(metadata i32 %4, metadata !6761, metadata !DIExpression()), !dbg !6764
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6767
  call void @llvm.dbg.value(metadata i32 %5, metadata !6762, metadata !DIExpression()), !dbg !6764
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !6768
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !6769
  %7 = load i32, i32* %6, align 4, !dbg !6769
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #20, !dbg !6770
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !6771
  call void @llvm.dbg.value(metadata i32 %9, metadata !6763, metadata !DIExpression()), !dbg !6764
  %10 = icmp eq i32 %9, 0, !dbg !6772
  br i1 %10, label %12, label %11, !dbg !6774

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6775
  unreachable, !dbg !6775

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !6777
  call void @llvm.dbg.value(metadata i32 %13, metadata !6763, metadata !DIExpression()), !dbg !6764
  %14 = icmp eq i32 %13, 0, !dbg !6778
  br i1 %14, label %16, label %15, !dbg !6780

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6781
  unreachable, !dbg !6781

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !6783
  call void @llvm.dbg.value(metadata i32 %17, metadata !6763, metadata !DIExpression()), !dbg !6764
  %18 = icmp eq i32 %17, 0, !dbg !6784
  br i1 %18, label %20, label %19, !dbg !6786

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6787
  unreachable, !dbg !6787

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !6789
  call void @llvm.dbg.value(metadata i32 %21, metadata !6763, metadata !DIExpression()), !dbg !6764
  %22 = icmp eq i32 %21, 0, !dbg !6790
  br i1 %22, label %24, label %23, !dbg !6792

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6793
  unreachable, !dbg !6793

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !6795
  ret void, !dbg !6796
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !6797 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6799, metadata !DIExpression()), !dbg !6803
  %3 = bitcast i32* %2 to i8*, !dbg !6804
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6804
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6805
  br i1 %4, label %5, label %16, !dbg !6807

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6808
  %7 = load volatile i32, i32* %6, align 4, !dbg !6808
  %8 = icmp eq i32 %7, 2, !dbg !6810
  br i1 %8, label %9, label %16, !dbg !6811

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6812
  call void @llvm.dbg.value(metadata i32 %10, metadata !6800, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.value(metadata i32* %2, metadata !6801, metadata !DIExpression(DW_OP_deref)), !dbg !6803
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !6813
  call void @llvm.dbg.value(metadata i32 %11, metadata !6802, metadata !DIExpression()), !dbg !6803
  %12 = icmp eq i32 %11, 0, !dbg !6814
  br i1 %12, label %14, label %13, !dbg !6816

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6817
  unreachable, !dbg !6817

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !6819
  call void @llvm.dbg.value(metadata i32 %15, metadata !6801, metadata !DIExpression()), !dbg !6803
  br label %16, !dbg !6820

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !6803
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6821
  ret i32 %17, !dbg !6821
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !6822 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6824, metadata !DIExpression()), !dbg !6828
  %3 = bitcast i32* %2 to i8*, !dbg !6829
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6829
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6830
  br i1 %4, label %5, label %16, !dbg !6832

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6833
  %7 = load volatile i32, i32* %6, align 4, !dbg !6833
  %8 = icmp eq i32 %7, 2, !dbg !6835
  br i1 %8, label %9, label %16, !dbg !6836

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6837
  call void @llvm.dbg.value(metadata i32 %10, metadata !6825, metadata !DIExpression()), !dbg !6828
  call void @llvm.dbg.value(metadata i32* %2, metadata !6826, metadata !DIExpression(DW_OP_deref)), !dbg !6828
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !6838
  call void @llvm.dbg.value(metadata i32 %11, metadata !6827, metadata !DIExpression()), !dbg !6828
  %12 = icmp eq i32 %11, 0, !dbg !6839
  br i1 %12, label %14, label %13, !dbg !6841

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6842
  unreachable, !dbg !6842

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !6844
  call void @llvm.dbg.value(metadata i32 %15, metadata !6826, metadata !DIExpression()), !dbg !6828
  br label %16, !dbg !6845

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !6828
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !6846
  ret i32 %17, !dbg !6846
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6849, metadata !DIExpression()), !dbg !6851
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6852
  br i1 %2, label %3, label %10, !dbg !6854

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6855
  %5 = load volatile i32, i32* %4, align 4, !dbg !6855
  %6 = icmp eq i32 %5, 0, !dbg !6857
  br i1 %6, label %10, label %7, !dbg !6858

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6859
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6859
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6850, metadata !DIExpression()), !dbg !6851
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6860
  br label %10, !dbg !6861

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6851
  ret i32 %11, !dbg !6862
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !6863 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6867, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8 %1, metadata !6868, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8 %2, metadata !6869, metadata !DIExpression()), !dbg !6872
  call void @llvm.dbg.value(metadata i8 %3, metadata !6870, metadata !DIExpression()), !dbg !6872
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6873
  br i1 %5, label %6, label %13, !dbg !6875

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6876
  %8 = load volatile i32, i32* %7, align 4, !dbg !6876
  %9 = icmp eq i32 %8, 0, !dbg !6878
  br i1 %9, label %13, label %10, !dbg !6879

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6880
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !6880
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !6871, metadata !DIExpression()), !dbg !6872
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !6881
  br label %13, !dbg !6882

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !6872
  ret i32 %14, !dbg !6883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !6884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6886, metadata !DIExpression()), !dbg !6888
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6889
  br i1 %2, label %3, label %10, !dbg !6891

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6892
  %5 = load volatile i32, i32* %4, align 4, !dbg !6892
  %6 = icmp eq i32 %5, 0, !dbg !6894
  br i1 %6, label %10, label %7, !dbg !6895

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !6896
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !6896
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !6887, metadata !DIExpression()), !dbg !6888
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !6897
  br label %10, !dbg !6898

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !6888
  ret i32 %11, !dbg !6899
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !6900 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !6906, metadata !DIExpression()), !dbg !6918
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !6907, metadata !DIExpression()), !dbg !6918
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !6919
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !6919
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !6909, metadata !DIExpression()), !dbg !6920
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !6921
  br i1 %5, label %6, label %101, !dbg !6923

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !6924
  %8 = load i8*, i8** %7, align 4, !dbg !6924
  %9 = icmp eq i8* %8, null, !dbg !6926
  br i1 %9, label %101, label %10, !dbg !6927

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !6928
  %12 = load i8*, i8** %11, align 4, !dbg !6928
  %13 = icmp eq i8* %12, null, !dbg !6929
  br i1 %13, label %101, label %14, !dbg !6930

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !6931
  %16 = load i32, i32* %15, align 4, !dbg !6931
  %17 = icmp ugt i32 %16, 131071, !dbg !6933
  br i1 %17, label %101, label %18, !dbg !6934

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !6935
  %20 = load i32, i32* %19, align 4, !dbg !6935
  %21 = icmp ugt i32 %20, 131071, !dbg !6936
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !6937
  br i1 %23, label %101, label %24, !dbg !6937

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !6938
  %26 = load i32, i32* %25, align 4, !dbg !6938
  %27 = icmp ugt i32 %26, 131071, !dbg !6940
  br i1 %27, label %101, label %28, !dbg !6941

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !6942
  %30 = load i32, i32* %29, align 4, !dbg !6942
  %31 = icmp ugt i32 %30, 131071, !dbg !6943
  br i1 %31, label %101, label %32, !dbg !6944

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !6945
  %34 = load i32, i32* %33, align 4, !dbg !6945
  %35 = icmp ugt i32 %34, 131071, !dbg !6946
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !6947
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !6947
  br i1 %39, label %101, label %40, !dbg !6947

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !6948
  %42 = load volatile i32, i32* %41, align 4, !dbg !6948
  %43 = icmp eq i32 %42, 1, !dbg !6950
  br i1 %43, label %44, label %101, !dbg !6951

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !6952
  call void @llvm.dbg.value(metadata i32 %45, metadata !6915, metadata !DIExpression()), !dbg !6918
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !6953
  call void @llvm.dbg.value(metadata i32 %46, metadata !6916, metadata !DIExpression()), !dbg !6918
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !6954
  call void @llvm.dbg.value(metadata i32 %47, metadata !6917, metadata !DIExpression()), !dbg !6918
  %48 = icmp eq i32 %47, 0, !dbg !6955
  br i1 %48, label %50, label %49, !dbg !6957

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6958
  unreachable, !dbg !6958

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !6960
  %52 = ptrtoint i8* %51 to i32, !dbg !6961
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !6962
  store i32 %52, i32* %53, align 4, !dbg !6963
  %54 = load i32, i32* %15, align 4, !dbg !6964
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !6965
  store i32 %54, i32* %55, align 4, !dbg !6966
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !6967
  call void @llvm.dbg.value(metadata i32 %56, metadata !6917, metadata !DIExpression()), !dbg !6918
  %57 = icmp eq i32 %56, 0, !dbg !6968
  br i1 %57, label %59, label %58, !dbg !6970

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6971
  unreachable, !dbg !6971

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !6973
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !6974
  call void @llvm.dbg.value(metadata i32 %61, metadata !6917, metadata !DIExpression()), !dbg !6918
  %62 = icmp eq i32 %61, 0, !dbg !6975
  br i1 %62, label %64, label %63, !dbg !6977

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6978
  unreachable, !dbg !6978

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !6980
  call void @llvm.dbg.value(metadata i32 %65, metadata !6917, metadata !DIExpression()), !dbg !6918
  %66 = icmp eq i32 %65, 0, !dbg !6981
  br i1 %66, label %68, label %67, !dbg !6983

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6984
  unreachable, !dbg !6984

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !6986
  %70 = ptrtoint i8* %69 to i32, !dbg !6987
  store i32 %70, i32* %53, align 4, !dbg !6988
  %71 = load i32, i32* %25, align 4, !dbg !6989
  store i32 %71, i32* %55, align 4, !dbg !6990
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !6991
  call void @llvm.dbg.value(metadata i32 %72, metadata !6917, metadata !DIExpression()), !dbg !6918
  %73 = icmp eq i32 %72, 0, !dbg !6992
  br i1 %73, label %75, label %74, !dbg !6994

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !6995
  unreachable, !dbg !6995

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !6997
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !6998
  call void @llvm.dbg.value(metadata i32 %77, metadata !6917, metadata !DIExpression()), !dbg !6918
  %78 = icmp eq i32 %77, 0, !dbg !6999
  br i1 %78, label %80, label %79, !dbg !7001

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !7002
  unreachable, !dbg !7002

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !7004
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !7005
  call void @llvm.dbg.value(metadata i32 %82, metadata !6917, metadata !DIExpression()), !dbg !6918
  %83 = icmp eq i32 %82, 0, !dbg !7006
  br i1 %83, label %85, label %84, !dbg !7008

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.61, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.62, i32 0, i32 0)) #23, !dbg !7009
  unreachable, !dbg !7009

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !7011
  call void @llvm.dbg.value(metadata i32 %86, metadata !6908, metadata !DIExpression()), !dbg !6918
  %87 = load i8*, i8** %7, align 4, !dbg !7012
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !7013
  store i8* %87, i8** %88, align 4, !dbg !7014
  %89 = load i32, i32* %15, align 4, !dbg !7015
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !7016
  store i32 %89, i32* %90, align 4, !dbg !7017
  %91 = load i32, i32* %19, align 4, !dbg !7018
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !7019
  store i32 %91, i32* %92, align 4, !dbg !7020
  %93 = load i32, i32* %33, align 4, !dbg !7021
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !7022
  store i32 %93, i32* %94, align 4, !dbg !7023
  %95 = load i8*, i8** %11, align 4, !dbg !7024
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !7025
  store i8* %95, i8** %96, align 4, !dbg !7026
  %97 = load i32, i32* %25, align 4, !dbg !7027
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !7028
  store i32 %97, i32* %98, align 4, !dbg !7029
  %99 = load i32, i32* %29, align 4, !dbg !7030
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !7031
  store i32 %99, i32* %100, align 4, !dbg !7032
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !7033
  br label %101, !dbg !7034

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !6918
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !7035
  ret i32 %102, !dbg !7035
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !7036 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7095, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.value(metadata i32 %1, metadata !7096, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !7105, metadata !DIExpression()), !dbg !7109
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !7110
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !7110
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !7107, metadata !DIExpression()), !dbg !7111
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !7111
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !7111
  store i32 1, i32* %5, align 4, !dbg !7111
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !7111
  store i32 1, i32* %6, align 4, !dbg !7111
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !7111
  store i32 1, i32* %7, align 4, !dbg !7111
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !7111
  store i32 1, i32* %8, align 4, !dbg !7111
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !7111
  store i32 1, i32* %9, align 4, !dbg !7111
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !7112
  store volatile i32 0, i32* %10, align 4, !dbg !7113
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !7114
  store volatile i32 0, i32* %11, align 4, !dbg !7115
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !7116
  store volatile i32 0, i32* %12, align 4, !dbg !7117
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !7118
  br i1 %13, label %14, label %17, !dbg !7120

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !7121
  %16 = mul i32 %15, 1000, !dbg !7123
  call void @llvm.dbg.value(metadata i32 %16, metadata !7097, metadata !DIExpression()), !dbg !7108
  br label %17, !dbg !7124

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !7125
  call void @llvm.dbg.value(metadata i32 %18, metadata !7097, metadata !DIExpression()), !dbg !7108
  %19 = shl i32 %1, 8, !dbg !7126
  %20 = udiv i32 %18, %19, !dbg !7127
  call void @llvm.dbg.value(metadata i32 %20, metadata !7098, metadata !DIExpression()), !dbg !7108
  %21 = mul i32 %18, 10, !dbg !7128
  %22 = udiv i32 %21, %19, !dbg !7129
  %23 = urem i32 %22, 10, !dbg !7130
  call void @llvm.dbg.value(metadata i32 %23, metadata !7099, metadata !DIExpression()), !dbg !7108
  %24 = icmp ne i32 %23, 0, !dbg !7131
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !7133
  %27 = zext i1 %26 to i32, !dbg !7133
  %28 = add i32 %20, %27, !dbg !7133
  call void @llvm.dbg.value(metadata i32 %28, metadata !7098, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.value(metadata i32 %28, metadata !7101, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.value(metadata i32 undef, metadata !7102, metadata !DIExpression()), !dbg !7108
  br label %29, !dbg !7134

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !7108
  %31 = mul i32 %30, %1, !dbg !7108
  %32 = udiv i32 %18, %31, !dbg !7108
  call void @llvm.dbg.value(metadata i32 %32, metadata !7102, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.value(metadata i32 %30, metadata !7101, metadata !DIExpression()), !dbg !7108
  %33 = icmp ugt i32 %32, 256, !dbg !7135
  %34 = add i32 %30, 1, !dbg !7136
  call void @llvm.dbg.value(metadata i32 %34, metadata !7101, metadata !DIExpression()), !dbg !7108
  call void @llvm.dbg.value(metadata i32 undef, metadata !7102, metadata !DIExpression()), !dbg !7108
  br i1 %33, label %29, label %35, !dbg !7134, !llvm.loop !7138

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !7140
  %37 = urem i32 %36, 10, !dbg !7141
  call void @llvm.dbg.value(metadata i32 %37, metadata !7100, metadata !DIExpression()), !dbg !7108
  %38 = add nsw i32 %32, -1, !dbg !7142
  call void @llvm.dbg.value(metadata i32 %38, metadata !7102, metadata !DIExpression()), !dbg !7108
  %39 = add nsw i32 %32, -2, !dbg !7143
  %40 = lshr i32 %39, 1, !dbg !7144
  call void @llvm.dbg.value(metadata i32 %40, metadata !7103, metadata !DIExpression()), !dbg !7108
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !7145
  store volatile i32 3, i32* %41, align 4, !dbg !7146
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7147
  %43 = load volatile i32, i32* %42, align 4, !dbg !7147
  call void @llvm.dbg.value(metadata i32 %43, metadata !7104, metadata !DIExpression()), !dbg !7108
  %44 = or i32 %43, 128, !dbg !7148
  store volatile i32 %44, i32* %42, align 4, !dbg !7149
  %45 = and i32 %30, 255, !dbg !7150
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7151
  store volatile i32 %45, i32* %46, align 4, !dbg !7152
  %47 = lshr i32 %30, 8, !dbg !7153
  %48 = and i32 %47, 255, !dbg !7154
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !7155
  store volatile i32 %48, i32* %49, align 4, !dbg !7156
  store volatile i32 %43, i32* %42, align 4, !dbg !7157
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !7158
  store volatile i32 %38, i32* %50, align 4, !dbg !7159
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !7160
  store volatile i32 %40, i32* %51, align 4, !dbg !7161
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !7162
  %53 = load i32, i32* %52, align 4, !dbg !7162
  store volatile i32 %53, i32* %11, align 4, !dbg !7163
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !7164
  %55 = load i32, i32* %54, align 4, !dbg !7164
  store volatile i32 %55, i32* %12, align 4, !dbg !7165
  %56 = icmp ugt i32 %1, 2999999, !dbg !7166
  br i1 %56, label %57, label %59, !dbg !7168

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !7169
  store volatile i32 18, i32* %58, align 4, !dbg !7171
  br label %59, !dbg !7172

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !7173
  ret void, !dbg !7173
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !7174 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7178, metadata !DIExpression()), !dbg !7183
  call void @llvm.dbg.value(metadata i32 %1, metadata !7179, metadata !DIExpression()), !dbg !7183
  call void @llvm.dbg.value(metadata i32 %2, metadata !7180, metadata !DIExpression()), !dbg !7183
  call void @llvm.dbg.value(metadata i32 %3, metadata !7181, metadata !DIExpression()), !dbg !7183
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7184
  %6 = load volatile i32, i32* %5, align 4, !dbg !7184
  call void @llvm.dbg.value(metadata i32 %6, metadata !7182, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7183
  store volatile i32 128, i32* %5, align 4, !dbg !7185
  %7 = trunc i32 %6 to i16, !dbg !7186
  %8 = and i16 %7, -4, !dbg !7186
  call void @llvm.dbg.value(metadata i16 %7, metadata !7182, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !7183
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !7187

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !7188
  call void @llvm.dbg.value(metadata i16 %10, metadata !7182, metadata !DIExpression()), !dbg !7183
  br label %15, !dbg !7190

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !7191
  call void @llvm.dbg.value(metadata i16 %12, metadata !7182, metadata !DIExpression()), !dbg !7183
  br label %15, !dbg !7192

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !7193
  call void @llvm.dbg.value(metadata i16 %14, metadata !7182, metadata !DIExpression()), !dbg !7183
  br label %15, !dbg !7194

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !7183
  call void @llvm.dbg.value(metadata i16 %16, metadata !7182, metadata !DIExpression()), !dbg !7183
  %17 = and i16 %16, -61, !dbg !7195
  call void @llvm.dbg.value(metadata i16 %16, metadata !7182, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !7183
  %18 = icmp eq i32 %2, 1, !dbg !7196
  %19 = select i1 %18, i16 4, i16 0, !dbg !7196
  %20 = or i16 %17, %19, !dbg !7196
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !7182, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7183
  call void @llvm.dbg.value(metadata i16 %20, metadata !7182, metadata !DIExpression()), !dbg !7183
  %21 = icmp eq i32 %3, 2, !dbg !7197
  %22 = or i16 %20, 16, !dbg !7197
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !7197
  call void @llvm.dbg.value(metadata i16 %23, metadata !7182, metadata !DIExpression()), !dbg !7183
  %24 = zext i16 %23 to i32, !dbg !7198
  store volatile i32 %24, i32* %5, align 4, !dbg !7199
  ret void, !dbg !7200
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !7201 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7205, metadata !DIExpression()), !dbg !7208
  call void @llvm.dbg.value(metadata i8 %1, metadata !7206, metadata !DIExpression()), !dbg !7208
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !7209

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !7210
  call void @llvm.dbg.value(metadata i32 %5, metadata !7207, metadata !DIExpression()), !dbg !7208
  %6 = and i32 %5, 32, !dbg !7212
  %7 = icmp eq i32 %6, 0, !dbg !7212
  br i1 %7, label %4, label %8, !dbg !7214, !llvm.loop !7215

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !7217
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7219
  store volatile i32 %9, i32* %10, align 4, !dbg !7220
  ret void, !dbg !7221
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7222 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7226, metadata !DIExpression()), !dbg !7229
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !7230

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !7231
  call void @llvm.dbg.value(metadata i32 %4, metadata !7227, metadata !DIExpression()), !dbg !7229
  %5 = and i32 %4, 1, !dbg !7233
  %6 = icmp eq i32 %5, 0, !dbg !7233
  br i1 %6, label %3, label %7, !dbg !7235, !llvm.loop !7236

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7238
  %9 = load volatile i32, i32* %8, align 4, !dbg !7238
  %10 = trunc i32 %9 to i8, !dbg !7240
  call void @llvm.dbg.value(metadata i8 %10, metadata !7228, metadata !DIExpression()), !dbg !7229
  ret i8 %10, !dbg !7241
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !7242 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7246, metadata !DIExpression()), !dbg !7249
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !7250
  %3 = load volatile i32, i32* %2, align 4, !dbg !7250
  call void @llvm.dbg.value(metadata i32 %3, metadata !7247, metadata !DIExpression()), !dbg !7249
  %4 = and i32 %3, 1, !dbg !7251
  %5 = icmp eq i32 %4, 0, !dbg !7251
  br i1 %5, label %9, label %6, !dbg !7253

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7254
  %8 = load volatile i32, i32* %7, align 4, !dbg !7254
  call void @llvm.dbg.value(metadata i32 %8, metadata !7248, metadata !DIExpression()), !dbg !7249
  br label %9, !dbg !7256

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !7257
  call void @llvm.dbg.value(metadata i32 %10, metadata !7248, metadata !DIExpression()), !dbg !7249
  ret i32 %10, !dbg !7258
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7259 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7263, metadata !DIExpression()), !dbg !7266
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7267
  %3 = load volatile i32, i32* %2, align 4, !dbg !7267
  call void @llvm.dbg.value(metadata i32 %3, metadata !7265, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7266
  store volatile i32 191, i32* %2, align 4, !dbg !7268
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7269
  %5 = load volatile i32, i32* %4, align 4, !dbg !7269
  call void @llvm.dbg.value(metadata i32 %5, metadata !7264, metadata !DIExpression()), !dbg !7266
  %6 = and i32 %5, 65343, !dbg !7270
  %7 = or i32 %6, 192, !dbg !7270
  call void @llvm.dbg.value(metadata i32 %5, metadata !7264, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !7266
  store volatile i32 %7, i32* %4, align 4, !dbg !7271
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !7272
  store volatile i32 0, i32* %8, align 4, !dbg !7273
  store volatile i32 0, i32* %2, align 4, !dbg !7274
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !7275
  store volatile i32 2, i32* %9, align 4, !dbg !7276
  %10 = and i32 %3, 65535, !dbg !7277
  store volatile i32 %10, i32* %2, align 4, !dbg !7278
  ret void, !dbg !7279
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !7280 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7284, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata i8 %1, metadata !7285, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata i8 %2, metadata !7286, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.value(metadata i8 %3, metadata !7287, metadata !DIExpression()), !dbg !7290
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7291
  %6 = load volatile i32, i32* %5, align 4, !dbg !7291
  call void @llvm.dbg.value(metadata i32 %6, metadata !7289, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7290
  store volatile i32 191, i32* %5, align 4, !dbg !7292
  %7 = zext i8 %1 to i32, !dbg !7293
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !7294
  store volatile i32 %7, i32* %8, align 4, !dbg !7295
  %9 = zext i8 %2 to i32, !dbg !7296
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !7297
  store volatile i32 %9, i32* %10, align 4, !dbg !7298
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7299
  %12 = load volatile i32, i32* %11, align 4, !dbg !7299
  call void @llvm.dbg.value(metadata i32 %12, metadata !7288, metadata !DIExpression()), !dbg !7290
  %13 = and i32 %12, 65509, !dbg !7300
  %14 = or i32 %13, 26, !dbg !7300
  call void @llvm.dbg.value(metadata i32 %12, metadata !7288, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !7290
  store volatile i32 %14, i32* %11, align 4, !dbg !7301
  %15 = zext i8 %3 to i32, !dbg !7302
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !7303
  store volatile i32 %15, i32* %16, align 4, !dbg !7304
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !7305
  store volatile i32 1, i32* %17, align 4, !dbg !7306
  %18 = and i32 %6, 65535, !dbg !7307
  store volatile i32 %18, i32* %5, align 4, !dbg !7308
  ret void, !dbg !7309
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7310 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7312, metadata !DIExpression()), !dbg !7314
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7315
  %3 = load volatile i32, i32* %2, align 4, !dbg !7315
  call void @llvm.dbg.value(metadata i32 %3, metadata !7313, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7314
  store volatile i32 191, i32* %2, align 4, !dbg !7316
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7317
  store volatile i32 0, i32* %4, align 4, !dbg !7318
  store volatile i32 0, i32* %2, align 4, !dbg !7319
  %5 = and i32 %3, 65535, !dbg !7320
  store volatile i32 %5, i32* %2, align 4, !dbg !7321
  ret void, !dbg !7322
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7323 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7325, metadata !DIExpression()), !dbg !7328
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7329
  %3 = load volatile i32, i32* %2, align 4, !dbg !7329
  call void @llvm.dbg.value(metadata i32 %3, metadata !7327, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7328
  store volatile i32 191, i32* %2, align 4, !dbg !7330
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7331
  %5 = load volatile i32, i32* %4, align 4, !dbg !7331
  call void @llvm.dbg.value(metadata i32 %5, metadata !7326, metadata !DIExpression()), !dbg !7328
  %6 = and i32 %5, 65519, !dbg !7332
  %7 = or i32 %6, 16, !dbg !7332
  call void @llvm.dbg.value(metadata i32 %5, metadata !7326, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !7328
  store volatile i32 %7, i32* %4, align 4, !dbg !7333
  store volatile i32 0, i32* %2, align 4, !dbg !7334
  store volatile i32 135, i32* %4, align 4, !dbg !7335
  %8 = and i32 %3, 65535, !dbg !7336
  store volatile i32 %8, i32* %2, align 4, !dbg !7337
  ret void, !dbg !7338
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7339 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7341, metadata !DIExpression()), !dbg !7344
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7345
  %3 = load volatile i32, i32* %2, align 4, !dbg !7345
  call void @llvm.dbg.value(metadata i32 %3, metadata !7343, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7344
  %4 = load volatile i32, i32* %2, align 4, !dbg !7346
  %5 = and i32 %4, -129, !dbg !7346
  store volatile i32 %5, i32* %2, align 4, !dbg !7346
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !7347
  %7 = load volatile i32, i32* %6, align 4, !dbg !7347
  call void @llvm.dbg.value(metadata i32 %7, metadata !7342, metadata !DIExpression()), !dbg !7344
  %8 = and i32 %7, 65530, !dbg !7348
  %9 = or i32 %8, 5, !dbg !7348
  call void @llvm.dbg.value(metadata i32 %7, metadata !7342, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !7344
  store volatile i32 %9, i32* %6, align 4, !dbg !7349
  %10 = and i32 %3, 65535, !dbg !7350
  %11 = load volatile i32, i32* %2, align 4, !dbg !7351
  %12 = and i32 %10, %11, !dbg !7351
  store volatile i32 %12, i32* %2, align 4, !dbg !7351
  ret void, !dbg !7352
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7353 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7357, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i32 %1, metadata !7358, metadata !DIExpression()), !dbg !7360
  call void @llvm.dbg.value(metadata i16 145, metadata !7359, metadata !DIExpression()), !dbg !7360
  %3 = icmp eq i32 %1, 0, !dbg !7361
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !7359, metadata !DIExpression()), !dbg !7360
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7363
  store volatile i32 %4, i32* %5, align 4, !dbg !7364
  ret void, !dbg !7365
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !7366 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7371, metadata !DIExpression()), !dbg !7375
  call void @llvm.dbg.value(metadata i32 0, metadata !7374, metadata !DIExpression()), !dbg !7375
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7376
  %3 = load volatile i32, i32* %2, align 4, !dbg !7376
  call void @llvm.dbg.value(metadata i32 %3, metadata !7372, metadata !DIExpression()), !dbg !7375
  %4 = and i32 %3, 1, !dbg !7377
  %5 = icmp eq i32 %4, 0, !dbg !7377
  br i1 %5, label %6, label %16, !dbg !7379

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !7380
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !7381

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !7374, metadata !DIExpression()), !dbg !7375
  br label %16, !dbg !7382

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !7384
  %11 = load volatile i32, i32* %10, align 4, !dbg !7384
  call void @llvm.dbg.value(metadata i32 %11, metadata !7373, metadata !DIExpression()), !dbg !7375
  %12 = and i32 %11, 16, !dbg !7385
  %13 = icmp eq i32 %12, 0, !dbg !7385
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !7374, metadata !DIExpression()), !dbg !7375
  br label %16, !dbg !7387

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !7375
  ret i32 %17, !dbg !7388
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !7389 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7393, metadata !DIExpression()), !dbg !7396
  call void @llvm.dbg.value(metadata i32 0, metadata !7395, metadata !DIExpression()), !dbg !7396
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !7397
  %3 = load volatile i32, i32* %2, align 4, !dbg !7397
  call void @llvm.dbg.value(metadata i32 %3, metadata !7394, metadata !DIExpression()), !dbg !7396
  %4 = and i32 %3, 14, !dbg !7398
  %5 = icmp eq i32 %4, 0, !dbg !7398
  %6 = sext i1 %5 to i32, !dbg !7400
  call void @llvm.dbg.value(metadata i32 %6, metadata !7395, metadata !DIExpression()), !dbg !7396
  ret i32 %6, !dbg !7401
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !7402 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7404, metadata !DIExpression()), !dbg !7406
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7407
  %3 = load volatile i32, i32* %2, align 4, !dbg !7407
  call void @llvm.dbg.value(metadata i32 %3, metadata !7405, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7406
  call void @llvm.dbg.value(metadata i32 %3, metadata !7405, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !7406
  ret void, !dbg !7408
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7409 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7411, metadata !DIExpression()), !dbg !7412
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !7413
  store volatile i32 191, i32* %2, align 4, !dbg !7414
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !7415
  store volatile i32 16, i32* %3, align 4, !dbg !7416
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !7417
  store volatile i32 0, i32* %4, align 4, !dbg !7418
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !7419
  store volatile i32 0, i32* %5, align 4, !dbg !7420
  store volatile i32 128, i32* %2, align 4, !dbg !7421
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !7422
  store volatile i32 0, i32* %6, align 4, !dbg !7423
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !7424
  store volatile i32 0, i32* %7, align 4, !dbg !7425
  store volatile i32 0, i32* %2, align 4, !dbg !7426
  store volatile i32 0, i32* %7, align 4, !dbg !7427
  store volatile i32 0, i32* %3, align 4, !dbg !7428
  store volatile i32 191, i32* %2, align 4, !dbg !7429
  store volatile i32 0, i32* %3, align 4, !dbg !7430
  store volatile i32 0, i32* %2, align 4, !dbg !7431
  store volatile i32 0, i32* %4, align 4, !dbg !7432
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !7433
  store volatile i32 0, i32* %8, align 4, !dbg !7434
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !7435
  store volatile i32 0, i32* %9, align 4, !dbg !7436
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !7437
  store volatile i32 0, i32* %10, align 4, !dbg !7438
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !7439
  store volatile i32 0, i32* %11, align 4, !dbg !7440
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !7441
  store volatile i32 0, i32* %12, align 4, !dbg !7442
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !7443
  store volatile i32 0, i32* %13, align 4, !dbg !7444
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !7445
  store volatile i32 0, i32* %14, align 4, !dbg !7446
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !7447
  store volatile i32 0, i32* %15, align 4, !dbg !7448
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !7449
  store volatile i32 0, i32* %16, align 4, !dbg !7450
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !7451
  store volatile i32 0, i32* %17, align 4, !dbg !7452
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !7453
  store volatile i32 0, i32* %18, align 4, !dbg !7454
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7455
  store volatile i32 0, i32* %19, align 4, !dbg !7456
  store volatile i32 0, i32* %13, align 4, !dbg !7457
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !7458
  store volatile i32 0, i32* %20, align 4, !dbg !7459
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !7460
  store volatile i32 0, i32* %21, align 4, !dbg !7461
  ret void, !dbg !7462
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7463 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7465, metadata !DIExpression()), !dbg !7466
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !7467

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !7468
  %5 = and i32 %4, 64, !dbg !7469
  %6 = icmp eq i32 %5, 0, !dbg !7470
  br i1 %6, label %3, label %7, !dbg !7467, !llvm.loop !7471

7:                                                ; preds = %3
  ret void, !dbg !7473
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !7474 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7478, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i32 %1, metadata !7479, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.value(metadata i32 15, metadata !7480, metadata !DIExpression()), !dbg !7481
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !7482

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !7483
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !7486
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !7488
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !7490
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !7481
  call void @llvm.dbg.value(metadata i32 %16, metadata !7480, metadata !DIExpression()), !dbg !7481
  ret i32 %16, !dbg !7492
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !7493 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7503, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !7504, metadata !DIExpression()), !dbg !7505
  %3 = add i32 %0, -8, !dbg !7506
  %4 = icmp ult i32 %3, 8, !dbg !7506
  br i1 %4, label %5, label %12, !dbg !7506

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !7506
  %7 = load i8, i8* %6, align 1, !dbg !7506
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !7506
  %9 = load i32, i32* %8, align 4, !dbg !7506
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !7507
  store i8 %7, i8* %10, align 4, !dbg !7507
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !7507
  store i32 %9, i32* %11, align 4, !dbg !7507
  br label %12, !dbg !7509

12:                                               ; preds = %2, %5
  ret void, !dbg !7509
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !7510 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !7514, metadata !DIExpression()), !dbg !7515
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !7516
  store volatile i32 3, i32* %2, align 4, !dbg !7517
  ret void, !dbg !7518
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !7519 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7521, metadata !DIExpression()), !dbg !7525
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !7524, metadata !DIExpression()), !dbg !7525
  %2 = add i32 %0, -30, !dbg !7526
  %3 = icmp ult i32 %2, 3, !dbg !7526
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !7526
  call void @llvm.dbg.value(metadata i32 %5, metadata !7522, metadata !DIExpression()), !dbg !7525
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !7527
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !7527
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !7524, metadata !DIExpression()), !dbg !7525
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !7528
  call void @llvm.dbg.value(metadata i32 %8, metadata !7523, metadata !DIExpression()), !dbg !7525
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !7529

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !7530
  br label %13, !dbg !7532

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !7533
  br label %13, !dbg !7534

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !7535
  br label %13, !dbg !7536

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.107, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.108, i32 0, i32 0)) #23, !dbg !7537
  unreachable, !dbg !7537

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !7538
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !1100 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !7539
  br i1 %1, label %9, label %2, !dbg !7541

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1190, metadata !DIExpression()), !dbg !7542
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !7543
  %5 = load i32, i32* %4, align 4, !dbg !7543
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !7548
  %6 = add nuw nsw i32 %3, 1, !dbg !7549
  call void @llvm.dbg.value(metadata i32 %6, metadata !1190, metadata !DIExpression()), !dbg !7542
  %7 = icmp eq i32 %6, 64, !dbg !7550
  br i1 %7, label %8, label %2, !dbg !7551, !llvm.loop !7552

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !7554
  br label %9, !dbg !7555

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !7556
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !7557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7561, metadata !DIExpression()), !dbg !7563
  call void @llvm.dbg.value(metadata i32 %1, metadata !7562, metadata !DIExpression()), !dbg !7563
  %3 = trunc i32 %1 to i8, !dbg !7564
  %4 = shl i8 %3, 2, !dbg !7564
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7567
  store volatile i8 %4, i8* %5, align 1, !dbg !7568
  ret void, !dbg !7569
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7570 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7574, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.value(metadata i32 -1, metadata !7575, metadata !DIExpression()), !dbg !7576
  %2 = icmp ugt i32 %0, 63, !dbg !7577
  br i1 %2, label %4, label %3, !dbg !7577

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !7579
  call void @llvm.dbg.value(metadata i32 0, metadata !7575, metadata !DIExpression()), !dbg !7576
  br label %4, !dbg !7581

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7576
  ret i32 %5, !dbg !7582
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7583 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7587, metadata !DIExpression()), !dbg !7588
  %2 = and i32 %0, 31, !dbg !7589
  %3 = shl nuw i32 1, %2, !dbg !7590
  %4 = lshr i32 %0, 5, !dbg !7591
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7592
  store volatile i32 %3, i32* %5, align 4, !dbg !7593
  ret void, !dbg !7594
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7595 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7597, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.value(metadata i32 -1, metadata !7598, metadata !DIExpression()), !dbg !7599
  %2 = icmp ugt i32 %0, 63, !dbg !7600
  br i1 %2, label %4, label %3, !dbg !7600

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !7602
  call void @llvm.dbg.value(metadata i32 0, metadata !7598, metadata !DIExpression()), !dbg !7599
  br label %4, !dbg !7604

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7599
  ret i32 %5, !dbg !7605
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7606 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7608, metadata !DIExpression()), !dbg !7609
  %2 = and i32 %0, 31, !dbg !7610
  %3 = shl nuw i32 1, %2, !dbg !7611
  %4 = lshr i32 %0, 5, !dbg !7612
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7613
  store volatile i32 %3, i32* %5, align 4, !dbg !7614
  ret void, !dbg !7615
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !7616 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7620, metadata !DIExpression()), !dbg !7622
  call void @llvm.dbg.value(metadata i32 255, metadata !7621, metadata !DIExpression()), !dbg !7622
  %2 = icmp ugt i32 %0, 63, !dbg !7623
  br i1 %2, label %5, label %3, !dbg !7623

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !7625
  call void @llvm.dbg.value(metadata i32 %4, metadata !7621, metadata !DIExpression()), !dbg !7622
  br label %5, !dbg !7627

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !7622
  ret i32 %6, !dbg !7628
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !7629 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7633, metadata !DIExpression()), !dbg !7634
  %2 = lshr i32 %0, 5, !dbg !7635
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !7636
  %4 = load volatile i32, i32* %3, align 4, !dbg !7636
  %5 = and i32 %0, 31, !dbg !7637
  %6 = lshr i32 %4, %5, !dbg !7638
  %7 = and i32 %6, 1, !dbg !7638
  ret i32 %7, !dbg !7639
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7640 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7642, metadata !DIExpression()), !dbg !7644
  call void @llvm.dbg.value(metadata i32 -1, metadata !7643, metadata !DIExpression()), !dbg !7644
  %2 = icmp ugt i32 %0, 63, !dbg !7645
  br i1 %2, label %4, label %3, !dbg !7645

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !7647
  call void @llvm.dbg.value(metadata i32 0, metadata !7643, metadata !DIExpression()), !dbg !7644
  br label %4, !dbg !7649

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7644
  ret i32 %5, !dbg !7650
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7651 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7653, metadata !DIExpression()), !dbg !7654
  %2 = and i32 %0, 31, !dbg !7655
  %3 = shl nuw i32 1, %2, !dbg !7656
  %4 = lshr i32 %0, 5, !dbg !7657
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !7658
  store volatile i32 %3, i32* %5, align 4, !dbg !7659
  ret void, !dbg !7660
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !7661 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7663, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.value(metadata i32 -1, metadata !7664, metadata !DIExpression()), !dbg !7665
  %2 = icmp ugt i32 %0, 63, !dbg !7666
  br i1 %2, label %4, label %3, !dbg !7666

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !7668
  call void @llvm.dbg.value(metadata i32 0, metadata !7664, metadata !DIExpression()), !dbg !7665
  br label %4, !dbg !7670

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !7665
  ret i32 %5, !dbg !7671
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !7672 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7674, metadata !DIExpression()), !dbg !7675
  %2 = and i32 %0, 31, !dbg !7676
  %3 = shl nuw i32 1, %2, !dbg !7677
  %4 = lshr i32 %0, 5, !dbg !7678
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7679
  store volatile i32 %3, i32* %5, align 4, !dbg !7680
  ret void, !dbg !7681
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !7682 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7686, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 %1, metadata !7687, metadata !DIExpression()), !dbg !7689
  call void @llvm.dbg.value(metadata i32 -1, metadata !7688, metadata !DIExpression()), !dbg !7689
  %3 = icmp ugt i32 %0, 63, !dbg !7690
  br i1 %3, label %5, label %4, !dbg !7690

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !7692
  call void @llvm.dbg.value(metadata i32 0, metadata !7688, metadata !DIExpression()), !dbg !7689
  br label %5, !dbg !7694

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !7689
  ret i32 %6, !dbg !7695
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !7696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7698, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 68, metadata !7699, metadata !DIExpression()), !dbg !7700
  %2 = icmp ugt i32 %0, 63, !dbg !7701
  br i1 %2, label %5, label %3, !dbg !7701

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !7703
  call void @llvm.dbg.value(metadata i32 %4, metadata !7699, metadata !DIExpression()), !dbg !7700
  br label %5, !dbg !7705

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !7700
  ret i32 %6, !dbg !7706
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !7707 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7709, metadata !DIExpression()), !dbg !7710
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !7711
  %3 = load volatile i8, i8* %2, align 1, !dbg !7711
  %4 = lshr i8 %3, 2, !dbg !7714
  %5 = zext i8 %4 to i32, !dbg !7714
  ret i32 %5, !dbg !7715
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !7716 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !7718, metadata !DIExpression()), !dbg !7720
  tail call void @Flash_ReturnReady() #20, !dbg !7721
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !7722
  call void @llvm.dbg.value(metadata i32 %1, metadata !7719, metadata !DIExpression()), !dbg !7720
  %2 = icmp ugt i32 %1, 63, !dbg !7723
  br i1 %2, label %12, label %3, !dbg !7723

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !7725
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !7725
  %6 = icmp eq void (i32)* %5, null, !dbg !7727
  br i1 %6, label %7, label %8, !dbg !7728

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !7718, metadata !DIExpression()), !dbg !7720
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.113, i32 0, i32 0)) #20, !dbg !7729
  br label %12, !dbg !7731

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !7732
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !7734
  store i32 %9, i32* %10, align 4, !dbg !7735
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !7736
  tail call void %11(i32 noundef %1) #20, !dbg !7737
  call void @llvm.dbg.value(metadata i32 0, metadata !7718, metadata !DIExpression()), !dbg !7720
  br label %12, !dbg !7738

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !7720
  ret i32 %13, !dbg !7739
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !7740 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7743
  %2 = and i32 %1, 511, !dbg !7744
  call void @llvm.dbg.value(metadata i32 %2, metadata !7742, metadata !DIExpression()), !dbg !7745
  %3 = add nsw i32 %2, -16, !dbg !7746
  ret i32 %3, !dbg !7747
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !7748 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7749
  %2 = lshr i32 %1, 22, !dbg !7750
  %3 = and i32 %2, 1, !dbg !7750
  ret i32 %3, !dbg !7751
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !7752 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7757, metadata !DIExpression()), !dbg !7760
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !7758, metadata !DIExpression()), !dbg !7760
  %3 = icmp ugt i32 %0, 63, !dbg !7761
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !7761
  br i1 %5, label %10, label %6, !dbg !7761

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7763
  call void @llvm.dbg.value(metadata i32 %7, metadata !7759, metadata !DIExpression()), !dbg !7760
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !7764
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !7765
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !7766
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !7767
  store i32 0, i32* %9, align 4, !dbg !7768
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !7769
  br label %10, !dbg !7770

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !7760
  ret i32 %11, !dbg !7771
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !7772 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !7776, metadata !DIExpression()), !dbg !7777
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7778
  store i32 %2, i32* %0, align 4, !dbg !7779
  ret i32 0, !dbg !7780
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !7781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7785, metadata !DIExpression()), !dbg !7786
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !7787
  ret i32 0, !dbg !7788
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !7789 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !7793, !srcloc !7799
  call void @llvm.dbg.value(metadata i32 %1, metadata !7797, metadata !DIExpression()) #22, !dbg !7800
  call void @llvm.dbg.value(metadata i32 %1, metadata !7791, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata i32 1, metadata !7792, metadata !DIExpression()), !dbg !7801
  call void @llvm.dbg.value(metadata i32 4, metadata !7802, metadata !DIExpression()) #22, !dbg !7805
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !7807, !srcloc !7808
  tail call void asm sideeffect "dmb", ""() #22, !dbg !7809, !srcloc !7812
  tail call void asm sideeffect "isb", ""() #22, !dbg !7813, !srcloc !7816
  ret i32 %1, !dbg !7817
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !7818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7820, metadata !DIExpression()), !dbg !7821
  call void @llvm.dbg.value(metadata i32 %0, metadata !7802, metadata !DIExpression()) #22, !dbg !7822
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !7824, !srcloc !7808
  tail call void asm sideeffect "dmb", ""() #22, !dbg !7825, !srcloc !7812
  tail call void asm sideeffect "isb", ""() #22, !dbg !7827, !srcloc !7816
  ret void, !dbg !7829
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !7830 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7834
  call void @llvm.dbg.value(metadata i32 %1, metadata !7833, metadata !DIExpression()), !dbg !7835
  call void @llvm.dbg.value(metadata i32 0, metadata !7832, metadata !DIExpression()), !dbg !7835
  br label %2, !dbg !7836

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7832, metadata !DIExpression()), !dbg !7835
  tail call fastcc void @NVIC_DisableIRQ.120(i32 noundef %3) #21, !dbg !7838
  %4 = add nuw nsw i32 %3, 1, !dbg !7841
  call void @llvm.dbg.value(metadata i32 %4, metadata !7832, metadata !DIExpression()), !dbg !7835
  %5 = icmp eq i32 %4, 64, !dbg !7842
  br i1 %5, label %6, label %2, !dbg !7836, !llvm.loop !7843

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !7845
  ret void, !dbg !7846
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.120(i32 noundef %0) unnamed_addr #2 !dbg !7847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7849, metadata !DIExpression()), !dbg !7850
  %2 = and i32 %0, 31, !dbg !7851
  %3 = shl nuw i32 1, %2, !dbg !7852
  %4 = lshr i32 %0, 5, !dbg !7853
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !7854
  store volatile i32 %3, i32* %5, align 4, !dbg !7855
  ret void, !dbg !7856
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !7857 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !7861
  call void @llvm.dbg.value(metadata i32 %1, metadata !7860, metadata !DIExpression()), !dbg !7862
  call void @llvm.dbg.value(metadata i32 0, metadata !7859, metadata !DIExpression()), !dbg !7862
  br label %2, !dbg !7863

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7859, metadata !DIExpression()), !dbg !7862
  tail call fastcc void @NVIC_EnableIRQ.121(i32 noundef %3) #21, !dbg !7865
  %4 = add nuw nsw i32 %3, 1, !dbg !7868
  call void @llvm.dbg.value(metadata i32 %4, metadata !7859, metadata !DIExpression()), !dbg !7862
  %5 = icmp eq i32 %4, 64, !dbg !7869
  br i1 %5, label %6, label %2, !dbg !7863, !llvm.loop !7870

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !7872
  ret void, !dbg !7873
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.121(i32 noundef %0) unnamed_addr #2 !dbg !7874 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7876, metadata !DIExpression()), !dbg !7877
  %2 = and i32 %0, 31, !dbg !7878
  %3 = shl nuw i32 1, %2, !dbg !7879
  %4 = lshr i32 %0, 5, !dbg !7880
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !7881
  store volatile i32 %3, i32* %5, align 4, !dbg !7882
  ret void, !dbg !7883
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !7884 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7886, metadata !DIExpression()), !dbg !7887
  br label %1, !dbg !7888

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !7886, metadata !DIExpression()), !dbg !7887
  tail call fastcc void @NVIC_ClearPendingIRQ.122(i32 noundef %2) #21, !dbg !7890
  %3 = add nuw nsw i32 %2, 1, !dbg !7893
  call void @llvm.dbg.value(metadata i32 %3, metadata !7886, metadata !DIExpression()), !dbg !7887
  %4 = icmp eq i32 %3, 64, !dbg !7894
  br i1 %4, label %5, label %1, !dbg !7888, !llvm.loop !7895

5:                                                ; preds = %1
  ret void, !dbg !7897
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.122(i32 noundef %0) unnamed_addr #2 !dbg !7898 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7900, metadata !DIExpression()), !dbg !7901
  %2 = and i32 %0, 31, !dbg !7902
  %3 = shl nuw i32 1, %2, !dbg !7903
  %4 = lshr i32 %0, 5, !dbg !7904
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !7905
  store volatile i32 %3, i32* %5, align 4, !dbg !7906
  ret void, !dbg !7907
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !7908 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7910, metadata !DIExpression()), !dbg !7911
  %2 = icmp ugt i32 %0, 63, !dbg !7912
  br i1 %2, label %4, label %3, !dbg !7912

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !7914
  br label %4, !dbg !7915

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !7911
  ret i32 %5, !dbg !7916
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !7917 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7919, metadata !DIExpression()), !dbg !7920
  %2 = and i32 %0, 511, !dbg !7921
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !7922
  tail call void asm sideeffect "dsb", ""() #22, !dbg !7923, !srcloc !7926
  ret void, !dbg !7927
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !7928 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !7929
  %2 = and i32 %1, 511, !dbg !7930
  ret i32 %2, !dbg !7931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !7932 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7936, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 %1, metadata !7937, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i8* %0, metadata !7938, metadata !DIExpression()), !dbg !8035
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !8036
  call void @llvm.dbg.value(metadata i32 %3, metadata !8033, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !8035
  call void @llvm.dbg.value(metadata i32 0, metadata !8032, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32* undef, metadata !8034, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 0, metadata !8032, metadata !DIExpression()), !dbg !8035
  %4 = icmp ult i32 %3, 4, !dbg !8037
  br i1 %4, label %20, label %5, !dbg !8040

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8041
  %7 = bitcast i8* %6 to i32**, !dbg !8041
  %8 = load i32*, i32** %7, align 4, !dbg !8041
  call void @llvm.dbg.value(metadata i32* %8, metadata !8034, metadata !DIExpression()), !dbg !8035
  %9 = lshr i32 %3, 2, !dbg !8042
  call void @llvm.dbg.value(metadata i32 %9, metadata !8033, metadata !DIExpression()), !dbg !8035
  br label %10, !dbg !8040

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !8034, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.value(metadata i32 %12, metadata !8032, metadata !DIExpression()), !dbg !8035
  %13 = load i32, i32* %11, align 4, !dbg !8043
  %14 = icmp eq i32 %13, -1, !dbg !8046
  br i1 %14, label %16, label %15, !dbg !8047

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !8048
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.123, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #23, !dbg !8048
  unreachable, !dbg !8048

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !8053
  call void @llvm.dbg.value(metadata i32 %17, metadata !8032, metadata !DIExpression()), !dbg !8035
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !8054
  call void @llvm.dbg.value(metadata i32* %18, metadata !8034, metadata !DIExpression()), !dbg !8035
  %19 = icmp eq i32 %17, %9, !dbg !8037
  br i1 %19, label %20, label %10, !dbg !8040, !llvm.loop !8055

20:                                               ; preds = %16, %2
  ret void, !dbg !8057
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !8058 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8060, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i32 0, metadata !8061, metadata !DIExpression()), !dbg !8062
  call void @llvm.dbg.value(metadata i32 %0, metadata !8061, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !8062
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !8061, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8062
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !8061, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8062
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !8063
  call void @llvm.dbg.value(metadata i32 %2, metadata !8061, metadata !DIExpression()), !dbg !8062
  ret i32 %2, !dbg !8064
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !8065 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8070, metadata !DIExpression()), !dbg !8072
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8073
  %3 = or i32 %2, 512, !dbg !8073
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8073
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8076
  call void @llvm.dbg.value(metadata i32 %4, metadata !8071, metadata !DIExpression()), !dbg !8072
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !8077

5:                                                ; preds = %1
  br label %7, !dbg !8078

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !8082
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.123, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.124, i32 0, i32 0)) #23, !dbg !8082
  unreachable, !dbg !8082

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !8087
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !8071, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8072
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !8071, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8072
  br label %10, !dbg !8088

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8089
  %12 = and i32 %11, 8192, !dbg !8090
  %13 = icmp eq i32 %12, 0, !dbg !8091
  br i1 %13, label %10, label %14, !dbg !8088, !llvm.loop !8092

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8094
  %16 = and i32 %15, 256, !dbg !8095
  %17 = icmp eq i32 %16, 0, !dbg !8096
  br i1 %17, label %14, label %18, !dbg !8097, !llvm.loop !8098

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !8087
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !8071, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8072
  %20 = and i32 %19, 16, !dbg !8087
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !8071, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8072
  call void @llvm.dbg.value(metadata i32 undef, metadata !8071, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !8072
  %21 = or i32 %4, %20, !dbg !8100
  %22 = or i32 %21, 8, !dbg !8100
  call void @llvm.dbg.value(metadata i32 %22, metadata !8071, metadata !DIExpression()), !dbg !8072
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8101
  ret void, !dbg !8102
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !8103 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !8105, metadata !DIExpression()), !dbg !8107
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8108
  call void @llvm.dbg.value(metadata i32 %2, metadata !8106, metadata !DIExpression()), !dbg !8107
  %3 = and i32 %2, -268435477, !dbg !8109
  call void @llvm.dbg.value(metadata i32 %3, metadata !8106, metadata !DIExpression()), !dbg !8107
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8110
  br label %4, !dbg !8111

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8112
  %6 = and i32 %5, 2, !dbg !8113
  %7 = icmp eq i32 %6, 0, !dbg !8111
  br i1 %7, label %8, label %4, !dbg !8111, !llvm.loop !8114

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8116
  call void @llvm.dbg.value(metadata i32 %9, metadata !8106, metadata !DIExpression()), !dbg !8107
  %10 = and i32 %9, -9, !dbg !8117
  call void @llvm.dbg.value(metadata i32 %10, metadata !8106, metadata !DIExpression()), !dbg !8107
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8118
  br label %11, !dbg !8119

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8120
  %13 = and i32 %12, 8, !dbg !8121
  %14 = icmp eq i32 %13, 0, !dbg !8119
  br i1 %14, label %15, label %11, !dbg !8119, !llvm.loop !8122

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8124, !range !2834
  %17 = icmp eq i8 %16, 0, !dbg !8126
  br i1 %17, label %18, label %21, !dbg !8127

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8128
  %20 = and i32 %19, -513, !dbg !8128
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8128
  br label %21, !dbg !8132

21:                                               ; preds = %18, %15
  ret void, !dbg !8133
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !8134 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8138, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.value(metadata i32 0, metadata !8139, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.value(metadata i32 0, metadata !8140, metadata !DIExpression()), !dbg !8141
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8142
  call void @llvm.dbg.value(metadata i32 %2, metadata !8139, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.value(metadata i32 %2, metadata !8139, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !8141
  %3 = icmp eq i16 %0, 1, !dbg !8143
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !8145
  %5 = or i32 %2, %4, !dbg !8145
  call void @llvm.dbg.value(metadata i32 %5, metadata !8139, metadata !DIExpression()), !dbg !8141
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8146
  br label %6, !dbg !8147

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8148
  %8 = and i32 %7, 2, !dbg !8149
  %9 = icmp eq i32 %8, 0, !dbg !8150
  br i1 %9, label %6, label %10, !dbg !8147, !llvm.loop !8151

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8153
  %12 = and i32 %11, 1, !dbg !8154
  %13 = icmp eq i32 %12, 0, !dbg !8155
  br i1 %13, label %14, label %10, !dbg !8155, !llvm.loop !8156

14:                                               ; preds = %10
  ret i32 0, !dbg !8158
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !8159 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8161, metadata !DIExpression()), !dbg !8162
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !8163
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !8164
  ret void, !dbg !8165
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !8166 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8170, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata i32 %1, metadata !8171, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata i32 %1, metadata !8172, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata i8 0, metadata !8174, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata i32 0, metadata !8173, metadata !DIExpression()), !dbg !8175
  %3 = icmp eq i32 %1, 0, !dbg !8176
  br i1 %3, label %16, label %4, !dbg !8179

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !8174, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata i32 %6, metadata !8173, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.value(metadata i32 %7, metadata !8172, metadata !DIExpression()), !dbg !8175
  %8 = shl i32 %6, 8, !dbg !8180
  %9 = and i32 %7, 255, !dbg !8182
  %10 = or i32 %8, %9, !dbg !8183
  call void @llvm.dbg.value(metadata i32 %10, metadata !8173, metadata !DIExpression()), !dbg !8175
  %11 = lshr i32 %7, 8, !dbg !8184
  call void @llvm.dbg.value(metadata i32 %11, metadata !8172, metadata !DIExpression()), !dbg !8175
  %12 = add nuw nsw i8 %5, 1, !dbg !8185
  call void @llvm.dbg.value(metadata i8 %12, metadata !8174, metadata !DIExpression()), !dbg !8175
  %13 = icmp ult i32 %7, 256, !dbg !8176
  br i1 %13, label %14, label %4, !dbg !8179, !llvm.loop !8186

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !8188
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8190
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8191
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8192
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8193
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8194
  br label %16, !dbg !8195

16:                                               ; preds = %2, %14
  ret void, !dbg !8196
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !8197 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8201, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata i8 %1, metadata !8202, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata i32 %2, metadata !8203, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata i32 %3, metadata !8204, metadata !DIExpression()), !dbg !8207
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !8208
  call void @llvm.dbg.value(metadata i32 %5, metadata !8206, metadata !DIExpression()), !dbg !8207
  %6 = icmp eq i32 %3, 3, !dbg !8209
  br i1 %6, label %7, label %11, !dbg !8211

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !8212
  %9 = zext i8 %1 to i32, !dbg !8214
  %10 = or i32 %8, %9, !dbg !8215
  call void @llvm.dbg.value(metadata i32 %10, metadata !8205, metadata !DIExpression()), !dbg !8207
  br label %16, !dbg !8216

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !8217
  %13 = zext i8 %1 to i32, !dbg !8219
  %14 = or i32 %12, %13, !dbg !8220
  call void @llvm.dbg.value(metadata i32 %14, metadata !8205, metadata !DIExpression()), !dbg !8207
  %15 = lshr i32 %5, 24, !dbg !8221
  call void @llvm.dbg.value(metadata i32 %15, metadata !8206, metadata !DIExpression()), !dbg !8207
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !8222
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !8207
  call void @llvm.dbg.value(metadata i32 %18, metadata !8206, metadata !DIExpression()), !dbg !8207
  call void @llvm.dbg.value(metadata i32 %17, metadata !8205, metadata !DIExpression()), !dbg !8207
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8223
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8224
  %19 = add i32 %3, 1, !dbg !8225
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8226
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8227
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8228
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8229
  ret void, !dbg !8230
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !8231 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8235, metadata !DIExpression()), !dbg !8237
  call void @llvm.dbg.value(metadata i32 %1, metadata !8236, metadata !DIExpression()), !dbg !8237
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !8238
  %4 = and i32 %3, -256, !dbg !8239
  %5 = and i32 %0, 255, !dbg !8240
  %6 = or i32 %4, %5, !dbg !8241
  ret i32 %6, !dbg !8242
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !8243 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8248, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.value(metadata i32 %1, metadata !8249, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.value(metadata i8** %2, metadata !8250, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.value(metadata i32* %3, metadata !8251, metadata !DIExpression()), !dbg !8263
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !8264
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !8264
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !8252, metadata !DIExpression()), !dbg !8265
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !8266
  call void @llvm.dbg.value(metadata i32 %7, metadata !8261, metadata !DIExpression()), !dbg !8263
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !8260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8263
  %8 = lshr i32 %7, 24, !dbg !8267
  call void @llvm.dbg.value(metadata i32 %8, metadata !8261, metadata !DIExpression()), !dbg !8263
  %9 = trunc i32 %8 to i8, !dbg !8268
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !8269
  store i8 %9, i8* %6, align 4, !dbg !8270
  call void @llvm.dbg.value(metadata i32 1, metadata !8262, metadata !DIExpression()), !dbg !8263
  %11 = load i8*, i8** %2, align 4, !dbg !8271
  br label %12, !dbg !8275

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !8271
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !8262, metadata !DIExpression()), !dbg !8263
  %15 = load i8, i8* %13, align 1, !dbg !8276
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !8277
  store i8 %15, i8* %16, align 1, !dbg !8278
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8279
  store i8* %17, i8** %2, align 4, !dbg !8279
  %18 = add nuw nsw i32 %14, 1, !dbg !8280
  call void @llvm.dbg.value(metadata i32 %18, metadata !8262, metadata !DIExpression()), !dbg !8263
  %19 = icmp eq i32 %18, 4, !dbg !8281
  br i1 %19, label %20, label %12, !dbg !8275, !llvm.loop !8282

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !8284
  %22 = load i32, i32* %21, align 4, !dbg !8284
  call void @llvm.dbg.value(metadata i32 %22, metadata !8261, metadata !DIExpression()), !dbg !8263
  %23 = load i32, i32* %3, align 4, !dbg !8285
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !8286
  %25 = shl i32 %7, 8, !dbg !8287
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !8260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !8263
  %26 = and i32 %0, 255, !dbg !8288
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !8260, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !8263
  %27 = or i32 %25, %26, !dbg !8289
  call void @llvm.dbg.value(metadata i32 %27, metadata !8260, metadata !DIExpression()), !dbg !8263
  store i32 %24, i32* %3, align 4, !dbg !8290
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8291
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !8292
  ret i32 %27, !dbg !8293
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !8294 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !8298, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i8* %1, metadata !8299, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %2, metadata !8300, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i8* %1, metadata !8302, metadata !DIExpression()), !dbg !8304
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !8305
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !8305
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !8303, metadata !DIExpression()), !dbg !8306
  %6 = add i32 %0, -1610348544, !dbg !8307
  call void @llvm.dbg.value(metadata i32 %6, metadata !8298, metadata !DIExpression()), !dbg !8304
  %7 = ptrtoint i8* %1 to i32, !dbg !8308
  %8 = and i32 %7, 3, !dbg !8310
  %9 = icmp eq i32 %8, 0, !dbg !8311
  br i1 %9, label %10, label %23, !dbg !8312

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %2, metadata !8300, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %6, metadata !8298, metadata !DIExpression()), !dbg !8304
  %11 = icmp sgt i32 %2, 0, !dbg !8313
  br i1 %11, label %12, label %72, !dbg !8317

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %14, metadata !8300, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %15, metadata !8298, metadata !DIExpression()), !dbg !8304
  %16 = bitcast i8* %13 to i32*, !dbg !8318
  %17 = load i32, i32* %16, align 4, !dbg !8318
  %18 = inttoptr i32 %15 to i32*, !dbg !8318
  store volatile i32 %17, i32* %18, align 4, !dbg !8318
  %19 = add i32 %15, 4, !dbg !8320
  call void @llvm.dbg.value(metadata i32 %19, metadata !8298, metadata !DIExpression()), !dbg !8304
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !8321
  call void @llvm.dbg.value(metadata i8* %20, metadata !8302, metadata !DIExpression()), !dbg !8304
  %21 = add nsw i32 %14, -4, !dbg !8322
  call void @llvm.dbg.value(metadata i32 %21, metadata !8300, metadata !DIExpression()), !dbg !8304
  %22 = icmp ugt i32 %14, 4, !dbg !8313
  br i1 %22, label %12, label %72, !dbg !8317, !llvm.loop !8323

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !8325
  %25 = icmp eq i32 %24, 0, !dbg !8327
  call void @llvm.dbg.value(metadata i8* %1, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i8* %1, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %2, metadata !8300, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %2, metadata !8300, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %6, metadata !8298, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %6, metadata !8298, metadata !DIExpression()), !dbg !8304
  %26 = icmp sgt i32 %2, 0, !dbg !8328
  br i1 %25, label %31, label %27, !dbg !8329

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !8330

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !8330

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !8333

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !8333

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %39, metadata !8300, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %40, metadata !8298, metadata !DIExpression()), !dbg !8304
  %41 = bitcast i8* %38 to i16*, !dbg !8336
  %42 = load i16, i16* %41, align 2, !dbg !8336
  store i16 %42, i16* %34, align 4, !dbg !8339
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !8340
  %44 = bitcast i8* %43 to i16*, !dbg !8340
  %45 = load i16, i16* %44, align 2, !dbg !8341
  store i16 %45, i16* %35, align 2, !dbg !8342
  %46 = load i32, i32* %36, align 4, !dbg !8343
  %47 = inttoptr i32 %40 to i32*, !dbg !8343
  store volatile i32 %46, i32* %47, align 4, !dbg !8343
  %48 = add i32 %40, 4, !dbg !8344
  call void @llvm.dbg.value(metadata i32 %48, metadata !8298, metadata !DIExpression()), !dbg !8304
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !8345
  call void @llvm.dbg.value(metadata i8* %49, metadata !8302, metadata !DIExpression()), !dbg !8304
  %50 = add nsw i32 %39, -4, !dbg !8346
  call void @llvm.dbg.value(metadata i32 %50, metadata !8300, metadata !DIExpression()), !dbg !8304
  %51 = icmp ugt i32 %39, 4, !dbg !8347
  br i1 %51, label %37, label %72, !dbg !8333, !llvm.loop !8348

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %54, metadata !8300, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %55, metadata !8298, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i8* %53, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 0, metadata !8301, metadata !DIExpression()), !dbg !8304
  br label %56, !dbg !8350

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %58, metadata !8301, metadata !DIExpression()), !dbg !8304
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !8354
  call void @llvm.dbg.value(metadata i8* %59, metadata !8302, metadata !DIExpression()), !dbg !8304
  %60 = load i8, i8* %57, align 1, !dbg !8357
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !8358
  store i8 %60, i8* %61, align 1, !dbg !8359
  %62 = add nuw nsw i32 %58, 1, !dbg !8360
  call void @llvm.dbg.value(metadata i32 %62, metadata !8301, metadata !DIExpression()), !dbg !8304
  %63 = icmp ult i32 %58, 3, !dbg !8361
  %64 = icmp ult i32 %62, %54, !dbg !8362
  %65 = select i1 %63, i1 %64, i1 false, !dbg !8362
  br i1 %65, label %56, label %66, !dbg !8350, !llvm.loop !8363

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !8365
  %68 = inttoptr i32 %55 to i32*, !dbg !8365
  store volatile i32 %67, i32* %68, align 4, !dbg !8365
  %69 = add i32 %55, 4, !dbg !8366
  call void @llvm.dbg.value(metadata i32 %69, metadata !8298, metadata !DIExpression()), !dbg !8304
  %70 = add nsw i32 %54, -4, !dbg !8367
  call void @llvm.dbg.value(metadata i8* %59, metadata !8302, metadata !DIExpression()), !dbg !8304
  call void @llvm.dbg.value(metadata i32 %70, metadata !8300, metadata !DIExpression()), !dbg !8304
  %71 = icmp sgt i32 %54, 4, !dbg !8368
  br i1 %71, label %52, label %72, !dbg !8330, !llvm.loop !8369

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !8371
  ret void, !dbg !8371
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !8372 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !8376, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i8* %1, metadata !8377, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i8* %2, metadata !8378, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i16 %3, metadata !8379, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i16 %4, metadata !8380, metadata !DIExpression()), !dbg !8386
  %7 = bitcast i32* %6 to i8*, !dbg !8387
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8387
  call void @llvm.dbg.value(metadata i8* %7, metadata !8385, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 0, metadata !8382, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8384, metadata !DIExpression()), !dbg !8386
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !8384, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 0, metadata !8382, metadata !DIExpression()), !dbg !8386
  %9 = icmp eq i16 %3, 0, !dbg !8388
  br i1 %9, label %33, label %10, !dbg !8391

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !8384, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 %12, metadata !8382, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 0, metadata !8383, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 0, metadata !8381, metadata !DIExpression()), !dbg !8386
  store i32 0, i32* %6, align 4, !dbg !8392
  call void @llvm.dbg.value(metadata i32 0, metadata !8383, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 %12, metadata !8382, metadata !DIExpression()), !dbg !8386
  %13 = icmp ult i32 %12, %8, !dbg !8395
  br i1 %13, label %14, label %27, !dbg !8397

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !8383, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 %16, metadata !8382, metadata !DIExpression()), !dbg !8386
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !8398
  %18 = load i8, i8* %17, align 1, !dbg !8398
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !8400
  store i8 %18, i8* %19, align 1, !dbg !8401
  %20 = add nuw nsw i32 %16, 1, !dbg !8402
  call void @llvm.dbg.value(metadata i32 %20, metadata !8382, metadata !DIExpression()), !dbg !8386
  %21 = add nuw nsw i32 %15, 1, !dbg !8403
  call void @llvm.dbg.value(metadata i32 %21, metadata !8383, metadata !DIExpression()), !dbg !8386
  %22 = icmp ult i32 %20, %8, !dbg !8395
  %23 = icmp ult i32 %15, 3, !dbg !8404
  %24 = select i1 %22, i1 %23, i1 false, !dbg !8404
  br i1 %24, label %14, label %25, !dbg !8397, !llvm.loop !8405

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !8407
  br label %27, !dbg !8407

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !8407
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !8408
  call void @llvm.dbg.value(metadata i32 %28, metadata !8381, metadata !DIExpression()), !dbg !8386
  %30 = bitcast i8* %11 to i32*, !dbg !8407
  store volatile i32 %28, i32* %30, align 4, !dbg !8407
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !8409
  call void @llvm.dbg.value(metadata i8* %31, metadata !8384, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 %29, metadata !8382, metadata !DIExpression()), !dbg !8386
  %32 = icmp ult i32 %29, %8, !dbg !8388
  br i1 %32, label %10, label %33, !dbg !8391, !llvm.loop !8410

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8412
  %34 = zext i16 %4 to i32, !dbg !8413
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8414
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !8415
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !8416
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !8384, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !8386
  call void @llvm.dbg.value(metadata i8* %2, metadata !8378, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 0, metadata !8382, metadata !DIExpression()), !dbg !8386
  %35 = icmp eq i16 %4, 0, !dbg !8417
  br i1 %35, label %47, label %36, !dbg !8420

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !8421
  call void @llvm.dbg.value(metadata i8* %37, metadata !8384, metadata !DIExpression()), !dbg !8386
  br label %38, !dbg !8420

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !8378, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i8* %40, metadata !8384, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata i32 %41, metadata !8382, metadata !DIExpression()), !dbg !8386
  %42 = load volatile i8, i8* %40, align 1, !dbg !8422
  store i8 %42, i8* %39, align 1, !dbg !8424
  %43 = add nuw nsw i32 %41, 1, !dbg !8425
  call void @llvm.dbg.value(metadata i32 %43, metadata !8382, metadata !DIExpression()), !dbg !8386
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !8426
  call void @llvm.dbg.value(metadata i8* %44, metadata !8378, metadata !DIExpression()), !dbg !8386
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !8427
  call void @llvm.dbg.value(metadata i8* %45, metadata !8384, metadata !DIExpression()), !dbg !8386
  %46 = icmp eq i32 %43, %34, !dbg !8417
  br i1 %46, label %47, label %38, !dbg !8420, !llvm.loop !8428

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8430
  ret void, !dbg !8430
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !8431 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8435, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.value(metadata i8* %1, metadata !8436, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.value(metadata i32 0, metadata !8437, metadata !DIExpression()), !dbg !8443
  %4 = icmp eq i8* %1, null, !dbg !8444
  br i1 %4, label %67, label %5, !dbg !8446

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8447
  call void @llvm.dbg.value(metadata i32 %27, metadata !8438, metadata !DIExpression()), !dbg !8443
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !8448

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !8443
  call void @llvm.dbg.value(metadata i32 %9, metadata !8437, metadata !DIExpression()), !dbg !8443
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !8449
  %11 = load i8, i8* %10, align 1, !dbg !8449
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !8450

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !8451

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8454
  %15 = and i32 %14, -2, !dbg !8454
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8454
  br label %41, !dbg !8458

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8459
  %18 = and i32 %17, -2, !dbg !8459
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8459
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !8462

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8464
  %22 = or i32 %21, 1, !dbg !8464
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8464
  br label %41, !dbg !8468

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8469
  %25 = or i32 %24, 1, !dbg !8469
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8469
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !8447
  %28 = icmp eq i32 %27, 0, !dbg !8472
  br i1 %7, label %29, label %35, !dbg !8475

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8476
  br i1 %28, label %33, label %31, !dbg !8479

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !8476
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8476
  br label %67, !dbg !8476

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !8476
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8476
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8480
  br i1 %28, label %39, label %37, !dbg !8483

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !8480
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8480
  br label %67, !dbg !8480

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !8480
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !8480
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !8484
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !8485
  %44 = load i8, i8* %43, align 1, !dbg !8485
  %45 = icmp eq i8 %44, 5, !dbg !8486
  br i1 %45, label %46, label %56, !dbg !8487

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8488
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !8489

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !8439, metadata !DIExpression(DW_OP_deref)), !dbg !8490
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !8491
  %50 = load i8, i8* %3, align 1, !dbg !8493
  call void @llvm.dbg.value(metadata i8 %50, metadata !8439, metadata !DIExpression()), !dbg !8490
  %51 = load i8, i8* %48, align 1, !dbg !8494
  %52 = and i8 %51, %50, !dbg !8495
  %53 = icmp eq i8 %52, 0, !dbg !8496
  br i1 %53, label %54, label %49, !dbg !8496, !llvm.loop !8497

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !8499
  %55 = add i32 %9, 1, !dbg !8500
  br label %61, !dbg !8501

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !8502
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !8504
  %59 = load i8, i8* %58, align 1, !dbg !8504
  %60 = zext i8 %59 to i16, !dbg !8504
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !8505
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !8500
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !8506
  %64 = load i8, i8* %63, align 1, !dbg !8506
  %65 = zext i8 %64 to i32, !dbg !8506
  %66 = add i32 %42, %65, !dbg !8507
  call void @llvm.dbg.value(metadata i32 %66, metadata !8437, metadata !DIExpression()), !dbg !8443
  br label %8, !dbg !8448, !llvm.loop !8508

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !8510
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8511 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !8515, metadata !DIExpression()), !dbg !8518
  call void @llvm.dbg.value(metadata i8* %1, metadata !8516, metadata !DIExpression()), !dbg !8518
  call void @llvm.dbg.value(metadata i8 %2, metadata !8517, metadata !DIExpression()), !dbg !8518
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !8517, metadata !DIExpression(DW_OP_deref)), !dbg !8518
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !8519
  ret void, !dbg !8520
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !8521 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !8525, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.value(metadata i8* %1, metadata !8526, metadata !DIExpression()), !dbg !8527
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !8528
  ret void, !dbg !8529
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !8530 {
  ret i32 78, !dbg !8534
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !8535 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8539
  %2 = and i32 %1, 7340032, !dbg !8541
  %3 = icmp ult i32 %2, 2097153, !dbg !8542
  %4 = select i1 %3, i32 30, i32 18, !dbg !8543
  ret i32 %4, !dbg !8544
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !8545 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8549, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i32 0, metadata !8550, metadata !DIExpression()), !dbg !8551
  call void @llvm.dbg.value(metadata i32 0, metadata !8550, metadata !DIExpression()), !dbg !8551
  br label %2, !dbg !8552

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !8550, metadata !DIExpression()), !dbg !8551
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !8554
  store i8 -1, i8* %4, align 1, !dbg !8557
  %5 = add nuw nsw i32 %3, 1, !dbg !8558
  call void @llvm.dbg.value(metadata i32 %5, metadata !8550, metadata !DIExpression()), !dbg !8551
  %6 = icmp eq i32 %5, 8, !dbg !8559
  br i1 %6, label %7, label %2, !dbg !8552, !llvm.loop !8560

7:                                                ; preds = %2
  ret i1 true, !dbg !8562
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !8563 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !8565, metadata !DIExpression()), !dbg !8566
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8567
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !8568
  %3 = load i8, i8* %2, align 1, !dbg !8568
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !8569
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !8570
  %5 = ptrtoint i8* %4 to i32, !dbg !8571
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !8572
  %6 = bitcast i8* %4 to i32*, !dbg !8573
  %7 = load volatile i32, i32* %6, align 4, !dbg !8574
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !8575
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8576
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !8577
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8578
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !8579
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8580
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !8581
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !8582
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !8583
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8584
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !8585
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8586
  %14 = or i32 %13, 986880, !dbg !8587
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8588
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8589
  %16 = or i32 %15, 252645135, !dbg !8590
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8591
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !8592
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !8593
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !8594
  %20 = load i8, i8* %19, align 1, !dbg !8594
  %21 = zext i8 %20 to i32, !dbg !8595
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !8596
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !8597
  ret void, !dbg !8598
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !8599 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !8600
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !8601
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !8602
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !8603
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !8604
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8605
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !8606
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !8607
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !8608
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8609
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8610
  %7 = and i32 %6, -252645136, !dbg !8611
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !8612
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !8613
  %9 = zext i8 %8 to i32, !dbg !8613
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !8614
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !8615
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !8616
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !8618
  %13 = inttoptr i32 %12 to i32*, !dbg !8619
  %14 = load volatile i32, i32* %13, align 4, !dbg !8620
  %15 = icmp eq i32 %11, %14, !dbg !8621
  br i1 %15, label %17, label %16, !dbg !8622

16:                                               ; preds = %0, %16
  br label %16, !dbg !8623, !llvm.loop !8624

17:                                               ; preds = %0
  ret void, !dbg !8626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !8627 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8628
  %2 = icmp eq i32 %1, 0, !dbg !8630
  br i1 %2, label %3, label %5, !dbg !8631

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8632
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8634
  br label %5, !dbg !8635

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8636
  %7 = icmp eq i32 %6, 0, !dbg !8638
  br i1 %7, label %8, label %10, !dbg !8639

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8640
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8642
  br label %10, !dbg !8643

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8644
  %12 = and i32 %11, -256, !dbg !8645
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8646
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8647
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !8648
  ret void, !dbg !8649
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !8650 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !8651
  %2 = icmp eq i32 %1, 0, !dbg !8653
  br i1 %2, label %4, label %3, !dbg !8654

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !8655
  br label %4, !dbg !8657

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !8658
  %6 = icmp eq i32 %5, 0, !dbg !8660
  br i1 %6, label %8, label %7, !dbg !8661

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !8662
  br label %8, !dbg !8664

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !8665
  ret void, !dbg !8666
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !8667 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8669, metadata !DIExpression()), !dbg !8670
  ret i32 0, !dbg !8671
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !8672 {
  call void @llvm.dbg.value(metadata i32 0, metadata !8674, metadata !DIExpression()), !dbg !8675
  ret i32 0, !dbg !8676
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8679, metadata !DIExpression()), !dbg !8680
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !8681
  ret void, !dbg !8682
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !8683 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !8686
  call void @llvm.dbg.value(metadata i32 %1, metadata !8685, metadata !DIExpression()), !dbg !8687
  ret i32 %1, !dbg !8688
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !8689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !8691, metadata !DIExpression()), !dbg !8692
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !8693
  ret void, !dbg !8694
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !8695 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8697, metadata !DIExpression()), !dbg !8698
  ret i32 0, !dbg !8699
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !8700 {
  ret i32 0, !dbg !8703
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !8704 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8708, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i8* %1, metadata !8709, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i32 %2, metadata !8710, metadata !DIExpression()), !dbg !8723
  %4 = ptrtoint i8* %0 to i32, !dbg !8724
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !8725
  %7 = and i32 %6, 3, !dbg !8725
  %8 = icmp eq i32 %7, 0, !dbg !8725
  br i1 %8, label %9, label %26, !dbg !8725

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !8726
  call void @llvm.dbg.value(metadata i32* %10, metadata !8712, metadata !DIExpression()), !dbg !8727
  %11 = bitcast i8* %1 to i32*, !dbg !8728
  call void @llvm.dbg.value(metadata i32* %11, metadata !8715, metadata !DIExpression()), !dbg !8727
  call void @llvm.dbg.value(metadata i32 0, metadata !8711, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i32 0, metadata !8711, metadata !DIExpression()), !dbg !8723
  %12 = icmp ult i32 %2, 4, !dbg !8729
  br i1 %12, label %65, label %13, !dbg !8732

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !8732

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !8711, metadata !DIExpression()), !dbg !8723
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !8733
  %18 = load i32, i32* %17, align 4, !dbg !8733
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !8736
  %20 = load i32, i32* %19, align 4, !dbg !8736
  %21 = icmp eq i32 %18, %20, !dbg !8737
  %22 = add nuw nsw i32 %16, 1, !dbg !8738
  call void @llvm.dbg.value(metadata i32 %22, metadata !8711, metadata !DIExpression()), !dbg !8723
  %23 = xor i1 %21, true, !dbg !8739
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !8739
  call void @llvm.dbg.value(metadata i32 %22, metadata !8711, metadata !DIExpression()), !dbg !8723
  br i1 %25, label %59, label %15, !dbg !8739, !llvm.loop !8740

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !8742
  %28 = icmp eq i32 %27, 0, !dbg !8742
  br i1 %28, label %31, label %29, !dbg !8742

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !8711, metadata !DIExpression()), !dbg !8723
  %30 = icmp eq i32 %2, 0, !dbg !8743
  br i1 %30, label %65, label %48, !dbg !8746

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !8747
  call void @llvm.dbg.value(metadata i16* %32, metadata !8716, metadata !DIExpression()), !dbg !8748
  %33 = bitcast i8* %1 to i16*, !dbg !8749
  call void @llvm.dbg.value(metadata i16* %33, metadata !8719, metadata !DIExpression()), !dbg !8748
  call void @llvm.dbg.value(metadata i32 0, metadata !8711, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.value(metadata i32 0, metadata !8711, metadata !DIExpression()), !dbg !8723
  %34 = icmp ult i32 %2, 2, !dbg !8750
  br i1 %34, label %65, label %35, !dbg !8753

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !8753

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !8711, metadata !DIExpression()), !dbg !8723
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !8754
  %40 = load i16, i16* %39, align 2, !dbg !8754
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !8757
  %42 = load i16, i16* %41, align 2, !dbg !8757
  %43 = icmp eq i16 %40, %42, !dbg !8758
  %44 = add nuw nsw i32 %38, 1, !dbg !8759
  call void @llvm.dbg.value(metadata i32 %44, metadata !8711, metadata !DIExpression()), !dbg !8723
  %45 = xor i1 %43, true, !dbg !8760
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !8760
  call void @llvm.dbg.value(metadata i32 %44, metadata !8711, metadata !DIExpression()), !dbg !8723
  br i1 %47, label %61, label %37, !dbg !8760, !llvm.loop !8761

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !8711, metadata !DIExpression()), !dbg !8723
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !8763
  %51 = load i8, i8* %50, align 1, !dbg !8763
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !8766
  %53 = load i8, i8* %52, align 1, !dbg !8766
  %54 = icmp eq i8 %51, %53, !dbg !8767
  %55 = add nuw i32 %49, 1, !dbg !8768
  call void @llvm.dbg.value(metadata i32 %55, metadata !8711, metadata !DIExpression()), !dbg !8723
  %56 = xor i1 %54, true, !dbg !8769
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !8769
  call void @llvm.dbg.value(metadata i32 %55, metadata !8711, metadata !DIExpression()), !dbg !8723
  br i1 %58, label %63, label %48, !dbg !8769, !llvm.loop !8770

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !8772
  br label %65, !dbg !8772

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !8772
  br label %65, !dbg !8772

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !8772
  br label %65, !dbg !8772

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !8723
  ret i1 %66, !dbg !8772
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !8773 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8777, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i8* %1, metadata !8778, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %2, metadata !8779, metadata !DIExpression()), !dbg !8788
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8789
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !8780, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i8* %0, metadata !8781, metadata !DIExpression()), !dbg !8788
  %7 = bitcast i8** %4 to i8*, !dbg !8790
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8790
  call void @llvm.dbg.value(metadata i8* %1, metadata !8782, metadata !DIExpression()), !dbg !8788
  store i8* %1, i8** %4, align 4, !dbg !8791
  call void @llvm.dbg.value(metadata i32 0, metadata !8783, metadata !DIExpression()), !dbg !8788
  %8 = bitcast i32* %5 to i8*, !dbg !8792
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !8792
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8793
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !8794
  store i8 1, i8* %9, align 4, !dbg !8795
  call void @llvm.dbg.value(metadata i32 %2, metadata !8779, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i8* %0, metadata !8781, metadata !DIExpression()), !dbg !8788
  %10 = icmp eq i32 %2, 0, !dbg !8796
  br i1 %10, label %73, label %11, !dbg !8797

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !8798
  call void @llvm.dbg.value(metadata i32 %12, metadata !8781, metadata !DIExpression()), !dbg !8788
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !8797

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !8779, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %20, metadata !8781, metadata !DIExpression()), !dbg !8788
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8799
  %22 = shl i32 %21, 1, !dbg !8801
  %23 = add i32 %22, -1, !dbg !8802
  %24 = and i32 %23, %20, !dbg !8803
  %25 = sub i32 %22, %24, !dbg !8804
  %26 = icmp ugt i32 %19, %25, !dbg !8805
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !8806
  call void @llvm.dbg.value(metadata i32 %27, metadata !8785, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.value(metadata i32 %27, metadata !8784, metadata !DIExpression()), !dbg !8788
  store i32 %27, i32* %5, align 4, !dbg !8807
  %28 = load i32, i32* %13, align 4, !dbg !8808
  %29 = and i32 %28, 16, !dbg !8810
  %30 = icmp eq i32 %29, 0, !dbg !8810
  br i1 %30, label %31, label %32, !dbg !8811

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !8812
  br label %32, !dbg !8814

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !8815
  %34 = icmp eq i8 %33, 4, !dbg !8817
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8818
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !8818
  %37 = load i8, i8* %36, align 1, !dbg !8818
  %38 = zext i8 %37 to i32, !dbg !8818
  br i1 %34, label %39, label %43, !dbg !8819

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !8782, metadata !DIExpression(DW_OP_deref)), !dbg !8788
  call void @llvm.dbg.value(metadata i32* %5, metadata !8784, metadata !DIExpression(DW_OP_deref)), !dbg !8788
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !8820
  call void @llvm.dbg.value(metadata i32 %40, metadata !8783, metadata !DIExpression()), !dbg !8788
  %41 = load i8*, i8** %4, align 4, !dbg !8822
  call void @llvm.dbg.value(metadata i8* %41, metadata !8782, metadata !DIExpression()), !dbg !8788
  %42 = load i32, i32* %5, align 4, !dbg !8823
  call void @llvm.dbg.value(metadata i32 %42, metadata !8784, metadata !DIExpression()), !dbg !8788
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !8824
  br label %47, !dbg !8825

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !8826
  call void @llvm.dbg.value(metadata i32 %44, metadata !8783, metadata !DIExpression()), !dbg !8788
  %45 = load i8*, i8** %4, align 4, !dbg !8828
  call void @llvm.dbg.value(metadata i8* %45, metadata !8782, metadata !DIExpression()), !dbg !8788
  %46 = load i32, i32* %5, align 4, !dbg !8829
  call void @llvm.dbg.value(metadata i32 %46, metadata !8784, metadata !DIExpression()), !dbg !8788
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !8830
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !8818
  call void @llvm.dbg.value(metadata i32 %48, metadata !8783, metadata !DIExpression()), !dbg !8788
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !8831
  call void @llvm.dbg.value(metadata i32 %49, metadata !8787, metadata !DIExpression()), !dbg !8788
  %50 = load i8, i8* %14, align 1, !dbg !8832
  %51 = zext i8 %50 to i32, !dbg !8833
  %52 = add i32 %27, 1, !dbg !8834
  %53 = add i32 %52, %51, !dbg !8835
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8836
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8837
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8838
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8839
  %54 = load i16, i16* %16, align 2, !dbg !8840
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !8841
  %55 = load i16, i16* %16, align 2, !dbg !8842
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !8843
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !8844
  br label %56, !dbg !8845

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !8846
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !8848
  %59 = load i8, i8* %58, align 1, !dbg !8848
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !8849
  call void @llvm.dbg.value(metadata i32 %60, metadata !8786, metadata !DIExpression()), !dbg !8788
  %61 = load i8*, i8** %17, align 4, !dbg !8850
  %62 = load i8, i8* %61, align 1, !dbg !8852
  %63 = zext i8 %62 to i32, !dbg !8852
  %64 = and i32 %60, %63, !dbg !8853
  %65 = icmp eq i32 %64, 0, !dbg !8854
  br i1 %65, label %66, label %56, !dbg !8855, !llvm.loop !8856

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8858
  %67 = load i32, i32* %5, align 4, !dbg !8859
  call void @llvm.dbg.value(metadata i32 %67, metadata !8784, metadata !DIExpression()), !dbg !8788
  %68 = load i8*, i8** %4, align 4, !dbg !8860
  call void @llvm.dbg.value(metadata i8* %68, metadata !8782, metadata !DIExpression()), !dbg !8788
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !8860
  call void @llvm.dbg.value(metadata i8* %69, metadata !8782, metadata !DIExpression()), !dbg !8788
  store i8* %69, i8** %4, align 4, !dbg !8860
  %70 = sub i32 %19, %27, !dbg !8861
  call void @llvm.dbg.value(metadata i32 %70, metadata !8779, metadata !DIExpression()), !dbg !8788
  %71 = add i32 %27, %20, !dbg !8862
  call void @llvm.dbg.value(metadata i32 %71, metadata !8781, metadata !DIExpression()), !dbg !8788
  %72 = icmp eq i32 %70, 0, !dbg !8796
  br i1 %72, label %73, label %18, !dbg !8797, !llvm.loop !8863

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !8865
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8866
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !8867
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !8867
  ret void, !dbg !8867
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8868 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8872, metadata !DIExpression()), !dbg !8874
  br label %2, !dbg !8875

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !8876
  call void @llvm.dbg.value(metadata i32 %3, metadata !8873, metadata !DIExpression()), !dbg !8874
  %4 = icmp eq i32 %3, 0, !dbg !8878
  br i1 %4, label %5, label %2, !dbg !8879, !llvm.loop !8880

5:                                                ; preds = %2
  ret void, !dbg !8882
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8883 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8885, metadata !DIExpression()), !dbg !8886
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8887
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !8887
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !8888
  %5 = load i8, i8* %4, align 1, !dbg !8888
  %6 = zext i8 %5 to i32, !dbg !8889
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !8890
  ret void, !dbg !8891
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !8892 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8895
  call void @llvm.dbg.value(metadata i32 %1, metadata !8894, metadata !DIExpression()), !dbg !8896
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !8897
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8898
  ret void, !dbg !8899
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !8900 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8904, metadata !DIExpression()), !dbg !8908
  call void @llvm.dbg.value(metadata i8 %1, metadata !8905, metadata !DIExpression()), !dbg !8908
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8909
  call void @llvm.dbg.value(metadata i32 %3, metadata !8906, metadata !DIExpression()), !dbg !8908
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8910
  %5 = load i16, i16* %4, align 2, !dbg !8910
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !8911
  %6 = zext i8 %1 to i32, !dbg !8912
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8913
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8914
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8915
  %7 = load i16, i16* %4, align 2, !dbg !8916
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !8917
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8918
  %9 = lshr i32 %8, 8, !dbg !8919
  %10 = and i32 %9, 255, !dbg !8920
  call void @llvm.dbg.value(metadata i32 %10, metadata !8907, metadata !DIExpression()), !dbg !8908
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !8921
  ret i32 %10, !dbg !8922
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !8923 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8926
  call void @llvm.dbg.value(metadata i32 %1, metadata !8925, metadata !DIExpression()), !dbg !8927
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !8928
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8929
  %3 = and i32 %2, -513, !dbg !8929
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8929
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8932
  ret void, !dbg !8933
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !8934 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8936, metadata !DIExpression()), !dbg !8938
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8939
  call void @llvm.dbg.value(metadata i32 %2, metadata !8937, metadata !DIExpression()), !dbg !8938
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !8940
  br i1 %3, label %4, label %5, !dbg !8942

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !8943
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8945
  ret void, !dbg !8946

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8947
  tail call void @Flash_ReturnReady() #21, !dbg !8949
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !8949
  unreachable, !dbg !8949
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !8953 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !8955, metadata !DIExpression()), !dbg !8960
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8961
  call void @llvm.dbg.value(metadata i32 %1, metadata !8957, metadata !DIExpression()), !dbg !8960
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !8962
  %3 = icmp eq i32 %2, 0, !dbg !8964
  br i1 %3, label %4, label %125, !dbg !8965

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !8966
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8967
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !8955, metadata !DIExpression()), !dbg !8960
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !8969
  %7 = load i32, i32* %6, align 4, !dbg !8969
  %8 = xor i32 %7, -1, !dbg !8969
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !8969
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !8969
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !8969
  %12 = icmp eq i32 %8, %11, !dbg !8969
  br i1 %12, label %14, label %13, !dbg !8972

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8973
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !8973
  unreachable, !dbg !8973

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8975
  %16 = icmp ult i32 %15, 16, !dbg !8977
  br i1 %16, label %17, label %34, !dbg !8978

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !8979
  %19 = load i8, i8* %18, align 4, !dbg !8979
  %20 = icmp eq i8 %19, 1, !dbg !8980
  br i1 %20, label %21, label %34, !dbg !8981

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !8982

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8984
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !8986
  %27 = load i8, i8* %26, align 1, !dbg !8986
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !8987
  call void @llvm.dbg.value(metadata i32 %28, metadata !8956, metadata !DIExpression()), !dbg !8960
  %29 = load i8*, i8** %23, align 4, !dbg !8988
  %30 = load i8, i8* %29, align 1, !dbg !8990
  %31 = zext i8 %30 to i32, !dbg !8990
  %32 = and i32 %28, %31, !dbg !8991
  %33 = icmp eq i32 %32, 0, !dbg !8992
  br i1 %33, label %34, label %24, !dbg !8993, !llvm.loop !8994

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8996, !range !2834
  %36 = icmp ne i8 %35, 0, !dbg !8996
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !8998
  br i1 %39, label %116, label %40, !dbg !8998

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !8999
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8999
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !9001
  %44 = load i8, i8* %43, align 1, !dbg !9001
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !9002
  call void @llvm.dbg.value(metadata i32 %45, metadata !8956, metadata !DIExpression()), !dbg !8960
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !9003
  %47 = load i8*, i8** %46, align 4, !dbg !9003
  %48 = load i8, i8* %47, align 1, !dbg !9005
  %49 = zext i8 %48 to i32, !dbg !9005
  %50 = and i32 %45, %49, !dbg !9006
  %51 = icmp eq i32 %50, 0, !dbg !9007
  br i1 %51, label %85, label %52, !dbg !9008

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !9009
  br label %53, !dbg !9011

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !9012
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !9014
  %56 = load i8, i8* %55, align 1, !dbg !9014
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !9015
  call void @llvm.dbg.value(metadata i32 %57, metadata !8956, metadata !DIExpression()), !dbg !8960
  %58 = load i8*, i8** %46, align 4, !dbg !9016
  %59 = load i8, i8* %58, align 1, !dbg !9018
  %60 = zext i8 %59 to i32, !dbg !9018
  %61 = and i32 %57, %60, !dbg !9019
  %62 = icmp eq i32 %61, 0, !dbg !9020
  br i1 %62, label %63, label %53, !dbg !9021, !llvm.loop !9022

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !9024
  %65 = load i32, i32* %64, align 4, !dbg !9024
  %66 = and i32 %65, 4, !dbg !9026
  %67 = icmp eq i32 %66, 0, !dbg !9026
  br i1 %67, label %84, label %68, !dbg !9027

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !9028
  %70 = load i8, i8* %69, align 4, !dbg !9028
  %71 = icmp eq i8 %70, 2, !dbg !9029
  br i1 %71, label %72, label %84, !dbg !9030

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9031
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9033
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9034
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !9035
  %74 = load i16, i16* %73, align 2, !dbg !9035
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !9036
  %75 = load i16, i16* %73, align 2, !dbg !9037
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !9038
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !9039
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9040
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9041
  %76 = load i16, i16* %73, align 2, !dbg !9042
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !9043
  %77 = load i16, i16* %73, align 2, !dbg !9044
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !9045
  br label %78, !dbg !9046

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9047
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9049
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9050
  %79 = load i16, i16* %73, align 2, !dbg !9051
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !9052
  %80 = load i16, i16* %73, align 2, !dbg !9053
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !9054
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9055
  call void @llvm.dbg.value(metadata i32 %81, metadata !8956, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !8960
  %82 = and i32 %81, 256, !dbg !9056
  %83 = icmp eq i32 %82, 0, !dbg !9056
  br i1 %83, label %84, label %78, !dbg !9056, !llvm.loop !9057

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !9059
  br label %116, !dbg !9060

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !9061
  %87 = load i32, i32* %86, align 4, !dbg !9061
  %88 = and i32 %87, 2, !dbg !9064
  %89 = icmp eq i32 %88, 0, !dbg !9064
  br i1 %89, label %115, label %90, !dbg !9065

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !9066
  %92 = load %struct.anon.9*, %struct.anon.9** %91, align 4, !dbg !9066
  %93 = icmp eq %struct.anon.9* %92, null, !dbg !9067
  br i1 %93, label %94, label %115, !dbg !9068

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !9069
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !9071
  %97 = load i8, i8* %96, align 1, !dbg !9071
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !9072
  call void @llvm.dbg.value(metadata i32 %98, metadata !8956, metadata !DIExpression()), !dbg !8960
  %99 = load i8*, i8** %46, align 4, !dbg !9073
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !9075
  %101 = load i8, i8* %100, align 1, !dbg !9075
  %102 = zext i8 %101 to i32, !dbg !9075
  %103 = and i32 %98, %102, !dbg !9076
  %104 = icmp eq i32 %103, 0, !dbg !9077
  br i1 %104, label %105, label %115, !dbg !9078

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !9079
  %107 = load i8, i8* %106, align 1, !dbg !9079
  %108 = zext i8 %107 to i32, !dbg !9079
  %109 = and i32 %98, %108, !dbg !9080
  %110 = icmp eq i32 %109, 0, !dbg !9081
  br i1 %110, label %111, label %115, !dbg !9082

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !9083
  %113 = load i16, i16* %112, align 2, !dbg !9083
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !9085
  %114 = load i16, i16* %112, align 2, !dbg !9086
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !9087
  br label %115, !dbg !9088

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9089
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9090
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !9091
  %118 = sub i32 0, %117, !dbg !9091
  call void @llvm.dbg.value(metadata i32 %118, metadata !8958, metadata !DIExpression()), !dbg !9092
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !9093
  %120 = icmp ult i32 %119, %118, !dbg !9095
  br i1 %120, label %121, label %122, !dbg !9096

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !9097
  br label %122, !dbg !9099

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9100
  %124 = and i32 %123, -513, !dbg !9100
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9100
  br label %125, !dbg !9103

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8960
  ret void, !dbg !9104
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9105 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9107, metadata !DIExpression()), !dbg !9111
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !9112
  %3 = icmp eq i32 %2, -1, !dbg !9114
  br i1 %3, label %12, label %4, !dbg !9115

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !9109, metadata !DIExpression()), !dbg !9111
  %5 = sub i32 0, %2, !dbg !9116
  call void @llvm.dbg.value(metadata i32 %5, metadata !9110, metadata !DIExpression()), !dbg !9111
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9118
  %7 = load i8, i8* %6, align 4, !dbg !9118
  %8 = zext i8 %7 to i32, !dbg !9120
  %9 = icmp ugt i32 %8, %5, !dbg !9121
  br i1 %9, label %10, label %12, !dbg !9122

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !9123
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !9125
  br label %12, !dbg !9126

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9127
  call void @llvm.dbg.value(metadata i32 %13, metadata !9108, metadata !DIExpression()), !dbg !9111
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9128
  %15 = load i16, i16* %14, align 2, !dbg !9128
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9129
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !9129
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !9130
  %19 = load i8, i8* %18, align 1, !dbg !9130
  %20 = zext i8 %19 to i32, !dbg !9131
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !9132
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !9133
  ret void, !dbg !9134
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !9135 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9138
  call void @llvm.dbg.value(metadata i32 %1, metadata !9137, metadata !DIExpression()), !dbg !9139
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9140
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9141
  %3 = and i32 %2, -513, !dbg !9141
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !9141
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9144
  ret void, !dbg !9145
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9146 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9150, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata i32 %1, metadata !9151, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.value(metadata i8 %2, metadata !9152, metadata !DIExpression()), !dbg !9154
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9155
  call void @llvm.dbg.value(metadata i32 %4, metadata !9153, metadata !DIExpression()), !dbg !9154
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9156
  %6 = load i16, i16* %5, align 2, !dbg !9156
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !9157
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9158
  %7 = zext i8 %2 to i32, !dbg !9159
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9160
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9161
  %8 = load i16, i16* %5, align 2, !dbg !9162
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !9163
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !9164
  ret void, !dbg !9165
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !9166 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9171
  call void @llvm.dbg.value(metadata i32 %1, metadata !9170, metadata !DIExpression()), !dbg !9172
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !9173
  br i1 %2, label %4, label %3, !dbg !9175

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !9176
  br label %4, !dbg !9178

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !9179
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9179
  ret i32 %5, !dbg !9180
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !9181 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9188
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9185, metadata !DIExpression()), !dbg !9189
  call void @llvm.dbg.value(metadata i8 0, metadata !9187, metadata !DIExpression()), !dbg !9189
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !9190
  %3 = load i32, i32* %2, align 4, !dbg !9190
  %4 = xor i32 %3, -1, !dbg !9190
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !9190
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !9190
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !9190
  %8 = icmp eq i32 %4, %7, !dbg !9190
  br i1 %8, label %10, label %9, !dbg !9193

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9194
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !9194
  unreachable, !dbg !9194

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9196
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9197
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9197
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !9198
  %14 = load i8, i8* %13, align 1, !dbg !9198
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !9199
  call void @llvm.dbg.value(metadata i32 %15, metadata !9186, metadata !DIExpression()), !dbg !9189
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9200
  %17 = load i8*, i8** %16, align 4, !dbg !9200
  %18 = load i8, i8* %17, align 1, !dbg !9202
  %19 = zext i8 %18 to i32, !dbg !9202
  %20 = and i32 %15, %19, !dbg !9203
  %21 = icmp eq i32 %20, 0, !dbg !9204
  br i1 %21, label %22, label %23, !dbg !9205

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9206
  call void @llvm.dbg.value(metadata i8 1, metadata !9187, metadata !DIExpression()), !dbg !9189
  br label %23, !dbg !9208

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !9187, metadata !DIExpression()), !dbg !9189
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9209
  ret i1 %21, !dbg !9210
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !9211 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9213, metadata !DIExpression()), !dbg !9214
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9215, !range !2834
  %2 = icmp eq i8 %1, 0, !dbg !9215
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9215
  %4 = icmp eq i8 %3, 0, !dbg !9215
  %5 = select i1 %2, i1 true, i1 %4, !dbg !9215
  br i1 %5, label %6, label %7, !dbg !9215

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9218
  tail call void @Flash_ReturnReady() #21, !dbg !9220
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !9220
  unreachable, !dbg !9220

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9224
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !9213, metadata !DIExpression()), !dbg !9214
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !9225
  ret void, !dbg !9226
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9227 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9229, metadata !DIExpression()), !dbg !9231
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9232
  call void @llvm.dbg.value(metadata i32 %2, metadata !9230, metadata !DIExpression()), !dbg !9231
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9233
  %4 = load i16, i16* %3, align 2, !dbg !9233
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9234
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !9234
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !9235
  %8 = load i8, i8* %7, align 1, !dbg !9235
  %9 = zext i8 %8 to i32, !dbg !9236
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !9237
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !9238
  %11 = load i8, i8* %10, align 4, !dbg !9238
  %12 = icmp eq i8 %11, 0, !dbg !9240
  br i1 %12, label %14, label %13, !dbg !9241

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !9242
  br label %14, !dbg !9244

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !9245
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !9246
  ret void, !dbg !9247
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !9248 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9251
  call void @llvm.dbg.value(metadata i32 %1, metadata !9250, metadata !DIExpression()), !dbg !9252
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9253
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !9254
  ret void, !dbg !9255
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !9256 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !9260
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9258, metadata !DIExpression()), !dbg !9261
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9262, !range !2834
  %3 = icmp ne i8 %2, 0, !dbg !9262
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9262
  %5 = icmp eq i8 %4, 0, !dbg !9262
  %6 = select i1 %3, i1 %5, i1 false, !dbg !9262
  br i1 %6, label %8, label %7, !dbg !9262

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !9265
  tail call void @Flash_ReturnReady() #21, !dbg !9267
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !9267
  unreachable, !dbg !9267

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !9271
  %10 = load i32, i32* %9, align 4, !dbg !9271
  %11 = xor i32 %10, -1, !dbg !9271
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !9271
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !9271
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !9271
  %15 = icmp eq i32 %11, %14, !dbg !9271
  br i1 %15, label %17, label %16, !dbg !9274

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !9275
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !9275
  unreachable, !dbg !9275

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9277
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !9278

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !9279
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !9281
  %23 = load i8, i8* %22, align 1, !dbg !9281
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !9282
  call void @llvm.dbg.value(metadata i32 %24, metadata !9259, metadata !DIExpression()), !dbg !9261
  %25 = load i8*, i8** %19, align 4, !dbg !9283
  %26 = load i8, i8* %25, align 1, !dbg !9285
  %27 = zext i8 %26 to i32, !dbg !9285
  %28 = and i32 %24, %27, !dbg !9286
  %29 = icmp eq i32 %28, 0, !dbg !9287
  br i1 %29, label %30, label %20, !dbg !9288, !llvm.loop !9289

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !9291
  ret void, !dbg !9292
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !9293 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9295, metadata !DIExpression()), !dbg !9296
  ret void, !dbg !9297
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !9298 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9321, metadata !DIExpression()), !dbg !9324
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9322, metadata !DIExpression()), !dbg !9324
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9325
  %4 = load i8*, i8** %3, align 4, !dbg !9325
  call void @llvm.dbg.value(metadata i8* %4, metadata !9323, metadata !DIExpression()), !dbg !9324
  store i8 1, i8* %4, align 1, !dbg !9326
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !9327
  store i8 2, i8* %5, align 1, !dbg !9328
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !9329
  store i8 8, i8* %6, align 1, !dbg !9330
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9331
  store i8 4, i8* %7, align 1, !dbg !9332
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9333
  store i8 60, i8* %8, align 1, !dbg !9334
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9335
  store i8 -128, i8* %9, align 1, !dbg !9336
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !9337
  store i8 96, i8* %10, align 1, !dbg !9338
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9339
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9339
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !9340
  store i8 43, i8* %13, align 1, !dbg !9341
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9342
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !9343
  store i8 43, i8* %15, align 1, !dbg !9344
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9345
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !9346
  store i8 47, i8* %17, align 1, !dbg !9347
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9348
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !9349
  store i8 5, i8* %19, align 1, !dbg !9350
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9351
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !9352
  store i8 1, i8* %21, align 1, !dbg !9353
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9354
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !9355
  store i8 43, i8* %23, align 1, !dbg !9356
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9357
  store i8 22, i8* %24, align 4, !dbg !9358
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !9359
  %26 = load i8, i8* %25, align 1, !dbg !9359
  %27 = icmp eq i8 %26, 32, !dbg !9361
  br i1 %27, label %28, label %49, !dbg !9362

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !9363
  %30 = load i8, i8* %29, align 1, !dbg !9363
  %31 = icmp eq i8 %30, 24, !dbg !9364
  br i1 %31, label %32, label %41, !dbg !9365

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9366
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !9368
  store i8 117, i8* %34, align 1, !dbg !9369
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9370
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !9371
  store i8 122, i8* %36, align 1, !dbg !9372
  %37 = load i8, i8* %25, align 1, !dbg !9373
  %38 = icmp eq i8 %37, 32, !dbg !9375
  br i1 %38, label %39, label %49, !dbg !9376

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !9378
  br label %41, !dbg !9378

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !9378
  %43 = icmp eq i8 %42, 22, !dbg !9379
  br i1 %43, label %44, label %49, !dbg !9380

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9381
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !9383
  store i8 117, i8* %46, align 1, !dbg !9384
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !9385
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !9386
  store i8 122, i8* %48, align 1, !dbg !9387
  br label %49, !dbg !9388

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !9389
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !9390
  ret i32 0, !dbg !9391
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !9392 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !9394, metadata !DIExpression()), !dbg !9398
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9399
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9395, metadata !DIExpression()), !dbg !9398
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9400
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !9401
  %5 = load i8, i8* %4, align 1, !dbg !9403
  %6 = icmp eq i8 %5, -62, !dbg !9404
  br i1 %6, label %7, label %15, !dbg !9405

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !9406
  %9 = load i8, i8* %8, align 1, !dbg !9406
  %10 = icmp eq i8 %9, 32, !dbg !9407
  br i1 %10, label %11, label %15, !dbg !9408

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !9409
  %13 = load i8, i8* %12, align 1, !dbg !9409
  %14 = icmp eq i8 %13, 22, !dbg !9410
  br i1 %14, label %48, label %15, !dbg !9411

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9412
  %17 = bitcast i8* %16 to i16*, !dbg !9412
  %18 = load i16, i16* %17, align 2, !dbg !9412
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9413
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !9413
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9413
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !9414
  %23 = load i8, i8* %22, align 1, !dbg !9414
  %24 = zext i8 %23 to i32, !dbg !9415
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !9416
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9417
  %25 = load i16, i16* %17, align 2, !dbg !9418
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9419
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !9420
  call void @llvm.dbg.value(metadata i8* %2, metadata !9397, metadata !DIExpression(DW_OP_deref)), !dbg !9398
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9421
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !9422
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !9423
  %30 = load i8, i8* %29, align 1, !dbg !9423
  %31 = zext i8 %30 to i32, !dbg !9424
  call void @llvm.dbg.value(metadata i32 %31, metadata !9396, metadata !DIExpression()), !dbg !9398
  %32 = shl nuw nsw i32 %31, 8, !dbg !9425
  %33 = load i8, i8* %2, align 1, !dbg !9426
  call void @llvm.dbg.value(metadata i8 %33, metadata !9397, metadata !DIExpression()), !dbg !9398
  %34 = zext i8 %33 to i32, !dbg !9426
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9427
  %36 = bitcast i8* %35 to i8**, !dbg !9427
  %37 = load i8*, i8** %36, align 4, !dbg !9427
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !9428
  %39 = load i8, i8* %38, align 1, !dbg !9428
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !9429
  %41 = load i8, i8* %40, align 1, !dbg !9429
  %42 = or i8 %41, %39, !dbg !9430
  %43 = zext i8 %42 to i32, !dbg !9430
  %44 = xor i32 %43, -1, !dbg !9431
  %45 = and i32 %44, %34, !dbg !9432
  %46 = or i32 %45, %32, !dbg !9433
  call void @llvm.dbg.value(metadata i32 %46, metadata !9396, metadata !DIExpression()), !dbg !9398
  %47 = load i16, i16* %17, align 2, !dbg !9434
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !9435
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9436
  br label %48, !dbg !9437

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9438
  ret i32 0, !dbg !9438
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9439 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9441, metadata !DIExpression()), !dbg !9443
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9444
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !9445

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !9446
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9448
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !9449
  call void @llvm.dbg.value(metadata i8* %2, metadata !9442, metadata !DIExpression(DW_OP_deref)), !dbg !9443
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !9450
  %10 = load i8, i8* %2, align 1, !dbg !9451
  call void @llvm.dbg.value(metadata i8 %10, metadata !9442, metadata !DIExpression()), !dbg !9443
  %11 = load i8*, i8** %5, align 4, !dbg !9452
  %12 = load i8, i8* %11, align 1, !dbg !9453
  %13 = and i8 %12, %10, !dbg !9454
  %14 = icmp eq i8 %13, 0, !dbg !9455
  br i1 %14, label %15, label %6, !dbg !9456, !llvm.loop !9457

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !9459
  ret void, !dbg !9459
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !9460 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9462, metadata !DIExpression()), !dbg !9465
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9463, metadata !DIExpression()), !dbg !9465
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9466
  %4 = load i8*, i8** %3, align 4, !dbg !9466
  call void @llvm.dbg.value(metadata i8* %4, metadata !9464, metadata !DIExpression()), !dbg !9465
  store i8 1, i8* %4, align 1, !dbg !9467
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !9468
  store i8 2, i8* %5, align 1, !dbg !9469
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !9470
  store i8 -128, i8* %6, align 1, !dbg !9471
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !9472
  store i8 -128, i8* %7, align 1, !dbg !9473
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !9474
  store i8 60, i8* %8, align 1, !dbg !9475
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !9476
  store i8 -128, i8* %9, align 1, !dbg !9477
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9478
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9478
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !9479
  store i8 -97, i8* %12, align 1, !dbg !9480
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9481
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !9482
  store i8 53, i8* %14, align 1, !dbg !9483
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9484
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !9485
  store i8 53, i8* %16, align 1, !dbg !9486
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9487
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !9488
  store i8 5, i8* %18, align 1, !dbg !9489
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9490
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !9491
  store i8 1, i8* %20, align 1, !dbg !9492
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9493
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !9494
  store i8 117, i8* %22, align 1, !dbg !9495
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !9496
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !9497
  store i8 122, i8* %24, align 1, !dbg !9498
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9499
  store i8 22, i8* %25, align 4, !dbg !9500
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !9501
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !9502
  ret i32 0, !dbg !9503
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !9504 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9506, metadata !DIExpression()), !dbg !9508
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !9507, metadata !DIExpression()), !dbg !9508
  ret i32 0, !dbg !9509
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !9510 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !9512, metadata !DIExpression()), !dbg !9514
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9513, metadata !DIExpression()), !dbg !9514
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !9515
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !9516
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !9517
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !9518
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !9519
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !9520
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !9521
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !9522
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !9523
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !9524
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !9525
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !9526
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !9527
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !9528
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !9529
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !9530
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !9531
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !9532
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !9533
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !9534
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !9535
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !9536
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !9537
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !9538
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !9539
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !9540
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !9541
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !9542
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !9543
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !9544
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !9545
  %19 = icmp ugt i32 %18, 16777216, !dbg !9547
  %20 = select i1 %19, i8 4, i8 3, !dbg !9548
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !9549
  store i8 %20, i8* %21, align 1, !dbg !9551
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9552
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9552
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !9553
  store i8 0, i8* %24, align 1, !dbg !9554
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9555
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !9556
  store i8 -81, i8* %26, align 1, !dbg !9557
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9558
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !9559
  store i8 -97, i8* %28, align 1, !dbg !9560
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9561
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !9562
  store i8 2, i8* %30, align 1, !dbg !9563
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9564
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !9565
  store i8 32, i8* %32, align 1, !dbg !9566
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9567
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !9568
  store i8 82, i8* %34, align 1, !dbg !9569
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9570
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !9571
  store i8 -40, i8* %36, align 1, !dbg !9572
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9573
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !9574
  store i8 -80, i8* %38, align 1, !dbg !9575
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9576
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !9577
  store i8 48, i8* %40, align 1, !dbg !9578
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9579
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !9580
  store i8 6, i8* %42, align 1, !dbg !9581
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9582
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !9583
  store i8 -71, i8* %44, align 1, !dbg !9584
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9585
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !9586
  store i8 -85, i8* %46, align 1, !dbg !9587
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !9588
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !9589
  store i8 5, i8* %48, align 1, !dbg !9590
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !9591
  store i16 0, i16* %49, align 4, !dbg !9592
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !9593
  store %struct.anon.9* null, %struct.anon.9** %50, align 4, !dbg !9594
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !9595
  store %struct.anon.9* null, %struct.anon.9** %51, align 4, !dbg !9596
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !9597
  store i8 0, i8* %52, align 4, !dbg !9598
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !9599
  store i8 5, i8* %53, align 4, !dbg !9600
  ret i32 0, !dbg !9601
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !9602 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9604, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i8* %1, metadata !9605, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i8* %1, metadata !9606, metadata !DIExpression()), !dbg !9622
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9623
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9619, metadata !DIExpression()), !dbg !9622
  call void @llvm.dbg.value(metadata i32 0, metadata !9620, metadata !DIExpression()), !dbg !9622
  %4 = bitcast i8* %1 to i32*, !dbg !9624
  store i32 0, i32* %4, align 4, !dbg !9625
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !9620, metadata !DIExpression()), !dbg !9622
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9626
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !9627
  %9 = load i32, i32* %8, align 4, !dbg !9627
  %10 = icmp eq i32 %9, 0, !dbg !9628
  br i1 %10, label %34, label %11, !dbg !9629

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !9629

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !9620, metadata !DIExpression()), !dbg !9622
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !9630
  store i32 %17, i32* %19, align 4, !dbg !9632
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9633
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !9634
  %22 = load i32, i32* %21, align 4, !dbg !9634
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !9635
  store i32 %22, i32* %23, align 4, !dbg !9636
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9637
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !9638
  %26 = load i32, i32* %25, align 4, !dbg !9638
  %27 = load i32, i32* %4, align 4, !dbg !9639
  %28 = add i32 %27, %26, !dbg !9639
  store i32 %28, i32* %4, align 4, !dbg !9639
  %29 = add i32 %18, 1, !dbg !9640
  call void @llvm.dbg.value(metadata i32 %29, metadata !9620, metadata !DIExpression()), !dbg !9622
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !9626
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !9627
  %32 = load i32, i32* %31, align 4, !dbg !9627
  %33 = icmp eq i32 %32, 0, !dbg !9628
  br i1 %33, label %34, label %16, !dbg !9629, !llvm.loop !9641

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !9622
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !9643
  %37 = bitcast i8* %36 to i32*, !dbg !9643
  store i32 %35, i32* %37, align 4, !dbg !9644
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !9645
  %39 = bitcast i8* %38 to i16*, !dbg !9645
  store i16 512, i16* %39, align 4, !dbg !9646
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9647
  br label %40, !dbg !9648

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9649
  call void @llvm.dbg.value(metadata i32 %41, metadata !9621, metadata !DIExpression()), !dbg !9622
  %42 = icmp eq i32 %41, -121, !dbg !9651
  br i1 %42, label %40, label %43, !dbg !9652, !llvm.loop !9653

43:                                               ; preds = %40
  ret i32 0, !dbg !9655
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !9656 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9658, metadata !DIExpression()), !dbg !9662
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9663
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !9659, metadata !DIExpression()), !dbg !9662
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9664
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !9665

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9666
  call void @llvm.dbg.value(metadata i32 %8, metadata !9661, metadata !DIExpression()), !dbg !9662
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9668, !range !2834
  %10 = icmp eq i8 %9, 0, !dbg !9668
  br i1 %10, label %12, label %11, !dbg !9670

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !9671
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9673
  br label %12, !dbg !9674

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !9675
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !9676
  %15 = load i8, i8* %14, align 1, !dbg !9676
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !9677
  call void @llvm.dbg.value(metadata i32 %16, metadata !9660, metadata !DIExpression()), !dbg !9662
  %17 = load i8*, i8** %6, align 4, !dbg !9678
  %18 = load i8, i8* %17, align 1, !dbg !9680
  %19 = zext i8 %18 to i32, !dbg !9680
  %20 = and i32 %16, %19, !dbg !9681
  %21 = icmp eq i32 %20, 0, !dbg !9682
  br i1 %21, label %22, label %25, !dbg !9683

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9684
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !9686
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9687
  %24 = bitcast i8* %23 to i8**, !dbg !9687
  store i8* null, i8** %24, align 4, !dbg !9688
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9689
  ret i32 0, !dbg !9690

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !9691
  br label %7, !dbg !9665, !llvm.loop !9693
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !9695 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9697, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %1, metadata !9698, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 0, metadata !9699, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 1, metadata !9703, metadata !DIExpression()), !dbg !9711
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9712
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9704, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 0, metadata !9705, metadata !DIExpression()), !dbg !9711
  %4 = bitcast i8* %0 to i32*, !dbg !9713
  %5 = load i32, i32* %4, align 4, !dbg !9713
  %6 = xor i32 %5, -1, !dbg !9713
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9713
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !9713
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !9713
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !9713
  %11 = icmp eq i32 %6, %10, !dbg !9713
  br i1 %11, label %13, label %12, !dbg !9716

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !9717
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !9717
  unreachable, !dbg !9717

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9719
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9720
  store i8 2, i8* %14, align 4, !dbg !9721
  call void @llvm.dbg.value(metadata i32 %19, metadata !9705, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %1, metadata !9698, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !9711
  br label %15, !dbg !9722

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9723
  call void @llvm.dbg.value(metadata i32 %16, metadata !9699, metadata !DIExpression()), !dbg !9711
  %17 = icmp eq i32 %16, -121, !dbg !9725
  br i1 %17, label %15, label %18, !dbg !9726, !llvm.loop !9727

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !9729
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !9730
  %21 = bitcast i8* %20 to i8**, !dbg !9730
  %22 = load i8*, i8** %21, align 4, !dbg !9730
  %23 = ptrtoint i8* %22 to i32, !dbg !9731
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !9732
  call void @llvm.dbg.value(metadata i32 %24, metadata !9700, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %24, metadata !9701, metadata !DIExpression()), !dbg !9711
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !9733
  %26 = bitcast i8* %25 to i16*, !dbg !9733
  %27 = load i16, i16* %26, align 2, !dbg !9733
  %28 = zext i16 %27 to i32, !dbg !9734
  call void @llvm.dbg.value(metadata i32 %28, metadata !9706, metadata !DIExpression()), !dbg !9735
  %29 = lshr i32 %24, 10, !dbg !9736
  call void @llvm.dbg.value(metadata i32 %29, metadata !9709, metadata !DIExpression()), !dbg !9735
  %30 = and i32 %29, %28, !dbg !9737
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !9739
  %33 = icmp eq i32 %32, 0, !dbg !9739
  call void @llvm.dbg.value(metadata i32 0, metadata !9710, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 %29, metadata !9709, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 %28, metadata !9706, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 1, metadata !9703, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %24, metadata !9701, metadata !DIExpression()), !dbg !9711
  br i1 %33, label %34, label %51, !dbg !9739

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !9710, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 %36, metadata !9709, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 %37, metadata !9706, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.value(metadata i32 %38, metadata !9703, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %39, metadata !9701, metadata !DIExpression()), !dbg !9711
  %40 = and i32 %37, 1, !dbg !9740
  %41 = icmp eq i32 %40, 0, !dbg !9740
  %42 = add i32 %35, 10, !dbg !9746
  %43 = shl nuw i32 1, %42, !dbg !9746
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !9746
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !9746
  call void @llvm.dbg.value(metadata i32 %45, metadata !9703, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %44, metadata !9701, metadata !DIExpression()), !dbg !9711
  %46 = lshr i32 %37, 1, !dbg !9747
  call void @llvm.dbg.value(metadata i32 %46, metadata !9706, metadata !DIExpression()), !dbg !9735
  %47 = lshr i32 %36, 1, !dbg !9748
  call void @llvm.dbg.value(metadata i32 %47, metadata !9709, metadata !DIExpression()), !dbg !9735
  %48 = add i32 %35, 1, !dbg !9749
  call void @llvm.dbg.value(metadata i32 %48, metadata !9710, metadata !DIExpression()), !dbg !9735
  %49 = and i32 %36, 2, !dbg !9750
  %50 = icmp eq i32 %49, 0, !dbg !9750
  br i1 %50, label %34, label %51, !dbg !9751, !llvm.loop !9752

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !9754
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !9755
  call void @llvm.dbg.value(metadata i32 %53, metadata !9703, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %52, metadata !9701, metadata !DIExpression()), !dbg !9711
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !9756

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9757
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !9757
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !9757
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !9759
  br label %70, !dbg !9760

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9761
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !9761
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !9761
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !9762
  br label %70, !dbg !9763

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9764
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !9764
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !9764
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !9765
  br label %70, !dbg !9766

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !9767
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !9767
  unreachable, !dbg !9767

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !9771
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !9771
  store i8 %73, i8* %74, align 1, !dbg !9771
  call void @llvm.dbg.value(metadata i32 %53, metadata !9703, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %52, metadata !9701, metadata !DIExpression()), !dbg !9711
  %75 = trunc i32 %19 to i8, !dbg !9772
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !9772

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9773
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !9773
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !9773
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !9775
  br label %91, !dbg !9776

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9777
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !9777
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !9777
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !9778
  br label %91, !dbg !9779

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9780
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !9780
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !9780
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !9781
  br label %91, !dbg !9782

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !9783
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !9783
  store i8 %94, i8* %95, align 1, !dbg !9783
  br label %96, !dbg !9784

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !9702, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %53, metadata !9703, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %16, metadata !9699, metadata !DIExpression()), !dbg !9711
  %97 = icmp eq i32 %53, 0, !dbg !9784
  br i1 %97, label %111, label %98, !dbg !9787

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !9788
  call void @llvm.dbg.value(metadata i8* %99, metadata !9702, metadata !DIExpression()), !dbg !9711
  %100 = ptrtoint i8* %99 to i32, !dbg !9789
  call void @llvm.dbg.value(metadata i32 %100, metadata !9702, metadata !DIExpression()), !dbg !9711
  br label %101, !dbg !9787

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !9703, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %103, metadata !9702, metadata !DIExpression()), !dbg !9711
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !9790
  br label %104, !dbg !9792

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9793
  call void @llvm.dbg.value(metadata i32 %105, metadata !9699, metadata !DIExpression()), !dbg !9711
  %106 = icmp eq i32 %105, -121, !dbg !9795
  br i1 %106, label %104, label %107, !dbg !9797, !llvm.loop !9798

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !9800
  call void @llvm.dbg.value(metadata i32 %108, metadata !9703, metadata !DIExpression()), !dbg !9711
  %109 = add i32 %103, %52, !dbg !9801
  call void @llvm.dbg.value(metadata i32 %109, metadata !9702, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.value(metadata i32 %105, metadata !9699, metadata !DIExpression()), !dbg !9711
  %110 = icmp eq i32 %108, 0, !dbg !9784
  br i1 %110, label %111, label %101, !dbg !9787, !llvm.loop !9802

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !9711
  store i8 0, i8* %14, align 4, !dbg !9804
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9805
  ret i32 %112, !dbg !9806
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !9807 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !9809, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i8* %1, metadata !9810, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i8* %2, metadata !9811, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32 %3, metadata !9812, metadata !DIExpression()), !dbg !9826
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9827
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !9813, metadata !DIExpression()), !dbg !9826
  %8 = ptrtoint i8* %1 to i32, !dbg !9828
  call void @llvm.dbg.value(metadata i32 %8, metadata !9815, metadata !DIExpression()), !dbg !9826
  %9 = bitcast i8** %5 to i8*, !dbg !9829
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !9829
  call void @llvm.dbg.value(metadata i8* %2, metadata !9816, metadata !DIExpression()), !dbg !9826
  store i8* %2, i8** %5, align 4, !dbg !9830
  call void @llvm.dbg.value(metadata i32 0, metadata !9818, metadata !DIExpression()), !dbg !9826
  %10 = bitcast i32* %6 to i8*, !dbg !9831
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !9831
  %11 = bitcast i8* %0 to i32*, !dbg !9832
  %12 = load i32, i32* %11, align 4, !dbg !9832
  %13 = xor i32 %12, -1, !dbg !9832
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9832
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !9832
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !9832
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !9832
  %18 = icmp eq i32 %13, %17, !dbg !9832
  br i1 %18, label %20, label %19, !dbg !9835

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !9836
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !9836
  unreachable, !dbg !9836

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9838
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !9839
  store i8 1, i8* %21, align 4, !dbg !9840
  br label %22, !dbg !9841

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !9842
  call void @llvm.dbg.value(metadata i32 %23, metadata !9818, metadata !DIExpression()), !dbg !9826
  %24 = icmp eq i32 %23, -121, !dbg !9844
  br i1 %24, label %22, label %25, !dbg !9845, !llvm.loop !9846

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !9848
  br i1 %26, label %104, label %27, !dbg !9849

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !9849

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !9850
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !9826
  call void @llvm.dbg.value(metadata i32 %38, metadata !9815, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32 %37, metadata !9812, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i8* %36, metadata !9816, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i8* %36, metadata !9817, metadata !DIExpression()), !dbg !9826
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9851
  %40 = shl i32 %39, 1, !dbg !9852
  %41 = add i32 %40, -1, !dbg !9853
  %42 = and i32 %41, %38, !dbg !9854
  %43 = sub i32 %40, %42, !dbg !9855
  %44 = icmp ugt i32 %37, %43, !dbg !9856
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !9857
  call void @llvm.dbg.value(metadata i32 %45, metadata !9819, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32 %45, metadata !9820, metadata !DIExpression()), !dbg !9826
  store i32 %45, i32* %6, align 4, !dbg !9858
  call void @llvm.dbg.value(metadata i8* %36, metadata !9816, metadata !DIExpression()), !dbg !9826
  %46 = ptrtoint i8* %36 to i32, !dbg !9859
  %47 = and i32 %46, 134217728, !dbg !9860
  %48 = icmp eq i32 %47, 0, !dbg !9860
  br i1 %48, label %58, label %49, !dbg !9861

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !9822, metadata !DIExpression()), !dbg !9862
  call void @llvm.dbg.value(metadata i32 %45, metadata !9820, metadata !DIExpression()), !dbg !9826
  %50 = icmp eq i32 %45, 0, !dbg !9863
  br i1 %50, label %58, label %51, !dbg !9866

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !9822, metadata !DIExpression()), !dbg !9862
  call void @llvm.dbg.value(metadata i8* %36, metadata !9816, metadata !DIExpression()), !dbg !9826
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !9867
  %54 = load i8, i8* %53, align 1, !dbg !9867
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !9869
  store i8 %54, i8* %55, align 1, !dbg !9870
  %56 = add nuw i32 %52, 1, !dbg !9871
  call void @llvm.dbg.value(metadata i32 %56, metadata !9822, metadata !DIExpression()), !dbg !9862
  call void @llvm.dbg.value(metadata i32 %45, metadata !9820, metadata !DIExpression()), !dbg !9826
  %57 = icmp eq i32 %56, %45, !dbg !9863
  br i1 %57, label %58, label %51, !dbg !9866, !llvm.loop !9872

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !9874
  call void @llvm.dbg.value(metadata i8* %59, metadata !9817, metadata !DIExpression()), !dbg !9826
  %60 = load i32, i32* %29, align 4, !dbg !9875
  %61 = and i32 %60, 16, !dbg !9877
  %62 = icmp eq i32 %61, 0, !dbg !9877
  br i1 %62, label %63, label %64, !dbg !9878

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !9879
  br label %64, !dbg !9881

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !9882
  %66 = icmp eq i8 %65, 4, !dbg !9884
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !9885
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !9885
  %69 = load i8, i8* %68, align 1, !dbg !9885
  %70 = zext i8 %69 to i32, !dbg !9885
  br i1 %66, label %71, label %75, !dbg !9886

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !9816, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  call void @llvm.dbg.value(metadata i32* %6, metadata !9820, metadata !DIExpression(DW_OP_deref)), !dbg !9826
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !9887
  call void @llvm.dbg.value(metadata i32 %72, metadata !9821, metadata !DIExpression()), !dbg !9826
  %73 = load i8*, i8** %5, align 4, !dbg !9889
  call void @llvm.dbg.value(metadata i8* %73, metadata !9816, metadata !DIExpression()), !dbg !9826
  %74 = load i32, i32* %6, align 4, !dbg !9890
  call void @llvm.dbg.value(metadata i32 %74, metadata !9820, metadata !DIExpression()), !dbg !9826
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !9891
  br label %79, !dbg !9892

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !9893
  call void @llvm.dbg.value(metadata i32 %76, metadata !9821, metadata !DIExpression()), !dbg !9826
  %77 = load i8*, i8** %5, align 4, !dbg !9895
  call void @llvm.dbg.value(metadata i8* %77, metadata !9816, metadata !DIExpression()), !dbg !9826
  %78 = load i32, i32* %6, align 4, !dbg !9896
  call void @llvm.dbg.value(metadata i32 %78, metadata !9820, metadata !DIExpression()), !dbg !9826
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !9897
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !9885
  call void @llvm.dbg.value(metadata i32 %80, metadata !9821, metadata !DIExpression()), !dbg !9826
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !9898
  call void @llvm.dbg.value(metadata i32 %81, metadata !9814, metadata !DIExpression()), !dbg !9826
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !9899
  %82 = load i8, i8* %30, align 1, !dbg !9900
  %83 = zext i8 %82 to i32, !dbg !9901
  %84 = add i32 %45, 1, !dbg !9902
  %85 = add i32 %84, %83, !dbg !9903
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !9904
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !9905
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !9906
  %86 = load i16, i16* %34, align 2, !dbg !9907
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !9908
  %87 = load i16, i16* %34, align 2, !dbg !9909
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !9910
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !9911
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !9912

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !9913
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !9915
  call void @llvm.dbg.value(metadata i32 %94, metadata !9818, metadata !DIExpression()), !dbg !9826
  %95 = icmp eq i32 %94, 0, !dbg !9916
  br i1 %95, label %92, label %96, !dbg !9917, !llvm.loop !9918

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !9920
  call void @llvm.dbg.value(metadata i32 %97, metadata !9820, metadata !DIExpression()), !dbg !9826
  %98 = load i8*, i8** %5, align 4, !dbg !9921
  call void @llvm.dbg.value(metadata i8* %98, metadata !9816, metadata !DIExpression()), !dbg !9826
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !9921
  call void @llvm.dbg.value(metadata i8* %99, metadata !9816, metadata !DIExpression()), !dbg !9826
  store i8* %99, i8** %5, align 4, !dbg !9921
  %100 = sub i32 %37, %45, !dbg !9922
  call void @llvm.dbg.value(metadata i32 %100, metadata !9812, metadata !DIExpression()), !dbg !9826
  call void @llvm.dbg.value(metadata i32 undef, metadata !9815, metadata !DIExpression()), !dbg !9826
  %101 = icmp eq i32 %94, 1, !dbg !9923
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !9925
  br i1 %103, label %35, label %104, !dbg !9925, !llvm.loop !9926

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !9826
  call void @llvm.dbg.value(metadata i32 %105, metadata !9818, metadata !DIExpression()), !dbg !9826
  store i8 0, i8* %21, align 4, !dbg !9928
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9929
  %106 = icmp eq i32 %105, 1, !dbg !9930
  %107 = select i1 %106, i32 0, i32 %105, !dbg !9826
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !9932
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !9932
  ret i32 %107, !dbg !9932
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !9933 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9935, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.value(metadata i32 undef, metadata !9936, metadata !DIExpression()), !dbg !9937
  ret i32 -12, !dbg !9938
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9939 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9941, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i32 undef, metadata !9942, metadata !DIExpression()), !dbg !9951
  call void @llvm.dbg.value(metadata i32 0, metadata !9944, metadata !DIExpression()), !dbg !9951
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9952
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9945, metadata !DIExpression()), !dbg !9951
  %4 = bitcast i8* %0 to i32*, !dbg !9953
  %5 = load i32, i32* %4, align 4, !dbg !9953
  %6 = xor i32 %5, -1, !dbg !9953
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9953
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !9953
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !9953
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !9953
  %11 = icmp eq i32 %6, %10, !dbg !9953
  br i1 %11, label %13, label %12, !dbg !9956

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !9957
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !9957
  unreachable, !dbg !9957

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9959
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !9959
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9959
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !9960
  %18 = load i8, i8* %17, align 1, !dbg !9960
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !9961
  call void @llvm.dbg.value(metadata i32 %19, metadata !9946, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9951
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9962
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !9963
  %22 = load i8, i8* %21, align 1, !dbg !9963
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !9964
  call void @llvm.dbg.value(metadata i32 %23, metadata !9947, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9951
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9965
  call void @llvm.dbg.value(metadata i32 %24, metadata !9944, metadata !DIExpression()), !dbg !9951
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9966
  %26 = bitcast i8* %25 to i8**, !dbg !9966
  %27 = load i8*, i8** %26, align 4, !dbg !9966
  %28 = load i8, i8* %27, align 1, !dbg !9967
  %29 = zext i8 %28 to i32, !dbg !9967
  %30 = and i32 %19, %29, !dbg !9968
  %31 = icmp eq i32 %30, 0, !dbg !9969
  br i1 %31, label %32, label %62, !dbg !9970

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !9947, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9951
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !9971
  %34 = load i8, i8* %33, align 1, !dbg !9971
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !9972
  %36 = load i8, i8* %35, align 1, !dbg !9972
  %37 = or i8 %36, %34, !dbg !9973
  call void @llvm.dbg.value(metadata i8 %37, metadata !9948, metadata !DIExpression()), !dbg !9974
  %38 = zext i8 %37 to i32, !dbg !9975
  %39 = and i32 %23, %38, !dbg !9977
  %40 = icmp eq i32 %39, 0, !dbg !9978
  br i1 %40, label %41, label %46, !dbg !9979

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !9980
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !9981
  br i1 %45, label %51, label %46, !dbg !9981

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9982, !range !2834
  %48 = icmp eq i8 %47, 0, !dbg !9982
  br i1 %48, label %49, label %50, !dbg !9986

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !9987
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !9987
  unreachable, !dbg !9987

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9989
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9990
  call void @llvm.dbg.value(metadata i32 -121, metadata !9943, metadata !DIExpression()), !dbg !9951
  br label %62, !dbg !9991

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !9992
  %53 = bitcast i8* %52 to i32*, !dbg !9992
  %54 = load i32, i32* %53, align 4, !dbg !9992
  %55 = and i32 %54, 2, !dbg !9995
  %56 = icmp eq i32 %55, 0, !dbg !9995
  br i1 %56, label %63, label %57, !dbg !9996

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9997
  %59 = bitcast i8* %58 to i16*, !dbg !9997
  %60 = load i16, i16* %59, align 2, !dbg !9997
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !9999
  %61 = load i16, i16* %59, align 2, !dbg !10000
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !10001
  br label %63, !dbg !10002

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !9943, metadata !DIExpression()), !dbg !9951
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !10003
  br label %65, !dbg !10004

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10005
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !10006
  call void @llvm.dbg.value(metadata i32 0, metadata !9943, metadata !DIExpression()), !dbg !9951
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !10003
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !10007
  call void @llvm.dbg.value(metadata i32 %64, metadata !9943, metadata !DIExpression()), !dbg !9951
  br label %65, !dbg !10010

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !9951
  call void @llvm.dbg.value(metadata i32 %66, metadata !9943, metadata !DIExpression()), !dbg !9951
  ret i32 %66, !dbg !10011
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !10012 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10014, metadata !DIExpression()), !dbg !10019
  call void @llvm.dbg.value(metadata i32 undef, metadata !10015, metadata !DIExpression()), !dbg !10019
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10020
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10016, metadata !DIExpression()), !dbg !10019
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10021
  call void @llvm.dbg.value(metadata i32 %4, metadata !10018, metadata !DIExpression()), !dbg !10019
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !10022
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !10023

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !10024
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !10026
  %12 = load i8, i8* %11, align 1, !dbg !10026
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !10027
  call void @llvm.dbg.value(metadata i32 %13, metadata !10017, metadata !DIExpression()), !dbg !10019
  %14 = load i8*, i8** %8, align 4, !dbg !10028
  %15 = load i8, i8* %14, align 1, !dbg !10030
  %16 = zext i8 %15 to i32, !dbg !10030
  %17 = and i32 %13, %16, !dbg !10031
  %18 = icmp eq i32 %17, 0, !dbg !10032
  br i1 %18, label %19, label %9, !dbg !10033, !llvm.loop !10034

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !10036
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !10037
  ret i32 0, !dbg !10038
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !10039 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10041, metadata !DIExpression()), !dbg !10044
  call void @llvm.dbg.value(metadata i32 undef, metadata !10042, metadata !DIExpression()), !dbg !10044
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10045
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !10043, metadata !DIExpression()), !dbg !10044
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10046
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !10047
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !10048
  ret i32 0, !dbg !10049
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !10050 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !10052, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.value(metadata i8* undef, metadata !10053, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.value(metadata i32 undef, metadata !10054, metadata !DIExpression()), !dbg !10055
  ret i32 0, !dbg !10056
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !10057 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10059, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.value(metadata i32 %1, metadata !10060, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.value(metadata i8* undef, metadata !10061, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.value(metadata i8* %0, metadata !10062, metadata !DIExpression()), !dbg !10063
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !10064

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10062, metadata !DIExpression()), !dbg !10063
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !10065
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !10065
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !10065
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !10068
  br label %21, !dbg !10069

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !10070
  %11 = load i8, i8* %10, align 1, !dbg !10074
  %12 = icmp eq i8 %11, -62, !dbg !10075
  br i1 %12, label %13, label %21, !dbg !10076

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10077
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !10077
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !10077
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !10078
  %18 = load i32, i32* %17, align 4, !dbg !10078
  %19 = icmp eq i32 %18, 262144, !dbg !10079
  br i1 %19, label %22, label %21, !dbg !10080

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !10081
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10081
  unreachable, !dbg !10081

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !10086

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !10063
  ret i32 %23, !dbg !10087
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !10088 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10090, metadata !DIExpression()), !dbg !10093
  call void @llvm.dbg.value(metadata i8* %0, metadata !10091, metadata !DIExpression()), !dbg !10093
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10094
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !10094
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !10094
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !10096
  %6 = load i8, i8* %5, align 1, !dbg !10096
  %7 = icmp eq i8 %6, 0, !dbg !10097
  br i1 %7, label %19, label %8, !dbg !10098

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10099
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !10091, metadata !DIExpression()), !dbg !10093
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !10100
  call void @llvm.dbg.value(metadata i32 %10, metadata !10092, metadata !DIExpression()), !dbg !10093
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10102
  %12 = bitcast i8* %11 to i8**, !dbg !10102
  %13 = load i8*, i8** %12, align 4, !dbg !10102
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !10104
  %15 = load i8, i8* %14, align 1, !dbg !10104
  %16 = zext i8 %15 to i32, !dbg !10104
  %17 = and i32 %10, %16, !dbg !10105
  %18 = icmp eq i32 %17, 0, !dbg !10105
  br i1 %18, label %19, label %20, !dbg !10106

19:                                               ; preds = %8, %1
  br label %20, !dbg !10107

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !10093
  ret i32 %21, !dbg !10108
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !10109 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10113, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.value(metadata i32 %1, metadata !10114, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.value(metadata i8 %2, metadata !10115, metadata !DIExpression()), !dbg !10121
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !10122
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !10117, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.value(metadata i32 0, metadata !10118, metadata !DIExpression()), !dbg !10121
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !10123
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !10123
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !10123
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !10124
  %9 = load i8, i8* %8, align 1, !dbg !10124
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !10125
  call void @llvm.dbg.value(metadata i32 %10, metadata !10120, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !10121
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !10126, !range !2834
  %12 = icmp eq i8 %11, 0, !dbg !10126
  br i1 %12, label %18, label %13, !dbg !10128

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !10129, !range !2834
  %15 = icmp eq i8 %14, 0, !dbg !10129
  br i1 %15, label %16, label %17, !dbg !10133

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !10134
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10134
  unreachable, !dbg !10134

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !10136
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !10137
  br label %42, !dbg !10138

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !10120, metadata !DIExpression()), !dbg !10121
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !10139
  %20 = bitcast i8* %19 to i8**, !dbg !10139
  %21 = load i8*, i8** %20, align 4, !dbg !10139
  %22 = load i8, i8* %21, align 1, !dbg !10141
  %23 = zext i8 %22 to i32, !dbg !10141
  %24 = and i32 %10, %23, !dbg !10142
  %25 = icmp eq i32 %24, 0, !dbg !10143
  br i1 %25, label %26, label %42, !dbg !10144

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10145
  call void @llvm.dbg.value(metadata i32 %27, metadata !10116, metadata !DIExpression()), !dbg !10121
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !10147
  %28 = inttoptr i32 %1 to i8*, !dbg !10148
  %29 = load volatile i8, i8* %28, align 1, !dbg !10149
  call void @llvm.dbg.value(metadata i8 %29, metadata !10119, metadata !DIExpression()), !dbg !10121
  %30 = icmp eq i8 %29, %2, !dbg !10150
  br i1 %30, label %39, label %31, !dbg !10152

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !10118, metadata !DIExpression()), !dbg !10121
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !10153
  br i1 %32, label %33, label %38, !dbg !10156

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !10157
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !10159
  %36 = load volatile i8, i8* %28, align 1, !dbg !10160
  %37 = icmp eq i8 %36, %2, !dbg !10162
  br i1 %37, label %39, label %38, !dbg !10163

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !10118, metadata !DIExpression()), !dbg !10121
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !10164
  br label %42, !dbg !10165

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !10118, metadata !DIExpression()), !dbg !10121
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !10164
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !10166
  %41 = icmp eq i32 %40, 0, !dbg !10169
  br i1 %41, label %42, label %44, !dbg !10170

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !10171

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !10121
  ret i32 %45, !dbg !10172
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !10173 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10177, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.value(metadata i32 %1, metadata !10178, metadata !DIExpression()), !dbg !10180
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !10181
  %4 = load i32, i32* %3, align 4, !dbg !10181
  %5 = and i32 %4, 16, !dbg !10183
  %6 = icmp eq i32 %5, 0, !dbg !10183
  br i1 %6, label %7, label %8, !dbg !10184

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !10185
  br label %8, !dbg !10187

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10188
  call void @llvm.dbg.value(metadata i32 %9, metadata !10179, metadata !DIExpression()), !dbg !10180
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !10189
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10190
  %11 = load i16, i16* %10, align 2, !dbg !10190
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10191
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !10191
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !10192
  %15 = load i8, i8* %14, align 1, !dbg !10192
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !10193
  %17 = load i8, i8* %16, align 1, !dbg !10193
  %18 = zext i8 %17 to i32, !dbg !10194
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !10195
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !10196
  ret void, !dbg !10197
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !10198 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !10200, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10201, metadata !DIExpression()), !dbg !10203
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !10204
  %4 = load i8, i8* %3, align 1, !dbg !10204
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !10205

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !10206
  %7 = load i32, i32* %6, align 4, !dbg !10208
  %8 = or i32 %7, 4, !dbg !10208
  store i32 %8, i32* %6, align 4, !dbg !10208
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10209
  call void @llvm.dbg.value(metadata i32 0, metadata !10202, metadata !DIExpression()), !dbg !10203
  br label %18, !dbg !10210

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !10211
  %12 = load i32, i32* %11, align 4, !dbg !10212
  %13 = or i32 %12, 2, !dbg !10212
  store i32 %13, i32* %11, align 4, !dbg !10212
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10213
  call void @llvm.dbg.value(metadata i32 0, metadata !10202, metadata !DIExpression()), !dbg !10203
  call void @llvm.dbg.value(metadata i32 0, metadata !10202, metadata !DIExpression()), !dbg !10203
  br label %18, !dbg !10214

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10215
  call void @llvm.dbg.value(metadata i32 0, metadata !10202, metadata !DIExpression()), !dbg !10203
  br label %18, !dbg !10216

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !10202, metadata !DIExpression()), !dbg !10203
  tail call void @Flash_ReturnReady() #21, !dbg !10217
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.127, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.128, i32 0, i32 0)) #23, !dbg !10217
  unreachable, !dbg !10217

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !10202, metadata !DIExpression()), !dbg !10203
  ret i32 0, !dbg !10221
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10222 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !10226, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !10227, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i32 %2, metadata !10228, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.value(metadata i32 %3, metadata !10229, metadata !DIExpression()), !dbg !10231
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !10232
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !10234
  br i1 %7, label %33, label %8, !dbg !10234

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !10235
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10235
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !10237
  br i1 %11, label %33, label %12, !dbg !10238

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !10239
  %14 = load i8*, i8** %13, align 4, !dbg !10239
  %15 = icmp eq i8* %14, null, !dbg !10240
  br i1 %15, label %33, label %16, !dbg !10241

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !10242
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !10243
  store i8* %17, i8** %18, align 4, !dbg !10244
  %19 = trunc i32 %3 to i16, !dbg !10245
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !10246
  store i16 %19, i16* %20, align 2, !dbg !10247
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10248
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10249
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !10250
  store i8 -81, i8* %23, align 1, !dbg !10251
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !10252
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !10253
  %25 = load i8, i8* %24, align 1, !dbg !10254
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !10256

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !10257
  br i1 %27, label %31, label %28, !dbg !10258

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !10259
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !10261
  store i8 -97, i8* %30, align 1, !dbg !10262
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !10263
  br label %31, !dbg !10264

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !10265
  call void @llvm.dbg.value(metadata i32 0, metadata !10230, metadata !DIExpression()), !dbg !10231
  br label %33, !dbg !10266

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !10231
  ret i32 %34, !dbg !10267
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !10268 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !10272, metadata !DIExpression()), !dbg !10275
  call void @llvm.dbg.value(metadata i8* %1, metadata !10273, metadata !DIExpression()), !dbg !10275
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10276
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !10277
  %5 = and i32 %4, 1, !dbg !10277
  %6 = icmp eq i32 %5, 0, !dbg !10279
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !10280
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !10280
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !10281
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !10281
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !10281
  %12 = load i8, i8* %11, align 1, !dbg !10280
  store i8 %12, i8* %3, align 1, !dbg !10280
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !10282
  %14 = load i16, i16* %13, align 2, !dbg !10282
  call void @llvm.dbg.value(metadata i8* %3, metadata !10274, metadata !DIExpression(DW_OP_deref)), !dbg !10275
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !10283
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !10284
  ret void, !dbg !10284
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !10285 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10289, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i8* %1, metadata !10290, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i8* %2, metadata !10291, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i16 %3, metadata !10292, metadata !DIExpression()), !dbg !10295
  call void @llvm.dbg.value(metadata i16 %4, metadata !10293, metadata !DIExpression()), !dbg !10295
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !10296
  call void @llvm.dbg.value(metadata i32 %6, metadata !10294, metadata !DIExpression()), !dbg !10295
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !10297
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !10298
  ret void, !dbg !10299
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !10300 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10302, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10305, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.value(metadata i32 0, metadata !10303, metadata !DIExpression()), !dbg !10308
  br label %6, !dbg !10309

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10311
  call void @llvm.dbg.value(metadata i32 %3, metadata !10303, metadata !DIExpression()), !dbg !10308
  call void @llvm.dbg.value(metadata i32 %8, metadata !10303, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10308
  %4 = icmp ult i32 %8, 4, !dbg !10313
  %5 = icmp eq i32 %3, 5, !dbg !10313
  br i1 %5, label %26, label %6, !dbg !10309, !llvm.loop !10314

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10303, metadata !DIExpression()), !dbg !10308
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10304, metadata !DIExpression()), !dbg !10308
  %12 = icmp eq i8 %10, 0, !dbg !10316
  br i1 %12, label %23, label %13, !dbg !10320

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10304, metadata !DIExpression()), !dbg !10308
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10321
  %16 = load i8, i8* %15, align 1, !dbg !10321
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10324
  %18 = load i8, i8* %17, align 1, !dbg !10324
  %19 = icmp eq i8 %16, %18, !dbg !10325
  br i1 %19, label %20, label %23, !dbg !10326

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10327
  call void @llvm.dbg.value(metadata i32 %21, metadata !10304, metadata !DIExpression()), !dbg !10308
  %22 = icmp eq i32 %21, %11, !dbg !10316
  br i1 %22, label %26, label %13, !dbg !10320, !llvm.loop !10328

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10330
  %25 = icmp eq i32 %24, %11, !dbg !10331
  call void @llvm.dbg.value(metadata i32 %8, metadata !10303, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10308
  br i1 %25, label %26, label %2, !dbg !10333

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10313
  ret i1 %27, !dbg !10334
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !10335 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10347
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10347
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10339, metadata !DIExpression()), !dbg !10348
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10346, metadata !DIExpression()), !dbg !10349
  %3 = load i16, i16* @cmem_index, align 2, !dbg !10350
  %4 = icmp sgt i16 %3, -1, !dbg !10352
  br i1 %4, label %34, label %5, !dbg !10353

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10354
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !10355
  call void @llvm.dbg.value(metadata i32 0, metadata !10337, metadata !DIExpression()), !dbg !10349
  br label %7, !dbg !10356

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10337, metadata !DIExpression()), !dbg !10349
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10338, metadata !DIExpression()), !dbg !10349
  %12 = icmp eq i8 %10, 0, !dbg !10358
  br i1 %12, label %24, label %13, !dbg !10363

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10338, metadata !DIExpression()), !dbg !10349
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10364
  %16 = load i8, i8* %15, align 1, !dbg !10364
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10367
  %18 = load i16, i16* %17, align 2, !dbg !10367
  %19 = zext i8 %16 to i16, !dbg !10368
  %20 = icmp eq i16 %18, %19, !dbg !10368
  br i1 %20, label %21, label %24, !dbg !10369

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10370
  call void @llvm.dbg.value(metadata i32 %22, metadata !10338, metadata !DIExpression()), !dbg !10349
  %23 = icmp eq i32 %22, %11, !dbg !10358
  br i1 %23, label %27, label %13, !dbg !10363, !llvm.loop !10371

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10373
  %26 = icmp eq i32 %25, %11, !dbg !10374
  br i1 %26, label %27, label %29, !dbg !10376

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10377
  store i16 %28, i16* @cmem_index, align 2, !dbg !10379
  br label %34, !dbg !10380

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10381
  call void @llvm.dbg.value(metadata i32 %30, metadata !10337, metadata !DIExpression()), !dbg !10349
  %31 = icmp eq i32 %30, 5, !dbg !10382
  br i1 %31, label %32, label %7, !dbg !10356, !llvm.loop !10383

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !10385
  br label %34, !dbg !10385

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10349
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10386
  ret i32 %36, !dbg !10386
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !10387 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10391, metadata !DIExpression()), !dbg !10392
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !10393
  ret %struct.CMEMEntryID* %2, !dbg !10394
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10395 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10399, metadata !DIExpression()), !dbg !10406
  call void @llvm.dbg.value(metadata i8* undef, metadata !10400, metadata !DIExpression()), !dbg !10406
  call void @llvm.dbg.value(metadata i16* %2, metadata !10401, metadata !DIExpression()), !dbg !10406
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10407
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10407
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10407
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10404, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.value(metadata i8 -81, metadata !10402, metadata !DIExpression()), !dbg !10409
  store i8 -81, i8* %4, align 1, !dbg !10410
  call void @llvm.dbg.value(metadata i8* %4, metadata !10402, metadata !DIExpression(DW_OP_deref)), !dbg !10409
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10411
  %7 = load i8, i8* %6, align 1, !dbg !10412
  %8 = add i8 %7, 1, !dbg !10414
  %9 = icmp ult i8 %8, 2, !dbg !10414
  br i1 %9, label %12, label %10, !dbg !10414

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !10415
  br i1 %11, label %13, label %12, !dbg !10416

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10402, metadata !DIExpression()), !dbg !10409
  store i8 -97, i8* %4, align 1, !dbg !10417
  call void @llvm.dbg.value(metadata i8* %4, metadata !10402, metadata !DIExpression(DW_OP_deref)), !dbg !10409
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10419
  br label %13, !dbg !10420

13:                                               ; preds = %12, %10
  br label %14, !dbg !10421

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10405, metadata !DIExpression()), !dbg !10409
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !10423
  %17 = load i8, i8* %16, align 1, !dbg !10423
  %18 = zext i8 %17 to i16, !dbg !10423
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !10426
  store i16 %18, i16* %19, align 2, !dbg !10427
  %20 = add nuw nsw i32 %15, 1, !dbg !10428
  call void @llvm.dbg.value(metadata i32 %20, metadata !10405, metadata !DIExpression()), !dbg !10409
  %21 = icmp eq i32 %20, 3, !dbg !10429
  br i1 %21, label %22, label %14, !dbg !10421, !llvm.loop !10430

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10432
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10432
  ret void, !dbg !10433
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !10434 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10436, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10439, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata i32 0, metadata !10437, metadata !DIExpression()), !dbg !10440
  br label %6, !dbg !10441

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !10443
  call void @llvm.dbg.value(metadata i32 %3, metadata !10437, metadata !DIExpression()), !dbg !10440
  call void @llvm.dbg.value(metadata i32 %8, metadata !10437, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10440
  %4 = icmp ult i32 %8, 4, !dbg !10445
  %5 = icmp eq i32 %3, 5, !dbg !10445
  br i1 %5, label %26, label %6, !dbg !10441, !llvm.loop !10446

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10437, metadata !DIExpression()), !dbg !10440
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10438, metadata !DIExpression()), !dbg !10440
  %12 = icmp eq i8 %10, 0, !dbg !10448
  br i1 %12, label %23, label %13, !dbg !10452

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10438, metadata !DIExpression()), !dbg !10440
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10453
  %16 = load i8, i8* %15, align 1, !dbg !10453
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !10456
  %18 = load i8, i8* %17, align 1, !dbg !10456
  %19 = icmp eq i8 %16, %18, !dbg !10457
  br i1 %19, label %20, label %23, !dbg !10458

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !10459
  call void @llvm.dbg.value(metadata i32 %21, metadata !10438, metadata !DIExpression()), !dbg !10440
  %22 = icmp eq i32 %21, %11, !dbg !10448
  br i1 %22, label %26, label %13, !dbg !10452, !llvm.loop !10460

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !10462
  %25 = icmp eq i32 %24, %11, !dbg !10463
  call void @llvm.dbg.value(metadata i32 %8, metadata !10437, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !10440
  br i1 %25, label %26, label %2, !dbg !10465

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !10445
  ret i1 %27, !dbg !10466
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !10467 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !10473
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10473
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !10471, metadata !DIExpression()), !dbg !10474
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !10472, metadata !DIExpression()), !dbg !10475
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10476
  %4 = icmp sgt i16 %3, -1, !dbg !10478
  br i1 %4, label %34, label %5, !dbg !10479

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !10480
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !10481
  call void @llvm.dbg.value(metadata i32 0, metadata !10469, metadata !DIExpression()), !dbg !10475
  br label %7, !dbg !10482

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10469, metadata !DIExpression()), !dbg !10475
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !10470, metadata !DIExpression()), !dbg !10475
  %12 = icmp eq i8 %10, 0, !dbg !10484
  br i1 %12, label %24, label %13, !dbg !10489

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !10470, metadata !DIExpression()), !dbg !10475
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !10490
  %16 = load i8, i8* %15, align 1, !dbg !10490
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !10493
  %18 = load i16, i16* %17, align 2, !dbg !10493
  %19 = zext i8 %16 to i16, !dbg !10494
  %20 = icmp eq i16 %18, %19, !dbg !10494
  br i1 %20, label %21, label %24, !dbg !10495

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !10496
  call void @llvm.dbg.value(metadata i32 %22, metadata !10470, metadata !DIExpression()), !dbg !10475
  %23 = icmp eq i32 %22, %11, !dbg !10484
  br i1 %23, label %27, label %13, !dbg !10489, !llvm.loop !10497

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !10499
  %26 = icmp eq i32 %25, %11, !dbg !10500
  br i1 %26, label %27, label %29, !dbg !10502

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !10503
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !10505
  br label %34, !dbg !10506

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !10507
  call void @llvm.dbg.value(metadata i32 %30, metadata !10469, metadata !DIExpression()), !dbg !10475
  %31 = icmp eq i32 %30, 5, !dbg !10508
  br i1 %31, label %32, label %7, !dbg !10482, !llvm.loop !10509

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !10511
  br label %34, !dbg !10511

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !10475
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !10512
  ret i32 %36, !dbg !10512
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !10513 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !10521, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.value(metadata i16* %1, metadata !10522, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.value(metadata i16* %2, metadata !10523, metadata !DIExpression()), !dbg !10529
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10530
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !10530
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10530
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !10527, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.value(metadata i8 -81, metadata !10525, metadata !DIExpression()), !dbg !10532
  store i8 -81, i8* %4, align 1, !dbg !10533
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10534
  call void @llvm.dbg.value(metadata i32 %7, metadata !10524, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.value(metadata i8* %4, metadata !10525, metadata !DIExpression(DW_OP_deref)), !dbg !10532
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10535
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !10536
  %8 = load i8, i8* %6, align 1, !dbg !10537
  %9 = add i8 %8, 1, !dbg !10539
  %10 = icmp ult i8 %9, 2, !dbg !10539
  br i1 %10, label %13, label %11, !dbg !10539

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !10540
  br i1 %12, label %15, label %13, !dbg !10541

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !10525, metadata !DIExpression()), !dbg !10532
  store i8 -97, i8* %4, align 1, !dbg !10542
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !10544
  call void @llvm.dbg.value(metadata i32 %14, metadata !10524, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.value(metadata i8* %4, metadata !10525, metadata !DIExpression(DW_OP_deref)), !dbg !10532
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !10545
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !10546
  br label %15, !dbg !10547

15:                                               ; preds = %13, %11
  br label %16, !dbg !10548

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10528, metadata !DIExpression()), !dbg !10532
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !10550
  %19 = load i8, i8* %18, align 1, !dbg !10550
  %20 = zext i8 %19 to i16, !dbg !10550
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !10553
  store i16 %20, i16* %21, align 2, !dbg !10554
  %22 = add nuw nsw i32 %17, 1, !dbg !10555
  call void @llvm.dbg.value(metadata i32 %22, metadata !10528, metadata !DIExpression()), !dbg !10532
  %23 = icmp eq i32 %22, 3, !dbg !10556
  br i1 %23, label %24, label %16, !dbg !10548, !llvm.loop !10557

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !10559
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !10559
  ret void, !dbg !10560
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !10561 {
  ret i32 3932160, !dbg !10562
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !10563 {
  ret i32 4194304, !dbg !10564
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !10565 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !10566
  ret void, !dbg !10567
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !10568 {
  ret void, !dbg !10569
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !10570 {
  ret void, !dbg !10571
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !10572 {
  ret i32 3932160, !dbg !10573
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !10574 {
  ret i32 262144, !dbg !10575
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !10576 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !10577
  ret void, !dbg !10578
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !10579 {
  ret i32 134217728, !dbg !10580
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !10581 {
  ret i32 4194304, !dbg !10582
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !10583 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10584
  ret i32 134217728, !dbg !10585
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !10586 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !10587
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10588
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10589
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10590
  %4 = load i16, i16* %3, align 2, !dbg !10590
  %5 = zext i16 %4 to i32, !dbg !10588
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10591
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !10592
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !10593
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !10594
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !10595
  ret i32 0, !dbg !10596
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !10597 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !10600
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !10601
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !10602
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !10603
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !10604
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10605
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !10606
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !10607
  %5 = load i32, i32* %4, align 4, !dbg !10607
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !10608
  call void @llvm.dbg.value(metadata i32 %6, metadata !10599, metadata !DIExpression()), !dbg !10609
  %7 = icmp eq i32 %6, -120, !dbg !10610
  %8 = select i1 %7, i32 5, i32 0, !dbg !10609
  ret i32 %8, !dbg !10612
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !10613 {
  ret i8 1, !dbg !10615
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !10616 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !10620, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10622, metadata !DIExpression()), !dbg !10623
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10624
  call void @llvm.dbg.value(metadata i32 %2, metadata !10621, metadata !DIExpression()), !dbg !10623
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10622, metadata !DIExpression()), !dbg !10623
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !10625
  %4 = load i32, i32* %3, align 4, !dbg !10625
  ret i32 %4, !dbg !10626
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !10627 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10631, metadata !DIExpression()), !dbg !10634
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !10632, metadata !DIExpression()), !dbg !10634
  %3 = and i32 %0, 134217727, !dbg !10635
  call void @llvm.dbg.value(metadata i32 %3, metadata !10631, metadata !DIExpression()), !dbg !10634
  call void @llvm.dbg.value(metadata i16 0, metadata !10633, metadata !DIExpression()), !dbg !10634
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !10636
  %5 = load i32, i32* %4, align 4, !dbg !10636
  %6 = icmp eq i32 %5, 0, !dbg !10639
  br i1 %6, label %25, label %7, !dbg !10640

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !10633, metadata !DIExpression()), !dbg !10634
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !10641
  %12 = load i32, i32* %11, align 4, !dbg !10641
  %13 = icmp ult i32 %3, %12, !dbg !10644
  br i1 %13, label %18, label %14, !dbg !10645

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !10646
  %16 = load i32, i32* %15, align 4, !dbg !10646
  %17 = icmp ult i32 %3, %16, !dbg !10647
  br i1 %17, label %25, label %18, !dbg !10648

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !10649
  call void @llvm.dbg.value(metadata i16 %19, metadata !10633, metadata !DIExpression()), !dbg !10634
  %20 = zext i16 %19 to i32, !dbg !10650
  %21 = add nuw nsw i32 %20, 1, !dbg !10651
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !10636
  %23 = load i32, i32* %22, align 4, !dbg !10636
  %24 = icmp eq i32 %23, 0, !dbg !10639
  br i1 %24, label %25, label %7, !dbg !10640, !llvm.loop !10652

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !10650
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !10654
  %28 = load i32, i32* %27, align 4, !dbg !10654
  ret i32 %28, !dbg !10655
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !10656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10658, metadata !DIExpression()), !dbg !10659
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10660
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !10661
  ret i32 %3, !dbg !10662
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10663 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10665, metadata !DIExpression()), !dbg !10668
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10669
  call void @llvm.dbg.value(metadata i32 %2, metadata !10666, metadata !DIExpression()), !dbg !10668
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10667, metadata !DIExpression()), !dbg !10668
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10667, metadata !DIExpression()), !dbg !10668
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !10670
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !10671
  ret i32 %4, !dbg !10672
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !10673 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !10679, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata i32 0, metadata !10680, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata i32 0, metadata !10681, metadata !DIExpression()), !dbg !10682
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !10683
  %3 = load i32, i32* %2, align 4, !dbg !10683
  %4 = icmp eq i32 %3, 0, !dbg !10686
  br i1 %4, label %17, label %5, !dbg !10687

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !10681, metadata !DIExpression()), !dbg !10682
  call void @llvm.dbg.value(metadata i32 %8, metadata !10680, metadata !DIExpression()), !dbg !10682
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !10688
  %10 = load i32, i32* %9, align 4, !dbg !10688
  %11 = mul i32 %10, %6, !dbg !10690
  %12 = add i32 %11, %8, !dbg !10691
  call void @llvm.dbg.value(metadata i32 %12, metadata !10680, metadata !DIExpression()), !dbg !10682
  %13 = add i32 %7, 1, !dbg !10692
  call void @llvm.dbg.value(metadata i32 %13, metadata !10681, metadata !DIExpression()), !dbg !10682
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !10683
  %15 = load i32, i32* %14, align 4, !dbg !10683
  %16 = icmp eq i32 %15, 0, !dbg !10686
  br i1 %16, label %17, label %5, !dbg !10687, !llvm.loop !10693

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !10682
  ret i32 %18, !dbg !10695
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !10696 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10700, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 %1, metadata !10701, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10702, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !10703, metadata !DIExpression()), !dbg !10709
  %5 = add i32 %1, %0, !dbg !10710
  call void @llvm.dbg.value(metadata i32 %5, metadata !10708, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 %0, metadata !10704, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 0, metadata !10705, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 0, metadata !10707, metadata !DIExpression()), !dbg !10709
  %6 = icmp ugt i32 %5, %0, !dbg !10711
  br i1 %6, label %7, label %34, !dbg !10714

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !10707, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 %9, metadata !10704, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.value(metadata i32 %10, metadata !10705, metadata !DIExpression()), !dbg !10709
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !10715
  call void @llvm.dbg.value(metadata i32 %11, metadata !10706, metadata !DIExpression()), !dbg !10709
  %12 = icmp eq i32 %8, 0, !dbg !10717
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !10719
  br i1 %12, label %14, label %16, !dbg !10720

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !10721
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !10723
  store i32 1, i32* %15, align 4, !dbg !10724
  br label %29, !dbg !10725

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !10726
  %18 = icmp eq i32 %11, %17, !dbg !10728
  br i1 %18, label %19, label %23, !dbg !10729

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !10730
  %21 = load i32, i32* %20, align 4, !dbg !10732
  %22 = add i32 %21, 1, !dbg !10732
  store i32 %22, i32* %20, align 4, !dbg !10732
  br label %29, !dbg !10733

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !10734
  call void @llvm.dbg.value(metadata i32 %24, metadata !10705, metadata !DIExpression()), !dbg !10709
  %25 = icmp eq i32 %24, 9, !dbg !10736
  br i1 %25, label %34, label %26, !dbg !10738

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !10739
  store i32 %11, i32* %27, align 4, !dbg !10740
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !10741
  store i32 1, i32* %28, align 4, !dbg !10742
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !10743
  call void @llvm.dbg.value(metadata i32 %30, metadata !10705, metadata !DIExpression()), !dbg !10709
  %31 = add i32 %11, %9, !dbg !10744
  call void @llvm.dbg.value(metadata i32 %31, metadata !10704, metadata !DIExpression()), !dbg !10709
  %32 = add i32 %8, 1, !dbg !10745
  call void @llvm.dbg.value(metadata i32 %32, metadata !10707, metadata !DIExpression()), !dbg !10709
  %33 = icmp ult i32 %31, %5, !dbg !10711
  br i1 %33, label %7, label %34, !dbg !10714, !llvm.loop !10746

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !10709
  ret i32 %35, !dbg !10748
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !10749 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10753, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.value(metadata i32 %1, metadata !10754, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10755, metadata !DIExpression()), !dbg !10756
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !10757
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !10758
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10759
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !10760
  ret i32 %7, !dbg !10761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !10762 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10764, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata i32 %1, metadata !10765, metadata !DIExpression()), !dbg !10767
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10766, metadata !DIExpression()), !dbg !10767
  ret i32 0, !dbg !10768
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !10769 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10771, metadata !DIExpression()), !dbg !10776
  call void @llvm.dbg.value(metadata i32 %1, metadata !10772, metadata !DIExpression()), !dbg !10776
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10773, metadata !DIExpression()), !dbg !10776
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10777
  call void @llvm.dbg.value(metadata i32 %4, metadata !10774, metadata !DIExpression()), !dbg !10776
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10775, metadata !DIExpression()), !dbg !10776
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10775, metadata !DIExpression()), !dbg !10776
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !10778
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !10779
  ret i32 %6, !dbg !10780
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !10781 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10783, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.value(metadata i32 %1, metadata !10784, metadata !DIExpression()), !dbg !10786
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10785, metadata !DIExpression()), !dbg !10786
  ret i32 0, !dbg !10787
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !10788 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !10790, metadata !DIExpression()), !dbg !10793
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !10794
  call void @llvm.dbg.value(metadata i32 %2, metadata !10791, metadata !DIExpression()), !dbg !10793
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !10792, metadata !DIExpression()), !dbg !10793
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !10792, metadata !DIExpression()), !dbg !10793
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !10795
  %4 = load i32, i32* %3, align 4, !dbg !10795
  ret i32 %4, !dbg !10796
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !10797 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !10801, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.value(metadata i32* %1, metadata !10802, metadata !DIExpression()), !dbg !10804
  call void @llvm.dbg.value(metadata i32 %2, metadata !10803, metadata !DIExpression()), !dbg !10804
  %4 = load i32, i32* %1, align 4, !dbg !10805
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !10807
  %6 = load i32, i32* %5, align 4, !dbg !10807
  %7 = icmp eq i32 %6, %2, !dbg !10808
  br i1 %7, label %8, label %12, !dbg !10809

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !10810
  %10 = load i32, i32* %9, align 4, !dbg !10812
  %11 = add i32 %10, 1, !dbg !10812
  store i32 %11, i32* %9, align 4, !dbg !10812
  br label %17, !dbg !10813

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !10814
  store i32 %13, i32* %1, align 4, !dbg !10814
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !10816
  store i32 1, i32* %14, align 4, !dbg !10817
  %15 = load i32, i32* %1, align 4, !dbg !10818
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !10819
  store i32 %2, i32* %16, align 4, !dbg !10820
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !10821
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !10822 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10826, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %1, metadata !10827, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !10828, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !10829, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 0, metadata !10830, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 0, metadata !10831, metadata !DIExpression()), !dbg !10835
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !10836
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !10837
  call void @llvm.dbg.value(metadata i32 0, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 0, metadata !10833, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 0, metadata !10831, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 0, metadata !10830, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %0, metadata !10826, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %1, metadata !10827, metadata !DIExpression()), !dbg !10835
  %7 = icmp eq i32 %1, 0, !dbg !10838
  br i1 %7, label %53, label %8, !dbg !10841

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %10, metadata !10833, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %11, metadata !10831, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %12, metadata !10830, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %13, metadata !10826, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %14, metadata !10827, metadata !DIExpression()), !dbg !10835
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !10842
  %16 = load i32, i32* %15, align 4, !dbg !10842
  %17 = icmp ult i32 %9, %16, !dbg !10845
  %18 = xor i1 %17, true, !dbg !10846
  %19 = zext i1 %18 to i32, !dbg !10846
  %20 = add i32 %12, %19, !dbg !10846
  call void @llvm.dbg.value(metadata i32 undef, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %20, metadata !10830, metadata !DIExpression()), !dbg !10835
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !10847
  %22 = load i32, i32* %21, align 4, !dbg !10847
  %23 = add i32 %22, %10, !dbg !10848
  call void @llvm.dbg.value(metadata i32 %23, metadata !10833, metadata !DIExpression()), !dbg !10835
  %24 = icmp ult i32 %23, %13, !dbg !10849
  br i1 %24, label %46, label %25, !dbg !10851

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !10852
  call void @llvm.dbg.value(metadata i32 %26, metadata !10832, metadata !DIExpression()), !dbg !10835
  %27 = icmp ult i32 %14, %26, !dbg !10854
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !10856
  call void @llvm.dbg.value(metadata i32 %28, metadata !10832, metadata !DIExpression()), !dbg !10835
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !10857
  %30 = load i32, i32* %29, align 4, !dbg !10857
  %31 = icmp eq i32 %30, %28, !dbg !10859
  br i1 %31, label %32, label %36, !dbg !10860

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !10861
  %34 = load i32, i32* %33, align 4, !dbg !10863
  %35 = add i32 %34, 1, !dbg !10863
  store i32 %35, i32* %33, align 4, !dbg !10863
  br label %42, !dbg !10864

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !10865
  %38 = zext i1 %37 to i32, !dbg !10868
  %39 = add nsw i32 %11, %38, !dbg !10868
  call void @llvm.dbg.value(metadata i32 %39, metadata !10831, metadata !DIExpression()), !dbg !10835
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !10869
  store i32 1, i32* %40, align 4, !dbg !10870
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !10871
  store i32 %28, i32* %41, align 4, !dbg !10872
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !10835
  call void @llvm.dbg.value(metadata i32 %43, metadata !10831, metadata !DIExpression()), !dbg !10835
  %44 = add i32 %28, %13, !dbg !10873
  call void @llvm.dbg.value(metadata i32 %44, metadata !10826, metadata !DIExpression()), !dbg !10835
  %45 = sub i32 %14, %28, !dbg !10874
  call void @llvm.dbg.value(metadata i32 %45, metadata !10827, metadata !DIExpression()), !dbg !10835
  br label %46, !dbg !10875

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !10876
  call void @llvm.dbg.value(metadata i32 %49, metadata !10831, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %48, metadata !10826, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %47, metadata !10827, metadata !DIExpression()), !dbg !10835
  %50 = add nuw i32 %9, 1, !dbg !10877
  %51 = select i1 %17, i32 %50, i32 1, !dbg !10877
  call void @llvm.dbg.value(metadata i32 %51, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %23, metadata !10833, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.value(metadata i32 %20, metadata !10830, metadata !DIExpression()), !dbg !10835
  %52 = icmp eq i32 %47, 0, !dbg !10838
  br i1 %52, label %53, label %8, !dbg !10841, !llvm.loop !10878

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !10880
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !10881 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10885
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10886
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10885
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10887
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !10888
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !10889
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10890
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !10891
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !10890
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !10892
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !10893
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !10894
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !10895
  call void @llvm.dbg.value(metadata i32 %12, metadata !10883, metadata !DIExpression()), !dbg !10896
  %13 = icmp eq i32 %12, 0, !dbg !10897
  br i1 %13, label %14, label %46, !dbg !10899

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !10884, metadata !DIExpression()), !dbg !10896
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !10900
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10902
  call void @llvm.dbg.value(metadata i32 0, metadata !10884, metadata !DIExpression()), !dbg !10896
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !10903
  %16 = icmp eq i32 %15, 0, !dbg !10905
  br i1 %16, label %34, label %17, !dbg !10906

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !10884, metadata !DIExpression()), !dbg !10896
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !10907
  %23 = load i32, i32* %22, align 4, !dbg !10907
  %24 = add i32 %20, %23, !dbg !10909
  %25 = icmp ugt i32 %18, %21, !dbg !10910
  br i1 %25, label %26, label %27, !dbg !10912

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !10913
  br label %27, !dbg !10915

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !10916
  call void @llvm.dbg.value(metadata i32 %29, metadata !10884, metadata !DIExpression()), !dbg !10896
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !10903
  %31 = load i32, i32* %30, align 4, !dbg !10903
  %32 = icmp eq i32 %31, 0, !dbg !10905
  br i1 %32, label %33, label %17, !dbg !10906, !llvm.loop !10917

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !10909
  br label %34, !dbg !10906

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !10919
  %36 = mul i32 %35, -5, !dbg !10920
  %37 = add i32 %36, 262144, !dbg !10921
  %38 = lshr i32 %37, 9, !dbg !10922
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !10923
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !10924
  call void @llvm.dbg.value(metadata i32 0, metadata !10883, metadata !DIExpression()), !dbg !10896
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10925
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !10926
  %42 = load i8, i8* %41, align 1, !dbg !10926
  %43 = icmp eq i8 %42, 3, !dbg !10927
  br i1 %43, label %44, label %46, !dbg !10927

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !10928
  call void @llvm.dbg.value(metadata i32 %45, metadata !10883, metadata !DIExpression()), !dbg !10896
  br label %46, !dbg !10930

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !10896
  ret i32 %47, !dbg !10931
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !10932 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10936, metadata !DIExpression()), !dbg !10937
  %2 = icmp eq i32 %0, 0, !dbg !10938
  br i1 %2, label %3, label %9, !dbg !10940

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !10941
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !10943
  %5 = icmp slt i32 %4, 0, !dbg !10944
  br i1 %5, label %6, label %7, !dbg !10946

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10947
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.143, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #23, !dbg !10947
  unreachable, !dbg !10947

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !10952
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10953
  br label %9, !dbg !10954

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10955
  ret void, !dbg !10956
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !10957 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10958
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !10959
  ret i32 %1, !dbg !10960
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !10961 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10964
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10965
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10966
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10967
  %4 = load i16, i16* %3, align 2, !dbg !10967
  %5 = zext i16 %4 to i32, !dbg !10965
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10968
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10969
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10970
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !10971
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !10971
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !10972
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !10973
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !10974
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !10975
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !10976
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10977
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10978
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !10979
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !10980
  %13 = load i32, i32* %12, align 4, !dbg !10980
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !10981
  call void @llvm.dbg.value(metadata i32 %14, metadata !10963, metadata !DIExpression()), !dbg !10982
  %15 = icmp eq i32 %14, -120, !dbg !10983
  br i1 %15, label %16, label %17, !dbg !10986

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !10987
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.143, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.144, i32 0, i32 0)) #23, !dbg !10987
  unreachable, !dbg !10987

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !10989
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !10990
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !10991
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !10992
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !10993
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10994
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !10995
  ret i32 0, !dbg !10996
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !10997 {
  ret void, !dbg !10998
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !10999 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !11002
  call void @llvm.dbg.value(metadata i32 %1, metadata !11001, metadata !DIExpression()), !dbg !11003
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !11004
  br i1 %2, label %4, label %3, !dbg !11006

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !11007
  br label %4, !dbg !11009

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !11010
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !11010
  ret i32 %5, !dbg !11011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !11012 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !11015
  call void @llvm.dbg.value(metadata i32 %1, metadata !11014, metadata !DIExpression()), !dbg !11016
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !11017
  br i1 %2, label %3, label %4, !dbg !11019

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !11020
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !11022
  ret void, !dbg !11023

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !11024
  tail call void @Flash_ReturnReady() #20, !dbg !11026
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.149, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.150, i32 0, i32 0)) #23, !dbg !11026
  unreachable, !dbg !11026
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !11030 {
  ret void, !dbg !11031
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !11032 {
  br label %1, !dbg !11035

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !11036
  call void @llvm.dbg.value(metadata i32 %2, metadata !11034, metadata !DIExpression()), !dbg !11038
  %3 = icmp eq i32 %2, 0, !dbg !11039
  br i1 %3, label %4, label %1, !dbg !11040, !llvm.loop !11041

4:                                                ; preds = %1
  ret void, !dbg !11043
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !11044 {
  tail call void @FreeFDMLock() #21, !dbg !11045
  ret void, !dbg !11046
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !11047 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11090, metadata !DIExpression()), !dbg !11096
  call void @llvm.dbg.value(metadata i32 %1, metadata !11091, metadata !DIExpression()), !dbg !11096
  call void @llvm.dbg.value(metadata i8* %2, metadata !11092, metadata !DIExpression()), !dbg !11096
  call void @llvm.dbg.value(metadata i32 %3, metadata !11093, metadata !DIExpression()), !dbg !11096
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !11097
  %6 = load i32, i32* %5, align 4, !dbg !11097
  call void @llvm.dbg.value(metadata i32 %6, metadata !11095, metadata !DIExpression()), !dbg !11096
  %7 = icmp ule i32 %6, %1, !dbg !11098
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !11100
  br i1 %10, label %26, label %11, !dbg !11100

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11101
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !11101
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !11101
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !11102
  %16 = load i8*, i8** %15, align 4, !dbg !11102
  %17 = ptrtoint i8* %16 to i32, !dbg !11103
  %18 = add i32 %17, %1, !dbg !11104
  call void @llvm.dbg.value(metadata i32 %18, metadata !11094, metadata !DIExpression()), !dbg !11096
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11105
  %20 = load i8, i8* %19, align 4, !dbg !11105, !range !2834
  %21 = icmp eq i8 %20, 0, !dbg !11105
  br i1 %21, label %22, label %23, !dbg !11107

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11108
  br label %23, !dbg !11110

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !11111
  %24 = inttoptr i32 %18 to i8*, !dbg !11112
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !11113
  tail call void @release_FDM_lock() #21, !dbg !11114
  br label %26, !dbg !11115

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !11096
  ret i32 %27, !dbg !11116
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !11117 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11121, metadata !DIExpression()), !dbg !11123
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11124
  %3 = load i8, i8* %2, align 4, !dbg !11124, !range !2834
  %4 = icmp eq i8 %3, 0, !dbg !11124
  br i1 %4, label %5, label %18, !dbg !11126

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !11127
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !11128
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !11128
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !11129
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !11129
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11130
  %11 = load i8*, i8** %10, align 4, !dbg !11130
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !11131
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !11132
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !11133
  call void @llvm.dbg.value(metadata i32 %14, metadata !11122, metadata !DIExpression()), !dbg !11123
  tail call void @release_FDM_lock() #21, !dbg !11134
  %15 = icmp slt i32 %14, 0, !dbg !11135
  br i1 %15, label %16, label %17, !dbg !11137

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !11138
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.149, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.150, i32 0, i32 0)) #23, !dbg !11138
  unreachable, !dbg !11138

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !11143
  br label %18, !dbg !11144

18:                                               ; preds = %1, %17
  ret void, !dbg !11144
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !11145 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11147, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i32 %1, metadata !11148, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i8* %2, metadata !11149, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i32 %3, metadata !11150, metadata !DIExpression()), !dbg !11168
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !11169
  %7 = load i32, i32* %6, align 4, !dbg !11169
  call void @llvm.dbg.value(metadata i32 %7, metadata !11153, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i32 0, metadata !11154, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i32 0, metadata !11155, metadata !DIExpression()), !dbg !11168
  %8 = icmp ugt i32 %7, %1, !dbg !11170
  br i1 %8, label %9, label %101, !dbg !11172

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !11173
  %11 = icmp ugt i32 %10, %7, !dbg !11175
  br i1 %11, label %101, label %12, !dbg !11176

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11177
  %14 = load i8, i8* %13, align 4, !dbg !11177, !range !2834
  %15 = icmp eq i8 %14, 0, !dbg !11177
  br i1 %15, label %16, label %17, !dbg !11179

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11180
  br label %17, !dbg !11182

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !11183
  %18 = bitcast i16* %5 to i8*, !dbg !11184
  call void @llvm.dbg.value(metadata i32 0, metadata !11154, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i32 0, metadata !11155, metadata !DIExpression()), !dbg !11168
  %19 = icmp eq i32 %3, 0, !dbg !11185
  br i1 %19, label %99, label %20, !dbg !11186

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !11186

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !11155, metadata !DIExpression()), !dbg !11168
  %27 = load i8*, i8** %21, align 4, !dbg !11187
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !11188
  %29 = bitcast i8* %28 to i8**, !dbg !11188
  %30 = load i8*, i8** %29, align 4, !dbg !11188
  %31 = ptrtoint i8* %30 to i32, !dbg !11189
  %32 = add i32 %31, %1, !dbg !11190
  %33 = add i32 %32, %26, !dbg !11191
  call void @llvm.dbg.value(metadata i32 %33, metadata !11151, metadata !DIExpression()), !dbg !11168
  %34 = add i32 %26, %22, !dbg !11192
  call void @llvm.dbg.value(metadata i32 %34, metadata !11152, metadata !DIExpression()), !dbg !11168
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11193
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !11194
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !11194
  %38 = add i32 %26, %1, !dbg !11195
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !11196
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !11197
  %41 = and i32 %33, 1, !dbg !11198
  %42 = icmp eq i32 %41, 0, !dbg !11198
  br i1 %42, label %43, label %46, !dbg !11199

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !11200
  %45 = icmp eq i32 %44, 1, !dbg !11201
  br i1 %45, label %46, label %57, !dbg !11202

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11203
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !11205
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !11205
  %50 = load i8*, i8** %21, align 4, !dbg !11206
  %51 = inttoptr i32 %33 to i8*, !dbg !11207
  %52 = inttoptr i32 %34 to i8*, !dbg !11208
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !11209
  call void @llvm.dbg.value(metadata i32 %53, metadata !11154, metadata !DIExpression()), !dbg !11168
  %54 = icmp eq i32 %53, 0, !dbg !11210
  br i1 %54, label %55, label %99, !dbg !11212

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !11213
  call void @llvm.dbg.value(metadata i32 %56, metadata !11155, metadata !DIExpression()), !dbg !11168
  br label %96, !dbg !11214

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !11215
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !11216
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !11217
  call void @llvm.dbg.value(metadata i32 %60, metadata !11156, metadata !DIExpression()), !dbg !11218
  call void @llvm.dbg.value(metadata i32 %44, metadata !11160, metadata !DIExpression()), !dbg !11218
  %61 = add i32 %60, %33, !dbg !11219
  %62 = sub i32 0, %60, !dbg !11220
  %63 = and i32 %61, %62, !dbg !11221
  call void @llvm.dbg.value(metadata i32 %63, metadata !11161, metadata !DIExpression()), !dbg !11218
  %64 = add i32 %32, %3, !dbg !11222
  %65 = icmp ugt i32 %64, %63, !dbg !11224
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !11225
  call void @llvm.dbg.value(metadata i32 %67, metadata !11160, metadata !DIExpression()), !dbg !11218
  %68 = and i32 %67, -2, !dbg !11226
  call void @llvm.dbg.value(metadata i32 %68, metadata !11160, metadata !DIExpression()), !dbg !11218
  %69 = icmp ne i32 %68, 2, !dbg !11227
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !11228
  br i1 %72, label %85, label %73, !dbg !11228

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !11184
  call void @llvm.dbg.value(metadata i8* %18, metadata !11167, metadata !DIExpression()), !dbg !11229
  %74 = inttoptr i32 %34 to i8*, !dbg !11230
  %75 = load i8, i8* %74, align 1, !dbg !11231
  call void @llvm.dbg.value(metadata i8 undef, metadata !11162, metadata !DIExpression()), !dbg !11229
  store i8 %75, i8* %18, align 2, !dbg !11232
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !11233
  %77 = load i8, i8* %76, align 1, !dbg !11234
  store i8 %77, i8* %24, align 1, !dbg !11235
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11236
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !11237
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !11237
  %81 = load i8*, i8** %21, align 4, !dbg !11238
  %82 = inttoptr i32 %33 to i8*, !dbg !11239
  call void @llvm.dbg.value(metadata i16* %5, metadata !11162, metadata !DIExpression(DW_OP_deref)), !dbg !11229
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !11240
  call void @llvm.dbg.value(metadata i32 %83, metadata !11154, metadata !DIExpression()), !dbg !11168
  %84 = icmp eq i32 %83, 0, !dbg !11241
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !11243
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !11244
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !11248
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !11248
  %89 = load i8*, i8** %21, align 4, !dbg !11249
  %90 = inttoptr i32 %33 to i8*, !dbg !11250
  %91 = inttoptr i32 %34 to i8*, !dbg !11251
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !11252
  call void @llvm.dbg.value(metadata i32 %92, metadata !11154, metadata !DIExpression()), !dbg !11168
  %93 = icmp eq i32 %92, 0, !dbg !11253
  br i1 %93, label %94, label %99, !dbg !11255

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !11154, metadata !DIExpression()), !dbg !11168
  %95 = add i32 %68, %26, !dbg !11256
  call void @llvm.dbg.value(metadata i32 %83, metadata !11154, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i32 %26, metadata !11155, metadata !DIExpression()), !dbg !11168
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !11257
  call void @llvm.dbg.value(metadata i32 0, metadata !11154, metadata !DIExpression()), !dbg !11168
  call void @llvm.dbg.value(metadata i32 %97, metadata !11155, metadata !DIExpression()), !dbg !11168
  %98 = icmp ult i32 %97, %3, !dbg !11185
  br i1 %98, label %25, label %99, !dbg !11186, !llvm.loop !11258

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !11260
  br label %101, !dbg !11261

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !11168
  ret i32 %102, !dbg !11261
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11262 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !11266, metadata !DIExpression()), !dbg !11270
  call void @llvm.dbg.value(metadata i32 %1, metadata !11267, metadata !DIExpression()), !dbg !11270
  %3 = and i32 %1, 16777215, !dbg !11271
  call void @llvm.dbg.value(metadata i32 %3, metadata !11269, metadata !DIExpression()), !dbg !11270
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !11272
  %5 = load i8, i8* %4, align 4, !dbg !11272, !range !2834
  %6 = icmp eq i8 %5, 0, !dbg !11272
  br i1 %6, label %7, label %8, !dbg !11274

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !11275
  br label %8, !dbg !11277

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !11278
  %10 = load i32, i32* %9, align 4, !dbg !11278
  %11 = icmp ult i32 %3, %10, !dbg !11280
  br i1 %11, label %12, label %27, !dbg !11281

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !11282
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !11283
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !11283
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !11284
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !11284
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !11285
  %18 = load i8*, i8** %17, align 4, !dbg !11285
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !11286
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !11287
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !11288
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !11288
  %23 = load i8*, i8** %17, align 4, !dbg !11289
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !11290
  call void @llvm.dbg.value(metadata i32 %24, metadata !11268, metadata !DIExpression()), !dbg !11270
  tail call void @release_FDM_lock() #21, !dbg !11291
  %25 = icmp eq i32 %24, 0, !dbg !11292
  %26 = select i1 %25, i32 0, i32 6, !dbg !11270
  br label %27, !dbg !11270

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !11270
  ret i32 %28, !dbg !11294
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !11295 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !11296
  br i1 %1, label %3, label %2, !dbg !11298

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !11299
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !11301
  store i1 true, i1* @flash_init_status, align 4, !dbg !11302
  br label %3, !dbg !11303

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !11304
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !11305 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !11306
  %2 = select i1 %1, i32 0, i32 -5, !dbg !11306
  ret i32 %2, !dbg !11307
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11308 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11312, metadata !DIExpression()), !dbg !11319
  call void @llvm.dbg.value(metadata i32 %1, metadata !11313, metadata !DIExpression()), !dbg !11319
  call void @llvm.dbg.value(metadata i8* %2, metadata !11314, metadata !DIExpression()), !dbg !11319
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11315, metadata !DIExpression()), !dbg !11319
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11320
  call void @llvm.dbg.value(metadata i8* %4, metadata !11316, metadata !DIExpression()), !dbg !11319
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11321
  %6 = ptrtoint i8* %5 to i32, !dbg !11322
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11323
  %8 = bitcast i8* %7 to i8**, !dbg !11323
  %9 = load i8*, i8** %8, align 4, !dbg !11323
  %10 = ptrtoint i8* %9 to i32, !dbg !11324
  %11 = shl i32 %1, 9, !dbg !11325
  %12 = add i32 %11, %6, !dbg !11326
  %13 = sub i32 %12, %10, !dbg !11327
  call void @llvm.dbg.value(metadata i32 %13, metadata !11318, metadata !DIExpression()), !dbg !11319
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !11328
  call void @llvm.dbg.value(metadata i32 %14, metadata !11317, metadata !DIExpression()), !dbg !11319
  %15 = icmp eq i32 %14, 0, !dbg !11329
  %16 = select i1 %15, i32 0, i32 -13, !dbg !11319
  ret i32 %16, !dbg !11331
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !11332 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11334, metadata !DIExpression()), !dbg !11341
  call void @llvm.dbg.value(metadata i32 %1, metadata !11335, metadata !DIExpression()), !dbg !11341
  call void @llvm.dbg.value(metadata i8* %2, metadata !11336, metadata !DIExpression()), !dbg !11341
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11337, metadata !DIExpression()), !dbg !11341
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11342
  call void @llvm.dbg.value(metadata i8* %4, metadata !11338, metadata !DIExpression()), !dbg !11341
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11343
  %6 = ptrtoint i8* %5 to i32, !dbg !11344
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11345
  %8 = bitcast i8* %7 to i8**, !dbg !11345
  %9 = load i8*, i8** %8, align 4, !dbg !11345
  %10 = ptrtoint i8* %9 to i32, !dbg !11346
  %11 = shl i32 %1, 9, !dbg !11347
  %12 = add i32 %11, %6, !dbg !11348
  %13 = sub i32 %12, %10, !dbg !11349
  call void @llvm.dbg.value(metadata i32 %13, metadata !11340, metadata !DIExpression()), !dbg !11341
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !11350
  call void @llvm.dbg.value(metadata i32 %14, metadata !11339, metadata !DIExpression()), !dbg !11341
  %15 = icmp eq i32 %14, 0, !dbg !11351
  %16 = select i1 %15, i32 0, i32 -14, !dbg !11341
  ret i32 %16, !dbg !11353
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !11354 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11358, metadata !DIExpression()), !dbg !11360
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !11361
  call void @llvm.dbg.value(metadata i32 %2, metadata !11359, metadata !DIExpression()), !dbg !11360
  %3 = icmp eq i32 %2, 0, !dbg !11362
  %4 = select i1 %3, i32 0, i32 -15, !dbg !11360
  ret i32 %4, !dbg !11364
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !11365 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11367, metadata !DIExpression()), !dbg !11370
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11368, metadata !DIExpression()), !dbg !11370
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11371
  call void @llvm.dbg.value(metadata i8* %2, metadata !11369, metadata !DIExpression()), !dbg !11370
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !11372
  ret i32 %3, !dbg !11373
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !11374 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11376, metadata !DIExpression()), !dbg !11379
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11377, metadata !DIExpression()), !dbg !11379
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11380
  call void @llvm.dbg.value(metadata i8* %2, metadata !11378, metadata !DIExpression()), !dbg !11379
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !11381
  ret i32 %3, !dbg !11382
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11383 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11387, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.value(metadata i32* %1, metadata !11388, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.value(metadata i32* %2, metadata !11389, metadata !DIExpression()), !dbg !11392
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11390, metadata !DIExpression()), !dbg !11392
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11393
  call void @llvm.dbg.value(metadata i8* %4, metadata !11391, metadata !DIExpression()), !dbg !11392
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !11394
  store i32 %5, i32* %1, align 4, !dbg !11395
  %6 = icmp eq i32 %5, -1, !dbg !11396
  br i1 %6, label %10, label %7, !dbg !11398

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !11399
  %9 = urem i32 %0, %8, !dbg !11400
  store i32 %9, i32* %2, align 4, !dbg !11401
  br label %10, !dbg !11402

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !11392
  ret i32 %11, !dbg !11403
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !11404 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11408, metadata !DIExpression()), !dbg !11413
  call void @llvm.dbg.value(metadata i32 %1, metadata !11409, metadata !DIExpression()), !dbg !11413
  call void @llvm.dbg.value(metadata i32* %2, metadata !11410, metadata !DIExpression()), !dbg !11413
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11411, metadata !DIExpression()), !dbg !11413
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !11414
  call void @llvm.dbg.value(metadata i8* %4, metadata !11412, metadata !DIExpression()), !dbg !11413
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !11415
  %6 = ptrtoint i8* %5 to i32, !dbg !11416
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !11417
  %8 = bitcast i8* %7 to i8**, !dbg !11417
  %9 = load i8*, i8** %8, align 4, !dbg !11417
  %10 = ptrtoint i8* %9 to i32, !dbg !11418
  %11 = add i32 %6, %1, !dbg !11419
  %12 = sub i32 %11, %10, !dbg !11420
  store i32 %12, i32* %2, align 4, !dbg !11421
  ret i32 0, !dbg !11422
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !11423 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11427, metadata !DIExpression()), !dbg !11428
  %2 = add i32 %0, 2, !dbg !11429
  %3 = icmp ult i32 %2, 9, !dbg !11429
  br i1 %3, label %5, label %4, !dbg !11429

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !11430
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.149, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.150, i32 0, i32 0)) #23, !dbg !11430
  unreachable, !dbg !11430

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !11429
  %7 = lshr i16 433, %6, !dbg !11429
  %8 = and i16 %7, 1, !dbg !11429
  %9 = icmp eq i16 %8, 0, !dbg !11429
  br i1 %9, label %4, label %10, !dbg !11429

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !11429
  %12 = load i32, i32* %11, align 4, !dbg !11429
  ret i32 %12, !dbg !11440
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !11441 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11446, metadata !DIExpression()), !dbg !11449
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !11450
  call void @llvm.dbg.value(metadata i32 %2, metadata !11448, metadata !DIExpression()), !dbg !11449
  %3 = icmp eq i32 %2, -1, !dbg !11451
  br i1 %3, label %4, label %5, !dbg !11453

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !11454
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.149, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.150, i32 0, i32 0)) #23, !dbg !11454
  unreachable, !dbg !11454

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !11459
  call void @llvm.dbg.value(metadata i32 %6, metadata !11447, metadata !DIExpression()), !dbg !11449
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !11460

7:                                                ; preds = %5
  br label %10, !dbg !11461

8:                                                ; preds = %5
  br label %10, !dbg !11465

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !11468
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.149, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.150, i32 0, i32 0)) #23, !dbg !11468
  unreachable, !dbg !11468

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !11473
  ret i32 %11, !dbg !11474
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !11475 {
  %1 = tail call i32 @NOR_init() #21, !dbg !11476
  ret i32 0, !dbg !11477
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !11478 {
  ret i32 0, !dbg !11479
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !11480 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11484, metadata !DIExpression()), !dbg !11489
  call void @llvm.dbg.value(metadata i32 %1, metadata !11485, metadata !DIExpression()), !dbg !11489
  call void @llvm.dbg.value(metadata i32 0, metadata !11488, metadata !DIExpression()), !dbg !11489
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !11490

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !11491
  %5 = icmp eq i32 %4, 0, !dbg !11495
  br i1 %5, label %12, label %22, !dbg !11496

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !11497
  %8 = icmp eq i32 %7, 0, !dbg !11501
  br i1 %8, label %12, label %22, !dbg !11502

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !11503
  %11 = icmp eq i32 %10, 0, !dbg !11507
  br i1 %11, label %12, label %22, !dbg !11508

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !11509
  call void @llvm.dbg.value(metadata i32 %13, metadata !11488, metadata !DIExpression()), !dbg !11489
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !11510
  call void @llvm.dbg.value(metadata i32 %14, metadata !11487, metadata !DIExpression()), !dbg !11489
  %15 = icmp eq i32 %14, -1, !dbg !11511
  br i1 %15, label %22, label %16, !dbg !11513

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !11514
  call void @llvm.dbg.value(metadata i32 %17, metadata !11487, metadata !DIExpression()), !dbg !11489
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !11515
  call void @llvm.dbg.value(metadata i32 %18, metadata !11486, metadata !DIExpression()), !dbg !11489
  %19 = icmp eq i32 %18, 0, !dbg !11516
  br i1 %19, label %22, label %20, !dbg !11518

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !11519
  br label %22, !dbg !11521

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !11489
  ret i32 %23, !dbg !11522
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11523 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11527, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata i8* %1, metadata !11528, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata i32 %2, metadata !11529, metadata !DIExpression()), !dbg !11532
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11530, metadata !DIExpression()), !dbg !11532
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !11533
  call void @llvm.dbg.value(metadata i32 %4, metadata !11531, metadata !DIExpression()), !dbg !11532
  %5 = icmp eq i32 %4, 0, !dbg !11534
  br i1 %5, label %8, label %6, !dbg !11536

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !11537
  br label %8, !dbg !11539

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !11532
  ret i32 %9, !dbg !11540
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !11541 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11545, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata i8* %1, metadata !11546, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata i32 %2, metadata !11547, metadata !DIExpression()), !dbg !11553
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !11548, metadata !DIExpression()), !dbg !11553
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !11554
  call void @llvm.dbg.value(metadata i32 %4, metadata !11549, metadata !DIExpression()), !dbg !11553
  %5 = icmp eq i32 %4, 0, !dbg !11555
  br i1 %5, label %8, label %6, !dbg !11557

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !11558
  br label %21, !dbg !11560

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !11561
  br i1 %9, label %10, label %21, !dbg !11562

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !11563
  call void @llvm.dbg.value(metadata i32 %11, metadata !11550, metadata !DIExpression()), !dbg !11565
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !11550, metadata !DIExpression()), !dbg !11565
  %15 = icmp ugt i32 %11, %14, !dbg !11566
  br i1 %15, label %21, label %16, !dbg !11568

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !11550, metadata !DIExpression()), !dbg !11565
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !11569
  %19 = add i32 %17, 32, !dbg !11571
  call void @llvm.dbg.value(metadata i32 %19, metadata !11550, metadata !DIExpression()), !dbg !11565
  %20 = icmp ugt i32 %19, %14, !dbg !11566
  br i1 %20, label %21, label %16, !dbg !11568, !llvm.loop !11572

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !11553
  ret i32 %22, !dbg !11574
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11575 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11579, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.value(metadata i32 %1, metadata !11580, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.value(metadata i8* %0, metadata !11581, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.value(metadata i32 0, metadata !11582, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.value(metadata i32 0, metadata !11583, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.value(metadata i32 0, metadata !11584, metadata !DIExpression()), !dbg !11585
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11586
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11586
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11586
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11587
  %7 = load i32, i32* %6, align 4, !dbg !11587
  call void @llvm.dbg.value(metadata i32 %7, metadata !11584, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.value(metadata i32 0, metadata !11583, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.value(metadata i32 0, metadata !11582, metadata !DIExpression()), !dbg !11585
  %8 = icmp ugt i32 %7, %1, !dbg !11588
  br i1 %8, label %23, label %9, !dbg !11589

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !11590
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11584, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.value(metadata i32 %12, metadata !11583, metadata !DIExpression()), !dbg !11585
  call void @llvm.dbg.value(metadata i32 %13, metadata !11582, metadata !DIExpression()), !dbg !11585
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !11592
  %15 = load i32, i32* %14, align 4, !dbg !11592
  %16 = mul i32 %15, %10, !dbg !11593
  %17 = add i32 %16, %13, !dbg !11594
  call void @llvm.dbg.value(metadata i32 %17, metadata !11582, metadata !DIExpression()), !dbg !11585
  %18 = add i32 %12, 1, !dbg !11595
  call void @llvm.dbg.value(metadata i32 %18, metadata !11583, metadata !DIExpression()), !dbg !11585
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !11596
  %20 = load i32, i32* %19, align 4, !dbg !11596
  %21 = add i32 %20, %11, !dbg !11597
  call void @llvm.dbg.value(metadata i32 %21, metadata !11584, metadata !DIExpression()), !dbg !11585
  %22 = icmp ugt i32 %21, %1, !dbg !11588
  br i1 %22, label %23, label %9, !dbg !11589, !llvm.loop !11598

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !11600
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !11585
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !11585
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !11585
  call void @llvm.dbg.value(metadata i8* %0, metadata !11581, metadata !DIExpression()), !dbg !11585
  %28 = sub i32 %1, %27, !dbg !11601
  %29 = add i32 %28, %24, !dbg !11602
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !11603
  %31 = load i32, i32* %30, align 4, !dbg !11603
  %32 = mul i32 %29, %31, !dbg !11604
  %33 = add i32 %32, %25, !dbg !11605
  call void @llvm.dbg.value(metadata i32 %33, metadata !11582, metadata !DIExpression()), !dbg !11585
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !11606
  %35 = bitcast i8* %34 to i8**, !dbg !11606
  %36 = load i8*, i8** %35, align 4, !dbg !11606
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !11607
  ret i8* %37, !dbg !11608
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !11609 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11611, metadata !DIExpression()), !dbg !11615
  call void @llvm.dbg.value(metadata i32 %1, metadata !11612, metadata !DIExpression()), !dbg !11615
  call void @llvm.dbg.value(metadata i32 %2, metadata !11613, metadata !DIExpression()), !dbg !11615
  call void @llvm.dbg.value(metadata i8* %0, metadata !11614, metadata !DIExpression()), !dbg !11615
  %4 = icmp eq i32 %2, 0, !dbg !11616
  br i1 %4, label %6, label %5, !dbg !11619

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !11620
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.165, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.166, i32 0, i32 0)) #23, !dbg !11620
  unreachable, !dbg !11620

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !11614, metadata !DIExpression()), !dbg !11615
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !11622
  %8 = inttoptr i32 %7 to i8*, !dbg !11623
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !11624
  %10 = bitcast i8* %9 to i8**, !dbg !11624
  store i8* %8, i8** %10, align 4, !dbg !11625
  ret i8* %8, !dbg !11626
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !2156 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2160, metadata !DIExpression()), !dbg !11627
  call void @llvm.dbg.value(metadata i32 %1, metadata !2161, metadata !DIExpression()), !dbg !11627
  call void @llvm.dbg.value(metadata i8* %0, metadata !2162, metadata !DIExpression()), !dbg !11627
  call void @llvm.dbg.value(metadata i32 0, metadata !2207, metadata !DIExpression()), !dbg !11627
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !11628
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !11628
  %5 = and i32 %1, 7, !dbg !11630
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !11631
  %7 = load i32, i32* %6, align 4, !dbg !11631
  %8 = icmp eq i32 %7, -1, !dbg !11632
  br i1 %8, label %62, label %9, !dbg !11633

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !11634
  br i1 %10, label %54, label %11, !dbg !11637

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !11638
  %13 = load i32, i32* %12, align 4, !dbg !11638
  %14 = icmp eq i32 %13, -1, !dbg !11641
  br i1 %14, label %44, label %15, !dbg !11642

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !11643
  br i1 %16, label %35, label %17, !dbg !11646

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11647
  %19 = add i32 %18, 1, !dbg !11647
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !11647
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11649
  %21 = shl nuw nsw i32 1, %5, !dbg !11651
  %22 = and i32 %20, %21, !dbg !11652
  %23 = icmp eq i32 %22, 0, !dbg !11652
  br i1 %23, label %30, label %24, !dbg !11653

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !11654
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11656
  %26 = ptrtoint i8* %25 to i32, !dbg !11657
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11658
  store i32 %26, i32* %27, align 4, !dbg !11659
  call void @llvm.dbg.value(metadata i32 %26, metadata !2207, metadata !DIExpression()), !dbg !11627
  %28 = xor i32 %21, -1, !dbg !11660
  %29 = and i32 %20, %28, !dbg !11661
  br label %71, !dbg !11662

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !11663
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11665
  %32 = ptrtoint i8* %31 to i32, !dbg !11666
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11667
  store i32 %32, i32* %33, align 4, !dbg !11668
  call void @llvm.dbg.value(metadata i32 %32, metadata !2207, metadata !DIExpression()), !dbg !11627
  %34 = or i32 %20, %21, !dbg !11669
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11670
  %37 = add i32 %36, 1, !dbg !11670
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !11670
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11672
  %39 = load i32, i32* %38, align 4, !dbg !11672
  call void @llvm.dbg.value(metadata i32 %39, metadata !2207, metadata !DIExpression()), !dbg !11627
  %40 = shl nuw nsw i32 1, %5, !dbg !11673
  %41 = xor i32 %40, -1, !dbg !11674
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11675
  %43 = and i32 %42, %41, !dbg !11675
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11676
  %46 = add i32 %45, 1, !dbg !11676
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !11676
  store i32 %1, i32* %12, align 4, !dbg !11678
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11679
  %48 = ptrtoint i8* %47 to i32, !dbg !11680
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !11681
  store i32 %48, i32* %49, align 4, !dbg !11682
  call void @llvm.dbg.value(metadata i32 %48, metadata !2207, metadata !DIExpression()), !dbg !11627
  %50 = shl nuw nsw i32 1, %5, !dbg !11683
  %51 = xor i32 %50, -1, !dbg !11684
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11685
  %53 = and i32 %52, %51, !dbg !11685
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !11686
  %56 = add i32 %55, 1, !dbg !11686
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !11686
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11688
  %58 = load i32, i32* %57, align 4, !dbg !11688
  call void @llvm.dbg.value(metadata i32 %58, metadata !2207, metadata !DIExpression()), !dbg !11627
  %59 = shl nuw nsw i32 1, %5, !dbg !11689
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11690
  %61 = or i32 %60, %59, !dbg !11690
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !11691
  %64 = add i32 %63, 1, !dbg !11691
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !11691
  store i32 %1, i32* %6, align 4, !dbg !11693
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !11694
  %66 = ptrtoint i8* %65 to i32, !dbg !11695
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !11696
  store i32 %66, i32* %67, align 4, !dbg !11697
  call void @llvm.dbg.value(metadata i32 %66, metadata !2207, metadata !DIExpression()), !dbg !11627
  %68 = shl nuw nsw i32 1, %5, !dbg !11698
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !11699
  %70 = or i32 %69, %68, !dbg !11699
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !11700
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !11700
  call void @llvm.dbg.value(metadata i32 %73, metadata !2207, metadata !DIExpression()), !dbg !11627
  ret i32 %73, !dbg !11701
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11702 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11704, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i32 %1, metadata !11705, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i8* %0, metadata !11706, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i32 0, metadata !11707, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i32 0, metadata !11708, metadata !DIExpression()), !dbg !11709
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11710
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11710
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11710
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11711
  %7 = load i32, i32* %6, align 4, !dbg !11711
  call void @llvm.dbg.value(metadata i32 %7, metadata !11708, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i32 0, metadata !11707, metadata !DIExpression()), !dbg !11709
  %8 = icmp ugt i32 %7, %1, !dbg !11712
  br i1 %8, label %17, label %9, !dbg !11713

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !11708, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.value(metadata i32 %11, metadata !11707, metadata !DIExpression()), !dbg !11709
  %12 = add i32 %11, 1, !dbg !11714
  call void @llvm.dbg.value(metadata i32 %12, metadata !11707, metadata !DIExpression()), !dbg !11709
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !11716
  %14 = load i32, i32* %13, align 4, !dbg !11716
  %15 = add i32 %14, %10, !dbg !11717
  call void @llvm.dbg.value(metadata i32 %15, metadata !11708, metadata !DIExpression()), !dbg !11709
  %16 = icmp ugt i32 %15, %1, !dbg !11712
  br i1 %16, label %17, label %9, !dbg !11713, !llvm.loop !11718

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !11709
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !11720
  %20 = load i32, i32* %19, align 4, !dbg !11720
  ret i32 %20, !dbg !11721
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !11722 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11724, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i32 %1, metadata !11725, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i8* %0, metadata !11726, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i32 0, metadata !11727, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i32 0, metadata !11728, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i32 0, metadata !11729, metadata !DIExpression()), !dbg !11730
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !11731
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !11731
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !11731
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !11732
  %7 = load i32, i32* %6, align 4, !dbg !11732
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !11733
  %9 = load i32, i32* %8, align 4, !dbg !11733
  %10 = mul i32 %9, %7, !dbg !11734
  call void @llvm.dbg.value(metadata i32 %10, metadata !11728, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i32 0, metadata !11729, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i32 0, metadata !11727, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i32 %1, metadata !11725, metadata !DIExpression()), !dbg !11730
  %11 = icmp ult i32 %10, %1, !dbg !11735
  br i1 %11, label %12, label %30, !dbg !11736

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !11737
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !11729, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i32 %16, metadata !11728, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i32 %17, metadata !11727, metadata !DIExpression()), !dbg !11730
  call void @llvm.dbg.value(metadata i32 %18, metadata !11725, metadata !DIExpression()), !dbg !11730
  %19 = icmp eq i32 %14, 0, !dbg !11736
  br i1 %19, label %36, label %20, !dbg !11738

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !11739
  call void @llvm.dbg.value(metadata i32 %21, metadata !11729, metadata !DIExpression()), !dbg !11730
  %22 = sub i32 %18, %16, !dbg !11741
  call void @llvm.dbg.value(metadata i32 %22, metadata !11725, metadata !DIExpression()), !dbg !11730
  %23 = add i32 %17, 1, !dbg !11742
  call void @llvm.dbg.value(metadata i32 %23, metadata !11727, metadata !DIExpression()), !dbg !11730
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !11743
  %25 = load i32, i32* %24, align 4, !dbg !11743
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !11744
  %27 = load i32, i32* %26, align 4, !dbg !11744
  %28 = mul i32 %27, %25, !dbg !11745
  call void @llvm.dbg.value(metadata i32 %28, metadata !11728, metadata !DIExpression()), !dbg !11730
  %29 = icmp ugt i32 %22, %28, !dbg !11735
  br i1 %29, label %12, label %30, !dbg !11736, !llvm.loop !11746

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !11748
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !11730
  %34 = udiv i32 %32, %31, !dbg !11751
  %35 = add i32 %34, %33, !dbg !11752
  call void @llvm.dbg.value(metadata i32 %35, metadata !11729, metadata !DIExpression()), !dbg !11730
  br label %36, !dbg !11753

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !11754
  call void @llvm.dbg.value(metadata i32 %37, metadata !11729, metadata !DIExpression()), !dbg !11730
  ret i32 %37, !dbg !11755
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !11756 {
  ret i32 134217728, !dbg !11757
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !11758 {
  ret i32 3932160, !dbg !11759
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !11760 {
  ret i32 0, !dbg !11761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !11762 {
  ret i32 262144, !dbg !11763
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !11764 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11766, metadata !DIExpression()), !dbg !11768
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !11769
  call void @llvm.dbg.value(metadata i32 %2, metadata !11767, metadata !DIExpression()), !dbg !11768
  %3 = icmp eq i32 %2, 0, !dbg !11770
  br i1 %3, label %5, label %4, !dbg !11772

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !11773
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.165, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.166, i32 0, i32 0)) #23, !dbg !11773
  unreachable, !dbg !11773

5:                                                ; preds = %1
  ret void, !dbg !11778
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11779 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11783, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata i32 %1, metadata !11784, metadata !DIExpression()), !dbg !11796
  call void @llvm.dbg.value(metadata i8* %2, metadata !11785, metadata !DIExpression()), !dbg !11796
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11797
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11797
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11786, metadata !DIExpression()), !dbg !11798
  %7 = bitcast i32* %5 to i8*, !dbg !11799
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11799
  call void @llvm.dbg.value(metadata i32* %5, metadata !11795, metadata !DIExpression(DW_OP_deref)), !dbg !11796
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11800
  call void @llvm.va_start(i8* nonnull %6), !dbg !11801
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11802
  %10 = load i32, i32* %9, align 4, !dbg !11802
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11802
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11802
  call void @llvm.va_end(i8* nonnull %6), !dbg !11803
  %13 = load i32, i32* %5, align 4, !dbg !11804
  call void @llvm.dbg.value(metadata i32 %13, metadata !11795, metadata !DIExpression()), !dbg !11796
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11805
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11806
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11806
  ret void, !dbg !11806
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11807 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11809, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata i32 %1, metadata !11810, metadata !DIExpression()), !dbg !11814
  call void @llvm.dbg.value(metadata i8* %2, metadata !11811, metadata !DIExpression()), !dbg !11814
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11815
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11815
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11812, metadata !DIExpression()), !dbg !11816
  %7 = bitcast i32* %5 to i8*, !dbg !11817
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11817
  call void @llvm.dbg.value(metadata i32* %5, metadata !11813, metadata !DIExpression(DW_OP_deref)), !dbg !11814
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11818
  call void @llvm.va_start(i8* nonnull %6), !dbg !11819
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11820
  %10 = load i32, i32* %9, align 4, !dbg !11820
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11820
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11820
  call void @llvm.va_end(i8* nonnull %6), !dbg !11821
  %13 = load i32, i32* %5, align 4, !dbg !11822
  call void @llvm.dbg.value(metadata i32 %13, metadata !11813, metadata !DIExpression()), !dbg !11814
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11823
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11824
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11824
  ret void, !dbg !11824
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !11825 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !11827, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata i32 %1, metadata !11828, metadata !DIExpression()), !dbg !11832
  call void @llvm.dbg.value(metadata i8* %2, metadata !11829, metadata !DIExpression()), !dbg !11832
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !11833
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11833
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !11830, metadata !DIExpression()), !dbg !11834
  %7 = bitcast i32* %5 to i8*, !dbg !11835
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11835
  call void @llvm.dbg.value(metadata i32* %5, metadata !11831, metadata !DIExpression(DW_OP_deref)), !dbg !11832
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !11836
  call void @llvm.va_start(i8* nonnull %6), !dbg !11837
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !11838
  %10 = load i32, i32* %9, align 4, !dbg !11838
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !11838
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !11838
  call void @llvm.va_end(i8* nonnull %6), !dbg !11839
  %13 = load i32, i32* %5, align 4, !dbg !11840
  call void @llvm.dbg.value(metadata i32 %13, metadata !11831, metadata !DIExpression()), !dbg !11832
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !11841
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11842
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11842
  ret void, !dbg !11842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !11843 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11849, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %1, metadata !11850, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i8* %2, metadata !11851, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i8* %3, metadata !11852, metadata !DIExpression()), !dbg !11854
  call void @llvm.dbg.value(metadata i32 %4, metadata !11853, metadata !DIExpression()), !dbg !11854
  ret void, !dbg !11855
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !11856 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11858, metadata !DIExpression()), !dbg !11860
  %2 = shl i32 %0, 20, !dbg !11861
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11862
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !11863
  store volatile i32 %2, i32* %4, align 4, !dbg !11864
  %5 = load volatile i32, i32* %4, align 4, !dbg !11865
  %6 = or i32 %5, 65536, !dbg !11866
  store volatile i32 %6, i32* %4, align 4, !dbg !11867
  br label %7, !dbg !11868

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !11869
  %9 = and i32 %8, 1, !dbg !11870
  %10 = icmp eq i32 %9, 0, !dbg !11871
  br i1 %10, label %7, label %11, !dbg !11868, !llvm.loop !11872

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !11874
  %13 = lshr i32 %12, 8, !dbg !11875
  %14 = and i32 %13, 255, !dbg !11875
  call void @llvm.dbg.value(metadata i32 %14, metadata !11859, metadata !DIExpression()), !dbg !11860
  ret i32 %14, !dbg !11876
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !11877 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11881, metadata !DIExpression()), !dbg !11883
  call void @llvm.dbg.value(metadata i32 %1, metadata !11882, metadata !DIExpression()), !dbg !11883
  call void @llvm.dbg.value(metadata i32 %1, metadata !11882, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !11883
  %3 = shl i32 %1, 24, !dbg !11884
  %4 = shl i32 %0, 20, !dbg !11885
  %5 = or i32 %4, %3, !dbg !11886
  %6 = or i32 %5, 131072, !dbg !11886
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11887
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !11888
  store volatile i32 %6, i32* %8, align 4, !dbg !11889
  %9 = load volatile i32, i32* %8, align 4, !dbg !11890
  %10 = or i32 %9, 65536, !dbg !11891
  store volatile i32 %10, i32* %8, align 4, !dbg !11892
  br label %11, !dbg !11893

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !11894
  %13 = and i32 %12, 1, !dbg !11895
  %14 = icmp eq i32 %13, 0, !dbg !11896
  br i1 %14, label %11, label %15, !dbg !11893, !llvm.loop !11897

15:                                               ; preds = %11
  ret void, !dbg !11899
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !11900 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !11901
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !11902
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !11903
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !11904
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !11905
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !11906
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !11907
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !11908
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !11909
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !11910
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !11911
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !11912
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !11913
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !11914
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !11915
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !11916
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !11917
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !11918
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !11919
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !11920
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !11921
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !11922
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !11923
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !11924
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !11925
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !11926
  ret void, !dbg !11927
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !11928 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11931
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !11932
  store volatile i32 21553, i32* %2, align 4, !dbg !11933
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !11934
  store volatile i32 20489, i32* %3, align 4, !dbg !11935
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !11936
  store volatile i32 20550, i32* %4, align 4, !dbg !11937
  ret i32 0, !dbg !11938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !11939 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !11943, metadata !DIExpression()), !dbg !11947
  call void @llvm.dbg.value(metadata i32 0, metadata !11941, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.value(metadata i32 16384, metadata !11942, metadata !DIExpression()), !dbg !11948
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11949
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !11950
  store volatile i32 0, i32* %2, align 4, !dbg !11951
  call void @llvm.dbg.value(metadata i32 0, metadata !11945, metadata !DIExpression()), !dbg !11948
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !11945, metadata !DIExpression()), !dbg !11948
  br label %5, !dbg !11952

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11945, metadata !DIExpression()), !dbg !11948
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !11944, metadata !DIExpression()), !dbg !11948
  br label %8, !dbg !11954

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11944, metadata !DIExpression()), !dbg !11948
  call void @llvm.dbg.value(metadata i32 0, metadata !11946, metadata !DIExpression()), !dbg !11948
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !11958

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !11946, metadata !DIExpression()), !dbg !11948
  %12 = icmp eq i32 %30, 2, !dbg !11962
  br i1 %12, label %31, label %13, !dbg !11958, !llvm.loop !11964

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11946, metadata !DIExpression()), !dbg !11948
  store volatile i32 0, i32* %2, align 4, !dbg !11966
  store volatile i32 63, i32* %3, align 4, !dbg !11968
  %15 = load i32, i32* %10, align 4, !dbg !11969
  %16 = shl i32 %15, 16, !dbg !11970
  %17 = shl nuw nsw i32 %14, 13, !dbg !11971
  %18 = or i32 %17, %7, !dbg !11972
  %19 = or i32 %18, %16, !dbg !11973
  store volatile i32 %19, i32* %2, align 4, !dbg !11974
  %20 = load volatile i32, i32* %2, align 4, !dbg !11975
  %21 = or i32 %20, 805, !dbg !11975
  store volatile i32 %21, i32* %2, align 4, !dbg !11975
  br label %22, !dbg !11976

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !11977
  %24 = and i32 %23, 2, !dbg !11978
  %25 = icmp eq i32 %24, 0, !dbg !11979
  br i1 %25, label %22, label %26, !dbg !11976, !llvm.loop !11980

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !11982
  %28 = and i32 %27, 1, !dbg !11984
  %29 = icmp eq i32 %28, 0, !dbg !11985
  %30 = add nuw nsw i32 %14, 1, !dbg !11986
  call void @llvm.dbg.value(metadata i32 %30, metadata !11946, metadata !DIExpression()), !dbg !11948
  br i1 %29, label %11, label %37, !dbg !11987

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !11988
  call void @llvm.dbg.value(metadata i32 %32, metadata !11944, metadata !DIExpression()), !dbg !11948
  %33 = icmp eq i32 %32, 2, !dbg !11989
  br i1 %33, label %34, label %8, !dbg !11954, !llvm.loop !11990

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !11992
  call void @llvm.dbg.value(metadata i32 %35, metadata !11945, metadata !DIExpression()), !dbg !11948
  %36 = icmp eq i32 %35, 2, !dbg !11993
  br i1 %36, label %37, label %5, !dbg !11952, !llvm.loop !11994

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !11948
  store volatile i32 0, i32* %2, align 4, !dbg !11948
  ret i32 %38, !dbg !11996
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !11997 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !11998
  %2 = icmp ne i32 %1, 0, !dbg !12000
  %3 = sext i1 %2 to i32, !dbg !12001
  ret i32 %3, !dbg !12002
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !12003 {
  call void @llvm.dbg.value(metadata i32 31, metadata !12005, metadata !DIExpression()), !dbg !12007
  call void @llvm.dbg.value(metadata i32 0, metadata !12006, metadata !DIExpression()), !dbg !12007
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12008
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !12009
  store volatile i32 0, i32* %2, align 4, !dbg !12010
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12011
  store volatile i32 0, i32* %3, align 4, !dbg !12012
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12013
  store volatile i32 0, i32* %4, align 4, !dbg !12014
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !12015
  store volatile i32 0, i32* %5, align 4, !dbg !12016
  call void @llvm.dbg.value(metadata i32 31, metadata !12005, metadata !DIExpression()), !dbg !12007
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12017
  store volatile i32 522133279, i32* %6, align 4, !dbg !12021
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12022
  store volatile i32 522133279, i32* %7, align 4, !dbg !12023
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !12024
  %9 = icmp eq i32 %8, 0, !dbg !12026
  call void @llvm.dbg.value(metadata i32 31, metadata !12005, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12007
  br i1 %9, label %36, label %10, !dbg !12027

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !12005, metadata !DIExpression()), !dbg !12007
  call void @llvm.dbg.value(metadata i32 %11, metadata !12005, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12007
  call void @llvm.dbg.value(metadata i32 %11, metadata !12005, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12007
  %12 = icmp eq i32 %11, 0, !dbg !12028
  br i1 %12, label %26, label %13, !dbg !12029, !llvm.loop !12030

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !12032
  call void @llvm.dbg.value(metadata i32 %14, metadata !12005, metadata !DIExpression()), !dbg !12007
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12033
  %16 = shl i32 %14, 24, !dbg !12034
  %17 = shl i32 %14, 16, !dbg !12035
  %18 = shl i32 %14, 8, !dbg !12036
  %19 = or i32 %17, %14, !dbg !12037
  %20 = or i32 %19, %16, !dbg !12038
  %21 = or i32 %20, %18, !dbg !12039
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !12017
  store volatile i32 %21, i32* %22, align 4, !dbg !12021
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !12022
  store volatile i32 %21, i32* %23, align 4, !dbg !12023
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !12024
  %25 = icmp eq i32 %24, 0, !dbg !12026
  call void @llvm.dbg.value(metadata i32 %14, metadata !12005, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !12007
  br i1 %25, label %36, label %10, !dbg !12027

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !12006, metadata !DIExpression()), !dbg !12007
  %28 = shl nuw nsw i32 %27, 16, !dbg !12040
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12046
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !12047
  store volatile i32 %28, i32* %30, align 4, !dbg !12048
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !12049
  %32 = icmp eq i32 %31, 0, !dbg !12051
  call void @llvm.dbg.value(metadata i32 %27, metadata !12006, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12007
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !12052
  call void @llvm.dbg.value(metadata i32 %33, metadata !12006, metadata !DIExpression()), !dbg !12007
  call void @llvm.dbg.value(metadata i32 %27, metadata !12006, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !12007
  br i1 %35, label %36, label %26, !dbg !12052, !llvm.loop !12053

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !12056
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !12057 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !12058
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12059
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !12060
  store volatile i32 1, i32* %2, align 4, !dbg !12061
  br label %3, !dbg !12062

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !12063
  %5 = and i32 %4, 2, !dbg !12064
  %6 = icmp eq i32 %5, 0, !dbg !12064
  br i1 %6, label %3, label %7, !dbg !12062, !llvm.loop !12065

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !12067
  br label %8, !dbg !12068

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !12069
  %10 = and i32 %9, 2, !dbg !12070
  %11 = icmp eq i32 %10, 0, !dbg !12070
  br i1 %11, label %12, label %8, !dbg !12068, !llvm.loop !12071

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !12073
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !12074
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !12075

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !12076
  %17 = and i32 %16, 1, !dbg !12077
  %18 = icmp eq i32 %17, 0, !dbg !12078
  br i1 %18, label %15, label %19, !dbg !12075, !llvm.loop !12079

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !12081
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !12082
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !12083

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !12084
  %24 = and i32 %23, 1, !dbg !12085
  %25 = icmp eq i32 %24, 0, !dbg !12086
  br i1 %25, label %22, label %26, !dbg !12083, !llvm.loop !12087

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !12089
  %28 = icmp eq i32 %27, 9507, !dbg !12091
  br i1 %28, label %29, label %37, !dbg !12092

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !12093
  %31 = and i32 %30, 15, !dbg !12096
  %32 = icmp eq i32 %31, 2, !dbg !12097
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !12098
  %34 = and i32 %33, -128, !dbg !12098
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !12098
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !12098
  br label %37, !dbg !12099

37:                                               ; preds = %29, %26
  ret void, !dbg !12099
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !12100 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !12103
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !12104
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !12105
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !12106
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !12107
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !12108
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !12109
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !12110
  ret i8 0, !dbg !12111
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !12112 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !12113
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12114
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !12115
  store volatile i32 %1, i32* %3, align 4, !dbg !12116
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !12117
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !12118
  store volatile i32 %4, i32* %5, align 4, !dbg !12119
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !12120
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !12121
  store volatile i32 %6, i32* %7, align 4, !dbg !12122
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !12123
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !12124
  store volatile i32 %8, i32* %9, align 4, !dbg !12125
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !12126
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !12127
  store volatile i32 %10, i32* %11, align 4, !dbg !12128
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !12129
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !12130
  store volatile i32 %12, i32* %13, align 4, !dbg !12131
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !12132
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !12133
  store volatile i32 %14, i32* %15, align 4, !dbg !12134
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !12135
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !12136
  store volatile i32 %16, i32* %17, align 4, !dbg !12137
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !12138
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !12139
  store volatile i32 %18, i32* %19, align 4, !dbg !12140
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !12141
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !12142
  store volatile i32 %20, i32* %21, align 4, !dbg !12143
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !12144
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !12145
  store volatile i32 %22, i32* %23, align 4, !dbg !12146
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !12147
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !12148
  store volatile i32 %24, i32* %25, align 4, !dbg !12149
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !12150
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !12151
  store volatile i32 %26, i32* %27, align 4, !dbg !12152
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !12153
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12154
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !12155
  store volatile i32 806289408, i32* %29, align 4, !dbg !12156
  br label %30, !dbg !12157

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !12158
  %32 = and i32 %31, 128, !dbg !12159
  %33 = icmp eq i32 %32, 0, !dbg !12159
  br i1 %33, label %30, label %34, !dbg !12157, !llvm.loop !12160

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !12162
  br label %35, !dbg !12163

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !12164
  %37 = and i32 %36, 128, !dbg !12165
  %38 = icmp eq i32 %37, 0, !dbg !12165
  br i1 %38, label %39, label %35, !dbg !12163, !llvm.loop !12166

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !12168
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !12169
  ret i8 0, !dbg !12170
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !12171 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12172
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12173
  %3 = load volatile i32, i32* %2, align 4, !dbg !12173
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !12174
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !12175
  %5 = load volatile i32, i32* %4, align 4, !dbg !12175
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !12176
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !12177
  %7 = load volatile i32, i32* %6, align 4, !dbg !12177
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !12178
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12179
  %9 = load volatile i32, i32* %8, align 4, !dbg !12179
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !12180
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12181
  %11 = load volatile i32, i32* %10, align 4, !dbg !12181
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !12182
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !12183
  %13 = load volatile i32, i32* %12, align 4, !dbg !12183
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !12184
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !12185
  %15 = load volatile i32, i32* %14, align 4, !dbg !12185
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !12186
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !12187
  %17 = load volatile i32, i32* %16, align 4, !dbg !12187
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !12188
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !12189
  %19 = load volatile i32, i32* %18, align 4, !dbg !12189
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !12190
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !12191
  %21 = load volatile i32, i32* %20, align 4, !dbg !12191
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !12192
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !12193
  %23 = load volatile i32, i32* %22, align 4, !dbg !12193
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !12194
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12195
  %25 = load volatile i32, i32* %24, align 4, !dbg !12195
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !12196
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !12197
  %27 = load volatile i32, i32* %26, align 4, !dbg !12197
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !12198
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !12199
  %29 = load volatile i32, i32* %28, align 4, !dbg !12199
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !12200
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !12201
  %31 = load volatile i32, i32* %30, align 4, !dbg !12201
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !12202
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !12203
  %33 = load volatile i32, i32* %32, align 4, !dbg !12203
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !12204
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !12205
  %35 = load volatile i32, i32* %34, align 4, !dbg !12205
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !12206
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !12207
  %37 = load volatile i32, i32* %36, align 4, !dbg !12207
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !12208
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !12209
  %39 = load volatile i32, i32* %38, align 4, !dbg !12209
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !12210
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !12211
  %41 = load volatile i32, i32* %40, align 4, !dbg !12211
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !12212
  ret void, !dbg !12213
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !12214 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !12215

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !12216
  %5 = and i32 %4, 17, !dbg !12217
  %6 = icmp eq i32 %5, 17, !dbg !12218
  br i1 %6, label %7, label %3, !dbg !12215, !llvm.loop !12219

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !12221
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !12222
  store volatile i32 %8, i32* %9, align 4, !dbg !12223
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !12224
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !12225
  store volatile i32 %10, i32* %11, align 4, !dbg !12226
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !12227
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !12228
  store volatile i32 %12, i32* %13, align 4, !dbg !12229
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !12230
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !12231
  store volatile i32 %14, i32* %15, align 4, !dbg !12232
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !12233
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !12234
  store volatile i32 %16, i32* %17, align 4, !dbg !12235
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !12236
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !12237
  store volatile i32 %18, i32* %19, align 4, !dbg !12238
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !12239
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !12240
  store volatile i32 %20, i32* %21, align 4, !dbg !12241
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !12242
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !12243
  store volatile i32 %22, i32* %23, align 4, !dbg !12244
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !12245
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12246
  store volatile i32 %24, i32* %25, align 4, !dbg !12247
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !12248
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !12249
  store volatile i32 %26, i32* %27, align 4, !dbg !12250
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !12251
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !12252
  store volatile i32 %28, i32* %29, align 4, !dbg !12253
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !12254
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !12255
  store volatile i32 %30, i32* %31, align 4, !dbg !12256
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !12257
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !12258
  store volatile i32 %32, i32* %33, align 4, !dbg !12259
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !12260
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !12261
  store volatile i32 %34, i32* %35, align 4, !dbg !12262
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !12263
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !12264
  store volatile i32 %36, i32* %37, align 4, !dbg !12265
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !12266
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !12267
  store volatile i32 %38, i32* %39, align 4, !dbg !12268
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !12269
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !12270
  store volatile i32 %40, i32* %41, align 4, !dbg !12271
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !12272
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !12273
  store volatile i32 %42, i32* %43, align 4, !dbg !12274
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !12275
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !12276
  store volatile i32 %44, i32* %45, align 4, !dbg !12277
  ret void, !dbg !12278
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !12279 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12280
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12281
  %3 = load volatile i32, i32* %2, align 4, !dbg !12281
  %4 = and i32 %3, -2097185, !dbg !12282
  store volatile i32 %4, i32* %2, align 4, !dbg !12283
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !12284
  store volatile i32 1, i32* %5, align 4, !dbg !12285
  br label %6, !dbg !12286

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !12287
  %8 = and i32 %7, 2, !dbg !12288
  %9 = icmp eq i32 %8, 0, !dbg !12288
  br i1 %9, label %6, label %10, !dbg !12286, !llvm.loop !12289

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !12291
  br label %11, !dbg !12292

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !12293
  %13 = and i32 %12, 2, !dbg !12294
  %14 = icmp eq i32 %13, 0, !dbg !12294
  br i1 %14, label %15, label %11, !dbg !12292, !llvm.loop !12295

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !12297
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12298
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !12299
  store volatile i32 806289408, i32* %17, align 4, !dbg !12300
  br label %18, !dbg !12301

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !12302
  %20 = and i32 %19, 128, !dbg !12303
  %21 = icmp eq i32 %20, 0, !dbg !12303
  br i1 %21, label %18, label %22, !dbg !12301, !llvm.loop !12304

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !12306
  br label %23, !dbg !12307

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !12308
  %25 = and i32 %24, 128, !dbg !12309
  %26 = icmp eq i32 %25, 0, !dbg !12309
  br i1 %26, label %27, label %23, !dbg !12307, !llvm.loop !12310

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !12312
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !12313
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !12314
  store volatile i32 %28, i32* %29, align 4, !dbg !12315
  ret void, !dbg !12316
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !12317 {
  tail call void @EMI_Setting_Save() #21, !dbg !12318
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !12319

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !12320
  %5 = and i32 %4, 17, !dbg !12321
  %6 = icmp eq i32 %5, 17, !dbg !12322
  br i1 %6, label %7, label %3, !dbg !12319, !llvm.loop !12323

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !12325
  %9 = or i32 %8, 1792, !dbg !12326
  store volatile i32 %9, i32* %2, align 4, !dbg !12327
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !12328
  store volatile i32 -261685248, i32* %10, align 4, !dbg !12329
  br label %11, !dbg !12330

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !12331
  %13 = and i32 %12, 1, !dbg !12332
  %14 = icmp eq i32 %13, 0, !dbg !12333
  br i1 %14, label %11, label %15, !dbg !12330, !llvm.loop !12334

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !12336
  store volatile i32 0, i32* %16, align 4, !dbg !12337
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !12338

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !12339
  %20 = and i32 %19, 16, !dbg !12340
  %21 = icmp eq i32 %20, 0, !dbg !12340
  br i1 %21, label %18, label %22, !dbg !12338, !llvm.loop !12341

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !12343
  %24 = load volatile i32, i32* %23, align 4, !dbg !12343
  %25 = or i32 %24, 2097184, !dbg !12344
  store volatile i32 %25, i32* %23, align 4, !dbg !12345
  ret void, !dbg !12346
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !12347 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !12352, metadata !DIExpression()), !dbg !12354
  %3 = bitcast i32* %2 to i8*, !dbg !12355
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !12355
  call void @llvm.dbg.declare(metadata i32* %2, metadata !12353, metadata !DIExpression()), !dbg !12356
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !12357

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12358
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !12361
  store volatile i32 0, i32* %6, align 4, !dbg !12362
  store volatile i32 806289408, i32* %6, align 4, !dbg !12363
  br label %7, !dbg !12364

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !12365
  %9 = and i32 %8, 128, !dbg !12366
  %10 = icmp eq i32 %9, 0, !dbg !12366
  br i1 %10, label %7, label %11, !dbg !12364, !llvm.loop !12367

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !12369
  br label %12, !dbg !12370

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !12371
  %14 = and i32 %13, 128, !dbg !12372
  %15 = icmp eq i32 %14, 0, !dbg !12372
  br i1 %15, label %16, label %12, !dbg !12370, !llvm.loop !12373

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !12375
  store volatile i32 0, i32* %2, align 4, !dbg !12376
  %17 = load volatile i32, i32* %2, align 4, !dbg !12378
  %18 = icmp ult i32 %17, 255, !dbg !12380
  br i1 %18, label %19, label %25, !dbg !12381

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !12382
  %21 = add i32 %20, 1, !dbg !12382
  store volatile i32 %21, i32* %2, align 4, !dbg !12382
  %22 = load volatile i32, i32* %2, align 4, !dbg !12378
  %23 = icmp ult i32 %22, 255, !dbg !12380
  br i1 %23, label %19, label %25, !dbg !12381, !llvm.loop !12383

24:                                               ; preds = %1
  br label %25, !dbg !12385

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !12354
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !12388
  ret i32 %26, !dbg !12388
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !12389 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12390
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12391
  %3 = load volatile i32, i32* %2, align 4, !dbg !12391
  %4 = or i32 %3, 1792, !dbg !12392
  store volatile i32 %4, i32* %2, align 4, !dbg !12393
  ret void, !dbg !12394
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !12395 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !12396
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !12397
  %3 = load volatile i32, i32* %2, align 4, !dbg !12397
  %4 = and i32 %3, -1793, !dbg !12398
  store volatile i32 %4, i32* %2, align 4, !dbg !12399
  ret void, !dbg !12400
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !12401 {
  ret i1 false, !dbg !12402
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !12403 {
  ret i1 false, !dbg !12404
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !12405 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !12406
  ret void, !dbg !12409
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !12410 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !12411
  ret void, !dbg !12414
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !12415 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !12416
  ret void, !dbg !12419
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !12420 {
  tail call void @peri_26m_dcxo() #20, !dbg !12421
  ret void, !dbg !12424
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !12425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12429, metadata !DIExpression()), !dbg !12430
  %2 = trunc i32 %0 to i8, !dbg !12431
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #20, !dbg !12432
  ret i32 %0, !dbg !12433
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !12434 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !12435
  tail call void @SystemCoreClockUpdate() #20, !dbg !12436
  tail call fastcc void @prvSetupHardware() #21, !dbg !12437
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !12438, !srcloc !12441
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !12442, !srcloc !12445
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.179, i32 0, i32 0)) #20, !dbg !12446
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.180, i32 0, i32 0)) #20, !dbg !12447
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.179, i32 0, i32 0)) #20, !dbg !12448
  tail call fastcc void @gdma_transfer_data_interrupt() #21, !dbg !12449
  br label %4, !dbg !12450

4:                                                ; preds = %0, %4
  br label %4, !dbg !12450, !llvm.loop !12451
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !12453 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !12454
  ret void, !dbg !12455
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !12456 {
  tail call fastcc void @plain_log_uart_init() #21, !dbg !12457
  %1 = tail call i32 @hal_flash_init() #20, !dbg !12458
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !12459
  ret void, !dbg !12460
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @gdma_transfer_data_interrupt() unnamed_addr #0 !dbg !12461 {
  call void @llvm.dbg.value(metadata i32 0, metadata !12463, metadata !DIExpression()), !dbg !12464
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.181, i32 0, i32 0)) #20, !dbg !12465
  call void @llvm.dbg.value(metadata i32 0, metadata !12463, metadata !DIExpression()), !dbg !12464
  br label %2, !dbg !12466

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %6, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !12463, metadata !DIExpression()), !dbg !12464
  %4 = trunc i32 %3 to i8, !dbg !12468
  %5 = getelementptr inbounds [64 x i8], [64 x i8]* @source_data, i32 0, i32 %3, !dbg !12471
  store i8 %4, i8* %5, align 1, !dbg !12472
  %6 = add nuw nsw i32 %3, 1, !dbg !12473
  call void @llvm.dbg.value(metadata i32 %6, metadata !12463, metadata !DIExpression()), !dbg !12464
  %7 = icmp eq i32 %6, 64, !dbg !12474
  br i1 %7, label %8, label %2, !dbg !12466, !llvm.loop !12475

8:                                                ; preds = %2, %8
  %9 = phi i32 [ %11, %8 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !12463, metadata !DIExpression()), !dbg !12464
  %10 = getelementptr inbounds [64 x i8], [64 x i8]* @destination_data, i32 0, i32 %9, !dbg !12477
  store i8 90, i8* %10, align 1, !dbg !12481
  %11 = add nuw nsw i32 %9, 1, !dbg !12482
  call void @llvm.dbg.value(metadata i32 %11, metadata !12463, metadata !DIExpression()), !dbg !12464
  %12 = icmp eq i32 %11, 64, !dbg !12483
  br i1 %12, label %13, label %8, !dbg !12484, !llvm.loop !12485

13:                                               ; preds = %8
  %14 = tail call i32 @hal_gdma_init(i32 noundef 0) #20, !dbg !12487
  %15 = tail call i32 @hal_gdma_register_callback(i32 noundef 0, void (i32, i8*)* noundef nonnull @gdma_callback, i8* noundef nonnull inttoptr (i32 1 to i8*)) #20, !dbg !12488
  %16 = tail call i32 @hal_gdma_start_interrupt(i32 noundef 0, i32 noundef ptrtoint ([64 x i8]* @destination_data to i32), i32 noundef ptrtoint ([64 x i8]* @source_data to i32), i32 noundef 64) #20, !dbg !12489
  ret void, !dbg !12490
}

; Function Attrs: noinline nounwind optsize
define internal void @gdma_callback(i32 noundef %0, i8* nocapture noundef readnone %1) #0 !dbg !12491 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12493, metadata !DIExpression()), !dbg !12496
  call void @llvm.dbg.value(metadata i8* %1, metadata !12494, metadata !DIExpression()), !dbg !12496
  call void @llvm.dbg.value(metadata i32 0, metadata !12495, metadata !DIExpression()), !dbg !12496
  %3 = tail call i32 @hal_gdma_stop(i32 noundef 0) #20, !dbg !12497
  %4 = tail call i32 @hal_gdma_deinit(i32 noundef 0) #20, !dbg !12498
  call void @llvm.dbg.value(metadata i32 0, metadata !12495, metadata !DIExpression()), !dbg !12496
  br label %5, !dbg !12499

5:                                                ; preds = %2, %14
  %6 = phi i32 [ 0, %2 ], [ %15, %14 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !12495, metadata !DIExpression()), !dbg !12496
  %7 = getelementptr inbounds [64 x i8], [64 x i8]* @destination_data, i32 0, i32 %6, !dbg !12501
  %8 = load i8, i8* %7, align 1, !dbg !12501
  %9 = getelementptr inbounds [64 x i8], [64 x i8]* @source_data, i32 0, i32 %6, !dbg !12505
  %10 = load i8, i8* %9, align 1, !dbg !12505
  %11 = icmp eq i8 %8, %10, !dbg !12506
  br i1 %11, label %14, label %12, !dbg !12507

12:                                               ; preds = %5
  %13 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.3.182, i32 0, i32 0)) #20, !dbg !12508
  br label %14, !dbg !12510

14:                                               ; preds = %5, %12
  %15 = add nuw nsw i32 %6, 1, !dbg !12511
  call void @llvm.dbg.value(metadata i32 %15, metadata !12495, metadata !DIExpression()), !dbg !12496
  %16 = icmp eq i32 %15, 64, !dbg !12512
  br i1 %16, label %17, label %5, !dbg !12499, !llvm.loop !12513

17:                                               ; preds = %14
  %18 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.183, i32 0, i32 0)) #20, !dbg !12515
  %19 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5.184, i32 0, i32 0)) #20, !dbg !12516
  ret void, !dbg !12517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !12518 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !12528
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !12528
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !12520, metadata !DIExpression()), !dbg !12529
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !12530
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !12531
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !12532
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !12533
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !12534
  store i32 9, i32* %7, align 4, !dbg !12535
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !12536
  store i32 3, i32* %8, align 4, !dbg !12537
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !12538
  store i32 0, i32* %9, align 4, !dbg !12539
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !12540
  store i32 0, i32* %10, align 4, !dbg !12541
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !12542
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !12543
  ret void, !dbg !12543
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !12544 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12546, metadata !DIExpression()), !dbg !12547
  ret i32 0, !dbg !12548
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !12549 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12599, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !12600, metadata !DIExpression()), !dbg !12601
  ret i32 0, !dbg !12602
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !12603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12605, metadata !DIExpression()), !dbg !12606
  ret i32 1, !dbg !12607
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12608 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12612, metadata !DIExpression()), !dbg !12615
  call void @llvm.dbg.value(metadata i32 %1, metadata !12613, metadata !DIExpression()), !dbg !12615
  call void @llvm.dbg.value(metadata i32 %2, metadata !12614, metadata !DIExpression()), !dbg !12615
  ret i32 0, !dbg !12616
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12617 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !12621, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i32 %1, metadata !12622, metadata !DIExpression()), !dbg !12624
  call void @llvm.dbg.value(metadata i32 %2, metadata !12623, metadata !DIExpression()), !dbg !12624
  ret i32 -1, !dbg !12625
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !12626 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12630, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata i8* %1, metadata !12631, metadata !DIExpression()), !dbg !12633
  call void @llvm.dbg.value(metadata i32 %2, metadata !12632, metadata !DIExpression()), !dbg !12633
  ret i32 0, !dbg !12634
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !12635 {
  ret i32 1, !dbg !12636
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !12637 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12641, metadata !DIExpression()), !dbg !12643
  call void @llvm.dbg.value(metadata i32 %1, metadata !12642, metadata !DIExpression()), !dbg !12643
  ret i32 -1, !dbg !12644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !12645 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12647, metadata !DIExpression()), !dbg !12648
  ret i32 -1, !dbg !12649
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2403 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2601, metadata !DIExpression()), !dbg !12650
  call void @llvm.dbg.value(metadata i32 %1, metadata !2602, metadata !DIExpression()), !dbg !12650
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !12651, !srcloc !12652
  call void @llvm.dbg.value(metadata i8* %3, metadata !2604, metadata !DIExpression()), !dbg !12650
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !12653
  %5 = icmp eq i8* %4, null, !dbg !12655
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !12656
  call void @llvm.dbg.value(metadata i8* %6, metadata !2603, metadata !DIExpression()), !dbg !12650
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !12657
  %8 = icmp ult i8* %3, %7, !dbg !12659
  %9 = xor i1 %8, true, !dbg !12660
  %10 = or i1 %5, %9, !dbg !12660
  br i1 %10, label %11, label %13, !dbg !12660

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !12661
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !12660
  br label %13, !dbg !12660

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !12661
  ret i8* %14, !dbg !12660
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !12662 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12664, metadata !DIExpression()), !dbg !12668
  call void @llvm.dbg.value(metadata i8* %1, metadata !12665, metadata !DIExpression()), !dbg !12668
  call void @llvm.dbg.value(metadata i32 %2, metadata !12666, metadata !DIExpression()), !dbg !12668
  call void @llvm.dbg.value(metadata i32 0, metadata !12667, metadata !DIExpression()), !dbg !12668
  %4 = icmp sgt i32 %2, 0, !dbg !12669
  br i1 %4, label %5, label %14, !dbg !12672

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !12667, metadata !DIExpression()), !dbg !12668
  call void @llvm.dbg.value(metadata i8* %7, metadata !12665, metadata !DIExpression()), !dbg !12668
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !12673
  call void @llvm.dbg.value(metadata i8* %8, metadata !12665, metadata !DIExpression()), !dbg !12668
  %9 = load i8, i8* %7, align 1, !dbg !12675
  %10 = zext i8 %9 to i32, !dbg !12675
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !12676
  %12 = add nuw nsw i32 %6, 1, !dbg !12677
  call void @llvm.dbg.value(metadata i32 %12, metadata !12667, metadata !DIExpression()), !dbg !12668
  %13 = icmp eq i32 %12, %2, !dbg !12669
  br i1 %13, label %14, label %5, !dbg !12672, !llvm.loop !12678

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !12680
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !12681 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !12683, metadata !DIExpression()), !dbg !12685
  %2 = add i32 %0, -1, !dbg !12686
  %3 = icmp ugt i32 %2, 16777215, !dbg !12688
  br i1 %3, label %8, label %4, !dbg !12689

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12690
  call void @llvm.dbg.value(metadata i32 %5, metadata !12684, metadata !DIExpression()), !dbg !12685
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12691
  %7 = and i32 %6, -4, !dbg !12691
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12691
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !12692
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !12693
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !12694
  br label %8, !dbg !12695

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !12685
  ret i32 %9, !dbg !12696
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !12697 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !12698
  ret void, !dbg !12699
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !12700 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !12701
  ret i32 %1, !dbg !12702
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !12703 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !12706
  %2 = lshr i32 %1, 3, !dbg !12707
  %3 = and i32 %2, 15, !dbg !12707
  call void @llvm.dbg.value(metadata i32 %3, metadata !12705, metadata !DIExpression()), !dbg !12708
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !12709

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !12710

5:                                                ; preds = %0, %0
  br label %9, !dbg !12712

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !12713
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !12714
  br label %15, !dbg !12716

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !12713
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !12714
  %12 = and i32 %11, 1024, !dbg !12717
  %13 = icmp eq i32 %12, 0, !dbg !12717
  br i1 %13, label %15, label %14, !dbg !12716

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !12718
  br label %15, !dbg !12720

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !12721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !12722 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !12723
  %2 = or i32 %1, 15728640, !dbg !12723
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !12723
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !12724
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12725
  %4 = or i32 %3, 458752, !dbg !12725
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !12725
  ret void, !dbg !12726
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !12727 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !12728
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !12729
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !12730
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !12731
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !12732
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !12733
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !12734
  ret void, !dbg !12735
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !2729, !94, !345, !386, !2755, !618, !894, !2758, !1017, !1105, !2762, !1193, !1292, !1617, !2808, !1704, !1715, !2073, !2134, !2810, !2214, !2380, !2392, !2596, !2607, !2717}
!llvm.ident = !{!2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812, !2812}
!llvm.module.flags = !{!2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !94, file: !95, line: 48, type: !341, isLocal: false, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !263, globals: !278, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!96 = !{!97, !157, !162, !168, !245, !254, !259}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 1170, baseType: !18, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!147 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!148 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!149 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!150 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!151 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!152 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!153 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!154 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!155 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!156 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 82, baseType: !18, size: 32, elements: !159)
!158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!161 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !18, size: 32, elements: !163)
!163 = !{!164, !165, !166, !167}
!164 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!165 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!166 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!167 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!170 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!171 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!172 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!173 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!174 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!175 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!176 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!177 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!178 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!179 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!180 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!181 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!182 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!183 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!184 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!185 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!186 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!187 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!188 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!189 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!190 = !DIEnumerator(name: "KP_IRQn", value: 10)
!191 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!192 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!193 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!194 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!195 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!196 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!197 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!198 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!199 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!200 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!201 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!202 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!203 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!204 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!205 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!206 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!207 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!208 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!209 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!210 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!211 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!212 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!213 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!214 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!215 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!216 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!217 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!218 = !DIEnumerator(name: "SF_IRQn", value: 38)
!219 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!220 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!221 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!222 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!223 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!224 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!225 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!226 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!227 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!228 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!229 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!230 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!231 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!232 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!233 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!234 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!235 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!236 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!237 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!238 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!239 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!240 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!241 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!242 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!243 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!244 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 846, baseType: !18, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253}
!247 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!248 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!249 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!250 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!251 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!252 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!253 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 380, baseType: !18, size: 32, elements: !256)
!255 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!258 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 397, baseType: !18, size: 32, elements: !260)
!260 = !{!261, !262}
!261 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!262 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!263 = !{!61, !264, !88}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !267)
!267 = !{!268, !269, !270, !271, !273, !274, !275, !276, !277}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !266, file: !56, line: 1263, baseType: !60, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !266, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !266, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !266, file: !56, line: 1266, baseType: !272, size: 32, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !266, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !266, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !266, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !266, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !266, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!278 = !{!92, !279, !288, !294, !316, !339}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !94, file: !95, line: 49, type: !281, isLocal: false, isDefinition: true)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !283, file: !56, line: 1257, baseType: !272, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !283, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !283, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "flag", scope: !290, file: !95, line: 88, type: !91, isLocal: true, isDefinition: true)
!290 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !95, file: !95, line: 86, type: !291, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !{}
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !94, file: !95, line: 51, type: !296, isLocal: false, isDefinition: true)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !314)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !158, line: 116, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 111, size: 128, elements: !299)
!299 = !{!300, !302, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !298, file: !158, line: 112, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !255, line: 400, baseType: !259)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !298, file: !158, line: 113, baseType: !303, size: 64, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !158, line: 109, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 106, size: 64, elements: !305)
!305 = !{!306, !311}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !158, line: 107, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !255, line: 371, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !88}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !304, file: !158, line: 108, baseType: !88, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !298, file: !158, line: 114, baseType: !91, size: 8, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !298, file: !158, line: 115, baseType: !91, size: 8, offset: 104)
!314 = !{!315}
!315 = !DISubrange(count: 6)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !94, file: !95, line: 52, type: !318, isLocal: false, isDefinition: true)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !158, line: 134, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 125, size: 4256, elements: !320)
!320 = !{!321, !332, !333, !334, !335, !336, !337, !338}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !319, file: !158, line: 126, baseType: !322, size: 4096)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 4096, elements: !330)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !158, line: 123, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 118, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !324, file: !158, line: 119, baseType: !303, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !324, file: !158, line: 120, baseType: !61, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !324, file: !158, line: 121, baseType: !91, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !324, file: !158, line: 122, baseType: !91, size: 8, offset: 104)
!330 = !{!331}
!331 = !DISubrange(count: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !319, file: !158, line: 127, baseType: !61, size: 32, offset: 4096)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !319, file: !158, line: 128, baseType: !61, size: 32, offset: 4128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !319, file: !158, line: 129, baseType: !61, size: 32, offset: 4160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !319, file: !158, line: 130, baseType: !61, size: 32, offset: 4192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !319, file: !158, line: 131, baseType: !91, size: 8, offset: 4224)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !319, file: !158, line: 132, baseType: !91, size: 8, offset: 4232)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !319, file: !158, line: 133, baseType: !91, size: 8, offset: 4240)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !94, file: !95, line: 53, type: !61, isLocal: false, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !314)
!342 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "gdma_init_status", scope: !345, file: !346, line: 49, type: !379, isLocal: true, isDefinition: true)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !347, globals: !378, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gdma.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!347 = !{!348, !355, !359, !168, !364, !370, !374}
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !349, line: 192, baseType: !7, size: 32, elements: !350)
!349 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gdma.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!350 = !{!351, !352, !353, !354}
!351 = !DIEnumerator(name: "HAL_GDMA_STATUS_ERROR", value: -3)
!352 = !DIEnumerator(name: "HAL_GDMA_STATUS_ERROR_CHANNEL", value: -2)
!353 = !DIEnumerator(name: "HAL_GDMA_STATUS_INVALID_PARAMETER", value: -1)
!354 = !DIEnumerator(name: "HAL_GDMA_STATUS_OK", value: 0)
!355 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 915, baseType: !18, size: 32, elements: !356)
!356 = !{!357, !358}
!357 = !DIEnumerator(name: "HAL_GDMA_CHANNEL_0", value: 0)
!358 = !DIEnumerator(name: "HAL_GDMA_CHANNEL_MAX", value: 1)
!359 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 124, baseType: !18, size: 32, elements: !361)
!360 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!361 = !{!362, !363}
!362 = !DIEnumerator(name: "DMA_PD", value: 0)
!363 = !DIEnumerator(name: "DMA_AO", value: 1)
!364 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !365, line: 47, baseType: !18, size: 32, elements: !366)
!365 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!366 = !{!367, !368, !369}
!367 = !DIEnumerator(name: "GDMA_BYTE", value: 0)
!368 = !DIEnumerator(name: "GDMA_HALF_WORD", value: 1)
!369 = !DIEnumerator(name: "GDMA_WORD", value: 2)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !349, line: 201, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373}
!372 = !DIEnumerator(name: "HAL_GDMA_EVENT_TRANSACTION_ERROR", value: -1)
!373 = !DIEnumerator(name: "HAL_GDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!374 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !349, line: 208, baseType: !18, size: 32, elements: !375)
!375 = !{!376, !377}
!376 = !DIEnumerator(name: "HAL_GDMA_IDLE", value: 0)
!377 = !DIEnumerator(name: "HAL_GDMA_BUSY", value: 1)
!378 = !{!343}
!379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 8, elements: !76)
!380 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !381)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !382)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !383)
!383 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!384 = !DIGlobalVariableExpression(var: !385, expr: !DIExpression())
!385 = distinct !DIGlobalVariable(name: "gdma", scope: !386, file: !387, line: 46, type: !601, isLocal: false, isDefinition: true)
!386 = distinct !DICompileUnit(language: DW_LANG_C99, file: !387, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !388, retainedTypes: !455, globals: !456, splitDebugInlining: false, nameTableKind: None)
!387 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_pdma_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!388 = !{!370, !359, !389, !97, !396, !402, !168, !412, !417, !423, !427, !431, !437, !451}
!389 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !390, line: 101, baseType: !7, size: 32, elements: !391)
!390 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!391 = !{!392, !393, !394, !395}
!392 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!393 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!394 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!395 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!396 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 166, baseType: !7, size: 32, elements: !397)
!397 = !{!398, !399, !400, !401}
!398 = !DIEnumerator(name: "PDMA_ERROR", value: -3)
!399 = !DIEnumerator(name: "PDMA_ERROR_CHANNEL", value: -2)
!400 = !DIEnumerator(name: "PDMA_INVALID_PARAMETER", value: -1)
!401 = !DIEnumerator(name: "PDMA_OK", value: 0)
!402 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 137, baseType: !18, size: 32, elements: !403)
!403 = !{!404, !405, !406, !407, !408, !409, !410, !411}
!404 = !DIEnumerator(name: "PDMA_START_CHANNEL", value: 1)
!405 = !DIEnumerator(name: "PDMA_MSDC1", value: 1)
!406 = !DIEnumerator(name: "PDMA_MSDC2", value: 2)
!407 = !DIEnumerator(name: "PDMA_I2C0_TX", value: 3)
!408 = !DIEnumerator(name: "PDMA_I2C0_RX", value: 4)
!409 = !DIEnumerator(name: "PDMA_I2C1_TX", value: 5)
!410 = !DIEnumerator(name: "PDMA_I2C1_RX", value: 6)
!411 = !DIEnumerator(name: "PDMA_END_CHANNEL", value: 7)
!412 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 151, baseType: !18, size: 32, elements: !413)
!413 = !{!414, !415, !416}
!414 = !DIEnumerator(name: "PDMA_BYTE", value: 0)
!415 = !DIEnumerator(name: "PDMA_HALF_WORD", value: 1)
!416 = !DIEnumerator(name: "PDMA_WORD", value: 2)
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 180, baseType: !18, size: 32, elements: !418)
!418 = !{!419, !420, !421, !422}
!419 = !DIEnumerator(name: "PDMA_TX", value: 0)
!420 = !DIEnumerator(name: "PDMA_RX", value: 1)
!421 = !DIEnumerator(name: "PDMA_TX_RINGBUFF", value: 2)
!422 = !DIEnumerator(name: "PDMA_RX_RINGBUFF", value: 3)
!423 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 174, baseType: !18, size: 32, elements: !424)
!424 = !{!425, !426}
!425 = !DIEnumerator(name: "PDMA_IDLE", value: 0)
!426 = !DIEnumerator(name: "PDMA_BUSY", value: 1)
!427 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 159, baseType: !7, size: 32, elements: !428)
!428 = !{!429, !430}
!429 = !DIEnumerator(name: "PDMA_EVENT_TRANSACTION_ERROR", value: -1)
!430 = !DIEnumerator(name: "PDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!431 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 206, baseType: !7, size: 32, elements: !432)
!432 = !{!433, !434, !435, !436}
!433 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!434 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!435 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!436 = !DIEnumerator(name: "VDMA_OK", value: 0)
!437 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 189, baseType: !18, size: 32, elements: !438)
!438 = !{!439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450}
!439 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!440 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!441 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!442 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!443 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!444 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!445 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!446 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!447 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!448 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!449 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!450 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!451 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !360, line: 222, baseType: !7, size: 32, elements: !452)
!452 = !{!453, !454}
!453 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!454 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!455 = !{!88}
!456 = !{!384, !457, !465, !483, !491, !494, !519, !527, !535, !538, !551, !575, !580, !588, !593}
!457 = !DIGlobalVariableExpression(var: !458, expr: !DIExpression())
!458 = distinct !DIGlobalVariable(name: "gdma_global", scope: !386, file: !387, line: 49, type: !459, isLocal: false, isDefinition: true)
!459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 32, elements: !76)
!460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 32)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "GDMA_REGISTER_GLOBAL_T", file: !56, line: 843, baseType: !462)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 841, size: 32, elements: !463)
!463 = !{!464}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_GLBSTA", scope: !462, file: !56, line: 842, baseType: !60, size: 32)
!465 = !DIGlobalVariableExpression(var: !466, expr: !DIExpression())
!466 = distinct !DIGlobalVariable(name: "pdma", scope: !386, file: !387, line: 52, type: !467, isLocal: false, isDefinition: true)
!467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 192, elements: !314)
!468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 32)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "PDMA_REGISTER_T", file: !56, line: 859, baseType: !470)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 848, size: 320, elements: !471)
!471 = !{!472, !473, !474, !475, !476, !477, !478, !479, !480, !482}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_WPPT", scope: !470, file: !56, line: 849, baseType: !60, size: 32)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_WPTO", scope: !470, file: !56, line: 850, baseType: !60, size: 32, offset: 32)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_COUNT", scope: !470, file: !56, line: 851, baseType: !60, size: 32, offset: 64)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_CON", scope: !470, file: !56, line: 852, baseType: !60, size: 32, offset: 96)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_START", scope: !470, file: !56, line: 853, baseType: !60, size: 32, offset: 128)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_INTSTA", scope: !470, file: !56, line: 854, baseType: !60, size: 32, offset: 160)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_ACKINT", scope: !470, file: !56, line: 855, baseType: !60, size: 32, offset: 192)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_RLCT", scope: !470, file: !56, line: 856, baseType: !272, size: 32, offset: 224)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "DUMMY_OFFSET", scope: !470, file: !56, line: 857, baseType: !481, size: 32, offset: 256)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 32, elements: !76)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_PGMADDR", scope: !470, file: !56, line: 858, baseType: !60, size: 32, offset: 288)
!483 = !DIGlobalVariableExpression(var: !484, expr: !DIExpression())
!484 = distinct !DIGlobalVariable(name: "pdma_global", scope: !386, file: !387, line: 55, type: !485, isLocal: false, isDefinition: true)
!485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 192, elements: !314)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "PDMA_REGISTER_GLOBAL_T", file: !56, line: 865, baseType: !488)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 863, size: 32, elements: !489)
!489 = !{!490}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "PDMA_GLBSTA", scope: !488, file: !56, line: 864, baseType: !60, size: 32)
!491 = !DIGlobalVariableExpression(var: !492, expr: !DIExpression())
!492 = distinct !DIGlobalVariable(name: "g_pdma_global_running_bit", scope: !386, file: !387, line: 58, type: !493, isLocal: false, isDefinition: true)
!493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 48, elements: !314)
!494 = !DIGlobalVariableExpression(var: !495, expr: !DIExpression())
!495 = distinct !DIGlobalVariable(name: "vdma", scope: !386, file: !387, line: 64, type: !496, isLocal: false, isDefinition: true)
!496 = !DICompositeType(tag: DW_TAG_array_type, baseType: !497, size: 320, elements: !517)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_T", file: !56, line: 885, baseType: !499)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 870, size: 448, elements: !500)
!500 = !{!501, !502, !503, !504, !505, !506, !510, !511, !512, !513, !514, !515, !516}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_COUNT", scope: !499, file: !56, line: 871, baseType: !60, size: 32)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_CON", scope: !499, file: !56, line: 872, baseType: !60, size: 32, offset: 32)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_START", scope: !499, file: !56, line: 873, baseType: !60, size: 32, offset: 64)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_INTSTA", scope: !499, file: !56, line: 874, baseType: !60, size: 32, offset: 96)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_ACKINT", scope: !499, file: !56, line: 875, baseType: !60, size: 32, offset: 128)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "DUMMY_OFFSET", scope: !499, file: !56, line: 876, baseType: !507, size: 64, offset: 160)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 64, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 2)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_PGMADDR", scope: !499, file: !56, line: 877, baseType: !60, size: 32, offset: 224)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_WRPTR", scope: !499, file: !56, line: 878, baseType: !272, size: 32, offset: 256)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_RDPTR", scope: !499, file: !56, line: 879, baseType: !272, size: 32, offset: 288)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFCNT", scope: !499, file: !56, line: 880, baseType: !272, size: 32, offset: 320)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFSTA", scope: !499, file: !56, line: 881, baseType: !272, size: 32, offset: 352)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_ALTLEN", scope: !499, file: !56, line: 882, baseType: !60, size: 32, offset: 384)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_FFSIZE", scope: !499, file: !56, line: 883, baseType: !60, size: 32, offset: 416)
!517 = !{!518}
!518 = !DISubrange(count: 10)
!519 = !DIGlobalVariableExpression(var: !520, expr: !DIExpression())
!520 = distinct !DIGlobalVariable(name: "vdma_port", scope: !386, file: !387, line: 69, type: !521, isLocal: false, isDefinition: true)
!521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 320, elements: !517)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 32)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_PORT_T", file: !56, line: 891, baseType: !524)
!524 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 889, size: 32, elements: !525)
!525 = !{!526}
!526 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_PORT", scope: !524, file: !56, line: 890, baseType: !60, size: 32)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "vdma_global", scope: !386, file: !387, line: 75, type: !529, isLocal: false, isDefinition: true)
!529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 320, elements: !517)
!530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !531, size: 32)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "VDMA_REGISTER_GLOBAL_T", file: !56, line: 898, baseType: !532)
!532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 896, size: 32, elements: !533)
!533 = !{!534}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "VDMA_GLBSTA", scope: !532, file: !56, line: 897, baseType: !60, size: 32)
!535 = !DIGlobalVariableExpression(var: !536, expr: !DIExpression())
!536 = distinct !DIGlobalVariable(name: "g_vdma_global_running_bit", scope: !386, file: !387, line: 80, type: !537, isLocal: false, isDefinition: true)
!537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 80, elements: !517)
!538 = !DIGlobalVariableExpression(var: !539, expr: !DIExpression())
!539 = distinct !DIGlobalVariable(name: "g_gdma_callback", scope: !386, file: !387, line: 92, type: !540, isLocal: false, isDefinition: true)
!540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !541, size: 64, elements: !76)
!541 = !DIDerivedType(tag: DW_TAG_typedef, name: "gdma_user_callback_t", file: !387, line: 89, baseType: !542)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 86, size: 64, elements: !543)
!543 = !{!544, !550}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !542, file: !387, line: 87, baseType: !545, size: 32)
!545 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gdma_callback_t", file: !349, line: 230, baseType: !546)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 32)
!547 = !DISubroutineType(types: !548)
!548 = !{null, !549, !88}
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gdma_event_t", file: !349, line: 204, baseType: !370)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !542, file: !387, line: 88, baseType: !88, size: 32, offset: 32)
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(name: "count", scope: !553, file: !387, line: 1122, type: !61, isLocal: true, isDefinition: true)
!553 = distinct !DISubprogram(name: "pd_domain_dma_interrupt_hander", scope: !387, file: !387, line: 1108, type: !554, scopeLine: 1110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !558)
!554 = !DISubroutineType(types: !555)
!555 = !{null, !556}
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !557)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !168)
!558 = !{!559, !560, !561, !562, !568, !574}
!559 = !DILocalVariable(name: "irq_number", arg: 1, scope: !553, file: !387, line: 1108, type: !556)
!560 = !DILocalVariable(name: "global_status", scope: !553, file: !387, line: 1113, type: !60)
!561 = !DILocalVariable(name: "gdma_callback", scope: !553, file: !387, line: 1116, type: !545)
!562 = !DILocalVariable(name: "pdma_callback", scope: !553, file: !387, line: 1117, type: !563)
!563 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_callback_t", file: !360, line: 288, baseType: !564)
!564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !565, size: 32)
!565 = !DISubroutineType(types: !566)
!566 = !{null, !567, !88}
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_event_t", file: !360, line: 162, baseType: !427)
!568 = !DILocalVariable(name: "vdma_callback", scope: !553, file: !387, line: 1118, type: !569)
!569 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_callback_t", file: !360, line: 291, baseType: !570)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 32)
!571 = !DISubroutineType(types: !572)
!572 = !{null, !573, !88}
!573 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !360, line: 225, baseType: !451)
!574 = !DILocalVariable(name: "argument", scope: !553, file: !387, line: 1119, type: !88)
!575 = !DIGlobalVariableExpression(var: !576, expr: !DIExpression())
!576 = distinct !DIGlobalVariable(name: "pdma_init_status", scope: !386, file: !387, line: 61, type: !577, isLocal: true, isDefinition: true)
!577 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 56, elements: !578)
!578 = !{!579}
!579 = !DISubrange(count: 7)
!580 = !DIGlobalVariableExpression(var: !581, expr: !DIExpression())
!581 = distinct !DIGlobalVariable(name: "g_pdma_callback", scope: !386, file: !387, line: 104, type: !582, isLocal: true, isDefinition: true)
!582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !583, size: 384, elements: !314)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_user_callback_t", file: !387, line: 101, baseType: !584)
!584 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 98, size: 64, elements: !585)
!585 = !{!586, !587}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !584, file: !387, line: 99, baseType: !563, size: 32)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !584, file: !387, line: 100, baseType: !88, size: 32, offset: 32)
!588 = !DIGlobalVariableExpression(var: !589, expr: !DIExpression())
!589 = distinct !DIGlobalVariable(name: "vdma_init_status", scope: !386, file: !387, line: 83, type: !590, isLocal: true, isDefinition: true)
!590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 144, elements: !591)
!591 = !{!592}
!592 = !DISubrange(count: 18)
!593 = !DIGlobalVariableExpression(var: !594, expr: !DIExpression())
!594 = distinct !DIGlobalVariable(name: "g_vdma_callback", scope: !386, file: !387, line: 120, type: !595, isLocal: true, isDefinition: true)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 640, elements: !517)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_user_callback_t", file: !387, line: 117, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !387, line: 114, size: 64, elements: !598)
!598 = !{!599, !600}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !597, file: !387, line: 115, baseType: !569, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "argument", scope: !597, file: !387, line: 116, baseType: !88, size: 32, offset: 32)
!601 = !DICompositeType(tag: DW_TAG_array_type, baseType: !602, size: 32, elements: !76)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 32)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "GDMA_REGISTER_T", file: !56, line: 837, baseType: !604)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 826, size: 320, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !611, !612, !613, !614, !615}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_SRC", scope: !604, file: !56, line: 827, baseType: !60, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_DST", scope: !604, file: !56, line: 828, baseType: !60, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_WPPT", scope: !604, file: !56, line: 829, baseType: !60, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_WPTO", scope: !604, file: !56, line: 830, baseType: !60, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_COUNT", scope: !604, file: !56, line: 831, baseType: !60, size: 32, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_CON", scope: !604, file: !56, line: 832, baseType: !60, size: 32, offset: 160)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_START", scope: !604, file: !56, line: 833, baseType: !60, size: 32, offset: 192)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_INTSTA", scope: !604, file: !56, line: 834, baseType: !60, size: 32, offset: 224)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_ACKINT", scope: !604, file: !56, line: 835, baseType: !60, size: 32, offset: 256)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "GDMA_RLCT", scope: !604, file: !56, line: 836, baseType: !272, size: 32, offset: 288)
!616 = !DIGlobalVariableExpression(var: !617, expr: !DIExpression())
!617 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !618, file: !619, line: 64, type: !719, isLocal: false, isDefinition: true)
!618 = distinct !DICompileUnit(language: DW_LANG_C99, file: !619, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !620, retainedTypes: !714, globals: !718, splitDebugInlining: false, nameTableKind: None)
!619 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!620 = !{!621, !673, !680, !684, !690, !694, !703, !708}
!621 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 339, baseType: !18, size: 32, elements: !622)
!622 = !{!623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672}
!623 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!624 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!625 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!626 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!627 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!628 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!629 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!630 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!631 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!632 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!633 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!634 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!635 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!636 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!637 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!638 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!639 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!640 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!641 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!642 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!643 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!644 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!645 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!646 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!647 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!648 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!649 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!650 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!651 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!652 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!653 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!654 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!655 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!656 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!657 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!658 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!659 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!660 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!661 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!662 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!663 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!664 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!665 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!666 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!667 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!668 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!669 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!670 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!671 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!672 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!673 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !674, line: 224, baseType: !7, size: 32, elements: !675)
!674 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!675 = !{!676, !677, !678, !679}
!676 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!677 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!678 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!679 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!680 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !674, line: 210, baseType: !18, size: 32, elements: !681)
!681 = !{!682, !683}
!682 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!683 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!684 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !674, line: 233, baseType: !7, size: 32, elements: !685)
!685 = !{!686, !687, !688, !689}
!686 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!687 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!688 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!689 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !674, line: 217, baseType: !18, size: 32, elements: !691)
!691 = !{!692, !693}
!692 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!693 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!694 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 415, baseType: !18, size: 32, elements: !695)
!695 = !{!696, !697, !698, !699, !700, !701, !702}
!696 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!697 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!698 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!699 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!700 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!701 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!702 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!703 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 427, baseType: !18, size: 32, elements: !704)
!704 = !{!705, !706, !707}
!705 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!706 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!707 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!708 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !674, line: 242, baseType: !18, size: 32, elements: !709)
!709 = !{!710, !711, !712, !713}
!710 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!711 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!712 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!713 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!714 = !{!88, !715, !716, !717}
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !674, line: 213, baseType: !680)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !674, line: 220, baseType: !690)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !674, line: 247, baseType: !708)
!718 = !{!616}
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 32)
!720 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !721)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !722)
!722 = !{!723, !735, !739, !748, !749, !758, !759, !768, !769, !779, !780, !789, !790, !799, !800, !809, !810, !819, !823, !832, !833, !842, !843, !852, !861, !862, !871, !875, !884, !885}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !721, file: !56, line: 1523, baseType: !724, size: 256)
!724 = !DICompositeType(tag: DW_TAG_array_type, baseType: !725, size: 256, elements: !508)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !726)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !727)
!727 = !{!728, !729, !730, !731}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !726, file: !56, line: 1396, baseType: !60, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !726, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !726, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !726, file: !56, line: 1399, baseType: !732, size: 32, offset: 96)
!732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 32, elements: !733)
!733 = !{!734}
!734 = !DISubrange(count: 4)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !721, file: !56, line: 1524, baseType: !736, size: 1792, offset: 256)
!736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 1792, elements: !737)
!737 = !{!738}
!738 = !DISubrange(count: 224)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !721, file: !56, line: 1525, baseType: !740, size: 256, offset: 2048)
!740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !741, size: 256, elements: !508)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !742)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !743)
!743 = !{!744, !745, !746, !747}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !742, file: !56, line: 1405, baseType: !60, size: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !742, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !742, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !742, file: !56, line: 1408, baseType: !732, size: 32, offset: 96)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !721, file: !56, line: 1526, baseType: !736, size: 1792, offset: 2304)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !721, file: !56, line: 1527, baseType: !750, size: 256, offset: 4096)
!750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !751, size: 256, elements: !508)
!751 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !752)
!752 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !753)
!753 = !{!754, !755, !756, !757}
!754 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !752, file: !56, line: 1413, baseType: !60, size: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !752, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !752, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !752, file: !56, line: 1416, baseType: !732, size: 32, offset: 96)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !721, file: !56, line: 1528, baseType: !736, size: 1792, offset: 4352)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !721, file: !56, line: 1529, baseType: !760, size: 256, offset: 6144)
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !761, size: 256, elements: !508)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !762)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !763)
!763 = !{!764, !765, !766, !767}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !762, file: !56, line: 1422, baseType: !60, size: 32)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !762, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !762, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !762, file: !56, line: 1425, baseType: !732, size: 32, offset: 96)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !721, file: !56, line: 1530, baseType: !736, size: 1792, offset: 6400)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !721, file: !56, line: 1531, baseType: !770, size: 256, offset: 8192)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !771, size: 256, elements: !508)
!771 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !772)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !773)
!773 = !{!774, !775}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !772, file: !56, line: 1430, baseType: !60, size: 32)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !772, file: !56, line: 1431, baseType: !776, size: 96, offset: 32)
!776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 96, elements: !777)
!777 = !{!778}
!778 = !DISubrange(count: 12)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !721, file: !56, line: 1532, baseType: !736, size: 1792, offset: 8448)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !721, file: !56, line: 1533, baseType: !781, size: 256, offset: 10240)
!781 = !DICompositeType(tag: DW_TAG_array_type, baseType: !782, size: 256, elements: !508)
!782 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !783)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !784)
!784 = !{!785, !786, !787, !788}
!785 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !783, file: !56, line: 1436, baseType: !60, size: 32)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !783, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !783, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !783, file: !56, line: 1439, baseType: !732, size: 32, offset: 96)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !721, file: !56, line: 1534, baseType: !736, size: 1792, offset: 10496)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !721, file: !56, line: 1535, baseType: !791, size: 256, offset: 12288)
!791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 256, elements: !508)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !793)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !794)
!794 = !{!795, !796, !797, !798}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !793, file: !56, line: 1444, baseType: !60, size: 32)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !793, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !793, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !793, file: !56, line: 1447, baseType: !732, size: 32, offset: 96)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !721, file: !56, line: 1536, baseType: !736, size: 1792, offset: 12544)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !721, file: !56, line: 1537, baseType: !801, size: 256, offset: 14336)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !802, size: 256, elements: !508)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !804)
!804 = !{!805, !806, !807, !808}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !803, file: !56, line: 1451, baseType: !60, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !803, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !803, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !803, file: !56, line: 1454, baseType: !732, size: 32, offset: 96)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !721, file: !56, line: 1538, baseType: !736, size: 1792, offset: 14592)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !721, file: !56, line: 1539, baseType: !811, size: 512, offset: 16384)
!811 = !DICompositeType(tag: DW_TAG_array_type, baseType: !812, size: 512, elements: !733)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !813)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !814)
!814 = !{!815, !816, !817, !818}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !813, file: !56, line: 1459, baseType: !60, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !813, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !813, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !813, file: !56, line: 1462, baseType: !732, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !721, file: !56, line: 1540, baseType: !820, size: 1536, offset: 16896)
!820 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 1536, elements: !821)
!821 = !{!822}
!822 = !DISubrange(count: 192)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !721, file: !56, line: 1541, baseType: !824, size: 256, offset: 18432)
!824 = !DICompositeType(tag: DW_TAG_array_type, baseType: !825, size: 256, elements: !508)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !827)
!827 = !{!828, !829, !830, !831}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !826, file: !56, line: 1467, baseType: !60, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !826, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !826, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !826, file: !56, line: 1470, baseType: !732, size: 32, offset: 96)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !721, file: !56, line: 1542, baseType: !736, size: 1792, offset: 18688)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !721, file: !56, line: 1543, baseType: !834, size: 256, offset: 20480)
!834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !835, size: 256, elements: !508)
!835 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !836)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !837)
!837 = !{!838, !839, !840, !841}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !836, file: !56, line: 1476, baseType: !60, size: 32)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !836, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !836, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !836, file: !56, line: 1479, baseType: !732, size: 32, offset: 96)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !721, file: !56, line: 1544, baseType: !736, size: 1792, offset: 20736)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !721, file: !56, line: 1545, baseType: !844, size: 256, offset: 22528)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !845, size: 256, elements: !508)
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !846)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !847)
!847 = !{!848, !849, !850, !851}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !846, file: !56, line: 1485, baseType: !60, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !846, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !846, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !846, file: !56, line: 1488, baseType: !732, size: 32, offset: 96)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !721, file: !56, line: 1546, baseType: !853, size: 256, offset: 22784)
!853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !854, size: 256, elements: !508)
!854 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !856)
!856 = !{!857, !858, !859, !860}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !855, file: !56, line: 1493, baseType: !60, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !855, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !855, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !855, file: !56, line: 1496, baseType: !732, size: 32, offset: 96)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !721, file: !56, line: 1547, baseType: !820, size: 1536, offset: 23040)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !721, file: !56, line: 1548, baseType: !863, size: 896, offset: 24576)
!863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !864, size: 896, elements: !578)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !865)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !866)
!866 = !{!867, !868, !869, !870}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !865, file: !56, line: 1501, baseType: !60, size: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !865, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !865, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !865, file: !56, line: 1504, baseType: !732, size: 32, offset: 96)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !721, file: !56, line: 1549, baseType: !872, size: 1152, offset: 25472)
!872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 1152, elements: !873)
!873 = !{!874}
!874 = !DISubrange(count: 144)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !721, file: !56, line: 1550, baseType: !876, size: 512, offset: 26624)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !877, size: 512, elements: !733)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !878)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !879)
!879 = !{!880, !881, !882, !883}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !878, file: !56, line: 1509, baseType: !60, size: 32)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !878, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !878, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !878, file: !56, line: 1512, baseType: !732, size: 32, offset: 96)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !721, file: !56, line: 1551, baseType: !820, size: 1536, offset: 27136)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !721, file: !56, line: 1552, baseType: !886, size: 768, offset: 28672)
!886 = !DICompositeType(tag: DW_TAG_array_type, baseType: !887, size: 768, elements: !314)
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !888)
!888 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !889)
!889 = !{!890, !891}
!890 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !888, file: !56, line: 1517, baseType: !60, size: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !888, file: !56, line: 1518, baseType: !776, size: 96, offset: 32)
!892 = !DIGlobalVariableExpression(var: !893, expr: !DIExpression())
!893 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !894, file: !895, line: 101, type: !1011, isLocal: true, isDefinition: true)
!894 = distinct !DICompileUnit(language: DW_LANG_C99, file: !895, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !896, retainedTypes: !961, globals: !970, splitDebugInlining: false, nameTableKind: None)
!895 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!896 = !{!897, !437, !904, !431, !910, !915, !922, !938, !944, !948, !389, !953, !451}
!897 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 180, baseType: !18, size: 32, elements: !898)
!898 = !{!899, !900, !901, !902, !903}
!899 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!900 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!901 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!902 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!903 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!904 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !905, line: 355, baseType: !7, size: 32, elements: !906)
!905 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!906 = !{!907, !908, !909}
!907 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!908 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!909 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!910 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !895, line: 65, baseType: !18, size: 32, elements: !911)
!911 = !{!912, !913, !914}
!912 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!913 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!914 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!915 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !905, line: 345, baseType: !7, size: 32, elements: !916)
!916 = !{!917, !918, !919, !920, !921}
!917 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!918 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!919 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!920 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!921 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!922 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !905, line: 302, baseType: !18, size: 32, elements: !923)
!923 = !{!924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937}
!924 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!925 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!926 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!927 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!928 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!929 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!930 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!931 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!932 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!933 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!934 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!935 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!936 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!937 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!938 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !905, line: 321, baseType: !18, size: 32, elements: !939)
!939 = !{!940, !941, !942, !943}
!940 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!941 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!942 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!943 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!944 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !905, line: 330, baseType: !18, size: 32, elements: !945)
!945 = !{!946, !947}
!946 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!947 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!948 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !905, line: 337, baseType: !18, size: 32, elements: !949)
!949 = !{!950, !951, !952}
!950 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!951 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!952 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!953 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !954, line: 152, baseType: !7, size: 32, elements: !955)
!954 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!955 = !{!956, !957, !958, !959, !960}
!956 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!957 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!958 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!959 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!960 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!961 = !{!88, !61, !962}
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !964, line: 96, baseType: !965)
!964 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !964, line: 93, size: 64, elements: !966)
!966 = !{!967, !968}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !965, file: !964, line: 94, baseType: !91, size: 8)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !965, file: !964, line: 95, baseType: !969, size: 32, offset: 32)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !98, line: 186, baseType: !897)
!970 = !{!892, !971, !984, !989, !1003, !1009}
!971 = !DIGlobalVariableExpression(var: !972, expr: !DIExpression())
!972 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !894, file: !895, line: 102, type: !973, isLocal: true, isDefinition: true)
!973 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 256, elements: !733)
!974 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !895, line: 74, baseType: !975)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !895, line: 71, size: 64, elements: !976)
!976 = !{!977, !983}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !975, file: !895, line: 72, baseType: !978, size: 32)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !905, line: 410, baseType: !979)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 32)
!980 = !DISubroutineType(types: !981)
!981 = !{null, !982, !88}
!982 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !905, line: 359, baseType: !904)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !975, file: !895, line: 73, baseType: !88, size: 32, offset: 32)
!984 = !DIGlobalVariableExpression(var: !985, expr: !DIExpression())
!985 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !894, file: !895, line: 103, type: !986, isLocal: true, isDefinition: true)
!986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !963, size: 512, elements: !987)
!987 = !{!988}
!988 = !DISubrange(count: 8)
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !894, file: !895, line: 104, type: !991, isLocal: true, isDefinition: true)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 896, elements: !733)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !905, line: 390, baseType: !993)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !905, line: 382, size: 224, elements: !994)
!994 = !{!995, !997, !998, !999, !1000, !1001, !1002}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !993, file: !905, line: 383, baseType: !996, size: 32)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 32)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !993, file: !905, line: 384, baseType: !61, size: 32, offset: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !993, file: !905, line: 385, baseType: !61, size: 32, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !993, file: !905, line: 386, baseType: !996, size: 32, offset: 96)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !993, file: !905, line: 387, baseType: !61, size: 32, offset: 128)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !993, file: !905, line: 388, baseType: !61, size: 32, offset: 160)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !993, file: !905, line: 389, baseType: !61, size: 32, offset: 192)
!1003 = !DIGlobalVariableExpression(var: !1004, expr: !DIExpression())
!1004 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !894, file: !895, line: 105, type: !1005, isLocal: true, isDefinition: true)
!1005 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1006, size: 416, elements: !1007)
!1006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!1007 = !{!1008}
!1008 = !DISubrange(count: 13)
!1009 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression())
!1010 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !894, file: !895, line: 90, type: !91, isLocal: true, isDefinition: true)
!1011 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1012, size: 128, elements: !733)
!1012 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !1013)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !895, line: 69, baseType: !910)
!1014 = !DIGlobalVariableExpression(var: !1010, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1015 = !DIGlobalVariableExpression(var: !1016, expr: !DIExpression())
!1016 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !1017, file: !1018, line: 53, type: !1096, isLocal: false, isDefinition: true)
!1017 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1018, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1019, retainedTypes: !1030, globals: !1086, splitDebugInlining: false, nameTableKind: None)
!1018 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1019 = !{!97, !168, !437, !897, !1020}
!1020 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !964, line: 46, baseType: !18, size: 32, elements: !1021)
!1021 = !{!1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029}
!1022 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!1023 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!1024 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!1025 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!1026 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!1027 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!1028 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!1029 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!1030 = !{!1031}
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 32)
!1032 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !1033)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !1034)
!1034 = !{!1035, !1041, !1046, !1052, !1053, !1058, !1063, !1064, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !1033, file: !56, line: 547, baseType: !1036, size: 32)
!1036 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1033, file: !56, line: 543, size: 32, elements: !1037)
!1037 = !{!1038, !1039, !1040}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !1036, file: !56, line: 544, baseType: !272, size: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !1036, file: !56, line: 545, baseType: !60, size: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !1036, file: !56, line: 546, baseType: !60, size: 32)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !1033, file: !56, line: 551, baseType: !1042, size: 32, offset: 32)
!1042 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1033, file: !56, line: 548, size: 32, elements: !1043)
!1043 = !{!1044, !1045}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !1042, file: !56, line: 549, baseType: !60, size: 32)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !1042, file: !56, line: 550, baseType: !60, size: 32)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !1033, file: !56, line: 556, baseType: !1047, size: 32, offset: 64)
!1047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1033, file: !56, line: 552, size: 32, elements: !1048)
!1048 = !{!1049, !1050, !1051}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !1047, file: !56, line: 553, baseType: !272, size: 32)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !1047, file: !56, line: 554, baseType: !60, size: 32)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !1047, file: !56, line: 555, baseType: !60, size: 32)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !1033, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !1033, file: !56, line: 561, baseType: !1054, size: 32, offset: 128)
!1054 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1033, file: !56, line: 558, size: 32, elements: !1055)
!1055 = !{!1056, !1057}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !1054, file: !56, line: 559, baseType: !60, size: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !1054, file: !56, line: 560, baseType: !60, size: 32)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !1033, file: !56, line: 565, baseType: !1059, size: 32, offset: 160)
!1059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1033, file: !56, line: 562, size: 32, elements: !1060)
!1060 = !{!1061, !1062}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !1059, file: !56, line: 563, baseType: !272, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !1059, file: !56, line: 564, baseType: !60, size: 32)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !1033, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !1033, file: !56, line: 570, baseType: !1065, size: 32, offset: 224)
!1065 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1033, file: !56, line: 567, size: 32, elements: !1066)
!1066 = !{!1067, !1068}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1065, file: !56, line: 568, baseType: !60, size: 32)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !1065, file: !56, line: 569, baseType: !60, size: 32)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !1033, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !1033, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !1033, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !1033, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !1033, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !1033, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !1033, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !1033, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !1033, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !1033, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !1033, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !1033, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !1033, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !1033, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !1033, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !1033, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !1033, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!1086 = !{!1015, !1087, !1092}
!1087 = !DIGlobalVariableExpression(var: !1088, expr: !DIExpression())
!1088 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !1017, file: !1018, line: 54, type: !1089, isLocal: false, isDefinition: true)
!1089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1090, size: 128, elements: !733)
!1090 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1091)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !98, line: 1237, baseType: !97)
!1092 = !DIGlobalVariableExpression(var: !1093, expr: !DIExpression())
!1093 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !1017, file: !1018, line: 55, type: !1094, isLocal: false, isDefinition: true)
!1094 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1095, size: 128, elements: !733)
!1095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !556)
!1096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1097, size: 128, elements: !733)
!1097 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1031)
!1098 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1099 = distinct !DIGlobalVariable(name: "priority_set", scope: !1100, file: !1101, line: 128, type: !61, isLocal: true, isDefinition: true)
!1100 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1101, file: !1101, line: 126, type: !1102, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !1189)
!1101 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!1104}
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !954, line: 158, baseType: !953)
!1105 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1101, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1106, retainedTypes: !1107, globals: !1173, splitDebugInlining: false, nameTableKind: None)
!1106 = !{!953, !168}
!1107 = !{!556, !1108, !61, !1141, !1171}
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1109, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1110, line: 418, baseType: !1111)
!1110 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1110, line: 395, size: 1120, elements: !1112)
!1112 = !{!1113, !1114, !1115, !1116, !1117, !1118, !1119, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1130, !1131, !1132, !1134, !1138, !1140}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1111, file: !1110, line: 397, baseType: !272, size: 32)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1111, file: !1110, line: 398, baseType: !60, size: 32, offset: 32)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1111, file: !1110, line: 399, baseType: !60, size: 32, offset: 64)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1111, file: !1110, line: 400, baseType: !60, size: 32, offset: 96)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1111, file: !1110, line: 401, baseType: !60, size: 32, offset: 128)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1111, file: !1110, line: 402, baseType: !60, size: 32, offset: 160)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1111, file: !1110, line: 403, baseType: !1120, size: 96, offset: 192)
!1120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 96, elements: !777)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1111, file: !1110, line: 404, baseType: !60, size: 32, offset: 288)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1111, file: !1110, line: 405, baseType: !60, size: 32, offset: 320)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1111, file: !1110, line: 406, baseType: !60, size: 32, offset: 352)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1111, file: !1110, line: 407, baseType: !60, size: 32, offset: 384)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1111, file: !1110, line: 408, baseType: !60, size: 32, offset: 416)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1111, file: !1110, line: 409, baseType: !60, size: 32, offset: 448)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1111, file: !1110, line: 410, baseType: !60, size: 32, offset: 480)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1111, file: !1110, line: 411, baseType: !1129, size: 64, offset: 512)
!1129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !508)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1111, file: !1110, line: 412, baseType: !272, size: 32, offset: 576)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1111, file: !1110, line: 413, baseType: !272, size: 32, offset: 608)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1111, file: !1110, line: 414, baseType: !1133, size: 128, offset: 640)
!1133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !733)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1111, file: !1110, line: 415, baseType: !1135, size: 160, offset: 768)
!1135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 160, elements: !1136)
!1136 = !{!1137}
!1137 = !DISubrange(count: 5)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1111, file: !1110, line: 416, baseType: !1139, size: 160, offset: 928)
!1139 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !1136)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1111, file: !1110, line: 417, baseType: !60, size: 32, offset: 1088)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 32)
!1142 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1110, line: 378, baseType: !1143)
!1143 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1110, line: 363, size: 28704, elements: !1144)
!1144 = !{!1145, !1147, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1162, !1166, !1170}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1143, file: !1110, line: 365, baseType: !1146, size: 256)
!1146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !987)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1143, file: !1110, line: 366, baseType: !1148, size: 768, offset: 256)
!1148 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !1149)
!1149 = !{!1150}
!1150 = !DISubrange(count: 24)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1143, file: !1110, line: 367, baseType: !1146, size: 256, offset: 1024)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1143, file: !1110, line: 368, baseType: !1148, size: 768, offset: 1280)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1143, file: !1110, line: 369, baseType: !1146, size: 256, offset: 2048)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1143, file: !1110, line: 370, baseType: !1148, size: 768, offset: 2304)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1143, file: !1110, line: 371, baseType: !1146, size: 256, offset: 3072)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1143, file: !1110, line: 372, baseType: !1148, size: 768, offset: 3328)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1143, file: !1110, line: 373, baseType: !1146, size: 256, offset: 4096)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1143, file: !1110, line: 374, baseType: !1159, size: 1792, offset: 4352)
!1159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !1160)
!1160 = !{!1161}
!1161 = !DISubrange(count: 56)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1143, file: !1110, line: 375, baseType: !1163, size: 1920, offset: 6144)
!1163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 1920, elements: !1164)
!1164 = !{!1165}
!1165 = !DISubrange(count: 240)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1143, file: !1110, line: 376, baseType: !1167, size: 20608, offset: 8064)
!1167 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !1168)
!1168 = !{!1169}
!1169 = !DISubrange(count: 644)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1143, file: !1110, line: 377, baseType: !60, size: 32, offset: 28672)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !1172)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!1173 = !{!1174, !1175, !1186}
!1174 = !DIGlobalVariableExpression(var: !1099, expr: !DIExpression())
!1175 = !DIGlobalVariableExpression(var: !1176, expr: !DIExpression())
!1176 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1105, file: !1101, line: 119, type: !1177, isLocal: false, isDefinition: true)
!1177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1178, size: 4096, elements: !1184)
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1101, line: 50, baseType: !1179)
!1179 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1101, line: 47, size: 64, elements: !1180)
!1180 = !{!1181, !1183}
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1179, file: !1101, line: 48, baseType: !1182, size: 32)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 32)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1179, file: !1101, line: 49, baseType: !61, size: 32, offset: 32)
!1184 = !{!1185}
!1185 = !DISubrange(count: 64)
!1186 = !DIGlobalVariableExpression(var: !1187, expr: !DIExpression())
!1187 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !1105, file: !1101, line: 52, type: !1188, isLocal: true, isDefinition: true)
!1188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1006, size: 2048, elements: !1184)
!1189 = !{!1190}
!1190 = !DILocalVariable(name: "i", scope: !1100, file: !1101, line: 129, type: !61)
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1193, file: !1194, line: 55, type: !91, isLocal: false, isDefinition: true)
!1193 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1194, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1195, retainedTypes: !1230, globals: !1269, splitDebugInlining: false, nameTableKind: None)
!1194 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1195 = !{!1196, !1204, !1209}
!1196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1197, line: 51, baseType: !18, size: 32, elements: !1198)
!1197 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1198 = !{!1199, !1200, !1201, !1202, !1203}
!1199 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1200 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1201 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1202 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1203 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1204 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1197, line: 62, baseType: !18, size: 32, elements: !1205)
!1205 = !{!1206, !1207, !1208}
!1206 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1207 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1208 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1209 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1210, line: 228, baseType: !18, size: 32, elements: !1211)
!1210 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1211 = !{!1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229}
!1212 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1213 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1214 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1215 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1216 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1217 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1218 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1219 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1220 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1221 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1222 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1223 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1224 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1225 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1226 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1227 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1228 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1229 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1230 = !{!1231, !1232, !1254, !996, !61, !18, !1260, !1262, !1266, !1268}
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 32)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1234, file: !56, line: 2759, baseType: !60, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1234, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1234, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1234, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1234, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1234, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1234, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1234, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1234, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1234, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1234, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1234, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1234, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1234, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1234, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1234, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1234, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1234, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 32)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1256)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1257)
!1257 = !{!1258, !1259}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1256, file: !56, line: 2799, baseType: !60, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1256, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 32)
!1261 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !1264)
!1264 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !1265)
!1265 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 32)
!1267 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !383)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1269 = !{!1191, !1270, !1272, !1274, !1276, !1278, !1280, !1282, !1284, !1286, !1288}
!1270 = !DIGlobalVariableExpression(var: !1271, expr: !DIExpression())
!1271 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1193, file: !1194, line: 604, type: !381, isLocal: false, isDefinition: true)
!1272 = !DIGlobalVariableExpression(var: !1273, expr: !DIExpression())
!1273 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1193, file: !1194, line: 605, type: !61, isLocal: false, isDefinition: true)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1193, file: !1194, line: 606, type: !61, isLocal: false, isDefinition: true)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1193, file: !1194, line: 607, type: !61, isLocal: false, isDefinition: true)
!1278 = !DIGlobalVariableExpression(var: !1279, expr: !DIExpression())
!1279 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1193, file: !1194, line: 608, type: !61, isLocal: false, isDefinition: true)
!1280 = !DIGlobalVariableExpression(var: !1281, expr: !DIExpression())
!1281 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1193, file: !1194, line: 609, type: !61, isLocal: false, isDefinition: true)
!1282 = !DIGlobalVariableExpression(var: !1283, expr: !DIExpression())
!1283 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1193, file: !1194, line: 610, type: !61, isLocal: false, isDefinition: true)
!1284 = !DIGlobalVariableExpression(var: !1285, expr: !DIExpression())
!1285 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1193, file: !1194, line: 611, type: !61, isLocal: false, isDefinition: true)
!1286 = !DIGlobalVariableExpression(var: !1287, expr: !DIExpression())
!1287 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1193, file: !1194, line: 665, type: !61, isLocal: false, isDefinition: true)
!1288 = !DIGlobalVariableExpression(var: !1289, expr: !DIExpression())
!1289 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1193, file: !1194, line: 666, type: !61, isLocal: false, isDefinition: true)
!1290 = !DIGlobalVariableExpression(var: !1291, expr: !DIExpression())
!1291 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1292, file: !1293, line: 334, type: !91, isLocal: false, isDefinition: true)
!1292 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1293, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1294, retainedTypes: !1462, globals: !1602, splitDebugInlining: false, nameTableKind: None)
!1293 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1294 = !{!1295, !1386, !1392, !1399, !1411, !1422, !1431, !1440, !1444, !1448}
!1295 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1296, line: 58, baseType: !7, size: 32, elements: !1297)
!1296 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1297 = !{!1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385}
!1298 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1299 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1300 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1301 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1302 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1303 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1304 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1305 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1306 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1307 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1308 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1309 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1310 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1311 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1312 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1313 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1314 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1315 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1316 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1317 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1318 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1319 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1320 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1321 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1322 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1323 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1324 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1325 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1326 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1327 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1328 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1329 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1330 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1331 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1332 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1333 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1334 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1335 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1336 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1337 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1338 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1339 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1340 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1341 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1342 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1343 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1344 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1345 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1346 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1347 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1348 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1349 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1350 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1351 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1352 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1353 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1354 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1355 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1356 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1357 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1358 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1359 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1360 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1361 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1362 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1363 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1364 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1365 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1366 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1367 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1368 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1369 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1370 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1371 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1372 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1373 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1374 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1375 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1376 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1377 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1378 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1379 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1380 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1381 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1382 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1383 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1384 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1385 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1386 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1387, line: 81, baseType: !18, size: 32, elements: !1388)
!1387 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1388 = !{!1389, !1390, !1391}
!1389 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1390 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1391 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1392 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1293, line: 298, baseType: !18, size: 32, elements: !1393)
!1393 = !{!1394, !1395, !1396, !1397, !1398}
!1394 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1395 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1396 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1397 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1398 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1399 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1400, line: 51, baseType: !18, size: 32, elements: !1401)
!1400 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1401 = !{!1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410}
!1402 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1403 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1404 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1405 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1406 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1407 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1408 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1409 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1410 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1411 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1412, line: 110, baseType: !7, size: 32, elements: !1413)
!1412 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1413 = !{!1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421}
!1414 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1415 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1416 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1417 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1418 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1419 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1420 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1421 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1422 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1400, line: 73, baseType: !18, size: 32, elements: !1423)
!1423 = !{!1424, !1425, !1426, !1427, !1428, !1429, !1430}
!1424 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1425 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1426 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1427 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1428 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1429 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1430 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1431 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1400, line: 83, baseType: !18, size: 32, elements: !1432)
!1432 = !{!1433, !1434, !1435, !1436, !1437, !1438, !1439}
!1433 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1434 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1435 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1436 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1437 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1438 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1439 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1440 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1400, line: 98, baseType: !18, size: 32, elements: !1441)
!1441 = !{!1442, !1443}
!1442 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1443 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1444 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1387, line: 76, baseType: !18, size: 32, elements: !1445)
!1445 = !{!1446, !1447}
!1446 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1447 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1448 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1387, line: 208, baseType: !18, size: 32, elements: !1449)
!1449 = !{!1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461}
!1450 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1451 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1452 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1453 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1454 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1455 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1456 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1457 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1458 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1459 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1460 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1461 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1462 = !{!61, !1231, !1262, !996, !1463, !1573, !1595, !88, !1601, !383}
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1387, line: 193, baseType: !1465)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1387, line: 134, size: 1824, elements: !1466)
!1466 = !{!1467, !1468, !1469, !1476, !1482, !1486, !1494, !1495, !1502, !1503, !1504, !1505, !1513, !1516, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1567, !1568, !1572}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1465, file: !1387, line: 136, baseType: !61, size: 32)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1465, file: !1387, line: 137, baseType: !996, size: 32, offset: 32)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1465, file: !1387, line: 138, baseType: !1470, size: 32, offset: 64)
!1470 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1471, line: 56, baseType: !1472)
!1471 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1473, size: 32)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1471, line: 54, size: 8, elements: !1474)
!1474 = !{!1475}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1473, file: !1471, line: 55, baseType: !381, size: 8)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1465, file: !1387, line: 139, baseType: !1477, size: 32, offset: 96)
!1477 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1471, line: 46, baseType: !1478)
!1478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1479, size: 32)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1471, line: 44, size: 8, elements: !1480)
!1480 = !{!1481}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1479, file: !1471, line: 45, baseType: !381, size: 8)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1465, file: !1387, line: 140, baseType: !1483, size: 8, offset: 128)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1484)
!1484 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1485)
!1485 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1465, file: !1387, line: 143, baseType: !1487, size: 32, offset: 160)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 32)
!1488 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1489, line: 146, baseType: !1490)
!1489 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 143, size: 64, elements: !1491)
!1491 = !{!1492, !1493}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1490, file: !1489, line: 144, baseType: !61, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1490, file: !1489, line: 145, baseType: !61, size: 32, offset: 32)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1465, file: !1387, line: 144, baseType: !996, size: 32, offset: 192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1465, file: !1387, line: 145, baseType: !1496, size: 32, offset: 224)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1489, line: 152, baseType: !1498)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 149, size: 64, elements: !1499)
!1499 = !{!1500, !1501}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1498, file: !1489, line: 150, baseType: !61, size: 32)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1498, file: !1489, line: 151, baseType: !61, size: 32, offset: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1465, file: !1387, line: 146, baseType: !996, size: 32, offset: 256)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1465, file: !1387, line: 147, baseType: !61, size: 32, offset: 288)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1465, file: !1387, line: 148, baseType: !996, size: 32, offset: 320)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1465, file: !1387, line: 151, baseType: !1506, size: 1024, offset: 352)
!1506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1507, size: 1024, elements: !1512)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1489, line: 170, baseType: !1508)
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 167, size: 64, elements: !1509)
!1509 = !{!1510, !1511}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1508, file: !1489, line: 168, baseType: !61, size: 32)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1508, file: !1489, line: 169, baseType: !61, size: 32, offset: 32)
!1512 = !{!988, !509}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1465, file: !1387, line: 155, baseType: !1514, size: 32, offset: 1376)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1400, line: 120, baseType: !381)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1465, file: !1387, line: 156, baseType: !1517, size: 32, offset: 1408)
!1517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1518, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1387, line: 124, baseType: !1519)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1387, line: 90, size: 200, elements: !1520)
!1520 = !{!1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1519, file: !1387, line: 91, baseType: !381, size: 8)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1519, file: !1387, line: 92, baseType: !381, size: 8, offset: 8)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1519, file: !1387, line: 94, baseType: !381, size: 8, offset: 16)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1519, file: !1387, line: 95, baseType: !381, size: 8, offset: 24)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1519, file: !1387, line: 96, baseType: !381, size: 8, offset: 32)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1519, file: !1387, line: 98, baseType: !381, size: 8, offset: 40)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1519, file: !1387, line: 99, baseType: !381, size: 8, offset: 48)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1519, file: !1387, line: 100, baseType: !381, size: 8, offset: 56)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1519, file: !1387, line: 101, baseType: !381, size: 8, offset: 64)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1519, file: !1387, line: 103, baseType: !381, size: 8, offset: 72)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1519, file: !1387, line: 104, baseType: !381, size: 8, offset: 80)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1519, file: !1387, line: 106, baseType: !381, size: 8, offset: 88)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1519, file: !1387, line: 107, baseType: !381, size: 8, offset: 96)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1519, file: !1387, line: 108, baseType: !381, size: 8, offset: 104)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1519, file: !1387, line: 109, baseType: !381, size: 8, offset: 112)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1519, file: !1387, line: 110, baseType: !381, size: 8, offset: 120)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1519, file: !1387, line: 111, baseType: !381, size: 8, offset: 128)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1519, file: !1387, line: 112, baseType: !381, size: 8, offset: 136)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1519, file: !1387, line: 114, baseType: !381, size: 8, offset: 144)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1519, file: !1387, line: 115, baseType: !381, size: 8, offset: 152)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1519, file: !1387, line: 118, baseType: !381, size: 8, offset: 160)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1519, file: !1387, line: 119, baseType: !381, size: 8, offset: 168)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1519, file: !1387, line: 120, baseType: !381, size: 8, offset: 176)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1519, file: !1387, line: 121, baseType: !381, size: 8, offset: 184)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1519, file: !1387, line: 122, baseType: !381, size: 8, offset: 192)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1465, file: !1387, line: 157, baseType: !61, size: 32, offset: 1440)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1465, file: !1387, line: 158, baseType: !1263, size: 16, offset: 1472)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1465, file: !1387, line: 159, baseType: !1263, size: 16, offset: 1488)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1465, file: !1387, line: 163, baseType: !1263, size: 16, offset: 1504)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1465, file: !1387, line: 164, baseType: !1263, size: 16, offset: 1520)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1465, file: !1387, line: 167, baseType: !381, size: 8, offset: 1536)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1465, file: !1387, line: 168, baseType: !1553, size: 24, offset: 1544)
!1553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 24, elements: !1554)
!1554 = !{!1555}
!1555 = !DISubrange(count: 3)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1465, file: !1387, line: 169, baseType: !381, size: 8, offset: 1568)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1465, file: !1387, line: 170, baseType: !381, size: 8, offset: 1576)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1465, file: !1387, line: 173, baseType: !1263, size: 16, offset: 1584)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1465, file: !1387, line: 174, baseType: !61, size: 32, offset: 1600)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1465, file: !1387, line: 175, baseType: !61, size: 32, offset: 1632)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1465, file: !1387, line: 178, baseType: !91, size: 8, offset: 1664)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1465, file: !1387, line: 179, baseType: !91, size: 8, offset: 1672)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1465, file: !1387, line: 182, baseType: !1564, size: 32, offset: 1696)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 32)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!7, !88}
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1465, file: !1387, line: 186, baseType: !1564, size: 32, offset: 1728)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1465, file: !1387, line: 187, baseType: !1569, size: 32, offset: 1760)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 32)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!7, !88, !61, !88, !61}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1465, file: !1387, line: 188, baseType: !1569, size: 32, offset: 1792)
!1573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1574, size: 32)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1575)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1576)
!1576 = !{!1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1575, file: !56, line: 2759, baseType: !60, size: 32)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1575, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1575, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1575, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1575, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1575, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1575, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1575, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1575, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1575, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1575, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1575, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1575, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1575, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1575, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1575, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1575, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1575, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1597)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1597, file: !56, line: 2799, baseType: !60, size: 32)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1597, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 32)
!1602 = !{!1290, !1603, !1605, !1607, !1612}
!1603 = !DIGlobalVariableExpression(var: !1604, expr: !DIExpression())
!1604 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1292, file: !1293, line: 382, type: !61, isLocal: false, isDefinition: true)
!1605 = !DIGlobalVariableExpression(var: !1606, expr: !DIExpression())
!1606 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1292, file: !1293, line: 383, type: !61, isLocal: false, isDefinition: true)
!1607 = !DIGlobalVariableExpression(var: !1608, expr: !DIExpression())
!1608 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1292, file: !1293, line: 369, type: !1609, isLocal: true, isDefinition: true)
!1609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 1024, elements: !1610)
!1610 = !{!1611}
!1611 = !DISubrange(count: 128)
!1612 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression())
!1613 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1292, file: !1293, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1614 = !DIGlobalVariableExpression(var: !1613, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1615 = !DIGlobalVariableExpression(var: !1616, expr: !DIExpression())
!1616 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1617, file: !1671, line: 35, type: !1672, isLocal: false, isDefinition: true)
!1617 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1618, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1619, retainedTypes: !455, globals: !1665, splitDebugInlining: false, nameTableKind: None)
!1618 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1619 = !{!1620}
!1620 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1621, line: 77, baseType: !18, size: 32, elements: !1622)
!1621 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1622 = !{!1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664}
!1623 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1624 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1625 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1626 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1627 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1628 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1629 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1630 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1631 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1632 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1633 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1634 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1635 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1636 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1637 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1638 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1639 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1640 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1641 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1642 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1643 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1644 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1645 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1646 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1647 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1648 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1649 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1650 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1651 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1652 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1653 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1654 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1655 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1656 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1657 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1658 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1659 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1660 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1661 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1662 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1663 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1664 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1665 = !{!1615, !1666, !1669}
!1666 = !DIGlobalVariableExpression(var: !1667, expr: !DIExpression())
!1667 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1617, file: !1618, line: 96, type: !1668, isLocal: true, isDefinition: true)
!1668 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1669 = !DIGlobalVariableExpression(var: !1670, expr: !DIExpression())
!1670 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1617, file: !1618, line: 94, type: !1668, isLocal: true, isDefinition: true)
!1671 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1673)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1618, line: 54, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1618, line: 51, size: 576, elements: !1675)
!1675 = !{!1676, !1686}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1674, file: !1618, line: 52, baseType: !1677, size: 96)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1621, line: 152, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1621, line: 144, size: 96, elements: !1679)
!1679 = !{!1680, !1682, !1684}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1678, file: !1621, line: 145, baseType: !1681, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1621, line: 61, baseType: !18)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1678, file: !1621, line: 146, baseType: !1683, size: 16, offset: 32)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1621, line: 62, baseType: !1265)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1678, file: !1621, line: 150, baseType: !1685, size: 32, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1621, line: 127, baseType: !1620)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1674, file: !1618, line: 53, baseType: !1687, size: 480, offset: 96)
!1687 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1688, line: 107, baseType: !1689)
!1688 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1688, line: 103, size: 480, elements: !1690)
!1690 = !{!1691, !1692, !1693}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1689, file: !1688, line: 104, baseType: !18, size: 32)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1689, file: !1688, line: 105, baseType: !18, size: 32, offset: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1689, file: !1688, line: 106, baseType: !1694, size: 400, offset: 64)
!1694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1695, size: 400, elements: !1136)
!1695 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1688, line: 100, baseType: !1696)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1688, line: 92, size: 80, elements: !1697)
!1697 = !{!1698, !1699, !1700}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1696, file: !1688, line: 93, baseType: !381, size: 8)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1696, file: !1688, line: 94, baseType: !381, size: 8, offset: 8)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1696, file: !1688, line: 96, baseType: !1701, size: 64, offset: 16)
!1701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 64, elements: !987)
!1702 = !DIGlobalVariableExpression(var: !1703, expr: !DIExpression())
!1703 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1704, file: !1707, line: 96, type: !1708, isLocal: false, isDefinition: true)
!1704 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1705, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1706, splitDebugInlining: false, nameTableKind: None)
!1705 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1706 = !{!1702}
!1707 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1709, size: 152, elements: !1711)
!1709 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1710)
!1710 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1711 = !{!1712}
!1712 = !DISubrange(count: 19)
!1713 = !DIGlobalVariableExpression(var: !1714, expr: !DIExpression())
!1714 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1715, file: !1716, line: 168, type: !2066, isLocal: false, isDefinition: true)
!1715 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1716, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1717, retainedTypes: !1728, globals: !1737, splitDebugInlining: false, nameTableKind: None)
!1716 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1717 = !{!1718, !1295, !1620}
!1718 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1719, line: 49, baseType: !18, size: 32, elements: !1720)
!1719 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!1720 = !{!1721, !1722, !1723, !1724, !1725, !1726, !1727}
!1721 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1722 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1723 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1724 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1725 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1726 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1727 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1728 = !{!1729, !61, !1731}
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 32)
!1730 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1296, line: 47, baseType: !383)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 32)
!1732 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1489, line: 146, baseType: !1733)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 143, size: 64, elements: !1734)
!1734 = !{!1735, !1736}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1733, file: !1489, line: 144, baseType: !61, size: 32)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1733, file: !1489, line: 145, baseType: !61, size: 32, offset: 32)
!1737 = !{!1713, !1738, !1740, !1750, !1887, !1889, !1891, !1893, !1895, !1900, !1903, !1912, !1914, !1916, !1924, !1926, !1928, !2011, !2014, !2016, !2018, !2029, !2031, !2044}
!1738 = !DIGlobalVariableExpression(var: !1739, expr: !DIExpression())
!1739 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1715, file: !1716, line: 94, type: !1171, isLocal: true, isDefinition: true)
!1740 = !DIGlobalVariableExpression(var: !1741, expr: !DIExpression())
!1741 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1715, file: !1716, line: 95, type: !1742, isLocal: false, isDefinition: true)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1744)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1688, line: 100, baseType: !1745)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1688, line: 92, size: 80, elements: !1746)
!1746 = !{!1747, !1748, !1749}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1745, file: !1688, line: 93, baseType: !381, size: 8)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1745, file: !1688, line: 94, baseType: !381, size: 8, offset: 8)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1745, file: !1688, line: 96, baseType: !1701, size: 64, offset: 16)
!1750 = !DIGlobalVariableExpression(var: !1751, expr: !DIExpression())
!1751 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1715, file: !1716, line: 127, type: !1752, isLocal: false, isDefinition: true)
!1752 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1489, line: 317, baseType: !1753)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1489, line: 237, size: 2720, elements: !1754)
!1754 = !{!1755, !1756, !1808, !1809, !1812, !1813, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1854, !1855, !1856, !1861, !1862, !1863, !1864, !1865, !1869, !1873, !1880, !1881, !1882, !1883, !1884, !1885, !1886}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1753, file: !1489, line: 238, baseType: !61, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1753, file: !1489, line: 239, baseType: !1757, size: 32, offset: 32)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 32)
!1758 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1489, line: 121, baseType: !1759)
!1759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 105, size: 480, elements: !1760)
!1760 = !{!1761, !1765, !1766, !1770, !1774, !1778, !1779, !1783, !1784, !1785, !1786, !1791, !1796, !1800, !1804}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1759, file: !1489, line: 106, baseType: !1762, size: 32)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 32)
!1763 = !DISubroutineType(types: !1764)
!1764 = !{!7, !88, !88}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1759, file: !1489, line: 107, baseType: !1564, size: 32, offset: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1759, file: !1489, line: 108, baseType: !1767, size: 32, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 32)
!1768 = !DISubroutineType(types: !1769)
!1769 = !{!88, !88, !61, !61}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1759, file: !1489, line: 109, baseType: !1771, size: 32, offset: 96)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 32)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!7, !88, !61}
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1759, file: !1489, line: 110, baseType: !1775, size: 32, offset: 128)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 32)
!1776 = !DISubroutineType(types: !1777)
!1777 = !{!7, !88, !88, !88, !61}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1759, file: !1489, line: 111, baseType: !1771, size: 32, offset: 160)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1759, file: !1489, line: 112, baseType: !1780, size: 32, offset: 192)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 32)
!1781 = !DISubroutineType(types: !1782)
!1782 = !{!1171, !88, !61}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1759, file: !1489, line: 113, baseType: !1771, size: 32, offset: 224)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1759, file: !1489, line: 114, baseType: !1771, size: 32, offset: 256)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1759, file: !1489, line: 115, baseType: !1771, size: 32, offset: 288)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1759, file: !1489, line: 116, baseType: !1787, size: 32, offset: 320)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 32)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!7, !88, !7, !1790, !88, !1790}
!1790 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1296, line: 50, baseType: !18)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1759, file: !1489, line: 117, baseType: !1792, size: 32, offset: 352)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 32)
!1793 = !DISubroutineType(types: !1794)
!1794 = !{!7, !88, !1795}
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 32)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1759, file: !1489, line: 118, baseType: !1797, size: 32, offset: 384)
!1797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1798, size: 32)
!1798 = !DISubroutineType(types: !1799)
!1799 = !{!7, !88, !88, !61}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1759, file: !1489, line: 119, baseType: !1801, size: 32, offset: 416)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 32)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!91, !88, !61}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1759, file: !1489, line: 120, baseType: !1805, size: 32, offset: 448)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 32)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!7, !88, !61, !88}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1753, file: !1489, line: 240, baseType: !88, size: 32, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1753, file: !1489, line: 241, baseType: !1810, size: 32, offset: 96)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 32)
!1811 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1296, line: 46, baseType: !1265)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1753, file: !1489, line: 242, baseType: !1810, size: 32, offset: 128)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1753, file: !1489, line: 243, baseType: !1814, size: 928, offset: 160)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1489, line: 99, baseType: !1815)
!1815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 90, size: 928, elements: !1816)
!1816 = !{!1817, !1818, !1820, !1821, !1822, !1823, !1824, !1825}
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1815, file: !1489, line: 91, baseType: !61, size: 32)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1815, file: !1489, line: 92, baseType: !1819, size: 256, offset: 32)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !987)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1815, file: !1489, line: 93, baseType: !1819, size: 256, offset: 288)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1815, file: !1489, line: 94, baseType: !1819, size: 256, offset: 544)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1815, file: !1489, line: 95, baseType: !61, size: 32, offset: 800)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1815, file: !1489, line: 96, baseType: !1811, size: 16, offset: 832)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1815, file: !1489, line: 97, baseType: !61, size: 32, offset: 864)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1815, file: !1489, line: 98, baseType: !61, size: 32, offset: 896)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1753, file: !1489, line: 244, baseType: !1819, size: 256, offset: 1088)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1753, file: !1489, line: 245, baseType: !1819, size: 256, offset: 1344)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1753, file: !1489, line: 246, baseType: !61, size: 32, offset: 1600)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1753, file: !1489, line: 247, baseType: !61, size: 32, offset: 1632)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1753, file: !1489, line: 248, baseType: !61, size: 32, offset: 1664)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1753, file: !1489, line: 249, baseType: !61, size: 32, offset: 1696)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1753, file: !1489, line: 250, baseType: !61, size: 32, offset: 1728)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1753, file: !1489, line: 252, baseType: !61, size: 32, offset: 1760)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1753, file: !1489, line: 255, baseType: !61, size: 32, offset: 1792)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1753, file: !1489, line: 256, baseType: !61, size: 32, offset: 1824)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1753, file: !1489, line: 257, baseType: !61, size: 32, offset: 1856)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1753, file: !1489, line: 261, baseType: !61, size: 32, offset: 1888)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1753, file: !1489, line: 262, baseType: !61, size: 32, offset: 1920)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1753, file: !1489, line: 263, baseType: !61, size: 32, offset: 1952)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1753, file: !1489, line: 264, baseType: !61, size: 32, offset: 1984)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1753, file: !1489, line: 265, baseType: !61, size: 32, offset: 2016)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1753, file: !1489, line: 266, baseType: !61, size: 32, offset: 2048)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1753, file: !1489, line: 267, baseType: !61, size: 32, offset: 2080)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1753, file: !1489, line: 268, baseType: !61, size: 32, offset: 2112)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1753, file: !1489, line: 270, baseType: !61, size: 32, offset: 2144)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1753, file: !1489, line: 271, baseType: !61, size: 32, offset: 2176)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1753, file: !1489, line: 272, baseType: !1848, size: 32, offset: 2208)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1849, size: 32)
!1849 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1489, line: 229, baseType: !1850)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 226, size: 64, elements: !1851)
!1851 = !{!1852, !1853}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1850, file: !1489, line: 227, baseType: !61, size: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1850, file: !1489, line: 228, baseType: !61, size: 32, offset: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1753, file: !1489, line: 273, baseType: !1729, size: 32, offset: 2240)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1753, file: !1489, line: 274, baseType: !1729, size: 32, offset: 2272)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1753, file: !1489, line: 276, baseType: !1857, size: 32, offset: 2304)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{null, !1860}
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1753, file: !1489, line: 278, baseType: !61, size: 32, offset: 2336)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1753, file: !1489, line: 280, baseType: !1857, size: 32, offset: 2368)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1753, file: !1489, line: 281, baseType: !1857, size: 32, offset: 2400)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1753, file: !1489, line: 283, baseType: !61, size: 32, offset: 2432)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1753, file: !1489, line: 284, baseType: !1866, size: 32, offset: 2464)
!1866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1867, size: 32)
!1867 = !DISubroutineType(types: !1868)
!1868 = !{!61, !1860}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1753, file: !1489, line: 285, baseType: !1870, size: 32, offset: 2496)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 32)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!61, !1860, !61, !61}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1753, file: !1489, line: 293, baseType: !1874, size: 32, offset: 2528)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 32)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1489, line: 162, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 159, size: 64, elements: !1877)
!1877 = !{!1878, !1879}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1876, file: !1489, line: 160, baseType: !61, size: 32)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1876, file: !1489, line: 161, baseType: !61, size: 32, offset: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1753, file: !1489, line: 295, baseType: !61, size: 32, offset: 2560)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1753, file: !1489, line: 296, baseType: !61, size: 32, offset: 2592)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1753, file: !1489, line: 297, baseType: !61, size: 32, offset: 2624)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1753, file: !1489, line: 298, baseType: !1811, size: 16, offset: 2656)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1753, file: !1489, line: 302, baseType: !1811, size: 16, offset: 2672)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1753, file: !1489, line: 310, baseType: !91, size: 8, offset: 2688)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1753, file: !1489, line: 313, baseType: !91, size: 8, offset: 2696)
!1887 = !DIGlobalVariableExpression(var: !1888, expr: !DIExpression())
!1888 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1715, file: !1716, line: 129, type: !61, isLocal: false, isDefinition: true)
!1889 = !DIGlobalVariableExpression(var: !1890, expr: !DIExpression())
!1890 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1715, file: !1716, line: 130, type: !61, isLocal: false, isDefinition: true)
!1891 = !DIGlobalVariableExpression(var: !1892, expr: !DIExpression())
!1892 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1715, file: !1716, line: 131, type: !61, isLocal: false, isDefinition: true)
!1893 = !DIGlobalVariableExpression(var: !1894, expr: !DIExpression())
!1894 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1715, file: !1716, line: 132, type: !1263, isLocal: true, isDefinition: true)
!1895 = !DIGlobalVariableExpression(var: !1896, expr: !DIExpression())
!1896 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1715, file: !1716, line: 136, type: !1897, isLocal: false, isDefinition: true)
!1897 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 4096, elements: !1898)
!1898 = !{!1899}
!1899 = !DISubrange(count: 512)
!1900 = !DIGlobalVariableExpression(var: !1901, expr: !DIExpression())
!1901 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1715, file: !1716, line: 146, type: !1902, isLocal: true, isDefinition: true)
!1902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1732, size: 512, elements: !987)
!1903 = !DIGlobalVariableExpression(var: !1904, expr: !DIExpression())
!1904 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1715, file: !1716, line: 152, type: !1905, isLocal: true, isDefinition: true)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 32)
!1906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1907)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1688, line: 116, baseType: !1908)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1688, line: 113, size: 64, elements: !1909)
!1909 = !{!1910, !1911}
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1908, file: !1688, line: 114, baseType: !61, size: 32)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1908, file: !1688, line: 115, baseType: !61, size: 32, offset: 32)
!1912 = !DIGlobalVariableExpression(var: !1913, expr: !DIExpression())
!1913 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1715, file: !1716, line: 156, type: !61, isLocal: false, isDefinition: true)
!1914 = !DIGlobalVariableExpression(var: !1915, expr: !DIExpression())
!1915 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1715, file: !1716, line: 157, type: !61, isLocal: false, isDefinition: true)
!1916 = !DIGlobalVariableExpression(var: !1917, expr: !DIExpression())
!1917 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1715, file: !1716, line: 160, type: !1918, isLocal: true, isDefinition: true)
!1918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1919, size: 512, elements: !987)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1489, line: 152, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 149, size: 64, elements: !1921)
!1921 = !{!1922, !1923}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1920, file: !1489, line: 150, baseType: !61, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1920, file: !1489, line: 151, baseType: !61, size: 32, offset: 32)
!1924 = !DIGlobalVariableExpression(var: !1925, expr: !DIExpression())
!1925 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1715, file: !1716, line: 173, type: !61, isLocal: false, isDefinition: true)
!1926 = !DIGlobalVariableExpression(var: !1927, expr: !DIExpression())
!1927 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1715, file: !1716, line: 176, type: !1758, isLocal: false, isDefinition: true)
!1928 = !DIGlobalVariableExpression(var: !1929, expr: !DIExpression())
!1929 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1715, file: !1716, line: 177, type: !1930, isLocal: false, isDefinition: true)
!1930 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1387, line: 193, baseType: !1931)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1387, line: 134, size: 1824, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1941, !1947, !1948, !1949, !1950, !1952, !1953, !1954, !1955, !1962, !1963, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1931, file: !1387, line: 136, baseType: !61, size: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1931, file: !1387, line: 137, baseType: !996, size: 32, offset: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1931, file: !1387, line: 138, baseType: !1936, size: 32, offset: 64)
!1936 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1471, line: 56, baseType: !1937)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 32)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1471, line: 54, size: 8, elements: !1939)
!1939 = !{!1940}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1938, file: !1471, line: 55, baseType: !381, size: 8)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1931, file: !1387, line: 139, baseType: !1942, size: 32, offset: 96)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1471, line: 46, baseType: !1943)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 32)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1471, line: 44, size: 8, elements: !1945)
!1945 = !{!1946}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1944, file: !1471, line: 45, baseType: !381, size: 8)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1931, file: !1387, line: 140, baseType: !1483, size: 8, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1931, file: !1387, line: 143, baseType: !1731, size: 32, offset: 160)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1931, file: !1387, line: 144, baseType: !996, size: 32, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1931, file: !1387, line: 145, baseType: !1951, size: 32, offset: 224)
!1951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1931, file: !1387, line: 146, baseType: !996, size: 32, offset: 256)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1931, file: !1387, line: 147, baseType: !61, size: 32, offset: 288)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1931, file: !1387, line: 148, baseType: !996, size: 32, offset: 320)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1931, file: !1387, line: 151, baseType: !1956, size: 1024, offset: 352)
!1956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1957, size: 1024, elements: !1512)
!1957 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1489, line: 170, baseType: !1958)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 167, size: 64, elements: !1959)
!1959 = !{!1960, !1961}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1958, file: !1489, line: 168, baseType: !61, size: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1958, file: !1489, line: 169, baseType: !61, size: 32, offset: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1931, file: !1387, line: 155, baseType: !1514, size: 32, offset: 1376)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1931, file: !1387, line: 156, baseType: !1964, size: 32, offset: 1408)
!1964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1965, size: 32)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1387, line: 124, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1387, line: 90, size: 200, elements: !1967)
!1967 = !{!1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1966, file: !1387, line: 91, baseType: !381, size: 8)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1966, file: !1387, line: 92, baseType: !381, size: 8, offset: 8)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1966, file: !1387, line: 94, baseType: !381, size: 8, offset: 16)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1966, file: !1387, line: 95, baseType: !381, size: 8, offset: 24)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1966, file: !1387, line: 96, baseType: !381, size: 8, offset: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1966, file: !1387, line: 98, baseType: !381, size: 8, offset: 40)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1966, file: !1387, line: 99, baseType: !381, size: 8, offset: 48)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1966, file: !1387, line: 100, baseType: !381, size: 8, offset: 56)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1966, file: !1387, line: 101, baseType: !381, size: 8, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1966, file: !1387, line: 103, baseType: !381, size: 8, offset: 72)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1966, file: !1387, line: 104, baseType: !381, size: 8, offset: 80)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1966, file: !1387, line: 106, baseType: !381, size: 8, offset: 88)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1966, file: !1387, line: 107, baseType: !381, size: 8, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1966, file: !1387, line: 108, baseType: !381, size: 8, offset: 104)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1966, file: !1387, line: 109, baseType: !381, size: 8, offset: 112)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1966, file: !1387, line: 110, baseType: !381, size: 8, offset: 120)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1966, file: !1387, line: 111, baseType: !381, size: 8, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1966, file: !1387, line: 112, baseType: !381, size: 8, offset: 136)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1966, file: !1387, line: 114, baseType: !381, size: 8, offset: 144)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1966, file: !1387, line: 115, baseType: !381, size: 8, offset: 152)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1966, file: !1387, line: 118, baseType: !381, size: 8, offset: 160)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1966, file: !1387, line: 119, baseType: !381, size: 8, offset: 168)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1966, file: !1387, line: 120, baseType: !381, size: 8, offset: 176)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1966, file: !1387, line: 121, baseType: !381, size: 8, offset: 184)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1966, file: !1387, line: 122, baseType: !381, size: 8, offset: 192)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1931, file: !1387, line: 157, baseType: !61, size: 32, offset: 1440)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1931, file: !1387, line: 158, baseType: !1263, size: 16, offset: 1472)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1931, file: !1387, line: 159, baseType: !1263, size: 16, offset: 1488)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1931, file: !1387, line: 163, baseType: !1263, size: 16, offset: 1504)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1931, file: !1387, line: 164, baseType: !1263, size: 16, offset: 1520)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1931, file: !1387, line: 167, baseType: !381, size: 8, offset: 1536)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1931, file: !1387, line: 168, baseType: !1553, size: 24, offset: 1544)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1931, file: !1387, line: 169, baseType: !381, size: 8, offset: 1568)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1931, file: !1387, line: 170, baseType: !381, size: 8, offset: 1576)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1931, file: !1387, line: 173, baseType: !1263, size: 16, offset: 1584)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1931, file: !1387, line: 174, baseType: !61, size: 32, offset: 1600)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1931, file: !1387, line: 175, baseType: !61, size: 32, offset: 1632)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1931, file: !1387, line: 178, baseType: !91, size: 8, offset: 1664)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1931, file: !1387, line: 179, baseType: !91, size: 8, offset: 1672)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1931, file: !1387, line: 182, baseType: !1564, size: 32, offset: 1696)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1931, file: !1387, line: 186, baseType: !1564, size: 32, offset: 1728)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1931, file: !1387, line: 187, baseType: !1569, size: 32, offset: 1760)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1931, file: !1387, line: 188, baseType: !1569, size: 32, offset: 1792)
!2011 = !DIGlobalVariableExpression(var: !2012, expr: !DIExpression())
!2012 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1715, file: !1716, line: 178, type: !2013, isLocal: false, isDefinition: true)
!2013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1515, size: 64, elements: !987)
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1715, file: !1716, line: 179, type: !1965, isLocal: false, isDefinition: true)
!2016 = !DIGlobalVariableExpression(var: !2017, expr: !DIExpression())
!2017 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1715, file: !1716, line: 204, type: !1902, isLocal: true, isDefinition: true)
!2018 = !DIGlobalVariableExpression(var: !2019, expr: !DIExpression())
!2019 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1715, file: !1716, line: 205, type: !2020, isLocal: false, isDefinition: true)
!2020 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !2021, line: 93, baseType: !2022)
!2021 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2022 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2021, line: 83, size: 1056, elements: !2023)
!2023 = !{!2024, !2025, !2026, !2027, !2028}
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !2022, file: !2021, line: 84, baseType: !61, size: 32)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !2022, file: !2021, line: 85, baseType: !1757, size: 32, offset: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !2022, file: !2021, line: 86, baseType: !88, size: 32, offset: 64)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !2022, file: !2021, line: 87, baseType: !1814, size: 928, offset: 96)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !2022, file: !2021, line: 92, baseType: !91, size: 8, offset: 1024)
!2029 = !DIGlobalVariableExpression(var: !2030, expr: !DIExpression())
!2030 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1715, file: !1716, line: 208, type: !1930, isLocal: false, isDefinition: true)
!2031 = !DIGlobalVariableExpression(var: !2032, expr: !DIExpression())
!2032 = distinct !DIGlobalVariable(name: "nor_list", scope: !1715, file: !1716, line: 114, type: !2033, isLocal: true, isDefinition: true)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2035)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1688, line: 125, baseType: !2036)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1688, line: 119, size: 1088, elements: !2037)
!2037 = !{!2038, !2039, !2040, !2041, !2043}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !2036, file: !1688, line: 120, baseType: !1263, size: 16)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !2036, file: !1688, line: 121, baseType: !1263, size: 16, offset: 16)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !2036, file: !1688, line: 122, baseType: !61, size: 32, offset: 32)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !2036, file: !1688, line: 123, baseType: !2042, size: 512, offset: 64)
!2042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1907, size: 512, elements: !987)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2036, file: !1688, line: 124, baseType: !1918, size: 512, offset: 576)
!2044 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression())
!2045 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1715, file: !2046, line: 42, type: !2047, isLocal: true, isDefinition: true)
!2046 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2048)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1716, line: 66, baseType: !2049)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1716, line: 63, size: 5600, elements: !2050)
!2050 = !{!2051, !2058}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !2049, file: !1716, line: 64, baseType: !2052, size: 96)
!2052 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1621, line: 152, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1621, line: 144, size: 96, elements: !2054)
!2054 = !{!2055, !2056, !2057}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !2053, file: !1621, line: 145, baseType: !1681, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !2053, file: !1621, line: 146, baseType: !1683, size: 16, offset: 32)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !2053, file: !1621, line: 150, baseType: !1685, size: 32, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !2049, file: !1716, line: 65, baseType: !2059, size: 5504, offset: 96)
!2059 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1688, line: 132, baseType: !2060)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1688, line: 128, size: 5504, elements: !2061)
!2061 = !{!2062, !2063, !2064}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !2060, file: !1688, line: 129, baseType: !18, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !2060, file: !1688, line: 130, baseType: !18, size: 32, offset: 32)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !2060, file: !1688, line: 131, baseType: !2065, size: 5440, offset: 64)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2035, size: 5440, elements: !1136)
!2066 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1471, line: 79, baseType: !2067)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 32)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1471, line: 77, size: 8, elements: !2069)
!2069 = !{!2070}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2068, file: !1471, line: 78, baseType: !381, size: 8)
!2071 = !DIGlobalVariableExpression(var: !2072, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!2072 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !2073, file: !2074, line: 82, type: !7, isLocal: true, isDefinition: true)
!2073 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2074, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2075, retainedTypes: !2081, globals: !2126, splitDebugInlining: false, nameTableKind: None)
!2074 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2075 = !{!1411, !1295, !2076}
!2076 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1412, line: 123, baseType: !18, size: 32, elements: !2077)
!2077 = !{!2078, !2079, !2080}
!2078 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!2079 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!2080 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!2081 = !{!61, !2082, !88, !996}
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1489, line: 190, baseType: !2084)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 173, size: 1376, elements: !2085)
!2085 = !{!2086, !2087, !2088, !2094, !2100, !2101, !2108, !2109, !2116, !2117, !2118, !2119}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2084, file: !1489, line: 174, baseType: !61, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2084, file: !1489, line: 175, baseType: !1729, size: 32, offset: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2084, file: !1489, line: 176, baseType: !2089, size: 32, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1471, line: 56, baseType: !2090)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 32)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1471, line: 54, size: 8, elements: !2092)
!2092 = !{!2093}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2091, file: !1471, line: 55, baseType: !381, size: 8)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2084, file: !1489, line: 177, baseType: !2095, size: 32, offset: 96)
!2095 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1471, line: 46, baseType: !2096)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1471, line: 44, size: 8, elements: !2098)
!2098 = !{!2099}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2097, file: !1471, line: 45, baseType: !381, size: 8)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2084, file: !1489, line: 178, baseType: !1483, size: 8, offset: 128)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2084, file: !1489, line: 180, baseType: !2102, size: 32, offset: 160)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1489, line: 146, baseType: !2104)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 143, size: 64, elements: !2105)
!2105 = !{!2106, !2107}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2104, file: !1489, line: 144, baseType: !61, size: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2104, file: !1489, line: 145, baseType: !61, size: 32, offset: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2084, file: !1489, line: 181, baseType: !1729, size: 32, offset: 192)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2084, file: !1489, line: 182, baseType: !2110, size: 32, offset: 224)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 32)
!2111 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1489, line: 152, baseType: !2112)
!2112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 149, size: 64, elements: !2113)
!2113 = !{!2114, !2115}
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2112, file: !1489, line: 150, baseType: !61, size: 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2112, file: !1489, line: 151, baseType: !61, size: 32, offset: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2084, file: !1489, line: 183, baseType: !1729, size: 32, offset: 256)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2084, file: !1489, line: 184, baseType: !61, size: 32, offset: 288)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2084, file: !1489, line: 185, baseType: !1729, size: 32, offset: 320)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2084, file: !1489, line: 188, baseType: !2120, size: 1024, offset: 352)
!2120 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2121, size: 1024, elements: !1512)
!2121 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1489, line: 170, baseType: !2122)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 167, size: 64, elements: !2123)
!2123 = !{!2124, !2125}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2122, file: !1489, line: 168, baseType: !61, size: 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2122, file: !1489, line: 169, baseType: !61, size: 32, offset: 32)
!2126 = !{!2127, !2128}
!2127 = !DIGlobalVariableExpression(var: !2072, expr: !DIExpression())
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !2073, file: !2074, line: 432, type: !2130, isLocal: true, isDefinition: true)
!2130 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1412, line: 119, baseType: !1411)
!2131 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression())
!2133 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !2134, file: !2135, line: 60, type: !61, isLocal: false, isDefinition: true)
!2134 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2135, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2136, retainedTypes: !2144, globals: !2145, splitDebugInlining: false, nameTableKind: None)
!2135 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2136 = !{!2137}
!2137 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 387, baseType: !7, size: 32, elements: !2138)
!2138 = !{!2139, !2140, !2141, !2142, !2143}
!2139 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!2140 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!2141 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!2142 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!2143 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!2144 = !{!88, !61}
!2145 = !{!2132, !2146, !2148, !2150, !2152, !2154, !2208, !2210}
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !2134, file: !2135, line: 61, type: !61, isLocal: false, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !2134, file: !2135, line: 107, type: !61, isLocal: false, isDefinition: true)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2134, file: !2135, line: 132, type: !91, isLocal: false, isDefinition: true)
!2152 = !DIGlobalVariableExpression(var: !2153, expr: !DIExpression())
!2153 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2134, file: !2135, line: 133, type: !91, isLocal: false, isDefinition: true)
!2154 = !DIGlobalVariableExpression(var: !2155, expr: !DIExpression())
!2155 = distinct !DIGlobalVariable(name: "replaced", scope: !2156, file: !2135, line: 139, type: !61, isLocal: true, isDefinition: true)
!2156 = distinct !DISubprogram(name: "LookupAddress", scope: !2135, file: !2135, line: 135, type: !2157, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !2159)
!2157 = !DISubroutineType(types: !2158)
!2158 = !{!61, !88, !61}
!2159 = !{!2160, !2161, !2162, !2207}
!2160 = !DILocalVariable(name: "DriveData", arg: 1, scope: !2156, file: !2135, line: 135, type: !88)
!2161 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2156, file: !2135, line: 135, type: !61)
!2162 = !DILocalVariable(name: "D", scope: !2156, file: !2135, line: 137, type: !2163)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 32)
!2164 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1489, line: 190, baseType: !2165)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 173, size: 1376, elements: !2166)
!2166 = !{!2167, !2168, !2169, !2175, !2181, !2182, !2189, !2190, !2197, !2198, !2199, !2200}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2165, file: !1489, line: 174, baseType: !61, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2165, file: !1489, line: 175, baseType: !1729, size: 32, offset: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2165, file: !1489, line: 176, baseType: !2170, size: 32, offset: 64)
!2170 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1471, line: 56, baseType: !2171)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 32)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1471, line: 54, size: 8, elements: !2173)
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2172, file: !1471, line: 55, baseType: !381, size: 8)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2165, file: !1489, line: 177, baseType: !2176, size: 32, offset: 96)
!2176 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1471, line: 46, baseType: !2177)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 32)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1471, line: 44, size: 8, elements: !2179)
!2179 = !{!2180}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2178, file: !1471, line: 45, baseType: !381, size: 8)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2165, file: !1489, line: 178, baseType: !1483, size: 8, offset: 128)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2165, file: !1489, line: 180, baseType: !2183, size: 32, offset: 160)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1489, line: 146, baseType: !2185)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 143, size: 64, elements: !2186)
!2186 = !{!2187, !2188}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2185, file: !1489, line: 144, baseType: !61, size: 32)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2185, file: !1489, line: 145, baseType: !61, size: 32, offset: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2165, file: !1489, line: 181, baseType: !1729, size: 32, offset: 192)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2165, file: !1489, line: 182, baseType: !2191, size: 32, offset: 224)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1489, line: 152, baseType: !2193)
!2193 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 149, size: 64, elements: !2194)
!2194 = !{!2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2193, file: !1489, line: 150, baseType: !61, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2193, file: !1489, line: 151, baseType: !61, size: 32, offset: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2165, file: !1489, line: 183, baseType: !1729, size: 32, offset: 256)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2165, file: !1489, line: 184, baseType: !61, size: 32, offset: 288)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2165, file: !1489, line: 185, baseType: !1729, size: 32, offset: 320)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2165, file: !1489, line: 188, baseType: !2201, size: 1024, offset: 352)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2202, size: 1024, elements: !1512)
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1489, line: 170, baseType: !2203)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 167, size: 64, elements: !2204)
!2204 = !{!2205, !2206}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2203, file: !1489, line: 168, baseType: !61, size: 32)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2203, file: !1489, line: 169, baseType: !61, size: 32, offset: 32)
!2207 = !DILocalVariable(name: "addr", scope: !2156, file: !2135, line: 138, type: !61)
!2208 = !DIGlobalVariableExpression(var: !2209, expr: !DIExpression())
!2209 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !2156, file: !2135, line: 140, type: !61, isLocal: true, isDefinition: true)
!2210 = !DIGlobalVariableExpression(var: !2211, expr: !DIExpression())
!2211 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !2156, file: !2135, line: 141, type: !61, isLocal: true, isDefinition: true)
!2212 = !DIGlobalVariableExpression(var: !2213, expr: !DIExpression())
!2213 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2214, file: !2215, line: 44, type: !2361, isLocal: false, isDefinition: true)
!2214 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2215, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2216, retainedTypes: !2222, globals: !2223, splitDebugInlining: false, nameTableKind: None)
!2215 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2216 = !{!2217}
!2217 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2218, line: 40, baseType: !18, size: 32, elements: !2219)
!2218 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2219 = !{!2220, !2221}
!2220 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2221 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2222 = !{!1268}
!2223 = !{!2212, !2224, !2226, !2228, !2230, !2331, !2333, !2335, !2337, !2339, !2341, !2343, !2345, !2347, !2349, !2351, !2353, !2355, !2357, !2359}
!2224 = !DIGlobalVariableExpression(var: !2225, expr: !DIExpression())
!2225 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2214, file: !2215, line: 65, type: !61, isLocal: false, isDefinition: true)
!2226 = !DIGlobalVariableExpression(var: !2227, expr: !DIExpression())
!2227 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2214, file: !2215, line: 66, type: !61, isLocal: false, isDefinition: true)
!2228 = !DIGlobalVariableExpression(var: !2229, expr: !DIExpression())
!2229 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2214, file: !2215, line: 67, type: !61, isLocal: false, isDefinition: true)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(name: "emi_register", scope: !2214, file: !2215, line: 83, type: !2232, isLocal: false, isDefinition: true)
!2232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2233, size: 32)
!2233 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2234)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2235)
!2235 = !{!2236, !2240, !2241, !2242, !2243, !2247, !2248, !2250, !2251, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2234, file: !56, line: 2448, baseType: !2237, size: 768)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 768, elements: !2238)
!2238 = !{!2239}
!2239 = !DISubrange(count: 96)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2234, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2234, file: !56, line: 2450, baseType: !1120, size: 96, offset: 800)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2234, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2234, file: !56, line: 2452, baseType: !2244, size: 160, offset: 928)
!2244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 160, elements: !2245)
!2245 = !{!2246}
!2246 = !DISubrange(count: 20)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2234, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2234, file: !56, line: 2454, baseType: !2249, size: 32, offset: 1120)
!2249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 32, elements: !733)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2234, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2234, file: !56, line: 2456, baseType: !2252, size: 480, offset: 1184)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 480, elements: !2253)
!2253 = !{!2254}
!2254 = !DISubrange(count: 60)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2234, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2234, file: !56, line: 2458, baseType: !2249, size: 32, offset: 1696)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2234, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2234, file: !56, line: 2460, baseType: !2249, size: 32, offset: 1760)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2234, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2234, file: !56, line: 2462, baseType: !2244, size: 160, offset: 1824)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2234, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2234, file: !56, line: 2464, baseType: !2249, size: 32, offset: 2016)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2234, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2234, file: !56, line: 2466, baseType: !2249, size: 32, offset: 2080)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2234, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2234, file: !56, line: 2468, baseType: !2249, size: 32, offset: 2144)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2234, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2234, file: !56, line: 2470, baseType: !2269, size: 224, offset: 2208)
!2269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 224, elements: !2270)
!2270 = !{!2271}
!2271 = !DISubrange(count: 28)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2234, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2234, file: !56, line: 2472, baseType: !2249, size: 32, offset: 2464)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2234, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2234, file: !56, line: 2474, baseType: !1120, size: 96, offset: 2528)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2234, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2234, file: !56, line: 2476, baseType: !2249, size: 32, offset: 2656)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2234, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2234, file: !56, line: 2478, baseType: !2249, size: 32, offset: 2720)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2234, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2234, file: !56, line: 2480, baseType: !2249, size: 32, offset: 2784)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2234, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2234, file: !56, line: 2482, baseType: !1120, size: 96, offset: 2848)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2234, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2234, file: !56, line: 2484, baseType: !2249, size: 32, offset: 2976)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2234, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2234, file: !56, line: 2486, baseType: !2249, size: 32, offset: 3040)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2234, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2234, file: !56, line: 2488, baseType: !2244, size: 160, offset: 3104)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2234, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2234, file: !56, line: 2490, baseType: !2249, size: 32, offset: 3296)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2234, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2234, file: !56, line: 2492, baseType: !2294, size: 736, offset: 3360)
!2294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 736, elements: !2295)
!2295 = !{!2296}
!2296 = !DISubrange(count: 92)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2234, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2234, file: !56, line: 2494, baseType: !2249, size: 32, offset: 4128)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2234, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2234, file: !56, line: 2496, baseType: !2249, size: 32, offset: 4192)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2234, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2234, file: !56, line: 2498, baseType: !2249, size: 32, offset: 4256)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2234, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2234, file: !56, line: 2500, baseType: !2249, size: 32, offset: 4320)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2234, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2234, file: !56, line: 2502, baseType: !2249, size: 32, offset: 4384)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2234, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2234, file: !56, line: 2504, baseType: !2249, size: 32, offset: 4448)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2234, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2234, file: !56, line: 2506, baseType: !2249, size: 32, offset: 4512)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2234, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2234, file: !56, line: 2508, baseType: !2249, size: 32, offset: 4576)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2234, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2234, file: !56, line: 2510, baseType: !2252, size: 480, offset: 4640)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2234, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2234, file: !56, line: 2512, baseType: !2317, size: 992, offset: 5152)
!2317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !380, size: 992, elements: !2318)
!2318 = !{!2319}
!2319 = !DISubrange(count: 124)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2234, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2234, file: !56, line: 2514, baseType: !2249, size: 32, offset: 6176)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2234, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2234, file: !56, line: 2516, baseType: !2249, size: 32, offset: 6240)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2234, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2234, file: !56, line: 2518, baseType: !2249, size: 32, offset: 6304)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2234, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2234, file: !56, line: 2520, baseType: !2244, size: 160, offset: 6368)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2234, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2234, file: !56, line: 2522, baseType: !2244, size: 160, offset: 6560)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2234, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2331 = !DIGlobalVariableExpression(var: !2332, expr: !DIExpression())
!2332 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2214, file: !2215, line: 485, type: !60, isLocal: false, isDefinition: true)
!2333 = !DIGlobalVariableExpression(var: !2334, expr: !DIExpression())
!2334 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2214, file: !2215, line: 68, type: !61, isLocal: false, isDefinition: true)
!2335 = !DIGlobalVariableExpression(var: !2336, expr: !DIExpression())
!2336 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2214, file: !2215, line: 69, type: !61, isLocal: false, isDefinition: true)
!2337 = !DIGlobalVariableExpression(var: !2338, expr: !DIExpression())
!2338 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2214, file: !2215, line: 70, type: !61, isLocal: false, isDefinition: true)
!2339 = !DIGlobalVariableExpression(var: !2340, expr: !DIExpression())
!2340 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2214, file: !2215, line: 71, type: !61, isLocal: false, isDefinition: true)
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2214, file: !2215, line: 72, type: !61, isLocal: false, isDefinition: true)
!2343 = !DIGlobalVariableExpression(var: !2344, expr: !DIExpression())
!2344 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2214, file: !2215, line: 73, type: !61, isLocal: false, isDefinition: true)
!2345 = !DIGlobalVariableExpression(var: !2346, expr: !DIExpression())
!2346 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2214, file: !2215, line: 74, type: !61, isLocal: false, isDefinition: true)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2214, file: !2215, line: 75, type: !61, isLocal: false, isDefinition: true)
!2349 = !DIGlobalVariableExpression(var: !2350, expr: !DIExpression())
!2350 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2214, file: !2215, line: 76, type: !61, isLocal: false, isDefinition: true)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2214, file: !2215, line: 77, type: !61, isLocal: false, isDefinition: true)
!2353 = !DIGlobalVariableExpression(var: !2354, expr: !DIExpression())
!2354 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2214, file: !2215, line: 78, type: !61, isLocal: false, isDefinition: true)
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2214, file: !2215, line: 79, type: !61, isLocal: false, isDefinition: true)
!2357 = !DIGlobalVariableExpression(var: !2358, expr: !DIExpression())
!2358 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2214, file: !2215, line: 80, type: !61, isLocal: false, isDefinition: true)
!2359 = !DIGlobalVariableExpression(var: !2360, expr: !DIExpression())
!2360 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2214, file: !2215, line: 84, type: !2233, isLocal: false, isDefinition: true)
!2361 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2362, size: 416, elements: !76)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2218, line: 60, baseType: !2363)
!2363 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2218, line: 45, size: 416, elements: !2364)
!2364 = !{!2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377}
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2363, file: !2218, line: 46, baseType: !61, size: 32)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2363, file: !2218, line: 47, baseType: !61, size: 32, offset: 32)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2363, file: !2218, line: 48, baseType: !61, size: 32, offset: 64)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2363, file: !2218, line: 49, baseType: !61, size: 32, offset: 96)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2363, file: !2218, line: 50, baseType: !61, size: 32, offset: 128)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2363, file: !2218, line: 51, baseType: !61, size: 32, offset: 160)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2363, file: !2218, line: 52, baseType: !61, size: 32, offset: 192)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2363, file: !2218, line: 53, baseType: !61, size: 32, offset: 224)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2363, file: !2218, line: 54, baseType: !61, size: 32, offset: 256)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2363, file: !2218, line: 55, baseType: !61, size: 32, offset: 288)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2363, file: !2218, line: 56, baseType: !61, size: 32, offset: 320)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2363, file: !2218, line: 57, baseType: !61, size: 32, offset: 352)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2363, file: !2218, line: 58, baseType: !61, size: 32, offset: 384)
!2378 = !DIGlobalVariableExpression(var: !2379, expr: !DIExpression())
!2379 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2380, file: !2381, line: 48, type: !2389, isLocal: false, isDefinition: true)
!2380 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2381, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2382, globals: !2388, splitDebugInlining: false, nameTableKind: None)
!2381 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2382 = !{!2383}
!2383 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1210, line: 100, baseType: !18, size: 32, elements: !2384)
!2384 = !{!2385, !2386, !2387}
!2385 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2386 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2387 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2388 = !{!2378}
!2389 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1210, line: 104, baseType: !2383)
!2390 = !DIGlobalVariableExpression(var: !2391, expr: !DIExpression())
!2391 = distinct !DIGlobalVariable(name: "source_data", scope: !2392, file: !2393, line: 52, type: !2400, isLocal: true, isDefinition: true, align: 32)
!2392 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2393, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2394, retainedTypes: !2144, globals: !2395, splitDebugInlining: false, nameTableKind: None)
!2393 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2394 = !{!897, !922, !938, !944, !948, !621, !355, !370}
!2395 = !{!2396, !2390, !2398}
!2396 = !DIGlobalVariableExpression(var: !2397, expr: !DIExpression())
!2397 = distinct !DIGlobalVariable(name: "dma_length", scope: !2392, file: !2393, line: 51, type: !61, isLocal: true, isDefinition: true)
!2398 = !DIGlobalVariableExpression(var: !2399, expr: !DIExpression())
!2399 = distinct !DIGlobalVariable(name: "destination_data", scope: !2392, file: !2393, line: 53, type: !2400, isLocal: true, isDefinition: true, align: 32)
!2400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !381, size: 512, elements: !1184)
!2401 = !DIGlobalVariableExpression(var: !2402, expr: !DIExpression())
!2402 = distinct !DIGlobalVariable(name: "heap_end", scope: !2403, file: !2404, line: 69, type: !2409, isLocal: true, isDefinition: true)
!2403 = distinct !DISubprogram(name: "_sbrk_r", scope: !2404, file: !2404, line: 66, type: !2405, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !2600)
!2404 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2405 = !DISubroutineType(types: !2406)
!2406 = !{!2407, !2410, !2595}
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2408, line: 123, baseType: !2409)
!2408 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2411, size: 32)
!2411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2412, line: 377, size: 1920, elements: !2413)
!2412 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2413 = !{!2414, !2415, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2494, !2515, !2519, !2520, !2521, !2522, !2532, !2545, !2546, !2551, !2569, !2570, !2577, !2578, !2594}
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2411, file: !2412, line: 381, baseType: !7, size: 32)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2411, file: !2412, line: 386, baseType: !2416, size: 32, offset: 32)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 32)
!2417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2412, line: 292, baseType: !2418)
!2418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2412, line: 186, size: 832, elements: !2419)
!2419 = !{!2420, !2422, !2423, !2424, !2425, !2426, !2431, !2432, !2433, !2434, !2438, !2443, !2450, !2454, !2455, !2456, !2457, !2459, !2461, !2462, !2463, !2465, !2471, !2484}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2418, file: !2412, line: 187, baseType: !2421, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2418, file: !2412, line: 188, baseType: !7, size: 32, offset: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2418, file: !2412, line: 189, baseType: !7, size: 32, offset: 64)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2418, file: !2412, line: 190, baseType: !1668, size: 16, offset: 96)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2418, file: !2412, line: 191, baseType: !1668, size: 16, offset: 112)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2418, file: !2412, line: 192, baseType: !2427, size: 64, offset: 128)
!2427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2412, line: 122, size: 64, elements: !2428)
!2428 = !{!2429, !2430}
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2427, file: !2412, line: 123, baseType: !2421, size: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2427, file: !2412, line: 124, baseType: !7, size: 32, offset: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2418, file: !2412, line: 193, baseType: !7, size: 32, offset: 192)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2418, file: !2412, line: 196, baseType: !2410, size: 32, offset: 224)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2418, file: !2412, line: 200, baseType: !88, size: 32, offset: 256)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2418, file: !2412, line: 202, baseType: !2435, size: 32, offset: 288)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 32)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!7, !2410, !88, !2409, !7}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2418, file: !2412, line: 204, baseType: !2439, size: 32, offset: 320)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 32)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{!7, !2410, !88, !2442, !7}
!2442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 32)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2418, file: !2412, line: 207, baseType: !2444, size: 32, offset: 352)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2445, size: 32)
!2445 = !DISubroutineType(types: !2446)
!2446 = !{!2447, !2410, !88, !2447, !7}
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2448, line: 116, baseType: !2449)
!2448 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2449 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2418, file: !2412, line: 208, baseType: !2451, size: 32, offset: 384)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 32)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!7, !2410, !88}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2418, file: !2412, line: 211, baseType: !2427, size: 64, offset: 416)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2418, file: !2412, line: 212, baseType: !2421, size: 32, offset: 480)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2418, file: !2412, line: 213, baseType: !7, size: 32, offset: 512)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2418, file: !2412, line: 216, baseType: !2458, size: 24, offset: 544)
!2458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 24, elements: !1554)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2418, file: !2412, line: 217, baseType: !2460, size: 8, offset: 568)
!2460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 8, elements: !76)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2418, file: !2412, line: 220, baseType: !2427, size: 64, offset: 576)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2418, file: !2412, line: 223, baseType: !7, size: 32, offset: 640)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2418, file: !2412, line: 224, baseType: !2464, size: 32, offset: 672)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2448, line: 46, baseType: !2449)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2418, file: !2412, line: 231, baseType: !2466, size: 32, offset: 704)
!2466 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2412, line: 35, baseType: !2467)
!2467 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2468, line: 34, baseType: !2469)
!2468 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 32)
!2470 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2468, line: 33, flags: DIFlagFwdDecl)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2418, file: !2412, line: 233, baseType: !2472, size: 64, offset: 736)
!2472 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2448, line: 170, baseType: !2473)
!2473 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2448, line: 162, size: 64, elements: !2474)
!2474 = !{!2475, !2476}
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2473, file: !2448, line: 164, baseType: !7, size: 32)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2473, file: !2448, line: 169, baseType: !2477, size: 32, offset: 32)
!2477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2473, file: !2448, line: 165, size: 32, elements: !2478)
!2478 = !{!2479, !2482}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2477, file: !2448, line: 167, baseType: !2480, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2481, line: 116, baseType: !7)
!2481 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2477, file: !2448, line: 168, baseType: !2483, size: 32)
!2483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 32, elements: !733)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2418, file: !2412, line: 234, baseType: !7, size: 32, offset: 800)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2411, file: !2412, line: 386, baseType: !2416, size: 32, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2411, file: !2412, line: 386, baseType: !2416, size: 32, offset: 96)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2411, file: !2412, line: 388, baseType: !7, size: 32, offset: 128)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2411, file: !2412, line: 390, baseType: !2409, size: 32, offset: 160)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2411, file: !2412, line: 392, baseType: !7, size: 32, offset: 192)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2411, file: !2412, line: 394, baseType: !7, size: 32, offset: 224)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2411, file: !2412, line: 395, baseType: !2492, size: 32, offset: 256)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 32)
!2493 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2412, line: 45, flags: DIFlagFwdDecl)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2411, file: !2412, line: 397, baseType: !2495, size: 32, offset: 288)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2412, line: 349, size: 128, elements: !2497)
!2497 = !{!2498, !2511, !2512, !2513}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2496, file: !2412, line: 352, baseType: !2499, size: 32)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 32)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2412, line: 52, size: 192, elements: !2501)
!2501 = !{!2502, !2503, !2504, !2505, !2506, !2507}
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2500, file: !2412, line: 54, baseType: !2499, size: 32)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2500, file: !2412, line: 55, baseType: !7, size: 32, offset: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2500, file: !2412, line: 55, baseType: !7, size: 32, offset: 64)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2500, file: !2412, line: 55, baseType: !7, size: 32, offset: 96)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2500, file: !2412, line: 55, baseType: !7, size: 32, offset: 128)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2500, file: !2412, line: 56, baseType: !2508, size: 32, offset: 160)
!2508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2509, size: 32, elements: !76)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2412, line: 22, baseType: !2510)
!2510 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2496, file: !2412, line: 353, baseType: !7, size: 32, offset: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2496, file: !2412, line: 354, baseType: !2499, size: 32, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2496, file: !2412, line: 355, baseType: !2514, size: 32, offset: 96)
!2514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2499, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2411, file: !2412, line: 399, baseType: !2516, size: 32, offset: 320)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 32)
!2517 = !DISubroutineType(types: !2518)
!2518 = !{null, !2410}
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2411, file: !2412, line: 401, baseType: !7, size: 32, offset: 352)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2411, file: !2412, line: 404, baseType: !7, size: 32, offset: 384)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2411, file: !2412, line: 405, baseType: !2409, size: 32, offset: 416)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2411, file: !2412, line: 407, baseType: !2523, size: 32, offset: 448)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 32)
!2524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2412, line: 324, size: 192, elements: !2525)
!2525 = !{!2526, !2528, !2529, !2530}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2524, file: !2412, line: 325, baseType: !2527, size: 48)
!2527 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1265, size: 48, elements: !1554)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2524, file: !2412, line: 326, baseType: !2527, size: 48, offset: 48)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2524, file: !2412, line: 327, baseType: !1265, size: 16, offset: 96)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2524, file: !2412, line: 330, baseType: !2531, size: 64, offset: 128)
!2531 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2411, file: !2412, line: 408, baseType: !2533, size: 32, offset: 480)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 32)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2412, line: 60, size: 288, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2534, file: !2412, line: 62, baseType: !7, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2534, file: !2412, line: 63, baseType: !7, size: 32, offset: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2534, file: !2412, line: 64, baseType: !7, size: 32, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2534, file: !2412, line: 65, baseType: !7, size: 32, offset: 96)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2534, file: !2412, line: 66, baseType: !7, size: 32, offset: 128)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2534, file: !2412, line: 67, baseType: !7, size: 32, offset: 160)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2534, file: !2412, line: 68, baseType: !7, size: 32, offset: 192)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2534, file: !2412, line: 69, baseType: !7, size: 32, offset: 224)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2534, file: !2412, line: 70, baseType: !7, size: 32, offset: 256)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2411, file: !2412, line: 409, baseType: !2409, size: 32, offset: 512)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2411, file: !2412, line: 412, baseType: !2547, size: 32, offset: 544)
!2547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2548, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 32)
!2549 = !DISubroutineType(types: !2550)
!2550 = !{null, !7}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2411, file: !2412, line: 416, baseType: !2552, size: 32, offset: 576)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 32)
!2553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2412, line: 90, size: 1120, elements: !2554)
!2554 = !{!2555, !2556, !2557, !2560}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2553, file: !2412, line: 91, baseType: !2552, size: 32)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2553, file: !2412, line: 92, baseType: !7, size: 32, offset: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2553, file: !2412, line: 93, baseType: !2558, size: 1024, offset: 64)
!2558 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2559, size: 1024, elements: !330)
!2559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2553, file: !2412, line: 94, baseType: !2561, size: 32, offset: 1088)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 32)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2412, line: 79, size: 2112, elements: !2563)
!2563 = !{!2564, !2566, !2567, !2568}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2562, file: !2412, line: 80, baseType: !2565, size: 1024)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !330)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2562, file: !2412, line: 81, baseType: !2565, size: 1024, offset: 1024)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2562, file: !2412, line: 83, baseType: !2509, size: 32, offset: 2048)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2562, file: !2412, line: 86, baseType: !2509, size: 32, offset: 2080)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2411, file: !2412, line: 417, baseType: !2553, size: 1120, offset: 608)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2411, file: !2412, line: 420, baseType: !2571, size: 96, offset: 1728)
!2571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2412, line: 296, size: 96, elements: !2572)
!2572 = !{!2573, !2575, !2576}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2571, file: !2412, line: 298, baseType: !2574, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2571, file: !2412, line: 299, baseType: !7, size: 32, offset: 32)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2571, file: !2412, line: 300, baseType: !2416, size: 32, offset: 64)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2411, file: !2412, line: 421, baseType: !2416, size: 32, offset: 1824)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2411, file: !2412, line: 422, baseType: !2579, size: 32, offset: 1856)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 32)
!2580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2412, line: 359, size: 640, elements: !2581)
!2581 = !{!2582, !2583, !2584, !2585, !2586, !2588, !2589, !2590, !2591, !2592, !2593}
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2580, file: !2412, line: 362, baseType: !2409, size: 32)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2580, file: !2412, line: 363, baseType: !2472, size: 64, offset: 32)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2580, file: !2412, line: 364, baseType: !2472, size: 64, offset: 96)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2580, file: !2412, line: 365, baseType: !2472, size: 64, offset: 160)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2580, file: !2412, line: 366, baseType: !2587, size: 64, offset: 224)
!2587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1710, size: 64, elements: !987)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2580, file: !2412, line: 367, baseType: !7, size: 32, offset: 288)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2580, file: !2412, line: 368, baseType: !2472, size: 64, offset: 320)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2580, file: !2412, line: 369, baseType: !2472, size: 64, offset: 384)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2580, file: !2412, line: 370, baseType: !2472, size: 64, offset: 448)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2580, file: !2412, line: 371, baseType: !2472, size: 64, offset: 512)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2580, file: !2412, line: 372, baseType: !2472, size: 64, offset: 576)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2411, file: !2412, line: 423, baseType: !2409, size: 32, offset: 1888)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2481, line: 46, baseType: !18)
!2596 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2597, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2598, globals: !2599, splitDebugInlining: false, nameTableKind: None)
!2597 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2598 = !{!2409, !2407}
!2599 = !{!2401}
!2600 = !{!2601, !2602, !2603, !2604}
!2601 = !DILocalVariable(name: "r", arg: 1, scope: !2403, file: !2404, line: 66, type: !2410)
!2602 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2403, file: !2404, line: 66, type: !2595)
!2603 = !DILocalVariable(name: "prev_heap_end", scope: !2403, file: !2404, line: 70, type: !2409)
!2604 = !DILocalVariable(name: "stack", scope: !2403, file: !2404, line: 71, type: !2409)
!2605 = !DIGlobalVariableExpression(var: !2606, expr: !DIExpression())
!2606 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2607, file: !2608, line: 52, type: !60, isLocal: true, isDefinition: true)
!2607 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2608, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2609, globals: !2712, splitDebugInlining: false, nameTableKind: None)
!2608 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2609 = !{!2610, !2618, !61, !2663, !2668, !2693}
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2611, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1110, line: 656, baseType: !2612)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1110, line: 650, size: 128, elements: !2613)
!2613 = !{!2614, !2615, !2616, !2617}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2612, file: !1110, line: 652, baseType: !60, size: 32)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2612, file: !1110, line: 653, baseType: !60, size: 32, offset: 32)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2612, file: !1110, line: 654, baseType: !60, size: 32, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2612, file: !1110, line: 655, baseType: !272, size: 32, offset: 96)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 32)
!2619 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2620)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2621)
!2621 = !{!2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2632, !2633, !2637, !2638, !2640, !2641, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2660, !2661, !2662}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2620, file: !56, line: 1922, baseType: !60, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2620, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2620, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2620, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2620, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2620, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2620, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2620, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2620, file: !56, line: 1930, baseType: !2631, size: 768, offset: 256)
!2631 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !1149)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2620, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2620, file: !56, line: 1932, baseType: !2634, size: 992, offset: 1056)
!2634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2635)
!2635 = !{!2636}
!2636 = !DISubrange(count: 31)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2620, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2620, file: !56, line: 1934, baseType: !2639, size: 416, offset: 2080)
!2639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !1007)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2620, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2620, file: !56, line: 1936, baseType: !2642, size: 1568, offset: 2528)
!2642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2643)
!2643 = !{!2644}
!2644 = !DISubrange(count: 49)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2620, file: !56, line: 1937, baseType: !272, size: 32, offset: 4096)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2620, file: !56, line: 1938, baseType: !272, size: 32, offset: 4128)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2620, file: !56, line: 1939, baseType: !272, size: 32, offset: 4160)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2620, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2620, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2620, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2620, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2620, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2620, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2620, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2620, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2620, file: !56, line: 1948, baseType: !2657, size: 3744, offset: 4448)
!2657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2658)
!2658 = !{!2659}
!2659 = !DISubrange(count: 117)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2620, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2620, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2620, file: !56, line: 1951, baseType: !272, size: 32, offset: 8256)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 32)
!2664 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2665)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2666)
!2666 = !{!2667}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2665, file: !56, line: 2157, baseType: !60, size: 32)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 32)
!2669 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1110, line: 418, baseType: !2670)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1110, line: 395, size: 1120, elements: !2671)
!2671 = !{!2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2670, file: !1110, line: 397, baseType: !272, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2670, file: !1110, line: 398, baseType: !60, size: 32, offset: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2670, file: !1110, line: 399, baseType: !60, size: 32, offset: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2670, file: !1110, line: 400, baseType: !60, size: 32, offset: 96)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2670, file: !1110, line: 401, baseType: !60, size: 32, offset: 128)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2670, file: !1110, line: 402, baseType: !60, size: 32, offset: 160)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2670, file: !1110, line: 403, baseType: !1120, size: 96, offset: 192)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2670, file: !1110, line: 404, baseType: !60, size: 32, offset: 288)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2670, file: !1110, line: 405, baseType: !60, size: 32, offset: 320)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2670, file: !1110, line: 406, baseType: !60, size: 32, offset: 352)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2670, file: !1110, line: 407, baseType: !60, size: 32, offset: 384)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2670, file: !1110, line: 408, baseType: !60, size: 32, offset: 416)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2670, file: !1110, line: 409, baseType: !60, size: 32, offset: 448)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2670, file: !1110, line: 410, baseType: !60, size: 32, offset: 480)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2670, file: !1110, line: 411, baseType: !1129, size: 64, offset: 512)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2670, file: !1110, line: 412, baseType: !272, size: 32, offset: 576)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2670, file: !1110, line: 413, baseType: !272, size: 32, offset: 608)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2670, file: !1110, line: 414, baseType: !1133, size: 128, offset: 640)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2670, file: !1110, line: 415, baseType: !1135, size: 160, offset: 768)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2670, file: !1110, line: 416, baseType: !1139, size: 160, offset: 928)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2670, file: !1110, line: 417, baseType: !60, size: 32, offset: 1088)
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2695)
!2695 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2696)
!2696 = !{!2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711}
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2695, file: !56, line: 261, baseType: !60, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2695, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2695, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2695, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2695, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2695, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2695, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2695, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2695, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2695, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2695, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2695, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2695, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2695, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2695, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2712 = !{!2713, !2605}
!2713 = !DIGlobalVariableExpression(var: !2714, expr: !DIExpression())
!2714 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2607, file: !2608, line: 50, type: !61, isLocal: false, isDefinition: true)
!2715 = !DIGlobalVariableExpression(var: !2716, expr: !DIExpression())
!2716 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2717, file: !2722, line: 4, type: !2728, isLocal: false, isDefinition: true)
!2717 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2718, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2719, splitDebugInlining: false, nameTableKind: None)
!2718 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2719 = !{!2715, !2720, !2726}
!2720 = !DIGlobalVariableExpression(var: !2721, expr: !DIExpression())
!2721 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2717, file: !2722, line: 5, type: !2723, isLocal: false, isDefinition: true)
!2722 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1710, size: 88, elements: !2724)
!2724 = !{!2725}
!2725 = !DISubrange(count: 11)
!2726 = !DIGlobalVariableExpression(var: !2727, expr: !DIExpression())
!2727 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2717, file: !2722, line: 6, type: !2723, isLocal: false, isDefinition: true)
!2728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1710, size: 248, elements: !2635)
!2729 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2730, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2731, retainedTypes: !2754, splitDebugInlining: false, nameTableKind: None)
!2730 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2731 = !{!2137, !245, !259, !2732, !2736, !254, !157}
!2732 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 857, baseType: !18, size: 32, elements: !2733)
!2733 = !{!2734, !2735}
!2734 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2735 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2736 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 87, baseType: !18, size: 32, elements: !2737)
!2737 = !{!2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753}
!2738 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2739 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2740 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2741 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2742 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2743 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2744 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2745 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2746 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2747 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2748 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2749 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2750 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2751 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2752 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2753 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2754 = !{!61, !88, !307}
!2755 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2756, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2757, splitDebugInlining: false, nameTableKind: None)
!2756 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gdma_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2757 = !{!364}
!2758 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2759, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2760, retainedTypes: !2761, splitDebugInlining: false, nameTableKind: None)
!2759 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2760 = !{!938, !944, !948, !1020}
!2761 = !{!381}
!2762 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2763, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2764, retainedTypes: !2765, splitDebugInlining: false, nameTableKind: None)
!2763 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2764 = !{!168, !953}
!2765 = !{!556, !2766, !61, !2791, !1171}
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 32)
!2767 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1110, line: 418, baseType: !2768)
!2768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1110, line: 395, size: 1120, elements: !2769)
!2769 = !{!2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790}
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2768, file: !1110, line: 397, baseType: !272, size: 32)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2768, file: !1110, line: 398, baseType: !60, size: 32, offset: 32)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2768, file: !1110, line: 399, baseType: !60, size: 32, offset: 64)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2768, file: !1110, line: 400, baseType: !60, size: 32, offset: 96)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2768, file: !1110, line: 401, baseType: !60, size: 32, offset: 128)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2768, file: !1110, line: 402, baseType: !60, size: 32, offset: 160)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2768, file: !1110, line: 403, baseType: !1120, size: 96, offset: 192)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2768, file: !1110, line: 404, baseType: !60, size: 32, offset: 288)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2768, file: !1110, line: 405, baseType: !60, size: 32, offset: 320)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2768, file: !1110, line: 406, baseType: !60, size: 32, offset: 352)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2768, file: !1110, line: 407, baseType: !60, size: 32, offset: 384)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2768, file: !1110, line: 408, baseType: !60, size: 32, offset: 416)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2768, file: !1110, line: 409, baseType: !60, size: 32, offset: 448)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2768, file: !1110, line: 410, baseType: !60, size: 32, offset: 480)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2768, file: !1110, line: 411, baseType: !1129, size: 64, offset: 512)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2768, file: !1110, line: 412, baseType: !272, size: 32, offset: 576)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2768, file: !1110, line: 413, baseType: !272, size: 32, offset: 608)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2768, file: !1110, line: 414, baseType: !1133, size: 128, offset: 640)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2768, file: !1110, line: 415, baseType: !1135, size: 160, offset: 768)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2768, file: !1110, line: 416, baseType: !1139, size: 160, offset: 928)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2768, file: !1110, line: 417, baseType: !60, size: 32, offset: 1088)
!2791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2792, size: 32)
!2792 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1110, line: 378, baseType: !2793)
!2793 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1110, line: 363, size: 28704, elements: !2794)
!2794 = !{!2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807}
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2793, file: !1110, line: 365, baseType: !1146, size: 256)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2793, file: !1110, line: 366, baseType: !1148, size: 768, offset: 256)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2793, file: !1110, line: 367, baseType: !1146, size: 256, offset: 1024)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2793, file: !1110, line: 368, baseType: !1148, size: 768, offset: 1280)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2793, file: !1110, line: 369, baseType: !1146, size: 256, offset: 2048)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2793, file: !1110, line: 370, baseType: !1148, size: 768, offset: 2304)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2793, file: !1110, line: 371, baseType: !1146, size: 256, offset: 3072)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2793, file: !1110, line: 372, baseType: !1148, size: 768, offset: 3328)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2793, file: !1110, line: 373, baseType: !1146, size: 256, offset: 4096)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2793, file: !1110, line: 374, baseType: !1159, size: 1792, offset: 4352)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2793, file: !1110, line: 375, baseType: !1163, size: 1920, offset: 6144)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2793, file: !1110, line: 376, baseType: !1167, size: 20608, offset: 8064)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2793, file: !1110, line: 377, baseType: !60, size: 32, offset: 28672)
!2808 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2809, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2809 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2810 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2811, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2811 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2812 = !{!"Ubuntu clang version 14.0.6"}
!2813 = !{i32 7, !"Dwarf Version", i32 2}
!2814 = !{i32 2, !"Debug Info Version", i32 3}
!2815 = !{i32 1, !"wchar_size", i32 4}
!2816 = !{i32 1, !"min_enum_size", i32 4}
!2817 = !{i32 1, !"branch-target-enforcement", i32 0}
!2818 = !{i32 1, !"sign-return-address", i32 0}
!2819 = !{i32 1, !"sign-return-address-all", i32 0}
!2820 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2821 = !{i32 7, !"frame-pointer", i32 2}
!2822 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2823, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2826)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{!2825}
!2825 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2826 = !{!2827, !2829}
!2827 = !DILocalVariable(name: "region", scope: !2822, file: !3, line: 55, type: !2828)
!2828 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2829 = !DILocalVariable(name: "irq_flag", scope: !2822, file: !3, line: 56, type: !61)
!2830 = !DILocation(line: 59, column: 16, scope: !2822)
!2831 = !DILocation(line: 0, scope: !2822)
!2832 = !DILocation(line: 62, column: 9, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 62, column: 9)
!2834 = !{i8 0, i8 2}
!2835 = !DILocation(line: 62, column: 9, scope: !2822)
!2836 = !DILocation(line: 64, column: 9, scope: !2837)
!2837 = distinct !DILexicalBlock(scope: !2833, file: !3, line: 62, column: 39)
!2838 = !DILocation(line: 66, column: 9, scope: !2837)
!2839 = !DILocation(line: 69, column: 24, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2833, file: !3, line: 67, column: 12)
!2841 = !DILocation(line: 72, column: 9, scope: !2840)
!2842 = !DILocation(line: 77, column: 5, scope: !2822)
!2843 = !DILocation(line: 80, column: 22, scope: !2822)
!2844 = !DILocation(line: 81, column: 28, scope: !2822)
!2845 = !DILocation(line: 84, column: 19, scope: !2822)
!2846 = !DILocation(line: 85, column: 23, scope: !2822)
!2847 = !DILocation(line: 88, column: 5, scope: !2848)
!2848 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 88, column: 5)
!2849 = !DILocation(line: 90, column: 9, scope: !2850)
!2850 = distinct !DILexicalBlock(scope: !2851, file: !3, line: 88, column: 81)
!2851 = distinct !DILexicalBlock(scope: !2848, file: !3, line: 88, column: 5)
!2852 = !DILocation(line: 90, column: 38, scope: !2850)
!2853 = !DILocation(line: 91, column: 9, scope: !2850)
!2854 = !DILocation(line: 91, column: 42, scope: !2850)
!2855 = !DILocation(line: 94, column: 45, scope: !2850)
!2856 = !DILocation(line: 94, column: 47, scope: !2850)
!2857 = !DILocation(line: 95, column: 49, scope: !2850)
!2858 = !DILocation(line: 95, column: 51, scope: !2850)
!2859 = !DILocation(line: 88, column: 77, scope: !2851)
!2860 = !DILocation(line: 88, column: 46, scope: !2851)
!2861 = distinct !{!2861, !2847, !2862}
!2862 = !DILocation(line: 96, column: 5, scope: !2848)
!2863 = !DILocation(line: 99, column: 1, scope: !2822)
!2864 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2823, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2865)
!2865 = !{!2866}
!2866 = !DILocalVariable(name: "irq_flag", scope: !2864, file: !3, line: 329, type: !61)
!2867 = !DILocation(line: 332, column: 16, scope: !2864)
!2868 = !DILocation(line: 0, scope: !2864)
!2869 = !DILocation(line: 335, column: 21, scope: !2864)
!2870 = !DILocation(line: 336, column: 21, scope: !2864)
!2871 = !DILocation(line: 339, column: 21, scope: !2864)
!2872 = !DILocation(line: 340, column: 21, scope: !2864)
!2873 = !DILocation(line: 434, column: 3, scope: !2874, inlinedAt: !2876)
!2874 = distinct !DISubprogram(name: "__ISB", scope: !2875, file: !2875, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2875 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!2876 = distinct !DILocation(line: 343, column: 5, scope: !2864)
!2877 = !{i64 442814}
!2878 = !DILocation(line: 346, column: 5, scope: !2864)
!2879 = !DILocation(line: 348, column: 5, scope: !2864)
!2880 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2823, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2881)
!2881 = !{!2882}
!2882 = !DILocalVariable(name: "region", scope: !2880, file: !3, line: 103, type: !2828)
!2883 = !DILocation(line: 107, column: 5, scope: !2880)
!2884 = !DILocation(line: 110, column: 22, scope: !2880)
!2885 = !DILocation(line: 111, column: 28, scope: !2880)
!2886 = !DILocation(line: 114, column: 19, scope: !2880)
!2887 = !DILocation(line: 115, column: 23, scope: !2880)
!2888 = !DILocation(line: 0, scope: !2880)
!2889 = !DILocation(line: 118, column: 5, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2880, file: !3, line: 118, column: 5)
!2891 = !DILocation(line: 120, column: 9, scope: !2892)
!2892 = distinct !DILexicalBlock(scope: !2893, file: !3, line: 118, column: 81)
!2893 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 118, column: 5)
!2894 = !DILocation(line: 120, column: 38, scope: !2892)
!2895 = !DILocation(line: 121, column: 9, scope: !2892)
!2896 = !DILocation(line: 121, column: 42, scope: !2892)
!2897 = !DILocation(line: 124, column: 45, scope: !2892)
!2898 = !DILocation(line: 124, column: 47, scope: !2892)
!2899 = !DILocation(line: 125, column: 49, scope: !2892)
!2900 = !DILocation(line: 125, column: 51, scope: !2892)
!2901 = !DILocation(line: 118, column: 77, scope: !2893)
!2902 = !DILocation(line: 118, column: 46, scope: !2893)
!2903 = distinct !{!2903, !2889, !2904}
!2904 = !DILocation(line: 126, column: 5, scope: !2890)
!2905 = !DILocation(line: 129, column: 20, scope: !2880)
!2906 = !DILocation(line: 131, column: 5, scope: !2880)
!2907 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2823, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2908 = !DILocation(line: 137, column: 45, scope: !2909)
!2909 = distinct !DILexicalBlock(scope: !2907, file: !3, line: 137, column: 9)
!2910 = !DILocation(line: 137, column: 28, scope: !2909)
!2911 = !DILocation(line: 137, column: 9, scope: !2907)
!2912 = !DILocation(line: 142, column: 22, scope: !2907)
!2913 = !DILocation(line: 145, column: 28, scope: !2907)
!2914 = !DILocation(line: 145, column: 19, scope: !2907)
!2915 = !DILocation(line: 147, column: 5, scope: !2907)
!2916 = !DILocation(line: 0, scope: !2907)
!2917 = !DILocation(line: 148, column: 1, scope: !2907)
!2918 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2823, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2919)
!2919 = !{!2920}
!2920 = !DILocalVariable(name: "irq_flag", scope: !2918, file: !3, line: 152, type: !61)
!2921 = !DILocation(line: 155, column: 16, scope: !2918)
!2922 = !DILocation(line: 0, scope: !2918)
!2923 = !DILocation(line: 158, column: 16, scope: !2924)
!2924 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 158, column: 9)
!2925 = !DILocation(line: 158, column: 26, scope: !2924)
!2926 = !DILocation(line: 158, column: 9, scope: !2918)
!2927 = !DILocation(line: 160, column: 9, scope: !2928)
!2928 = distinct !DILexicalBlock(scope: !2924, file: !3, line: 158, column: 49)
!2929 = !DILocation(line: 161, column: 5, scope: !2928)
!2930 = !DILocation(line: 164, column: 22, scope: !2918)
!2931 = !DILocation(line: 167, column: 28, scope: !2918)
!2932 = !DILocation(line: 167, column: 19, scope: !2918)
!2933 = !DILocation(line: 170, column: 5, scope: !2918)
!2934 = !DILocation(line: 172, column: 5, scope: !2918)
!2935 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !2936, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2938)
!2936 = !DISubroutineType(types: !2937)
!2937 = !{!2825, !2828}
!2938 = !{!2939}
!2939 = !DILocalVariable(name: "region", arg: 1, scope: !2935, file: !3, line: 175, type: !2828)
!2940 = !DILocation(line: 0, scope: !2935)
!2941 = !DILocation(line: 178, column: 16, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 178, column: 9)
!2943 = !DILocation(line: 178, column: 9, scope: !2935)
!2944 = !DILocation(line: 183, column: 9, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 183, column: 9)
!2946 = !DILocation(line: 183, column: 38, scope: !2945)
!2947 = !DILocation(line: 183, column: 9, scope: !2935)
!2948 = !DILocation(line: 184, column: 38, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2945, file: !3, line: 183, column: 62)
!2950 = !DILocation(line: 184, column: 32, scope: !2949)
!2951 = !DILocation(line: 190, column: 32, scope: !2935)
!2952 = !DILocation(line: 190, column: 23, scope: !2935)
!2953 = !DILocation(line: 192, column: 5, scope: !2935)
!2954 = !DILocation(line: 193, column: 1, scope: !2935)
!2955 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !2936, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2956)
!2956 = !{!2957}
!2957 = !DILocalVariable(name: "region", arg: 1, scope: !2955, file: !3, line: 195, type: !2828)
!2958 = !DILocation(line: 0, scope: !2955)
!2959 = !DILocation(line: 198, column: 16, scope: !2960)
!2960 = distinct !DILexicalBlock(scope: !2955, file: !3, line: 198, column: 9)
!2961 = !DILocation(line: 198, column: 9, scope: !2955)
!2962 = !DILocation(line: 203, column: 35, scope: !2955)
!2963 = !DILocation(line: 203, column: 31, scope: !2955)
!2964 = !DILocation(line: 203, column: 28, scope: !2955)
!2965 = !DILocation(line: 206, column: 32, scope: !2955)
!2966 = !DILocation(line: 206, column: 23, scope: !2955)
!2967 = !DILocation(line: 209, column: 41, scope: !2955)
!2968 = !DILocation(line: 209, column: 43, scope: !2955)
!2969 = !DILocation(line: 210, column: 45, scope: !2955)
!2970 = !DILocation(line: 210, column: 47, scope: !2955)
!2971 = !DILocation(line: 212, column: 5, scope: !2955)
!2972 = !DILocation(line: 213, column: 1, scope: !2955)
!2973 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !2974, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2977)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{!2825, !2976}
!2976 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!2977 = !{!2978}
!2978 = !DILocalVariable(name: "cache_size", arg: 1, scope: !2973, file: !3, line: 215, type: !2976)
!2979 = !DILocation(line: 0, scope: !2973)
!2980 = !DILocation(line: 218, column: 20, scope: !2981)
!2981 = distinct !DILexicalBlock(scope: !2973, file: !3, line: 218, column: 9)
!2982 = !DILocation(line: 218, column: 9, scope: !2973)
!2983 = !DILocation(line: 223, column: 22, scope: !2973)
!2984 = !DILocation(line: 224, column: 37, scope: !2973)
!2985 = !DILocation(line: 224, column: 22, scope: !2973)
!2986 = !DILocation(line: 227, column: 20, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2973, file: !3, line: 227, column: 9)
!2988 = !DILocation(line: 227, column: 9, scope: !2973)
!2989 = !DILocation(line: 228, column: 26, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 227, column: 43)
!2991 = !DILocation(line: 229, column: 5, scope: !2990)
!2992 = !DILocation(line: 232, column: 28, scope: !2973)
!2993 = !DILocation(line: 232, column: 19, scope: !2973)
!2994 = !DILocation(line: 234, column: 5, scope: !2973)
!2995 = !DILocation(line: 235, column: 1, scope: !2973)
!2996 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !2997, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3006)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{!2825, !2828, !2999}
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 32)
!3000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3001)
!3001 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !3002)
!3002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !3003)
!3003 = !{!3004, !3005}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !3002, file: !6, line: 220, baseType: !61, size: 32)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !3002, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!3006 = !{!3007, !3008}
!3007 = !DILocalVariable(name: "region", arg: 1, scope: !2996, file: !3, line: 237, type: !2828)
!3008 = !DILocalVariable(name: "region_config", arg: 2, scope: !2996, file: !3, line: 237, type: !2999)
!3009 = !DILocation(line: 0, scope: !2996)
!3010 = !DILocation(line: 240, column: 16, scope: !3011)
!3011 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 240, column: 9)
!3012 = !DILocation(line: 240, column: 9, scope: !2996)
!3013 = !DILocation(line: 245, column: 23, scope: !3014)
!3014 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 245, column: 9)
!3015 = !DILocation(line: 245, column: 9, scope: !2996)
!3016 = !DILocation(line: 250, column: 24, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 250, column: 9)
!3018 = !DILocation(line: 250, column: 45, scope: !3017)
!3019 = !DILocation(line: 250, column: 9, scope: !2996)
!3020 = !DILocation(line: 251, column: 9, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 250, column: 81)
!3022 = !DILocation(line: 256, column: 24, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !2996, file: !3, line: 256, column: 9)
!3024 = !DILocation(line: 256, column: 42, scope: !3023)
!3025 = !DILocation(line: 256, column: 9, scope: !2996)
!3026 = !DILocation(line: 257, column: 9, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 256, column: 78)
!3028 = !DILocation(line: 262, column: 5, scope: !2996)
!3029 = !DILocation(line: 262, column: 34, scope: !2996)
!3030 = !DILocation(line: 263, column: 55, scope: !2996)
!3031 = !DILocation(line: 263, column: 93, scope: !2996)
!3032 = !DILocation(line: 263, column: 76, scope: !2996)
!3033 = !DILocation(line: 263, column: 5, scope: !2996)
!3034 = !DILocation(line: 263, column: 38, scope: !2996)
!3035 = !DILocation(line: 266, column: 34, scope: !2996)
!3036 = !DILocation(line: 269, column: 45, scope: !2996)
!3037 = !DILocation(line: 269, column: 41, scope: !2996)
!3038 = !DILocation(line: 269, column: 43, scope: !2996)
!3039 = !DILocation(line: 270, column: 49, scope: !2996)
!3040 = !DILocation(line: 270, column: 45, scope: !2996)
!3041 = !DILocation(line: 270, column: 47, scope: !2996)
!3042 = !DILocation(line: 272, column: 5, scope: !2996)
!3043 = !DILocation(line: 273, column: 1, scope: !2996)
!3044 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !3045, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3047)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{!2825, !61}
!3047 = !{!3048, !3049}
!3048 = !DILocalVariable(name: "address", arg: 1, scope: !3044, file: !3, line: 275, type: !61)
!3049 = !DILocalVariable(name: "irq_flag", scope: !3044, file: !3, line: 277, type: !61)
!3050 = !DILocation(line: 0, scope: !3044)
!3051 = !DILocation(line: 280, column: 17, scope: !3052)
!3052 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 280, column: 9)
!3053 = !DILocation(line: 280, column: 9, scope: !3044)
!3054 = !DILocation(line: 284, column: 16, scope: !3044)
!3055 = !DILocation(line: 287, column: 32, scope: !3044)
!3056 = !DILocation(line: 287, column: 21, scope: !3044)
!3057 = !DILocation(line: 288, column: 21, scope: !3044)
!3058 = !DILocation(line: 434, column: 3, scope: !2874, inlinedAt: !3059)
!3059 = distinct !DILocation(line: 291, column: 5, scope: !3044)
!3060 = !DILocation(line: 294, column: 5, scope: !3044)
!3061 = !DILocation(line: 296, column: 5, scope: !3044)
!3062 = !DILocation(line: 297, column: 1, scope: !3044)
!3063 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !3064, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3066)
!3064 = !DISubroutineType(types: !3065)
!3065 = !{!2825, !61, !61}
!3066 = !{!3067, !3068, !3069, !3070}
!3067 = !DILocalVariable(name: "address", arg: 1, scope: !3063, file: !3, line: 299, type: !61)
!3068 = !DILocalVariable(name: "length", arg: 2, scope: !3063, file: !3, line: 299, type: !61)
!3069 = !DILocalVariable(name: "irq_flag", scope: !3063, file: !3, line: 301, type: !61)
!3070 = !DILocalVariable(name: "end_address", scope: !3063, file: !3, line: 302, type: !61)
!3071 = !DILocation(line: 0, scope: !3063)
!3072 = !DILocation(line: 302, column: 36, scope: !3063)
!3073 = !DILocation(line: 305, column: 47, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3063, file: !3, line: 305, column: 9)
!3075 = !DILocation(line: 310, column: 16, scope: !3063)
!3076 = !DILocation(line: 313, column: 20, scope: !3063)
!3077 = !DILocation(line: 313, column: 5, scope: !3063)
!3078 = !DILocation(line: 314, column: 9, scope: !3079)
!3079 = distinct !DILexicalBlock(scope: !3063, file: !3, line: 313, column: 35)
!3080 = !DILocation(line: 315, column: 17, scope: !3079)
!3081 = distinct !{!3081, !3077, !3082}
!3082 = !DILocation(line: 316, column: 5, scope: !3063)
!3083 = !DILocation(line: 434, column: 3, scope: !2874, inlinedAt: !3084)
!3084 = distinct !DILocation(line: 319, column: 5, scope: !3063)
!3085 = !DILocation(line: 322, column: 5, scope: !3063)
!3086 = !DILocation(line: 324, column: 5, scope: !3063)
!3087 = !DILocation(line: 325, column: 1, scope: !3063)
!3088 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !3045, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3089)
!3089 = !{!3090, !3091}
!3090 = !DILocalVariable(name: "address", arg: 1, scope: !3088, file: !3, line: 351, type: !61)
!3091 = !DILocalVariable(name: "irq_flag", scope: !3088, file: !3, line: 353, type: !61)
!3092 = !DILocation(line: 0, scope: !3088)
!3093 = !DILocation(line: 356, column: 17, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3088, file: !3, line: 356, column: 9)
!3095 = !DILocation(line: 356, column: 9, scope: !3088)
!3096 = !DILocation(line: 361, column: 16, scope: !3088)
!3097 = !DILocation(line: 364, column: 32, scope: !3088)
!3098 = !DILocation(line: 364, column: 21, scope: !3088)
!3099 = !DILocation(line: 365, column: 21, scope: !3088)
!3100 = !DILocation(line: 434, column: 3, scope: !2874, inlinedAt: !3101)
!3101 = distinct !DILocation(line: 368, column: 5, scope: !3088)
!3102 = !DILocation(line: 371, column: 5, scope: !3088)
!3103 = !DILocation(line: 373, column: 5, scope: !3088)
!3104 = !DILocation(line: 374, column: 1, scope: !3088)
!3105 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !3064, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3106)
!3106 = !{!3107, !3108, !3109, !3110}
!3107 = !DILocalVariable(name: "address", arg: 1, scope: !3105, file: !3, line: 376, type: !61)
!3108 = !DILocalVariable(name: "length", arg: 2, scope: !3105, file: !3, line: 376, type: !61)
!3109 = !DILocalVariable(name: "irq_flag", scope: !3105, file: !3, line: 378, type: !61)
!3110 = !DILocalVariable(name: "end_address", scope: !3105, file: !3, line: 379, type: !61)
!3111 = !DILocation(line: 0, scope: !3105)
!3112 = !DILocation(line: 379, column: 36, scope: !3105)
!3113 = !DILocation(line: 382, column: 47, scope: !3114)
!3114 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 382, column: 9)
!3115 = !DILocation(line: 387, column: 16, scope: !3105)
!3116 = !DILocation(line: 390, column: 20, scope: !3105)
!3117 = !DILocation(line: 390, column: 5, scope: !3105)
!3118 = !DILocation(line: 391, column: 9, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !3105, file: !3, line: 390, column: 35)
!3120 = !DILocation(line: 392, column: 17, scope: !3119)
!3121 = distinct !{!3121, !3117, !3122}
!3122 = !DILocation(line: 393, column: 5, scope: !3105)
!3123 = !DILocation(line: 434, column: 3, scope: !2874, inlinedAt: !3124)
!3124 = distinct !DILocation(line: 396, column: 5, scope: !3105)
!3125 = !DILocation(line: 399, column: 5, scope: !3105)
!3126 = !DILocation(line: 401, column: 5, scope: !3105)
!3127 = !DILocation(line: 402, column: 1, scope: !3105)
!3128 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2823, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3129)
!3129 = !{!3130}
!3130 = !DILocalVariable(name: "irq_flag", scope: !3128, file: !3, line: 406, type: !61)
!3131 = !DILocation(line: 409, column: 16, scope: !3128)
!3132 = !DILocation(line: 0, scope: !3128)
!3133 = !DILocation(line: 412, column: 21, scope: !3128)
!3134 = !DILocation(line: 413, column: 21, scope: !3128)
!3135 = !DILocation(line: 434, column: 3, scope: !2874, inlinedAt: !3136)
!3136 = distinct !DILocation(line: 416, column: 5, scope: !3128)
!3137 = !DILocation(line: 419, column: 5, scope: !3128)
!3138 = !DILocation(line: 421, column: 5, scope: !3128)
!3139 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !3140, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3142)
!3140 = !DISubroutineType(types: !3141)
!3141 = !{!91, !61}
!3142 = !{!3143, !3144}
!3143 = !DILocalVariable(name: "address", arg: 1, scope: !3139, file: !3, line: 424, type: !61)
!3144 = !DILocalVariable(name: "region", scope: !3139, file: !3, line: 426, type: !2828)
!3145 = !DILocation(line: 0, scope: !3139)
!3146 = !DILocation(line: 429, column: 18, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 429, column: 9)
!3148 = !DILocation(line: 429, column: 28, scope: !3147)
!3149 = !DILocation(line: 429, column: 9, scope: !3139)
!3150 = !DILocation(line: 435, column: 20, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3152, file: !3, line: 435, column: 13)
!3152 = distinct !DILexicalBlock(scope: !3153, file: !3, line: 433, column: 81)
!3153 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 433, column: 5)
!3154 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 433, column: 5)
!3155 = !DILocation(line: 435, column: 41, scope: !3151)
!3156 = !DILocation(line: 435, column: 36, scope: !3151)
!3157 = !DILocation(line: 435, column: 13, scope: !3152)
!3158 = !DILocation(line: 436, column: 30, scope: !3159)
!3159 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 436, column: 17)
!3160 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 435, column: 53)
!3161 = !DILocation(line: 436, column: 59, scope: !3159)
!3162 = !DILocation(line: 436, column: 26, scope: !3159)
!3163 = !DILocation(line: 436, column: 85, scope: !3159)
!3164 = !DILocation(line: 436, column: 99, scope: !3159)
!3165 = !DILocation(line: 436, column: 97, scope: !3159)
!3166 = !DILocation(line: 436, column: 17, scope: !3160)
!3167 = !DILocation(line: 433, column: 77, scope: !3153)
!3168 = !DILocation(line: 433, column: 46, scope: !3153)
!3169 = !DILocation(line: 433, column: 5, scope: !3154)
!3170 = distinct !{!3170, !3169, !3171}
!3171 = !DILocation(line: 440, column: 5, scope: !3154)
!3172 = !DILocation(line: 442, column: 1, scope: !3139)
!3173 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2730, file: !2730, line: 95, type: !3174, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3178)
!3174 = !DISubroutineType(types: !3175)
!3175 = !{!3176, !3177}
!3176 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !255, line: 393, baseType: !2137)
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !98, line: 854, baseType: !245)
!3178 = !{!3179}
!3179 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3173, file: !2730, line: 95, type: !3177)
!3180 = !DILocation(line: 0, scope: !3173)
!3181 = !DILocation(line: 98, column: 9, scope: !3182)
!3182 = distinct !DILexicalBlock(scope: !3173, file: !2730, line: 98, column: 9)
!3183 = !DILocation(line: 98, column: 9, scope: !3173)
!3184 = !DILocation(line: 102, column: 10, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3173, file: !2730, line: 102, column: 9)
!3186 = !DILocation(line: 102, column: 34, scope: !3185)
!3187 = !DILocation(line: 102, column: 49, scope: !3185)
!3188 = !DILocation(line: 102, column: 69, scope: !3185)
!3189 = !DILocation(line: 103, column: 38, scope: !3185)
!3190 = !DILocation(line: 102, column: 9, scope: !3173)
!3191 = !DILocation(line: 109, column: 12, scope: !3173)
!3192 = !DILocation(line: 109, column: 5, scope: !3173)
!3193 = !DILocation(line: 112, column: 5, scope: !3173)
!3194 = !DILocation(line: 115, column: 44, scope: !3173)
!3195 = !DILocation(line: 118, column: 5, scope: !3173)
!3196 = !DILocation(line: 118, column: 23, scope: !3173)
!3197 = !DILocation(line: 118, column: 35, scope: !3173)
!3198 = !DILocation(line: 121, column: 42, scope: !3173)
!3199 = !DILocation(line: 121, column: 38, scope: !3173)
!3200 = !DILocation(line: 121, column: 5, scope: !3173)
!3201 = !DILocation(line: 121, column: 17, scope: !3173)
!3202 = !DILocation(line: 121, column: 35, scope: !3173)
!3203 = !DILocation(line: 129, column: 5, scope: !3173)
!3204 = !DILocation(line: 131, column: 1, scope: !3173)
!3205 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2730, file: !2730, line: 81, type: !3206, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3208)
!3206 = !DISubroutineType(types: !3207)
!3207 = !{!91, !3177}
!3208 = !{!3209}
!3209 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3205, file: !2730, line: 81, type: !3177)
!3210 = !DILocation(line: 0, scope: !3205)
!3211 = !DILocation(line: 84, column: 25, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3205, file: !2730, line: 84, column: 9)
!3213 = !DILocation(line: 84, column: 35, scope: !3212)
!3214 = !DILocation(line: 84, column: 45, scope: !3212)
!3215 = !DILocation(line: 93, column: 1, scope: !3205)
!3216 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2730, file: !2730, line: 133, type: !3174, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3217)
!3217 = !{!3218}
!3218 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3216, file: !2730, line: 133, type: !3177)
!3219 = !DILocation(line: 0, scope: !3216)
!3220 = !DILocation(line: 136, column: 9, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3216, file: !2730, line: 136, column: 9)
!3222 = !DILocation(line: 136, column: 9, scope: !3216)
!3223 = !DILocation(line: 140, column: 9, scope: !3224)
!3224 = distinct !DILexicalBlock(scope: !3216, file: !2730, line: 140, column: 9)
!3225 = !DILocation(line: 140, column: 33, scope: !3224)
!3226 = !DILocation(line: 140, column: 48, scope: !3224)
!3227 = !DILocation(line: 140, column: 9, scope: !3216)
!3228 = !DILocation(line: 146, column: 12, scope: !3216)
!3229 = !DILocation(line: 146, column: 5, scope: !3216)
!3230 = !DILocation(line: 149, column: 29, scope: !3216)
!3231 = !DILocation(line: 149, column: 44, scope: !3216)
!3232 = !DILocation(line: 151, column: 29, scope: !3216)
!3233 = !DILocation(line: 151, column: 5, scope: !3216)
!3234 = !DILocation(line: 159, column: 5, scope: !3216)
!3235 = !DILocation(line: 160, column: 1, scope: !3216)
!3236 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2730, file: !2730, line: 163, type: !3237, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3240)
!3237 = !DISubroutineType(types: !3238)
!3238 = !{!3176, !3239, !1231}
!3239 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !98, line: 860, baseType: !2732)
!3240 = !{!3241, !3242}
!3241 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3236, file: !2730, line: 163, type: !3239)
!3242 = !DILocalVariable(name: "count", arg: 2, scope: !3236, file: !2730, line: 163, type: !1231)
!3243 = !DILocation(line: 0, scope: !3236)
!3244 = !DILocation(line: 166, column: 9, scope: !3236)
!3245 = !DILocation(line: 167, column: 44, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3247, file: !2730, line: 167, column: 13)
!3247 = distinct !DILexicalBlock(scope: !3248, file: !2730, line: 166, column: 51)
!3248 = distinct !DILexicalBlock(scope: !3236, file: !2730, line: 166, column: 9)
!3249 = !DILocation(line: 167, column: 59, scope: !3246)
!3250 = !DILocation(line: 167, column: 13, scope: !3247)
!3251 = !DILocation(line: 170, column: 38, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3246, file: !2730, line: 167, column: 79)
!3253 = !DILocation(line: 170, column: 13, scope: !3252)
!3254 = !DILocation(line: 172, column: 59, scope: !3252)
!3255 = !DILocation(line: 173, column: 9, scope: !3252)
!3256 = !DILocation(line: 175, column: 36, scope: !3247)
!3257 = !DILocation(line: 175, column: 18, scope: !3247)
!3258 = !DILocation(line: 177, column: 5, scope: !3247)
!3259 = !DILocation(line: 179, column: 44, scope: !3260)
!3260 = distinct !DILexicalBlock(scope: !3261, file: !2730, line: 179, column: 13)
!3261 = distinct !DILexicalBlock(scope: !3262, file: !2730, line: 178, column: 55)
!3262 = distinct !DILexicalBlock(scope: !3248, file: !2730, line: 178, column: 14)
!3263 = !DILocation(line: 179, column: 59, scope: !3260)
!3264 = !DILocation(line: 179, column: 13, scope: !3261)
!3265 = !DILocation(line: 182, column: 38, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3260, file: !2730, line: 179, column: 79)
!3267 = !DILocation(line: 182, column: 13, scope: !3266)
!3268 = !DILocation(line: 184, column: 59, scope: !3266)
!3269 = !DILocation(line: 186, column: 9, scope: !3266)
!3270 = !DILocation(line: 188, column: 68, scope: !3261)
!3271 = !DILocation(line: 188, column: 50, scope: !3261)
!3272 = !DILocation(line: 188, column: 18, scope: !3261)
!3273 = !DILocation(line: 0, scope: !3248)
!3274 = !DILocation(line: 193, column: 5, scope: !3236)
!3275 = !DILocation(line: 194, column: 1, scope: !3236)
!3276 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2730, file: !2730, line: 196, type: !3277, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3279)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!3176, !61, !61, !1231}
!3279 = !{!3280, !3281, !3282}
!3280 = !DILocalVariable(name: "start_count", arg: 1, scope: !3276, file: !2730, line: 196, type: !61)
!3281 = !DILocalVariable(name: "end_count", arg: 2, scope: !3276, file: !2730, line: 196, type: !61)
!3282 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3276, file: !2730, line: 196, type: !1231)
!3283 = !DILocation(line: 0, scope: !3276)
!3284 = !DILocation(line: 198, column: 24, scope: !3285)
!3285 = distinct !DILexicalBlock(scope: !3276, file: !2730, line: 198, column: 9)
!3286 = !DILocation(line: 198, column: 9, scope: !3276)
!3287 = !DILocation(line: 0, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3276, file: !2730, line: 202, column: 9)
!3289 = !DILocation(line: 208, column: 5, scope: !3276)
!3290 = !DILocation(line: 209, column: 1, scope: !3276)
!3291 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2730, file: !2730, line: 211, type: !3292, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3295)
!3292 = !DISubroutineType(types: !3293)
!3293 = !{!3176, !3177, !3294}
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!3295 = !{!3296, !3297}
!3296 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3291, file: !2730, line: 211, type: !3177)
!3297 = !DILocalVariable(name: "running_status", arg: 2, scope: !3291, file: !2730, line: 211, type: !3294)
!3298 = !DILocation(line: 0, scope: !3291)
!3299 = !DILocation(line: 213, column: 18, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3291, file: !2730, line: 213, column: 9)
!3301 = !DILocation(line: 213, column: 9, scope: !3291)
!3302 = !DILocation(line: 217, column: 47, scope: !3291)
!3303 = !DILocation(line: 217, column: 21, scope: !3291)
!3304 = !DILocation(line: 219, column: 5, scope: !3291)
!3305 = !DILocation(line: 220, column: 1, scope: !3291)
!3306 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2730, file: !2730, line: 222, type: !3307, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3309)
!3307 = !DISubroutineType(types: !3308)
!3308 = !{!3176, !3177, !307, !88}
!3309 = !{!3310, !3311, !3312}
!3310 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3306, file: !2730, line: 222, type: !3177)
!3311 = !DILocalVariable(name: "callback", arg: 2, scope: !3306, file: !2730, line: 223, type: !307)
!3312 = !DILocalVariable(name: "user_data", arg: 3, scope: !3306, file: !2730, line: 224, type: !88)
!3313 = !DILocation(line: 0, scope: !3306)
!3314 = !DILocation(line: 227, column: 9, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3306, file: !2730, line: 227, column: 9)
!3316 = !DILocation(line: 227, column: 9, scope: !3306)
!3317 = !DILocation(line: 231, column: 34, scope: !3318)
!3318 = distinct !DILexicalBlock(scope: !3306, file: !2730, line: 231, column: 9)
!3319 = !DILocation(line: 231, column: 49, scope: !3318)
!3320 = !DILocation(line: 231, column: 69, scope: !3318)
!3321 = !DILocation(line: 232, column: 38, scope: !3318)
!3322 = !DILocation(line: 232, column: 53, scope: !3318)
!3323 = !DILocation(line: 231, column: 9, scope: !3306)
!3324 = !DILocation(line: 237, column: 18, scope: !3325)
!3325 = distinct !DILexicalBlock(scope: !3306, file: !2730, line: 237, column: 9)
!3326 = !DILocation(line: 237, column: 9, scope: !3306)
!3327 = !DILocation(line: 245, column: 46, scope: !3306)
!3328 = !DILocation(line: 245, column: 56, scope: !3306)
!3329 = !DILocation(line: 246, column: 46, scope: !3306)
!3330 = !DILocation(line: 246, column: 56, scope: !3306)
!3331 = !DILocation(line: 248, column: 5, scope: !3306)
!3332 = !DILocation(line: 250, column: 5, scope: !3306)
!3333 = !DILocation(line: 252, column: 1, scope: !3306)
!3334 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2730, file: !2730, line: 256, type: !3335, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3338)
!3335 = !DISubroutineType(types: !3336)
!3336 = !{!3176, !3177, !61, !3337}
!3337 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !255, line: 383, baseType: !254)
!3338 = !{!3339, !3340, !3341, !3342}
!3339 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3334, file: !2730, line: 256, type: !3177)
!3340 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3334, file: !2730, line: 256, type: !61)
!3341 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3334, file: !2730, line: 256, type: !3337)
!3342 = !DILocalVariable(name: "mask", scope: !3334, file: !2730, line: 259, type: !60)
!3343 = !DILocation(line: 0, scope: !3334)
!3344 = !DILocation(line: 259, column: 5, scope: !3334)
!3345 = !DILocation(line: 259, column: 23, scope: !3334)
!3346 = !DILocation(line: 261, column: 9, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3334, file: !2730, line: 261, column: 9)
!3348 = !DILocation(line: 261, column: 9, scope: !3334)
!3349 = !DILocation(line: 265, column: 34, scope: !3350)
!3350 = distinct !DILexicalBlock(scope: !3334, file: !2730, line: 265, column: 9)
!3351 = !DILocation(line: 265, column: 49, scope: !3350)
!3352 = !DILocation(line: 266, column: 13, scope: !3350)
!3353 = !DILocation(line: 266, column: 41, scope: !3350)
!3354 = !DILocation(line: 266, column: 56, scope: !3350)
!3355 = !DILocation(line: 265, column: 9, scope: !3334)
!3356 = !DILocation(line: 271, column: 25, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3334, file: !2730, line: 271, column: 9)
!3358 = !DILocation(line: 271, column: 9, scope: !3334)
!3359 = !DILocation(line: 282, column: 12, scope: !3334)
!3360 = !DILocation(line: 282, column: 10, scope: !3334)
!3361 = !DILocation(line: 284, column: 5, scope: !3334)
!3362 = !DILocation(line: 286, column: 5, scope: !3334)
!3363 = !DILocation(line: 286, column: 23, scope: !3334)
!3364 = !DILocation(line: 286, column: 34, scope: !3334)
!3365 = !DILocation(line: 287, column: 5, scope: !3334)
!3366 = !DILocation(line: 287, column: 23, scope: !3334)
!3367 = !DILocation(line: 287, column: 34, scope: !3334)
!3368 = !DILocation(line: 290, column: 5, scope: !3334)
!3369 = !DILocation(line: 290, column: 23, scope: !3334)
!3370 = !DILocation(line: 290, column: 37, scope: !3334)
!3371 = !DILocation(line: 291, column: 39, scope: !3334)
!3372 = !DILocation(line: 291, column: 5, scope: !3334)
!3373 = !DILocation(line: 291, column: 23, scope: !3334)
!3374 = !DILocation(line: 291, column: 37, scope: !3334)
!3375 = !DILocation(line: 292, column: 5, scope: !3334)
!3376 = !DILocation(line: 292, column: 23, scope: !3334)
!3377 = !DILocation(line: 292, column: 37, scope: !3334)
!3378 = !DILocation(line: 297, column: 47, scope: !3334)
!3379 = !DILocation(line: 298, column: 33, scope: !3334)
!3380 = !DILocation(line: 296, column: 5, scope: !3334)
!3381 = !DILocation(line: 296, column: 23, scope: !3334)
!3382 = !DILocation(line: 296, column: 31, scope: !3334)
!3383 = !DILocation(line: 300, column: 5, scope: !3334)
!3384 = !DILocation(line: 300, column: 29, scope: !3334)
!3385 = distinct !{!3385, !3383, !3386}
!3386 = !DILocation(line: 300, column: 39, scope: !3334)
!3387 = !DILocation(line: 301, column: 23, scope: !3334)
!3388 = !DILocation(line: 301, column: 33, scope: !3334)
!3389 = !DILocation(line: 302, column: 5, scope: !3334)
!3390 = !DILocation(line: 302, column: 23, scope: !3334)
!3391 = !DILocation(line: 302, column: 34, scope: !3334)
!3392 = !DILocation(line: 303, column: 44, scope: !3334)
!3393 = !DILocation(line: 305, column: 28, scope: !3334)
!3394 = !DILocation(line: 305, column: 5, scope: !3334)
!3395 = !DILocation(line: 306, column: 5, scope: !3334)
!3396 = !DILocation(line: 307, column: 1, scope: !3334)
!3397 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2730, file: !2730, line: 310, type: !3398, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3400)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!3176, !61}
!3400 = !{!3401}
!3401 = !DILocalVariable(name: "ms", arg: 1, scope: !3397, file: !2730, line: 310, type: !61)
!3402 = !DILocation(line: 0, scope: !3397)
!3403 = !DILocation(line: 313, column: 40, scope: !3404)
!3404 = distinct !DILexicalBlock(scope: !3397, file: !2730, line: 313, column: 9)
!3405 = !DILocation(line: 313, column: 55, scope: !3404)
!3406 = !DILocation(line: 313, column: 9, scope: !3397)
!3407 = !DILocation(line: 316, column: 34, scope: !3408)
!3408 = distinct !DILexicalBlock(scope: !3404, file: !2730, line: 313, column: 75)
!3409 = !DILocation(line: 316, column: 9, scope: !3408)
!3410 = !DILocation(line: 317, column: 55, scope: !3408)
!3411 = !DILocation(line: 318, column: 5, scope: !3408)
!3412 = !DILocation(line: 320, column: 20, scope: !3397)
!3413 = !DILocation(line: 320, column: 45, scope: !3397)
!3414 = !DILocation(line: 320, column: 5, scope: !3397)
!3415 = !DILocation(line: 322, column: 5, scope: !3397)
!3416 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2730, file: !2730, line: 327, type: !3335, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3417)
!3417 = !{!3418, !3419, !3420, !3421}
!3418 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3416, file: !2730, line: 327, type: !3177)
!3419 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3416, file: !2730, line: 327, type: !61)
!3420 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3416, file: !2730, line: 327, type: !3337)
!3421 = !DILocalVariable(name: "mask", scope: !3416, file: !2730, line: 329, type: !60)
!3422 = !DILocation(line: 0, scope: !3416)
!3423 = !DILocation(line: 329, column: 5, scope: !3416)
!3424 = !DILocation(line: 329, column: 23, scope: !3416)
!3425 = !DILocation(line: 331, column: 9, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3416, file: !2730, line: 331, column: 9)
!3427 = !DILocation(line: 331, column: 9, scope: !3416)
!3428 = !DILocation(line: 336, column: 34, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3416, file: !2730, line: 336, column: 9)
!3430 = !DILocation(line: 336, column: 49, scope: !3429)
!3431 = !DILocation(line: 337, column: 13, scope: !3429)
!3432 = !DILocation(line: 337, column: 41, scope: !3429)
!3433 = !DILocation(line: 337, column: 56, scope: !3429)
!3434 = !DILocation(line: 336, column: 9, scope: !3416)
!3435 = !DILocation(line: 349, column: 29, scope: !3416)
!3436 = !DILocation(line: 349, column: 49, scope: !3416)
!3437 = !DILocation(line: 351, column: 12, scope: !3416)
!3438 = !DILocation(line: 351, column: 10, scope: !3416)
!3439 = !DILocation(line: 353, column: 5, scope: !3416)
!3440 = !DILocation(line: 355, column: 5, scope: !3416)
!3441 = !DILocation(line: 355, column: 23, scope: !3416)
!3442 = !DILocation(line: 355, column: 34, scope: !3416)
!3443 = !DILocation(line: 356, column: 5, scope: !3416)
!3444 = !DILocation(line: 356, column: 23, scope: !3416)
!3445 = !DILocation(line: 356, column: 34, scope: !3416)
!3446 = !DILocation(line: 359, column: 5, scope: !3416)
!3447 = !DILocation(line: 359, column: 23, scope: !3416)
!3448 = !DILocation(line: 359, column: 37, scope: !3416)
!3449 = !DILocation(line: 360, column: 39, scope: !3416)
!3450 = !DILocation(line: 360, column: 5, scope: !3416)
!3451 = !DILocation(line: 360, column: 23, scope: !3416)
!3452 = !DILocation(line: 360, column: 37, scope: !3416)
!3453 = !DILocation(line: 361, column: 5, scope: !3416)
!3454 = !DILocation(line: 361, column: 23, scope: !3416)
!3455 = !DILocation(line: 361, column: 37, scope: !3416)
!3456 = !DILocation(line: 366, column: 47, scope: !3416)
!3457 = !DILocation(line: 367, column: 33, scope: !3416)
!3458 = !DILocation(line: 365, column: 5, scope: !3416)
!3459 = !DILocation(line: 365, column: 23, scope: !3416)
!3460 = !DILocation(line: 365, column: 31, scope: !3416)
!3461 = !DILocation(line: 369, column: 5, scope: !3416)
!3462 = !DILocation(line: 369, column: 29, scope: !3416)
!3463 = distinct !{!3463, !3461, !3464}
!3464 = !DILocation(line: 369, column: 39, scope: !3416)
!3465 = !DILocation(line: 370, column: 23, scope: !3416)
!3466 = !DILocation(line: 370, column: 33, scope: !3416)
!3467 = !DILocation(line: 371, column: 5, scope: !3416)
!3468 = !DILocation(line: 371, column: 23, scope: !3416)
!3469 = !DILocation(line: 371, column: 34, scope: !3416)
!3470 = !DILocation(line: 373, column: 28, scope: !3416)
!3471 = !DILocation(line: 373, column: 5, scope: !3416)
!3472 = !DILocation(line: 375, column: 44, scope: !3416)
!3473 = !DILocation(line: 377, column: 5, scope: !3416)
!3474 = !DILocation(line: 378, column: 1, scope: !3416)
!3475 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2730, file: !2730, line: 382, type: !3398, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3476)
!3476 = !{!3477}
!3477 = !DILocalVariable(name: "us", arg: 1, scope: !3475, file: !2730, line: 382, type: !61)
!3478 = !DILocation(line: 0, scope: !3475)
!3479 = !DILocation(line: 385, column: 40, scope: !3480)
!3480 = distinct !DILexicalBlock(scope: !3475, file: !2730, line: 385, column: 9)
!3481 = !DILocation(line: 385, column: 55, scope: !3480)
!3482 = !DILocation(line: 385, column: 9, scope: !3475)
!3483 = !DILocation(line: 388, column: 34, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3480, file: !2730, line: 385, column: 75)
!3485 = !DILocation(line: 388, column: 9, scope: !3484)
!3486 = !DILocation(line: 390, column: 55, scope: !3484)
!3487 = !DILocation(line: 391, column: 5, scope: !3484)
!3488 = !DILocation(line: 392, column: 20, scope: !3475)
!3489 = !DILocation(line: 392, column: 45, scope: !3475)
!3490 = !DILocation(line: 392, column: 5, scope: !3475)
!3491 = !DILocation(line: 394, column: 5, scope: !3475)
!3492 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2730, file: !2730, line: 398, type: !3174, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3493)
!3493 = !{!3494, !3495}
!3494 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3492, file: !2730, line: 398, type: !3177)
!3495 = !DILocalVariable(name: "mask", scope: !3492, file: !2730, line: 400, type: !60)
!3496 = !DILocation(line: 0, scope: !3492)
!3497 = !DILocation(line: 400, column: 5, scope: !3492)
!3498 = !DILocation(line: 400, column: 23, scope: !3492)
!3499 = !DILocation(line: 402, column: 9, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3492, file: !2730, line: 402, column: 9)
!3501 = !DILocation(line: 402, column: 9, scope: !3492)
!3502 = !DILocation(line: 413, column: 12, scope: !3492)
!3503 = !DILocation(line: 413, column: 10, scope: !3492)
!3504 = !DILocation(line: 415, column: 5, scope: !3492)
!3505 = !DILocation(line: 415, column: 23, scope: !3492)
!3506 = !DILocation(line: 415, column: 34, scope: !3492)
!3507 = !DILocation(line: 418, column: 5, scope: !3492)
!3508 = !DILocation(line: 418, column: 23, scope: !3492)
!3509 = !DILocation(line: 418, column: 34, scope: !3492)
!3510 = !DILocation(line: 420, column: 5, scope: !3492)
!3511 = !DILocation(line: 420, column: 23, scope: !3492)
!3512 = !DILocation(line: 420, column: 35, scope: !3492)
!3513 = !DILocation(line: 422, column: 29, scope: !3492)
!3514 = !DILocation(line: 422, column: 44, scope: !3492)
!3515 = !DILocation(line: 423, column: 28, scope: !3492)
!3516 = !DILocation(line: 423, column: 5, scope: !3492)
!3517 = !DILocation(line: 425, column: 33, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3492, file: !2730, line: 425, column: 9)
!3519 = !DILocation(line: 425, column: 9, scope: !3492)
!3520 = !DILocation(line: 427, column: 53, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3518, file: !2730, line: 425, column: 62)
!3522 = !DILocation(line: 428, column: 5, scope: !3521)
!3523 = !DILocation(line: 430, column: 1, scope: !3492)
!3524 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2730, file: !2730, line: 434, type: !3525, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3527)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{!3176, !1231}
!3527 = !{!3528, !3529, !3530}
!3528 = !DILocalVariable(name: "handle", arg: 1, scope: !3524, file: !2730, line: 434, type: !1231)
!3529 = !DILocalVariable(name: "timer", scope: !3524, file: !2730, line: 436, type: !61)
!3530 = !DILocalVariable(name: "mask", scope: !3524, file: !2730, line: 437, type: !61)
!3531 = !DILocation(line: 0, scope: !3524)
!3532 = !DILocation(line: 439, column: 24, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3524, file: !2730, line: 439, column: 9)
!3534 = !DILocation(line: 439, column: 41, scope: !3533)
!3535 = !DILocation(line: 439, column: 9, scope: !3524)
!3536 = !DILocation(line: 443, column: 16, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3524, file: !2730, line: 443, column: 9)
!3538 = !DILocation(line: 443, column: 9, scope: !3524)
!3539 = !DILocation(line: 448, column: 12, scope: !3524)
!3540 = !DILocation(line: 450, column: 15, scope: !3524)
!3541 = !DILocation(line: 451, column: 21, scope: !3524)
!3542 = !DILocation(line: 451, column: 13, scope: !3524)
!3543 = !DILocation(line: 452, column: 33, scope: !3524)
!3544 = !DILocation(line: 452, column: 41, scope: !3524)
!3545 = !DILocation(line: 453, column: 36, scope: !3524)
!3546 = !DILocation(line: 455, column: 5, scope: !3524)
!3547 = !DILocation(line: 456, column: 5, scope: !3524)
!3548 = !DILocation(line: 457, column: 1, scope: !3524)
!3549 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2730, file: !2730, line: 459, type: !3398, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3550)
!3550 = !{!3551, !3552}
!3551 = !DILocalVariable(name: "handle", arg: 1, scope: !3549, file: !2730, line: 459, type: !61)
!3552 = !DILocalVariable(name: "timer", scope: !3549, file: !2730, line: 461, type: !60)
!3553 = !DILocation(line: 0, scope: !3549)
!3554 = !DILocation(line: 461, column: 5, scope: !3549)
!3555 = !DILocation(line: 461, column: 23, scope: !3549)
!3556 = !DILocation(line: 463, column: 17, scope: !3557)
!3557 = distinct !DILexicalBlock(scope: !3549, file: !2730, line: 463, column: 9)
!3558 = !DILocation(line: 463, column: 37, scope: !3557)
!3559 = !DILocation(line: 463, column: 9, scope: !3549)
!3560 = !DILocation(line: 467, column: 20, scope: !3549)
!3561 = !DILocation(line: 467, column: 11, scope: !3549)
!3562 = !DILocation(line: 469, column: 24, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3549, file: !2730, line: 469, column: 9)
!3564 = !DILocation(line: 469, column: 41, scope: !3563)
!3565 = !DILocation(line: 469, column: 9, scope: !3549)
!3566 = !DILocation(line: 473, column: 30, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3549, file: !2730, line: 473, column: 9)
!3568 = !DILocation(line: 473, column: 37, scope: !3567)
!3569 = !DILocation(line: 473, column: 9, scope: !3549)
!3570 = !DILocation(line: 477, column: 30, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3549, file: !2730, line: 477, column: 9)
!3572 = !DILocation(line: 477, column: 37, scope: !3571)
!3573 = !DILocation(line: 477, column: 45, scope: !3571)
!3574 = !DILocation(line: 477, column: 9, scope: !3549)
!3575 = !DILocation(line: 481, column: 26, scope: !3549)
!3576 = !DILocation(line: 481, column: 33, scope: !3549)
!3577 = !DILocation(line: 481, column: 41, scope: !3549)
!3578 = !DILocation(line: 482, column: 36, scope: !3549)
!3579 = !DILocation(line: 484, column: 5, scope: !3549)
!3580 = !DILocation(line: 485, column: 1, scope: !3549)
!3581 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2730, file: !2730, line: 487, type: !3582, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3584)
!3582 = !DISubroutineType(types: !3583)
!3583 = !{!3176, !61, !61, !307, !88}
!3584 = !{!3585, !3586, !3587, !3588, !3589, !3590, !3591}
!3585 = !DILocalVariable(name: "handle", arg: 1, scope: !3581, file: !2730, line: 487, type: !61)
!3586 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3581, file: !2730, line: 487, type: !61)
!3587 = !DILocalVariable(name: "callback", arg: 3, scope: !3581, file: !2730, line: 487, type: !307)
!3588 = !DILocalVariable(name: "user_data", arg: 4, scope: !3581, file: !2730, line: 487, type: !88)
!3589 = !DILocalVariable(name: "current_time", scope: !3581, file: !2730, line: 489, type: !61)
!3590 = !DILocalVariable(name: "mask", scope: !3581, file: !2730, line: 490, type: !61)
!3591 = !DILocalVariable(name: "timer", scope: !3581, file: !2730, line: 491, type: !61)
!3592 = !DILocation(line: 0, scope: !3581)
!3593 = !DILocation(line: 493, column: 17, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3581, file: !2730, line: 493, column: 9)
!3595 = !DILocation(line: 493, column: 37, scope: !3594)
!3596 = !DILocation(line: 493, column: 9, scope: !3581)
!3597 = !DILocation(line: 497, column: 20, scope: !3581)
!3598 = !DILocation(line: 503, column: 37, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3581, file: !2730, line: 503, column: 9)
!3600 = !DILocation(line: 503, column: 9, scope: !3581)
!3601 = !DILocation(line: 507, column: 37, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3581, file: !2730, line: 507, column: 9)
!3603 = !DILocation(line: 507, column: 45, scope: !3602)
!3604 = !DILocation(line: 507, column: 9, scope: !3581)
!3605 = !DILocation(line: 511, column: 25, scope: !3606)
!3606 = distinct !DILexicalBlock(scope: !3581, file: !2730, line: 511, column: 9)
!3607 = !DILocation(line: 511, column: 9, scope: !3581)
!3608 = !DILocation(line: 516, column: 12, scope: !3581)
!3609 = !DILocation(line: 519, column: 30, scope: !3581)
!3610 = !DILocation(line: 521, column: 24, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3581, file: !2730, line: 521, column: 9)
!3612 = !DILocation(line: 521, column: 38, scope: !3611)
!3613 = !DILocation(line: 521, column: 9, scope: !3581)
!3614 = !DILocation(line: 522, column: 9, scope: !3615)
!3615 = distinct !DILexicalBlock(scope: !3611, file: !2730, line: 521, column: 48)
!3616 = !DILocation(line: 523, column: 9, scope: !3615)
!3617 = !DILocation(line: 524, column: 38, scope: !3615)
!3618 = !DILocation(line: 525, column: 5, scope: !3615)
!3619 = !DILocation(line: 526, column: 5, scope: !3581)
!3620 = !DILocation(line: 528, column: 23, scope: !3621)
!3621 = distinct !DILexicalBlock(scope: !3581, file: !2730, line: 528, column: 8)
!3622 = !DILocation(line: 528, column: 41, scope: !3621)
!3623 = !DILocation(line: 528, column: 8, scope: !3581)
!3624 = !DILocation(line: 529, column: 51, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3621, file: !2730, line: 528, column: 51)
!3626 = !DILocation(line: 529, column: 24, scope: !3625)
!3627 = !DILocation(line: 530, column: 5, scope: !3625)
!3628 = !DILocation(line: 0, scope: !3621)
!3629 = !DILocation(line: 534, column: 34, scope: !3581)
!3630 = !DILocation(line: 535, column: 39, scope: !3581)
!3631 = !DILocation(line: 537, column: 49, scope: !3581)
!3632 = !DILocation(line: 538, column: 80, scope: !3581)
!3633 = !DILocation(line: 538, column: 33, scope: !3581)
!3634 = !DILocation(line: 538, column: 49, scope: !3581)
!3635 = !DILocation(line: 539, column: 50, scope: !3581)
!3636 = !DILocation(line: 539, column: 61, scope: !3581)
!3637 = !DILocation(line: 540, column: 50, scope: !3581)
!3638 = !DILocation(line: 540, column: 61, scope: !3581)
!3639 = !DILocation(line: 542, column: 5, scope: !3581)
!3640 = !DILocation(line: 546, column: 30, scope: !3581)
!3641 = !DILocation(line: 548, column: 5, scope: !3581)
!3642 = !DILocation(line: 550, column: 5, scope: !3581)
!3643 = !DILocation(line: 551, column: 1, scope: !3581)
!3644 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2730, file: !2730, line: 553, type: !3398, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3645)
!3645 = !{!3646, !3647, !3648, !3649}
!3646 = !DILocalVariable(name: "handle", arg: 1, scope: !3644, file: !2730, line: 553, type: !61)
!3647 = !DILocalVariable(name: "current_time", scope: !3644, file: !2730, line: 555, type: !61)
!3648 = !DILocalVariable(name: "mask", scope: !3644, file: !2730, line: 556, type: !61)
!3649 = !DILocalVariable(name: "timer", scope: !3644, file: !2730, line: 557, type: !61)
!3650 = !DILocation(line: 0, scope: !3644)
!3651 = !DILocation(line: 559, column: 17, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3644, file: !2730, line: 559, column: 9)
!3653 = !DILocation(line: 559, column: 37, scope: !3652)
!3654 = !DILocation(line: 559, column: 9, scope: !3644)
!3655 = !DILocation(line: 563, column: 20, scope: !3644)
!3656 = !DILocation(line: 565, column: 37, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3644, file: !2730, line: 565, column: 9)
!3658 = !DILocation(line: 565, column: 48, scope: !3657)
!3659 = !DILocation(line: 565, column: 9, scope: !3644)
!3660 = !DILocation(line: 569, column: 37, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3644, file: !2730, line: 569, column: 9)
!3662 = !DILocation(line: 569, column: 45, scope: !3661)
!3663 = !DILocation(line: 569, column: 9, scope: !3644)
!3664 = !DILocation(line: 574, column: 12, scope: !3644)
!3665 = !DILocation(line: 577, column: 30, scope: !3644)
!3666 = !DILocation(line: 578, column: 5, scope: !3644)
!3667 = !DILocation(line: 579, column: 30, scope: !3644)
!3668 = !DILocation(line: 581, column: 23, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3644, file: !2730, line: 581, column: 8)
!3670 = !DILocation(line: 581, column: 41, scope: !3669)
!3671 = !DILocation(line: 581, column: 8, scope: !3644)
!3672 = !DILocation(line: 582, column: 51, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3669, file: !2730, line: 581, column: 51)
!3674 = !DILocation(line: 582, column: 24, scope: !3673)
!3675 = !DILocation(line: 583, column: 5, scope: !3673)
!3676 = !DILocation(line: 0, scope: !3669)
!3677 = !DILocation(line: 587, column: 34, scope: !3644)
!3678 = !DILocation(line: 588, column: 39, scope: !3644)
!3679 = !DILocation(line: 590, column: 44, scope: !3644)
!3680 = !DILocation(line: 592, column: 24, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3644, file: !2730, line: 592, column: 9)
!3682 = !DILocation(line: 592, column: 44, scope: !3681)
!3683 = !DILocation(line: 592, column: 9, scope: !3644)
!3684 = !DILocation(line: 593, column: 9, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3681, file: !2730, line: 592, column: 50)
!3686 = !DILocation(line: 594, column: 5, scope: !3685)
!3687 = !DILocation(line: 598, column: 30, scope: !3644)
!3688 = !DILocation(line: 599, column: 5, scope: !3644)
!3689 = !DILocation(line: 601, column: 5, scope: !3644)
!3690 = !DILocation(line: 603, column: 1, scope: !3644)
!3691 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2730, file: !2730, line: 605, type: !3692, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2729, retainedNodes: !3694)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{!3176, !61, !1231}
!3694 = !{!3695, !3696, !3697, !3698, !3699}
!3695 = !DILocalVariable(name: "handle", arg: 1, scope: !3691, file: !2730, line: 605, type: !61)
!3696 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3691, file: !2730, line: 605, type: !1231)
!3697 = !DILocalVariable(name: "current_time", scope: !3691, file: !2730, line: 607, type: !61)
!3698 = !DILocalVariable(name: "mask", scope: !3691, file: !2730, line: 608, type: !61)
!3699 = !DILocalVariable(name: "timer", scope: !3691, file: !2730, line: 609, type: !61)
!3700 = !DILocation(line: 0, scope: !3691)
!3701 = !DILocation(line: 611, column: 17, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3691, file: !2730, line: 611, column: 9)
!3703 = !DILocation(line: 611, column: 37, scope: !3702)
!3704 = !DILocation(line: 611, column: 9, scope: !3691)
!3705 = !DILocation(line: 615, column: 20, scope: !3691)
!3706 = !DILocation(line: 617, column: 37, scope: !3707)
!3707 = distinct !DILexicalBlock(scope: !3691, file: !2730, line: 617, column: 9)
!3708 = !DILocation(line: 617, column: 45, scope: !3707)
!3709 = !DILocation(line: 617, column: 9, scope: !3691)
!3710 = !DILocation(line: 622, column: 12, scope: !3691)
!3711 = !DILocation(line: 624, column: 35, scope: !3691)
!3712 = !DILocation(line: 624, column: 51, scope: !3691)
!3713 = !DILocation(line: 624, column: 76, scope: !3691)
!3714 = !DILocation(line: 624, column: 49, scope: !3691)
!3715 = !DILocation(line: 626, column: 37, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3691, file: !2730, line: 626, column: 9)
!3717 = !DILocation(line: 626, column: 9, scope: !3691)
!3718 = !DILocation(line: 0, scope: !3716)
!3719 = !DILocation(line: 632, column: 5, scope: !3691)
!3720 = !DILocation(line: 634, column: 5, scope: !3691)
!3721 = !DILocation(line: 636, column: 1, scope: !3691)
!3722 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !95, file: !95, line: 56, type: !3723, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3725)
!3723 = !DISubroutineType(types: !3724)
!3724 = !{!61, !61, !61, !61}
!3725 = !{!3726, !3727, !3728, !3729, !3731, !3732}
!3726 = !DILocalVariable(name: "mul1", arg: 1, scope: !3722, file: !95, line: 56, type: !61)
!3727 = !DILocalVariable(name: "mul2", arg: 2, scope: !3722, file: !95, line: 56, type: !61)
!3728 = !DILocalVariable(name: "div", arg: 3, scope: !3722, file: !95, line: 56, type: !61)
!3729 = !DILocalVariable(name: "data1", scope: !3722, file: !95, line: 58, type: !3730)
!3730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !508)
!3731 = !DILocalVariable(name: "data2", scope: !3722, file: !95, line: 59, type: !3730)
!3732 = !DILocalVariable(name: "result", scope: !3722, file: !95, line: 60, type: !3730)
!3733 = !DILocation(line: 0, scope: !3722)
!3734 = !DILocation(line: 63, column: 22, scope: !3722)
!3735 = !DILocation(line: 63, column: 32, scope: !3722)
!3736 = !DILocation(line: 64, column: 23, scope: !3722)
!3737 = !DILocation(line: 64, column: 40, scope: !3722)
!3738 = !DILocation(line: 66, column: 27, scope: !3722)
!3739 = !DILocation(line: 67, column: 27, scope: !3722)
!3740 = !DILocation(line: 67, column: 44, scope: !3722)
!3741 = !DILocation(line: 69, column: 26, scope: !3722)
!3742 = !DILocation(line: 70, column: 36, scope: !3722)
!3743 = !DILocation(line: 70, column: 43, scope: !3722)
!3744 = !DILocation(line: 70, column: 55, scope: !3722)
!3745 = !DILocation(line: 72, column: 34, scope: !3722)
!3746 = !DILocation(line: 72, column: 41, scope: !3722)
!3747 = !DILocation(line: 72, column: 5, scope: !3722)
!3748 = distinct !DISubprogram(name: "gpt_current_count", scope: !95, file: !95, line: 75, type: !3749, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3751)
!3749 = !DISubroutineType(types: !3750)
!3750 = !{!61, !264}
!3751 = !{!3752}
!3752 = !DILocalVariable(name: "gpt", arg: 1, scope: !3748, file: !95, line: 75, type: !264)
!3753 = !DILocation(line: 0, scope: !3748)
!3754 = !DILocation(line: 77, column: 17, scope: !3748)
!3755 = !DILocation(line: 77, column: 5, scope: !3748)
!3756 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !95, file: !95, line: 81, type: !3757, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3759)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{!61, !61}
!3759 = !{!3760}
!3760 = !DILocalVariable(name: "ms", arg: 1, scope: !3756, file: !95, line: 81, type: !61)
!3761 = !DILocation(line: 0, scope: !3756)
!3762 = !DILocation(line: 83, column: 27, scope: !3756)
!3763 = !DILocation(line: 83, column: 37, scope: !3756)
!3764 = !DILocation(line: 83, column: 43, scope: !3756)
!3765 = !DILocation(line: 83, column: 32, scope: !3756)
!3766 = !DILocation(line: 83, column: 53, scope: !3756)
!3767 = !DILocation(line: 83, column: 59, scope: !3756)
!3768 = !DILocation(line: 83, column: 48, scope: !3756)
!3769 = !DILocation(line: 83, column: 70, scope: !3756)
!3770 = !DILocation(line: 83, column: 76, scope: !3756)
!3771 = !DILocation(line: 83, column: 65, scope: !3756)
!3772 = !DILocation(line: 83, column: 5, scope: !3756)
!3773 = !DILocation(line: 90, column: 9, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !290, file: !95, line: 90, column: 9)
!3775 = !DILocation(line: 90, column: 9, scope: !290)
!3776 = !DILocation(line: 91, column: 13, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3778, file: !95, line: 91, column: 13)
!3778 = distinct !DILexicalBlock(scope: !3774, file: !95, line: 90, column: 24)
!3779 = !DILocation(line: 91, column: 13, scope: !3778)
!3780 = !DILocation(line: 92, column: 32, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3777, file: !95, line: 91, column: 41)
!3782 = !DILocation(line: 92, column: 30, scope: !3781)
!3783 = !DILocation(line: 93, column: 41, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3781, file: !95, line: 93, column: 17)
!3785 = !DILocation(line: 0, scope: !3777)
!3786 = !DILocation(line: 105, column: 1, scope: !290)
!3787 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !95, file: !95, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3788 = !DILocation(line: 109, column: 9, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3787, file: !95, line: 109, column: 9)
!3790 = !DILocation(line: 109, column: 9, scope: !3787)
!3791 = !DILocation(line: 110, column: 9, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3789, file: !95, line: 109, column: 61)
!3793 = !DILocation(line: 111, column: 5, scope: !3792)
!3794 = !DILocation(line: 112, column: 1, scope: !3787)
!3795 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !95, file: !95, line: 114, type: !3757, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3796)
!3796 = !{!3797}
!3797 = !DILocalVariable(name: "time_us", arg: 1, scope: !3795, file: !95, line: 114, type: !61)
!3798 = !DILocation(line: 0, scope: !3795)
!3799 = !DILocation(line: 116, column: 5, scope: !3795)
!3800 = !DILocation(line: 118, column: 9, scope: !3801)
!3801 = distinct !DILexicalBlock(scope: !3795, file: !95, line: 118, column: 9)
!3802 = !DILocation(line: 118, column: 9, scope: !3795)
!3803 = !DILocation(line: 120, column: 49, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3801, file: !95, line: 118, column: 37)
!3805 = !DILocation(line: 120, column: 16, scope: !3804)
!3806 = !DILocation(line: 120, column: 9, scope: !3804)
!3807 = !DILocation(line: 0, scope: !3801)
!3808 = !DILocation(line: 125, column: 1, scope: !3795)
!3809 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !95, file: !95, line: 127, type: !3757, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3810)
!3810 = !{!3811}
!3811 = !DILocalVariable(name: "count", arg: 1, scope: !3809, file: !95, line: 127, type: !61)
!3812 = !DILocation(line: 0, scope: !3809)
!3813 = !DILocation(line: 129, column: 5, scope: !3809)
!3814 = !DILocation(line: 131, column: 9, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3809, file: !95, line: 131, column: 9)
!3816 = !DILocation(line: 131, column: 9, scope: !3809)
!3817 = !DILocation(line: 133, column: 69, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3815, file: !95, line: 131, column: 37)
!3819 = !DILocation(line: 133, column: 16, scope: !3818)
!3820 = !DILocation(line: 133, column: 9, scope: !3818)
!3821 = !DILocation(line: 0, scope: !3815)
!3822 = !DILocation(line: 138, column: 1, scope: !3809)
!3823 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !95, file: !95, line: 141, type: !3824, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3826)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{null, !264, !61, !61}
!3826 = !{!3827, !3828, !3829}
!3827 = !DILocalVariable(name: "gpt", arg: 1, scope: !3823, file: !95, line: 141, type: !264)
!3828 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3823, file: !95, line: 141, type: !61)
!3829 = !DILocalVariable(name: "divide", arg: 3, scope: !3823, file: !95, line: 141, type: !61)
!3830 = !DILocation(line: 0, scope: !3823)
!3831 = !DILocation(line: 143, column: 5, scope: !3823)
!3832 = !DILocation(line: 145, column: 33, scope: !3823)
!3833 = !DILocation(line: 145, column: 10, scope: !3823)
!3834 = !DILocation(line: 145, column: 18, scope: !3823)
!3835 = !DILocation(line: 148, column: 10, scope: !3823)
!3836 = !DILocation(line: 148, column: 18, scope: !3823)
!3837 = !DILocation(line: 149, column: 1, scope: !3823)
!3838 = distinct !DISubprogram(name: "gpt_delay_time", scope: !95, file: !95, line: 151, type: !3839, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3841)
!3839 = !DISubroutineType(types: !3840)
!3840 = !{null, !264, !1006}
!3841 = !{!3842, !3843, !3844, !3845}
!3842 = !DILocalVariable(name: "gpt", arg: 1, scope: !3838, file: !95, line: 151, type: !264)
!3843 = !DILocalVariable(name: "count", arg: 2, scope: !3838, file: !95, line: 151, type: !1006)
!3844 = !DILocalVariable(name: "end_count", scope: !3838, file: !95, line: 153, type: !61)
!3845 = !DILocalVariable(name: "current", scope: !3838, file: !95, line: 153, type: !61)
!3846 = !DILocation(line: 0, scope: !3838)
!3847 = !DILocation(line: 155, column: 17, scope: !3838)
!3848 = !DILocation(line: 156, column: 25, scope: !3838)
!3849 = !DILocation(line: 156, column: 33, scope: !3838)
!3850 = !DILocation(line: 159, column: 19, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3838, file: !95, line: 159, column: 9)
!3852 = !DILocation(line: 159, column: 9, scope: !3838)
!3853 = !DILocation(line: 160, column: 16, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3851, file: !95, line: 159, column: 30)
!3855 = !DILocation(line: 160, column: 39, scope: !3854)
!3856 = !DILocation(line: 160, column: 9, scope: !3854)
!3857 = distinct !{!3857, !3856, !3858}
!3858 = !DILocation(line: 160, column: 51, scope: !3854)
!3859 = !DILocation(line: 162, column: 16, scope: !3860)
!3860 = distinct !DILexicalBlock(scope: !3851, file: !95, line: 161, column: 12)
!3861 = !DILocation(line: 162, column: 39, scope: !3860)
!3862 = !DILocation(line: 162, column: 9, scope: !3860)
!3863 = distinct !{!3863, !3862, !3864}
!3864 = !DILocation(line: 162, column: 50, scope: !3860)
!3865 = !DILocation(line: 163, column: 16, scope: !3860)
!3866 = !DILocation(line: 163, column: 39, scope: !3860)
!3867 = !DILocation(line: 163, column: 9, scope: !3860)
!3868 = distinct !{!3868, !3867, !3869}
!3869 = !DILocation(line: 163, column: 51, scope: !3860)
!3870 = !DILocation(line: 165, column: 1, scope: !3838)
!3871 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !95, file: !95, line: 166, type: !3872, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3874)
!3872 = !DISubroutineType(types: !3873)
!3873 = !{null, !264}
!3874 = !{!3875}
!3875 = !DILocalVariable(name: "gpt", arg: 1, scope: !3871, file: !95, line: 166, type: !264)
!3876 = !DILocation(line: 0, scope: !3871)
!3877 = !DILocation(line: 168, column: 10, scope: !3871)
!3878 = !DILocation(line: 168, column: 22, scope: !3871)
!3879 = !DILocation(line: 169, column: 10, scope: !3871)
!3880 = !DILocation(line: 169, column: 22, scope: !3871)
!3881 = !DILocation(line: 170, column: 21, scope: !3871)
!3882 = !DILocation(line: 171, column: 5, scope: !3871)
!3883 = !DILocation(line: 171, column: 16, scope: !3871)
!3884 = distinct !{!3884, !3882, !3885}
!3885 = !DILocation(line: 171, column: 26, scope: !3871)
!3886 = !DILocation(line: 172, column: 10, scope: !3871)
!3887 = !DILocation(line: 172, column: 22, scope: !3871)
!3888 = !DILocation(line: 173, column: 10, scope: !3871)
!3889 = !DILocation(line: 173, column: 22, scope: !3871)
!3890 = !DILocation(line: 174, column: 10, scope: !3871)
!3891 = !DILocation(line: 174, column: 22, scope: !3871)
!3892 = !DILocation(line: 176, column: 13, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3871, file: !95, line: 176, column: 9)
!3894 = !DILocation(line: 176, column: 9, scope: !3871)
!3895 = !DILocation(line: 177, column: 27, scope: !3896)
!3896 = distinct !DILexicalBlock(scope: !3893, file: !95, line: 176, column: 22)
!3897 = !DILocation(line: 178, column: 5, scope: !3896)
!3898 = !DILocation(line: 179, column: 1, scope: !3871)
!3899 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !95, file: !95, line: 181, type: !3749, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3900)
!3900 = !{!3901, !3902}
!3901 = !DILocalVariable(name: "gpt", arg: 1, scope: !3899, file: !95, line: 181, type: !264)
!3902 = !DILocalVariable(name: "mask", scope: !3899, file: !95, line: 183, type: !60)
!3903 = !DILocation(line: 0, scope: !3899)
!3904 = !DILocation(line: 183, column: 5, scope: !3899)
!3905 = !DILocation(line: 183, column: 23, scope: !3899)
!3906 = !DILocation(line: 185, column: 17, scope: !3899)
!3907 = !DILocation(line: 185, column: 10, scope: !3899)
!3908 = !DILocation(line: 187, column: 22, scope: !3899)
!3909 = !DILocation(line: 189, column: 12, scope: !3899)
!3910 = !DILocation(line: 190, column: 1, scope: !3899)
!3911 = !DILocation(line: 189, column: 5, scope: !3899)
!3912 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !95, file: !95, line: 192, type: !3913, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3915)
!3913 = !DISubroutineType(types: !3914)
!3914 = !{null, !264, !61}
!3915 = !{!3916, !3917}
!3916 = !DILocalVariable(name: "gpt", arg: 1, scope: !3912, file: !95, line: 192, type: !264)
!3917 = !DILocalVariable(name: "mask", arg: 2, scope: !3912, file: !95, line: 192, type: !61)
!3918 = !DILocation(line: 0, scope: !3912)
!3919 = !DILocation(line: 194, column: 10, scope: !3912)
!3920 = !DILocation(line: 194, column: 21, scope: !3912)
!3921 = !DILocation(line: 195, column: 1, scope: !3912)
!3922 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !95, file: !95, line: 197, type: !554, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3923)
!3923 = !{!3924, !3925, !3926, !3927, !3928}
!3924 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3922, file: !95, line: 197, type: !556)
!3925 = !DILocalVariable(name: "i", scope: !3922, file: !95, line: 199, type: !61)
!3926 = !DILocalVariable(name: "mask", scope: !3922, file: !95, line: 200, type: !60)
!3927 = !DILocalVariable(name: "state", scope: !3922, file: !95, line: 201, type: !60)
!3928 = !DILocalVariable(name: "enable", scope: !3922, file: !95, line: 202, type: !60)
!3929 = !DILocation(line: 0, scope: !3922)
!3930 = !DILocation(line: 200, column: 5, scope: !3922)
!3931 = !DILocation(line: 200, column: 23, scope: !3922)
!3932 = !DILocation(line: 201, column: 5, scope: !3922)
!3933 = !DILocation(line: 201, column: 23, scope: !3922)
!3934 = !DILocation(line: 202, column: 5, scope: !3922)
!3935 = !DILocation(line: 202, column: 23, scope: !3922)
!3936 = !DILocation(line: 207, column: 5, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3922, file: !95, line: 207, column: 5)
!3938 = !DILocation(line: 209, column: 18, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3940, file: !95, line: 207, column: 44)
!3940 = distinct !DILexicalBlock(scope: !3937, file: !95, line: 207, column: 5)
!3941 = !DILocation(line: 209, column: 29, scope: !3939)
!3942 = !DILocation(line: 209, column: 16, scope: !3939)
!3943 = !DILocation(line: 210, column: 29, scope: !3939)
!3944 = !DILocation(line: 210, column: 16, scope: !3939)
!3945 = !DILocation(line: 212, column: 16, scope: !3939)
!3946 = !DILocation(line: 212, column: 14, scope: !3939)
!3947 = !DILocation(line: 214, column: 9, scope: !3939)
!3948 = !DILocation(line: 214, column: 20, scope: !3939)
!3949 = !DILocation(line: 214, column: 32, scope: !3939)
!3950 = !DILocation(line: 216, column: 14, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3939, file: !95, line: 216, column: 13)
!3952 = !DILocation(line: 216, column: 20, scope: !3951)
!3953 = !DILocation(line: 216, column: 40, scope: !3951)
!3954 = !DILocation(line: 216, column: 44, scope: !3951)
!3955 = !DILocation(line: 216, column: 51, scope: !3951)
!3956 = !DILocation(line: 216, column: 13, scope: !3939)
!3957 = !DILocation(line: 224, column: 51, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3959, file: !95, line: 224, column: 17)
!3959 = distinct !DILexicalBlock(scope: !3951, file: !95, line: 216, column: 70)
!3960 = !DILocation(line: 224, column: 60, scope: !3958)
!3961 = !DILocation(line: 224, column: 17, scope: !3959)
!3962 = !DILocation(line: 225, column: 94, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3958, file: !95, line: 224, column: 69)
!3964 = !DILocation(line: 225, column: 17, scope: !3963)
!3965 = !DILocation(line: 226, column: 13, scope: !3963)
!3966 = !DILocation(line: 229, column: 31, scope: !3939)
!3967 = !DILocation(line: 229, column: 42, scope: !3939)
!3968 = !DILocation(line: 229, column: 9, scope: !3939)
!3969 = !DILocation(line: 207, column: 40, scope: !3940)
!3970 = !DILocation(line: 207, column: 19, scope: !3940)
!3971 = distinct !{!3971, !3936, !3972}
!3972 = !DILocation(line: 231, column: 5, scope: !3937)
!3973 = !DILocation(line: 233, column: 1, scope: !3922)
!3974 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !95, file: !95, line: 236, type: !291, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3975 = !DILocation(line: 238, column: 5, scope: !3974)
!3976 = !DILocation(line: 239, column: 5, scope: !3974)
!3977 = !DILocation(line: 240, column: 5, scope: !3974)
!3978 = !DILocation(line: 241, column: 1, scope: !3974)
!3979 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !95, file: !95, line: 242, type: !3749, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3980)
!3980 = !{!3981, !3982, !3983, !3984, !3985}
!3981 = !DILocalVariable(name: "gpt", arg: 1, scope: !3979, file: !95, line: 242, type: !264)
!3982 = !DILocalVariable(name: "time", scope: !3979, file: !95, line: 244, type: !60)
!3983 = !DILocalVariable(name: "count", scope: !3979, file: !95, line: 245, type: !61)
!3984 = !DILocalVariable(name: "time_s", scope: !3979, file: !95, line: 245, type: !61)
!3985 = !DILocalVariable(name: "time_ms", scope: !3979, file: !95, line: 245, type: !61)
!3986 = !DILocation(line: 0, scope: !3979)
!3987 = !DILocation(line: 244, column: 5, scope: !3979)
!3988 = !DILocation(line: 244, column: 23, scope: !3979)
!3989 = !DILocation(line: 247, column: 13, scope: !3979)
!3990 = !DILocation(line: 248, column: 20, scope: !3979)
!3991 = !DILocation(line: 249, column: 23, scope: !3979)
!3992 = !DILocation(line: 249, column: 32, scope: !3979)
!3993 = !DILocation(line: 249, column: 39, scope: !3979)
!3994 = !DILocation(line: 249, column: 48, scope: !3979)
!3995 = !DILocation(line: 250, column: 19, scope: !3979)
!3996 = !DILocation(line: 250, column: 26, scope: !3979)
!3997 = !DILocation(line: 250, column: 10, scope: !3979)
!3998 = !DILocation(line: 253, column: 5, scope: !3979)
!3999 = !DILocation(line: 253, column: 30, scope: !3979)
!4000 = !DILocation(line: 253, column: 38, scope: !3979)
!4001 = !DILocation(line: 254, column: 5, scope: !3979)
!4002 = !DILocation(line: 254, column: 36, scope: !3979)
!4003 = distinct !{!4003, !4001, !4004}
!4004 = !DILocation(line: 254, column: 46, scope: !3979)
!4005 = !DILocation(line: 255, column: 12, scope: !3979)
!4006 = !DILocation(line: 256, column: 1, scope: !3979)
!4007 = !DILocation(line: 255, column: 5, scope: !3979)
!4008 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !95, file: !95, line: 258, type: !4009, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4011)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!61}
!4011 = !{!4012}
!4012 = !DILocalVariable(name: "i", scope: !4008, file: !95, line: 260, type: !61)
!4013 = !DILocation(line: 0, scope: !4008)
!4014 = !DILocation(line: 262, column: 5, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4008, file: !95, line: 262, column: 5)
!4016 = !DILocation(line: 263, column: 37, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4018, file: !95, line: 263, column: 13)
!4018 = distinct !DILexicalBlock(scope: !4019, file: !95, line: 262, column: 45)
!4019 = distinct !DILexicalBlock(scope: !4015, file: !95, line: 262, column: 5)
!4020 = !DILocation(line: 263, column: 45, scope: !4017)
!4021 = !DILocation(line: 263, column: 13, scope: !4018)
!4022 = !DILocation(line: 262, column: 41, scope: !4019)
!4023 = !DILocation(line: 262, column: 19, scope: !4019)
!4024 = distinct !{!4024, !4014, !4025}
!4025 = !DILocation(line: 266, column: 5, scope: !4015)
!4026 = !DILocation(line: 269, column: 1, scope: !4008)
!4027 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !95, file: !95, line: 271, type: !291, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4028)
!4028 = !{!4029, !4030}
!4029 = !DILocalVariable(name: "minimum_time", scope: !4027, file: !95, line: 273, type: !61)
!4030 = !DILocalVariable(name: "current_timer", scope: !4027, file: !95, line: 273, type: !61)
!4031 = !DILocation(line: 273, column: 5, scope: !4027)
!4032 = !DILocation(line: 275, column: 24, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4027, file: !95, line: 275, column: 9)
!4034 = !DILocation(line: 275, column: 9, scope: !4027)
!4035 = !DILocation(line: 0, scope: !4027)
!4036 = !DILocation(line: 279, column: 5, scope: !4027)
!4037 = !DILocation(line: 282, column: 56, scope: !4027)
!4038 = !DILocation(line: 282, column: 39, scope: !4027)
!4039 = !DILocation(line: 284, column: 30, scope: !4027)
!4040 = !DILocation(line: 285, column: 45, scope: !4027)
!4041 = !DILocation(line: 285, column: 5, scope: !4027)
!4042 = !DILocation(line: 286, column: 30, scope: !4027)
!4043 = !DILocation(line: 287, column: 1, scope: !4027)
!4044 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !95, file: !95, line: 308, type: !4045, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4047)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{null, !1231, !1231}
!4047 = !{!4048, !4049, !4050, !4051, !4052}
!4048 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !4044, file: !95, line: 308, type: !1231)
!4049 = !DILocalVariable(name: "number", arg: 2, scope: !4044, file: !95, line: 308, type: !1231)
!4050 = !DILocalVariable(name: "i", scope: !4044, file: !95, line: 310, type: !61)
!4051 = !DILocalVariable(name: "minimum", scope: !4044, file: !95, line: 311, type: !61)
!4052 = !DILocalVariable(name: "data", scope: !4044, file: !95, line: 312, type: !61)
!4053 = !DILocation(line: 0, scope: !4044)
!4054 = !DILocation(line: 314, column: 5, scope: !4055)
!4055 = distinct !DILexicalBlock(scope: !4044, file: !95, line: 314, column: 5)
!4056 = !DILocation(line: 315, column: 37, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4058, file: !95, line: 315, column: 13)
!4058 = distinct !DILexicalBlock(scope: !4059, file: !95, line: 314, column: 45)
!4059 = distinct !DILexicalBlock(scope: !4055, file: !95, line: 314, column: 5)
!4060 = !DILocation(line: 315, column: 13, scope: !4058)
!4061 = !DILocation(line: 316, column: 20, scope: !4062)
!4062 = distinct !DILexicalBlock(scope: !4057, file: !95, line: 315, column: 57)
!4063 = !DILocation(line: 318, column: 22, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4062, file: !95, line: 318, column: 17)
!4065 = !DILocation(line: 318, column: 17, scope: !4062)
!4066 = !DILocation(line: 320, column: 25, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4064, file: !95, line: 318, column: 33)
!4068 = !DILocation(line: 321, column: 13, scope: !4067)
!4069 = !DILocation(line: 314, column: 41, scope: !4059)
!4070 = !DILocation(line: 314, column: 19, scope: !4059)
!4071 = distinct !{!4071, !4054, !4072}
!4072 = !DILocation(line: 323, column: 5, scope: !4055)
!4073 = !DILocation(line: 325, column: 19, scope: !4044)
!4074 = !DILocation(line: 326, column: 1, scope: !4044)
!4075 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !95, file: !95, line: 289, type: !3757, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4076)
!4076 = !{!4077, !4078, !4079, !4080}
!4077 = !DILocalVariable(name: "timer_number", arg: 1, scope: !4075, file: !95, line: 289, type: !61)
!4078 = !DILocalVariable(name: "time_out_delta", scope: !4075, file: !95, line: 291, type: !61)
!4079 = !DILocalVariable(name: "current_delta", scope: !4075, file: !95, line: 292, type: !61)
!4080 = !DILocalVariable(name: "ret_value", scope: !4075, file: !95, line: 293, type: !61)
!4081 = !DILocation(line: 0, scope: !4075)
!4082 = !DILocation(line: 295, column: 22, scope: !4075)
!4083 = !DILocation(line: 296, column: 22, scope: !4075)
!4084 = !DILocation(line: 298, column: 24, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4075, file: !95, line: 298, column: 9)
!4086 = !DILocation(line: 298, column: 9, scope: !4075)
!4087 = !DILocation(line: 306, column: 5, scope: !4075)
!4088 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !95, file: !95, line: 329, type: !309, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4089)
!4089 = !{!4090, !4091, !4092, !4093}
!4090 = !DILocalVariable(name: "parameter", arg: 1, scope: !4088, file: !95, line: 329, type: !88)
!4091 = !DILocalVariable(name: "i", scope: !4088, file: !95, line: 331, type: !61)
!4092 = !DILocalVariable(name: "time_ms", scope: !4088, file: !95, line: 332, type: !60)
!4093 = !DILocalVariable(name: "data", scope: !4088, file: !95, line: 333, type: !60)
!4094 = !DILocation(line: 0, scope: !4088)
!4095 = !DILocation(line: 332, column: 5, scope: !4088)
!4096 = !DILocation(line: 332, column: 23, scope: !4088)
!4097 = !DILocation(line: 333, column: 5, scope: !4088)
!4098 = !DILocation(line: 333, column: 23, scope: !4088)
!4099 = !DILocation(line: 336, column: 24, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4088, file: !95, line: 336, column: 9)
!4101 = !DILocation(line: 336, column: 41, scope: !4100)
!4102 = !DILocation(line: 336, column: 9, scope: !4088)
!4103 = !DILocation(line: 338, column: 34, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4100, file: !95, line: 336, column: 47)
!4105 = !DILocation(line: 339, column: 9, scope: !4104)
!4106 = !DILocation(line: 340, column: 34, scope: !4104)
!4107 = !DILocation(line: 342, column: 46, scope: !4104)
!4108 = !DILocation(line: 342, column: 19, scope: !4104)
!4109 = !DILocation(line: 342, column: 17, scope: !4104)
!4110 = !DILocation(line: 344, column: 41, scope: !4104)
!4111 = !DILocation(line: 344, column: 38, scope: !4104)
!4112 = !DILocation(line: 345, column: 42, scope: !4104)
!4113 = !DILocation(line: 347, column: 9, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4104, file: !95, line: 347, column: 9)
!4115 = !DILocation(line: 348, column: 41, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4117, file: !95, line: 348, column: 17)
!4117 = distinct !DILexicalBlock(scope: !4118, file: !95, line: 347, column: 49)
!4118 = distinct !DILexicalBlock(scope: !4114, file: !95, line: 347, column: 9)
!4119 = !DILocation(line: 348, column: 17, scope: !4117)
!4120 = !DILocation(line: 350, column: 24, scope: !4121)
!4121 = distinct !DILexicalBlock(scope: !4116, file: !95, line: 348, column: 61)
!4122 = !DILocation(line: 350, column: 22, scope: !4121)
!4123 = !DILocation(line: 352, column: 21, scope: !4124)
!4124 = distinct !DILexicalBlock(scope: !4121, file: !95, line: 352, column: 21)
!4125 = !DILocation(line: 352, column: 26, scope: !4124)
!4126 = !DILocation(line: 352, column: 21, scope: !4121)
!4127 = !DILocation(line: 353, column: 56, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4124, file: !95, line: 352, column: 32)
!4129 = !DILocation(line: 354, column: 55, scope: !4128)
!4130 = !DILocation(line: 356, column: 62, scope: !4128)
!4131 = !DILocation(line: 356, column: 112, scope: !4128)
!4132 = !DILocation(line: 356, column: 21, scope: !4128)
!4133 = !DILocation(line: 357, column: 17, scope: !4128)
!4134 = !DILocation(line: 347, column: 45, scope: !4118)
!4135 = !DILocation(line: 347, column: 23, scope: !4118)
!4136 = distinct !{!4136, !4113, !4137}
!4137 = !DILocation(line: 360, column: 9, scope: !4114)
!4138 = !DILocation(line: 362, column: 42, scope: !4104)
!4139 = !DILocation(line: 364, column: 28, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4104, file: !95, line: 364, column: 13)
!4141 = !DILocation(line: 364, column: 48, scope: !4140)
!4142 = !DILocation(line: 364, column: 13, scope: !4104)
!4143 = !DILocation(line: 365, column: 13, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4140, file: !95, line: 364, column: 54)
!4145 = !DILocation(line: 366, column: 9, scope: !4144)
!4146 = !DILocation(line: 369, column: 1, scope: !4088)
!4147 = distinct !DISubprogram(name: "hal_gdma_init", scope: !346, file: !346, line: 74, type: !4148, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4152)
!4148 = !DISubroutineType(types: !4149)
!4149 = !{!4150, !4151}
!4150 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gdma_status_t", file: !349, line: 197, baseType: !348)
!4151 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gdma_channel_t", file: !98, line: 918, baseType: !355)
!4152 = !{!4153, !4154, !4155, !4156}
!4153 = !DILocalVariable(name: "channel", arg: 1, scope: !4147, file: !346, line: 74, type: !4151)
!4154 = !DILocalVariable(name: "index", scope: !4147, file: !346, line: 77, type: !61)
!4155 = !DILocalVariable(name: "status", scope: !4147, file: !346, line: 78, type: !4150)
!4156 = !DILocalVariable(name: "saved_mask", scope: !4157, file: !346, line: 93, type: !61)
!4157 = distinct !DILexicalBlock(scope: !4147, file: !346, line: 93, column: 5)
!4158 = !DILocation(line: 0, scope: !4147)
!4159 = !DILocation(line: 80, column: 13, scope: !4147)
!4160 = !DILocation(line: 82, column: 23, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4147, file: !346, line: 82, column: 9)
!4162 = !DILocation(line: 82, column: 9, scope: !4147)
!4163 = !DILocation(line: 87, column: 13, scope: !4147)
!4164 = !DILocation(line: 89, column: 23, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4147, file: !346, line: 89, column: 9)
!4166 = !DILocation(line: 89, column: 9, scope: !4147)
!4167 = !DILocation(line: 93, column: 5, scope: !4157)
!4168 = !DILocation(line: 0, scope: !4157)
!4169 = !DILocation(line: 93, column: 5, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4157, file: !346, line: 93, column: 5)
!4171 = !DILocation(line: 93, column: 5, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4170, file: !346, line: 93, column: 5)
!4173 = !DILocation(line: 99, column: 5, scope: !4147)
!4174 = !DILocation(line: 101, column: 5, scope: !4147)
!4175 = !DILocation(line: 102, column: 5, scope: !4147)
!4176 = !DILocation(line: 113, column: 5, scope: !4147)
!4177 = !DILocation(line: 94, column: 9, scope: !4147)
!4178 = !DILocation(line: 115, column: 1, scope: !4147)
!4179 = distinct !DISubprogram(name: "hal_gdma_check_valid_channel", scope: !346, file: !346, line: 62, type: !4180, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4182)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!61, !4151}
!4182 = !{!4183, !4184}
!4183 = !DILocalVariable(name: "channel", arg: 1, scope: !4179, file: !346, line: 62, type: !4151)
!4184 = !DILocalVariable(name: "index", scope: !4179, file: !346, line: 64, type: !61)
!4185 = !DILocation(line: 0, scope: !4179)
!4186 = !DILocation(line: 66, column: 17, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4179, file: !346, line: 66, column: 9)
!4188 = !DILocation(line: 71, column: 5, scope: !4179)
!4189 = distinct !DISubprogram(name: "hal_gdma_deinit", scope: !346, file: !346, line: 117, type: !4148, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4190)
!4190 = !{!4191, !4192, !4193, !4194}
!4191 = !DILocalVariable(name: "channel", arg: 1, scope: !4189, file: !346, line: 117, type: !4151)
!4192 = !DILocalVariable(name: "index", scope: !4189, file: !346, line: 120, type: !61)
!4193 = !DILocalVariable(name: "global_status", scope: !4189, file: !346, line: 123, type: !60)
!4194 = !DILocalVariable(name: "saved_mask", scope: !4189, file: !346, line: 124, type: !61)
!4195 = !DILocation(line: 0, scope: !4189)
!4196 = !DILocation(line: 123, column: 5, scope: !4189)
!4197 = !DILocation(line: 123, column: 24, scope: !4189)
!4198 = !DILocation(line: 126, column: 13, scope: !4189)
!4199 = !DILocation(line: 128, column: 23, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4189, file: !346, line: 128, column: 9)
!4201 = !DILocation(line: 128, column: 9, scope: !4189)
!4202 = !DILocation(line: 131, column: 18, scope: !4189)
!4203 = !DILocation(line: 134, column: 21, scope: !4189)
!4204 = !DILocation(line: 134, column: 19, scope: !4189)
!4205 = !DILocation(line: 136, column: 9, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4189, file: !346, line: 136, column: 9)
!4207 = !DILocation(line: 136, column: 23, scope: !4206)
!4208 = !DILocation(line: 136, column: 9, scope: !4189)
!4209 = !DILocation(line: 139, column: 9, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4206, file: !346, line: 136, column: 51)
!4211 = !DILocation(line: 147, column: 9, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4189, file: !346, line: 147, column: 9)
!4213 = !DILocation(line: 147, column: 23, scope: !4212)
!4214 = !DILocation(line: 147, column: 9, scope: !4189)
!4215 = !DILocation(line: 150, column: 9, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4212, file: !346, line: 147, column: 53)
!4217 = !DILocation(line: 155, column: 5, scope: !4189)
!4218 = !DILocation(line: 158, column: 5, scope: !4219)
!4219 = distinct !DILexicalBlock(scope: !4189, file: !346, line: 158, column: 5)
!4220 = !DILocation(line: 166, column: 13, scope: !4189)
!4221 = !DILocation(line: 168, column: 23, scope: !4222)
!4222 = distinct !DILexicalBlock(scope: !4189, file: !346, line: 168, column: 9)
!4223 = !DILocation(line: 172, column: 1, scope: !4189)
!4224 = distinct !DISubprogram(name: "hal_gdma_start_polling", scope: !346, file: !346, line: 174, type: !4225, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4227)
!4225 = !DISubroutineType(types: !4226)
!4226 = !{!4150, !4151, !61, !61, !61}
!4227 = !{!4228, !4229, !4230, !4231, !4232, !4234, !4235, !4236, !4237, !4238}
!4228 = !DILocalVariable(name: "channel", arg: 1, scope: !4224, file: !346, line: 174, type: !4151)
!4229 = !DILocalVariable(name: "destination_address", arg: 2, scope: !4224, file: !346, line: 174, type: !61)
!4230 = !DILocalVariable(name: "source_address", arg: 3, scope: !4224, file: !346, line: 174, type: !61)
!4231 = !DILocalVariable(name: "data_length", arg: 4, scope: !4224, file: !346, line: 174, type: !61)
!4232 = !DILocalVariable(name: "size", scope: !4224, file: !346, line: 177, type: !4233)
!4233 = !DIDerivedType(tag: DW_TAG_typedef, name: "gdma_transfer_size_format_t", file: !365, line: 51, baseType: !364)
!4234 = !DILocalVariable(name: "gdma_control", scope: !4224, file: !346, line: 180, type: !61)
!4235 = !DILocalVariable(name: "count", scope: !4224, file: !346, line: 183, type: !61)
!4236 = !DILocalVariable(name: "saved_mask", scope: !4224, file: !346, line: 184, type: !61)
!4237 = !DILocalVariable(name: "global_status", scope: !4224, file: !346, line: 187, type: !60)
!4238 = !DILocalVariable(name: "index", scope: !4224, file: !346, line: 189, type: !61)
!4239 = !DILocation(line: 0, scope: !4224)
!4240 = !DILocation(line: 183, column: 5, scope: !4224)
!4241 = !DILocation(line: 183, column: 14, scope: !4224)
!4242 = !DILocation(line: 187, column: 5, scope: !4224)
!4243 = !DILocation(line: 187, column: 24, scope: !4224)
!4244 = !DILocation(line: 191, column: 13, scope: !4224)
!4245 = !DILocation(line: 193, column: 23, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4224, file: !346, line: 193, column: 9)
!4247 = !DILocation(line: 193, column: 9, scope: !4224)
!4248 = !DILocation(line: 202, column: 30, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4224, file: !346, line: 202, column: 9)
!4250 = !DILocation(line: 202, column: 35, scope: !4249)
!4251 = !DILocation(line: 202, column: 9, scope: !4224)
!4252 = !DILocation(line: 203, column: 9, scope: !4253)
!4253 = distinct !DILexicalBlock(scope: !4249, file: !346, line: 202, column: 40)
!4254 = !DILocation(line: 208, column: 25, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4224, file: !346, line: 208, column: 9)
!4256 = !DILocation(line: 208, column: 30, scope: !4255)
!4257 = !DILocation(line: 208, column: 9, scope: !4224)
!4258 = !DILocation(line: 209, column: 9, scope: !4259)
!4259 = distinct !DILexicalBlock(scope: !4255, file: !346, line: 208, column: 35)
!4260 = !DILocation(line: 215, column: 17, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4224, file: !346, line: 215, column: 9)
!4262 = !DILocation(line: 215, column: 9, scope: !4224)
!4263 = !DILocation(line: 216, column: 9, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4261, file: !346, line: 215, column: 62)
!4265 = !DILocation(line: 221, column: 17, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4224, file: !346, line: 221, column: 9)
!4267 = !DILocation(line: 221, column: 9, scope: !4224)
!4268 = !DILocation(line: 222, column: 9, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4266, file: !346, line: 221, column: 57)
!4270 = !DILocation(line: 226, column: 18, scope: !4224)
!4271 = !DILocation(line: 229, column: 21, scope: !4224)
!4272 = !DILocation(line: 229, column: 19, scope: !4224)
!4273 = !DILocation(line: 231, column: 9, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4224, file: !346, line: 231, column: 9)
!4275 = !DILocation(line: 231, column: 23, scope: !4274)
!4276 = !DILocation(line: 231, column: 9, scope: !4224)
!4277 = !DILocation(line: 234, column: 9, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4274, file: !346, line: 231, column: 51)
!4279 = !DILocation(line: 242, column: 9, scope: !4280)
!4280 = distinct !DILexicalBlock(scope: !4224, file: !346, line: 242, column: 9)
!4281 = !DILocation(line: 242, column: 23, scope: !4280)
!4282 = !DILocation(line: 242, column: 9, scope: !4224)
!4283 = !DILocation(line: 245, column: 9, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4280, file: !346, line: 242, column: 53)
!4285 = !DILocation(line: 250, column: 5, scope: !4224)
!4286 = !DILocation(line: 255, column: 12, scope: !4224)
!4287 = !DILocation(line: 257, column: 9, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4224, file: !346, line: 257, column: 9)
!4289 = !DILocation(line: 257, column: 15, scope: !4288)
!4290 = !DILocation(line: 257, column: 9, scope: !4224)
!4291 = !DILocation(line: 263, column: 18, scope: !4224)
!4292 = !DILocation(line: 265, column: 5, scope: !4224)
!4293 = !DILocation(line: 267, column: 5, scope: !4224)
!4294 = !DILocation(line: 280, column: 5, scope: !4224)
!4295 = !DILocation(line: 283, column: 21, scope: !4224)
!4296 = !DILocation(line: 283, column: 19, scope: !4224)
!4297 = !DILocation(line: 285, column: 12, scope: !4224)
!4298 = !DILocation(line: 285, column: 26, scope: !4224)
!4299 = !DILocation(line: 285, column: 5, scope: !4224)
!4300 = !DILocation(line: 287, column: 25, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4224, file: !346, line: 285, column: 54)
!4302 = !DILocation(line: 287, column: 23, scope: !4301)
!4303 = distinct !{!4303, !4299, !4304}
!4304 = !DILocation(line: 288, column: 5, scope: !4224)
!4305 = !DILocation(line: 292, column: 1, scope: !4224)
!4306 = distinct !DISubprogram(name: "hal_gdma_start_interrupt", scope: !346, file: !346, line: 294, type: !4225, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4307)
!4307 = !{!4308, !4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317}
!4308 = !DILocalVariable(name: "channel", arg: 1, scope: !4306, file: !346, line: 294, type: !4151)
!4309 = !DILocalVariable(name: "destination_address", arg: 2, scope: !4306, file: !346, line: 294, type: !61)
!4310 = !DILocalVariable(name: "source_address", arg: 3, scope: !4306, file: !346, line: 294, type: !61)
!4311 = !DILocalVariable(name: "data_length", arg: 4, scope: !4306, file: !346, line: 294, type: !61)
!4312 = !DILocalVariable(name: "size", scope: !4306, file: !346, line: 297, type: !4233)
!4313 = !DILocalVariable(name: "gdma_control", scope: !4306, file: !346, line: 300, type: !61)
!4314 = !DILocalVariable(name: "count", scope: !4306, file: !346, line: 303, type: !61)
!4315 = !DILocalVariable(name: "global_status", scope: !4306, file: !346, line: 306, type: !60)
!4316 = !DILocalVariable(name: "index", scope: !4306, file: !346, line: 308, type: !61)
!4317 = !DILocalVariable(name: "saved_mask", scope: !4306, file: !346, line: 309, type: !61)
!4318 = !DILocation(line: 0, scope: !4306)
!4319 = !DILocation(line: 303, column: 5, scope: !4306)
!4320 = !DILocation(line: 303, column: 14, scope: !4306)
!4321 = !DILocation(line: 306, column: 5, scope: !4306)
!4322 = !DILocation(line: 306, column: 24, scope: !4306)
!4323 = !DILocation(line: 311, column: 13, scope: !4306)
!4324 = !DILocation(line: 313, column: 23, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4306, file: !346, line: 313, column: 9)
!4326 = !DILocation(line: 313, column: 9, scope: !4306)
!4327 = !DILocation(line: 322, column: 30, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4306, file: !346, line: 322, column: 9)
!4329 = !DILocation(line: 322, column: 35, scope: !4328)
!4330 = !DILocation(line: 322, column: 9, scope: !4306)
!4331 = !DILocation(line: 323, column: 9, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4328, file: !346, line: 322, column: 40)
!4333 = !DILocation(line: 328, column: 25, scope: !4334)
!4334 = distinct !DILexicalBlock(scope: !4306, file: !346, line: 328, column: 9)
!4335 = !DILocation(line: 328, column: 30, scope: !4334)
!4336 = !DILocation(line: 328, column: 9, scope: !4306)
!4337 = !DILocation(line: 329, column: 9, scope: !4338)
!4338 = distinct !DILexicalBlock(scope: !4334, file: !346, line: 328, column: 35)
!4339 = !DILocation(line: 335, column: 17, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4306, file: !346, line: 335, column: 9)
!4341 = !DILocation(line: 335, column: 9, scope: !4306)
!4342 = !DILocation(line: 336, column: 9, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4340, file: !346, line: 335, column: 62)
!4344 = !DILocation(line: 341, column: 17, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4306, file: !346, line: 341, column: 9)
!4346 = !DILocation(line: 341, column: 9, scope: !4306)
!4347 = !DILocation(line: 342, column: 9, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4345, file: !346, line: 341, column: 57)
!4349 = !DILocation(line: 347, column: 18, scope: !4306)
!4350 = !DILocation(line: 350, column: 21, scope: !4306)
!4351 = !DILocation(line: 350, column: 19, scope: !4306)
!4352 = !DILocation(line: 352, column: 9, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4306, file: !346, line: 352, column: 9)
!4354 = !DILocation(line: 352, column: 23, scope: !4353)
!4355 = !DILocation(line: 352, column: 9, scope: !4306)
!4356 = !DILocation(line: 355, column: 9, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4353, file: !346, line: 352, column: 51)
!4358 = !DILocation(line: 363, column: 9, scope: !4359)
!4359 = distinct !DILexicalBlock(scope: !4306, file: !346, line: 363, column: 9)
!4360 = !DILocation(line: 363, column: 23, scope: !4359)
!4361 = !DILocation(line: 363, column: 9, scope: !4306)
!4362 = !DILocation(line: 366, column: 9, scope: !4363)
!4363 = distinct !DILexicalBlock(scope: !4359, file: !346, line: 363, column: 53)
!4364 = !DILocation(line: 371, column: 5, scope: !4306)
!4365 = !DILocation(line: 377, column: 12, scope: !4306)
!4366 = !DILocation(line: 379, column: 9, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4306, file: !346, line: 379, column: 9)
!4368 = !DILocation(line: 379, column: 15, scope: !4367)
!4369 = !DILocation(line: 379, column: 9, scope: !4306)
!4370 = !DILocation(line: 386, column: 18, scope: !4306)
!4371 = !DILocation(line: 388, column: 5, scope: !4306)
!4372 = !DILocation(line: 390, column: 5, scope: !4306)
!4373 = !DILocation(line: 403, column: 5, scope: !4306)
!4374 = !DILocation(line: 405, column: 5, scope: !4306)
!4375 = !DILocation(line: 407, column: 1, scope: !4306)
!4376 = distinct !DISubprogram(name: "hal_gdma_stop", scope: !346, file: !346, line: 409, type: !4148, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4377)
!4377 = !{!4378, !4379}
!4378 = !DILocalVariable(name: "channel", arg: 1, scope: !4376, file: !346, line: 409, type: !4151)
!4379 = !DILocalVariable(name: "index", scope: !4376, file: !346, line: 412, type: !61)
!4380 = !DILocation(line: 0, scope: !4376)
!4381 = !DILocation(line: 414, column: 13, scope: !4376)
!4382 = !DILocation(line: 416, column: 14, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4376, file: !346, line: 416, column: 9)
!4384 = !DILocation(line: 416, column: 9, scope: !4376)
!4385 = !DILocation(line: 421, column: 5, scope: !4376)
!4386 = !DILocation(line: 433, column: 5, scope: !4376)
!4387 = !DILocation(line: 434, column: 1, scope: !4376)
!4388 = distinct !DISubprogram(name: "hal_gdma_register_callback", scope: !346, file: !346, line: 436, type: !4389, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4391)
!4389 = !DISubroutineType(types: !4390)
!4390 = !{!4150, !4151, !545, !88}
!4391 = !{!4392, !4393, !4394, !4395}
!4392 = !DILocalVariable(name: "channel", arg: 1, scope: !4388, file: !346, line: 436, type: !4151)
!4393 = !DILocalVariable(name: "callback", arg: 2, scope: !4388, file: !346, line: 436, type: !545)
!4394 = !DILocalVariable(name: "user_data", arg: 3, scope: !4388, file: !346, line: 436, type: !88)
!4395 = !DILocalVariable(name: "index", scope: !4388, file: !346, line: 439, type: !61)
!4396 = !DILocation(line: 0, scope: !4388)
!4397 = !DILocation(line: 441, column: 13, scope: !4388)
!4398 = !DILocation(line: 443, column: 23, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4388, file: !346, line: 443, column: 9)
!4400 = !DILocation(line: 443, column: 9, scope: !4388)
!4401 = !DILocation(line: 447, column: 45, scope: !4388)
!4402 = !DILocation(line: 447, column: 5, scope: !4388)
!4403 = !DILocation(line: 449, column: 5, scope: !4388)
!4404 = !DILocation(line: 451, column: 1, scope: !4388)
!4405 = distinct !DISubprogram(name: "hal_gdma_get_running_status", scope: !346, file: !346, line: 453, type: !4406, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4410)
!4406 = !DISubroutineType(types: !4407)
!4407 = !{!4150, !4151, !4408}
!4408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4409, size: 32)
!4409 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gdma_running_status_t", file: !349, line: 211, baseType: !374)
!4410 = !{!4411, !4412, !4413, !4414}
!4411 = !DILocalVariable(name: "channel", arg: 1, scope: !4405, file: !346, line: 453, type: !4151)
!4412 = !DILocalVariable(name: "running_status", arg: 2, scope: !4405, file: !346, line: 453, type: !4408)
!4413 = !DILocalVariable(name: "global_status", scope: !4405, file: !346, line: 458, type: !60)
!4414 = !DILocalVariable(name: "index", scope: !4405, file: !346, line: 460, type: !61)
!4415 = !DILocation(line: 0, scope: !4405)
!4416 = !DILocation(line: 458, column: 5, scope: !4405)
!4417 = !DILocation(line: 458, column: 24, scope: !4405)
!4418 = !DILocation(line: 462, column: 13, scope: !4405)
!4419 = !DILocation(line: 464, column: 23, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4405, file: !346, line: 464, column: 9)
!4421 = !DILocation(line: 464, column: 9, scope: !4405)
!4422 = !DILocation(line: 469, column: 21, scope: !4405)
!4423 = !DILocation(line: 469, column: 19, scope: !4405)
!4424 = !DILocation(line: 471, column: 9, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4405, file: !346, line: 471, column: 9)
!4426 = !DILocation(line: 471, column: 23, scope: !4425)
!4427 = !DILocation(line: 0, scope: !4425)
!4428 = !DILocation(line: 478, column: 5, scope: !4405)
!4429 = !DILocation(line: 480, column: 1, scope: !4405)
!4430 = distinct !DISubprogram(name: "gdma_reset", scope: !387, file: !387, line: 138, type: !4431, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4433)
!4431 = !DISubroutineType(types: !4432)
!4432 = !{null, !61}
!4433 = !{!4434}
!4434 = !DILocalVariable(name: "index", arg: 1, scope: !4430, file: !387, line: 138, type: !61)
!4435 = !DILocation(line: 0, scope: !4430)
!4436 = !DILocation(line: 142, column: 5, scope: !4430)
!4437 = !DILocation(line: 142, column: 18, scope: !4430)
!4438 = !DILocation(line: 142, column: 27, scope: !4430)
!4439 = !DILocation(line: 143, column: 5, scope: !4430)
!4440 = !DILocation(line: 143, column: 18, scope: !4430)
!4441 = !DILocation(line: 143, column: 29, scope: !4430)
!4442 = !DILocation(line: 144, column: 5, scope: !4430)
!4443 = !DILocation(line: 144, column: 18, scope: !4430)
!4444 = !DILocation(line: 144, column: 30, scope: !4430)
!4445 = !DILocation(line: 145, column: 5, scope: !4430)
!4446 = !DILocation(line: 145, column: 18, scope: !4430)
!4447 = !DILocation(line: 145, column: 27, scope: !4430)
!4448 = !DILocation(line: 146, column: 5, scope: !4430)
!4449 = !DILocation(line: 146, column: 18, scope: !4430)
!4450 = !DILocation(line: 146, column: 27, scope: !4430)
!4451 = !DILocation(line: 147, column: 5, scope: !4430)
!4452 = !DILocation(line: 147, column: 18, scope: !4430)
!4453 = !DILocation(line: 147, column: 30, scope: !4430)
!4454 = !DILocation(line: 149, column: 1, scope: !4430)
!4455 = distinct !DISubprogram(name: "gdma_get_global_status", scope: !387, file: !387, line: 151, type: !3757, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4456)
!4456 = !{!4457, !4458}
!4457 = !DILocalVariable(name: "index", arg: 1, scope: !4455, file: !387, line: 151, type: !61)
!4458 = !DILocalVariable(name: "global_status", scope: !4455, file: !387, line: 154, type: !61)
!4459 = !DILocation(line: 0, scope: !4455)
!4460 = !DILocation(line: 157, column: 21, scope: !4455)
!4461 = !DILocation(line: 157, column: 41, scope: !4455)
!4462 = !DILocation(line: 159, column: 5, scope: !4455)
!4463 = distinct !DISubprogram(name: "gdma_register_callback", scope: !387, file: !387, line: 163, type: !4464, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4466)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{null, !61, !545, !88}
!4466 = !{!4467, !4468, !4469}
!4467 = !DILocalVariable(name: "index", arg: 1, scope: !4463, file: !387, line: 163, type: !61)
!4468 = !DILocalVariable(name: "callback", arg: 2, scope: !4463, file: !387, line: 163, type: !545)
!4469 = !DILocalVariable(name: "user_data", arg: 3, scope: !4463, file: !387, line: 163, type: !88)
!4470 = !DILocation(line: 0, scope: !4463)
!4471 = !DILocation(line: 166, column: 32, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4463, file: !387, line: 166, column: 9)
!4473 = !DILocation(line: 166, column: 37, scope: !4472)
!4474 = !DILocation(line: 166, column: 9, scope: !4463)
!4475 = !DILocation(line: 167, column: 37, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4472, file: !387, line: 166, column: 46)
!4477 = !DILocation(line: 168, column: 32, scope: !4476)
!4478 = !DILocation(line: 168, column: 41, scope: !4476)
!4479 = !DILocation(line: 169, column: 5, scope: !4476)
!4480 = !DILocation(line: 170, column: 1, scope: !4463)
!4481 = distinct !DISubprogram(name: "gdma_stop", scope: !387, file: !387, line: 172, type: !4431, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4482)
!4482 = !{!4483}
!4483 = !DILocalVariable(name: "index", arg: 1, scope: !4481, file: !387, line: 172, type: !61)
!4484 = !DILocation(line: 0, scope: !4481)
!4485 = !DILocation(line: 174, column: 5, scope: !4481)
!4486 = !DILocation(line: 174, column: 18, scope: !4481)
!4487 = !DILocation(line: 174, column: 29, scope: !4481)
!4488 = !DILocation(line: 175, column: 1, scope: !4481)
!4489 = distinct !DISubprogram(name: "gdma_start", scope: !387, file: !387, line: 177, type: !4431, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4490)
!4490 = !{!4491}
!4491 = !DILocalVariable(name: "index", arg: 1, scope: !4489, file: !387, line: 177, type: !61)
!4492 = !DILocation(line: 0, scope: !4489)
!4493 = !DILocation(line: 179, column: 5, scope: !4489)
!4494 = !DILocation(line: 179, column: 18, scope: !4489)
!4495 = !DILocation(line: 179, column: 29, scope: !4489)
!4496 = !DILocation(line: 180, column: 1, scope: !4489)
!4497 = distinct !DISubprogram(name: "gdma_set_control", scope: !387, file: !387, line: 183, type: !4498, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4500)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{null, !61, !61, !61}
!4500 = !{!4501, !4502, !4503}
!4501 = !DILocalVariable(name: "index", arg: 1, scope: !4497, file: !387, line: 183, type: !61)
!4502 = !DILocalVariable(name: "control", arg: 2, scope: !4497, file: !387, line: 183, type: !61)
!4503 = !DILocalVariable(name: "count", arg: 3, scope: !4497, file: !387, line: 183, type: !61)
!4504 = !DILocation(line: 0, scope: !4497)
!4505 = !DILocation(line: 185, column: 5, scope: !4497)
!4506 = !DILocation(line: 185, column: 18, scope: !4497)
!4507 = !DILocation(line: 185, column: 27, scope: !4497)
!4508 = !DILocation(line: 186, column: 5, scope: !4497)
!4509 = !DILocation(line: 186, column: 18, scope: !4497)
!4510 = !DILocation(line: 186, column: 29, scope: !4497)
!4511 = !DILocation(line: 187, column: 1, scope: !4497)
!4512 = distinct !DISubprogram(name: "gdma_set_address", scope: !387, file: !387, line: 189, type: !4498, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4513)
!4513 = !{!4514, !4515, !4516}
!4514 = !DILocalVariable(name: "index", arg: 1, scope: !4512, file: !387, line: 189, type: !61)
!4515 = !DILocalVariable(name: "destination", arg: 2, scope: !4512, file: !387, line: 189, type: !61)
!4516 = !DILocalVariable(name: "source", arg: 3, scope: !4512, file: !387, line: 189, type: !61)
!4517 = !DILocation(line: 0, scope: !4512)
!4518 = !DILocation(line: 191, column: 5, scope: !4512)
!4519 = !DILocation(line: 191, column: 18, scope: !4512)
!4520 = !DILocation(line: 191, column: 27, scope: !4512)
!4521 = !DILocation(line: 192, column: 5, scope: !4512)
!4522 = !DILocation(line: 192, column: 18, scope: !4512)
!4523 = !DILocation(line: 192, column: 27, scope: !4512)
!4524 = !DILocation(line: 194, column: 1, scope: !4512)
!4525 = distinct !DISubprogram(name: "dma_enable_clock", scope: !387, file: !387, line: 195, type: !4526, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4529)
!4526 = !DISubroutineType(types: !4527)
!4527 = !{!61, !4528}
!4528 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_domain_type_t", file: !360, line: 127, baseType: !359)
!4529 = !{!4530, !4531, !4533}
!4530 = !DILocalVariable(name: "domain", arg: 1, scope: !4525, file: !387, line: 195, type: !4528)
!4531 = !DILocalVariable(name: "clock_status", scope: !4525, file: !387, line: 197, type: !4532)
!4532 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !390, line: 106, baseType: !389)
!4533 = !DILocalVariable(name: "status", scope: !4525, file: !387, line: 198, type: !61)
!4534 = !DILocation(line: 0, scope: !4525)
!4535 = !DILocation(line: 200, column: 16, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4525, file: !387, line: 200, column: 9)
!4537 = !DILocation(line: 200, column: 9, scope: !4525)
!4538 = !DILocation(line: 202, column: 24, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4536, file: !387, line: 200, column: 27)
!4540 = !DILocation(line: 203, column: 33, scope: !4541)
!4541 = distinct !DILexicalBlock(scope: !4539, file: !387, line: 203, column: 13)
!4542 = !DILocation(line: 207, column: 24, scope: !4539)
!4543 = !DILocation(line: 208, column: 33, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4539, file: !387, line: 208, column: 13)
!4545 = !DILocation(line: 208, column: 13, scope: !4539)
!4546 = !DILocation(line: 213, column: 24, scope: !4547)
!4547 = distinct !DILexicalBlock(scope: !4536, file: !387, line: 211, column: 12)
!4548 = !DILocation(line: 214, column: 33, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4547, file: !387, line: 214, column: 13)
!4550 = !DILocation(line: 214, column: 13, scope: !4547)
!4551 = !DILocation(line: 0, scope: !4536)
!4552 = !DILocation(line: 219, column: 5, scope: !4525)
!4553 = distinct !DISubprogram(name: "dma_disable_clock", scope: !387, file: !387, line: 223, type: !4526, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4554)
!4554 = !{!4555, !4556, !4557}
!4555 = !DILocalVariable(name: "domain", arg: 1, scope: !4553, file: !387, line: 223, type: !4528)
!4556 = !DILocalVariable(name: "return_status", scope: !4553, file: !387, line: 225, type: !61)
!4557 = !DILocalVariable(name: "clock_status", scope: !4553, file: !387, line: 226, type: !4532)
!4558 = !DILocation(line: 0, scope: !4553)
!4559 = !DILocation(line: 228, column: 16, scope: !4560)
!4560 = distinct !DILexicalBlock(scope: !4553, file: !387, line: 228, column: 9)
!4561 = !DILocation(line: 228, column: 9, scope: !4553)
!4562 = !DILocation(line: 231, column: 24, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4560, file: !387, line: 228, column: 27)
!4564 = !DILocation(line: 232, column: 33, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4563, file: !387, line: 232, column: 13)
!4566 = !DILocation(line: 235, column: 24, scope: !4563)
!4567 = !DILocation(line: 236, column: 33, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4563, file: !387, line: 236, column: 13)
!4569 = !DILocation(line: 236, column: 13, scope: !4563)
!4570 = !DILocation(line: 242, column: 24, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4560, file: !387, line: 240, column: 12)
!4572 = !DILocation(line: 243, column: 33, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4571, file: !387, line: 243, column: 13)
!4574 = !DILocation(line: 243, column: 13, scope: !4571)
!4575 = !DILocation(line: 0, scope: !4560)
!4576 = !DILocation(line: 248, column: 5, scope: !4553)
!4577 = distinct !DISubprogram(name: "pdma_init", scope: !387, file: !387, line: 279, type: !4578, scopeLine: 280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4582)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{!4580, !4581}
!4580 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_status_t", file: !360, line: 171, baseType: !396)
!4581 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_channel_t", file: !360, line: 147, baseType: !402)
!4582 = !{!4583, !4584, !4585, !4586}
!4583 = !DILocalVariable(name: "channel", arg: 1, scope: !4577, file: !387, line: 279, type: !4581)
!4584 = !DILocalVariable(name: "offset", scope: !4577, file: !387, line: 282, type: !61)
!4585 = !DILocalVariable(name: "result", scope: !4577, file: !387, line: 283, type: !61)
!4586 = !DILocalVariable(name: "saved_mask", scope: !4587, file: !387, line: 291, type: !61)
!4587 = distinct !DILexicalBlock(scope: !4577, file: !387, line: 291, column: 5)
!4588 = !DILocation(line: 0, scope: !4577)
!4589 = !DILocation(line: 284, column: 14, scope: !4577)
!4590 = !DILocation(line: 286, column: 14, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4577, file: !387, line: 286, column: 9)
!4592 = !DILocation(line: 286, column: 9, scope: !4577)
!4593 = !DILocation(line: 291, column: 5, scope: !4587)
!4594 = !DILocation(line: 0, scope: !4587)
!4595 = !DILocation(line: 291, column: 5, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4587, file: !387, line: 291, column: 5)
!4597 = !DILocation(line: 291, column: 5, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4596, file: !387, line: 291, column: 5)
!4599 = !DILocation(line: 291, column: 5, scope: !4600)
!4600 = distinct !DILexicalBlock(scope: !4596, file: !387, line: 291, column: 5)
!4601 = !DILocation(line: 294, column: 14, scope: !4577)
!4602 = !DILocation(line: 296, column: 14, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4577, file: !387, line: 296, column: 9)
!4604 = !DILocation(line: 296, column: 9, scope: !4577)
!4605 = !DILocation(line: 300, column: 14, scope: !4577)
!4606 = !DILocation(line: 302, column: 14, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4577, file: !387, line: 302, column: 9)
!4608 = !DILocation(line: 302, column: 9, scope: !4577)
!4609 = !DILocation(line: 307, column: 5, scope: !4577)
!4610 = !DILocation(line: 307, column: 19, scope: !4577)
!4611 = !DILocation(line: 307, column: 28, scope: !4577)
!4612 = !DILocation(line: 308, column: 5, scope: !4577)
!4613 = !DILocation(line: 308, column: 19, scope: !4577)
!4614 = !DILocation(line: 308, column: 30, scope: !4577)
!4615 = !DILocation(line: 309, column: 5, scope: !4577)
!4616 = !DILocation(line: 309, column: 19, scope: !4577)
!4617 = !DILocation(line: 309, column: 30, scope: !4577)
!4618 = !DILocation(line: 310, column: 5, scope: !4577)
!4619 = !DILocation(line: 310, column: 19, scope: !4577)
!4620 = !DILocation(line: 310, column: 31, scope: !4577)
!4621 = !DILocation(line: 311, column: 5, scope: !4577)
!4622 = !DILocation(line: 311, column: 19, scope: !4577)
!4623 = !DILocation(line: 311, column: 32, scope: !4577)
!4624 = !DILocation(line: 314, column: 5, scope: !4577)
!4625 = !DILocation(line: 315, column: 5, scope: !4577)
!4626 = !DILocation(line: 316, column: 5, scope: !4577)
!4627 = !DILocation(line: 317, column: 5, scope: !4577)
!4628 = !DILocation(line: 318, column: 5, scope: !4577)
!4629 = !DILocation(line: 319, column: 1, scope: !4577)
!4630 = distinct !DISubprogram(name: "pdma_check_valid_channel", scope: !387, file: !387, line: 262, type: !4631, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4633)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{!61, !4581}
!4633 = !{!4634, !4635}
!4634 = !DILocalVariable(name: "channel", arg: 1, scope: !4630, file: !387, line: 262, type: !4581)
!4635 = !DILocalVariable(name: "offset", scope: !4630, file: !387, line: 265, type: !61)
!4636 = !DILocation(line: 0, scope: !4630)
!4637 = !DILocation(line: 268, column: 22, scope: !4630)
!4638 = !DILocation(line: 270, column: 16, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4630, file: !387, line: 270, column: 9)
!4640 = !DILocation(line: 0, scope: !4639)
!4641 = !DILocation(line: 275, column: 1, scope: !4630)
!4642 = !DILocation(line: 0, scope: !553)
!4643 = !DILocation(line: 1113, column: 5, scope: !553)
!4644 = !DILocation(line: 1113, column: 24, scope: !553)
!4645 = !DILocation(line: 1126, column: 21, scope: !553)
!4646 = !DILocation(line: 1126, column: 37, scope: !553)
!4647 = !DILocation(line: 1126, column: 19, scope: !553)
!4648 = !DILocation(line: 1127, column: 9, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !553, file: !387, line: 1127, column: 9)
!4650 = !DILocation(line: 1127, column: 23, scope: !4649)
!4651 = !DILocation(line: 1127, column: 9, scope: !553)
!4652 = !DILocation(line: 1130, column: 9, scope: !4653)
!4653 = distinct !DILexicalBlock(scope: !4649, file: !387, line: 1127, column: 53)
!4654 = !DILocation(line: 1130, column: 18, scope: !4653)
!4655 = !DILocation(line: 1130, column: 30, scope: !4653)
!4656 = !DILocation(line: 1133, column: 44, scope: !4653)
!4657 = !DILocation(line: 1135, column: 27, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4653, file: !387, line: 1135, column: 13)
!4659 = !DILocation(line: 1135, column: 13, scope: !4653)
!4660 = !DILocation(line: 1134, column: 39, scope: !4653)
!4661 = !DILocation(line: 1136, column: 13, scope: !4662)
!4662 = distinct !DILexicalBlock(scope: !4658, file: !387, line: 1135, column: 36)
!4663 = !DILocation(line: 1141, column: 5, scope: !4653)
!4664 = !DILocation(line: 1138, column: 13, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4658, file: !387, line: 1137, column: 16)
!4666 = !DILocation(line: 0, scope: !4667)
!4667 = distinct !DILexicalBlock(scope: !553, file: !387, line: 1145, column: 5)
!4668 = !DILocation(line: 1145, column: 5, scope: !4667)
!4669 = !DILocation(line: 0, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !553, file: !387, line: 1170, column: 5)
!4671 = !DILocation(line: 1170, column: 5, scope: !4670)
!4672 = !DILocation(line: 1146, column: 25, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4674, file: !387, line: 1145, column: 51)
!4674 = distinct !DILexicalBlock(scope: !4667, file: !387, line: 1145, column: 5)
!4675 = !DILocation(line: 1146, column: 45, scope: !4673)
!4676 = !DILocation(line: 1146, column: 23, scope: !4673)
!4677 = !DILocation(line: 1149, column: 13, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4673, file: !387, line: 1149, column: 13)
!4679 = !DILocation(line: 1149, column: 38, scope: !4678)
!4680 = !DILocation(line: 1149, column: 34, scope: !4678)
!4681 = !DILocation(line: 1149, column: 27, scope: !4678)
!4682 = !DILocation(line: 1149, column: 13, scope: !4673)
!4683 = !DILocation(line: 1153, column: 17, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4685, file: !387, line: 1151, column: 13)
!4685 = distinct !DILexicalBlock(scope: !4678, file: !387, line: 1149, column: 78)
!4686 = !DILocation(line: 1153, column: 30, scope: !4684)
!4687 = !DILocation(line: 1153, column: 42, scope: !4684)
!4688 = !DILocation(line: 1156, column: 56, scope: !4684)
!4689 = !DILocation(line: 1158, column: 35, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4684, file: !387, line: 1158, column: 21)
!4691 = !DILocation(line: 1158, column: 21, scope: !4684)
!4692 = !DILocation(line: 1157, column: 51, scope: !4684)
!4693 = !DILocation(line: 1159, column: 21, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4690, file: !387, line: 1158, column: 44)
!4695 = !DILocation(line: 1163, column: 22, scope: !4684)
!4696 = !DILocation(line: 1163, column: 17, scope: !4684)
!4697 = !DILocation(line: 1163, column: 30, scope: !4684)
!4698 = !DILocation(line: 1163, column: 41, scope: !4684)
!4699 = !DILocation(line: 1165, column: 9, scope: !4685)
!4700 = !DILocation(line: 1161, column: 21, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4690, file: !387, line: 1160, column: 24)
!4702 = !DILocation(line: 1145, column: 47, scope: !4674)
!4703 = !DILocation(line: 1145, column: 27, scope: !4674)
!4704 = distinct !{!4704, !4668, !4705}
!4705 = !DILocation(line: 1166, column: 5, scope: !4667)
!4706 = !DILocation(line: 1171, column: 25, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !387, line: 1170, column: 61)
!4708 = distinct !DILexicalBlock(scope: !4670, file: !387, line: 1170, column: 5)
!4709 = !DILocation(line: 1171, column: 45, scope: !4707)
!4710 = !DILocation(line: 1171, column: 23, scope: !4707)
!4711 = !DILocation(line: 1174, column: 13, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4707, file: !387, line: 1174, column: 13)
!4713 = !DILocation(line: 1174, column: 38, scope: !4712)
!4714 = !DILocation(line: 1174, column: 34, scope: !4712)
!4715 = !DILocation(line: 1174, column: 27, scope: !4712)
!4716 = !DILocation(line: 1174, column: 13, scope: !4707)
!4717 = !DILocation(line: 1178, column: 17, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !4719, file: !387, line: 1176, column: 13)
!4719 = distinct !DILexicalBlock(scope: !4712, file: !387, line: 1174, column: 78)
!4720 = !DILocation(line: 1178, column: 30, scope: !4718)
!4721 = !DILocation(line: 1178, column: 42, scope: !4718)
!4722 = !DILocation(line: 1180, column: 56, scope: !4718)
!4723 = !DILocation(line: 1182, column: 35, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4718, file: !387, line: 1182, column: 21)
!4725 = !DILocation(line: 1182, column: 21, scope: !4718)
!4726 = !DILocation(line: 1181, column: 51, scope: !4718)
!4727 = !DILocation(line: 1183, column: 21, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4724, file: !387, line: 1182, column: 44)
!4729 = !DILocation(line: 1170, column: 57, scope: !4708)
!4730 = !DILocation(line: 1188, column: 9, scope: !4719)
!4731 = !DILocation(line: 1185, column: 21, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4724, file: !387, line: 1184, column: 24)
!4733 = !DILocation(line: 1170, column: 27, scope: !4708)
!4734 = distinct !{!4734, !4671, !4735}
!4735 = !DILocation(line: 1189, column: 5, scope: !4670)
!4736 = !DILocation(line: 1193, column: 1, scope: !553)
!4737 = distinct !DISubprogram(name: "pdma_deinit", scope: !387, file: !387, line: 324, type: !4578, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4738)
!4738 = !{!4739, !4740, !4741, !4742, !4743, !4744}
!4739 = !DILocalVariable(name: "channel", arg: 1, scope: !4737, file: !387, line: 324, type: !4581)
!4740 = !DILocalVariable(name: "offset", scope: !4737, file: !387, line: 326, type: !61)
!4741 = !DILocalVariable(name: "result", scope: !4737, file: !387, line: 327, type: !61)
!4742 = !DILocalVariable(name: "saved_mask", scope: !4737, file: !387, line: 328, type: !61)
!4743 = !DILocalVariable(name: "global_status", scope: !4737, file: !387, line: 330, type: !60)
!4744 = !DILocalVariable(name: "saved_mask", scope: !4745, file: !387, line: 356, type: !61)
!4745 = distinct !DILexicalBlock(scope: !4737, file: !387, line: 356, column: 5)
!4746 = !DILocation(line: 0, scope: !4737)
!4747 = !DILocation(line: 330, column: 5, scope: !4737)
!4748 = !DILocation(line: 330, column: 24, scope: !4737)
!4749 = !DILocation(line: 331, column: 14, scope: !4737)
!4750 = !DILocation(line: 332, column: 14, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4737, file: !387, line: 332, column: 9)
!4752 = !DILocation(line: 332, column: 9, scope: !4737)
!4753 = !DILocation(line: 336, column: 18, scope: !4737)
!4754 = !DILocation(line: 337, column: 21, scope: !4737)
!4755 = !DILocation(line: 337, column: 42, scope: !4737)
!4756 = !DILocation(line: 337, column: 19, scope: !4737)
!4757 = !DILocation(line: 339, column: 9, scope: !4758)
!4758 = distinct !DILexicalBlock(scope: !4737, file: !387, line: 339, column: 9)
!4759 = !DILocation(line: 339, column: 34, scope: !4758)
!4760 = !DILocation(line: 339, column: 30, scope: !4758)
!4761 = !DILocation(line: 339, column: 23, scope: !4758)
!4762 = !DILocation(line: 339, column: 9, scope: !4737)
!4763 = !DILocation(line: 341, column: 9, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4758, file: !387, line: 339, column: 75)
!4765 = !DILocation(line: 347, column: 9, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4737, file: !387, line: 347, column: 9)
!4767 = !DILocation(line: 347, column: 30, scope: !4766)
!4768 = !DILocation(line: 347, column: 23, scope: !4766)
!4769 = !DILocation(line: 347, column: 9, scope: !4737)
!4770 = !DILocation(line: 349, column: 9, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4766, file: !387, line: 347, column: 69)
!4772 = !DILocation(line: 353, column: 5, scope: !4737)
!4773 = !DILocation(line: 356, column: 5, scope: !4745)
!4774 = !DILocation(line: 0, scope: !4745)
!4775 = !DILocation(line: 356, column: 5, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4745, file: !387, line: 356, column: 5)
!4777 = !DILocation(line: 356, column: 5, scope: !4778)
!4778 = distinct !DILexicalBlock(scope: !4776, file: !387, line: 356, column: 5)
!4779 = !DILocation(line: 356, column: 5, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4776, file: !387, line: 356, column: 5)
!4781 = !DILocation(line: 359, column: 14, scope: !4737)
!4782 = !DILocation(line: 361, column: 14, scope: !4783)
!4783 = distinct !DILexicalBlock(scope: !4737, file: !387, line: 361, column: 9)
!4784 = !DILocation(line: 361, column: 9, scope: !4737)
!4785 = !DILocation(line: 365, column: 14, scope: !4737)
!4786 = !DILocation(line: 367, column: 14, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4737, file: !387, line: 367, column: 9)
!4788 = !DILocation(line: 372, column: 1, scope: !4737)
!4789 = distinct !DISubprogram(name: "pdma_set_ring_buffer", scope: !387, file: !387, line: 374, type: !4790, scopeLine: 376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4792)
!4790 = !DISubroutineType(types: !4791)
!4791 = !{!4580, !4581, !61, !61}
!4792 = !{!4793, !4794, !4795, !4796}
!4793 = !DILocalVariable(name: "channel", arg: 1, scope: !4789, file: !387, line: 374, type: !4581)
!4794 = !DILocalVariable(name: "wppt", arg: 2, scope: !4789, file: !387, line: 374, type: !61)
!4795 = !DILocalVariable(name: "wpto", arg: 3, scope: !4789, file: !387, line: 374, type: !61)
!4796 = !DILocalVariable(name: "offset", scope: !4789, file: !387, line: 377, type: !61)
!4797 = !DILocation(line: 0, scope: !4789)
!4798 = !DILocation(line: 379, column: 14, scope: !4789)
!4799 = !DILocation(line: 380, column: 14, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4789, file: !387, line: 380, column: 9)
!4801 = !DILocation(line: 380, column: 9, scope: !4789)
!4802 = !DILocation(line: 385, column: 14, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4789, file: !387, line: 385, column: 9)
!4804 = !DILocation(line: 385, column: 9, scope: !4789)
!4805 = !DILocation(line: 390, column: 5, scope: !4789)
!4806 = !DILocation(line: 390, column: 19, scope: !4789)
!4807 = !DILocation(line: 390, column: 29, scope: !4789)
!4808 = !DILocation(line: 393, column: 5, scope: !4789)
!4809 = !DILocation(line: 393, column: 19, scope: !4789)
!4810 = !DILocation(line: 393, column: 29, scope: !4789)
!4811 = !DILocation(line: 395, column: 5, scope: !4789)
!4812 = !DILocation(line: 397, column: 1, scope: !4789)
!4813 = distinct !DISubprogram(name: "pdma_configure", scope: !387, file: !387, line: 401, type: !4814, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4826)
!4814 = !DISubroutineType(types: !4815)
!4815 = !{!4580, !4581, !4816}
!4816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4817, size: 32)
!4817 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_config_t", file: !360, line: 275, baseType: !4818)
!4818 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !360, line: 270, size: 128, elements: !4819)
!4819 = !{!4820, !4821, !4823, !4824}
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "burst_mode", scope: !4818, file: !360, line: 271, baseType: !91, size: 8)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4818, file: !360, line: 272, baseType: !4822, size: 32, offset: 32)
!4822 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_transfer_size_format_t", file: !360, line: 155, baseType: !412)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4818, file: !360, line: 273, baseType: !61, size: 32, offset: 64)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "master_type", scope: !4818, file: !360, line: 274, baseType: !4825, size: 32, offset: 96)
!4825 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_master_type_t", file: !360, line: 185, baseType: !417)
!4826 = !{!4827, !4828, !4829, !4830, !4831, !4832}
!4827 = !DILocalVariable(name: "channel", arg: 1, scope: !4813, file: !387, line: 401, type: !4581)
!4828 = !DILocalVariable(name: "pdma_config", arg: 2, scope: !4813, file: !387, line: 401, type: !4816)
!4829 = !DILocalVariable(name: "offset", scope: !4813, file: !387, line: 405, type: !61)
!4830 = !DILocalVariable(name: "saved_mask", scope: !4813, file: !387, line: 407, type: !61)
!4831 = !DILocalVariable(name: "dma_control", scope: !4813, file: !387, line: 410, type: !61)
!4832 = !DILocalVariable(name: "global_status", scope: !4813, file: !387, line: 413, type: !60)
!4833 = !DILocation(line: 0, scope: !4813)
!4834 = !DILocation(line: 413, column: 5, scope: !4813)
!4835 = !DILocation(line: 413, column: 24, scope: !4813)
!4836 = !DILocation(line: 415, column: 14, scope: !4813)
!4837 = !DILocation(line: 416, column: 14, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4813, file: !387, line: 416, column: 9)
!4839 = !DILocation(line: 416, column: 9, scope: !4813)
!4840 = !DILocation(line: 422, column: 22, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4813, file: !387, line: 422, column: 9)
!4842 = !DILocation(line: 422, column: 9, scope: !4813)
!4843 = !DILocation(line: 432, column: 18, scope: !4813)
!4844 = !DILocation(line: 435, column: 21, scope: !4813)
!4845 = !DILocation(line: 435, column: 42, scope: !4813)
!4846 = !DILocation(line: 435, column: 19, scope: !4813)
!4847 = !DILocation(line: 437, column: 9, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4813, file: !387, line: 437, column: 9)
!4849 = !DILocation(line: 437, column: 33, scope: !4848)
!4850 = !DILocation(line: 437, column: 30, scope: !4848)
!4851 = !DILocation(line: 437, column: 23, scope: !4848)
!4852 = !DILocation(line: 437, column: 9, scope: !4813)
!4853 = !DILocation(line: 440, column: 9, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4848, file: !387, line: 437, column: 69)
!4855 = !DILocation(line: 441, column: 9, scope: !4854)
!4856 = !DILocation(line: 447, column: 9, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4813, file: !387, line: 447, column: 9)
!4858 = !DILocation(line: 447, column: 30, scope: !4857)
!4859 = !DILocation(line: 447, column: 23, scope: !4857)
!4860 = !DILocation(line: 447, column: 9, scope: !4813)
!4861 = !DILocation(line: 457, column: 5, scope: !4813)
!4862 = !DILocation(line: 457, column: 19, scope: !4813)
!4863 = !DILocation(line: 457, column: 30, scope: !4813)
!4864 = !DILocation(line: 459, column: 26, scope: !4813)
!4865 = !DILocation(line: 459, column: 5, scope: !4813)
!4866 = !DILocation(line: 0, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4813, file: !387, line: 459, column: 39)
!4868 = !DILocation(line: 483, column: 26, scope: !4813)
!4869 = !DILocation(line: 483, column: 5, scope: !4813)
!4870 = !DILocation(line: 490, column: 25, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4813, file: !387, line: 483, column: 32)
!4872 = !DILocation(line: 491, column: 13, scope: !4871)
!4873 = !DILocation(line: 493, column: 25, scope: !4871)
!4874 = !DILocation(line: 494, column: 13, scope: !4871)
!4875 = !DILocation(line: 0, scope: !4871)
!4876 = !DILocation(line: 499, column: 23, scope: !4877)
!4877 = distinct !DILexicalBlock(scope: !4813, file: !387, line: 499, column: 9)
!4878 = !DILocation(line: 499, column: 43, scope: !4877)
!4879 = !DILocation(line: 503, column: 17, scope: !4813)
!4880 = !DILocation(line: 505, column: 5, scope: !4813)
!4881 = !DILocation(line: 505, column: 19, scope: !4813)
!4882 = !DILocation(line: 505, column: 28, scope: !4813)
!4883 = !DILocation(line: 506, column: 45, scope: !4813)
!4884 = !DILocation(line: 506, column: 5, scope: !4813)
!4885 = !DILocation(line: 506, column: 19, scope: !4813)
!4886 = !DILocation(line: 506, column: 30, scope: !4813)
!4887 = !DILocation(line: 508, column: 5, scope: !4813)
!4888 = !DILocation(line: 510, column: 1, scope: !4813)
!4889 = distinct !DISubprogram(name: "pdma_start_polling", scope: !387, file: !387, line: 512, type: !4890, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4892)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{!4580, !4581, !61}
!4892 = !{!4893, !4894, !4895, !4896}
!4893 = !DILocalVariable(name: "channel", arg: 1, scope: !4889, file: !387, line: 512, type: !4581)
!4894 = !DILocalVariable(name: "address", arg: 2, scope: !4889, file: !387, line: 512, type: !61)
!4895 = !DILocalVariable(name: "offset", scope: !4889, file: !387, line: 516, type: !61)
!4896 = !DILocalVariable(name: "running_status", scope: !4889, file: !387, line: 518, type: !4897)
!4897 = !DIDerivedType(tag: DW_TAG_typedef, name: "pdma_running_status_t", file: !360, line: 177, baseType: !423)
!4898 = !DILocation(line: 0, scope: !4889)
!4899 = !DILocation(line: 518, column: 5, scope: !4889)
!4900 = !DILocation(line: 518, column: 28, scope: !4889)
!4901 = !DILocation(line: 520, column: 14, scope: !4889)
!4902 = !DILocation(line: 521, column: 14, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4889, file: !387, line: 521, column: 9)
!4904 = !DILocation(line: 521, column: 9, scope: !4889)
!4905 = !DILocation(line: 526, column: 18, scope: !4906)
!4906 = distinct !DILexicalBlock(scope: !4889, file: !387, line: 526, column: 9)
!4907 = !DILocation(line: 526, column: 23, scope: !4906)
!4908 = !DILocation(line: 526, column: 9, scope: !4889)
!4909 = !DILocation(line: 527, column: 9, scope: !4910)
!4910 = distinct !DILexicalBlock(scope: !4906, file: !387, line: 526, column: 28)
!4911 = !DILocation(line: 532, column: 17, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4889, file: !387, line: 532, column: 9)
!4913 = !DILocation(line: 532, column: 9, scope: !4889)
!4914 = !DILocation(line: 533, column: 9, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4912, file: !387, line: 532, column: 50)
!4916 = !DILocation(line: 538, column: 5, scope: !4889)
!4917 = !DILocation(line: 538, column: 19, scope: !4889)
!4918 = !DILocation(line: 538, column: 32, scope: !4889)
!4919 = !DILocation(line: 540, column: 5, scope: !4889)
!4920 = !DILocation(line: 540, column: 19, scope: !4889)
!4921 = !DILocation(line: 540, column: 28, scope: !4889)
!4922 = !DILocation(line: 542, column: 5, scope: !4889)
!4923 = !DILocation(line: 542, column: 19, scope: !4889)
!4924 = !DILocation(line: 542, column: 30, scope: !4889)
!4925 = !DILocation(line: 544, column: 5, scope: !4889)
!4926 = !DILocation(line: 545, column: 12, scope: !4889)
!4927 = !DILocation(line: 545, column: 5, scope: !4889)
!4928 = !DILocation(line: 547, column: 9, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4889, file: !387, line: 545, column: 28)
!4930 = distinct !{!4930, !4927, !4931}
!4931 = !DILocation(line: 548, column: 5, scope: !4889)
!4932 = !DILocation(line: 550, column: 5, scope: !4889)
!4933 = !DILocation(line: 551, column: 5, scope: !4889)
!4934 = !DILocation(line: 553, column: 1, scope: !4889)
!4935 = distinct !DISubprogram(name: "pdma_get_running_status", scope: !387, file: !387, line: 620, type: !4936, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4939)
!4936 = !DISubroutineType(types: !4937)
!4937 = !{!4580, !4581, !4938}
!4938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4897, size: 32)
!4939 = !{!4940, !4941, !4942, !4943}
!4940 = !DILocalVariable(name: "channel", arg: 1, scope: !4935, file: !387, line: 620, type: !4581)
!4941 = !DILocalVariable(name: "running_status", arg: 2, scope: !4935, file: !387, line: 620, type: !4938)
!4942 = !DILocalVariable(name: "offset", scope: !4935, file: !387, line: 624, type: !61)
!4943 = !DILocalVariable(name: "global_status", scope: !4935, file: !387, line: 627, type: !60)
!4944 = !DILocation(line: 0, scope: !4935)
!4945 = !DILocation(line: 627, column: 5, scope: !4935)
!4946 = !DILocation(line: 627, column: 24, scope: !4935)
!4947 = !DILocation(line: 629, column: 14, scope: !4935)
!4948 = !DILocation(line: 630, column: 14, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4935, file: !387, line: 630, column: 9)
!4950 = !DILocation(line: 630, column: 9, scope: !4935)
!4951 = !DILocation(line: 635, column: 21, scope: !4935)
!4952 = !DILocation(line: 635, column: 42, scope: !4935)
!4953 = !DILocation(line: 635, column: 19, scope: !4935)
!4954 = !DILocation(line: 637, column: 9, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4935, file: !387, line: 637, column: 9)
!4956 = !DILocation(line: 637, column: 33, scope: !4955)
!4957 = !DILocation(line: 0, scope: !4955)
!4958 = !DILocation(line: 644, column: 5, scope: !4935)
!4959 = !DILocation(line: 646, column: 1, scope: !4935)
!4960 = distinct !DISubprogram(name: "pdma_stop", scope: !387, file: !387, line: 585, type: !4578, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4961)
!4961 = !{!4962, !4963}
!4962 = !DILocalVariable(name: "channel", arg: 1, scope: !4960, file: !387, line: 585, type: !4581)
!4963 = !DILocalVariable(name: "offset", scope: !4960, file: !387, line: 589, type: !61)
!4964 = !DILocation(line: 0, scope: !4960)
!4965 = !DILocation(line: 591, column: 14, scope: !4960)
!4966 = !DILocation(line: 592, column: 14, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4960, file: !387, line: 592, column: 9)
!4968 = !DILocation(line: 592, column: 9, scope: !4960)
!4969 = !DILocation(line: 597, column: 5, scope: !4960)
!4970 = !DILocation(line: 597, column: 19, scope: !4960)
!4971 = !DILocation(line: 597, column: 30, scope: !4960)
!4972 = !DILocation(line: 598, column: 5, scope: !4960)
!4973 = !DILocation(line: 598, column: 19, scope: !4960)
!4974 = !DILocation(line: 598, column: 31, scope: !4960)
!4975 = !DILocation(line: 600, column: 5, scope: !4960)
!4976 = !DILocation(line: 601, column: 1, scope: !4960)
!4977 = distinct !DISubprogram(name: "pdma_start_interrupt", scope: !387, file: !387, line: 555, type: !4890, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !4978)
!4978 = !{!4979, !4980, !4981}
!4979 = !DILocalVariable(name: "channel", arg: 1, scope: !4977, file: !387, line: 555, type: !4581)
!4980 = !DILocalVariable(name: "address", arg: 2, scope: !4977, file: !387, line: 555, type: !61)
!4981 = !DILocalVariable(name: "offset", scope: !4977, file: !387, line: 558, type: !61)
!4982 = !DILocation(line: 0, scope: !4977)
!4983 = !DILocation(line: 561, column: 14, scope: !4977)
!4984 = !DILocation(line: 562, column: 14, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4977, file: !387, line: 562, column: 9)
!4986 = !DILocation(line: 562, column: 9, scope: !4977)
!4987 = !DILocation(line: 566, column: 18, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4977, file: !387, line: 566, column: 9)
!4989 = !DILocation(line: 566, column: 23, scope: !4988)
!4990 = !DILocation(line: 566, column: 9, scope: !4977)
!4991 = !DILocation(line: 567, column: 9, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4988, file: !387, line: 566, column: 28)
!4993 = !DILocation(line: 572, column: 17, scope: !4994)
!4994 = distinct !DILexicalBlock(scope: !4977, file: !387, line: 572, column: 9)
!4995 = !DILocation(line: 572, column: 9, scope: !4977)
!4996 = !DILocation(line: 573, column: 9, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4994, file: !387, line: 572, column: 50)
!4998 = !DILocation(line: 577, column: 5, scope: !4977)
!4999 = !DILocation(line: 577, column: 19, scope: !4977)
!5000 = !DILocation(line: 577, column: 32, scope: !4977)
!5001 = !DILocation(line: 578, column: 5, scope: !4977)
!5002 = !DILocation(line: 578, column: 19, scope: !4977)
!5003 = !DILocation(line: 578, column: 28, scope: !4977)
!5004 = !DILocation(line: 579, column: 5, scope: !4977)
!5005 = !DILocation(line: 579, column: 19, scope: !4977)
!5006 = !DILocation(line: 579, column: 30, scope: !4977)
!5007 = !DILocation(line: 581, column: 5, scope: !4977)
!5008 = !DILocation(line: 583, column: 1, scope: !4977)
!5009 = distinct !DISubprogram(name: "pdma_register_callback", scope: !387, file: !387, line: 603, type: !5010, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5012)
!5010 = !DISubroutineType(types: !5011)
!5011 = !{!4580, !4581, !563, !88}
!5012 = !{!5013, !5014, !5015, !5016}
!5013 = !DILocalVariable(name: "channel", arg: 1, scope: !5009, file: !387, line: 603, type: !4581)
!5014 = !DILocalVariable(name: "callback", arg: 2, scope: !5009, file: !387, line: 603, type: !563)
!5015 = !DILocalVariable(name: "user_data", arg: 3, scope: !5009, file: !387, line: 603, type: !88)
!5016 = !DILocalVariable(name: "offset", scope: !5009, file: !387, line: 607, type: !61)
!5017 = !DILocation(line: 0, scope: !5009)
!5018 = !DILocation(line: 609, column: 14, scope: !5009)
!5019 = !DILocation(line: 610, column: 14, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5009, file: !387, line: 610, column: 9)
!5021 = !DILocation(line: 610, column: 9, scope: !5009)
!5022 = !DILocation(line: 613, column: 33, scope: !5023)
!5023 = distinct !DILexicalBlock(scope: !5009, file: !387, line: 613, column: 9)
!5024 = !DILocation(line: 613, column: 38, scope: !5023)
!5025 = !DILocation(line: 613, column: 9, scope: !5009)
!5026 = !DILocation(line: 614, column: 38, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5023, file: !387, line: 613, column: 47)
!5028 = !DILocation(line: 615, column: 33, scope: !5027)
!5029 = !DILocation(line: 615, column: 43, scope: !5027)
!5030 = !DILocation(line: 616, column: 5, scope: !5027)
!5031 = !DILocation(line: 619, column: 1, scope: !5009)
!5032 = distinct !DISubprogram(name: "vdma_init", scope: !387, file: !387, line: 676, type: !5033, scopeLine: 677, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5037)
!5033 = !DISubroutineType(types: !5034)
!5034 = !{!5035, !5036}
!5035 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !360, line: 211, baseType: !431)
!5036 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !360, line: 203, baseType: !437)
!5037 = !{!5038, !5039, !5040, !5041, !5042}
!5038 = !DILocalVariable(name: "channel", arg: 1, scope: !5032, file: !387, line: 676, type: !5036)
!5039 = !DILocalVariable(name: "offset", scope: !5032, file: !387, line: 679, type: !61)
!5040 = !DILocalVariable(name: "result", scope: !5032, file: !387, line: 680, type: !61)
!5041 = !DILocalVariable(name: "dma_control", scope: !5032, file: !387, line: 682, type: !61)
!5042 = !DILocalVariable(name: "saved_mask", scope: !5043, file: !387, line: 690, type: !61)
!5043 = distinct !DILexicalBlock(scope: !5032, file: !387, line: 690, column: 5)
!5044 = !DILocation(line: 0, scope: !5032)
!5045 = !DILocation(line: 684, column: 14, scope: !5032)
!5046 = !DILocation(line: 685, column: 14, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5032, file: !387, line: 685, column: 9)
!5048 = !DILocation(line: 685, column: 9, scope: !5032)
!5049 = !DILocation(line: 690, column: 5, scope: !5043)
!5050 = !DILocation(line: 0, scope: !5043)
!5051 = !DILocation(line: 690, column: 5, scope: !5052)
!5052 = distinct !DILexicalBlock(scope: !5043, file: !387, line: 690, column: 5)
!5053 = !DILocation(line: 690, column: 5, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5052, file: !387, line: 690, column: 5)
!5055 = !DILocation(line: 690, column: 5, scope: !5056)
!5056 = distinct !DILexicalBlock(scope: !5052, file: !387, line: 690, column: 5)
!5057 = !DILocation(line: 693, column: 5, scope: !5032)
!5058 = !DILocation(line: 693, column: 19, scope: !5032)
!5059 = !DILocation(line: 693, column: 28, scope: !5032)
!5060 = !DILocation(line: 694, column: 5, scope: !5032)
!5061 = !DILocation(line: 694, column: 19, scope: !5032)
!5062 = !DILocation(line: 694, column: 30, scope: !5032)
!5063 = !DILocation(line: 695, column: 5, scope: !5032)
!5064 = !DILocation(line: 695, column: 19, scope: !5032)
!5065 = !DILocation(line: 695, column: 30, scope: !5032)
!5066 = !DILocation(line: 696, column: 5, scope: !5032)
!5067 = !DILocation(line: 696, column: 19, scope: !5032)
!5068 = !DILocation(line: 696, column: 31, scope: !5032)
!5069 = !DILocation(line: 697, column: 5, scope: !5032)
!5070 = !DILocation(line: 697, column: 19, scope: !5032)
!5071 = !DILocation(line: 697, column: 32, scope: !5032)
!5072 = !DILocation(line: 698, column: 5, scope: !5032)
!5073 = !DILocation(line: 698, column: 19, scope: !5032)
!5074 = !DILocation(line: 698, column: 31, scope: !5032)
!5075 = !DILocation(line: 699, column: 5, scope: !5032)
!5076 = !DILocation(line: 699, column: 19, scope: !5032)
!5077 = !DILocation(line: 699, column: 31, scope: !5032)
!5078 = !DILocation(line: 703, column: 16, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5032, file: !387, line: 703, column: 9)
!5080 = !DILocation(line: 703, column: 9, scope: !5032)
!5081 = !DILocation(line: 705, column: 18, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5079, file: !387, line: 703, column: 37)
!5083 = !DILocation(line: 707, column: 18, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5082, file: !387, line: 707, column: 13)
!5085 = !DILocation(line: 707, column: 13, scope: !5082)
!5086 = !DILocation(line: 713, column: 18, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5079, file: !387, line: 711, column: 12)
!5088 = !DILocation(line: 715, column: 18, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5087, file: !387, line: 715, column: 13)
!5090 = !DILocation(line: 715, column: 13, scope: !5087)
!5091 = !DILocation(line: 720, column: 5, scope: !5032)
!5092 = !DILocation(line: 0, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5032, file: !387, line: 720, column: 22)
!5094 = !DILocation(line: 776, column: 5, scope: !5032)
!5095 = !DILocation(line: 777, column: 5, scope: !5032)
!5096 = !DILocation(line: 778, column: 5, scope: !5032)
!5097 = !DILocation(line: 779, column: 5, scope: !5032)
!5098 = !DILocation(line: 781, column: 5, scope: !5032)
!5099 = !DILocation(line: 783, column: 1, scope: !5032)
!5100 = distinct !DISubprogram(name: "vdma_check_valid_channel", scope: !387, file: !387, line: 660, type: !5101, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5103)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{!61, !5036}
!5103 = !{!5104, !5105}
!5104 = !DILocalVariable(name: "channel", arg: 1, scope: !5100, file: !387, line: 660, type: !5036)
!5105 = !DILocalVariable(name: "offset", scope: !5100, file: !387, line: 663, type: !61)
!5106 = !DILocation(line: 0, scope: !5100)
!5107 = !DILocation(line: 666, column: 22, scope: !5100)
!5108 = !DILocation(line: 668, column: 16, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5100, file: !387, line: 668, column: 9)
!5110 = !DILocation(line: 0, scope: !5109)
!5111 = !DILocation(line: 673, column: 1, scope: !5100)
!5112 = distinct !DISubprogram(name: "ao_domain_dma_interrupt_hander", scope: !387, file: !387, line: 1196, type: !554, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5113)
!5113 = !{!5114, !5115, !5116, !5117, !5118}
!5114 = !DILocalVariable(name: "irq_number", arg: 1, scope: !5112, file: !387, line: 1196, type: !556)
!5115 = !DILocalVariable(name: "global_status", scope: !5112, file: !387, line: 1201, type: !60)
!5116 = !DILocalVariable(name: "callback", scope: !5112, file: !387, line: 1204, type: !569)
!5117 = !DILocalVariable(name: "argument", scope: !5112, file: !387, line: 1206, type: !88)
!5118 = !DILocalVariable(name: "count", scope: !5112, file: !387, line: 1209, type: !61)
!5119 = !DILocation(line: 0, scope: !5112)
!5120 = !DILocation(line: 1201, column: 5, scope: !5112)
!5121 = !DILocation(line: 1201, column: 24, scope: !5112)
!5122 = !DILocation(line: 1220, column: 5, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5112, file: !387, line: 1220, column: 5)
!5124 = !DILocation(line: 1221, column: 25, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5126, file: !387, line: 1220, column: 77)
!5126 = distinct !DILexicalBlock(scope: !5123, file: !387, line: 1220, column: 5)
!5127 = !DILocation(line: 1221, column: 45, scope: !5125)
!5128 = !DILocation(line: 1221, column: 23, scope: !5125)
!5129 = !DILocation(line: 1223, column: 13, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5125, file: !387, line: 1223, column: 13)
!5131 = !DILocation(line: 1223, column: 38, scope: !5130)
!5132 = !DILocation(line: 1223, column: 34, scope: !5130)
!5133 = !DILocation(line: 1223, column: 27, scope: !5130)
!5134 = !DILocation(line: 1223, column: 13, scope: !5125)
!5135 = !DILocation(line: 1227, column: 17, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !387, line: 1225, column: 13)
!5137 = distinct !DILexicalBlock(scope: !5130, file: !387, line: 1223, column: 78)
!5138 = !DILocation(line: 1227, column: 30, scope: !5136)
!5139 = !DILocation(line: 1227, column: 42, scope: !5136)
!5140 = !DILocation(line: 1229, column: 51, scope: !5136)
!5141 = !DILocation(line: 1231, column: 30, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5136, file: !387, line: 1231, column: 21)
!5143 = !DILocation(line: 1231, column: 21, scope: !5136)
!5144 = !DILocation(line: 1230, column: 51, scope: !5136)
!5145 = !DILocation(line: 1232, column: 21, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5142, file: !387, line: 1231, column: 39)
!5147 = !DILocation(line: 1237, column: 9, scope: !5137)
!5148 = !DILocation(line: 1234, column: 21, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !5142, file: !387, line: 1233, column: 24)
!5150 = !DILocation(line: 1220, column: 73, scope: !5126)
!5151 = !DILocation(line: 1220, column: 53, scope: !5126)
!5152 = distinct !{!5152, !5122, !5153}
!5153 = !DILocation(line: 1238, column: 5, scope: !5123)
!5154 = !DILocation(line: 1241, column: 1, scope: !5112)
!5155 = distinct !DISubprogram(name: "vdma_deinit", scope: !387, file: !387, line: 785, type: !5033, scopeLine: 786, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5156)
!5156 = !{!5157, !5158, !5159, !5160, !5161, !5162}
!5157 = !DILocalVariable(name: "channel", arg: 1, scope: !5155, file: !387, line: 785, type: !5036)
!5158 = !DILocalVariable(name: "offset", scope: !5155, file: !387, line: 789, type: !61)
!5159 = !DILocalVariable(name: "result", scope: !5155, file: !387, line: 790, type: !61)
!5160 = !DILocalVariable(name: "saved_mask", scope: !5155, file: !387, line: 791, type: !61)
!5161 = !DILocalVariable(name: "global_status", scope: !5155, file: !387, line: 794, type: !60)
!5162 = !DILocalVariable(name: "saved_mask", scope: !5163, file: !387, line: 820, type: !61)
!5163 = distinct !DILexicalBlock(scope: !5155, file: !387, line: 820, column: 5)
!5164 = !DILocation(line: 0, scope: !5155)
!5165 = !DILocation(line: 794, column: 5, scope: !5155)
!5166 = !DILocation(line: 794, column: 24, scope: !5155)
!5167 = !DILocation(line: 796, column: 14, scope: !5155)
!5168 = !DILocation(line: 797, column: 24, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5155, file: !387, line: 797, column: 9)
!5170 = !DILocation(line: 797, column: 9, scope: !5155)
!5171 = !DILocation(line: 801, column: 18, scope: !5155)
!5172 = !DILocation(line: 803, column: 21, scope: !5155)
!5173 = !DILocation(line: 803, column: 42, scope: !5155)
!5174 = !DILocation(line: 803, column: 19, scope: !5155)
!5175 = !DILocation(line: 805, column: 9, scope: !5176)
!5176 = distinct !DILexicalBlock(scope: !5155, file: !387, line: 805, column: 9)
!5177 = !DILocation(line: 805, column: 34, scope: !5176)
!5178 = !DILocation(line: 805, column: 30, scope: !5176)
!5179 = !DILocation(line: 805, column: 23, scope: !5176)
!5180 = !DILocation(line: 805, column: 9, scope: !5155)
!5181 = !DILocation(line: 806, column: 9, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5176, file: !387, line: 805, column: 75)
!5183 = !DILocation(line: 811, column: 9, scope: !5184)
!5184 = distinct !DILexicalBlock(scope: !5155, file: !387, line: 811, column: 9)
!5185 = !DILocation(line: 811, column: 30, scope: !5184)
!5186 = !DILocation(line: 811, column: 23, scope: !5184)
!5187 = !DILocation(line: 811, column: 9, scope: !5155)
!5188 = !DILocation(line: 812, column: 9, scope: !5189)
!5189 = distinct !DILexicalBlock(scope: !5184, file: !387, line: 811, column: 69)
!5190 = !DILocation(line: 817, column: 5, scope: !5155)
!5191 = !DILocation(line: 820, column: 5, scope: !5163)
!5192 = !DILocation(line: 0, scope: !5163)
!5193 = !DILocation(line: 820, column: 5, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5163, file: !387, line: 820, column: 5)
!5195 = !DILocation(line: 820, column: 5, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5194, file: !387, line: 820, column: 5)
!5197 = !DILocation(line: 820, column: 5, scope: !5198)
!5198 = distinct !DILexicalBlock(scope: !5194, file: !387, line: 820, column: 5)
!5199 = !DILocation(line: 824, column: 16, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5155, file: !387, line: 824, column: 9)
!5201 = !DILocation(line: 824, column: 9, scope: !5155)
!5202 = !DILocation(line: 826, column: 18, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5200, file: !387, line: 824, column: 53)
!5204 = !DILocation(line: 828, column: 28, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5203, file: !387, line: 828, column: 13)
!5206 = !DILocation(line: 828, column: 13, scope: !5203)
!5207 = !DILocation(line: 834, column: 18, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5200, file: !387, line: 832, column: 12)
!5209 = !DILocation(line: 836, column: 28, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5208, file: !387, line: 836, column: 13)
!5211 = !DILocation(line: 836, column: 13, scope: !5208)
!5212 = !DILocation(line: 841, column: 5, scope: !5155)
!5213 = !DILocation(line: 842, column: 1, scope: !5155)
!5214 = distinct !DISubprogram(name: "vdma_configure", scope: !387, file: !387, line: 844, type: !5215, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5223)
!5215 = !DISubroutineType(types: !5216)
!5216 = !{!5035, !5036, !5217}
!5217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 32)
!5218 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !360, line: 283, baseType: !5219)
!5219 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !360, line: 280, size: 64, elements: !5220)
!5220 = !{!5221, !5222}
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5219, file: !360, line: 281, baseType: !61, size: 32)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5219, file: !360, line: 282, baseType: !61, size: 32, offset: 32)
!5223 = !{!5224, !5225, !5226}
!5224 = !DILocalVariable(name: "channel", arg: 1, scope: !5214, file: !387, line: 844, type: !5036)
!5225 = !DILocalVariable(name: "vdma_config", arg: 2, scope: !5214, file: !387, line: 844, type: !5217)
!5226 = !DILocalVariable(name: "offset", scope: !5214, file: !387, line: 848, type: !61)
!5227 = !DILocation(line: 0, scope: !5214)
!5228 = !DILocation(line: 850, column: 14, scope: !5214)
!5229 = !DILocation(line: 851, column: 24, scope: !5230)
!5230 = distinct !DILexicalBlock(scope: !5214, file: !387, line: 851, column: 9)
!5231 = !DILocation(line: 851, column: 9, scope: !5214)
!5232 = !DILocation(line: 856, column: 23, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5214, file: !387, line: 856, column: 9)
!5234 = !DILocation(line: 856, column: 36, scope: !5233)
!5235 = !DILocation(line: 856, column: 41, scope: !5233)
!5236 = !DILocation(line: 856, column: 9, scope: !5214)
!5237 = !DILocation(line: 857, column: 9, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5233, file: !387, line: 856, column: 46)
!5239 = !DILocation(line: 862, column: 17, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5214, file: !387, line: 862, column: 9)
!5241 = !DILocation(line: 862, column: 9, scope: !5214)
!5242 = !DILocation(line: 863, column: 9, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5240, file: !387, line: 862, column: 68)
!5244 = !DILocation(line: 867, column: 46, scope: !5214)
!5245 = !DILocation(line: 867, column: 5, scope: !5214)
!5246 = !DILocation(line: 867, column: 19, scope: !5214)
!5247 = !DILocation(line: 867, column: 31, scope: !5214)
!5248 = !DILocation(line: 868, column: 47, scope: !5214)
!5249 = !DILocation(line: 868, column: 5, scope: !5214)
!5250 = !DILocation(line: 868, column: 19, scope: !5214)
!5251 = !DILocation(line: 868, column: 32, scope: !5214)
!5252 = !DILocation(line: 870, column: 5, scope: !5214)
!5253 = !DILocation(line: 871, column: 1, scope: !5214)
!5254 = distinct !DISubprogram(name: "vdma_enable_interrupt", scope: !387, file: !387, line: 873, type: !5033, scopeLine: 874, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5255)
!5255 = !{!5256, !5257}
!5256 = !DILocalVariable(name: "channel", arg: 1, scope: !5254, file: !387, line: 873, type: !5036)
!5257 = !DILocalVariable(name: "offset", scope: !5254, file: !387, line: 876, type: !61)
!5258 = !DILocation(line: 0, scope: !5254)
!5259 = !DILocation(line: 878, column: 14, scope: !5254)
!5260 = !DILocation(line: 879, column: 24, scope: !5261)
!5261 = distinct !DILexicalBlock(scope: !5254, file: !387, line: 879, column: 9)
!5262 = !DILocation(line: 879, column: 9, scope: !5254)
!5263 = !DILocation(line: 883, column: 5, scope: !5254)
!5264 = !DILocation(line: 883, column: 19, scope: !5254)
!5265 = !DILocation(line: 883, column: 28, scope: !5254)
!5266 = !DILocation(line: 884, column: 5, scope: !5254)
!5267 = !DILocation(line: 886, column: 1, scope: !5254)
!5268 = distinct !DISubprogram(name: "vdma_start", scope: !387, file: !387, line: 889, type: !5033, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5269)
!5269 = !{!5270, !5271, !5272, !5273}
!5270 = !DILocalVariable(name: "channel", arg: 1, scope: !5268, file: !387, line: 889, type: !5036)
!5271 = !DILocalVariable(name: "offset", scope: !5268, file: !387, line: 892, type: !61)
!5272 = !DILocalVariable(name: "saved_mask", scope: !5268, file: !387, line: 893, type: !61)
!5273 = !DILocalVariable(name: "global_status", scope: !5268, file: !387, line: 895, type: !60)
!5274 = !DILocation(line: 0, scope: !5268)
!5275 = !DILocation(line: 895, column: 5, scope: !5268)
!5276 = !DILocation(line: 895, column: 24, scope: !5268)
!5277 = !DILocation(line: 897, column: 14, scope: !5268)
!5278 = !DILocation(line: 898, column: 24, scope: !5279)
!5279 = distinct !DILexicalBlock(scope: !5268, file: !387, line: 898, column: 9)
!5280 = !DILocation(line: 898, column: 9, scope: !5268)
!5281 = !DILocation(line: 902, column: 18, scope: !5268)
!5282 = !DILocation(line: 904, column: 21, scope: !5268)
!5283 = !DILocation(line: 904, column: 42, scope: !5268)
!5284 = !DILocation(line: 904, column: 19, scope: !5268)
!5285 = !DILocation(line: 906, column: 9, scope: !5286)
!5286 = distinct !DILexicalBlock(scope: !5268, file: !387, line: 906, column: 9)
!5287 = !DILocation(line: 906, column: 33, scope: !5286)
!5288 = !DILocation(line: 906, column: 30, scope: !5286)
!5289 = !DILocation(line: 906, column: 23, scope: !5286)
!5290 = !DILocation(line: 906, column: 9, scope: !5268)
!5291 = !DILocation(line: 909, column: 9, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5286, file: !387, line: 906, column: 69)
!5293 = !DILocation(line: 910, column: 9, scope: !5292)
!5294 = !DILocation(line: 916, column: 9, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5268, file: !387, line: 916, column: 9)
!5296 = !DILocation(line: 916, column: 30, scope: !5295)
!5297 = !DILocation(line: 916, column: 23, scope: !5295)
!5298 = !DILocation(line: 916, column: 9, scope: !5268)
!5299 = !DILocation(line: 925, column: 5, scope: !5268)
!5300 = !DILocation(line: 925, column: 19, scope: !5268)
!5301 = !DILocation(line: 925, column: 30, scope: !5268)
!5302 = !DILocation(line: 926, column: 5, scope: !5268)
!5303 = !DILocation(line: 928, column: 1, scope: !5268)
!5304 = distinct !DISubprogram(name: "vdma_disable_interrupt", scope: !387, file: !387, line: 931, type: !5033, scopeLine: 932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5305)
!5305 = !{!5306, !5307}
!5306 = !DILocalVariable(name: "channel", arg: 1, scope: !5304, file: !387, line: 931, type: !5036)
!5307 = !DILocalVariable(name: "offset", scope: !5304, file: !387, line: 934, type: !61)
!5308 = !DILocation(line: 0, scope: !5304)
!5309 = !DILocation(line: 936, column: 14, scope: !5304)
!5310 = !DILocation(line: 937, column: 24, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5304, file: !387, line: 937, column: 9)
!5312 = !DILocation(line: 937, column: 9, scope: !5304)
!5313 = !DILocation(line: 942, column: 5, scope: !5304)
!5314 = !DILocation(line: 942, column: 19, scope: !5304)
!5315 = !DILocation(line: 942, column: 28, scope: !5304)
!5316 = !DILocation(line: 943, column: 5, scope: !5304)
!5317 = !DILocation(line: 944, column: 1, scope: !5304)
!5318 = distinct !DISubprogram(name: "vdma_stop", scope: !387, file: !387, line: 947, type: !5033, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5319)
!5319 = !{!5320, !5321}
!5320 = !DILocalVariable(name: "channel", arg: 1, scope: !5318, file: !387, line: 947, type: !5036)
!5321 = !DILocalVariable(name: "offset", scope: !5318, file: !387, line: 950, type: !61)
!5322 = !DILocation(line: 0, scope: !5318)
!5323 = !DILocation(line: 952, column: 14, scope: !5318)
!5324 = !DILocation(line: 953, column: 24, scope: !5325)
!5325 = distinct !DILexicalBlock(scope: !5318, file: !387, line: 953, column: 9)
!5326 = !DILocation(line: 953, column: 9, scope: !5318)
!5327 = !DILocation(line: 957, column: 5, scope: !5318)
!5328 = !DILocation(line: 957, column: 19, scope: !5318)
!5329 = !DILocation(line: 957, column: 30, scope: !5318)
!5330 = !DILocation(line: 958, column: 5, scope: !5318)
!5331 = !DILocation(line: 959, column: 1, scope: !5318)
!5332 = distinct !DISubprogram(name: "vdma_set_threshold", scope: !387, file: !387, line: 961, type: !5333, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5335)
!5333 = !DISubroutineType(types: !5334)
!5334 = !{!5035, !5036, !61}
!5335 = !{!5336, !5337, !5338}
!5336 = !DILocalVariable(name: "channel", arg: 1, scope: !5332, file: !387, line: 961, type: !5036)
!5337 = !DILocalVariable(name: "threshold", arg: 2, scope: !5332, file: !387, line: 961, type: !61)
!5338 = !DILocalVariable(name: "offset", scope: !5332, file: !387, line: 965, type: !61)
!5339 = !DILocation(line: 0, scope: !5332)
!5340 = !DILocation(line: 967, column: 14, scope: !5332)
!5341 = !DILocation(line: 968, column: 24, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5332, file: !387, line: 968, column: 9)
!5343 = !DILocation(line: 968, column: 9, scope: !5332)
!5344 = !DILocation(line: 972, column: 19, scope: !5345)
!5345 = distinct !DILexicalBlock(scope: !5332, file: !387, line: 972, column: 9)
!5346 = !DILocation(line: 972, column: 9, scope: !5332)
!5347 = !DILocation(line: 975, column: 5, scope: !5332)
!5348 = !DILocation(line: 975, column: 19, scope: !5332)
!5349 = !DILocation(line: 975, column: 30, scope: !5332)
!5350 = !DILocation(line: 977, column: 5, scope: !5332)
!5351 = !DILocation(line: 979, column: 1, scope: !5332)
!5352 = distinct !DISubprogram(name: "vdma_set_alert_length", scope: !387, file: !387, line: 982, type: !5333, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5353)
!5353 = !{!5354, !5355, !5356}
!5354 = !DILocalVariable(name: "channel", arg: 1, scope: !5352, file: !387, line: 982, type: !5036)
!5355 = !DILocalVariable(name: "alert_length", arg: 2, scope: !5352, file: !387, line: 982, type: !61)
!5356 = !DILocalVariable(name: "offset", scope: !5352, file: !387, line: 986, type: !61)
!5357 = !DILocation(line: 0, scope: !5352)
!5358 = !DILocation(line: 988, column: 14, scope: !5352)
!5359 = !DILocation(line: 989, column: 24, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5352, file: !387, line: 989, column: 9)
!5361 = !DILocation(line: 989, column: 9, scope: !5352)
!5362 = !DILocation(line: 993, column: 22, scope: !5363)
!5363 = distinct !DILexicalBlock(scope: !5352, file: !387, line: 993, column: 9)
!5364 = !DILocation(line: 993, column: 9, scope: !5352)
!5365 = !DILocation(line: 996, column: 5, scope: !5352)
!5366 = !DILocation(line: 996, column: 19, scope: !5352)
!5367 = !DILocation(line: 996, column: 31, scope: !5352)
!5368 = !DILocation(line: 998, column: 5, scope: !5352)
!5369 = !DILocation(line: 1000, column: 1, scope: !5352)
!5370 = distinct !DISubprogram(name: "vdma_push_data", scope: !387, file: !387, line: 1002, type: !5371, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5373)
!5371 = !DISubroutineType(types: !5372)
!5372 = !{!5035, !5036, !381}
!5373 = !{!5374, !5375, !5376}
!5374 = !DILocalVariable(name: "channel", arg: 1, scope: !5370, file: !387, line: 1002, type: !5036)
!5375 = !DILocalVariable(name: "data", arg: 2, scope: !5370, file: !387, line: 1002, type: !381)
!5376 = !DILocalVariable(name: "offset", scope: !5370, file: !387, line: 1007, type: !61)
!5377 = !DILocation(line: 0, scope: !5370)
!5378 = !DILocation(line: 1008, column: 14, scope: !5370)
!5379 = !DILocation(line: 1009, column: 24, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5370, file: !387, line: 1009, column: 9)
!5381 = !DILocation(line: 1009, column: 9, scope: !5370)
!5382 = !DILocation(line: 1016, column: 36, scope: !5370)
!5383 = !DILocation(line: 1016, column: 5, scope: !5370)
!5384 = !DILocation(line: 1016, column: 24, scope: !5370)
!5385 = !DILocation(line: 1016, column: 34, scope: !5370)
!5386 = !DILocation(line: 1018, column: 5, scope: !5370)
!5387 = !DILocation(line: 1019, column: 1, scope: !5370)
!5388 = distinct !DISubprogram(name: "vdma_pop_data", scope: !387, file: !387, line: 1021, type: !5389, scopeLine: 1023, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5391)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{!5035, !5036, !996}
!5391 = !{!5392, !5393, !5394}
!5392 = !DILocalVariable(name: "channel", arg: 1, scope: !5388, file: !387, line: 1021, type: !5036)
!5393 = !DILocalVariable(name: "data", arg: 2, scope: !5388, file: !387, line: 1021, type: !996)
!5394 = !DILocalVariable(name: "offset", scope: !5388, file: !387, line: 1026, type: !61)
!5395 = !DILocation(line: 0, scope: !5388)
!5396 = !DILocation(line: 1028, column: 14, scope: !5388)
!5397 = !DILocation(line: 1029, column: 24, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5388, file: !387, line: 1029, column: 9)
!5399 = !DILocation(line: 1029, column: 9, scope: !5388)
!5400 = !DILocation(line: 1036, column: 13, scope: !5388)
!5401 = !DILocation(line: 1036, column: 32, scope: !5388)
!5402 = !DILocation(line: 1036, column: 11, scope: !5388)
!5403 = !DILocation(line: 1038, column: 5, scope: !5388)
!5404 = !DILocation(line: 1039, column: 1, scope: !5388)
!5405 = distinct !DISubprogram(name: "vdma_get_available_receive_bytes", scope: !387, file: !387, line: 1041, type: !5406, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5408)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{!5035, !5036, !1231}
!5408 = !{!5409, !5410, !5411}
!5409 = !DILocalVariable(name: "channel", arg: 1, scope: !5405, file: !387, line: 1041, type: !5036)
!5410 = !DILocalVariable(name: "receive_bytes", arg: 2, scope: !5405, file: !387, line: 1041, type: !1231)
!5411 = !DILocalVariable(name: "offset", scope: !5405, file: !387, line: 1045, type: !61)
!5412 = !DILocation(line: 0, scope: !5405)
!5413 = !DILocation(line: 1047, column: 14, scope: !5405)
!5414 = !DILocation(line: 1048, column: 24, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5405, file: !387, line: 1048, column: 9)
!5416 = !DILocation(line: 1048, column: 9, scope: !5405)
!5417 = !DILocation(line: 1052, column: 22, scope: !5405)
!5418 = !DILocation(line: 1052, column: 36, scope: !5405)
!5419 = !DILocation(line: 1052, column: 20, scope: !5405)
!5420 = !DILocation(line: 1054, column: 5, scope: !5405)
!5421 = !DILocation(line: 1056, column: 1, scope: !5405)
!5422 = distinct !DISubprogram(name: "vdma_get_available_send_space", scope: !387, file: !387, line: 1058, type: !5406, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5423)
!5423 = !{!5424, !5425, !5426, !5427, !5428}
!5424 = !DILocalVariable(name: "channel", arg: 1, scope: !5422, file: !387, line: 1058, type: !5036)
!5425 = !DILocalVariable(name: "available_space", arg: 2, scope: !5422, file: !387, line: 1058, type: !1231)
!5426 = !DILocalVariable(name: "offset", scope: !5422, file: !387, line: 1063, type: !61)
!5427 = !DILocalVariable(name: "total_size", scope: !5422, file: !387, line: 1066, type: !61)
!5428 = !DILocalVariable(name: "valid_size", scope: !5422, file: !387, line: 1069, type: !61)
!5429 = !DILocation(line: 0, scope: !5422)
!5430 = !DILocation(line: 1071, column: 14, scope: !5422)
!5431 = !DILocation(line: 1072, column: 24, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5422, file: !387, line: 1072, column: 9)
!5433 = !DILocation(line: 1072, column: 9, scope: !5422)
!5434 = !DILocation(line: 1077, column: 18, scope: !5422)
!5435 = !DILocation(line: 1077, column: 32, scope: !5422)
!5436 = !DILocation(line: 1078, column: 32, scope: !5422)
!5437 = !DILocation(line: 1080, column: 35, scope: !5422)
!5438 = !DILocation(line: 1080, column: 22, scope: !5422)
!5439 = !DILocation(line: 1082, column: 5, scope: !5422)
!5440 = !DILocation(line: 1084, column: 1, scope: !5422)
!5441 = distinct !DISubprogram(name: "vdma_register_callback", scope: !387, file: !387, line: 1087, type: !5442, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !386, retainedNodes: !5444)
!5442 = !DISubroutineType(types: !5443)
!5443 = !{!5035, !5036, !569, !88}
!5444 = !{!5445, !5446, !5447, !5448}
!5445 = !DILocalVariable(name: "channel", arg: 1, scope: !5441, file: !387, line: 1087, type: !5036)
!5446 = !DILocalVariable(name: "callback", arg: 2, scope: !5441, file: !387, line: 1087, type: !569)
!5447 = !DILocalVariable(name: "user_data", arg: 3, scope: !5441, file: !387, line: 1087, type: !88)
!5448 = !DILocalVariable(name: "offset", scope: !5441, file: !387, line: 1091, type: !61)
!5449 = !DILocation(line: 0, scope: !5441)
!5450 = !DILocation(line: 1093, column: 14, scope: !5441)
!5451 = !DILocation(line: 1094, column: 24, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5441, file: !387, line: 1094, column: 9)
!5453 = !DILocation(line: 1094, column: 9, scope: !5441)
!5454 = !DILocation(line: 1098, column: 33, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5441, file: !387, line: 1098, column: 9)
!5456 = !DILocation(line: 1098, column: 38, scope: !5455)
!5457 = !DILocation(line: 1098, column: 9, scope: !5441)
!5458 = !DILocation(line: 1099, column: 38, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5455, file: !387, line: 1098, column: 47)
!5460 = !DILocation(line: 1100, column: 33, scope: !5459)
!5461 = !DILocation(line: 1100, column: 43, scope: !5459)
!5462 = !DILocation(line: 1101, column: 5, scope: !5459)
!5463 = !DILocation(line: 1105, column: 1, scope: !5441)
!5464 = distinct !DISubprogram(name: "gdma_calculate_size", scope: !2756, file: !2756, line: 39, type: !5465, scopeLine: 42, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2755, retainedNodes: !5467)
!5465 = !DISubroutineType(types: !5466)
!5466 = !{!4233, !61, !1231}
!5467 = !{!5468, !5469}
!5468 = !DILocalVariable(name: "length", arg: 1, scope: !5464, file: !2756, line: 40, type: !61)
!5469 = !DILocalVariable(name: "count", arg: 2, scope: !5464, file: !2756, line: 41, type: !1231)
!5470 = !DILocation(line: 0, scope: !5464)
!5471 = !DILocation(line: 43, column: 16, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5464, file: !2756, line: 43, column: 9)
!5473 = !DILocation(line: 43, column: 9, scope: !5464)
!5474 = !DILocation(line: 47, column: 22, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5464, file: !2756, line: 47, column: 9)
!5476 = !DILocation(line: 47, column: 11, scope: !5475)
!5477 = !DILocation(line: 47, column: 9, scope: !5464)
!5478 = !DILocation(line: 48, column: 25, scope: !5479)
!5479 = distinct !DILexicalBlock(scope: !5475, file: !2756, line: 47, column: 28)
!5480 = !DILocation(line: 49, column: 9, scope: !5479)
!5481 = !DILocation(line: 50, column: 29, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5475, file: !2756, line: 50, column: 16)
!5483 = !DILocation(line: 50, column: 16, scope: !5475)
!5484 = !DILocation(line: 58, column: 1, scope: !5464)
!5485 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !619, file: !619, line: 50, type: !5486, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5489)
!5486 = !DISubroutineType(types: !5487)
!5487 = !{!61, !5488}
!5488 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !98, line: 390, baseType: !621)
!5489 = !{!5490, !5491, !5492}
!5490 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5485, file: !619, line: 50, type: !5488)
!5491 = !DILocalVariable(name: "i", scope: !5485, file: !619, line: 52, type: !61)
!5492 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !5485, file: !619, line: 53, type: !1139)
!5493 = !DILocation(line: 0, scope: !5485)
!5494 = !DILocation(line: 53, column: 14, scope: !5485)
!5495 = !DILocation(line: 55, column: 5, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5485, file: !619, line: 55, column: 5)
!5497 = !DILocation(line: 55, column: 25, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5496, file: !619, line: 55, column: 5)
!5499 = !DILocation(line: 55, column: 19, scope: !5498)
!5500 = distinct !{!5500, !5495, !5501}
!5501 = !DILocation(line: 59, column: 5, scope: !5496)
!5502 = !DILocation(line: 56, column: 13, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5504, file: !619, line: 56, column: 13)
!5504 = distinct !DILexicalBlock(scope: !5498, file: !619, line: 55, column: 29)
!5505 = !DILocation(line: 56, column: 40, scope: !5503)
!5506 = !DILocation(line: 56, column: 13, scope: !5504)
!5507 = !DILocation(line: 61, column: 1, scope: !5485)
!5508 = distinct !DISubprogram(name: "hal_gpio_init", scope: !619, file: !619, line: 66, type: !5509, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5512)
!5509 = !DISubroutineType(types: !5510)
!5510 = !{!5511, !5488}
!5511 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !674, line: 229, baseType: !673)
!5512 = !{!5513}
!5513 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5508, file: !619, line: 66, type: !5488)
!5514 = !DILocation(line: 0, scope: !5508)
!5515 = !DILocation(line: 68, column: 5, scope: !5508)
!5516 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !619, file: !619, line: 72, type: !5509, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5517)
!5517 = !{!5518}
!5518 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5516, file: !619, line: 72, type: !5488)
!5519 = !DILocation(line: 0, scope: !5516)
!5520 = !DILocation(line: 74, column: 5, scope: !5516)
!5521 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !619, file: !619, line: 79, type: !5522, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5524)
!5522 = !DISubroutineType(types: !5523)
!5523 = !{!5511, !5488, !715}
!5524 = !{!5525, !5526, !5527, !5528}
!5525 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5521, file: !619, line: 79, type: !5488)
!5526 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !5521, file: !619, line: 79, type: !715)
!5527 = !DILocalVariable(name: "no", scope: !5521, file: !619, line: 81, type: !61)
!5528 = !DILocalVariable(name: "remainder", scope: !5521, file: !619, line: 82, type: !61)
!5529 = !DILocation(line: 0, scope: !5521)
!5530 = !DILocation(line: 84, column: 18, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5521, file: !619, line: 84, column: 9)
!5532 = !DILocation(line: 84, column: 9, scope: !5521)
!5533 = !DILocation(line: 89, column: 19, scope: !5521)
!5534 = !DILocation(line: 92, column: 26, scope: !5521)
!5535 = !DILocation(line: 94, column: 24, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5521, file: !619, line: 94, column: 9)
!5537 = !DILocation(line: 0, scope: !5536)
!5538 = !DILocation(line: 94, column: 9, scope: !5521)
!5539 = !DILocation(line: 101, column: 1, scope: !5521)
!5540 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !619, file: !619, line: 105, type: !5541, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5544)
!5541 = !DISubroutineType(types: !5542)
!5542 = !{!5511, !5488, !5543}
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 32)
!5544 = !{!5545, !5546, !5547, !5548, !5549}
!5545 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5540, file: !619, line: 105, type: !5488)
!5546 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !5540, file: !619, line: 105, type: !5543)
!5547 = !DILocalVariable(name: "no", scope: !5540, file: !619, line: 107, type: !61)
!5548 = !DILocalVariable(name: "remainder", scope: !5540, file: !619, line: 108, type: !61)
!5549 = !DILocalVariable(name: "temp", scope: !5540, file: !619, line: 109, type: !61)
!5550 = !DILocation(line: 0, scope: !5540)
!5551 = !DILocation(line: 111, column: 18, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5540, file: !619, line: 111, column: 9)
!5553 = !DILocation(line: 111, column: 9, scope: !5540)
!5554 = !DILocation(line: 115, column: 14, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5540, file: !619, line: 115, column: 9)
!5556 = !DILocation(line: 115, column: 9, scope: !5540)
!5557 = !DILocation(line: 120, column: 19, scope: !5540)
!5558 = !DILocation(line: 123, column: 26, scope: !5540)
!5559 = !DILocation(line: 125, column: 12, scope: !5540)
!5560 = !DILocation(line: 125, column: 54, scope: !5540)
!5561 = !DILocation(line: 126, column: 45, scope: !5540)
!5562 = !DILocation(line: 126, column: 17, scope: !5540)
!5563 = !DILocation(line: 127, column: 51, scope: !5540)
!5564 = !DILocation(line: 127, column: 21, scope: !5540)
!5565 = !DILocation(line: 128, column: 5, scope: !5540)
!5566 = !DILocation(line: 130, column: 1, scope: !5540)
!5567 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !619, file: !619, line: 134, type: !5568, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5571)
!5568 = !DISubroutineType(types: !5569)
!5569 = !{!5570, !5488, !381}
!5570 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !674, line: 238, baseType: !684)
!5571 = !{!5572, !5573, !5574, !5575, !5576}
!5572 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5567, file: !619, line: 134, type: !5488)
!5573 = !DILocalVariable(name: "function_index", arg: 2, scope: !5567, file: !619, line: 134, type: !381)
!5574 = !DILocalVariable(name: "no", scope: !5567, file: !619, line: 136, type: !61)
!5575 = !DILocalVariable(name: "remainder", scope: !5567, file: !619, line: 137, type: !61)
!5576 = !DILocalVariable(name: "irq_status", scope: !5567, file: !619, line: 138, type: !61)
!5577 = !DILocation(line: 0, scope: !5567)
!5578 = !DILocation(line: 140, column: 18, scope: !5579)
!5579 = distinct !DILexicalBlock(scope: !5567, file: !619, line: 140, column: 9)
!5580 = !DILocation(line: 140, column: 9, scope: !5567)
!5581 = !DILocation(line: 145, column: 24, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5567, file: !619, line: 145, column: 9)
!5583 = !DILocation(line: 145, column: 9, scope: !5567)
!5584 = !DILocation(line: 145, column: 9, scope: !5582)
!5585 = !DILocation(line: 150, column: 19, scope: !5567)
!5586 = !DILocation(line: 156, column: 18, scope: !5567)
!5587 = !DILocation(line: 157, column: 105, scope: !5567)
!5588 = !DILocation(line: 157, column: 91, scope: !5567)
!5589 = !DILocation(line: 157, column: 5, scope: !5567)
!5590 = !DILocation(line: 157, column: 48, scope: !5567)
!5591 = !DILocation(line: 157, column: 62, scope: !5567)
!5592 = !DILocation(line: 158, column: 80, scope: !5567)
!5593 = !DILocation(line: 158, column: 5, scope: !5567)
!5594 = !DILocation(line: 158, column: 48, scope: !5567)
!5595 = !DILocation(line: 158, column: 62, scope: !5567)
!5596 = !DILocation(line: 159, column: 5, scope: !5567)
!5597 = !DILocation(line: 160, column: 5, scope: !5567)
!5598 = !DILocation(line: 162, column: 1, scope: !5567)
!5599 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !619, file: !619, line: 166, type: !5600, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5603)
!5600 = !DISubroutineType(types: !5601)
!5601 = !{!5511, !5488, !5602}
!5602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 32)
!5603 = !{!5604, !5605, !5606, !5607, !5608}
!5604 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5599, file: !619, line: 166, type: !5488)
!5605 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5599, file: !619, line: 166, type: !5602)
!5606 = !DILocalVariable(name: "no", scope: !5599, file: !619, line: 168, type: !61)
!5607 = !DILocalVariable(name: "remainder", scope: !5599, file: !619, line: 169, type: !61)
!5608 = !DILocalVariable(name: "temp", scope: !5599, file: !619, line: 170, type: !61)
!5609 = !DILocation(line: 0, scope: !5599)
!5610 = !DILocation(line: 172, column: 18, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5599, file: !619, line: 172, column: 9)
!5612 = !DILocation(line: 172, column: 9, scope: !5599)
!5613 = !DILocation(line: 176, column: 14, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5599, file: !619, line: 176, column: 9)
!5615 = !DILocation(line: 176, column: 9, scope: !5599)
!5616 = !DILocation(line: 181, column: 19, scope: !5599)
!5617 = !DILocation(line: 184, column: 26, scope: !5599)
!5618 = !DILocation(line: 186, column: 12, scope: !5599)
!5619 = !DILocation(line: 186, column: 54, scope: !5599)
!5620 = !DILocation(line: 187, column: 45, scope: !5599)
!5621 = !DILocation(line: 187, column: 17, scope: !5599)
!5622 = !DILocation(line: 188, column: 41, scope: !5599)
!5623 = !DILocation(line: 188, column: 16, scope: !5599)
!5624 = !DILocation(line: 189, column: 5, scope: !5599)
!5625 = !DILocation(line: 191, column: 1, scope: !5599)
!5626 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !619, file: !619, line: 195, type: !5627, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5629)
!5627 = !DISubroutineType(types: !5628)
!5628 = !{!5511, !5488, !716}
!5629 = !{!5630, !5631, !5632, !5633}
!5630 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5626, file: !619, line: 195, type: !5488)
!5631 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5626, file: !619, line: 195, type: !716)
!5632 = !DILocalVariable(name: "no", scope: !5626, file: !619, line: 197, type: !61)
!5633 = !DILocalVariable(name: "remainder", scope: !5626, file: !619, line: 198, type: !61)
!5634 = !DILocation(line: 0, scope: !5626)
!5635 = !DILocation(line: 200, column: 18, scope: !5636)
!5636 = distinct !DILexicalBlock(scope: !5626, file: !619, line: 200, column: 9)
!5637 = !DILocation(line: 200, column: 9, scope: !5626)
!5638 = !DILocation(line: 205, column: 19, scope: !5626)
!5639 = !DILocation(line: 208, column: 26, scope: !5626)
!5640 = !DILocation(line: 210, column: 9, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5626, file: !619, line: 210, column: 9)
!5642 = !DILocation(line: 0, scope: !5641)
!5643 = !DILocation(line: 210, column: 9, scope: !5626)
!5644 = !DILocation(line: 216, column: 1, scope: !5626)
!5645 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !619, file: !619, line: 220, type: !5600, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5646)
!5646 = !{!5647, !5648, !5649, !5650, !5651}
!5647 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5645, file: !619, line: 220, type: !5488)
!5648 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !5645, file: !619, line: 220, type: !5602)
!5649 = !DILocalVariable(name: "no", scope: !5645, file: !619, line: 222, type: !61)
!5650 = !DILocalVariable(name: "remainder", scope: !5645, file: !619, line: 223, type: !61)
!5651 = !DILocalVariable(name: "temp", scope: !5645, file: !619, line: 224, type: !61)
!5652 = !DILocation(line: 0, scope: !5645)
!5653 = !DILocation(line: 226, column: 18, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5645, file: !619, line: 226, column: 9)
!5655 = !DILocation(line: 226, column: 9, scope: !5645)
!5656 = !DILocation(line: 230, column: 14, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5645, file: !619, line: 230, column: 9)
!5658 = !DILocation(line: 230, column: 9, scope: !5645)
!5659 = !DILocation(line: 235, column: 19, scope: !5645)
!5660 = !DILocation(line: 238, column: 26, scope: !5645)
!5661 = !DILocation(line: 240, column: 12, scope: !5645)
!5662 = !DILocation(line: 240, column: 55, scope: !5645)
!5663 = !DILocation(line: 241, column: 45, scope: !5645)
!5664 = !DILocation(line: 241, column: 17, scope: !5645)
!5665 = !DILocation(line: 242, column: 41, scope: !5645)
!5666 = !DILocation(line: 242, column: 16, scope: !5645)
!5667 = !DILocation(line: 243, column: 5, scope: !5645)
!5668 = !DILocation(line: 245, column: 1, scope: !5645)
!5669 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !619, file: !619, line: 249, type: !5509, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5670)
!5670 = !{!5671, !5672, !5673, !5674}
!5671 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5669, file: !619, line: 249, type: !5488)
!5672 = !DILocalVariable(name: "no", scope: !5669, file: !619, line: 251, type: !61)
!5673 = !DILocalVariable(name: "remainder", scope: !5669, file: !619, line: 252, type: !61)
!5674 = !DILocalVariable(name: "temp", scope: !5669, file: !619, line: 253, type: !61)
!5675 = !DILocation(line: 0, scope: !5669)
!5676 = !DILocation(line: 255, column: 18, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5669, file: !619, line: 255, column: 9)
!5678 = !DILocation(line: 255, column: 9, scope: !5669)
!5679 = !DILocation(line: 260, column: 19, scope: !5669)
!5680 = !DILocation(line: 263, column: 26, scope: !5669)
!5681 = !DILocation(line: 265, column: 12, scope: !5669)
!5682 = !DILocation(line: 265, column: 55, scope: !5669)
!5683 = !DILocation(line: 266, column: 45, scope: !5669)
!5684 = !DILocation(line: 266, column: 17, scope: !5669)
!5685 = !DILocation(line: 267, column: 15, scope: !5686)
!5686 = distinct !DILexicalBlock(scope: !5669, file: !619, line: 267, column: 9)
!5687 = !DILocation(line: 267, column: 9, scope: !5669)
!5688 = !DILocation(line: 0, scope: !5686)
!5689 = !DILocation(line: 273, column: 1, scope: !5669)
!5690 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !619, file: !619, line: 278, type: !5509, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5691)
!5691 = !{!5692, !5693, !5694}
!5692 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5690, file: !619, line: 278, type: !5488)
!5693 = !DILocalVariable(name: "no", scope: !5690, file: !619, line: 280, type: !61)
!5694 = !DILocalVariable(name: "remainder", scope: !5690, file: !619, line: 281, type: !61)
!5695 = !DILocation(line: 0, scope: !5690)
!5696 = !DILocation(line: 283, column: 18, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5690, file: !619, line: 283, column: 9)
!5698 = !DILocation(line: 283, column: 9, scope: !5690)
!5699 = !DILocation(line: 288, column: 19, scope: !5690)
!5700 = !DILocation(line: 291, column: 26, scope: !5690)
!5701 = !DILocation(line: 293, column: 90, scope: !5690)
!5702 = !DILocation(line: 293, column: 5, scope: !5690)
!5703 = !DILocation(line: 293, column: 48, scope: !5690)
!5704 = !DILocation(line: 293, column: 62, scope: !5690)
!5705 = !DILocation(line: 294, column: 5, scope: !5690)
!5706 = !DILocation(line: 295, column: 1, scope: !5690)
!5707 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !619, file: !619, line: 299, type: !5509, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5708)
!5708 = !{!5709, !5710, !5711}
!5709 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5707, file: !619, line: 299, type: !5488)
!5710 = !DILocalVariable(name: "no", scope: !5707, file: !619, line: 301, type: !61)
!5711 = !DILocalVariable(name: "remainder", scope: !5707, file: !619, line: 302, type: !61)
!5712 = !DILocation(line: 0, scope: !5707)
!5713 = !DILocation(line: 304, column: 18, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5707, file: !619, line: 304, column: 9)
!5715 = !DILocation(line: 304, column: 9, scope: !5707)
!5716 = !DILocation(line: 309, column: 19, scope: !5707)
!5717 = !DILocation(line: 312, column: 26, scope: !5707)
!5718 = !DILocation(line: 314, column: 90, scope: !5707)
!5719 = !DILocation(line: 314, column: 5, scope: !5707)
!5720 = !DILocation(line: 314, column: 48, scope: !5707)
!5721 = !DILocation(line: 314, column: 62, scope: !5707)
!5722 = !DILocation(line: 315, column: 5, scope: !5707)
!5723 = !DILocation(line: 316, column: 1, scope: !5707)
!5724 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !619, file: !619, line: 321, type: !5509, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5725)
!5725 = !{!5726, !5727, !5728}
!5726 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5724, file: !619, line: 321, type: !5488)
!5727 = !DILocalVariable(name: "no", scope: !5724, file: !619, line: 323, type: !61)
!5728 = !DILocalVariable(name: "remainder", scope: !5724, file: !619, line: 324, type: !61)
!5729 = !DILocation(line: 0, scope: !5724)
!5730 = !DILocation(line: 326, column: 19, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5724, file: !619, line: 326, column: 9)
!5732 = !DILocation(line: 326, column: 36, scope: !5731)
!5733 = !DILocation(line: 326, column: 41, scope: !5731)
!5734 = !DILocation(line: 326, column: 9, scope: !5724)
!5735 = !DILocation(line: 331, column: 19, scope: !5724)
!5736 = !DILocation(line: 334, column: 26, scope: !5724)
!5737 = !DILocation(line: 336, column: 94, scope: !5724)
!5738 = !DILocation(line: 336, column: 5, scope: !5724)
!5739 = !DILocation(line: 336, column: 50, scope: !5724)
!5740 = !DILocation(line: 336, column: 66, scope: !5724)
!5741 = !DILocation(line: 337, column: 5, scope: !5724)
!5742 = !DILocation(line: 337, column: 51, scope: !5724)
!5743 = !DILocation(line: 337, column: 68, scope: !5724)
!5744 = !DILocation(line: 338, column: 5, scope: !5724)
!5745 = !DILocation(line: 339, column: 1, scope: !5724)
!5746 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !619, file: !619, line: 343, type: !5509, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5747)
!5747 = !{!5748, !5749, !5750}
!5748 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5746, file: !619, line: 343, type: !5488)
!5749 = !DILocalVariable(name: "no", scope: !5746, file: !619, line: 345, type: !61)
!5750 = !DILocalVariable(name: "remainder", scope: !5746, file: !619, line: 346, type: !61)
!5751 = !DILocation(line: 0, scope: !5746)
!5752 = !DILocation(line: 348, column: 19, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5746, file: !619, line: 348, column: 9)
!5754 = !DILocation(line: 348, column: 36, scope: !5753)
!5755 = !DILocation(line: 348, column: 41, scope: !5753)
!5756 = !DILocation(line: 348, column: 9, scope: !5746)
!5757 = !DILocation(line: 353, column: 19, scope: !5746)
!5758 = !DILocation(line: 356, column: 26, scope: !5746)
!5759 = !DILocation(line: 358, column: 94, scope: !5746)
!5760 = !DILocation(line: 358, column: 5, scope: !5746)
!5761 = !DILocation(line: 358, column: 50, scope: !5746)
!5762 = !DILocation(line: 358, column: 66, scope: !5746)
!5763 = !DILocation(line: 359, column: 5, scope: !5746)
!5764 = !DILocation(line: 359, column: 51, scope: !5746)
!5765 = !DILocation(line: 359, column: 68, scope: !5746)
!5766 = !DILocation(line: 360, column: 5, scope: !5746)
!5767 = !DILocation(line: 361, column: 1, scope: !5746)
!5768 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !619, file: !619, line: 365, type: !5509, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5769)
!5769 = !{!5770, !5771, !5772}
!5770 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5768, file: !619, line: 365, type: !5488)
!5771 = !DILocalVariable(name: "no", scope: !5768, file: !619, line: 367, type: !61)
!5772 = !DILocalVariable(name: "remainder", scope: !5768, file: !619, line: 368, type: !61)
!5773 = !DILocation(line: 0, scope: !5768)
!5774 = !DILocation(line: 370, column: 19, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5768, file: !619, line: 370, column: 9)
!5776 = !DILocation(line: 370, column: 36, scope: !5775)
!5777 = !DILocation(line: 370, column: 41, scope: !5775)
!5778 = !DILocation(line: 370, column: 9, scope: !5768)
!5779 = !DILocation(line: 375, column: 19, scope: !5768)
!5780 = !DILocation(line: 378, column: 26, scope: !5768)
!5781 = !DILocation(line: 380, column: 94, scope: !5768)
!5782 = !DILocation(line: 380, column: 5, scope: !5768)
!5783 = !DILocation(line: 380, column: 50, scope: !5768)
!5784 = !DILocation(line: 380, column: 66, scope: !5768)
!5785 = !DILocation(line: 381, column: 5, scope: !5768)
!5786 = !DILocation(line: 382, column: 1, scope: !5768)
!5787 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !619, file: !619, line: 387, type: !5788, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5792)
!5788 = !DISubroutineType(types: !5789)
!5789 = !{!5511, !5790, !5791}
!5790 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !98, line: 423, baseType: !694)
!5791 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !98, line: 431, baseType: !703)
!5792 = !{!5793, !5794}
!5793 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !5787, file: !619, line: 387, type: !5790)
!5794 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !5787, file: !619, line: 387, type: !5791)
!5795 = !DILocation(line: 0, scope: !5787)
!5796 = !DILocation(line: 390, column: 24, scope: !5797)
!5797 = distinct !DILexicalBlock(scope: !5787, file: !619, line: 390, column: 9)
!5798 = !DILocation(line: 390, column: 9, scope: !5787)
!5799 = !DILocation(line: 394, column: 5, scope: !5787)
!5800 = !DILocation(line: 394, column: 62, scope: !5787)
!5801 = !DILocation(line: 394, column: 74, scope: !5787)
!5802 = !DILocation(line: 395, column: 5, scope: !5787)
!5803 = !DILocation(line: 396, column: 1, scope: !5787)
!5804 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !619, file: !619, line: 403, type: !5805, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5807)
!5805 = !DISubroutineType(types: !5806)
!5806 = !{!5511, !5488, !381, !381, !381}
!5807 = !{!5808, !5809, !5810, !5811, !5812, !5813}
!5808 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5804, file: !619, line: 403, type: !5488)
!5809 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !5804, file: !619, line: 403, type: !381)
!5810 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !5804, file: !619, line: 403, type: !381)
!5811 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !5804, file: !619, line: 403, type: !381)
!5812 = !DILocalVariable(name: "no", scope: !5804, file: !619, line: 405, type: !61)
!5813 = !DILocalVariable(name: "remainder", scope: !5804, file: !619, line: 406, type: !61)
!5814 = !DILocation(line: 0, scope: !5804)
!5815 = !DILocation(line: 408, column: 19, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5804, file: !619, line: 408, column: 9)
!5817 = !DILocation(line: 408, column: 36, scope: !5816)
!5818 = !DILocation(line: 408, column: 40, scope: !5816)
!5819 = !DILocation(line: 408, column: 9, scope: !5804)
!5820 = !DILocation(line: 413, column: 19, scope: !5804)
!5821 = !DILocation(line: 416, column: 26, scope: !5804)
!5822 = !DILocation(line: 418, column: 9, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5804, file: !619, line: 418, column: 9)
!5824 = !DILocation(line: 0, scope: !5823)
!5825 = !DILocation(line: 418, column: 9, scope: !5804)
!5826 = !DILocation(line: 424, column: 9, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5804, file: !619, line: 424, column: 9)
!5828 = !DILocation(line: 0, scope: !5827)
!5829 = !DILocation(line: 424, column: 9, scope: !5804)
!5830 = !DILocation(line: 430, column: 9, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5804, file: !619, line: 430, column: 9)
!5832 = !DILocation(line: 0, scope: !5831)
!5833 = !DILocation(line: 430, column: 9, scope: !5804)
!5834 = !DILocation(line: 436, column: 1, scope: !5804)
!5835 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !619, file: !619, line: 441, type: !5509, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5836)
!5836 = !{!5837, !5838, !5839, !5840, !5841, !5842, !5843}
!5837 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5835, file: !619, line: 441, type: !5488)
!5838 = !DILocalVariable(name: "no1", scope: !5835, file: !619, line: 443, type: !61)
!5839 = !DILocalVariable(name: "no2", scope: !5835, file: !619, line: 443, type: !61)
!5840 = !DILocalVariable(name: "no3", scope: !5835, file: !619, line: 443, type: !61)
!5841 = !DILocalVariable(name: "remainder1", scope: !5835, file: !619, line: 444, type: !61)
!5842 = !DILocalVariable(name: "remainder2", scope: !5835, file: !619, line: 444, type: !61)
!5843 = !DILocalVariable(name: "remainder3", scope: !5835, file: !619, line: 444, type: !61)
!5844 = !DILocation(line: 0, scope: !5835)
!5845 = !DILocation(line: 446, column: 18, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5835, file: !619, line: 446, column: 9)
!5847 = !DILocation(line: 446, column: 9, scope: !5835)
!5848 = !DILocation(line: 451, column: 20, scope: !5835)
!5849 = !DILocation(line: 454, column: 27, scope: !5835)
!5850 = !DILocation(line: 457, column: 20, scope: !5835)
!5851 = !DILocation(line: 463, column: 20, scope: !5835)
!5852 = !DILocation(line: 469, column: 107, scope: !5835)
!5853 = !DILocation(line: 469, column: 92, scope: !5835)
!5854 = !DILocation(line: 469, column: 5, scope: !5835)
!5855 = !DILocation(line: 469, column: 49, scope: !5835)
!5856 = !DILocation(line: 469, column: 63, scope: !5835)
!5857 = !DILocation(line: 472, column: 89, scope: !5835)
!5858 = !DILocation(line: 472, column: 5, scope: !5835)
!5859 = !DILocation(line: 472, column: 48, scope: !5835)
!5860 = !DILocation(line: 472, column: 61, scope: !5835)
!5861 = !DILocation(line: 475, column: 5, scope: !5835)
!5862 = !DILocation(line: 475, column: 48, scope: !5835)
!5863 = !DILocation(line: 475, column: 61, scope: !5835)
!5864 = !DILocation(line: 478, column: 9, scope: !5865)
!5865 = distinct !DILexicalBlock(scope: !5835, file: !619, line: 478, column: 9)
!5866 = !DILocation(line: 0, scope: !5865)
!5867 = !DILocation(line: 478, column: 9, scope: !5835)
!5868 = !DILocation(line: 479, column: 55, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5865, file: !619, line: 478, column: 40)
!5870 = !DILocation(line: 480, column: 5, scope: !5869)
!5871 = !DILocation(line: 483, column: 53, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5865, file: !619, line: 482, column: 10)
!5873 = !DILocation(line: 483, column: 67, scope: !5872)
!5874 = !DILocation(line: 484, column: 9, scope: !5872)
!5875 = !DILocation(line: 484, column: 55, scope: !5872)
!5876 = !DILocation(line: 484, column: 71, scope: !5872)
!5877 = !DILocation(line: 485, column: 9, scope: !5872)
!5878 = !DILocation(line: 485, column: 55, scope: !5872)
!5879 = !DILocation(line: 490, column: 5, scope: !5835)
!5880 = !DILocation(line: 490, column: 48, scope: !5835)
!5881 = !DILocation(line: 490, column: 61, scope: !5835)
!5882 = !DILocation(line: 493, column: 5, scope: !5835)
!5883 = !DILocation(line: 493, column: 47, scope: !5835)
!5884 = !DILocation(line: 493, column: 59, scope: !5835)
!5885 = !DILocation(line: 496, column: 108, scope: !5835)
!5886 = !DILocation(line: 496, column: 93, scope: !5835)
!5887 = !DILocation(line: 496, column: 5, scope: !5835)
!5888 = !DILocation(line: 496, column: 50, scope: !5835)
!5889 = !DILocation(line: 496, column: 65, scope: !5835)
!5890 = !DILocation(line: 498, column: 5, scope: !5835)
!5891 = !DILocation(line: 499, column: 1, scope: !5835)
!5892 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !619, file: !619, line: 502, type: !5509, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5893)
!5893 = !{!5894, !5895, !5896, !5897, !5898}
!5894 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5892, file: !619, line: 502, type: !5488)
!5895 = !DILocalVariable(name: "no1", scope: !5892, file: !619, line: 504, type: !61)
!5896 = !DILocalVariable(name: "no2", scope: !5892, file: !619, line: 504, type: !61)
!5897 = !DILocalVariable(name: "remainder1", scope: !5892, file: !619, line: 505, type: !61)
!5898 = !DILocalVariable(name: "remainder2", scope: !5892, file: !619, line: 505, type: !61)
!5899 = !DILocation(line: 0, scope: !5892)
!5900 = !DILocation(line: 507, column: 18, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5892, file: !619, line: 507, column: 9)
!5902 = !DILocation(line: 507, column: 9, scope: !5892)
!5903 = !DILocation(line: 512, column: 20, scope: !5892)
!5904 = !DILocation(line: 515, column: 27, scope: !5892)
!5905 = !DILocation(line: 518, column: 20, scope: !5892)
!5906 = !DILocation(line: 524, column: 107, scope: !5892)
!5907 = !DILocation(line: 524, column: 92, scope: !5892)
!5908 = !DILocation(line: 524, column: 5, scope: !5892)
!5909 = !DILocation(line: 524, column: 49, scope: !5892)
!5910 = !DILocation(line: 524, column: 63, scope: !5892)
!5911 = !DILocation(line: 527, column: 89, scope: !5892)
!5912 = !DILocation(line: 527, column: 5, scope: !5892)
!5913 = !DILocation(line: 527, column: 48, scope: !5892)
!5914 = !DILocation(line: 527, column: 61, scope: !5892)
!5915 = !DILocation(line: 530, column: 9, scope: !5916)
!5916 = distinct !DILexicalBlock(scope: !5892, file: !619, line: 530, column: 9)
!5917 = !DILocation(line: 0, scope: !5916)
!5918 = !DILocation(line: 530, column: 9, scope: !5892)
!5919 = !DILocation(line: 531, column: 55, scope: !5920)
!5920 = distinct !DILexicalBlock(scope: !5916, file: !619, line: 530, column: 40)
!5921 = !DILocation(line: 531, column: 71, scope: !5920)
!5922 = !DILocation(line: 532, column: 9, scope: !5920)
!5923 = !DILocation(line: 532, column: 56, scope: !5920)
!5924 = !DILocation(line: 533, column: 5, scope: !5920)
!5925 = !DILocation(line: 536, column: 53, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5916, file: !619, line: 535, column: 10)
!5927 = !DILocation(line: 536, column: 67, scope: !5926)
!5928 = !DILocation(line: 537, column: 9, scope: !5926)
!5929 = !DILocation(line: 537, column: 55, scope: !5926)
!5930 = !DILocation(line: 537, column: 71, scope: !5926)
!5931 = !DILocation(line: 538, column: 9, scope: !5926)
!5932 = !DILocation(line: 538, column: 55, scope: !5926)
!5933 = !DILocation(line: 543, column: 5, scope: !5892)
!5934 = !DILocation(line: 543, column: 48, scope: !5892)
!5935 = !DILocation(line: 543, column: 61, scope: !5892)
!5936 = !DILocation(line: 546, column: 5, scope: !5892)
!5937 = !DILocation(line: 546, column: 47, scope: !5892)
!5938 = !DILocation(line: 546, column: 59, scope: !5892)
!5939 = !DILocation(line: 549, column: 5, scope: !5892)
!5940 = !DILocation(line: 550, column: 1, scope: !5892)
!5941 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !619, file: !619, line: 554, type: !5942, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5944)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!5511, !5488, !717}
!5944 = !{!5945, !5946, !5947, !5948}
!5945 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5941, file: !619, line: 554, type: !5488)
!5946 = !DILocalVariable(name: "driving", arg: 2, scope: !5941, file: !619, line: 554, type: !717)
!5947 = !DILocalVariable(name: "no", scope: !5941, file: !619, line: 556, type: !61)
!5948 = !DILocalVariable(name: "remainder", scope: !5941, file: !619, line: 557, type: !61)
!5949 = !DILocation(line: 0, scope: !5941)
!5950 = !DILocation(line: 559, column: 19, scope: !5951)
!5951 = distinct !DILexicalBlock(scope: !5941, file: !619, line: 559, column: 9)
!5952 = !DILocation(line: 559, column: 9, scope: !5941)
!5953 = !DILocation(line: 564, column: 19, scope: !5941)
!5954 = !DILocation(line: 569, column: 102, scope: !5941)
!5955 = !DILocation(line: 569, column: 88, scope: !5941)
!5956 = !DILocation(line: 569, column: 5, scope: !5941)
!5957 = !DILocation(line: 569, column: 47, scope: !5941)
!5958 = !DILocation(line: 569, column: 60, scope: !5941)
!5959 = !DILocation(line: 570, column: 71, scope: !5941)
!5960 = !DILocation(line: 570, column: 5, scope: !5941)
!5961 = !DILocation(line: 570, column: 47, scope: !5941)
!5962 = !DILocation(line: 570, column: 60, scope: !5941)
!5963 = !DILocation(line: 571, column: 5, scope: !5941)
!5964 = !DILocation(line: 572, column: 1, scope: !5941)
!5965 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !619, file: !619, line: 575, type: !5966, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !618, retainedNodes: !5969)
!5966 = !DISubroutineType(types: !5967)
!5967 = !{!5511, !5488, !5968}
!5968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 32)
!5969 = !{!5970, !5971, !5972, !5973, !5974}
!5970 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !5965, file: !619, line: 575, type: !5488)
!5971 = !DILocalVariable(name: "driving", arg: 2, scope: !5965, file: !619, line: 575, type: !5968)
!5972 = !DILocalVariable(name: "no", scope: !5965, file: !619, line: 577, type: !61)
!5973 = !DILocalVariable(name: "remainder", scope: !5965, file: !619, line: 578, type: !61)
!5974 = !DILocalVariable(name: "temp", scope: !5965, file: !619, line: 579, type: !61)
!5975 = !DILocation(line: 0, scope: !5965)
!5976 = !DILocation(line: 581, column: 19, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5965, file: !619, line: 581, column: 9)
!5978 = !DILocation(line: 581, column: 9, scope: !5965)
!5979 = !DILocation(line: 585, column: 14, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5965, file: !619, line: 585, column: 9)
!5981 = !DILocation(line: 585, column: 9, scope: !5965)
!5982 = !DILocation(line: 590, column: 19, scope: !5965)
!5983 = !DILocation(line: 595, column: 12, scope: !5965)
!5984 = !DILocation(line: 595, column: 54, scope: !5965)
!5985 = !DILocation(line: 596, column: 59, scope: !5965)
!5986 = !DILocation(line: 596, column: 45, scope: !5965)
!5987 = !DILocation(line: 596, column: 17, scope: !5965)
!5988 = !DILocation(line: 597, column: 18, scope: !5965)
!5989 = !DILocation(line: 600, column: 56, scope: !5965)
!5990 = !DILocation(line: 600, column: 14, scope: !5965)
!5991 = !DILocation(line: 602, column: 5, scope: !5965)
!5992 = !DILocation(line: 603, column: 1, scope: !5965)
!5993 = distinct !DISubprogram(name: "uart_receive_handler", scope: !895, file: !895, line: 146, type: !5994, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !5996)
!5994 = !DISubroutineType(types: !5995)
!5995 = !{null, !969, !91}
!5996 = !{!5997, !5998, !5999, !6000, !6001, !6002, !6003, !6059}
!5997 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5993, file: !895, line: 146, type: !969)
!5998 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !5993, file: !895, line: 146, type: !91)
!5999 = !DILocalVariable(name: "channel", scope: !5993, file: !895, line: 148, type: !5036)
!6000 = !DILocalVariable(name: "avail_bytes", scope: !5993, file: !895, line: 149, type: !61)
!6001 = !DILocalVariable(name: "callback", scope: !5993, file: !895, line: 150, type: !978)
!6002 = !DILocalVariable(name: "arg", scope: !5993, file: !895, line: 151, type: !88)
!6003 = !DILocalVariable(name: "uartx", scope: !5993, file: !895, line: 152, type: !6004)
!6004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6005, size: 32)
!6005 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !6006)
!6006 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !6007)
!6007 = !{!6008, !6014, !6019, !6025, !6026, !6031, !6036, !6037, !6042, !6043, !6044, !6045, !6046, !6047, !6048, !6049, !6050, !6051, !6052, !6053, !6054, !6055, !6056, !6057, !6058}
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !6006, file: !56, line: 547, baseType: !6009, size: 32)
!6009 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6006, file: !56, line: 543, size: 32, elements: !6010)
!6010 = !{!6011, !6012, !6013}
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !6009, file: !56, line: 544, baseType: !272, size: 32)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !6009, file: !56, line: 545, baseType: !60, size: 32)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !6009, file: !56, line: 546, baseType: !60, size: 32)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !6006, file: !56, line: 551, baseType: !6015, size: 32, offset: 32)
!6015 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6006, file: !56, line: 548, size: 32, elements: !6016)
!6016 = !{!6017, !6018}
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !6015, file: !56, line: 549, baseType: !60, size: 32)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !6015, file: !56, line: 550, baseType: !60, size: 32)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !6006, file: !56, line: 556, baseType: !6020, size: 32, offset: 64)
!6020 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6006, file: !56, line: 552, size: 32, elements: !6021)
!6021 = !{!6022, !6023, !6024}
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !6020, file: !56, line: 553, baseType: !272, size: 32)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !6020, file: !56, line: 554, baseType: !60, size: 32)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !6020, file: !56, line: 555, baseType: !60, size: 32)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !6006, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !6006, file: !56, line: 561, baseType: !6027, size: 32, offset: 128)
!6027 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6006, file: !56, line: 558, size: 32, elements: !6028)
!6028 = !{!6029, !6030}
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !6027, file: !56, line: 559, baseType: !60, size: 32)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !6027, file: !56, line: 560, baseType: !60, size: 32)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !6006, file: !56, line: 565, baseType: !6032, size: 32, offset: 160)
!6032 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6006, file: !56, line: 562, size: 32, elements: !6033)
!6033 = !{!6034, !6035}
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !6032, file: !56, line: 563, baseType: !272, size: 32)
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !6032, file: !56, line: 564, baseType: !60, size: 32)
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !6006, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!6037 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !6006, file: !56, line: 570, baseType: !6038, size: 32, offset: 224)
!6038 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6006, file: !56, line: 567, size: 32, elements: !6039)
!6039 = !{!6040, !6041}
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !6038, file: !56, line: 568, baseType: !60, size: 32)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !6038, file: !56, line: 569, baseType: !60, size: 32)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !6006, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !6006, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !6006, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !6006, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !6006, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !6006, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !6006, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !6006, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !6006, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !6006, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !6006, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !6006, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !6006, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !6006, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !6006, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !6006, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !6006, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!6059 = !DILocalVariable(name: "status", scope: !5993, file: !895, line: 153, type: !5035)
!6060 = !DILocation(line: 0, scope: !5993)
!6061 = !DILocation(line: 149, column: 5, scope: !5993)
!6062 = !DILocation(line: 155, column: 9, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !5993, file: !895, line: 155, column: 9)
!6064 = !DILocation(line: 155, column: 36, scope: !6063)
!6065 = !DILocation(line: 155, column: 9, scope: !5993)
!6066 = !DILocation(line: 156, column: 9, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6063, file: !895, line: 155, column: 70)
!6068 = !DILocation(line: 160, column: 13, scope: !5993)
!6069 = !DILocation(line: 161, column: 15, scope: !5993)
!6070 = !DILocation(line: 163, column: 9, scope: !5993)
!6071 = !DILocation(line: 164, column: 9, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6073, file: !895, line: 163, column: 29)
!6073 = distinct !DILexicalBlock(scope: !5993, file: !895, line: 163, column: 9)
!6074 = !DILocation(line: 165, column: 5, scope: !6072)
!6075 = !DILocation(line: 167, column: 14, scope: !5993)
!6076 = !DILocation(line: 168, column: 16, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !5993, file: !895, line: 168, column: 9)
!6078 = !DILocation(line: 168, column: 9, scope: !5993)
!6079 = !DILocation(line: 169, column: 9, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6077, file: !895, line: 168, column: 28)
!6081 = !DILocation(line: 172, column: 9, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !5993, file: !895, line: 172, column: 9)
!6083 = !DILocation(line: 172, column: 21, scope: !6082)
!6084 = !DILocation(line: 172, column: 9, scope: !5993)
!6085 = !DILocation(line: 176, column: 43, scope: !5993)
!6086 = !DILocation(line: 178, column: 18, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !5993, file: !895, line: 178, column: 9)
!6088 = !DILocation(line: 178, column: 9, scope: !5993)
!6089 = !DILocation(line: 179, column: 9, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6087, file: !895, line: 178, column: 27)
!6091 = !DILocation(line: 177, column: 38, scope: !5993)
!6092 = !DILocation(line: 183, column: 5, scope: !5993)
!6093 = !DILocation(line: 184, column: 5, scope: !5993)
!6094 = !DILocation(line: 185, column: 5, scope: !5993)
!6095 = !DILocation(line: 187, column: 14, scope: !5993)
!6096 = !DILocation(line: 188, column: 16, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !5993, file: !895, line: 188, column: 9)
!6098 = !DILocation(line: 188, column: 9, scope: !5993)
!6099 = !DILocation(line: 189, column: 9, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6097, file: !895, line: 188, column: 28)
!6101 = !DILocation(line: 192, column: 9, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !5993, file: !895, line: 192, column: 9)
!6103 = !DILocation(line: 192, column: 53, scope: !6102)
!6104 = !DILocation(line: 192, column: 21, scope: !6102)
!6105 = !DILocation(line: 192, column: 9, scope: !5993)
!6106 = !DILocation(line: 193, column: 18, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6102, file: !895, line: 192, column: 83)
!6108 = !DILocation(line: 194, column: 20, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6107, file: !895, line: 194, column: 13)
!6110 = !DILocation(line: 194, column: 13, scope: !6107)
!6111 = !DILocation(line: 195, column: 13, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6109, file: !895, line: 194, column: 32)
!6113 = !DILocation(line: 199, column: 1, scope: !5993)
!6114 = distinct !DISubprogram(name: "uart_send_handler", scope: !895, file: !895, line: 210, type: !5994, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6115)
!6115 = !{!6116, !6117, !6118, !6119, !6120, !6121, !6122, !6123}
!6116 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6114, file: !895, line: 210, type: !969)
!6117 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !6114, file: !895, line: 210, type: !91)
!6118 = !DILocalVariable(name: "channel", scope: !6114, file: !895, line: 212, type: !5036)
!6119 = !DILocalVariable(name: "status", scope: !6114, file: !895, line: 213, type: !5035)
!6120 = !DILocalVariable(name: "compare_space", scope: !6114, file: !895, line: 214, type: !61)
!6121 = !DILocalVariable(name: "avail_space", scope: !6114, file: !895, line: 214, type: !61)
!6122 = !DILocalVariable(name: "callback", scope: !6114, file: !895, line: 215, type: !978)
!6123 = !DILocalVariable(name: "arg", scope: !6114, file: !895, line: 216, type: !88)
!6124 = !DILocation(line: 0, scope: !6114)
!6125 = !DILocation(line: 214, column: 5, scope: !6114)
!6126 = !DILocation(line: 221, column: 9, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6114, file: !895, line: 221, column: 9)
!6128 = !DILocation(line: 221, column: 36, scope: !6127)
!6129 = !DILocation(line: 221, column: 9, scope: !6114)
!6130 = !DILocation(line: 222, column: 9, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6127, file: !895, line: 221, column: 70)
!6132 = !DILocation(line: 226, column: 15, scope: !6114)
!6133 = !DILocation(line: 228, column: 9, scope: !6114)
!6134 = !DILocation(line: 253, column: 47, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6136, file: !895, line: 252, column: 12)
!6136 = distinct !DILexicalBlock(scope: !6114, file: !895, line: 228, column: 9)
!6137 = !DILocation(line: 255, column: 22, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6135, file: !895, line: 255, column: 13)
!6139 = !DILocation(line: 255, column: 13, scope: !6135)
!6140 = !DILocation(line: 256, column: 13, scope: !6141)
!6141 = distinct !DILexicalBlock(scope: !6138, file: !895, line: 255, column: 31)
!6142 = !DILocation(line: 254, column: 42, scope: !6135)
!6143 = !DILocation(line: 260, column: 9, scope: !6135)
!6144 = !DILocation(line: 261, column: 9, scope: !6135)
!6145 = !DILocation(line: 262, column: 9, scope: !6135)
!6146 = !DILocation(line: 264, column: 18, scope: !6135)
!6147 = !DILocation(line: 265, column: 20, scope: !6148)
!6148 = distinct !DILexicalBlock(scope: !6135, file: !895, line: 265, column: 13)
!6149 = !DILocation(line: 265, column: 13, scope: !6135)
!6150 = !DILocation(line: 266, column: 13, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6148, file: !895, line: 265, column: 32)
!6152 = !DILocation(line: 269, column: 54, scope: !6135)
!6153 = !DILocation(line: 270, column: 56, scope: !6135)
!6154 = !DILocation(line: 270, column: 25, scope: !6135)
!6155 = !DILocation(line: 271, column: 13, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6135, file: !895, line: 271, column: 13)
!6157 = !DILocation(line: 271, column: 25, scope: !6156)
!6158 = !DILocation(line: 271, column: 13, scope: !6135)
!6159 = !DILocation(line: 272, column: 22, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6156, file: !895, line: 271, column: 43)
!6161 = !DILocation(line: 273, column: 24, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6160, file: !895, line: 273, column: 17)
!6163 = !DILocation(line: 273, column: 17, scope: !6160)
!6164 = !DILocation(line: 274, column: 17, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6162, file: !895, line: 273, column: 36)
!6166 = !DILocation(line: 279, column: 1, scope: !6114)
!6167 = distinct !DISubprogram(name: "uart_error_handler", scope: !895, file: !895, line: 282, type: !6168, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6170)
!6168 = !DISubroutineType(types: !6169)
!6169 = !{null, !969}
!6170 = !{!6171, !6172, !6173, !6174}
!6171 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6167, file: !895, line: 282, type: !969)
!6172 = !DILocalVariable(name: "uartx", scope: !6167, file: !895, line: 284, type: !6004)
!6173 = !DILocalVariable(name: "callback", scope: !6167, file: !895, line: 285, type: !978)
!6174 = !DILocalVariable(name: "arg", scope: !6167, file: !895, line: 286, type: !88)
!6175 = !DILocation(line: 0, scope: !6167)
!6176 = !DILocation(line: 288, column: 13, scope: !6167)
!6177 = !DILocation(line: 290, column: 10, scope: !6178)
!6178 = distinct !DILexicalBlock(scope: !6167, file: !895, line: 290, column: 9)
!6179 = !DILocation(line: 290, column: 9, scope: !6167)
!6180 = !DILocation(line: 291, column: 9, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !6178, file: !895, line: 290, column: 36)
!6182 = !DILocation(line: 292, column: 9, scope: !6181)
!6183 = !DILocation(line: 293, column: 47, scope: !6181)
!6184 = !DILocation(line: 295, column: 22, scope: !6185)
!6185 = distinct !DILexicalBlock(scope: !6181, file: !895, line: 295, column: 13)
!6186 = !DILocation(line: 295, column: 13, scope: !6181)
!6187 = !DILocation(line: 296, column: 13, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6185, file: !895, line: 295, column: 31)
!6189 = !DILocation(line: 294, column: 42, scope: !6181)
!6190 = !DILocation(line: 299, column: 9, scope: !6181)
!6191 = !DILocation(line: 300, column: 5, scope: !6181)
!6192 = !DILocation(line: 301, column: 1, scope: !6167)
!6193 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !895, file: !895, line: 416, type: !6194, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6198)
!6194 = !DISubroutineType(types: !6195)
!6195 = !{!6196, !969, !6197}
!6196 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !905, line: 351, baseType: !915)
!6197 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !905, line: 317, baseType: !922)
!6198 = !{!6199, !6200, !6201, !6202, !6203}
!6199 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6193, file: !895, line: 416, type: !969)
!6200 = !DILocalVariable(name: "baudrate", arg: 2, scope: !6193, file: !895, line: 416, type: !6197)
!6201 = !DILocalVariable(name: "actual_baudrate", scope: !6193, file: !895, line: 418, type: !61)
!6202 = !DILocalVariable(name: "irq_status", scope: !6193, file: !895, line: 418, type: !61)
!6203 = !DILocalVariable(name: "uartx", scope: !6193, file: !895, line: 419, type: !6004)
!6204 = !DILocation(line: 0, scope: !6193)
!6205 = !DILocation(line: 421, column: 11, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6193, file: !895, line: 421, column: 9)
!6207 = !DILocation(line: 421, column: 42, scope: !6206)
!6208 = !DILocation(line: 422, column: 11, scope: !6206)
!6209 = !DILocation(line: 421, column: 9, scope: !6193)
!6210 = !DILocation(line: 426, column: 9, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6193, file: !895, line: 426, column: 9)
!6212 = !DILocation(line: 426, column: 36, scope: !6211)
!6213 = !DILocation(line: 426, column: 9, scope: !6193)
!6214 = !DILocation(line: 430, column: 18, scope: !6193)
!6215 = !DILocation(line: 434, column: 5, scope: !6193)
!6216 = !DILocation(line: 436, column: 13, scope: !6193)
!6217 = !DILocation(line: 437, column: 23, scope: !6193)
!6218 = !DILocation(line: 439, column: 5, scope: !6193)
!6219 = !DILocation(line: 441, column: 5, scope: !6193)
!6220 = !DILocation(line: 442, column: 1, scope: !6193)
!6221 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !895, file: !895, line: 120, type: !6222, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6224)
!6222 = !DISubroutineType(types: !6223)
!6223 = !{!91, !969}
!6224 = !{!6225}
!6225 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6221, file: !895, line: 120, type: !969)
!6226 = !DILocation(line: 0, scope: !6221)
!6227 = !DILocation(line: 122, column: 23, scope: !6221)
!6228 = !DILocation(line: 122, column: 5, scope: !6221)
!6229 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !895, file: !895, line: 125, type: !6230, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6232)
!6230 = !DISubroutineType(types: !6231)
!6231 = !{!91, !6197}
!6232 = !{!6233}
!6233 = !DILocalVariable(name: "baudrate", arg: 1, scope: !6229, file: !895, line: 125, type: !6197)
!6234 = !DILocation(line: 0, scope: !6229)
!6235 = !DILocation(line: 127, column: 22, scope: !6229)
!6236 = !DILocation(line: 127, column: 5, scope: !6229)
!6237 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !895, file: !895, line: 444, type: !6238, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6252)
!6238 = !DISubroutineType(types: !6239)
!6239 = !{!6196, !969, !6240}
!6240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6241, size: 32)
!6241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6242)
!6242 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !905, line: 378, baseType: !6243)
!6243 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !905, line: 373, size: 128, elements: !6244)
!6244 = !{!6245, !6246, !6248, !6250}
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !6243, file: !905, line: 374, baseType: !6197, size: 32)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !6243, file: !905, line: 375, baseType: !6247, size: 32, offset: 32)
!6247 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !905, line: 326, baseType: !938)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !6243, file: !905, line: 376, baseType: !6249, size: 32, offset: 64)
!6249 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !905, line: 333, baseType: !944)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !6243, file: !905, line: 377, baseType: !6251, size: 32, offset: 96)
!6251 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !905, line: 341, baseType: !948)
!6252 = !{!6253, !6254, !6255, !6256}
!6253 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6237, file: !895, line: 444, type: !969)
!6254 = !DILocalVariable(name: "config", arg: 2, scope: !6237, file: !895, line: 445, type: !6240)
!6255 = !DILocalVariable(name: "irq_status", scope: !6237, file: !895, line: 447, type: !61)
!6256 = !DILocalVariable(name: "uartx", scope: !6237, file: !895, line: 448, type: !6004)
!6257 = !DILocation(line: 0, scope: !6237)
!6258 = !DILocation(line: 450, column: 11, scope: !6259)
!6259 = distinct !DILexicalBlock(scope: !6237, file: !895, line: 450, column: 9)
!6260 = !DILocation(line: 450, column: 42, scope: !6259)
!6261 = !DILocation(line: 451, column: 11, scope: !6259)
!6262 = !DILocation(line: 450, column: 9, scope: !6237)
!6263 = !DILocation(line: 455, column: 9, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6237, file: !895, line: 455, column: 9)
!6265 = !DILocation(line: 455, column: 36, scope: !6264)
!6266 = !DILocation(line: 455, column: 9, scope: !6237)
!6267 = !DILocation(line: 459, column: 18, scope: !6237)
!6268 = !DILocation(line: 466, column: 5, scope: !6237)
!6269 = !DILocation(line: 468, column: 13, scope: !6237)
!6270 = !DILocation(line: 470, column: 46, scope: !6237)
!6271 = !DILocation(line: 470, column: 5, scope: !6237)
!6272 = !DILocation(line: 471, column: 36, scope: !6237)
!6273 = !DILocation(line: 471, column: 57, scope: !6237)
!6274 = !DILocation(line: 471, column: 75, scope: !6237)
!6275 = !DILocation(line: 471, column: 5, scope: !6237)
!6276 = !DILocation(line: 473, column: 5, scope: !6237)
!6277 = !DILocation(line: 474, column: 1, scope: !6237)
!6278 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !895, file: !895, line: 130, type: !6279, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6281)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{!91, !6240}
!6281 = !{!6282}
!6282 = !DILocalVariable(name: "config", arg: 1, scope: !6278, file: !895, line: 130, type: !6240)
!6283 = !DILocation(line: 0, scope: !6278)
!6284 = !DILocation(line: 132, column: 22, scope: !6278)
!6285 = !DILocation(line: 132, column: 31, scope: !6278)
!6286 = !DILocation(line: 132, column: 56, scope: !6278)
!6287 = !DILocation(line: 133, column: 22, scope: !6278)
!6288 = !DILocation(line: 133, column: 34, scope: !6278)
!6289 = !DILocation(line: 133, column: 61, scope: !6278)
!6290 = !DILocation(line: 134, column: 22, scope: !6278)
!6291 = !DILocation(line: 134, column: 31, scope: !6278)
!6292 = !DILocation(line: 134, column: 55, scope: !6278)
!6293 = !DILocation(line: 135, column: 22, scope: !6278)
!6294 = !DILocation(line: 135, column: 29, scope: !6278)
!6295 = !DILocation(line: 132, column: 5, scope: !6278)
!6296 = distinct !DISubprogram(name: "hal_uart_init", scope: !895, file: !895, line: 476, type: !6297, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6300)
!6297 = !DISubroutineType(types: !6298)
!6298 = !{!6196, !969, !6299}
!6299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6242, size: 32)
!6300 = !{!6301, !6302, !6303, !6304, !6305, !6306, !6307}
!6301 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6296, file: !895, line: 476, type: !969)
!6302 = !DILocalVariable(name: "uart_config", arg: 2, scope: !6296, file: !895, line: 476, type: !6299)
!6303 = !DILocalVariable(name: "uartx", scope: !6296, file: !895, line: 478, type: !6004)
!6304 = !DILocalVariable(name: "i", scope: !6296, file: !895, line: 479, type: !61)
!6305 = !DILocalVariable(name: "actual_baudrate", scope: !6296, file: !895, line: 479, type: !61)
!6306 = !DILocalVariable(name: "irq_status", scope: !6296, file: !895, line: 479, type: !61)
!6307 = !DILocalVariable(name: "status", scope: !6296, file: !895, line: 480, type: !4532)
!6308 = !DILocation(line: 0, scope: !6296)
!6309 = !DILocation(line: 482, column: 11, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6296, file: !895, line: 482, column: 9)
!6311 = !DILocation(line: 482, column: 42, scope: !6310)
!6312 = !DILocation(line: 483, column: 11, scope: !6310)
!6313 = !DILocation(line: 482, column: 9, scope: !6296)
!6314 = !DILocation(line: 487, column: 18, scope: !6296)
!6315 = !DILocation(line: 488, column: 9, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6296, file: !895, line: 488, column: 9)
!6317 = !DILocation(line: 488, column: 36, scope: !6316)
!6318 = !DILocation(line: 488, column: 9, scope: !6296)
!6319 = !DILocation(line: 489, column: 9, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6316, file: !895, line: 488, column: 68)
!6321 = !DILocation(line: 490, column: 9, scope: !6320)
!6322 = !DILocation(line: 502, column: 9, scope: !6323)
!6323 = distinct !DILexicalBlock(scope: !6296, file: !895, line: 502, column: 9)
!6324 = !DILocation(line: 502, column: 9, scope: !6296)
!6325 = !DILocation(line: 504, column: 13, scope: !6326)
!6326 = distinct !DILexicalBlock(scope: !6327, file: !895, line: 503, column: 44)
!6327 = distinct !DILexicalBlock(scope: !6328, file: !895, line: 503, column: 9)
!6328 = distinct !DILexicalBlock(scope: !6329, file: !895, line: 503, column: 9)
!6329 = distinct !DILexicalBlock(scope: !6323, file: !895, line: 502, column: 50)
!6330 = !DILocation(line: 504, column: 32, scope: !6326)
!6331 = !DILocation(line: 510, column: 32, scope: !6326)
!6332 = !DILocation(line: 510, column: 36, scope: !6326)
!6333 = !DILocation(line: 511, column: 32, scope: !6326)
!6334 = !DILocation(line: 511, column: 37, scope: !6326)
!6335 = !DILocation(line: 503, column: 40, scope: !6327)
!6336 = !DILocation(line: 503, column: 23, scope: !6327)
!6337 = !DILocation(line: 503, column: 9, scope: !6328)
!6338 = distinct !{!6338, !6337, !6339}
!6339 = !DILocation(line: 512, column: 9, scope: !6328)
!6340 = !DILocation(line: 513, column: 40, scope: !6329)
!6341 = !DILocation(line: 514, column: 5, scope: !6329)
!6342 = !DILocation(line: 521, column: 32, scope: !6296)
!6343 = !DILocation(line: 522, column: 5, scope: !6296)
!6344 = !DILocation(line: 524, column: 31, scope: !6296)
!6345 = !DILocation(line: 524, column: 14, scope: !6296)
!6346 = !DILocation(line: 525, column: 16, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6296, file: !895, line: 525, column: 9)
!6348 = !DILocation(line: 525, column: 9, scope: !6296)
!6349 = !DILocation(line: 526, column: 9, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6347, file: !895, line: 525, column: 40)
!6351 = !DILocation(line: 530, column: 13, scope: !6296)
!6352 = !DILocation(line: 532, column: 5, scope: !6296)
!6353 = !DILocation(line: 533, column: 56, scope: !6296)
!6354 = !DILocation(line: 533, column: 23, scope: !6296)
!6355 = !DILocation(line: 534, column: 5, scope: !6296)
!6356 = !DILocation(line: 535, column: 41, scope: !6296)
!6357 = !DILocation(line: 535, column: 67, scope: !6296)
!6358 = !DILocation(line: 535, column: 90, scope: !6296)
!6359 = !DILocation(line: 535, column: 5, scope: !6296)
!6360 = !DILocation(line: 536, column: 5, scope: !6296)
!6361 = !DILocation(line: 541, column: 5, scope: !6296)
!6362 = !DILocation(line: 542, column: 1, scope: !6296)
!6363 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !895, file: !895, line: 544, type: !6364, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6366)
!6364 = !DISubroutineType(types: !6365)
!6365 = !{!6196, !969}
!6366 = !{!6367, !6368, !6369, !6370, !6371, !6372, !6373}
!6367 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6363, file: !895, line: 544, type: !969)
!6368 = !DILocalVariable(name: "uartx", scope: !6363, file: !895, line: 546, type: !6004)
!6369 = !DILocalVariable(name: "tx_dma_channel", scope: !6363, file: !895, line: 547, type: !5036)
!6370 = !DILocalVariable(name: "rx_dma_channel", scope: !6363, file: !895, line: 547, type: !5036)
!6371 = !DILocalVariable(name: "irq_status", scope: !6363, file: !895, line: 548, type: !61)
!6372 = !DILocalVariable(name: "status", scope: !6363, file: !895, line: 549, type: !5035)
!6373 = !DILocalVariable(name: "clock_status", scope: !6363, file: !895, line: 550, type: !4532)
!6374 = !DILocation(line: 0, scope: !6363)
!6375 = !DILocation(line: 552, column: 10, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6363, file: !895, line: 552, column: 9)
!6377 = !DILocation(line: 552, column: 9, scope: !6363)
!6378 = !DILocation(line: 556, column: 18, scope: !6363)
!6379 = !DILocation(line: 557, column: 9, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6363, file: !895, line: 557, column: 9)
!6381 = !DILocation(line: 557, column: 36, scope: !6380)
!6382 = !DILocation(line: 557, column: 9, scope: !6363)
!6383 = !DILocation(line: 562, column: 13, scope: !6363)
!6384 = !DILocation(line: 565, column: 5, scope: !6363)
!6385 = !DILocation(line: 568, column: 9, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6363, file: !895, line: 568, column: 9)
!6387 = !DILocation(line: 568, column: 36, scope: !6386)
!6388 = !DILocation(line: 568, column: 9, scope: !6363)
!6389 = !DILocation(line: 569, column: 26, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6386, file: !895, line: 568, column: 70)
!6391 = !DILocation(line: 570, column: 26, scope: !6390)
!6392 = !DILocation(line: 572, column: 18, scope: !6390)
!6393 = !DILocation(line: 573, column: 20, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6390, file: !895, line: 573, column: 13)
!6395 = !DILocation(line: 573, column: 13, scope: !6390)
!6396 = !DILocation(line: 574, column: 13, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !6394, file: !895, line: 573, column: 32)
!6398 = !DILocation(line: 575, column: 13, scope: !6397)
!6399 = !DILocation(line: 578, column: 18, scope: !6390)
!6400 = !DILocation(line: 579, column: 20, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6390, file: !895, line: 579, column: 13)
!6402 = !DILocation(line: 579, column: 13, scope: !6390)
!6403 = !DILocation(line: 580, column: 13, scope: !6404)
!6404 = distinct !DILexicalBlock(scope: !6401, file: !895, line: 579, column: 32)
!6405 = !DILocation(line: 581, column: 13, scope: !6404)
!6406 = !DILocation(line: 584, column: 18, scope: !6390)
!6407 = !DILocation(line: 585, column: 20, scope: !6408)
!6408 = distinct !DILexicalBlock(scope: !6390, file: !895, line: 585, column: 13)
!6409 = !DILocation(line: 585, column: 13, scope: !6390)
!6410 = !DILocation(line: 586, column: 13, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6408, file: !895, line: 585, column: 32)
!6412 = !DILocation(line: 587, column: 13, scope: !6411)
!6413 = !DILocation(line: 590, column: 18, scope: !6390)
!6414 = !DILocation(line: 591, column: 20, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6390, file: !895, line: 591, column: 13)
!6416 = !DILocation(line: 591, column: 13, scope: !6390)
!6417 = !DILocation(line: 592, column: 13, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6415, file: !895, line: 591, column: 32)
!6419 = !DILocation(line: 593, column: 13, scope: !6418)
!6420 = !DILocation(line: 596, column: 18, scope: !6390)
!6421 = !DILocation(line: 597, column: 20, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6390, file: !895, line: 597, column: 13)
!6423 = !DILocation(line: 597, column: 13, scope: !6390)
!6424 = !DILocation(line: 598, column: 13, scope: !6425)
!6425 = distinct !DILexicalBlock(scope: !6422, file: !895, line: 597, column: 32)
!6426 = !DILocation(line: 599, column: 13, scope: !6425)
!6427 = !DILocation(line: 602, column: 18, scope: !6390)
!6428 = !DILocation(line: 603, column: 20, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6390, file: !895, line: 603, column: 13)
!6430 = !DILocation(line: 603, column: 13, scope: !6390)
!6431 = !DILocation(line: 604, column: 13, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6429, file: !895, line: 603, column: 32)
!6433 = !DILocation(line: 605, column: 13, scope: !6432)
!6434 = !DILocation(line: 608, column: 30, scope: !6390)
!6435 = !DILocation(line: 608, column: 9, scope: !6390)
!6436 = !DILocation(line: 609, column: 5, scope: !6390)
!6437 = !DILocation(line: 610, column: 5, scope: !6363)
!6438 = !DILocation(line: 611, column: 38, scope: !6363)
!6439 = !DILocation(line: 611, column: 20, scope: !6363)
!6440 = !DILocation(line: 612, column: 22, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6363, file: !895, line: 612, column: 9)
!6442 = !DILocation(line: 612, column: 9, scope: !6363)
!6443 = !DILocation(line: 613, column: 9, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6441, file: !895, line: 612, column: 46)
!6445 = !DILocation(line: 614, column: 9, scope: !6444)
!6446 = !DILocation(line: 618, column: 32, scope: !6363)
!6447 = !DILocation(line: 618, column: 37, scope: !6363)
!6448 = !DILocation(line: 619, column: 32, scope: !6363)
!6449 = !DILocation(line: 619, column: 36, scope: !6363)
!6450 = !DILocation(line: 635, column: 32, scope: !6363)
!6451 = !DILocation(line: 639, column: 5, scope: !6363)
!6452 = !DILocation(line: 640, column: 1, scope: !6363)
!6453 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !895, file: !895, line: 642, type: !6454, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6456)
!6454 = !DISubroutineType(types: !6455)
!6455 = !{null, !969, !1710}
!6456 = !{!6457, !6458, !6459}
!6457 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6453, file: !895, line: 642, type: !969)
!6458 = !DILocalVariable(name: "byte", arg: 2, scope: !6453, file: !895, line: 642, type: !1710)
!6459 = !DILocalVariable(name: "uartx", scope: !6453, file: !895, line: 644, type: !6004)
!6460 = !DILocation(line: 0, scope: !6453)
!6461 = !DILocation(line: 646, column: 10, scope: !6462)
!6462 = distinct !DILexicalBlock(scope: !6453, file: !895, line: 646, column: 9)
!6463 = !DILocation(line: 646, column: 9, scope: !6453)
!6464 = !DILocation(line: 650, column: 9, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6453, file: !895, line: 650, column: 9)
!6466 = !DILocation(line: 650, column: 36, scope: !6465)
!6467 = !DILocation(line: 650, column: 9, scope: !6453)
!6468 = !DILocation(line: 654, column: 13, scope: !6453)
!6469 = !DILocation(line: 655, column: 5, scope: !6453)
!6470 = !DILocation(line: 656, column: 1, scope: !6453)
!6471 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !895, file: !895, line: 658, type: !6472, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6476)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!61, !969, !6474, !61}
!6474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6475, size: 32)
!6475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !381)
!6476 = !{!6477, !6478, !6479, !6480}
!6477 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6471, file: !895, line: 658, type: !969)
!6478 = !DILocalVariable(name: "data", arg: 2, scope: !6471, file: !895, line: 658, type: !6474)
!6479 = !DILocalVariable(name: "size", arg: 3, scope: !6471, file: !895, line: 658, type: !61)
!6480 = !DILocalVariable(name: "i", scope: !6471, file: !895, line: 660, type: !61)
!6481 = !DILocation(line: 0, scope: !6471)
!6482 = !DILocation(line: 662, column: 11, scope: !6483)
!6483 = distinct !DILexicalBlock(scope: !6471, file: !895, line: 662, column: 9)
!6484 = !DILocation(line: 662, column: 42, scope: !6483)
!6485 = !DILocation(line: 666, column: 9, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6471, file: !895, line: 666, column: 9)
!6487 = !DILocation(line: 666, column: 36, scope: !6486)
!6488 = !DILocation(line: 666, column: 9, scope: !6471)
!6489 = !DILocation(line: 671, column: 38, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6491, file: !895, line: 670, column: 32)
!6491 = distinct !DILexicalBlock(scope: !6492, file: !895, line: 670, column: 5)
!6492 = distinct !DILexicalBlock(scope: !6471, file: !895, line: 670, column: 5)
!6493 = !DILocation(line: 671, column: 9, scope: !6490)
!6494 = !DILocation(line: 672, column: 13, scope: !6490)
!6495 = !DILocation(line: 670, column: 28, scope: !6491)
!6496 = !DILocation(line: 670, column: 19, scope: !6491)
!6497 = !DILocation(line: 670, column: 5, scope: !6492)
!6498 = distinct !{!6498, !6497, !6499}
!6499 = !DILocation(line: 673, column: 5, scope: !6492)
!6500 = !DILocation(line: 676, column: 1, scope: !6471)
!6501 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !895, file: !895, line: 678, type: !6472, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6502)
!6502 = !{!6503, !6504, !6505, !6506, !6507, !6508, !6509, !6510}
!6503 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6501, file: !895, line: 678, type: !969)
!6504 = !DILocalVariable(name: "data", arg: 2, scope: !6501, file: !895, line: 678, type: !6474)
!6505 = !DILocalVariable(name: "size", arg: 3, scope: !6501, file: !895, line: 678, type: !61)
!6506 = !DILocalVariable(name: "channel", scope: !6501, file: !895, line: 680, type: !5036)
!6507 = !DILocalVariable(name: "i", scope: !6501, file: !895, line: 681, type: !61)
!6508 = !DILocalVariable(name: "real_count", scope: !6501, file: !895, line: 681, type: !61)
!6509 = !DILocalVariable(name: "avail_space", scope: !6501, file: !895, line: 681, type: !61)
!6510 = !DILocalVariable(name: "status", scope: !6501, file: !895, line: 682, type: !5035)
!6511 = !DILocation(line: 0, scope: !6501)
!6512 = !DILocation(line: 681, column: 5, scope: !6501)
!6513 = !DILocation(line: 687, column: 11, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6501, file: !895, line: 687, column: 9)
!6515 = !DILocation(line: 687, column: 42, scope: !6514)
!6516 = !DILocation(line: 691, column: 9, scope: !6517)
!6517 = distinct !DILexicalBlock(scope: !6501, file: !895, line: 691, column: 9)
!6518 = !DILocation(line: 691, column: 36, scope: !6517)
!6519 = !DILocation(line: 691, column: 9, scope: !6501)
!6520 = !DILocation(line: 704, column: 15, scope: !6501)
!6521 = !DILocation(line: 706, column: 14, scope: !6501)
!6522 = !DILocation(line: 707, column: 16, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !6501, file: !895, line: 707, column: 9)
!6524 = !DILocation(line: 707, column: 9, scope: !6501)
!6525 = !DILocation(line: 708, column: 9, scope: !6526)
!6526 = distinct !DILexicalBlock(scope: !6523, file: !895, line: 707, column: 28)
!6527 = !DILocation(line: 712, column: 9, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6501, file: !895, line: 712, column: 9)
!6529 = !DILocation(line: 712, column: 21, scope: !6528)
!6530 = !DILocation(line: 717, column: 19, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !6532, file: !895, line: 717, column: 5)
!6532 = distinct !DILexicalBlock(scope: !6501, file: !895, line: 717, column: 5)
!6533 = !DILocation(line: 717, column: 5, scope: !6532)
!6534 = distinct !{!6534, !6533, !6535}
!6535 = !DILocation(line: 723, column: 5, scope: !6532)
!6536 = !DILocation(line: 718, column: 42, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6531, file: !895, line: 717, column: 38)
!6538 = !DILocation(line: 718, column: 18, scope: !6537)
!6539 = !DILocation(line: 719, column: 20, scope: !6540)
!6540 = distinct !DILexicalBlock(scope: !6537, file: !895, line: 719, column: 13)
!6541 = !DILocation(line: 717, column: 34, scope: !6531)
!6542 = !DILocation(line: 719, column: 13, scope: !6537)
!6543 = !DILocation(line: 720, column: 13, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6540, file: !895, line: 719, column: 32)
!6545 = !DILocation(line: 728, column: 23, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6501, file: !895, line: 728, column: 9)
!6547 = !DILocation(line: 728, column: 20, scope: !6546)
!6548 = !DILocation(line: 728, column: 9, scope: !6501)
!6549 = !DILocation(line: 729, column: 18, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6546, file: !895, line: 728, column: 36)
!6551 = !DILocation(line: 730, column: 20, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6550, file: !895, line: 730, column: 13)
!6553 = !DILocation(line: 730, column: 13, scope: !6550)
!6554 = !DILocation(line: 731, column: 13, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6552, file: !895, line: 730, column: 32)
!6556 = !DILocation(line: 737, column: 1, scope: !6501)
!6557 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !895, file: !895, line: 739, type: !6558, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6560)
!6558 = !DISubroutineType(types: !6559)
!6559 = !{!1710, !969}
!6560 = !{!6561, !6562, !6563}
!6561 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6557, file: !895, line: 739, type: !969)
!6562 = !DILocalVariable(name: "data", scope: !6557, file: !895, line: 741, type: !1710)
!6563 = !DILocalVariable(name: "uartx", scope: !6557, file: !895, line: 742, type: !6004)
!6564 = !DILocation(line: 0, scope: !6557)
!6565 = !DILocation(line: 744, column: 10, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6557, file: !895, line: 744, column: 9)
!6567 = !DILocation(line: 744, column: 9, scope: !6557)
!6568 = !DILocation(line: 748, column: 9, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6557, file: !895, line: 748, column: 9)
!6570 = !DILocation(line: 748, column: 36, scope: !6569)
!6571 = !DILocation(line: 748, column: 9, scope: !6557)
!6572 = !DILocation(line: 752, column: 13, scope: !6557)
!6573 = !DILocation(line: 754, column: 12, scope: !6557)
!6574 = !DILocation(line: 756, column: 5, scope: !6557)
!6575 = !DILocation(line: 757, column: 1, scope: !6557)
!6576 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !895, file: !895, line: 759, type: !6577, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6579)
!6577 = !DISubroutineType(types: !6578)
!6578 = !{!61, !969}
!6579 = !{!6580, !6581, !6582}
!6580 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6576, file: !895, line: 759, type: !969)
!6581 = !DILocalVariable(name: "data", scope: !6576, file: !895, line: 761, type: !61)
!6582 = !DILocalVariable(name: "uartx", scope: !6576, file: !895, line: 762, type: !6004)
!6583 = !DILocation(line: 0, scope: !6576)
!6584 = !DILocation(line: 764, column: 10, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6576, file: !895, line: 764, column: 9)
!6586 = !DILocation(line: 764, column: 9, scope: !6576)
!6587 = !DILocation(line: 768, column: 9, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6576, file: !895, line: 768, column: 9)
!6589 = !DILocation(line: 768, column: 36, scope: !6588)
!6590 = !DILocation(line: 768, column: 9, scope: !6576)
!6591 = !DILocation(line: 772, column: 13, scope: !6576)
!6592 = !DILocation(line: 774, column: 12, scope: !6576)
!6593 = !DILocation(line: 776, column: 5, scope: !6576)
!6594 = !DILocation(line: 777, column: 1, scope: !6576)
!6595 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !895, file: !895, line: 779, type: !6596, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6598)
!6596 = !DISubroutineType(types: !6597)
!6597 = !{!61, !969, !996, !61}
!6598 = !{!6599, !6600, !6601, !6602, !6603}
!6599 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6595, file: !895, line: 779, type: !969)
!6600 = !DILocalVariable(name: "buffer", arg: 2, scope: !6595, file: !895, line: 779, type: !996)
!6601 = !DILocalVariable(name: "size", arg: 3, scope: !6595, file: !895, line: 779, type: !61)
!6602 = !DILocalVariable(name: "i", scope: !6595, file: !895, line: 781, type: !61)
!6603 = !DILocalVariable(name: "pbuf", scope: !6595, file: !895, line: 782, type: !996)
!6604 = !DILocation(line: 0, scope: !6595)
!6605 = !DILocation(line: 784, column: 11, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6595, file: !895, line: 784, column: 9)
!6607 = !DILocation(line: 784, column: 42, scope: !6606)
!6608 = !DILocation(line: 789, column: 9, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6595, file: !895, line: 789, column: 9)
!6610 = !DILocation(line: 789, column: 36, scope: !6609)
!6611 = !DILocation(line: 789, column: 9, scope: !6595)
!6612 = !DILocation(line: 794, column: 19, scope: !6613)
!6613 = distinct !DILexicalBlock(scope: !6614, file: !895, line: 793, column: 32)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !895, line: 793, column: 5)
!6615 = distinct !DILexicalBlock(scope: !6595, file: !895, line: 793, column: 5)
!6616 = !DILocation(line: 794, column: 9, scope: !6613)
!6617 = !DILocation(line: 794, column: 17, scope: !6613)
!6618 = !DILocation(line: 793, column: 28, scope: !6614)
!6619 = !DILocation(line: 793, column: 19, scope: !6614)
!6620 = !DILocation(line: 793, column: 5, scope: !6615)
!6621 = distinct !{!6621, !6620, !6622}
!6622 = !DILocation(line: 795, column: 5, scope: !6615)
!6623 = !DILocation(line: 798, column: 1, scope: !6595)
!6624 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !895, file: !895, line: 800, type: !6596, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6625)
!6625 = !{!6626, !6627, !6628, !6629, !6630, !6631, !6632, !6633}
!6626 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6624, file: !895, line: 800, type: !969)
!6627 = !DILocalVariable(name: "buffer", arg: 2, scope: !6624, file: !895, line: 800, type: !996)
!6628 = !DILocalVariable(name: "size", arg: 3, scope: !6624, file: !895, line: 800, type: !61)
!6629 = !DILocalVariable(name: "channel", scope: !6624, file: !895, line: 802, type: !5036)
!6630 = !DILocalVariable(name: "receive_count", scope: !6624, file: !895, line: 803, type: !61)
!6631 = !DILocalVariable(name: "avail_count", scope: !6624, file: !895, line: 803, type: !61)
!6632 = !DILocalVariable(name: "index", scope: !6624, file: !895, line: 804, type: !61)
!6633 = !DILocalVariable(name: "status", scope: !6624, file: !895, line: 805, type: !5035)
!6634 = !DILocation(line: 0, scope: !6624)
!6635 = !DILocation(line: 803, column: 5, scope: !6624)
!6636 = !DILocation(line: 807, column: 11, scope: !6637)
!6637 = distinct !DILexicalBlock(scope: !6624, file: !895, line: 807, column: 9)
!6638 = !DILocation(line: 807, column: 42, scope: !6637)
!6639 = !DILocation(line: 813, column: 9, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6624, file: !895, line: 813, column: 9)
!6641 = !DILocation(line: 813, column: 36, scope: !6640)
!6642 = !DILocation(line: 813, column: 9, scope: !6624)
!6643 = !DILocation(line: 817, column: 15, scope: !6624)
!6644 = !DILocation(line: 819, column: 14, scope: !6624)
!6645 = !DILocation(line: 820, column: 16, scope: !6646)
!6646 = distinct !DILexicalBlock(scope: !6624, file: !895, line: 820, column: 9)
!6647 = !DILocation(line: 820, column: 9, scope: !6624)
!6648 = !DILocation(line: 821, column: 9, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6646, file: !895, line: 820, column: 28)
!6650 = !DILocation(line: 825, column: 9, scope: !6651)
!6651 = distinct !DILexicalBlock(scope: !6624, file: !895, line: 825, column: 9)
!6652 = !DILocation(line: 825, column: 21, scope: !6651)
!6653 = !DILocation(line: 830, column: 27, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6655, file: !895, line: 830, column: 5)
!6655 = distinct !DILexicalBlock(scope: !6624, file: !895, line: 830, column: 5)
!6656 = !DILocation(line: 830, column: 5, scope: !6655)
!6657 = distinct !{!6657, !6656, !6658}
!6658 = !DILocation(line: 836, column: 5, scope: !6655)
!6659 = !DILocation(line: 831, column: 42, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6654, file: !895, line: 830, column: 53)
!6661 = !DILocation(line: 831, column: 18, scope: !6660)
!6662 = !DILocation(line: 832, column: 20, scope: !6663)
!6663 = distinct !DILexicalBlock(scope: !6660, file: !895, line: 832, column: 13)
!6664 = !DILocation(line: 830, column: 49, scope: !6654)
!6665 = !DILocation(line: 832, column: 13, scope: !6660)
!6666 = !DILocation(line: 833, column: 13, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6663, file: !895, line: 832, column: 32)
!6668 = !DILocation(line: 841, column: 26, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6624, file: !895, line: 841, column: 9)
!6670 = !DILocation(line: 841, column: 23, scope: !6669)
!6671 = !DILocation(line: 841, column: 9, scope: !6624)
!6672 = !DILocation(line: 842, column: 18, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6669, file: !895, line: 841, column: 39)
!6674 = !DILocation(line: 843, column: 20, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6673, file: !895, line: 843, column: 13)
!6676 = !DILocation(line: 843, column: 13, scope: !6673)
!6677 = !DILocation(line: 844, column: 13, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6675, file: !895, line: 843, column: 32)
!6679 = !DILocation(line: 850, column: 1, scope: !6624)
!6680 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !895, file: !895, line: 891, type: !6681, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6683)
!6681 = !DISubroutineType(types: !6682)
!6682 = !{!6196, !969, !978, !88}
!6683 = !{!6684, !6685, !6686, !6687, !6688, !6689, !6690, !6691}
!6684 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6680, file: !895, line: 891, type: !969)
!6685 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6680, file: !895, line: 892, type: !978)
!6686 = !DILocalVariable(name: "user_data", arg: 3, scope: !6680, file: !895, line: 893, type: !88)
!6687 = !DILocalVariable(name: "tx_dma_channel", scope: !6680, file: !895, line: 895, type: !5036)
!6688 = !DILocalVariable(name: "rx_dma_channel", scope: !6680, file: !895, line: 895, type: !5036)
!6689 = !DILocalVariable(name: "irq_status", scope: !6680, file: !895, line: 896, type: !61)
!6690 = !DILocalVariable(name: "status", scope: !6680, file: !895, line: 897, type: !5035)
!6691 = !DILocalVariable(name: "nvic_status", scope: !6680, file: !895, line: 898, type: !1104)
!6692 = !DILocation(line: 0, scope: !6680)
!6693 = !DILocation(line: 900, column: 11, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6680, file: !895, line: 900, column: 9)
!6695 = !DILocation(line: 900, column: 42, scope: !6694)
!6696 = !DILocation(line: 905, column: 18, scope: !6680)
!6697 = !DILocation(line: 906, column: 9, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6680, file: !895, line: 906, column: 9)
!6699 = !DILocation(line: 906, column: 36, scope: !6698)
!6700 = !DILocation(line: 906, column: 9, scope: !6680)
!6701 = !DILocation(line: 911, column: 22, scope: !6680)
!6702 = !DILocation(line: 912, column: 22, scope: !6680)
!6703 = !DILocation(line: 914, column: 32, scope: !6680)
!6704 = !DILocation(line: 914, column: 37, scope: !6680)
!6705 = !DILocation(line: 915, column: 32, scope: !6680)
!6706 = !DILocation(line: 915, column: 36, scope: !6680)
!6707 = !DILocation(line: 917, column: 91, scope: !6680)
!6708 = !DILocation(line: 917, column: 56, scope: !6680)
!6709 = !DILocation(line: 917, column: 5, scope: !6680)
!6710 = !DILocation(line: 918, column: 80, scope: !6680)
!6711 = !DILocation(line: 918, column: 14, scope: !6680)
!6712 = !DILocation(line: 919, column: 16, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6680, file: !895, line: 919, column: 9)
!6714 = !DILocation(line: 919, column: 9, scope: !6680)
!6715 = !DILocation(line: 920, column: 9, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6713, file: !895, line: 919, column: 28)
!6717 = !DILocation(line: 921, column: 9, scope: !6716)
!6718 = !DILocation(line: 924, column: 97, scope: !6680)
!6719 = !DILocation(line: 924, column: 56, scope: !6680)
!6720 = !DILocation(line: 924, column: 5, scope: !6680)
!6721 = !DILocation(line: 925, column: 80, scope: !6680)
!6722 = !DILocation(line: 925, column: 14, scope: !6680)
!6723 = !DILocation(line: 926, column: 16, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6680, file: !895, line: 926, column: 9)
!6725 = !DILocation(line: 926, column: 9, scope: !6680)
!6726 = !DILocation(line: 927, column: 9, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6724, file: !895, line: 926, column: 28)
!6728 = !DILocation(line: 928, column: 9, scope: !6727)
!6729 = !DILocation(line: 931, column: 49, scope: !6680)
!6730 = !DILocation(line: 931, column: 19, scope: !6680)
!6731 = !DILocation(line: 932, column: 21, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6680, file: !895, line: 932, column: 9)
!6733 = !DILocation(line: 932, column: 9, scope: !6680)
!6734 = !DILocation(line: 933, column: 9, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6732, file: !895, line: 932, column: 44)
!6736 = !DILocation(line: 934, column: 9, scope: !6735)
!6737 = !DILocation(line: 938, column: 5, scope: !6680)
!6738 = !DILocation(line: 940, column: 32, scope: !6680)
!6739 = !DILocation(line: 944, column: 5, scope: !6680)
!6740 = !DILocation(line: 945, column: 1, scope: !6680)
!6741 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !895, file: !895, line: 303, type: !571, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6742)
!6742 = !{!6743, !6744, !6745}
!6743 = !DILocalVariable(name: "event", arg: 1, scope: !6741, file: !895, line: 303, type: !573)
!6744 = !DILocalVariable(name: "user_data", arg: 2, scope: !6741, file: !895, line: 303, type: !88)
!6745 = !DILocalVariable(name: "callback_data", scope: !6741, file: !895, line: 305, type: !962)
!6746 = !DILocation(line: 0, scope: !6741)
!6747 = !DILocation(line: 307, column: 24, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6741, file: !895, line: 307, column: 9)
!6749 = !DILocation(line: 0, scope: !6748)
!6750 = !DILocation(line: 307, column: 9, scope: !6741)
!6751 = !DILocation(line: 308, column: 9, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6748, file: !895, line: 307, column: 39)
!6753 = !DILocation(line: 309, column: 5, scope: !6752)
!6754 = !DILocation(line: 310, column: 9, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6748, file: !895, line: 309, column: 12)
!6756 = !DILocation(line: 312, column: 1, scope: !6741)
!6757 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !895, file: !895, line: 852, type: !6168, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6758)
!6758 = !{!6759, !6760, !6761, !6762, !6763}
!6759 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6757, file: !895, line: 852, type: !969)
!6760 = !DILocalVariable(name: "uartx", scope: !6757, file: !895, line: 854, type: !6004)
!6761 = !DILocalVariable(name: "tx_dma_channel", scope: !6757, file: !895, line: 855, type: !5036)
!6762 = !DILocalVariable(name: "rx_dma_channel", scope: !6757, file: !895, line: 855, type: !5036)
!6763 = !DILocalVariable(name: "status", scope: !6757, file: !895, line: 856, type: !5035)
!6764 = !DILocation(line: 0, scope: !6757)
!6765 = !DILocation(line: 858, column: 13, scope: !6757)
!6766 = !DILocation(line: 859, column: 22, scope: !6757)
!6767 = !DILocation(line: 860, column: 22, scope: !6757)
!6768 = !DILocation(line: 866, column: 5, scope: !6757)
!6769 = !DILocation(line: 867, column: 25, scope: !6757)
!6770 = !DILocation(line: 867, column: 5, scope: !6757)
!6771 = !DILocation(line: 868, column: 14, scope: !6757)
!6772 = !DILocation(line: 869, column: 16, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6757, file: !895, line: 869, column: 9)
!6774 = !DILocation(line: 869, column: 9, scope: !6757)
!6775 = !DILocation(line: 870, column: 9, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !895, line: 869, column: 28)
!6777 = !DILocation(line: 873, column: 14, scope: !6757)
!6778 = !DILocation(line: 874, column: 16, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6757, file: !895, line: 874, column: 9)
!6780 = !DILocation(line: 874, column: 9, scope: !6757)
!6781 = !DILocation(line: 875, column: 9, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6779, file: !895, line: 874, column: 28)
!6783 = !DILocation(line: 878, column: 14, scope: !6757)
!6784 = !DILocation(line: 879, column: 16, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6757, file: !895, line: 879, column: 9)
!6786 = !DILocation(line: 879, column: 9, scope: !6757)
!6787 = !DILocation(line: 880, column: 9, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6785, file: !895, line: 879, column: 28)
!6789 = !DILocation(line: 883, column: 14, scope: !6757)
!6790 = !DILocation(line: 884, column: 16, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6757, file: !895, line: 884, column: 9)
!6792 = !DILocation(line: 884, column: 9, scope: !6757)
!6793 = !DILocation(line: 885, column: 9, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6791, file: !895, line: 884, column: 28)
!6795 = !DILocation(line: 888, column: 5, scope: !6757)
!6796 = !DILocation(line: 889, column: 1, scope: !6757)
!6797 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !895, file: !895, line: 947, type: !6577, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6798)
!6798 = !{!6799, !6800, !6801, !6802}
!6799 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6797, file: !895, line: 947, type: !969)
!6800 = !DILocalVariable(name: "channel", scope: !6797, file: !895, line: 949, type: !5036)
!6801 = !DILocalVariable(name: "roomleft", scope: !6797, file: !895, line: 950, type: !61)
!6802 = !DILocalVariable(name: "status", scope: !6797, file: !895, line: 951, type: !5035)
!6803 = !DILocation(line: 0, scope: !6797)
!6804 = !DILocation(line: 950, column: 5, scope: !6797)
!6805 = !DILocation(line: 953, column: 10, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6797, file: !895, line: 953, column: 9)
!6807 = !DILocation(line: 953, column: 9, scope: !6797)
!6808 = !DILocation(line: 957, column: 9, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6797, file: !895, line: 957, column: 9)
!6810 = !DILocation(line: 957, column: 36, scope: !6809)
!6811 = !DILocation(line: 957, column: 9, scope: !6797)
!6812 = !DILocation(line: 961, column: 15, scope: !6797)
!6813 = !DILocation(line: 962, column: 14, scope: !6797)
!6814 = !DILocation(line: 963, column: 16, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6797, file: !895, line: 963, column: 9)
!6816 = !DILocation(line: 963, column: 9, scope: !6797)
!6817 = !DILocation(line: 964, column: 9, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6815, file: !895, line: 963, column: 28)
!6819 = !DILocation(line: 968, column: 12, scope: !6797)
!6820 = !DILocation(line: 968, column: 5, scope: !6797)
!6821 = !DILocation(line: 969, column: 1, scope: !6797)
!6822 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !895, file: !895, line: 971, type: !6577, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6823)
!6823 = !{!6824, !6825, !6826, !6827}
!6824 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6822, file: !895, line: 971, type: !969)
!6825 = !DILocalVariable(name: "channel", scope: !6822, file: !895, line: 973, type: !5036)
!6826 = !DILocalVariable(name: "avail", scope: !6822, file: !895, line: 974, type: !61)
!6827 = !DILocalVariable(name: "status", scope: !6822, file: !895, line: 975, type: !5035)
!6828 = !DILocation(line: 0, scope: !6822)
!6829 = !DILocation(line: 974, column: 5, scope: !6822)
!6830 = !DILocation(line: 977, column: 10, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6822, file: !895, line: 977, column: 9)
!6832 = !DILocation(line: 977, column: 9, scope: !6822)
!6833 = !DILocation(line: 981, column: 9, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6822, file: !895, line: 981, column: 9)
!6835 = !DILocation(line: 981, column: 36, scope: !6834)
!6836 = !DILocation(line: 981, column: 9, scope: !6822)
!6837 = !DILocation(line: 985, column: 15, scope: !6822)
!6838 = !DILocation(line: 986, column: 14, scope: !6822)
!6839 = !DILocation(line: 987, column: 16, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6822, file: !895, line: 987, column: 9)
!6841 = !DILocation(line: 987, column: 9, scope: !6822)
!6842 = !DILocation(line: 988, column: 9, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6840, file: !895, line: 987, column: 28)
!6844 = !DILocation(line: 992, column: 12, scope: !6822)
!6845 = !DILocation(line: 992, column: 5, scope: !6822)
!6846 = !DILocation(line: 993, column: 1, scope: !6822)
!6847 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !895, file: !895, line: 995, type: !6364, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6848)
!6848 = !{!6849, !6850}
!6849 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6847, file: !895, line: 995, type: !969)
!6850 = !DILocalVariable(name: "uartx", scope: !6847, file: !895, line: 997, type: !6004)
!6851 = !DILocation(line: 0, scope: !6847)
!6852 = !DILocation(line: 999, column: 10, scope: !6853)
!6853 = distinct !DILexicalBlock(scope: !6847, file: !895, line: 999, column: 9)
!6854 = !DILocation(line: 999, column: 9, scope: !6847)
!6855 = !DILocation(line: 1003, column: 9, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6847, file: !895, line: 1003, column: 9)
!6857 = !DILocation(line: 1003, column: 36, scope: !6856)
!6858 = !DILocation(line: 1003, column: 9, scope: !6847)
!6859 = !DILocation(line: 1007, column: 13, scope: !6847)
!6860 = !DILocation(line: 1009, column: 5, scope: !6847)
!6861 = !DILocation(line: 1015, column: 5, scope: !6847)
!6862 = !DILocation(line: 1016, column: 1, scope: !6847)
!6863 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !895, file: !895, line: 1018, type: !6864, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6866)
!6864 = !DISubroutineType(types: !6865)
!6865 = !{!6196, !969, !381, !381, !381}
!6866 = !{!6867, !6868, !6869, !6870, !6871}
!6867 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6863, file: !895, line: 1018, type: !969)
!6868 = !DILocalVariable(name: "xon", arg: 2, scope: !6863, file: !895, line: 1019, type: !381)
!6869 = !DILocalVariable(name: "xoff", arg: 3, scope: !6863, file: !895, line: 1020, type: !381)
!6870 = !DILocalVariable(name: "escape_character", arg: 4, scope: !6863, file: !895, line: 1021, type: !381)
!6871 = !DILocalVariable(name: "uartx", scope: !6863, file: !895, line: 1023, type: !6004)
!6872 = !DILocation(line: 0, scope: !6863)
!6873 = !DILocation(line: 1025, column: 10, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6863, file: !895, line: 1025, column: 9)
!6875 = !DILocation(line: 1025, column: 9, scope: !6863)
!6876 = !DILocation(line: 1029, column: 9, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6863, file: !895, line: 1029, column: 9)
!6878 = !DILocation(line: 1029, column: 36, scope: !6877)
!6879 = !DILocation(line: 1029, column: 9, scope: !6863)
!6880 = !DILocation(line: 1033, column: 13, scope: !6863)
!6881 = !DILocation(line: 1035, column: 5, scope: !6863)
!6882 = !DILocation(line: 1044, column: 5, scope: !6863)
!6883 = !DILocation(line: 1045, column: 1, scope: !6863)
!6884 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !895, file: !895, line: 1047, type: !6364, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6885)
!6885 = !{!6886, !6887}
!6886 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6884, file: !895, line: 1047, type: !969)
!6887 = !DILocalVariable(name: "uartx", scope: !6884, file: !895, line: 1049, type: !6004)
!6888 = !DILocation(line: 0, scope: !6884)
!6889 = !DILocation(line: 1051, column: 10, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6884, file: !895, line: 1051, column: 9)
!6891 = !DILocation(line: 1051, column: 9, scope: !6884)
!6892 = !DILocation(line: 1055, column: 9, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6884, file: !895, line: 1055, column: 9)
!6894 = !DILocation(line: 1055, column: 36, scope: !6893)
!6895 = !DILocation(line: 1055, column: 9, scope: !6884)
!6896 = !DILocation(line: 1059, column: 13, scope: !6884)
!6897 = !DILocation(line: 1061, column: 5, scope: !6884)
!6898 = !DILocation(line: 1067, column: 5, scope: !6884)
!6899 = !DILocation(line: 1068, column: 1, scope: !6884)
!6900 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !895, file: !895, line: 1071, type: !6901, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !894, retainedNodes: !6905)
!6901 = !DISubroutineType(types: !6902)
!6902 = !{!6196, !969, !6903}
!6903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6904, size: 32)
!6904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !992)
!6905 = !{!6906, !6907, !6908, !6909, !6915, !6916, !6917}
!6906 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6900, file: !895, line: 1071, type: !969)
!6907 = !DILocalVariable(name: "dma_config", arg: 2, scope: !6900, file: !895, line: 1071, type: !6903)
!6908 = !DILocalVariable(name: "irq_status", scope: !6900, file: !895, line: 1073, type: !61)
!6909 = !DILocalVariable(name: "internal_dma_config", scope: !6900, file: !895, line: 1074, type: !6910)
!6910 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !360, line: 283, baseType: !6911)
!6911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !360, line: 280, size: 64, elements: !6912)
!6912 = !{!6913, !6914}
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !6911, file: !360, line: 281, baseType: !61, size: 32)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6911, file: !360, line: 282, baseType: !61, size: 32, offset: 32)
!6915 = !DILocalVariable(name: "tx_dma_channel", scope: !6900, file: !895, line: 1075, type: !5036)
!6916 = !DILocalVariable(name: "rx_dma_channel", scope: !6900, file: !895, line: 1075, type: !5036)
!6917 = !DILocalVariable(name: "status", scope: !6900, file: !895, line: 1076, type: !5035)
!6918 = !DILocation(line: 0, scope: !6900)
!6919 = !DILocation(line: 1074, column: 5, scope: !6900)
!6920 = !DILocation(line: 1074, column: 19, scope: !6900)
!6921 = !DILocation(line: 1078, column: 10, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1078, column: 9)
!6923 = !DILocation(line: 1078, column: 9, scope: !6900)
!6924 = !DILocation(line: 1081, column: 22, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1081, column: 9)
!6926 = !DILocation(line: 1081, column: 40, scope: !6925)
!6927 = !DILocation(line: 1081, column: 49, scope: !6925)
!6928 = !DILocation(line: 1082, column: 22, scope: !6925)
!6929 = !DILocation(line: 1082, column: 43, scope: !6925)
!6930 = !DILocation(line: 1081, column: 9, scope: !6900)
!6931 = !DILocation(line: 1085, column: 22, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1085, column: 9)
!6933 = !DILocation(line: 1085, column: 45, scope: !6932)
!6934 = !DILocation(line: 1085, column: 76, scope: !6932)
!6935 = !DILocation(line: 1086, column: 22, scope: !6932)
!6936 = !DILocation(line: 1086, column: 48, scope: !6932)
!6937 = !DILocation(line: 1086, column: 79, scope: !6932)
!6938 = !DILocation(line: 1090, column: 22, scope: !6939)
!6939 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1090, column: 9)
!6940 = !DILocation(line: 1090, column: 48, scope: !6939)
!6941 = !DILocation(line: 1090, column: 79, scope: !6939)
!6942 = !DILocation(line: 1091, column: 22, scope: !6939)
!6943 = !DILocation(line: 1091, column: 51, scope: !6939)
!6944 = !DILocation(line: 1091, column: 82, scope: !6939)
!6945 = !DILocation(line: 1092, column: 22, scope: !6939)
!6946 = !DILocation(line: 1092, column: 47, scope: !6939)
!6947 = !DILocation(line: 1092, column: 78, scope: !6939)
!6948 = !DILocation(line: 1098, column: 9, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1098, column: 9)
!6950 = !DILocation(line: 1098, column: 36, scope: !6949)
!6951 = !DILocation(line: 1098, column: 9, scope: !6900)
!6952 = !DILocation(line: 1102, column: 22, scope: !6900)
!6953 = !DILocation(line: 1103, column: 22, scope: !6900)
!6954 = !DILocation(line: 1105, column: 14, scope: !6900)
!6955 = !DILocation(line: 1106, column: 16, scope: !6956)
!6956 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1106, column: 9)
!6957 = !DILocation(line: 1106, column: 9, scope: !6900)
!6958 = !DILocation(line: 1107, column: 9, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6956, file: !895, line: 1106, column: 28)
!6960 = !DILocation(line: 1110, column: 62, scope: !6900)
!6961 = !DILocation(line: 1110, column: 40, scope: !6900)
!6962 = !DILocation(line: 1110, column: 25, scope: !6900)
!6963 = !DILocation(line: 1110, column: 38, scope: !6900)
!6964 = !DILocation(line: 1111, column: 44, scope: !6900)
!6965 = !DILocation(line: 1111, column: 25, scope: !6900)
!6966 = !DILocation(line: 1111, column: 30, scope: !6900)
!6967 = !DILocation(line: 1112, column: 14, scope: !6900)
!6968 = !DILocation(line: 1113, column: 16, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1113, column: 9)
!6970 = !DILocation(line: 1113, column: 9, scope: !6900)
!6971 = !DILocation(line: 1114, column: 9, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6969, file: !895, line: 1113, column: 28)
!6973 = !DILocation(line: 1117, column: 61, scope: !6900)
!6974 = !DILocation(line: 1117, column: 14, scope: !6900)
!6975 = !DILocation(line: 1118, column: 16, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1118, column: 9)
!6977 = !DILocation(line: 1118, column: 9, scope: !6900)
!6978 = !DILocation(line: 1119, column: 9, scope: !6979)
!6979 = distinct !DILexicalBlock(scope: !6976, file: !895, line: 1118, column: 28)
!6980 = !DILocation(line: 1123, column: 14, scope: !6900)
!6981 = !DILocation(line: 1124, column: 16, scope: !6982)
!6982 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1124, column: 9)
!6983 = !DILocation(line: 1124, column: 9, scope: !6900)
!6984 = !DILocation(line: 1125, column: 9, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6982, file: !895, line: 1124, column: 28)
!6986 = !DILocation(line: 1128, column: 62, scope: !6900)
!6987 = !DILocation(line: 1128, column: 40, scope: !6900)
!6988 = !DILocation(line: 1128, column: 38, scope: !6900)
!6989 = !DILocation(line: 1129, column: 44, scope: !6900)
!6990 = !DILocation(line: 1129, column: 30, scope: !6900)
!6991 = !DILocation(line: 1130, column: 14, scope: !6900)
!6992 = !DILocation(line: 1131, column: 16, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1131, column: 9)
!6994 = !DILocation(line: 1131, column: 9, scope: !6900)
!6995 = !DILocation(line: 1132, column: 9, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6993, file: !895, line: 1131, column: 28)
!6997 = !DILocation(line: 1135, column: 61, scope: !6900)
!6998 = !DILocation(line: 1135, column: 14, scope: !6900)
!6999 = !DILocation(line: 1136, column: 16, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1136, column: 9)
!7001 = !DILocation(line: 1136, column: 9, scope: !6900)
!7002 = !DILocation(line: 1137, column: 9, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7000, file: !895, line: 1136, column: 28)
!7004 = !DILocation(line: 1140, column: 64, scope: !6900)
!7005 = !DILocation(line: 1140, column: 14, scope: !6900)
!7006 = !DILocation(line: 1141, column: 16, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6900, file: !895, line: 1141, column: 9)
!7008 = !DILocation(line: 1141, column: 9, scope: !6900)
!7009 = !DILocation(line: 1142, column: 9, scope: !7010)
!7010 = distinct !DILexicalBlock(scope: !7007, file: !895, line: 1141, column: 28)
!7011 = !DILocation(line: 1146, column: 18, scope: !6900)
!7012 = !DILocation(line: 1147, column: 66, scope: !6900)
!7013 = !DILocation(line: 1147, column: 34, scope: !6900)
!7014 = !DILocation(line: 1147, column: 52, scope: !6900)
!7015 = !DILocation(line: 1148, column: 71, scope: !6900)
!7016 = !DILocation(line: 1148, column: 34, scope: !6900)
!7017 = !DILocation(line: 1148, column: 57, scope: !6900)
!7018 = !DILocation(line: 1149, column: 74, scope: !6900)
!7019 = !DILocation(line: 1149, column: 34, scope: !6900)
!7020 = !DILocation(line: 1149, column: 60, scope: !6900)
!7021 = !DILocation(line: 1150, column: 73, scope: !6900)
!7022 = !DILocation(line: 1150, column: 34, scope: !6900)
!7023 = !DILocation(line: 1150, column: 59, scope: !6900)
!7024 = !DILocation(line: 1151, column: 69, scope: !6900)
!7025 = !DILocation(line: 1151, column: 34, scope: !6900)
!7026 = !DILocation(line: 1151, column: 55, scope: !6900)
!7027 = !DILocation(line: 1152, column: 74, scope: !6900)
!7028 = !DILocation(line: 1152, column: 34, scope: !6900)
!7029 = !DILocation(line: 1152, column: 60, scope: !6900)
!7030 = !DILocation(line: 1153, column: 77, scope: !6900)
!7031 = !DILocation(line: 1153, column: 34, scope: !6900)
!7032 = !DILocation(line: 1153, column: 63, scope: !6900)
!7033 = !DILocation(line: 1154, column: 5, scope: !6900)
!7034 = !DILocation(line: 1156, column: 5, scope: !6900)
!7035 = !DILocation(line: 1157, column: 1, scope: !6900)
!7036 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2759, file: !2759, line: 52, type: !7037, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7094)
!7037 = !DISubroutineType(types: !7038)
!7038 = !{null, !7039, !61}
!7039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7040, size: 32)
!7040 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !7041)
!7041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !7042)
!7042 = !{!7043, !7049, !7054, !7060, !7061, !7066, !7071, !7072, !7077, !7078, !7079, !7080, !7081, !7082, !7083, !7084, !7085, !7086, !7087, !7088, !7089, !7090, !7091, !7092, !7093}
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !7041, file: !56, line: 547, baseType: !7044, size: 32)
!7044 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7041, file: !56, line: 543, size: 32, elements: !7045)
!7045 = !{!7046, !7047, !7048}
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !7044, file: !56, line: 544, baseType: !272, size: 32)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !7044, file: !56, line: 545, baseType: !60, size: 32)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !7044, file: !56, line: 546, baseType: !60, size: 32)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !7041, file: !56, line: 551, baseType: !7050, size: 32, offset: 32)
!7050 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7041, file: !56, line: 548, size: 32, elements: !7051)
!7051 = !{!7052, !7053}
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !7050, file: !56, line: 549, baseType: !60, size: 32)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !7050, file: !56, line: 550, baseType: !60, size: 32)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !7041, file: !56, line: 556, baseType: !7055, size: 32, offset: 64)
!7055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7041, file: !56, line: 552, size: 32, elements: !7056)
!7056 = !{!7057, !7058, !7059}
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !7055, file: !56, line: 553, baseType: !272, size: 32)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !7055, file: !56, line: 554, baseType: !60, size: 32)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !7055, file: !56, line: 555, baseType: !60, size: 32)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !7041, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !7041, file: !56, line: 561, baseType: !7062, size: 32, offset: 128)
!7062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7041, file: !56, line: 558, size: 32, elements: !7063)
!7063 = !{!7064, !7065}
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !7062, file: !56, line: 559, baseType: !60, size: 32)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !7062, file: !56, line: 560, baseType: !60, size: 32)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !7041, file: !56, line: 565, baseType: !7067, size: 32, offset: 160)
!7067 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7041, file: !56, line: 562, size: 32, elements: !7068)
!7068 = !{!7069, !7070}
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !7067, file: !56, line: 563, baseType: !272, size: 32)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !7067, file: !56, line: 564, baseType: !60, size: 32)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !7041, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !7041, file: !56, line: 570, baseType: !7073, size: 32, offset: 224)
!7073 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7041, file: !56, line: 567, size: 32, elements: !7074)
!7074 = !{!7075, !7076}
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !7073, file: !56, line: 568, baseType: !60, size: 32)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !7073, file: !56, line: 569, baseType: !60, size: 32)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !7041, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !7041, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !7041, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !7041, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !7041, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !7041, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !7041, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !7041, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !7041, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !7041, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !7041, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !7041, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !7041, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !7041, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !7041, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !7041, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !7041, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!7094 = !{!7095, !7096, !7097, !7098, !7099, !7100, !7101, !7102, !7103, !7104, !7105, !7107}
!7095 = !DILocalVariable(name: "uartx", arg: 1, scope: !7036, file: !2759, line: 52, type: !7039)
!7096 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !7036, file: !2759, line: 52, type: !61)
!7097 = !DILocalVariable(name: "uart_clock", scope: !7036, file: !2759, line: 54, type: !61)
!7098 = !DILocalVariable(name: "integer", scope: !7036, file: !2759, line: 54, type: !61)
!7099 = !DILocalVariable(name: "remainder", scope: !7036, file: !2759, line: 54, type: !61)
!7100 = !DILocalVariable(name: "fraction", scope: !7036, file: !2759, line: 54, type: !61)
!7101 = !DILocalVariable(name: "dll_dlm", scope: !7036, file: !2759, line: 55, type: !61)
!7102 = !DILocalVariable(name: "sample_count", scope: !7036, file: !2759, line: 55, type: !61)
!7103 = !DILocalVariable(name: "sample_point", scope: !7036, file: !2759, line: 55, type: !61)
!7104 = !DILocalVariable(name: "temp_lcr", scope: !7036, file: !2759, line: 55, type: !61)
!7105 = !DILocalVariable(name: "fraction_L_mapping", scope: !7036, file: !2759, line: 56, type: !7106)
!7106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !517)
!7107 = !DILocalVariable(name: "fraction_M_mapping", scope: !7036, file: !2759, line: 57, type: !7106)
!7108 = !DILocation(line: 0, scope: !7036)
!7109 = !DILocation(line: 56, column: 14, scope: !7036)
!7110 = !DILocation(line: 57, column: 5, scope: !7036)
!7111 = !DILocation(line: 57, column: 14, scope: !7036)
!7112 = !DILocation(line: 59, column: 12, scope: !7036)
!7113 = !DILocation(line: 59, column: 23, scope: !7036)
!7114 = !DILocation(line: 60, column: 12, scope: !7036)
!7115 = !DILocation(line: 60, column: 22, scope: !7036)
!7116 = !DILocation(line: 61, column: 12, scope: !7036)
!7117 = !DILocation(line: 61, column: 22, scope: !7036)
!7118 = !DILocation(line: 63, column: 9, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7036, file: !2759, line: 63, column: 9)
!7120 = !DILocation(line: 63, column: 9, scope: !7036)
!7121 = !DILocation(line: 64, column: 22, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7119, file: !2759, line: 63, column: 37)
!7123 = !DILocation(line: 64, column: 45, scope: !7122)
!7124 = !DILocation(line: 65, column: 5, scope: !7122)
!7125 = !DILocation(line: 0, scope: !7119)
!7126 = !DILocation(line: 69, column: 45, scope: !7036)
!7127 = !DILocation(line: 69, column: 26, scope: !7036)
!7128 = !DILocation(line: 70, column: 30, scope: !7036)
!7129 = !DILocation(line: 70, column: 36, scope: !7036)
!7130 = !DILocation(line: 70, column: 63, scope: !7036)
!7131 = !DILocation(line: 71, column: 20, scope: !7132)
!7132 = distinct !DILexicalBlock(scope: !7036, file: !2759, line: 71, column: 9)
!7133 = !DILocation(line: 71, column: 26, scope: !7132)
!7134 = !DILocation(line: 77, column: 5, scope: !7036)
!7135 = !DILocation(line: 77, column: 25, scope: !7036)
!7136 = !DILocation(line: 78, column: 16, scope: !7137)
!7137 = distinct !DILexicalBlock(scope: !7036, file: !2759, line: 77, column: 32)
!7138 = distinct !{!7138, !7134, !7139}
!7139 = !DILocation(line: 80, column: 5, scope: !7036)
!7140 = !DILocation(line: 82, column: 35, scope: !7036)
!7141 = !DILocation(line: 82, column: 66, scope: !7036)
!7142 = !DILocation(line: 84, column: 18, scope: !7036)
!7143 = !DILocation(line: 85, column: 34, scope: !7036)
!7144 = !DILocation(line: 85, column: 39, scope: !7036)
!7145 = !DILocation(line: 87, column: 12, scope: !7036)
!7146 = !DILocation(line: 87, column: 22, scope: !7036)
!7147 = !DILocation(line: 89, column: 23, scope: !7036)
!7148 = !DILocation(line: 90, column: 27, scope: !7036)
!7149 = !DILocation(line: 90, column: 16, scope: !7036)
!7150 = !DILocation(line: 91, column: 38, scope: !7036)
!7151 = !DILocation(line: 91, column: 24, scope: !7036)
!7152 = !DILocation(line: 91, column: 28, scope: !7036)
!7153 = !DILocation(line: 92, column: 35, scope: !7036)
!7154 = !DILocation(line: 92, column: 41, scope: !7036)
!7155 = !DILocation(line: 92, column: 20, scope: !7036)
!7156 = !DILocation(line: 92, column: 24, scope: !7036)
!7157 = !DILocation(line: 93, column: 16, scope: !7036)
!7158 = !DILocation(line: 95, column: 12, scope: !7036)
!7159 = !DILocation(line: 95, column: 25, scope: !7036)
!7160 = !DILocation(line: 96, column: 12, scope: !7036)
!7161 = !DILocation(line: 96, column: 25, scope: !7036)
!7162 = !DILocation(line: 98, column: 24, scope: !7036)
!7163 = !DILocation(line: 98, column: 22, scope: !7036)
!7164 = !DILocation(line: 99, column: 24, scope: !7036)
!7165 = !DILocation(line: 99, column: 22, scope: !7036)
!7166 = !DILocation(line: 101, column: 25, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7036, file: !2759, line: 101, column: 9)
!7168 = !DILocation(line: 101, column: 9, scope: !7036)
!7169 = !DILocation(line: 102, column: 16, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7167, file: !2759, line: 101, column: 37)
!7171 = !DILocation(line: 102, column: 22, scope: !7170)
!7172 = !DILocation(line: 103, column: 5, scope: !7170)
!7173 = !DILocation(line: 104, column: 1, scope: !7036)
!7174 = distinct !DISubprogram(name: "uart_set_format", scope: !2759, file: !2759, line: 106, type: !7175, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7177)
!7175 = !DISubroutineType(types: !7176)
!7176 = !{null, !7039, !6247, !6249, !6251}
!7177 = !{!7178, !7179, !7180, !7181, !7182}
!7178 = !DILocalVariable(name: "uartx", arg: 1, scope: !7174, file: !2759, line: 106, type: !7039)
!7179 = !DILocalVariable(name: "word_length", arg: 2, scope: !7174, file: !2759, line: 107, type: !6247)
!7180 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !7174, file: !2759, line: 108, type: !6249)
!7181 = !DILocalVariable(name: "parity", arg: 4, scope: !7174, file: !2759, line: 109, type: !6251)
!7182 = !DILocalVariable(name: "byte", scope: !7174, file: !2759, line: 111, type: !1263)
!7183 = !DILocation(line: 0, scope: !7174)
!7184 = !DILocation(line: 114, column: 19, scope: !7174)
!7185 = !DILocation(line: 115, column: 16, scope: !7174)
!7186 = !DILocation(line: 118, column: 10, scope: !7174)
!7187 = !DILocation(line: 119, column: 5, scope: !7174)
!7188 = !DILocation(line: 124, column: 18, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7174, file: !2759, line: 119, column: 26)
!7190 = !DILocation(line: 125, column: 13, scope: !7189)
!7191 = !DILocation(line: 127, column: 18, scope: !7189)
!7192 = !DILocation(line: 128, column: 13, scope: !7189)
!7193 = !DILocation(line: 130, column: 18, scope: !7189)
!7194 = !DILocation(line: 131, column: 13, scope: !7189)
!7195 = !DILocation(line: 137, column: 10, scope: !7174)
!7196 = !DILocation(line: 138, column: 5, scope: !7174)
!7197 = !DILocation(line: 151, column: 5, scope: !7174)
!7198 = !DILocation(line: 166, column: 18, scope: !7174)
!7199 = !DILocation(line: 166, column: 16, scope: !7174)
!7200 = !DILocation(line: 167, column: 1, scope: !7174)
!7201 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2759, file: !2759, line: 169, type: !7202, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7204)
!7202 = !DISubroutineType(types: !7203)
!7203 = !{null, !7039, !381}
!7204 = !{!7205, !7206, !7207}
!7205 = !DILocalVariable(name: "uartx", arg: 1, scope: !7201, file: !2759, line: 169, type: !7039)
!7206 = !DILocalVariable(name: "byte", arg: 2, scope: !7201, file: !2759, line: 169, type: !381)
!7207 = !DILocalVariable(name: "LSR", scope: !7201, file: !2759, line: 171, type: !1263)
!7208 = !DILocation(line: 0, scope: !7201)
!7209 = !DILocation(line: 173, column: 5, scope: !7201)
!7210 = !DILocation(line: 174, column: 31, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7201, file: !2759, line: 173, column: 15)
!7212 = !DILocation(line: 175, column: 17, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7211, file: !2759, line: 175, column: 13)
!7214 = !DILocation(line: 175, column: 13, scope: !7211)
!7215 = distinct !{!7215, !7209, !7216}
!7216 = !DILocation(line: 179, column: 5, scope: !7201)
!7217 = !DILocation(line: 176, column: 38, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7213, file: !2759, line: 175, column: 39)
!7219 = !DILocation(line: 176, column: 32, scope: !7218)
!7220 = !DILocation(line: 176, column: 36, scope: !7218)
!7221 = !DILocation(line: 180, column: 1, scope: !7201)
!7222 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2759, file: !2759, line: 182, type: !7223, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7225)
!7223 = !DISubroutineType(types: !7224)
!7224 = !{!381, !7039}
!7225 = !{!7226, !7227, !7228}
!7226 = !DILocalVariable(name: "uartx", arg: 1, scope: !7222, file: !2759, line: 182, type: !7039)
!7227 = !DILocalVariable(name: "LSR", scope: !7222, file: !2759, line: 184, type: !1263)
!7228 = !DILocalVariable(name: "byte", scope: !7222, file: !2759, line: 185, type: !381)
!7229 = !DILocation(line: 0, scope: !7222)
!7230 = !DILocation(line: 187, column: 5, scope: !7222)
!7231 = !DILocation(line: 188, column: 31, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7222, file: !2759, line: 187, column: 15)
!7233 = !DILocation(line: 189, column: 17, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7232, file: !2759, line: 189, column: 13)
!7235 = !DILocation(line: 189, column: 13, scope: !7232)
!7236 = distinct !{!7236, !7230, !7237}
!7237 = !DILocation(line: 193, column: 5, scope: !7222)
!7238 = !DILocation(line: 190, column: 48, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7234, file: !2759, line: 189, column: 37)
!7240 = !DILocation(line: 190, column: 20, scope: !7239)
!7241 = !DILocation(line: 195, column: 5, scope: !7222)
!7242 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2759, file: !2759, line: 198, type: !7243, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7245)
!7243 = !DISubroutineType(types: !7244)
!7244 = !{!61, !7039}
!7245 = !{!7246, !7247, !7248}
!7246 = !DILocalVariable(name: "uartx", arg: 1, scope: !7242, file: !2759, line: 198, type: !7039)
!7247 = !DILocalVariable(name: "LSR", scope: !7242, file: !2759, line: 200, type: !1263)
!7248 = !DILocalVariable(name: "value", scope: !7242, file: !2759, line: 201, type: !61)
!7249 = !DILocation(line: 0, scope: !7242)
!7250 = !DILocation(line: 203, column: 27, scope: !7242)
!7251 = !DILocation(line: 204, column: 13, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7242, file: !2759, line: 204, column: 9)
!7253 = !DILocation(line: 204, column: 9, scope: !7242)
!7254 = !DILocation(line: 205, column: 36, scope: !7255)
!7255 = distinct !DILexicalBlock(scope: !7252, file: !2759, line: 204, column: 33)
!7256 = !DILocation(line: 206, column: 5, scope: !7255)
!7257 = !DILocation(line: 0, scope: !7252)
!7258 = !DILocation(line: 210, column: 5, scope: !7242)
!7259 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2759, file: !2759, line: 213, type: !7260, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7262)
!7260 = !DISubroutineType(types: !7261)
!7261 = !{null, !7039}
!7262 = !{!7263, !7264, !7265}
!7263 = !DILocalVariable(name: "uartx", arg: 1, scope: !7259, file: !2759, line: 213, type: !7039)
!7264 = !DILocalVariable(name: "EFR", scope: !7259, file: !2759, line: 215, type: !1263)
!7265 = !DILocalVariable(name: "LCR", scope: !7259, file: !2759, line: 215, type: !1263)
!7266 = !DILocation(line: 0, scope: !7259)
!7267 = !DILocation(line: 217, column: 18, scope: !7259)
!7268 = !DILocation(line: 219, column: 16, scope: !7259)
!7269 = !DILocation(line: 220, column: 30, scope: !7259)
!7270 = !DILocation(line: 222, column: 30, scope: !7259)
!7271 = !DILocation(line: 222, column: 28, scope: !7259)
!7272 = !DILocation(line: 223, column: 12, scope: !7259)
!7273 = !DILocation(line: 223, column: 22, scope: !7259)
!7274 = !DILocation(line: 225, column: 16, scope: !7259)
!7275 = !DILocation(line: 226, column: 21, scope: !7259)
!7276 = !DILocation(line: 226, column: 25, scope: !7259)
!7277 = !DILocation(line: 228, column: 18, scope: !7259)
!7278 = !DILocation(line: 228, column: 16, scope: !7259)
!7279 = !DILocation(line: 229, column: 1, scope: !7259)
!7280 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2759, file: !2759, line: 231, type: !7281, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7283)
!7281 = !DISubroutineType(types: !7282)
!7282 = !{null, !7039, !381, !381, !381}
!7283 = !{!7284, !7285, !7286, !7287, !7288, !7289}
!7284 = !DILocalVariable(name: "uartx", arg: 1, scope: !7280, file: !2759, line: 231, type: !7039)
!7285 = !DILocalVariable(name: "xon", arg: 2, scope: !7280, file: !2759, line: 232, type: !381)
!7286 = !DILocalVariable(name: "xoff", arg: 3, scope: !7280, file: !2759, line: 233, type: !381)
!7287 = !DILocalVariable(name: "escape_character", arg: 4, scope: !7280, file: !2759, line: 234, type: !381)
!7288 = !DILocalVariable(name: "EFR", scope: !7280, file: !2759, line: 236, type: !1263)
!7289 = !DILocalVariable(name: "LCR", scope: !7280, file: !2759, line: 236, type: !1263)
!7290 = !DILocation(line: 0, scope: !7280)
!7291 = !DILocation(line: 238, column: 18, scope: !7280)
!7292 = !DILocation(line: 240, column: 16, scope: !7280)
!7293 = !DILocation(line: 241, column: 28, scope: !7280)
!7294 = !DILocation(line: 241, column: 21, scope: !7280)
!7295 = !DILocation(line: 241, column: 26, scope: !7280)
!7296 = !DILocation(line: 242, column: 20, scope: !7280)
!7297 = !DILocation(line: 242, column: 12, scope: !7280)
!7298 = !DILocation(line: 242, column: 18, scope: !7280)
!7299 = !DILocation(line: 243, column: 30, scope: !7280)
!7300 = !DILocation(line: 245, column: 30, scope: !7280)
!7301 = !DILocation(line: 245, column: 28, scope: !7280)
!7302 = !DILocation(line: 246, column: 25, scope: !7280)
!7303 = !DILocation(line: 246, column: 12, scope: !7280)
!7304 = !DILocation(line: 246, column: 23, scope: !7280)
!7305 = !DILocation(line: 247, column: 12, scope: !7280)
!7306 = !DILocation(line: 247, column: 22, scope: !7280)
!7307 = !DILocation(line: 249, column: 18, scope: !7280)
!7308 = !DILocation(line: 249, column: 16, scope: !7280)
!7309 = !DILocation(line: 250, column: 1, scope: !7280)
!7310 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2759, file: !2759, line: 252, type: !7260, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7311)
!7311 = !{!7312, !7313}
!7312 = !DILocalVariable(name: "uartx", arg: 1, scope: !7310, file: !2759, line: 252, type: !7039)
!7313 = !DILocalVariable(name: "LCR", scope: !7310, file: !2759, line: 254, type: !1263)
!7314 = !DILocation(line: 0, scope: !7310)
!7315 = !DILocation(line: 256, column: 18, scope: !7310)
!7316 = !DILocation(line: 258, column: 16, scope: !7310)
!7317 = !DILocation(line: 259, column: 24, scope: !7310)
!7318 = !DILocation(line: 259, column: 28, scope: !7310)
!7319 = !DILocation(line: 261, column: 16, scope: !7310)
!7320 = !DILocation(line: 262, column: 18, scope: !7310)
!7321 = !DILocation(line: 262, column: 16, scope: !7310)
!7322 = !DILocation(line: 263, column: 1, scope: !7310)
!7323 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2759, file: !2759, line: 265, type: !7260, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7324)
!7324 = !{!7325, !7326, !7327}
!7325 = !DILocalVariable(name: "uartx", arg: 1, scope: !7323, file: !2759, line: 265, type: !7039)
!7326 = !DILocalVariable(name: "EFR", scope: !7323, file: !2759, line: 267, type: !1263)
!7327 = !DILocalVariable(name: "LCR", scope: !7323, file: !2759, line: 267, type: !1263)
!7328 = !DILocation(line: 0, scope: !7323)
!7329 = !DILocation(line: 269, column: 18, scope: !7323)
!7330 = !DILocation(line: 271, column: 16, scope: !7323)
!7331 = !DILocation(line: 272, column: 30, scope: !7323)
!7332 = !DILocation(line: 274, column: 30, scope: !7323)
!7333 = !DILocation(line: 274, column: 28, scope: !7323)
!7334 = !DILocation(line: 276, column: 16, scope: !7323)
!7335 = !DILocation(line: 277, column: 28, scope: !7323)
!7336 = !DILocation(line: 283, column: 18, scope: !7323)
!7337 = !DILocation(line: 283, column: 16, scope: !7323)
!7338 = !DILocation(line: 284, column: 1, scope: !7323)
!7339 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2759, file: !2759, line: 307, type: !7260, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7340)
!7340 = !{!7341, !7342, !7343}
!7341 = !DILocalVariable(name: "uartx", arg: 1, scope: !7339, file: !2759, line: 307, type: !7039)
!7342 = !DILocalVariable(name: "IER", scope: !7339, file: !2759, line: 309, type: !1263)
!7343 = !DILocalVariable(name: "LCR", scope: !7339, file: !2759, line: 309, type: !1263)
!7344 = !DILocation(line: 0, scope: !7339)
!7345 = !DILocation(line: 311, column: 18, scope: !7339)
!7346 = !DILocation(line: 313, column: 16, scope: !7339)
!7347 = !DILocation(line: 314, column: 26, scope: !7339)
!7348 = !DILocation(line: 316, column: 26, scope: !7339)
!7349 = !DILocation(line: 316, column: 24, scope: !7339)
!7350 = !DILocation(line: 318, column: 19, scope: !7339)
!7351 = !DILocation(line: 318, column: 16, scope: !7339)
!7352 = !DILocation(line: 319, column: 1, scope: !7339)
!7353 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2759, file: !2759, line: 321, type: !7354, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7356)
!7354 = !DISubroutineType(types: !7355)
!7355 = !{null, !7039, !1171}
!7356 = !{!7357, !7358, !7359}
!7357 = !DILocalVariable(name: "uartx", arg: 1, scope: !7353, file: !2759, line: 321, type: !7039)
!7358 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7353, file: !2759, line: 321, type: !1171)
!7359 = !DILocalVariable(name: "FCR", scope: !7353, file: !2759, line: 323, type: !1263)
!7360 = !DILocation(line: 0, scope: !7353)
!7361 = !DILocation(line: 327, column: 9, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7353, file: !2759, line: 327, column: 9)
!7363 = !DILocation(line: 333, column: 24, scope: !7353)
!7364 = !DILocation(line: 333, column: 28, scope: !7353)
!7365 = !DILocation(line: 334, column: 1, scope: !7353)
!7366 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2759, file: !2759, line: 336, type: !7367, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7370)
!7367 = !DISubroutineType(types: !7368)
!7368 = !{!7369, !7039}
!7369 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !964, line: 55, baseType: !1020)
!7370 = !{!7371, !7372, !7373, !7374}
!7371 = !DILocalVariable(name: "uartx", arg: 1, scope: !7366, file: !2759, line: 336, type: !7039)
!7372 = !DILocalVariable(name: "IIR", scope: !7366, file: !2759, line: 338, type: !1263)
!7373 = !DILocalVariable(name: "LSR", scope: !7366, file: !2759, line: 338, type: !1263)
!7374 = !DILocalVariable(name: "type", scope: !7366, file: !2759, line: 339, type: !7369)
!7375 = !DILocation(line: 0, scope: !7366)
!7376 = !DILocation(line: 341, column: 30, scope: !7366)
!7377 = !DILocation(line: 342, column: 13, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7366, file: !2759, line: 342, column: 9)
!7379 = !DILocation(line: 342, column: 9, scope: !7366)
!7380 = !DILocation(line: 346, column: 17, scope: !7366)
!7381 = !DILocation(line: 346, column: 5, scope: !7366)
!7382 = !DILocation(line: 350, column: 13, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7366, file: !2759, line: 346, column: 37)
!7384 = !DILocation(line: 353, column: 35, scope: !7383)
!7385 = !DILocation(line: 354, column: 21, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7383, file: !2759, line: 354, column: 17)
!7387 = !DILocation(line: 363, column: 13, scope: !7383)
!7388 = !DILocation(line: 369, column: 1, scope: !7366)
!7389 = distinct !DISubprogram(name: "uart_verify_error", scope: !2759, file: !2759, line: 371, type: !7390, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7392)
!7390 = !DISubroutineType(types: !7391)
!7391 = !{!1171, !7039}
!7392 = !{!7393, !7394, !7395}
!7393 = !DILocalVariable(name: "uartx", arg: 1, scope: !7389, file: !2759, line: 371, type: !7039)
!7394 = !DILocalVariable(name: "LSR", scope: !7389, file: !2759, line: 373, type: !1263)
!7395 = !DILocalVariable(name: "ret", scope: !7389, file: !2759, line: 374, type: !1171)
!7396 = !DILocation(line: 0, scope: !7389)
!7397 = !DILocation(line: 376, column: 27, scope: !7389)
!7398 = !DILocation(line: 377, column: 15, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7389, file: !2759, line: 377, column: 9)
!7400 = !DILocation(line: 377, column: 9, scope: !7389)
!7401 = !DILocation(line: 381, column: 5, scope: !7389)
!7402 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2759, file: !2759, line: 384, type: !7260, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7403)
!7403 = !{!7404, !7405}
!7404 = !DILocalVariable(name: "uartx", arg: 1, scope: !7402, file: !2759, line: 384, type: !7039)
!7405 = !DILocalVariable(name: "DMA_EN", scope: !7402, file: !2759, line: 386, type: !1263)
!7406 = !DILocation(line: 0, scope: !7402)
!7407 = !DILocation(line: 388, column: 21, scope: !7402)
!7408 = !DILocation(line: 390, column: 1, scope: !7402)
!7409 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2759, file: !2759, line: 392, type: !7260, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7410)
!7410 = !{!7411}
!7411 = !DILocalVariable(name: "uartx", arg: 1, scope: !7409, file: !2759, line: 392, type: !7039)
!7412 = !DILocation(line: 0, scope: !7409)
!7413 = !DILocation(line: 394, column: 12, scope: !7409)
!7414 = !DILocation(line: 394, column: 16, scope: !7409)
!7415 = !DILocation(line: 395, column: 24, scope: !7409)
!7416 = !DILocation(line: 395, column: 28, scope: !7409)
!7417 = !DILocation(line: 396, column: 21, scope: !7409)
!7418 = !DILocation(line: 396, column: 26, scope: !7409)
!7419 = !DILocation(line: 397, column: 12, scope: !7409)
!7420 = !DILocation(line: 397, column: 18, scope: !7409)
!7421 = !DILocation(line: 399, column: 16, scope: !7409)
!7422 = !DILocation(line: 400, column: 24, scope: !7409)
!7423 = !DILocation(line: 400, column: 28, scope: !7409)
!7424 = !DILocation(line: 401, column: 20, scope: !7409)
!7425 = !DILocation(line: 401, column: 24, scope: !7409)
!7426 = !DILocation(line: 403, column: 16, scope: !7409)
!7427 = !DILocation(line: 404, column: 24, scope: !7409)
!7428 = !DILocation(line: 405, column: 28, scope: !7409)
!7429 = !DILocation(line: 407, column: 16, scope: !7409)
!7430 = !DILocation(line: 408, column: 28, scope: !7409)
!7431 = !DILocation(line: 409, column: 16, scope: !7409)
!7432 = !DILocation(line: 411, column: 25, scope: !7409)
!7433 = !DILocation(line: 412, column: 22, scope: !7409)
!7434 = !DILocation(line: 412, column: 26, scope: !7409)
!7435 = !DILocation(line: 413, column: 12, scope: !7409)
!7436 = !DILocation(line: 413, column: 24, scope: !7409)
!7437 = !DILocation(line: 414, column: 12, scope: !7409)
!7438 = !DILocation(line: 414, column: 22, scope: !7409)
!7439 = !DILocation(line: 415, column: 12, scope: !7409)
!7440 = !DILocation(line: 415, column: 25, scope: !7409)
!7441 = !DILocation(line: 416, column: 12, scope: !7409)
!7442 = !DILocation(line: 416, column: 25, scope: !7409)
!7443 = !DILocation(line: 417, column: 12, scope: !7409)
!7444 = !DILocation(line: 417, column: 23, scope: !7409)
!7445 = !DILocation(line: 418, column: 12, scope: !7409)
!7446 = !DILocation(line: 418, column: 27, scope: !7409)
!7447 = !DILocation(line: 419, column: 12, scope: !7409)
!7448 = !DILocation(line: 419, column: 18, scope: !7409)
!7449 = !DILocation(line: 420, column: 12, scope: !7409)
!7450 = !DILocation(line: 420, column: 23, scope: !7409)
!7451 = !DILocation(line: 421, column: 12, scope: !7409)
!7452 = !DILocation(line: 421, column: 22, scope: !7409)
!7453 = !DILocation(line: 422, column: 12, scope: !7409)
!7454 = !DILocation(line: 422, column: 21, scope: !7409)
!7455 = !DILocation(line: 423, column: 12, scope: !7409)
!7456 = !DILocation(line: 423, column: 19, scope: !7409)
!7457 = !DILocation(line: 424, column: 23, scope: !7409)
!7458 = !DILocation(line: 425, column: 12, scope: !7409)
!7459 = !DILocation(line: 425, column: 22, scope: !7409)
!7460 = !DILocation(line: 426, column: 12, scope: !7409)
!7461 = !DILocation(line: 426, column: 22, scope: !7409)
!7462 = !DILocation(line: 427, column: 1, scope: !7409)
!7463 = distinct !DISubprogram(name: "uart_query_empty", scope: !2759, file: !2759, line: 429, type: !7260, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2758, retainedNodes: !7464)
!7464 = !{!7465}
!7465 = !DILocalVariable(name: "uartx", arg: 1, scope: !7463, file: !2759, line: 429, type: !7039)
!7466 = !DILocation(line: 0, scope: !7463)
!7467 = !DILocation(line: 431, column: 5, scope: !7463)
!7468 = !DILocation(line: 431, column: 31, scope: !7463)
!7469 = !DILocation(line: 431, column: 36, scope: !7463)
!7470 = !DILocation(line: 431, column: 12, scope: !7463)
!7471 = distinct !{!7471, !7467, !7472}
!7472 = !DILocation(line: 431, column: 44, scope: !7463)
!7473 = !DILocation(line: 432, column: 1, scope: !7463)
!7474 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !1018, file: !1018, line: 134, type: !7475, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !7477)
!7475 = !DISubroutineType(types: !7476)
!7476 = !{!5036, !969, !1171}
!7477 = !{!7478, !7479, !7480}
!7478 = !DILocalVariable(name: "uart_port", arg: 1, scope: !7474, file: !1018, line: 134, type: !969)
!7479 = !DILocalVariable(name: "is_rx", arg: 2, scope: !7474, file: !1018, line: 134, type: !1171)
!7480 = !DILocalVariable(name: "dma_channel", scope: !7474, file: !1018, line: 136, type: !5036)
!7481 = !DILocation(line: 0, scope: !7474)
!7482 = !DILocation(line: 138, column: 5, scope: !7474)
!7483 = !DILocation(line: 140, column: 17, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7485, file: !1018, line: 140, column: 17)
!7485 = distinct !DILexicalBlock(scope: !7474, file: !1018, line: 138, column: 24)
!7486 = !DILocation(line: 147, column: 17, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7485, file: !1018, line: 147, column: 17)
!7488 = !DILocation(line: 154, column: 17, scope: !7489)
!7489 = distinct !DILexicalBlock(scope: !7485, file: !1018, line: 154, column: 17)
!7490 = !DILocation(line: 161, column: 17, scope: !7491)
!7491 = distinct !DILexicalBlock(scope: !7485, file: !1018, line: 161, column: 17)
!7492 = !DILocation(line: 171, column: 5, scope: !7474)
!7493 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !1018, file: !1018, line: 174, type: !7494, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !7502)
!7494 = !DISubroutineType(types: !7495)
!7495 = !{null, !5036, !7496}
!7496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7497, size: 32)
!7497 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !964, line: 96, baseType: !7498)
!7498 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !964, line: 93, size: 64, elements: !7499)
!7499 = !{!7500, !7501}
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !7498, file: !964, line: 94, baseType: !91, size: 8)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !7498, file: !964, line: 95, baseType: !969, size: 32, offset: 32)
!7502 = !{!7503, !7504}
!7503 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !7493, file: !1018, line: 174, type: !5036)
!7504 = !DILocalVariable(name: "user_data", arg: 2, scope: !7493, file: !1018, line: 174, type: !7496)
!7505 = !DILocation(line: 0, scope: !7493)
!7506 = !DILocation(line: 176, column: 5, scope: !7493)
!7507 = !DILocation(line: 0, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7493, file: !1018, line: 176, column: 26)
!7509 = !DILocation(line: 212, column: 1, scope: !7493)
!7510 = distinct !DISubprogram(name: "uart_enable_dma", scope: !1018, file: !1018, line: 214, type: !7511, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !7513)
!7511 = !DISubroutineType(types: !7512)
!7512 = !{null, !1031}
!7513 = !{!7514}
!7514 = !DILocalVariable(name: "uartx", arg: 1, scope: !7510, file: !1018, line: 214, type: !1031)
!7515 = !DILocation(line: 0, scope: !7510)
!7516 = !DILocation(line: 216, column: 12, scope: !7510)
!7517 = !DILocation(line: 216, column: 19, scope: !7510)
!7518 = !DILocation(line: 217, column: 1, scope: !7510)
!7519 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !1018, file: !1018, line: 219, type: !554, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1017, retainedNodes: !7520)
!7520 = !{!7521, !7522, !7523, !7524}
!7521 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7519, file: !1018, line: 219, type: !556)
!7522 = !DILocalVariable(name: "uart_port", scope: !7519, file: !1018, line: 221, type: !969)
!7523 = !DILocalVariable(name: "type", scope: !7519, file: !1018, line: 222, type: !7369)
!7524 = !DILocalVariable(name: "uartx", scope: !7519, file: !1018, line: 223, type: !1031)
!7525 = !DILocation(line: 0, scope: !7519)
!7526 = !DILocation(line: 225, column: 5, scope: !7519)
!7527 = !DILocation(line: 242, column: 13, scope: !7519)
!7528 = !DILocation(line: 243, column: 12, scope: !7519)
!7529 = !DILocation(line: 245, column: 5, scope: !7519)
!7530 = !DILocation(line: 248, column: 13, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7519, file: !1018, line: 245, column: 19)
!7532 = !DILocation(line: 249, column: 13, scope: !7531)
!7533 = !DILocation(line: 252, column: 13, scope: !7531)
!7534 = !DILocation(line: 253, column: 13, scope: !7531)
!7535 = !DILocation(line: 263, column: 13, scope: !7531)
!7536 = !DILocation(line: 264, column: 13, scope: !7531)
!7537 = !DILocation(line: 276, column: 13, scope: !7531)
!7538 = !DILocation(line: 278, column: 1, scope: !7519)
!7539 = !DILocation(line: 131, column: 9, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !1100, file: !1101, line: 131, column: 9)
!7541 = !DILocation(line: 131, column: 9, scope: !1100)
!7542 = !DILocation(line: 0, scope: !1100)
!7543 = !DILocation(line: 134, column: 49, scope: !7544)
!7544 = distinct !DILexicalBlock(scope: !7545, file: !1101, line: 133, column: 46)
!7545 = distinct !DILexicalBlock(scope: !7546, file: !1101, line: 133, column: 9)
!7546 = distinct !DILexicalBlock(scope: !7547, file: !1101, line: 133, column: 9)
!7547 = distinct !DILexicalBlock(scope: !7540, file: !1101, line: 131, column: 28)
!7548 = !DILocation(line: 134, column: 13, scope: !7544)
!7549 = !DILocation(line: 133, column: 42, scope: !7545)
!7550 = !DILocation(line: 133, column: 23, scope: !7545)
!7551 = !DILocation(line: 133, column: 9, scope: !7546)
!7552 = distinct !{!7552, !7551, !7553}
!7553 = !DILocation(line: 135, column: 9, scope: !7546)
!7554 = !DILocation(line: 136, column: 22, scope: !7547)
!7555 = !DILocation(line: 137, column: 5, scope: !7547)
!7556 = !DILocation(line: 138, column: 5, scope: !1100)
!7557 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !1110, file: !1110, line: 1577, type: !7558, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7560)
!7558 = !DISubroutineType(types: !7559)
!7559 = !{null, !557, !61}
!7560 = !{!7561, !7562}
!7561 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7557, file: !1110, line: 1577, type: !557)
!7562 = !DILocalVariable(name: "priority", arg: 2, scope: !7557, file: !1110, line: 1577, type: !61)
!7563 = !DILocation(line: 0, scope: !7557)
!7564 = !DILocation(line: 1582, column: 34, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7566, file: !1110, line: 1581, column: 8)
!7566 = distinct !DILexicalBlock(scope: !7557, file: !1110, line: 1579, column: 6)
!7567 = !DILocation(line: 1582, column: 5, scope: !7565)
!7568 = !DILocation(line: 1582, column: 32, scope: !7565)
!7569 = !DILocation(line: 1583, column: 1, scope: !7557)
!7570 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1101, file: !1101, line: 141, type: !7571, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7573)
!7571 = !DISubroutineType(types: !7572)
!7572 = !{!1104, !556}
!7573 = !{!7574, !7575}
!7574 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7570, file: !1101, line: 141, type: !556)
!7575 = !DILocalVariable(name: "status", scope: !7570, file: !1101, line: 143, type: !1104)
!7576 = !DILocation(line: 0, scope: !7570)
!7577 = !DILocation(line: 145, column: 40, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7570, file: !1101, line: 145, column: 9)
!7579 = !DILocation(line: 149, column: 9, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7578, file: !1101, line: 148, column: 12)
!7581 = !DILocation(line: 153, column: 5, scope: !7570)
!7582 = !DILocation(line: 154, column: 1, scope: !7570)
!7583 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1110, file: !1110, line: 1494, type: !7584, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7586)
!7584 = !DISubroutineType(types: !7585)
!7585 = !{null, !557}
!7586 = !{!7587}
!7587 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7583, file: !1110, line: 1494, type: !557)
!7588 = !DILocation(line: 0, scope: !7583)
!7589 = !DILocation(line: 1497, column: 91, scope: !7583)
!7590 = !DILocation(line: 1497, column: 61, scope: !7583)
!7591 = !DILocation(line: 1497, column: 40, scope: !7583)
!7592 = !DILocation(line: 1497, column: 3, scope: !7583)
!7593 = !DILocation(line: 1497, column: 46, scope: !7583)
!7594 = !DILocation(line: 1498, column: 1, scope: !7583)
!7595 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1101, file: !1101, line: 156, type: !7571, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7596)
!7596 = !{!7597, !7598}
!7597 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7595, file: !1101, line: 156, type: !556)
!7598 = !DILocalVariable(name: "status", scope: !7595, file: !1101, line: 158, type: !1104)
!7599 = !DILocation(line: 0, scope: !7595)
!7600 = !DILocation(line: 160, column: 40, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7595, file: !1101, line: 160, column: 9)
!7602 = !DILocation(line: 164, column: 9, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7601, file: !1101, line: 163, column: 12)
!7604 = !DILocation(line: 168, column: 5, scope: !7595)
!7605 = !DILocation(line: 169, column: 1, scope: !7595)
!7606 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1110, file: !1110, line: 1507, type: !7584, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7607)
!7607 = !{!7608}
!7608 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7606, file: !1110, line: 1507, type: !557)
!7609 = !DILocation(line: 0, scope: !7606)
!7610 = !DILocation(line: 1509, column: 65, scope: !7606)
!7611 = !DILocation(line: 1509, column: 44, scope: !7606)
!7612 = !DILocation(line: 1509, column: 32, scope: !7606)
!7613 = !DILocation(line: 1509, column: 3, scope: !7606)
!7614 = !DILocation(line: 1509, column: 39, scope: !7606)
!7615 = !DILocation(line: 1510, column: 1, scope: !7606)
!7616 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1101, file: !1101, line: 171, type: !7617, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7619)
!7617 = !DISubroutineType(types: !7618)
!7618 = !{!61, !556}
!7619 = !{!7620, !7621}
!7620 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7616, file: !1101, line: 171, type: !556)
!7621 = !DILocalVariable(name: "ret", scope: !7616, file: !1101, line: 173, type: !61)
!7622 = !DILocation(line: 0, scope: !7616)
!7623 = !DILocation(line: 175, column: 40, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7616, file: !1101, line: 175, column: 9)
!7625 = !DILocation(line: 178, column: 15, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7624, file: !1101, line: 177, column: 12)
!7627 = !DILocation(line: 181, column: 5, scope: !7616)
!7628 = !DILocation(line: 182, column: 1, scope: !7616)
!7629 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !1110, file: !1110, line: 1523, type: !7630, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7632)
!7630 = !DISubroutineType(types: !7631)
!7631 = !{!61, !557}
!7632 = !{!7633}
!7633 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7629, file: !1110, line: 1523, type: !557)
!7634 = !DILocation(line: 0, scope: !7629)
!7635 = !DILocation(line: 1525, column: 51, scope: !7629)
!7636 = !DILocation(line: 1525, column: 23, scope: !7629)
!7637 = !DILocation(line: 1525, column: 83, scope: !7629)
!7638 = !DILocation(line: 1525, column: 22, scope: !7629)
!7639 = !DILocation(line: 1525, column: 3, scope: !7629)
!7640 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1101, file: !1101, line: 184, type: !7571, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7641)
!7641 = !{!7642, !7643}
!7642 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7640, file: !1101, line: 184, type: !556)
!7643 = !DILocalVariable(name: "status", scope: !7640, file: !1101, line: 186, type: !1104)
!7644 = !DILocation(line: 0, scope: !7640)
!7645 = !DILocation(line: 188, column: 40, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7640, file: !1101, line: 188, column: 9)
!7647 = !DILocation(line: 192, column: 9, scope: !7648)
!7648 = distinct !DILexicalBlock(scope: !7646, file: !1101, line: 191, column: 12)
!7649 = !DILocation(line: 196, column: 5, scope: !7640)
!7650 = !DILocation(line: 197, column: 1, scope: !7640)
!7651 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !1110, file: !1110, line: 1535, type: !7584, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7652)
!7652 = !{!7653}
!7653 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7651, file: !1110, line: 1535, type: !557)
!7654 = !DILocation(line: 0, scope: !7651)
!7655 = !DILocation(line: 1537, column: 65, scope: !7651)
!7656 = !DILocation(line: 1537, column: 44, scope: !7651)
!7657 = !DILocation(line: 1537, column: 32, scope: !7651)
!7658 = !DILocation(line: 1537, column: 3, scope: !7651)
!7659 = !DILocation(line: 1537, column: 39, scope: !7651)
!7660 = !DILocation(line: 1538, column: 1, scope: !7651)
!7661 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1101, file: !1101, line: 199, type: !7571, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7662)
!7662 = !{!7663, !7664}
!7663 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7661, file: !1101, line: 199, type: !556)
!7664 = !DILocalVariable(name: "status", scope: !7661, file: !1101, line: 201, type: !1104)
!7665 = !DILocation(line: 0, scope: !7661)
!7666 = !DILocation(line: 203, column: 40, scope: !7667)
!7667 = distinct !DILexicalBlock(scope: !7661, file: !1101, line: 203, column: 9)
!7668 = !DILocation(line: 207, column: 9, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7667, file: !1101, line: 206, column: 12)
!7670 = !DILocation(line: 211, column: 5, scope: !7661)
!7671 = !DILocation(line: 212, column: 1, scope: !7661)
!7672 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1110, file: !1110, line: 1547, type: !7584, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7673)
!7673 = !{!7674}
!7674 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7672, file: !1110, line: 1547, type: !557)
!7675 = !DILocation(line: 0, scope: !7672)
!7676 = !DILocation(line: 1549, column: 65, scope: !7672)
!7677 = !DILocation(line: 1549, column: 44, scope: !7672)
!7678 = !DILocation(line: 1549, column: 32, scope: !7672)
!7679 = !DILocation(line: 1549, column: 3, scope: !7672)
!7680 = !DILocation(line: 1549, column: 39, scope: !7672)
!7681 = !DILocation(line: 1550, column: 1, scope: !7672)
!7682 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1101, file: !1101, line: 214, type: !7683, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7685)
!7683 = !DISubroutineType(types: !7684)
!7684 = !{!1104, !556, !61}
!7685 = !{!7686, !7687, !7688}
!7686 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7682, file: !1101, line: 214, type: !556)
!7687 = !DILocalVariable(name: "priority", arg: 2, scope: !7682, file: !1101, line: 214, type: !61)
!7688 = !DILocalVariable(name: "status", scope: !7682, file: !1101, line: 216, type: !1104)
!7689 = !DILocation(line: 0, scope: !7682)
!7690 = !DILocation(line: 218, column: 40, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7682, file: !1101, line: 218, column: 9)
!7692 = !DILocation(line: 222, column: 9, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7691, file: !1101, line: 221, column: 12)
!7694 = !DILocation(line: 226, column: 5, scope: !7682)
!7695 = !DILocation(line: 227, column: 1, scope: !7682)
!7696 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1101, file: !1101, line: 229, type: !7617, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7697)
!7697 = !{!7698, !7699}
!7698 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7696, file: !1101, line: 229, type: !556)
!7699 = !DILocalVariable(name: "ret", scope: !7696, file: !1101, line: 231, type: !61)
!7700 = !DILocation(line: 0, scope: !7696)
!7701 = !DILocation(line: 233, column: 40, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7696, file: !1101, line: 233, column: 9)
!7703 = !DILocation(line: 236, column: 15, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7702, file: !1101, line: 235, column: 12)
!7705 = !DILocation(line: 239, column: 5, scope: !7696)
!7706 = !DILocation(line: 240, column: 1, scope: !7696)
!7707 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !1110, file: !1110, line: 1597, type: !7630, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7708)
!7708 = !{!7709}
!7709 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7707, file: !1110, line: 1597, type: !557)
!7710 = !DILocation(line: 0, scope: !7707)
!7711 = !DILocation(line: 1603, column: 23, scope: !7712)
!7712 = distinct !DILexicalBlock(scope: !7713, file: !1110, line: 1602, column: 8)
!7713 = distinct !DILexicalBlock(scope: !7707, file: !1110, line: 1600, column: 6)
!7714 = !DILocation(line: 1603, column: 60, scope: !7712)
!7715 = !DILocation(line: 1604, column: 1, scope: !7707)
!7716 = distinct !DISubprogram(name: "isrC_main", scope: !1101, file: !1101, line: 248, type: !1102, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7717)
!7717 = !{!7718, !7719}
!7718 = !DILocalVariable(name: "status", scope: !7716, file: !1101, line: 250, type: !1104)
!7719 = !DILocalVariable(name: "irq_number", scope: !7716, file: !1101, line: 251, type: !556)
!7720 = !DILocation(line: 0, scope: !7716)
!7721 = !DILocation(line: 253, column: 5, scope: !7716)
!7722 = !DILocation(line: 255, column: 35, scope: !7716)
!7723 = !DILocation(line: 256, column: 40, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7716, file: !1101, line: 256, column: 9)
!7725 = !DILocation(line: 259, column: 48, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7724, file: !1101, line: 259, column: 16)
!7727 = !DILocation(line: 259, column: 62, scope: !7726)
!7728 = !DILocation(line: 259, column: 16, scope: !7724)
!7729 = !DILocation(line: 261, column: 9, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7726, file: !1101, line: 259, column: 71)
!7731 = !DILocation(line: 262, column: 9, scope: !7730)
!7732 = !DILocation(line: 264, column: 55, scope: !7733)
!7733 = distinct !DILexicalBlock(scope: !7726, file: !1101, line: 263, column: 12)
!7734 = !DILocation(line: 264, column: 41, scope: !7733)
!7735 = !DILocation(line: 264, column: 53, scope: !7733)
!7736 = !DILocation(line: 265, column: 41, scope: !7733)
!7737 = !DILocation(line: 265, column: 9, scope: !7733)
!7738 = !DILocation(line: 269, column: 5, scope: !7716)
!7739 = !DILocation(line: 270, column: 1, scope: !7716)
!7740 = distinct !DISubprogram(name: "get_current_irq", scope: !1101, file: !1101, line: 242, type: !4009, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7741)
!7741 = !{!7742}
!7742 = !DILocalVariable(name: "irq_num", scope: !7740, file: !1101, line: 244, type: !61)
!7743 = !DILocation(line: 244, column: 31, scope: !7740)
!7744 = !DILocation(line: 244, column: 36, scope: !7740)
!7745 = !DILocation(line: 0, scope: !7740)
!7746 = !DILocation(line: 245, column: 21, scope: !7740)
!7747 = !DILocation(line: 245, column: 5, scope: !7740)
!7748 = distinct !DISubprogram(name: "get_pending_irq", scope: !1101, file: !1101, line: 121, type: !4009, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !293)
!7749 = !DILocation(line: 123, column: 19, scope: !7748)
!7750 = !DILocation(line: 123, column: 51, scope: !7748)
!7751 = !DILocation(line: 123, column: 5, scope: !7748)
!7752 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1101, file: !1101, line: 272, type: !7753, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7756)
!7753 = !DISubroutineType(types: !7754)
!7754 = !{!1104, !556, !7755}
!7755 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !954, line: 175, baseType: !1182)
!7756 = !{!7757, !7758, !7759}
!7757 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7752, file: !1101, line: 272, type: !556)
!7758 = !DILocalVariable(name: "callback", arg: 2, scope: !7752, file: !1101, line: 272, type: !7755)
!7759 = !DILocalVariable(name: "mask", scope: !7752, file: !1101, line: 274, type: !61)
!7760 = !DILocation(line: 0, scope: !7752)
!7761 = !DILocation(line: 276, column: 40, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7752, file: !1101, line: 276, column: 9)
!7763 = !DILocation(line: 280, column: 12, scope: !7752)
!7764 = !DILocation(line: 281, column: 5, scope: !7752)
!7765 = !DILocation(line: 282, column: 37, scope: !7752)
!7766 = !DILocation(line: 282, column: 51, scope: !7752)
!7767 = !DILocation(line: 283, column: 37, scope: !7752)
!7768 = !DILocation(line: 283, column: 49, scope: !7752)
!7769 = !DILocation(line: 284, column: 5, scope: !7752)
!7770 = !DILocation(line: 286, column: 5, scope: !7752)
!7771 = !DILocation(line: 287, column: 1, scope: !7752)
!7772 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1101, file: !1101, line: 289, type: !7773, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7775)
!7773 = !DISubroutineType(types: !7774)
!7774 = !{!1104, !1231}
!7775 = !{!7776}
!7776 = !DILocalVariable(name: "mask", arg: 1, scope: !7772, file: !1101, line: 289, type: !1231)
!7777 = !DILocation(line: 0, scope: !7772)
!7778 = !DILocation(line: 291, column: 13, scope: !7772)
!7779 = !DILocation(line: 291, column: 11, scope: !7772)
!7780 = !DILocation(line: 292, column: 5, scope: !7772)
!7781 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1101, file: !1101, line: 295, type: !7782, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1105, retainedNodes: !7784)
!7782 = !DISubroutineType(types: !7783)
!7783 = !{!1104, !61}
!7784 = !{!7785}
!7785 = !DILocalVariable(name: "mask", arg: 1, scope: !7781, file: !1101, line: 295, type: !61)
!7786 = !DILocation(line: 0, scope: !7781)
!7787 = !DILocation(line: 297, column: 5, scope: !7781)
!7788 = !DILocation(line: 298, column: 5, scope: !7781)
!7789 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2763, file: !2763, line: 51, type: !4009, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7790)
!7790 = !{!7791, !7792}
!7791 = !DILocalVariable(name: "mask", scope: !7789, file: !2763, line: 53, type: !61)
!7792 = !DILocalVariable(name: "priority", scope: !7789, file: !2763, line: 55, type: !61)
!7793 = !DILocation(line: 521, column: 3, scope: !7794, inlinedAt: !7798)
!7794 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !7795, file: !7795, line: 517, type: !4009, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7796)
!7795 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!7796 = !{!7797}
!7797 = !DILocalVariable(name: "result", scope: !7794, file: !7795, line: 519, type: !61)
!7798 = distinct !DILocation(line: 53, column: 21, scope: !7789)
!7799 = !{i64 457578}
!7800 = !DILocation(line: 0, scope: !7794, inlinedAt: !7798)
!7801 = !DILocation(line: 0, scope: !7789)
!7802 = !DILocalVariable(name: "value", arg: 1, scope: !7803, file: !7795, line: 532, type: !61)
!7803 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !7795, file: !7795, line: 532, type: !4431, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7804)
!7804 = !{!7802}
!7805 = !DILocation(line: 0, scope: !7803, inlinedAt: !7806)
!7806 = distinct !DILocation(line: 56, column: 5, scope: !7789)
!7807 = !DILocation(line: 534, column: 3, scope: !7803, inlinedAt: !7806)
!7808 = !{i64 457911}
!7809 = !DILocation(line: 456, column: 3, scope: !7810, inlinedAt: !7811)
!7810 = distinct !DISubprogram(name: "__DMB", scope: !2875, file: !2875, line: 454, type: !291, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !293)
!7811 = distinct !DILocation(line: 57, column: 5, scope: !7789)
!7812 = !{i64 430667}
!7813 = !DILocation(line: 434, column: 3, scope: !7814, inlinedAt: !7815)
!7814 = distinct !DISubprogram(name: "__ISB", scope: !2875, file: !2875, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !293)
!7815 = distinct !DILocation(line: 58, column: 5, scope: !7789)
!7816 = !{i64 430082}
!7817 = !DILocation(line: 59, column: 5, scope: !7789)
!7818 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2763, file: !2763, line: 62, type: !4431, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7819)
!7819 = !{!7820}
!7820 = !DILocalVariable(name: "mask", arg: 1, scope: !7818, file: !2763, line: 62, type: !61)
!7821 = !DILocation(line: 0, scope: !7818)
!7822 = !DILocation(line: 0, scope: !7803, inlinedAt: !7823)
!7823 = distinct !DILocation(line: 64, column: 5, scope: !7818)
!7824 = !DILocation(line: 534, column: 3, scope: !7803, inlinedAt: !7823)
!7825 = !DILocation(line: 456, column: 3, scope: !7810, inlinedAt: !7826)
!7826 = distinct !DILocation(line: 65, column: 5, scope: !7818)
!7827 = !DILocation(line: 434, column: 3, scope: !7814, inlinedAt: !7828)
!7828 = distinct !DILocation(line: 66, column: 5, scope: !7818)
!7829 = !DILocation(line: 67, column: 1, scope: !7818)
!7830 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2763, file: !2763, line: 69, type: !291, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7831)
!7831 = !{!7832, !7833}
!7832 = !DILocalVariable(name: "irq_number", scope: !7830, file: !2763, line: 71, type: !556)
!7833 = !DILocalVariable(name: "mask", scope: !7830, file: !2763, line: 72, type: !61)
!7834 = !DILocation(line: 72, column: 21, scope: !7830)
!7835 = !DILocation(line: 0, scope: !7830)
!7836 = !DILocation(line: 73, column: 5, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7830, file: !2763, line: 73, column: 5)
!7838 = !DILocation(line: 74, column: 9, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7840, file: !2763, line: 73, column: 85)
!7840 = distinct !DILexicalBlock(scope: !7837, file: !2763, line: 73, column: 5)
!7841 = !DILocation(line: 73, column: 81, scope: !7840)
!7842 = !DILocation(line: 73, column: 53, scope: !7840)
!7843 = distinct !{!7843, !7836, !7844}
!7844 = !DILocation(line: 75, column: 5, scope: !7837)
!7845 = !DILocation(line: 76, column: 5, scope: !7830)
!7846 = !DILocation(line: 77, column: 1, scope: !7830)
!7847 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1110, file: !1110, line: 1507, type: !7584, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7848)
!7848 = !{!7849}
!7849 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7847, file: !1110, line: 1507, type: !557)
!7850 = !DILocation(line: 0, scope: !7847)
!7851 = !DILocation(line: 1509, column: 65, scope: !7847)
!7852 = !DILocation(line: 1509, column: 44, scope: !7847)
!7853 = !DILocation(line: 1509, column: 32, scope: !7847)
!7854 = !DILocation(line: 1509, column: 3, scope: !7847)
!7855 = !DILocation(line: 1509, column: 39, scope: !7847)
!7856 = !DILocation(line: 1510, column: 1, scope: !7847)
!7857 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2763, file: !2763, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7858)
!7858 = !{!7859, !7860}
!7859 = !DILocalVariable(name: "irq_number", scope: !7857, file: !2763, line: 81, type: !556)
!7860 = !DILocalVariable(name: "mask", scope: !7857, file: !2763, line: 82, type: !61)
!7861 = !DILocation(line: 82, column: 21, scope: !7857)
!7862 = !DILocation(line: 0, scope: !7857)
!7863 = !DILocation(line: 84, column: 5, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7857, file: !2763, line: 84, column: 5)
!7865 = !DILocation(line: 85, column: 9, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7867, file: !2763, line: 84, column: 85)
!7867 = distinct !DILexicalBlock(scope: !7864, file: !2763, line: 84, column: 5)
!7868 = !DILocation(line: 84, column: 81, scope: !7867)
!7869 = !DILocation(line: 84, column: 53, scope: !7867)
!7870 = distinct !{!7870, !7863, !7871}
!7871 = !DILocation(line: 86, column: 5, scope: !7864)
!7872 = !DILocation(line: 87, column: 5, scope: !7857)
!7873 = !DILocation(line: 88, column: 1, scope: !7857)
!7874 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1110, file: !1110, line: 1494, type: !7584, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7875)
!7875 = !{!7876}
!7876 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7874, file: !1110, line: 1494, type: !557)
!7877 = !DILocation(line: 0, scope: !7874)
!7878 = !DILocation(line: 1497, column: 91, scope: !7874)
!7879 = !DILocation(line: 1497, column: 61, scope: !7874)
!7880 = !DILocation(line: 1497, column: 40, scope: !7874)
!7881 = !DILocation(line: 1497, column: 3, scope: !7874)
!7882 = !DILocation(line: 1497, column: 46, scope: !7874)
!7883 = !DILocation(line: 1498, column: 1, scope: !7874)
!7884 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2763, file: !2763, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7885)
!7885 = !{!7886}
!7886 = !DILocalVariable(name: "irq_number", scope: !7884, file: !2763, line: 92, type: !556)
!7887 = !DILocation(line: 0, scope: !7884)
!7888 = !DILocation(line: 93, column: 5, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7884, file: !2763, line: 93, column: 5)
!7890 = !DILocation(line: 94, column: 9, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7892, file: !2763, line: 93, column: 85)
!7892 = distinct !DILexicalBlock(scope: !7889, file: !2763, line: 93, column: 5)
!7893 = !DILocation(line: 93, column: 81, scope: !7892)
!7894 = !DILocation(line: 93, column: 53, scope: !7892)
!7895 = distinct !{!7895, !7888, !7896}
!7896 = !DILocation(line: 95, column: 5, scope: !7889)
!7897 = !DILocation(line: 96, column: 1, scope: !7884)
!7898 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1110, file: !1110, line: 1547, type: !7584, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7899)
!7899 = !{!7900}
!7900 = !DILocalVariable(name: "IRQn", arg: 1, scope: !7898, file: !1110, line: 1547, type: !557)
!7901 = !DILocation(line: 0, scope: !7898)
!7902 = !DILocation(line: 1549, column: 65, scope: !7898)
!7903 = !DILocation(line: 1549, column: 44, scope: !7898)
!7904 = !DILocation(line: 1549, column: 32, scope: !7898)
!7905 = !DILocation(line: 1549, column: 3, scope: !7898)
!7906 = !DILocation(line: 1549, column: 39, scope: !7898)
!7907 = !DILocation(line: 1550, column: 1, scope: !7898)
!7908 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2763, file: !2763, line: 98, type: !7571, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7909)
!7909 = !{!7910}
!7910 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7908, file: !2763, line: 98, type: !556)
!7911 = !DILocation(line: 0, scope: !7908)
!7912 = !DILocation(line: 100, column: 24, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7908, file: !2763, line: 100, column: 9)
!7914 = !DILocation(line: 104, column: 5, scope: !7908)
!7915 = !DILocation(line: 105, column: 5, scope: !7908)
!7916 = !DILocation(line: 106, column: 1, scope: !7908)
!7917 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2763, file: !2763, line: 45, type: !554, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !7918)
!7918 = !{!7919}
!7919 = !DILocalVariable(name: "irq_number", arg: 1, scope: !7917, file: !2763, line: 45, type: !556)
!7920 = !DILocation(line: 0, scope: !7917)
!7921 = !DILocation(line: 47, column: 54, scope: !7917)
!7922 = !DILocation(line: 47, column: 16, scope: !7917)
!7923 = !DILocation(line: 445, column: 3, scope: !7924, inlinedAt: !7925)
!7924 = distinct !DISubprogram(name: "__DSB", scope: !2875, file: !2875, line: 443, type: !291, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !293)
!7925 = distinct !DILocation(line: 48, column: 5, scope: !7917)
!7926 = !{i64 430378}
!7927 = !DILocation(line: 49, column: 1, scope: !7917)
!7928 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2763, file: !2763, line: 114, type: !4009, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2762, retainedNodes: !293)
!7929 = !DILocation(line: 116, column: 19, scope: !7928)
!7930 = !DILocation(line: 116, column: 24, scope: !7928)
!7931 = !DILocation(line: 116, column: 5, scope: !7928)
!7932 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1194, file: !1194, line: 71, type: !7933, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !7935)
!7933 = !DISubroutineType(types: !7934)
!7934 = !{null, !88, !61}
!7935 = !{!7936, !7937, !7938, !8032, !8033, !8034}
!7936 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7932, file: !1194, line: 71, type: !88)
!7937 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !7932, file: !1194, line: 71, type: !61)
!7938 = !DILocalVariable(name: "D", scope: !7932, file: !1194, line: 73, type: !7939)
!7939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7940, size: 32)
!7940 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1387, line: 193, baseType: !7941)
!7941 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1387, line: 134, size: 1824, elements: !7942)
!7942 = !{!7943, !7944, !7945, !7951, !7957, !7958, !7965, !7966, !7973, !7974, !7975, !7976, !7983, !7984, !8014, !8015, !8016, !8017, !8018, !8019, !8020, !8021, !8022, !8023, !8024, !8025, !8026, !8027, !8028, !8029, !8030, !8031}
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !7941, file: !1387, line: 136, baseType: !61, size: 32)
!7944 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !7941, file: !1387, line: 137, baseType: !996, size: 32, offset: 32)
!7945 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !7941, file: !1387, line: 138, baseType: !7946, size: 32, offset: 64)
!7946 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1471, line: 56, baseType: !7947)
!7947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7948, size: 32)
!7948 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1471, line: 54, size: 8, elements: !7949)
!7949 = !{!7950}
!7950 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7948, file: !1471, line: 55, baseType: !381, size: 8)
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !7941, file: !1387, line: 139, baseType: !7952, size: 32, offset: 96)
!7952 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1471, line: 46, baseType: !7953)
!7953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7954, size: 32)
!7954 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1471, line: 44, size: 8, elements: !7955)
!7955 = !{!7956}
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7954, file: !1471, line: 45, baseType: !381, size: 8)
!7957 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !7941, file: !1387, line: 140, baseType: !1483, size: 8, offset: 128)
!7958 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !7941, file: !1387, line: 143, baseType: !7959, size: 32, offset: 160)
!7959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7960, size: 32)
!7960 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1489, line: 146, baseType: !7961)
!7961 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 143, size: 64, elements: !7962)
!7962 = !{!7963, !7964}
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !7961, file: !1489, line: 144, baseType: !61, size: 32)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !7961, file: !1489, line: 145, baseType: !61, size: 32, offset: 32)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !7941, file: !1387, line: 144, baseType: !996, size: 32, offset: 192)
!7966 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !7941, file: !1387, line: 145, baseType: !7967, size: 32, offset: 224)
!7967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7968, size: 32)
!7968 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1489, line: 152, baseType: !7969)
!7969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 149, size: 64, elements: !7970)
!7970 = !{!7971, !7972}
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !7969, file: !1489, line: 150, baseType: !61, size: 32)
!7972 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !7969, file: !1489, line: 151, baseType: !61, size: 32, offset: 32)
!7973 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !7941, file: !1387, line: 146, baseType: !996, size: 32, offset: 256)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !7941, file: !1387, line: 147, baseType: !61, size: 32, offset: 288)
!7975 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !7941, file: !1387, line: 148, baseType: !996, size: 32, offset: 320)
!7976 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !7941, file: !1387, line: 151, baseType: !7977, size: 1024, offset: 352)
!7977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7978, size: 1024, elements: !1512)
!7978 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1489, line: 170, baseType: !7979)
!7979 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 167, size: 64, elements: !7980)
!7980 = !{!7981, !7982}
!7981 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !7979, file: !1489, line: 168, baseType: !61, size: 32)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !7979, file: !1489, line: 169, baseType: !61, size: 32, offset: 32)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !7941, file: !1387, line: 155, baseType: !1514, size: 32, offset: 1376)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !7941, file: !1387, line: 156, baseType: !7985, size: 32, offset: 1408)
!7985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7986, size: 32)
!7986 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1387, line: 124, baseType: !7987)
!7987 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1387, line: 90, size: 200, elements: !7988)
!7988 = !{!7989, !7990, !7991, !7992, !7993, !7994, !7995, !7996, !7997, !7998, !7999, !8000, !8001, !8002, !8003, !8004, !8005, !8006, !8007, !8008, !8009, !8010, !8011, !8012, !8013}
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !7987, file: !1387, line: 91, baseType: !381, size: 8)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !7987, file: !1387, line: 92, baseType: !381, size: 8, offset: 8)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !7987, file: !1387, line: 94, baseType: !381, size: 8, offset: 16)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !7987, file: !1387, line: 95, baseType: !381, size: 8, offset: 24)
!7993 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !7987, file: !1387, line: 96, baseType: !381, size: 8, offset: 32)
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !7987, file: !1387, line: 98, baseType: !381, size: 8, offset: 40)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !7987, file: !1387, line: 99, baseType: !381, size: 8, offset: 48)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !7987, file: !1387, line: 100, baseType: !381, size: 8, offset: 56)
!7997 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !7987, file: !1387, line: 101, baseType: !381, size: 8, offset: 64)
!7998 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !7987, file: !1387, line: 103, baseType: !381, size: 8, offset: 72)
!7999 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !7987, file: !1387, line: 104, baseType: !381, size: 8, offset: 80)
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !7987, file: !1387, line: 106, baseType: !381, size: 8, offset: 88)
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !7987, file: !1387, line: 107, baseType: !381, size: 8, offset: 96)
!8002 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !7987, file: !1387, line: 108, baseType: !381, size: 8, offset: 104)
!8003 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !7987, file: !1387, line: 109, baseType: !381, size: 8, offset: 112)
!8004 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !7987, file: !1387, line: 110, baseType: !381, size: 8, offset: 120)
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !7987, file: !1387, line: 111, baseType: !381, size: 8, offset: 128)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !7987, file: !1387, line: 112, baseType: !381, size: 8, offset: 136)
!8007 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !7987, file: !1387, line: 114, baseType: !381, size: 8, offset: 144)
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !7987, file: !1387, line: 115, baseType: !381, size: 8, offset: 152)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !7987, file: !1387, line: 118, baseType: !381, size: 8, offset: 160)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7987, file: !1387, line: 119, baseType: !381, size: 8, offset: 168)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !7987, file: !1387, line: 120, baseType: !381, size: 8, offset: 176)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !7987, file: !1387, line: 121, baseType: !381, size: 8, offset: 184)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7987, file: !1387, line: 122, baseType: !381, size: 8, offset: 192)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !7941, file: !1387, line: 157, baseType: !61, size: 32, offset: 1440)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !7941, file: !1387, line: 158, baseType: !1263, size: 16, offset: 1472)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !7941, file: !1387, line: 159, baseType: !1263, size: 16, offset: 1488)
!8017 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !7941, file: !1387, line: 163, baseType: !1263, size: 16, offset: 1504)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !7941, file: !1387, line: 164, baseType: !1263, size: 16, offset: 1520)
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !7941, file: !1387, line: 167, baseType: !381, size: 8, offset: 1536)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !7941, file: !1387, line: 168, baseType: !1553, size: 24, offset: 1544)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !7941, file: !1387, line: 169, baseType: !381, size: 8, offset: 1568)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !7941, file: !1387, line: 170, baseType: !381, size: 8, offset: 1576)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !7941, file: !1387, line: 173, baseType: !1263, size: 16, offset: 1584)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !7941, file: !1387, line: 174, baseType: !61, size: 32, offset: 1600)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !7941, file: !1387, line: 175, baseType: !61, size: 32, offset: 1632)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !7941, file: !1387, line: 178, baseType: !91, size: 8, offset: 1664)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !7941, file: !1387, line: 179, baseType: !91, size: 8, offset: 1672)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !7941, file: !1387, line: 182, baseType: !1564, size: 32, offset: 1696)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7941, file: !1387, line: 186, baseType: !1564, size: 32, offset: 1728)
!8030 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7941, file: !1387, line: 187, baseType: !1569, size: 32, offset: 1760)
!8031 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !7941, file: !1387, line: 188, baseType: !1569, size: 32, offset: 1792)
!8032 = !DILocalVariable(name: "i", scope: !7932, file: !1194, line: 74, type: !61)
!8033 = !DILocalVariable(name: "data_cnt", scope: !7932, file: !1194, line: 74, type: !61)
!8034 = !DILocalVariable(name: "p_data", scope: !7932, file: !1194, line: 75, type: !1231)
!8035 = !DILocation(line: 0, scope: !7932)
!8036 = !DILocation(line: 77, column: 16, scope: !7932)
!8037 = !DILocation(line: 79, column: 53, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8039, file: !1194, line: 79, column: 5)
!8039 = distinct !DILexicalBlock(scope: !7932, file: !1194, line: 79, column: 5)
!8040 = !DILocation(line: 79, column: 5, scope: !8039)
!8041 = !DILocation(line: 79, column: 41, scope: !8039)
!8042 = !DILocation(line: 77, column: 47, scope: !7932)
!8043 = !DILocation(line: 80, column: 13, scope: !8044)
!8044 = distinct !DILexicalBlock(scope: !8045, file: !1194, line: 80, column: 13)
!8045 = distinct !DILexicalBlock(scope: !8038, file: !1194, line: 79, column: 80)
!8046 = !DILocation(line: 80, column: 21, scope: !8044)
!8047 = !DILocation(line: 80, column: 13, scope: !8045)
!8048 = !DILocation(line: 81, column: 13, scope: !8049)
!8049 = distinct !DILexicalBlock(scope: !8050, file: !1194, line: 81, column: 13)
!8050 = distinct !DILexicalBlock(scope: !8051, file: !1194, line: 81, column: 13)
!8051 = distinct !DILexicalBlock(scope: !8052, file: !1194, line: 81, column: 13)
!8052 = distinct !DILexicalBlock(scope: !8044, file: !1194, line: 80, column: 36)
!8053 = !DILocation(line: 79, column: 65, scope: !8038)
!8054 = !DILocation(line: 79, column: 70, scope: !8038)
!8055 = distinct !{!8055, !8040, !8056}
!8056 = !DILocation(line: 84, column: 5, scope: !8039)
!8057 = !DILocation(line: 85, column: 1, scope: !7932)
!8058 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1194, file: !1194, line: 93, type: !3757, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8059)
!8059 = !{!8060, !8061}
!8060 = !DILocalVariable(name: "num", arg: 1, scope: !8058, file: !1194, line: 93, type: !61)
!8061 = !DILocalVariable(name: "ret", scope: !8058, file: !1194, line: 95, type: !18)
!8062 = !DILocation(line: 0, scope: !8058)
!8063 = !DILocation(line: 100, column: 9, scope: !8058)
!8064 = !DILocation(line: 102, column: 5, scope: !8058)
!8065 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1194, file: !1194, line: 110, type: !8066, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8069)
!8066 = !DISubroutineType(types: !8067)
!8067 = !{null, !8068}
!8068 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1263)
!8069 = !{!8070, !8071}
!8070 = !DILocalVariable(name: "CS", arg: 1, scope: !8065, file: !1194, line: 110, type: !8068)
!8071 = !DILocalVariable(name: "val", scope: !8065, file: !1194, line: 112, type: !61)
!8072 = !DILocation(line: 0, scope: !8065)
!8073 = !DILocation(line: 114, column: 5, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8075, file: !1194, line: 114, column: 5)
!8075 = distinct !DILexicalBlock(scope: !8065, file: !1194, line: 114, column: 5)
!8076 = !DILocation(line: 116, column: 16, scope: !8065)
!8077 = !DILocation(line: 117, column: 9, scope: !8065)
!8078 = !DILocation(line: 122, column: 13, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !1194, line: 121, column: 27)
!8080 = distinct !DILexicalBlock(scope: !8081, file: !1194, line: 121, column: 16)
!8081 = distinct !DILexicalBlock(scope: !8065, file: !1194, line: 117, column: 9)
!8082 = !DILocation(line: 127, column: 9, scope: !8083)
!8083 = distinct !DILexicalBlock(scope: !8084, file: !1194, line: 127, column: 9)
!8084 = distinct !DILexicalBlock(scope: !8085, file: !1194, line: 127, column: 9)
!8085 = distinct !DILexicalBlock(scope: !8086, file: !1194, line: 127, column: 9)
!8086 = distinct !DILexicalBlock(scope: !8080, file: !1194, line: 125, column: 12)
!8087 = !DILocation(line: 0, scope: !8081)
!8088 = !DILocation(line: 134, column: 5, scope: !8065)
!8089 = !DILocation(line: 134, column: 19, scope: !8065)
!8090 = !DILocation(line: 134, column: 35, scope: !8065)
!8091 = !DILocation(line: 134, column: 12, scope: !8065)
!8092 = distinct !{!8092, !8088, !8093}
!8093 = !DILocation(line: 134, column: 57, scope: !8065)
!8094 = !DILocation(line: 135, column: 19, scope: !8065)
!8095 = !DILocation(line: 135, column: 34, scope: !8065)
!8096 = !DILocation(line: 135, column: 12, scope: !8065)
!8097 = !DILocation(line: 135, column: 5, scope: !8065)
!8098 = distinct !{!8098, !8097, !8099}
!8099 = !DILocation(line: 135, column: 50, scope: !8065)
!8100 = !DILocation(line: 130, column: 9, scope: !8065)
!8101 = !DILocation(line: 138, column: 24, scope: !8065)
!8102 = !DILocation(line: 139, column: 1, scope: !8065)
!8103 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1194, file: !1194, line: 148, type: !8066, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8104)
!8104 = !{!8105, !8106}
!8105 = !DILocalVariable(name: "CS", arg: 1, scope: !8103, file: !1194, line: 148, type: !8068)
!8106 = !DILocalVariable(name: "val", scope: !8103, file: !1194, line: 150, type: !61)
!8107 = !DILocation(line: 0, scope: !8103)
!8108 = !DILocation(line: 153, column: 16, scope: !8103)
!8109 = !DILocation(line: 154, column: 9, scope: !8103)
!8110 = !DILocation(line: 155, column: 24, scope: !8103)
!8111 = !DILocation(line: 158, column: 5, scope: !8103)
!8112 = !DILocation(line: 158, column: 18, scope: !8103)
!8113 = !DILocation(line: 158, column: 32, scope: !8103)
!8114 = distinct !{!8114, !8111, !8115}
!8115 = !DILocation(line: 158, column: 49, scope: !8103)
!8116 = !DILocation(line: 163, column: 16, scope: !8103)
!8117 = !DILocation(line: 164, column: 9, scope: !8103)
!8118 = !DILocation(line: 165, column: 24, scope: !8103)
!8119 = !DILocation(line: 168, column: 5, scope: !8103)
!8120 = !DILocation(line: 168, column: 18, scope: !8103)
!8121 = !DILocation(line: 168, column: 32, scope: !8103)
!8122 = distinct !{!8122, !8119, !8123}
!8123 = !DILocation(line: 168, column: 46, scope: !8103)
!8124 = !DILocation(line: 174, column: 10, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !8103, file: !1194, line: 174, column: 9)
!8126 = !DILocation(line: 174, column: 25, scope: !8125)
!8127 = !DILocation(line: 174, column: 9, scope: !8103)
!8128 = !DILocation(line: 175, column: 9, scope: !8129)
!8129 = distinct !DILexicalBlock(scope: !8130, file: !1194, line: 175, column: 9)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !1194, line: 175, column: 9)
!8131 = distinct !DILexicalBlock(scope: !8125, file: !1194, line: 174, column: 36)
!8132 = !DILocation(line: 176, column: 5, scope: !8131)
!8133 = !DILocation(line: 179, column: 1, scope: !8103)
!8134 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1194, file: !1194, line: 186, type: !8135, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8137)
!8135 = !DISubroutineType(types: !8136)
!8136 = !{!61, !8068}
!8137 = !{!8138, !8139, !8140}
!8138 = !DILocalVariable(name: "CS", arg: 1, scope: !8134, file: !1194, line: 186, type: !8068)
!8139 = !DILocalVariable(name: "val", scope: !8134, file: !1194, line: 188, type: !61)
!8140 = !DILocalVariable(name: "misc_ctl", scope: !8134, file: !1194, line: 189, type: !61)
!8141 = !DILocation(line: 0, scope: !8134)
!8142 = !DILocation(line: 204, column: 16, scope: !8134)
!8143 = !DILocation(line: 208, column: 12, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8134, file: !1194, line: 208, column: 9)
!8145 = !DILocation(line: 208, column: 9, scope: !8134)
!8146 = !DILocation(line: 212, column: 20, scope: !8134)
!8147 = !DILocation(line: 215, column: 1, scope: !8134)
!8148 = !DILocation(line: 215, column: 15, scope: !8134)
!8149 = !DILocation(line: 215, column: 29, scope: !8134)
!8150 = !DILocation(line: 215, column: 8, scope: !8134)
!8151 = distinct !{!8151, !8147, !8152}
!8152 = !DILocation(line: 215, column: 46, scope: !8134)
!8153 = !DILocation(line: 216, column: 22, scope: !8134)
!8154 = !DILocation(line: 216, column: 36, scope: !8134)
!8155 = !DILocation(line: 216, column: 9, scope: !8134)
!8156 = distinct !{!8156, !8155, !8157}
!8157 = !DILocation(line: 216, column: 47, scope: !8134)
!8158 = !DILocation(line: 218, column: 13, scope: !8134)
!8159 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1194, file: !1194, line: 227, type: !8066, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8160)
!8160 = !{!8161}
!8161 = !DILocalVariable(name: "CS", arg: 1, scope: !8159, file: !1194, line: 227, type: !8068)
!8162 = !DILocation(line: 0, scope: !8159)
!8163 = !DILocation(line: 235, column: 5, scope: !8159)
!8164 = !DILocation(line: 236, column: 5, scope: !8159)
!8165 = !DILocation(line: 238, column: 1, scope: !8159)
!8166 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1194, file: !1194, line: 249, type: !8167, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8169)
!8167 = !DISubroutineType(types: !8168)
!8168 = !{null, !8068, !1006}
!8169 = !{!8170, !8171, !8172, !8173, !8174}
!8170 = !DILocalVariable(name: "CS", arg: 1, scope: !8166, file: !1194, line: 249, type: !8068)
!8171 = !DILocalVariable(name: "cmd", arg: 2, scope: !8166, file: !1194, line: 249, type: !1006)
!8172 = !DILocalVariable(name: "cmdi", scope: !8166, file: !1194, line: 251, type: !61)
!8173 = !DILocalVariable(name: "cmdo", scope: !8166, file: !1194, line: 251, type: !61)
!8174 = !DILocalVariable(name: "len", scope: !8166, file: !1194, line: 252, type: !381)
!8175 = !DILocation(line: 0, scope: !8166)
!8176 = !DILocation(line: 254, column: 46, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8178, file: !1194, line: 254, column: 5)
!8178 = distinct !DILexicalBlock(scope: !8166, file: !1194, line: 254, column: 5)
!8179 = !DILocation(line: 254, column: 5, scope: !8178)
!8180 = !DILocation(line: 255, column: 22, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8177, file: !1194, line: 254, column: 103)
!8182 = !DILocation(line: 255, column: 59, scope: !8181)
!8183 = !DILocation(line: 255, column: 51, scope: !8181)
!8184 = !DILocation(line: 254, column: 65, scope: !8177)
!8185 = !DILocation(line: 254, column: 97, scope: !8177)
!8186 = distinct !{!8186, !8179, !8187}
!8187 = !DILocation(line: 256, column: 5, scope: !8178)
!8188 = !DILocation(line: 258, column: 9, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8166, file: !1194, line: 258, column: 9)
!8190 = !DILocation(line: 262, column: 5, scope: !8166)
!8191 = !DILocation(line: 263, column: 33, scope: !8166)
!8192 = !DILocation(line: 264, column: 25, scope: !8166)
!8193 = !DILocation(line: 265, column: 24, scope: !8166)
!8194 = !DILocation(line: 266, column: 5, scope: !8166)
!8195 = !DILocation(line: 268, column: 5, scope: !8166)
!8196 = !DILocation(line: 269, column: 1, scope: !8166)
!8197 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1194, file: !1194, line: 281, type: !8198, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8200)
!8198 = !DISubroutineType(types: !8199)
!8199 = !{null, !8068, !6475, !1006, !1006}
!8200 = !{!8201, !8202, !8203, !8204, !8205, !8206}
!8201 = !DILocalVariable(name: "CS", arg: 1, scope: !8197, file: !1194, line: 281, type: !8068)
!8202 = !DILocalVariable(name: "cmd", arg: 2, scope: !8197, file: !1194, line: 281, type: !6475)
!8203 = !DILocalVariable(name: "address", arg: 3, scope: !8197, file: !1194, line: 281, type: !1006)
!8204 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !8197, file: !1194, line: 281, type: !1006)
!8205 = !DILocalVariable(name: "cmd1", scope: !8197, file: !1194, line: 283, type: !61)
!8206 = !DILocalVariable(name: "cmd2", scope: !8197, file: !1194, line: 283, type: !61)
!8207 = !DILocation(line: 0, scope: !8197)
!8208 = !DILocation(line: 285, column: 12, scope: !8197)
!8209 = !DILocation(line: 287, column: 23, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8197, file: !1194, line: 287, column: 9)
!8211 = !DILocation(line: 287, column: 9, scope: !8197)
!8212 = !DILocation(line: 288, column: 22, scope: !8213)
!8213 = distinct !DILexicalBlock(scope: !8210, file: !1194, line: 287, column: 31)
!8214 = !DILocation(line: 288, column: 55, scope: !8213)
!8215 = !DILocation(line: 288, column: 53, scope: !8213)
!8216 = !DILocation(line: 289, column: 5, scope: !8213)
!8217 = !DILocation(line: 290, column: 22, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8210, file: !1194, line: 289, column: 12)
!8219 = !DILocation(line: 290, column: 53, scope: !8218)
!8220 = !DILocation(line: 290, column: 51, scope: !8218)
!8221 = !DILocation(line: 291, column: 21, scope: !8218)
!8222 = !DILocation(line: 0, scope: !8210)
!8223 = !DILocation(line: 294, column: 33, scope: !8197)
!8224 = !DILocation(line: 295, column: 38, scope: !8197)
!8225 = !DILocation(line: 296, column: 41, scope: !8197)
!8226 = !DILocation(line: 296, column: 25, scope: !8197)
!8227 = !DILocation(line: 297, column: 24, scope: !8197)
!8228 = !DILocation(line: 299, column: 5, scope: !8197)
!8229 = !DILocation(line: 300, column: 5, scope: !8197)
!8230 = !DILocation(line: 302, column: 1, scope: !8197)
!8231 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1194, file: !1194, line: 312, type: !8232, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8234)
!8232 = !DISubroutineType(types: !8233)
!8233 = !{!61, !1006, !1006}
!8234 = !{!8235, !8236}
!8235 = !DILocalVariable(name: "cmd", arg: 1, scope: !8231, file: !1194, line: 312, type: !1006)
!8236 = !DILocalVariable(name: "address", arg: 2, scope: !8231, file: !1194, line: 312, type: !1006)
!8237 = !DILocation(line: 0, scope: !8231)
!8238 = !DILocation(line: 314, column: 14, scope: !8231)
!8239 = !DILocation(line: 314, column: 44, scope: !8231)
!8240 = !DILocation(line: 314, column: 82, scope: !8231)
!8241 = !DILocation(line: 314, column: 75, scope: !8231)
!8242 = !DILocation(line: 314, column: 5, scope: !8231)
!8243 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1194, file: !1194, line: 332, type: !8244, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8247)
!8244 = !DISubroutineType(types: !8245)
!8245 = !{!61, !1006, !1006, !8246, !1231}
!8246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 32)
!8247 = !{!8248, !8249, !8250, !8251, !8252, !8260, !8261, !8262}
!8248 = !DILocalVariable(name: "cmd", arg: 1, scope: !8243, file: !1194, line: 332, type: !1006)
!8249 = !DILocalVariable(name: "address", arg: 2, scope: !8243, file: !1194, line: 332, type: !1006)
!8250 = !DILocalVariable(name: "p_data", arg: 3, scope: !8243, file: !1194, line: 332, type: !8246)
!8251 = !DILocalVariable(name: "length", arg: 4, scope: !8243, file: !1194, line: 332, type: !1231)
!8252 = !DILocalVariable(name: "tmp", scope: !8243, file: !1194, line: 334, type: !8253)
!8253 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1387, line: 202, baseType: !8254)
!8254 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1387, line: 198, size: 32, elements: !8255)
!8255 = !{!8256, !8257, !8259}
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !8254, file: !1387, line: 199, baseType: !61, size: 32)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !8254, file: !1387, line: 200, baseType: !8258, size: 32)
!8258 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1263, size: 32, elements: !508)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !8254, file: !1387, line: 201, baseType: !732, size: 32)
!8260 = !DILocalVariable(name: "cmd1", scope: !8243, file: !1194, line: 335, type: !61)
!8261 = !DILocalVariable(name: "cmd2", scope: !8243, file: !1194, line: 335, type: !61)
!8262 = !DILocalVariable(name: "i", scope: !8243, file: !1194, line: 336, type: !61)
!8263 = !DILocation(line: 0, scope: !8243)
!8264 = !DILocation(line: 334, column: 5, scope: !8243)
!8265 = !DILocation(line: 334, column: 16, scope: !8243)
!8266 = !DILocation(line: 338, column: 12, scope: !8243)
!8267 = !DILocation(line: 340, column: 17, scope: !8243)
!8268 = !DILocation(line: 342, column: 17, scope: !8243)
!8269 = !DILocation(line: 342, column: 9, scope: !8243)
!8270 = !DILocation(line: 342, column: 15, scope: !8243)
!8271 = !DILocation(line: 344, column: 22, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8273, file: !1194, line: 343, column: 29)
!8273 = distinct !DILexicalBlock(scope: !8274, file: !1194, line: 343, column: 5)
!8274 = distinct !DILexicalBlock(scope: !8243, file: !1194, line: 343, column: 5)
!8275 = !DILocation(line: 343, column: 5, scope: !8274)
!8276 = !DILocation(line: 344, column: 21, scope: !8272)
!8277 = !DILocation(line: 344, column: 9, scope: !8272)
!8278 = !DILocation(line: 344, column: 19, scope: !8272)
!8279 = !DILocation(line: 345, column: 18, scope: !8272)
!8280 = !DILocation(line: 343, column: 25, scope: !8273)
!8281 = !DILocation(line: 343, column: 19, scope: !8273)
!8282 = distinct !{!8282, !8275, !8283}
!8283 = !DILocation(line: 346, column: 5, scope: !8274)
!8284 = !DILocation(line: 347, column: 16, scope: !8243)
!8285 = !DILocation(line: 348, column: 16, scope: !8243)
!8286 = !DILocation(line: 348, column: 15, scope: !8243)
!8287 = !DILocation(line: 339, column: 17, scope: !8243)
!8288 = !DILocation(line: 339, column: 52, scope: !8243)
!8289 = !DILocation(line: 339, column: 45, scope: !8243)
!8290 = !DILocation(line: 348, column: 13, scope: !8243)
!8291 = !DILocation(line: 349, column: 38, scope: !8243)
!8292 = !DILocation(line: 351, column: 1, scope: !8243)
!8293 = !DILocation(line: 350, column: 5, scope: !8243)
!8294 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1194, file: !1194, line: 367, type: !8295, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8297)
!8295 = !DISubroutineType(types: !8296)
!8296 = !{null, !61, !88, !1171}
!8297 = !{!8298, !8299, !8300, !8301, !8302, !8303}
!8298 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !8294, file: !1194, line: 367, type: !61)
!8299 = !DILocalVariable(name: "buff", arg: 2, scope: !8294, file: !1194, line: 367, type: !88)
!8300 = !DILocalVariable(name: "length", arg: 3, scope: !8294, file: !1194, line: 367, type: !1171)
!8301 = !DILocalVariable(name: "i", scope: !8294, file: !1194, line: 369, type: !61)
!8302 = !DILocalVariable(name: "p_data", scope: !8294, file: !1194, line: 370, type: !996)
!8303 = !DILocalVariable(name: "tmp", scope: !8294, file: !1194, line: 371, type: !8253)
!8304 = !DILocation(line: 0, scope: !8294)
!8305 = !DILocation(line: 371, column: 5, scope: !8294)
!8306 = !DILocation(line: 371, column: 13, scope: !8294)
!8307 = !DILocation(line: 373, column: 18, scope: !8294)
!8308 = !DILocation(line: 376, column: 15, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8294, file: !1194, line: 376, column: 9)
!8310 = !DILocation(line: 376, column: 30, scope: !8309)
!8311 = !DILocation(line: 376, column: 11, scope: !8309)
!8312 = !DILocation(line: 376, column: 9, scope: !8294)
!8313 = !DILocation(line: 377, column: 23, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !8315, file: !1194, line: 377, column: 9)
!8315 = distinct !DILexicalBlock(scope: !8316, file: !1194, line: 377, column: 9)
!8316 = distinct !DILexicalBlock(scope: !8309, file: !1194, line: 376, column: 41)
!8317 = !DILocation(line: 377, column: 9, scope: !8315)
!8318 = !DILocation(line: 378, column: 13, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8314, file: !1194, line: 377, column: 80)
!8320 = !DILocation(line: 377, column: 41, scope: !8314)
!8321 = !DILocation(line: 377, column: 54, scope: !8314)
!8322 = !DILocation(line: 377, column: 67, scope: !8314)
!8323 = distinct !{!8323, !8317, !8324}
!8324 = !DILocation(line: 379, column: 9, scope: !8315)
!8325 = !DILocation(line: 382, column: 37, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8309, file: !1194, line: 382, column: 14)
!8327 = !DILocation(line: 382, column: 16, scope: !8326)
!8328 = !DILocation(line: 0, scope: !8326)
!8329 = !DILocation(line: 382, column: 14, scope: !8309)
!8330 = !DILocation(line: 391, column: 9, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !1194, line: 391, column: 9)
!8332 = distinct !DILexicalBlock(scope: !8326, file: !1194, line: 390, column: 13)
!8333 = !DILocation(line: 383, column: 9, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !1194, line: 383, column: 9)
!8335 = distinct !DILexicalBlock(scope: !8326, file: !1194, line: 382, column: 49)
!8336 = !DILocation(line: 384, column: 26, scope: !8337)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !1194, line: 383, column: 80)
!8338 = distinct !DILexicalBlock(scope: !8334, file: !1194, line: 383, column: 9)
!8339 = !DILocation(line: 384, column: 24, scope: !8337)
!8340 = !DILocation(line: 385, column: 47, scope: !8337)
!8341 = !DILocation(line: 385, column: 26, scope: !8337)
!8342 = !DILocation(line: 385, column: 24, scope: !8337)
!8343 = !DILocation(line: 386, column: 13, scope: !8337)
!8344 = !DILocation(line: 383, column: 41, scope: !8338)
!8345 = !DILocation(line: 383, column: 54, scope: !8338)
!8346 = !DILocation(line: 383, column: 67, scope: !8338)
!8347 = !DILocation(line: 383, column: 23, scope: !8338)
!8348 = distinct !{!8348, !8333, !8349}
!8349 = !DILocation(line: 387, column: 9, scope: !8334)
!8350 = !DILocation(line: 392, column: 13, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8352, file: !1194, line: 392, column: 13)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !1194, line: 391, column: 61)
!8353 = distinct !DILexicalBlock(scope: !8331, file: !1194, line: 391, column: 9)
!8354 = !DILocation(line: 393, column: 36, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8356, file: !1194, line: 392, column: 51)
!8356 = distinct !DILexicalBlock(scope: !8351, file: !1194, line: 392, column: 13)
!8357 = !DILocation(line: 393, column: 29, scope: !8355)
!8358 = !DILocation(line: 393, column: 17, scope: !8355)
!8359 = !DILocation(line: 393, column: 27, scope: !8355)
!8360 = !DILocation(line: 392, column: 47, scope: !8356)
!8361 = !DILocation(line: 392, column: 27, scope: !8356)
!8362 = !DILocation(line: 392, column: 31, scope: !8356)
!8363 = distinct !{!8363, !8350, !8364}
!8364 = !DILocation(line: 394, column: 13, scope: !8351)
!8365 = !DILocation(line: 395, column: 13, scope: !8352)
!8366 = !DILocation(line: 391, column: 41, scope: !8353)
!8367 = !DILocation(line: 391, column: 54, scope: !8353)
!8368 = !DILocation(line: 391, column: 23, scope: !8353)
!8369 = distinct !{!8369, !8330, !8370}
!8370 = !DILocation(line: 396, column: 9, scope: !8331)
!8371 = !DILocation(line: 398, column: 1, scope: !8294)
!8372 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1194, file: !1194, line: 414, type: !8373, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8375)
!8373 = !DISubroutineType(types: !8374)
!8374 = !{null, !8068, !6474, !996, !8068, !8068}
!8375 = !{!8376, !8377, !8378, !8379, !8380, !8381, !8382, !8383, !8384, !8385}
!8376 = !DILocalVariable(name: "CS", arg: 1, scope: !8372, file: !1194, line: 414, type: !8068)
!8377 = !DILocalVariable(name: "cmd", arg: 2, scope: !8372, file: !1194, line: 414, type: !6474)
!8378 = !DILocalVariable(name: "data", arg: 3, scope: !8372, file: !1194, line: 414, type: !996)
!8379 = !DILocalVariable(name: "outl", arg: 4, scope: !8372, file: !1194, line: 414, type: !8068)
!8380 = !DILocalVariable(name: "inl", arg: 5, scope: !8372, file: !1194, line: 414, type: !8068)
!8381 = !DILocalVariable(name: "tmp", scope: !8372, file: !1194, line: 416, type: !61)
!8382 = !DILocalVariable(name: "i", scope: !8372, file: !1194, line: 417, type: !61)
!8383 = !DILocalVariable(name: "j", scope: !8372, file: !1194, line: 417, type: !61)
!8384 = !DILocalVariable(name: "p_data", scope: !8372, file: !1194, line: 418, type: !996)
!8385 = !DILocalVariable(name: "p_tmp", scope: !8372, file: !1194, line: 418, type: !996)
!8386 = !DILocation(line: 0, scope: !8372)
!8387 = !DILocation(line: 416, column: 5, scope: !8372)
!8388 = !DILocation(line: 422, column: 60, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8390, file: !1194, line: 422, column: 5)
!8390 = distinct !DILexicalBlock(scope: !8372, file: !1194, line: 422, column: 5)
!8391 = !DILocation(line: 422, column: 5, scope: !8390)
!8392 = !DILocation(line: 423, column: 25, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8394, file: !1194, line: 423, column: 9)
!8394 = distinct !DILexicalBlock(scope: !8389, file: !1194, line: 422, column: 83)
!8395 = !DILocation(line: 423, column: 32, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8393, file: !1194, line: 423, column: 9)
!8397 = !DILocation(line: 423, column: 9, scope: !8393)
!8398 = !DILocation(line: 424, column: 24, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8396, file: !1194, line: 423, column: 59)
!8400 = !DILocation(line: 424, column: 13, scope: !8399)
!8401 = !DILocation(line: 424, column: 22, scope: !8399)
!8402 = !DILocation(line: 423, column: 50, scope: !8396)
!8403 = !DILocation(line: 423, column: 55, scope: !8396)
!8404 = !DILocation(line: 423, column: 39, scope: !8396)
!8405 = distinct !{!8405, !8397, !8406}
!8406 = !DILocation(line: 425, column: 9, scope: !8393)
!8407 = !DILocation(line: 426, column: 9, scope: !8394)
!8408 = !DILocation(line: 0, scope: !8390)
!8409 = !DILocation(line: 422, column: 75, scope: !8389)
!8410 = distinct !{!8410, !8391, !8411}
!8411 = !DILocation(line: 427, column: 5, scope: !8390)
!8412 = !DILocation(line: 428, column: 25, scope: !8372)
!8413 = !DILocation(line: 429, column: 26, scope: !8372)
!8414 = !DILocation(line: 429, column: 24, scope: !8372)
!8415 = !DILocation(line: 430, column: 5, scope: !8372)
!8416 = !DILocation(line: 431, column: 5, scope: !8372)
!8417 = !DILocation(line: 433, column: 67, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8419, file: !1194, line: 433, column: 5)
!8419 = distinct !DILexicalBlock(scope: !8372, file: !1194, line: 433, column: 5)
!8420 = !DILocation(line: 433, column: 5, scope: !8419)
!8421 = !DILocation(line: 433, column: 56, scope: !8419)
!8422 = !DILocation(line: 434, column: 17, scope: !8423)
!8423 = distinct !DILexicalBlock(scope: !8418, file: !1194, line: 433, column: 100)
!8424 = !DILocation(line: 434, column: 15, scope: !8423)
!8425 = !DILocation(line: 433, column: 74, scope: !8418)
!8426 = !DILocation(line: 433, column: 79, scope: !8418)
!8427 = !DILocation(line: 433, column: 87, scope: !8418)
!8428 = distinct !{!8428, !8420, !8429}
!8429 = !DILocation(line: 435, column: 5, scope: !8419)
!8430 = !DILocation(line: 437, column: 1, scope: !8372)
!8431 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1194, file: !1194, line: 462, type: !8432, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8434)
!8432 = !DISubroutineType(types: !8433)
!8433 = !{null, !8068, !6474}
!8434 = !{!8435, !8436, !8437, !8438, !8439}
!8435 = !DILocalVariable(name: "CS", arg: 1, scope: !8431, file: !1194, line: 462, type: !8068)
!8436 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !8431, file: !1194, line: 462, type: !6474)
!8437 = !DILocalVariable(name: "i", scope: !8431, file: !1194, line: 464, type: !61)
!8438 = !DILocalVariable(name: "val", scope: !8431, file: !1194, line: 465, type: !61)
!8439 = !DILocalVariable(name: "status", scope: !8440, file: !1194, line: 492, type: !381)
!8440 = distinct !DILexicalBlock(scope: !8441, file: !1194, line: 491, column: 47)
!8441 = distinct !DILexicalBlock(scope: !8442, file: !1194, line: 491, column: 13)
!8442 = distinct !DILexicalBlock(scope: !8431, file: !1194, line: 477, column: 17)
!8443 = !DILocation(line: 0, scope: !8431)
!8444 = !DILocation(line: 467, column: 17, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8431, file: !1194, line: 467, column: 9)
!8446 = !DILocation(line: 467, column: 9, scope: !8431)
!8447 = !DILocation(line: 474, column: 11, scope: !8431)
!8448 = !DILocation(line: 477, column: 5, scope: !8431)
!8449 = !DILocation(line: 478, column: 17, scope: !8442)
!8450 = !DILocation(line: 478, column: 9, scope: !8442)
!8451 = !DILocation(line: 481, column: 17, scope: !8452)
!8452 = distinct !DILexicalBlock(scope: !8453, file: !1194, line: 481, column: 17)
!8453 = distinct !DILexicalBlock(scope: !8442, file: !1194, line: 478, column: 29)
!8454 = !DILocation(line: 481, column: 17, scope: !8455)
!8455 = distinct !DILexicalBlock(scope: !8456, file: !1194, line: 481, column: 17)
!8456 = distinct !DILexicalBlock(scope: !8457, file: !1194, line: 481, column: 17)
!8457 = distinct !DILexicalBlock(scope: !8452, file: !1194, line: 481, column: 17)
!8458 = !DILocation(line: 481, column: 17, scope: !8456)
!8459 = !DILocation(line: 481, column: 17, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !1194, line: 481, column: 17)
!8461 = distinct !DILexicalBlock(scope: !8457, file: !1194, line: 481, column: 17)
!8462 = !DILocation(line: 484, column: 17, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8453, file: !1194, line: 484, column: 17)
!8464 = !DILocation(line: 484, column: 17, scope: !8465)
!8465 = distinct !DILexicalBlock(scope: !8466, file: !1194, line: 484, column: 17)
!8466 = distinct !DILexicalBlock(scope: !8467, file: !1194, line: 484, column: 17)
!8467 = distinct !DILexicalBlock(scope: !8463, file: !1194, line: 484, column: 17)
!8468 = !DILocation(line: 484, column: 17, scope: !8466)
!8469 = !DILocation(line: 484, column: 17, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8471, file: !1194, line: 484, column: 17)
!8471 = distinct !DILexicalBlock(scope: !8467, file: !1194, line: 484, column: 17)
!8472 = !DILocation(line: 0, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !1194, line: 487, column: 17)
!8474 = distinct !DILexicalBlock(scope: !8453, file: !1194, line: 487, column: 17)
!8475 = !DILocation(line: 487, column: 17, scope: !8474)
!8476 = !DILocation(line: 487, column: 17, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !1194, line: 487, column: 17)
!8478 = distinct !DILexicalBlock(scope: !8473, file: !1194, line: 487, column: 17)
!8479 = !DILocation(line: 487, column: 17, scope: !8478)
!8480 = !DILocation(line: 487, column: 17, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8482, file: !1194, line: 487, column: 17)
!8482 = distinct !DILexicalBlock(scope: !8473, file: !1194, line: 487, column: 17)
!8483 = !DILocation(line: 487, column: 17, scope: !8482)
!8484 = !DILocation(line: 491, column: 23, scope: !8441)
!8485 = !DILocation(line: 491, column: 13, scope: !8441)
!8486 = !DILocation(line: 491, column: 28, scope: !8441)
!8487 = !DILocation(line: 491, column: 13, scope: !8442)
!8488 = !DILocation(line: 492, column: 13, scope: !8440)
!8489 = !DILocation(line: 494, column: 13, scope: !8440)
!8490 = !DILocation(line: 0, scope: !8440)
!8491 = !DILocation(line: 495, column: 17, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8440, file: !1194, line: 494, column: 16)
!8493 = !DILocation(line: 496, column: 22, scope: !8440)
!8494 = !DILocation(line: 496, column: 31, scope: !8440)
!8495 = !DILocation(line: 496, column: 29, scope: !8440)
!8496 = !DILocation(line: 496, column: 13, scope: !8492)
!8497 = distinct !{!8497, !8489, !8498}
!8498 = !DILocation(line: 496, column: 45, scope: !8440)
!8499 = !DILocation(line: 497, column: 9, scope: !8441)
!8500 = !DILocation(line: 503, column: 25, scope: !8442)
!8501 = !DILocation(line: 497, column: 9, scope: !8440)
!8502 = !DILocation(line: 500, column: 70, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8441, file: !1194, line: 499, column: 14)
!8504 = !DILocation(line: 500, column: 60, scope: !8503)
!8505 = !DILocation(line: 500, column: 13, scope: !8503)
!8506 = !DILocation(line: 503, column: 15, scope: !8442)
!8507 = !DILocation(line: 503, column: 11, scope: !8442)
!8508 = distinct !{!8508, !8448, !8509}
!8509 = !DILocation(line: 504, column: 5, scope: !8431)
!8510 = !DILocation(line: 505, column: 1, scope: !8431)
!8511 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1194, file: !1194, line: 514, type: !8512, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8514)
!8512 = !DISubroutineType(types: !8513)
!8513 = !{null, !8068, !996, !381}
!8514 = !{!8515, !8516, !8517}
!8515 = !DILocalVariable(name: "CS", arg: 1, scope: !8511, file: !1194, line: 514, type: !8068)
!8516 = !DILocalVariable(name: "id", arg: 2, scope: !8511, file: !1194, line: 514, type: !996)
!8517 = !DILocalVariable(name: "cmd", arg: 3, scope: !8511, file: !1194, line: 514, type: !381)
!8518 = !DILocation(line: 0, scope: !8511)
!8519 = !DILocation(line: 517, column: 5, scope: !8511)
!8520 = !DILocation(line: 518, column: 1, scope: !8511)
!8521 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1194, file: !1194, line: 521, type: !8522, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8524)
!8522 = !DISubroutineType(types: !8523)
!8523 = !{null, !8068, !996}
!8524 = !{!8525, !8526}
!8525 = !DILocalVariable(name: "CS", arg: 1, scope: !8521, file: !1194, line: 521, type: !8068)
!8526 = !DILocalVariable(name: "id", arg: 2, scope: !8521, file: !1194, line: 521, type: !996)
!8527 = !DILocation(line: 0, scope: !8521)
!8528 = !DILocation(line: 523, column: 5, scope: !8521)
!8529 = !DILocation(line: 524, column: 1, scope: !8521)
!8530 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1194, file: !1194, line: 536, type: !8531, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !293)
!8531 = !DISubroutineType(types: !8532)
!8532 = !{!8533}
!8533 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1197, line: 57, baseType: !1196)
!8534 = !DILocation(line: 540, column: 5, scope: !8530)
!8535 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1194, file: !1194, line: 561, type: !8536, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !293)
!8536 = !DISubroutineType(types: !8537)
!8537 = !{!8538}
!8538 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1197, line: 66, baseType: !1204)
!8539 = !DILocation(line: 564, column: 15, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8535, file: !1194, line: 564, column: 9)
!8541 = !DILocation(line: 564, column: 31, scope: !8540)
!8542 = !DILocation(line: 564, column: 45, scope: !8540)
!8543 = !DILocation(line: 0, scope: !8540)
!8544 = !DILocation(line: 569, column: 1, scope: !8535)
!8545 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1194, file: !1194, line: 580, type: !8546, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8548)
!8546 = !DISubroutineType(types: !8547)
!8547 = !{!91, !996}
!8548 = !{!8549, !8550}
!8549 = !DILocalVariable(name: "buffer", arg: 1, scope: !8545, file: !1194, line: 580, type: !996)
!8550 = !DILocalVariable(name: "i", scope: !8545, file: !1194, line: 582, type: !7)
!8551 = !DILocation(line: 0, scope: !8545)
!8552 = !DILocation(line: 583, column: 5, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8545, file: !1194, line: 583, column: 5)
!8554 = !DILocation(line: 584, column: 9, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8556, file: !1194, line: 583, column: 29)
!8556 = distinct !DILexicalBlock(scope: !8553, file: !1194, line: 583, column: 5)
!8557 = !DILocation(line: 584, column: 19, scope: !8555)
!8558 = !DILocation(line: 583, column: 25, scope: !8556)
!8559 = !DILocation(line: 583, column: 19, scope: !8556)
!8560 = distinct !{!8560, !8552, !8561}
!8561 = !DILocation(line: 585, column: 5, scope: !8553)
!8562 = !DILocation(line: 586, column: 5, scope: !8545)
!8563 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1194, file: !1194, line: 613, type: !291, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !8564)
!8564 = !{!8565}
!8565 = !DILocalVariable(name: "D", scope: !8563, file: !1194, line: 615, type: !7939)
!8566 = !DILocation(line: 0, scope: !8563)
!8567 = !DILocation(line: 616, column: 32, scope: !8563)
!8568 = !DILocation(line: 616, column: 37, scope: !8563)
!8569 = !DILocation(line: 616, column: 27, scope: !8563)
!8570 = !DILocation(line: 617, column: 44, scope: !8563)
!8571 = !DILocation(line: 617, column: 31, scope: !8563)
!8572 = !DILocation(line: 617, column: 28, scope: !8563)
!8573 = !DILocation(line: 618, column: 32, scope: !8563)
!8574 = !DILocation(line: 618, column: 31, scope: !8563)
!8575 = !DILocation(line: 618, column: 29, scope: !8563)
!8576 = !DILocation(line: 621, column: 31, scope: !8563)
!8577 = !DILocation(line: 621, column: 24, scope: !8563)
!8578 = !DILocation(line: 622, column: 34, scope: !8563)
!8579 = !DILocation(line: 622, column: 27, scope: !8563)
!8580 = !DILocation(line: 623, column: 32, scope: !8563)
!8581 = !DILocation(line: 623, column: 25, scope: !8563)
!8582 = !DILocation(line: 624, column: 33, scope: !8563)
!8583 = !DILocation(line: 624, column: 26, scope: !8563)
!8584 = !DILocation(line: 625, column: 33, scope: !8563)
!8585 = !DILocation(line: 625, column: 26, scope: !8563)
!8586 = !DILocation(line: 629, column: 32, scope: !8563)
!8587 = !DILocation(line: 629, column: 47, scope: !8563)
!8588 = !DILocation(line: 629, column: 25, scope: !8563)
!8589 = !DILocation(line: 630, column: 32, scope: !8563)
!8590 = !DILocation(line: 630, column: 47, scope: !8563)
!8591 = !DILocation(line: 630, column: 25, scope: !8563)
!8592 = !DILocation(line: 633, column: 24, scope: !8563)
!8593 = !DILocation(line: 633, column: 31, scope: !8563)
!8594 = !DILocation(line: 633, column: 36, scope: !8563)
!8595 = !DILocation(line: 633, column: 28, scope: !8563)
!8596 = !DILocation(line: 633, column: 5, scope: !8563)
!8597 = !DILocation(line: 635, column: 5, scope: !8563)
!8598 = !DILocation(line: 636, column: 1, scope: !8563)
!8599 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1194, file: !1194, line: 641, type: !291, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !293)
!8600 = !DILocation(line: 644, column: 26, scope: !8599)
!8601 = !DILocation(line: 644, column: 24, scope: !8599)
!8602 = !DILocation(line: 645, column: 29, scope: !8599)
!8603 = !DILocation(line: 645, column: 27, scope: !8599)
!8604 = !DILocation(line: 646, column: 27, scope: !8599)
!8605 = !DILocation(line: 646, column: 25, scope: !8599)
!8606 = !DILocation(line: 647, column: 28, scope: !8599)
!8607 = !DILocation(line: 647, column: 26, scope: !8599)
!8608 = !DILocation(line: 648, column: 27, scope: !8599)
!8609 = !DILocation(line: 648, column: 25, scope: !8599)
!8610 = !DILocation(line: 652, column: 32, scope: !8599)
!8611 = !DILocation(line: 652, column: 47, scope: !8599)
!8612 = !DILocation(line: 652, column: 25, scope: !8599)
!8613 = !DILocation(line: 655, column: 24, scope: !8599)
!8614 = !DILocation(line: 655, column: 5, scope: !8599)
!8615 = !DILocation(line: 657, column: 5, scope: !8599)
!8616 = !DILocation(line: 660, column: 9, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8599, file: !1194, line: 660, column: 9)
!8618 = !DILocation(line: 660, column: 59, scope: !8617)
!8619 = !DILocation(line: 660, column: 38, scope: !8617)
!8620 = !DILocation(line: 660, column: 37, scope: !8617)
!8621 = !DILocation(line: 660, column: 33, scope: !8617)
!8622 = !DILocation(line: 660, column: 9, scope: !8599)
!8623 = !DILocation(line: 661, column: 9, scope: !8617)
!8624 = distinct !{!8624, !8623, !8625}
!8625 = !DILocation(line: 661, column: 18, scope: !8617)
!8626 = !DILocation(line: 662, column: 1, scope: !8599)
!8627 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1194, file: !1194, line: 668, type: !291, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !293)
!8628 = !DILocation(line: 671, column: 9, scope: !8629)
!8629 = distinct !DILexicalBlock(scope: !8627, file: !1194, line: 671, column: 9)
!8630 = !DILocation(line: 671, column: 40, scope: !8629)
!8631 = !DILocation(line: 671, column: 9, scope: !8627)
!8632 = !DILocation(line: 672, column: 47, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8629, file: !1194, line: 671, column: 46)
!8634 = !DILocation(line: 672, column: 40, scope: !8633)
!8635 = !DILocation(line: 673, column: 5, scope: !8633)
!8636 = !DILocation(line: 674, column: 9, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8627, file: !1194, line: 674, column: 9)
!8638 = !DILocation(line: 674, column: 41, scope: !8637)
!8639 = !DILocation(line: 674, column: 9, scope: !8627)
!8640 = !DILocation(line: 675, column: 48, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8637, file: !1194, line: 674, column: 47)
!8642 = !DILocation(line: 675, column: 41, scope: !8641)
!8643 = !DILocation(line: 676, column: 5, scope: !8641)
!8644 = !DILocation(line: 679, column: 33, scope: !8627)
!8645 = !DILocation(line: 679, column: 48, scope: !8627)
!8646 = !DILocation(line: 679, column: 25, scope: !8627)
!8647 = !DILocation(line: 680, column: 25, scope: !8627)
!8648 = !DILocation(line: 686, column: 5, scope: !8627)
!8649 = !DILocation(line: 688, column: 1, scope: !8627)
!8650 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1194, file: !1194, line: 689, type: !291, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1193, retainedNodes: !293)
!8651 = !DILocation(line: 692, column: 9, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8650, file: !1194, line: 692, column: 9)
!8653 = !DILocation(line: 692, column: 40, scope: !8652)
!8654 = !DILocation(line: 692, column: 9, scope: !8650)
!8655 = !DILocation(line: 693, column: 29, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8652, file: !1194, line: 692, column: 46)
!8657 = !DILocation(line: 694, column: 5, scope: !8656)
!8658 = !DILocation(line: 695, column: 9, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8650, file: !1194, line: 695, column: 9)
!8660 = !DILocation(line: 695, column: 41, scope: !8659)
!8661 = !DILocation(line: 695, column: 9, scope: !8650)
!8662 = !DILocation(line: 696, column: 29, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8659, file: !1194, line: 695, column: 47)
!8664 = !DILocation(line: 697, column: 5, scope: !8663)
!8665 = !DILocation(line: 698, column: 5, scope: !8650)
!8666 = !DILocation(line: 699, column: 1, scope: !8650)
!8667 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1293, file: !1293, line: 91, type: !4009, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8668)
!8668 = !{!8669}
!8669 = !DILocalVariable(name: "counter", scope: !8667, file: !1293, line: 102, type: !61)
!8670 = !DILocation(line: 0, scope: !8667)
!8671 = !DILocation(line: 110, column: 5, scope: !8667)
!8672 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1293, file: !1293, line: 114, type: !4009, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8673)
!8673 = !{!8674}
!8674 = !DILocalVariable(name: "counter", scope: !8672, file: !1293, line: 125, type: !61)
!8675 = !DILocation(line: 0, scope: !8672)
!8676 = !DILocation(line: 133, column: 5, scope: !8672)
!8677 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1293, file: !1293, line: 137, type: !4431, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8678)
!8678 = !{!8679}
!8679 = !DILocalVariable(name: "delay_us", arg: 1, scope: !8677, file: !1293, line: 137, type: !61)
!8680 = !DILocation(line: 0, scope: !8677)
!8681 = !DILocation(line: 142, column: 5, scope: !8677)
!8682 = !DILocation(line: 144, column: 1, scope: !8677)
!8683 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1293, file: !1293, line: 163, type: !4009, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8684)
!8684 = !{!8685}
!8685 = !DILocalVariable(name: "mask", scope: !8683, file: !1293, line: 165, type: !61)
!8686 = !DILocation(line: 166, column: 12, scope: !8683)
!8687 = !DILocation(line: 0, scope: !8683)
!8688 = !DILocation(line: 167, column: 5, scope: !8683)
!8689 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1293, file: !1293, line: 171, type: !4431, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8690)
!8690 = !{!8691}
!8691 = !DILocalVariable(name: "mask", arg: 1, scope: !8689, file: !1293, line: 171, type: !61)
!8692 = !DILocation(line: 0, scope: !8689)
!8693 = !DILocation(line: 173, column: 5, scope: !8689)
!8694 = !DILocation(line: 174, column: 1, scope: !8689)
!8695 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1293, file: !1293, line: 199, type: !1565, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8696)
!8696 = !{!8697}
!8697 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8695, file: !1293, line: 199, type: !88)
!8698 = !DILocation(line: 0, scope: !8695)
!8699 = !DILocation(line: 201, column: 5, scope: !8695)
!8700 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1293, file: !1293, line: 388, type: !8701, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !293)
!8701 = !DISubroutineType(types: !8702)
!8702 = !{!1171}
!8703 = !DILocation(line: 390, column: 5, scope: !8700)
!8704 = distinct !DISubprogram(name: "CompareData", scope: !1293, file: !1293, line: 872, type: !8705, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8707)
!8705 = !DISubroutineType(types: !8706)
!8706 = !{!91, !88, !88, !61}
!8707 = !{!8708, !8709, !8710, !8711, !8712, !8715, !8716, !8719, !8720, !8722}
!8708 = !DILocalVariable(name: "Address", arg: 1, scope: !8704, file: !1293, line: 872, type: !88)
!8709 = !DILocalVariable(name: "Data", arg: 2, scope: !8704, file: !1293, line: 872, type: !88)
!8710 = !DILocalVariable(name: "Length", arg: 3, scope: !8704, file: !1293, line: 872, type: !61)
!8711 = !DILocalVariable(name: "i", scope: !8704, file: !1293, line: 874, type: !61)
!8712 = !DILocalVariable(name: "Source", scope: !8713, file: !1293, line: 877, type: !1231)
!8713 = distinct !DILexicalBlock(scope: !8714, file: !1293, line: 876, column: 74)
!8714 = distinct !DILexicalBlock(scope: !8704, file: !1293, line: 876, column: 9)
!8715 = !DILocalVariable(name: "Dest", scope: !8713, file: !1293, line: 878, type: !1231)
!8716 = !DILocalVariable(name: "Source", scope: !8717, file: !1293, line: 885, type: !1262)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !1293, line: 884, column: 79)
!8718 = distinct !DILexicalBlock(scope: !8714, file: !1293, line: 884, column: 16)
!8719 = !DILocalVariable(name: "Dest", scope: !8717, file: !1293, line: 886, type: !1262)
!8720 = !DILocalVariable(name: "Source", scope: !8721, file: !1293, line: 893, type: !996)
!8721 = distinct !DILexicalBlock(scope: !8718, file: !1293, line: 892, column: 12)
!8722 = !DILocalVariable(name: "Dest", scope: !8721, file: !1293, line: 894, type: !996)
!8723 = !DILocation(line: 0, scope: !8704)
!8724 = !DILocation(line: 876, column: 11, scope: !8714)
!8725 = !DILocation(line: 876, column: 42, scope: !8714)
!8726 = !DILocation(line: 877, column: 28, scope: !8713)
!8727 = !DILocation(line: 0, scope: !8713)
!8728 = !DILocation(line: 878, column: 26, scope: !8713)
!8729 = !DILocation(line: 879, column: 23, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8731, file: !1293, line: 879, column: 9)
!8731 = distinct !DILexicalBlock(scope: !8713, file: !1293, line: 879, column: 9)
!8732 = !DILocation(line: 879, column: 9, scope: !8731)
!8733 = !DILocation(line: 880, column: 17, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !1293, line: 880, column: 17)
!8735 = distinct !DILexicalBlock(scope: !8730, file: !1293, line: 879, column: 68)
!8736 = !DILocation(line: 880, column: 30, scope: !8734)
!8737 = !DILocation(line: 880, column: 27, scope: !8734)
!8738 = !DILocation(line: 879, column: 64, scope: !8730)
!8739 = !DILocation(line: 880, column: 17, scope: !8735)
!8740 = distinct !{!8740, !8732, !8741}
!8741 = !DILocation(line: 883, column: 9, scope: !8731)
!8742 = !DILocation(line: 884, column: 47, scope: !8718)
!8743 = !DILocation(line: 895, column: 23, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !1293, line: 895, column: 9)
!8745 = distinct !DILexicalBlock(scope: !8721, file: !1293, line: 895, column: 9)
!8746 = !DILocation(line: 895, column: 9, scope: !8745)
!8747 = !DILocation(line: 885, column: 28, scope: !8717)
!8748 = !DILocation(line: 0, scope: !8717)
!8749 = !DILocation(line: 886, column: 26, scope: !8717)
!8750 = !DILocation(line: 887, column: 23, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8752, file: !1293, line: 887, column: 9)
!8752 = distinct !DILexicalBlock(scope: !8717, file: !1293, line: 887, column: 9)
!8753 = !DILocation(line: 887, column: 9, scope: !8752)
!8754 = !DILocation(line: 888, column: 17, scope: !8755)
!8755 = distinct !DILexicalBlock(scope: !8756, file: !1293, line: 888, column: 17)
!8756 = distinct !DILexicalBlock(scope: !8751, file: !1293, line: 887, column: 68)
!8757 = !DILocation(line: 888, column: 30, scope: !8755)
!8758 = !DILocation(line: 888, column: 27, scope: !8755)
!8759 = !DILocation(line: 887, column: 64, scope: !8751)
!8760 = !DILocation(line: 888, column: 17, scope: !8756)
!8761 = distinct !{!8761, !8753, !8762}
!8762 = !DILocation(line: 891, column: 9, scope: !8752)
!8763 = !DILocation(line: 896, column: 17, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8765, file: !1293, line: 896, column: 17)
!8765 = distinct !DILexicalBlock(scope: !8744, file: !1293, line: 895, column: 38)
!8766 = !DILocation(line: 896, column: 30, scope: !8764)
!8767 = !DILocation(line: 896, column: 27, scope: !8764)
!8768 = !DILocation(line: 895, column: 34, scope: !8744)
!8769 = !DILocation(line: 896, column: 17, scope: !8765)
!8770 = distinct !{!8770, !8746, !8771}
!8771 = !DILocation(line: 899, column: 9, scope: !8745)
!8772 = !DILocation(line: 902, column: 1, scope: !8704)
!8773 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1293, file: !1293, line: 919, type: !8774, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8776)
!8774 = !DISubroutineType(types: !8775)
!8775 = !{null, !88, !88, !61}
!8776 = !{!8777, !8778, !8779, !8780, !8781, !8782, !8783, !8784, !8785, !8786, !8787}
!8777 = !DILocalVariable(name: "Target", arg: 1, scope: !8773, file: !1293, line: 919, type: !88)
!8778 = !DILocalVariable(name: "Data", arg: 2, scope: !8773, file: !1293, line: 919, type: !88)
!8779 = !DILocalVariable(name: "Size", arg: 3, scope: !8773, file: !1293, line: 919, type: !61)
!8780 = !DILocalVariable(name: "D", scope: !8773, file: !1293, line: 921, type: !1463)
!8781 = !DILocalVariable(name: "address", scope: !8773, file: !1293, line: 922, type: !61)
!8782 = !DILocalVariable(name: "p_data", scope: !8773, file: !1293, line: 923, type: !996)
!8783 = !DILocalVariable(name: "cmd1", scope: !8773, file: !1293, line: 924, type: !61)
!8784 = !DILocalVariable(name: "length", scope: !8773, file: !1293, line: 924, type: !61)
!8785 = !DILocalVariable(name: "written", scope: !8773, file: !1293, line: 924, type: !61)
!8786 = !DILocalVariable(name: "status", scope: !8773, file: !1293, line: 925, type: !1515)
!8787 = !DILocalVariable(name: "savedMask", scope: !8773, file: !1293, line: 926, type: !61)
!8788 = !DILocation(line: 0, scope: !8773)
!8789 = !DILocation(line: 921, column: 60, scope: !8773)
!8790 = !DILocation(line: 923, column: 5, scope: !8773)
!8791 = !DILocation(line: 923, column: 19, scope: !8773)
!8792 = !DILocation(line: 924, column: 5, scope: !8773)
!8793 = !DILocation(line: 932, column: 9, scope: !8773)
!8794 = !DILocation(line: 933, column: 8, scope: !8773)
!8795 = !DILocation(line: 933, column: 21, scope: !8773)
!8796 = !DILocation(line: 935, column: 14, scope: !8773)
!8797 = !DILocation(line: 935, column: 5, scope: !8773)
!8798 = !DILocation(line: 922, column: 29, scope: !8773)
!8799 = !DILocation(line: 937, column: 18, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8773, file: !1293, line: 935, column: 23)
!8801 = !DILocation(line: 937, column: 35, scope: !8800)
!8802 = !DILocation(line: 937, column: 74, scope: !8800)
!8803 = !DILocation(line: 937, column: 50, scope: !8800)
!8804 = !DILocation(line: 937, column: 39, scope: !8800)
!8805 = !DILocation(line: 940, column: 35, scope: !8800)
!8806 = !DILocation(line: 940, column: 29, scope: !8800)
!8807 = !DILocation(line: 940, column: 16, scope: !8800)
!8808 = !DILocation(line: 942, column: 18, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8800, file: !1293, line: 942, column: 13)
!8810 = !DILocation(line: 942, column: 29, scope: !8809)
!8811 = !DILocation(line: 942, column: 13, scope: !8800)
!8812 = !DILocation(line: 943, column: 13, scope: !8813)
!8813 = distinct !DILexicalBlock(scope: !8809, file: !1293, line: 942, column: 55)
!8814 = !DILocation(line: 944, column: 9, scope: !8813)
!8815 = !DILocation(line: 947, column: 16, scope: !8816)
!8816 = distinct !DILexicalBlock(scope: !8800, file: !1293, line: 947, column: 13)
!8817 = !DILocation(line: 947, column: 29, scope: !8816)
!8818 = !DILocation(line: 0, scope: !8816)
!8819 = !DILocation(line: 947, column: 13, scope: !8800)
!8820 = !DILocation(line: 948, column: 20, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8816, file: !1293, line: 947, column: 35)
!8822 = !DILocation(line: 949, column: 32, scope: !8821)
!8823 = !DILocation(line: 949, column: 40, scope: !8821)
!8824 = !DILocation(line: 949, column: 13, scope: !8821)
!8825 = !DILocation(line: 950, column: 9, scope: !8821)
!8826 = !DILocation(line: 953, column: 20, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8816, file: !1293, line: 952, column: 9)
!8828 = !DILocation(line: 954, column: 32, scope: !8827)
!8829 = !DILocation(line: 954, column: 40, scope: !8827)
!8830 = !DILocation(line: 954, column: 13, scope: !8827)
!8831 = !DILocation(line: 957, column: 21, scope: !8800)
!8832 = !DILocation(line: 963, column: 45, scope: !8800)
!8833 = !DILocation(line: 963, column: 42, scope: !8800)
!8834 = !DILocation(line: 963, column: 40, scope: !8800)
!8835 = !DILocation(line: 963, column: 58, scope: !8800)
!8836 = !DILocation(line: 963, column: 29, scope: !8800)
!8837 = !DILocation(line: 964, column: 28, scope: !8800)
!8838 = !DILocation(line: 965, column: 37, scope: !8800)
!8839 = !DILocation(line: 966, column: 9, scope: !8800)
!8840 = !DILocation(line: 967, column: 26, scope: !8800)
!8841 = !DILocation(line: 967, column: 9, scope: !8800)
!8842 = !DILocation(line: 968, column: 29, scope: !8800)
!8843 = !DILocation(line: 968, column: 9, scope: !8800)
!8844 = !DILocation(line: 972, column: 9, scope: !8800)
!8845 = !DILocation(line: 978, column: 9, scope: !8800)
!8846 = !DILocation(line: 979, column: 50, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8800, file: !1293, line: 978, column: 22)
!8848 = !DILocation(line: 979, column: 55, scope: !8847)
!8849 = !DILocation(line: 979, column: 22, scope: !8847)
!8850 = !DILocation(line: 980, column: 35, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8847, file: !1293, line: 980, column: 17)
!8852 = !DILocation(line: 980, column: 32, scope: !8851)
!8853 = !DILocation(line: 980, column: 30, scope: !8851)
!8854 = !DILocation(line: 980, column: 19, scope: !8851)
!8855 = !DILocation(line: 980, column: 17, scope: !8847)
!8856 = distinct !{!8856, !8845, !8857}
!8857 = !DILocation(line: 983, column: 9, scope: !8800)
!8858 = !DILocation(line: 991, column: 9, scope: !8800)
!8859 = !DILocation(line: 993, column: 19, scope: !8800)
!8860 = !DILocation(line: 993, column: 16, scope: !8800)
!8861 = !DILocation(line: 994, column: 14, scope: !8800)
!8862 = !DILocation(line: 995, column: 17, scope: !8800)
!8863 = distinct !{!8863, !8797, !8864}
!8864 = !DILocation(line: 996, column: 5, scope: !8773)
!8865 = !DILocation(line: 998, column: 21, scope: !8773)
!8866 = !DILocation(line: 1005, column: 9, scope: !8773)
!8867 = !DILocation(line: 1008, column: 1, scope: !8773)
!8868 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1293, file: !1293, line: 1427, type: !8869, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8871)
!8869 = !DISubroutineType(types: !8870)
!8870 = !{null, !1463}
!8871 = !{!8872, !8873}
!8872 = !DILocalVariable(name: "D", arg: 1, scope: !8868, file: !1293, line: 1427, type: !1463)
!8873 = !DILocalVariable(name: "Result", scope: !8868, file: !1293, line: 1429, type: !2130)
!8874 = !DILocation(line: 0, scope: !8868)
!8875 = !DILocation(line: 1430, column: 5, scope: !8868)
!8876 = !DILocation(line: 1431, column: 18, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8868, file: !1293, line: 1430, column: 8)
!8878 = !DILocation(line: 1432, column: 21, scope: !8868)
!8879 = !DILocation(line: 1432, column: 5, scope: !8877)
!8880 = distinct !{!8880, !8875, !8881}
!8881 = !DILocation(line: 1432, column: 43, scope: !8868)
!8882 = !DILocation(line: 1433, column: 1, scope: !8868)
!8883 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1293, file: !1293, line: 3478, type: !8869, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8884)
!8884 = !{!8885}
!8885 = !DILocalVariable(name: "D", arg: 1, scope: !8883, file: !1293, line: 3478, type: !1463)
!8886 = !DILocation(line: 0, scope: !8883)
!8887 = !DILocation(line: 3480, column: 30, scope: !8883)
!8888 = !DILocation(line: 3480, column: 35, scope: !8883)
!8889 = !DILocation(line: 3480, column: 27, scope: !8883)
!8890 = !DILocation(line: 3480, column: 5, scope: !8883)
!8891 = !DILocation(line: 3481, column: 1, scope: !8883)
!8892 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1293, file: !1293, line: 2382, type: !291, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8893)
!8893 = !{!8894}
!8894 = !DILocalVariable(name: "savedMask", scope: !8892, file: !1293, line: 2384, type: !61)
!8895 = !DILocation(line: 2385, column: 17, scope: !8892)
!8896 = !DILocation(line: 0, scope: !8892)
!8897 = !DILocation(line: 2390, column: 20, scope: !8892)
!8898 = !DILocation(line: 2391, column: 5, scope: !8892)
!8899 = !DILocation(line: 2392, column: 1, scope: !8892)
!8900 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1293, file: !1293, line: 3536, type: !8901, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8903)
!8901 = !DISubroutineType(types: !8902)
!8902 = !{!61, !1463, !381}
!8903 = !{!8904, !8905, !8906, !8907}
!8904 = !DILocalVariable(name: "D", arg: 1, scope: !8900, file: !1293, line: 3536, type: !1463)
!8905 = !DILocalVariable(name: "cmd", arg: 2, scope: !8900, file: !1293, line: 3536, type: !381)
!8906 = !DILocalVariable(name: "savedMask", scope: !8900, file: !1293, line: 3538, type: !61)
!8907 = !DILocalVariable(name: "result", scope: !8900, file: !1293, line: 3539, type: !61)
!8908 = !DILocation(line: 0, scope: !8900)
!8909 = !DILocation(line: 3541, column: 17, scope: !8900)
!8910 = !DILocation(line: 3542, column: 22, scope: !8900)
!8911 = !DILocation(line: 3542, column: 5, scope: !8900)
!8912 = !DILocation(line: 3543, column: 35, scope: !8900)
!8913 = !DILocation(line: 3543, column: 33, scope: !8900)
!8914 = !DILocation(line: 3544, column: 25, scope: !8900)
!8915 = !DILocation(line: 3545, column: 24, scope: !8900)
!8916 = !DILocation(line: 3546, column: 25, scope: !8900)
!8917 = !DILocation(line: 3546, column: 5, scope: !8900)
!8918 = !DILocation(line: 3547, column: 42, scope: !8900)
!8919 = !DILocation(line: 3547, column: 60, scope: !8900)
!8920 = !DILocation(line: 3547, column: 14, scope: !8900)
!8921 = !DILocation(line: 3548, column: 5, scope: !8900)
!8922 = !DILocation(line: 3550, column: 5, scope: !8900)
!8923 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1293, file: !1293, line: 2393, type: !291, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8924)
!8924 = !{!8925}
!8925 = !DILocalVariable(name: "savedMask", scope: !8923, file: !1293, line: 2395, type: !61)
!8926 = !DILocation(line: 2396, column: 17, scope: !8923)
!8927 = !DILocation(line: 0, scope: !8923)
!8928 = !DILocation(line: 2401, column: 20, scope: !8923)
!8929 = !DILocation(line: 2402, column: 5, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !1293, line: 2402, column: 5)
!8931 = distinct !DILexicalBlock(scope: !8923, file: !1293, line: 2402, column: 5)
!8932 = !DILocation(line: 2403, column: 5, scope: !8923)
!8933 = !DILocation(line: 2404, column: 1, scope: !8923)
!8934 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1293, file: !1293, line: 1440, type: !8869, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8935)
!8935 = !{!8936, !8937}
!8936 = !DILocalVariable(name: "D", arg: 1, scope: !8934, file: !1293, line: 1440, type: !1463)
!8937 = !DILocalVariable(name: "savedMask", scope: !8934, file: !1293, line: 1442, type: !1171)
!8938 = !DILocation(line: 0, scope: !8934)
!8939 = !DILocation(line: 1443, column: 17, scope: !8934)
!8940 = !DILocation(line: 1444, column: 9, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8934, file: !1293, line: 1444, column: 9)
!8942 = !DILocation(line: 1444, column: 9, scope: !8934)
!8943 = !DILocation(line: 1445, column: 17, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !8941, file: !1293, line: 1444, column: 24)
!8945 = !DILocation(line: 1446, column: 9, scope: !8944)
!8946 = !DILocation(line: 1451, column: 1, scope: !8934)
!8947 = !DILocation(line: 1448, column: 9, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8941, file: !1293, line: 1447, column: 12)
!8949 = !DILocation(line: 1449, column: 9, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8951, file: !1293, line: 1449, column: 9)
!8951 = distinct !DILexicalBlock(scope: !8952, file: !1293, line: 1449, column: 9)
!8952 = distinct !DILexicalBlock(scope: !8948, file: !1293, line: 1449, column: 9)
!8953 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1293, file: !1293, line: 1027, type: !291, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !8954)
!8954 = !{!8955, !8956, !8957, !8958}
!8955 = !DILocalVariable(name: "D", scope: !8953, file: !1293, line: 1029, type: !1463)
!8956 = !DILocalVariable(name: "status", scope: !8953, file: !1293, line: 1030, type: !1515)
!8957 = !DILocalVariable(name: "savedMask", scope: !8953, file: !1293, line: 1031, type: !61)
!8958 = !DILocalVariable(name: "duration", scope: !8959, file: !1293, line: 1231, type: !61)
!8959 = distinct !DILexicalBlock(scope: !8953, file: !1293, line: 1230, column: 5)
!8960 = !DILocation(line: 0, scope: !8953)
!8961 = !DILocation(line: 1033, column: 17, scope: !8953)
!8962 = !DILocation(line: 1034, column: 8, scope: !8963)
!8963 = distinct !DILexicalBlock(scope: !8953, file: !1293, line: 1034, column: 8)
!8964 = !DILocation(line: 1034, column: 30, scope: !8963)
!8965 = !DILocation(line: 1034, column: 8, scope: !8953)
!8966 = !DILocation(line: 1039, column: 27, scope: !8953)
!8967 = !DILocation(line: 1058, column: 48, scope: !8968)
!8968 = distinct !DILexicalBlock(scope: !8953, file: !1293, line: 1055, column: 5)
!8969 = !DILocation(line: 1069, column: 5, scope: !8970)
!8970 = distinct !DILexicalBlock(scope: !8971, file: !1293, line: 1069, column: 5)
!8971 = distinct !DILexicalBlock(scope: !8953, file: !1293, line: 1069, column: 5)
!8972 = !DILocation(line: 1069, column: 5, scope: !8971)
!8973 = !DILocation(line: 1069, column: 5, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8970, file: !1293, line: 1069, column: 5)
!8975 = !DILocation(line: 1075, column: 10, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8953, file: !1293, line: 1075, column: 9)
!8977 = !DILocation(line: 1075, column: 27, scope: !8976)
!8978 = !DILocation(line: 1075, column: 33, scope: !8976)
!8979 = !DILocation(line: 1075, column: 40, scope: !8976)
!8980 = !DILocation(line: 1075, column: 53, scope: !8976)
!8981 = !DILocation(line: 1075, column: 9, scope: !8953)
!8982 = !DILocation(line: 1084, column: 9, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8976, file: !1293, line: 1083, column: 11)
!8984 = !DILocation(line: 1085, column: 50, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !8983, file: !1293, line: 1084, column: 21)
!8986 = !DILocation(line: 1085, column: 55, scope: !8985)
!8987 = !DILocation(line: 1085, column: 22, scope: !8985)
!8988 = !DILocation(line: 1086, column: 35, scope: !8989)
!8989 = distinct !DILexicalBlock(scope: !8985, file: !1293, line: 1086, column: 17)
!8990 = !DILocation(line: 1086, column: 32, scope: !8989)
!8991 = !DILocation(line: 1086, column: 30, scope: !8989)
!8992 = !DILocation(line: 1086, column: 19, scope: !8989)
!8993 = !DILocation(line: 1086, column: 17, scope: !8985)
!8994 = distinct !{!8994, !8982, !8995}
!8995 = !DILocation(line: 1089, column: 9, scope: !8983)
!8996 = !DILocation(line: 1107, column: 11, scope: !8997)
!8997 = distinct !DILexicalBlock(scope: !8953, file: !1293, line: 1107, column: 9)
!8998 = !DILocation(line: 1107, column: 30, scope: !8997)
!8999 = !DILocation(line: 1117, column: 46, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8997, file: !1293, line: 1107, column: 53)
!9001 = !DILocation(line: 1117, column: 51, scope: !9000)
!9002 = !DILocation(line: 1117, column: 18, scope: !9000)
!9003 = !DILocation(line: 1120, column: 31, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9000, file: !1293, line: 1120, column: 13)
!9005 = !DILocation(line: 1120, column: 28, scope: !9004)
!9006 = !DILocation(line: 1120, column: 26, scope: !9004)
!9007 = !DILocation(line: 1120, column: 15, scope: !9004)
!9008 = !DILocation(line: 1120, column: 13, scope: !9000)
!9009 = !DILocation(line: 1128, column: 13, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9004, file: !1293, line: 1120, column: 55)
!9011 = !DILocation(line: 1131, column: 13, scope: !9010)
!9012 = !DILocation(line: 1132, column: 54, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9010, file: !1293, line: 1131, column: 23)
!9014 = !DILocation(line: 1132, column: 59, scope: !9013)
!9015 = !DILocation(line: 1132, column: 26, scope: !9013)
!9016 = !DILocation(line: 1133, column: 39, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9013, file: !1293, line: 1133, column: 21)
!9018 = !DILocation(line: 1133, column: 36, scope: !9017)
!9019 = !DILocation(line: 1133, column: 34, scope: !9017)
!9020 = !DILocation(line: 1133, column: 23, scope: !9017)
!9021 = !DILocation(line: 1133, column: 21, scope: !9013)
!9022 = distinct !{!9022, !9011, !9023}
!9023 = !DILocation(line: 1158, column: 13, scope: !9010)
!9024 = !DILocation(line: 1162, column: 21, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9010, file: !1293, line: 1162, column: 17)
!9026 = !DILocation(line: 1162, column: 32, scope: !9025)
!9027 = !DILocation(line: 1162, column: 51, scope: !9025)
!9028 = !DILocation(line: 1162, column: 58, scope: !9025)
!9029 = !DILocation(line: 1162, column: 71, scope: !9025)
!9030 = !DILocation(line: 1162, column: 17, scope: !9010)
!9031 = !DILocation(line: 1164, column: 45, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !9025, file: !1293, line: 1162, column: 91)
!9033 = !DILocation(line: 1165, column: 36, scope: !9032)
!9034 = !DILocation(line: 1166, column: 37, scope: !9032)
!9035 = !DILocation(line: 1167, column: 34, scope: !9032)
!9036 = !DILocation(line: 1167, column: 17, scope: !9032)
!9037 = !DILocation(line: 1168, column: 37, scope: !9032)
!9038 = !DILocation(line: 1168, column: 17, scope: !9032)
!9039 = !DILocation(line: 1171, column: 50, scope: !9032)
!9040 = !DILocation(line: 1172, column: 37, scope: !9032)
!9041 = !DILocation(line: 1173, column: 45, scope: !9032)
!9042 = !DILocation(line: 1174, column: 34, scope: !9032)
!9043 = !DILocation(line: 1174, column: 17, scope: !9032)
!9044 = !DILocation(line: 1175, column: 37, scope: !9032)
!9045 = !DILocation(line: 1175, column: 17, scope: !9032)
!9046 = !DILocation(line: 1178, column: 17, scope: !9032)
!9047 = !DILocation(line: 1179, column: 49, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9032, file: !1293, line: 1178, column: 20)
!9049 = !DILocation(line: 1180, column: 40, scope: !9048)
!9050 = !DILocation(line: 1181, column: 41, scope: !9048)
!9051 = !DILocation(line: 1182, column: 38, scope: !9048)
!9052 = !DILocation(line: 1182, column: 21, scope: !9048)
!9053 = !DILocation(line: 1183, column: 41, scope: !9048)
!9054 = !DILocation(line: 1183, column: 21, scope: !9048)
!9055 = !DILocation(line: 1184, column: 43, scope: !9048)
!9056 = !DILocation(line: 1185, column: 17, scope: !9048)
!9057 = distinct !{!9057, !9046, !9058}
!9058 = !DILocation(line: 1185, column: 32, scope: !9032)
!9059 = !DILocation(line: 1194, column: 13, scope: !9010)
!9060 = !DILocation(line: 1195, column: 9, scope: !9010)
!9061 = !DILocation(line: 1197, column: 21, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9063, file: !1293, line: 1197, column: 17)
!9063 = distinct !DILexicalBlock(scope: !9004, file: !1293, line: 1195, column: 16)
!9064 = !DILocation(line: 1197, column: 32, scope: !9062)
!9065 = !DILocation(line: 1197, column: 53, scope: !9062)
!9066 = !DILocation(line: 1197, column: 60, scope: !9062)
!9067 = !DILocation(line: 1197, column: 76, scope: !9062)
!9068 = !DILocation(line: 1197, column: 17, scope: !9063)
!9069 = !DILocation(line: 1198, column: 54, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9062, file: !1293, line: 1197, column: 98)
!9071 = !DILocation(line: 1198, column: 59, scope: !9070)
!9072 = !DILocation(line: 1198, column: 26, scope: !9070)
!9073 = !DILocation(line: 1199, column: 40, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !9070, file: !1293, line: 1199, column: 21)
!9075 = !DILocation(line: 1199, column: 37, scope: !9074)
!9076 = !DILocation(line: 1199, column: 35, scope: !9074)
!9077 = !DILocation(line: 1199, column: 24, scope: !9074)
!9078 = !DILocation(line: 1199, column: 63, scope: !9074)
!9079 = !DILocation(line: 1200, column: 41, scope: !9074)
!9080 = !DILocation(line: 1200, column: 39, scope: !9074)
!9081 = !DILocation(line: 1200, column: 28, scope: !9074)
!9082 = !DILocation(line: 1199, column: 21, scope: !9070)
!9083 = !DILocation(line: 1201, column: 40, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9074, file: !1293, line: 1200, column: 68)
!9085 = !DILocation(line: 1201, column: 21, scope: !9084)
!9086 = !DILocation(line: 1202, column: 40, scope: !9084)
!9087 = !DILocation(line: 1202, column: 21, scope: !9084)
!9088 = !DILocation(line: 1203, column: 17, scope: !9084)
!9089 = !DILocation(line: 1206, column: 13, scope: !9063)
!9090 = !DILocation(line: 1228, column: 25, scope: !8953)
!9091 = !DILocation(line: 1231, column: 29, scope: !8959)
!9092 = !DILocation(line: 0, scope: !8959)
!9093 = !DILocation(line: 1232, column: 13, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !8959, file: !1293, line: 1232, column: 13)
!9095 = !DILocation(line: 1232, column: 43, scope: !9094)
!9096 = !DILocation(line: 1232, column: 13, scope: !8959)
!9097 = !DILocation(line: 1233, column: 43, scope: !9098)
!9098 = distinct !DILexicalBlock(scope: !9094, file: !1293, line: 1232, column: 55)
!9099 = !DILocation(line: 1234, column: 9, scope: !9098)
!9100 = !DILocation(line: 1237, column: 5, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9102, file: !1293, line: 1237, column: 5)
!9102 = distinct !DILexicalBlock(scope: !8953, file: !1293, line: 1237, column: 5)
!9103 = !DILocation(line: 1240, column: 5, scope: !8953)
!9104 = !DILocation(line: 1241, column: 1, scope: !8953)
!9105 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1293, file: !1293, line: 3421, type: !8869, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9106)
!9106 = !{!9107, !9108, !9109, !9110}
!9107 = !DILocalVariable(name: "D", arg: 1, scope: !9105, file: !1293, line: 3421, type: !1463)
!9108 = !DILocalVariable(name: "savedMask", scope: !9105, file: !1293, line: 3423, type: !61)
!9109 = !DILocalVariable(name: "currtime", scope: !9105, file: !1293, line: 3424, type: !61)
!9110 = !DILocalVariable(name: "difftime", scope: !9105, file: !1293, line: 3424, type: !61)
!9111 = !DILocation(line: 0, scope: !9105)
!9112 = !DILocation(line: 3427, column: 9, scope: !9113)
!9113 = distinct !DILexicalBlock(scope: !9105, file: !1293, line: 3427, column: 9)
!9114 = !DILocation(line: 3427, column: 28, scope: !9113)
!9115 = !DILocation(line: 3427, column: 9, scope: !9105)
!9116 = !DILocation(line: 3429, column: 20, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9113, file: !1293, line: 3427, column: 59)
!9118 = !DILocation(line: 3430, column: 27, scope: !9119)
!9119 = distinct !DILexicalBlock(scope: !9117, file: !1293, line: 3430, column: 13)
!9120 = !DILocation(line: 3430, column: 24, scope: !9119)
!9121 = !DILocation(line: 3430, column: 22, scope: !9119)
!9122 = !DILocation(line: 3430, column: 13, scope: !9117)
!9123 = !DILocation(line: 3431, column: 47, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9119, file: !1293, line: 3430, column: 46)
!9125 = !DILocation(line: 3431, column: 13, scope: !9124)
!9126 = !DILocation(line: 3432, column: 9, scope: !9124)
!9127 = !DILocation(line: 3435, column: 17, scope: !9105)
!9128 = !DILocation(line: 3436, column: 24, scope: !9105)
!9129 = !DILocation(line: 3436, column: 31, scope: !9105)
!9130 = !DILocation(line: 3436, column: 36, scope: !9105)
!9131 = !DILocation(line: 3436, column: 28, scope: !9105)
!9132 = !DILocation(line: 3436, column: 5, scope: !9105)
!9133 = !DILocation(line: 3442, column: 5, scope: !9105)
!9134 = !DILocation(line: 3443, column: 1, scope: !9105)
!9135 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1293, file: !1293, line: 2405, type: !291, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9136)
!9136 = !{!9137}
!9137 = !DILocalVariable(name: "savedMask", scope: !9135, file: !1293, line: 2407, type: !61)
!9138 = !DILocation(line: 2408, column: 17, scope: !9135)
!9139 = !DILocation(line: 0, scope: !9135)
!9140 = !DILocation(line: 2413, column: 25, scope: !9135)
!9141 = !DILocation(line: 2414, column: 5, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9143, file: !1293, line: 2414, column: 5)
!9143 = distinct !DILexicalBlock(scope: !9135, file: !1293, line: 2414, column: 5)
!9144 = !DILocation(line: 2415, column: 5, scope: !9135)
!9145 = !DILocation(line: 2416, column: 1, scope: !9135)
!9146 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1293, file: !1293, line: 3561, type: !9147, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9149)
!9147 = !DISubroutineType(types: !9148)
!9148 = !{null, !1463, !1006, !381}
!9149 = !{!9150, !9151, !9152, !9153}
!9150 = !DILocalVariable(name: "D", arg: 1, scope: !9146, file: !1293, line: 3561, type: !1463)
!9151 = !DILocalVariable(name: "cmd", arg: 2, scope: !9146, file: !1293, line: 3561, type: !1006)
!9152 = !DILocalVariable(name: "outlen", arg: 3, scope: !9146, file: !1293, line: 3561, type: !381)
!9153 = !DILocalVariable(name: "savedMask", scope: !9146, file: !1293, line: 3563, type: !61)
!9154 = !DILocation(line: 0, scope: !9146)
!9155 = !DILocation(line: 3565, column: 17, scope: !9146)
!9156 = !DILocation(line: 3566, column: 22, scope: !9146)
!9157 = !DILocation(line: 3566, column: 5, scope: !9146)
!9158 = !DILocation(line: 3567, column: 33, scope: !9146)
!9159 = !DILocation(line: 3568, column: 27, scope: !9146)
!9160 = !DILocation(line: 3568, column: 25, scope: !9146)
!9161 = !DILocation(line: 3569, column: 24, scope: !9146)
!9162 = !DILocation(line: 3570, column: 25, scope: !9146)
!9163 = !DILocation(line: 3570, column: 5, scope: !9146)
!9164 = !DILocation(line: 3571, column: 5, scope: !9146)
!9165 = !DILocation(line: 3573, column: 1, scope: !9146)
!9166 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1293, file: !1293, line: 1410, type: !9167, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9169)
!9167 = !DISubroutineType(types: !9168)
!9168 = !{!2130}
!9169 = !{!9170}
!9170 = !DILocalVariable(name: "savedMask", scope: !9166, file: !1293, line: 1412, type: !1171)
!9171 = !DILocation(line: 1413, column: 17, scope: !9166)
!9172 = !DILocation(line: 0, scope: !9166)
!9173 = !DILocation(line: 1414, column: 9, scope: !9174)
!9174 = distinct !DILexicalBlock(scope: !9166, file: !1293, line: 1414, column: 9)
!9175 = !DILocation(line: 1414, column: 9, scope: !9166)
!9176 = !DILocation(line: 1415, column: 17, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9174, file: !1293, line: 1414, column: 24)
!9178 = !DILocation(line: 1417, column: 9, scope: !9177)
!9179 = !DILocation(line: 0, scope: !9174)
!9180 = !DILocation(line: 1425, column: 1, scope: !9166)
!9181 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1293, file: !1293, line: 1257, type: !9182, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9184)
!9182 = !DISubroutineType(types: !9183)
!9183 = !{!91}
!9184 = !{!9185, !9186, !9187}
!9185 = !DILocalVariable(name: "D", scope: !9181, file: !1293, line: 1259, type: !1463)
!9186 = !DILocalVariable(name: "status", scope: !9181, file: !1293, line: 1260, type: !1515)
!9187 = !DILocalVariable(name: "result", scope: !9181, file: !1293, line: 1261, type: !91)
!9188 = !DILocation(line: 1259, column: 57, scope: !9181)
!9189 = !DILocation(line: 0, scope: !9181)
!9190 = !DILocation(line: 1263, column: 5, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9192, file: !1293, line: 1263, column: 5)
!9192 = distinct !DILexicalBlock(scope: !9181, file: !1293, line: 1263, column: 5)
!9193 = !DILocation(line: 1263, column: 5, scope: !9192)
!9194 = !DILocation(line: 1263, column: 5, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9191, file: !1293, line: 1263, column: 5)
!9196 = !DILocation(line: 1265, column: 5, scope: !9181)
!9197 = !DILocation(line: 1267, column: 42, scope: !9181)
!9198 = !DILocation(line: 1267, column: 47, scope: !9181)
!9199 = !DILocation(line: 1267, column: 14, scope: !9181)
!9200 = !DILocation(line: 1269, column: 27, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9181, file: !1293, line: 1269, column: 9)
!9202 = !DILocation(line: 1269, column: 24, scope: !9201)
!9203 = !DILocation(line: 1269, column: 22, scope: !9201)
!9204 = !DILocation(line: 1269, column: 11, scope: !9201)
!9205 = !DILocation(line: 1269, column: 9, scope: !9181)
!9206 = !DILocation(line: 1270, column: 9, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9201, file: !1293, line: 1269, column: 51)
!9208 = !DILocation(line: 1272, column: 5, scope: !9207)
!9209 = !DILocation(line: 1274, column: 5, scope: !9181)
!9210 = !DILocation(line: 1276, column: 5, scope: !9181)
!9211 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1293, file: !1293, line: 1289, type: !291, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9212)
!9212 = !{!9213}
!9213 = !DILocalVariable(name: "D", scope: !9211, file: !1293, line: 1291, type: !1463)
!9214 = !DILocation(line: 0, scope: !9211)
!9215 = !DILocation(line: 1293, column: 5, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !1293, line: 1293, column: 5)
!9217 = distinct !DILexicalBlock(scope: !9211, file: !1293, line: 1293, column: 5)
!9218 = !DILocation(line: 1293, column: 5, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9216, file: !1293, line: 1293, column: 5)
!9220 = !DILocation(line: 1293, column: 5, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9222, file: !1293, line: 1293, column: 5)
!9222 = distinct !DILexicalBlock(scope: !9223, file: !1293, line: 1293, column: 5)
!9223 = distinct !DILexicalBlock(scope: !9219, file: !1293, line: 1293, column: 5)
!9224 = !DILocation(line: 1291, column: 60, scope: !9211)
!9225 = !DILocation(line: 1295, column: 5, scope: !9211)
!9226 = !DILocation(line: 1296, column: 1, scope: !9211)
!9227 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1293, file: !1293, line: 3452, type: !8869, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9228)
!9228 = !{!9229, !9230}
!9229 = !DILocalVariable(name: "D", arg: 1, scope: !9227, file: !1293, line: 3452, type: !1463)
!9230 = !DILocalVariable(name: "savedMask", scope: !9227, file: !1293, line: 3454, type: !61)
!9231 = !DILocation(line: 0, scope: !9227)
!9232 = !DILocation(line: 3456, column: 17, scope: !9227)
!9233 = !DILocation(line: 3462, column: 24, scope: !9227)
!9234 = !DILocation(line: 3462, column: 31, scope: !9227)
!9235 = !DILocation(line: 3462, column: 36, scope: !9227)
!9236 = !DILocation(line: 3462, column: 28, scope: !9227)
!9237 = !DILocation(line: 3462, column: 5, scope: !9227)
!9238 = !DILocation(line: 3463, column: 12, scope: !9239)
!9239 = distinct !DILexicalBlock(scope: !9227, file: !1293, line: 3463, column: 9)
!9240 = !DILocation(line: 3463, column: 27, scope: !9239)
!9241 = !DILocation(line: 3463, column: 9, scope: !9227)
!9242 = !DILocation(line: 3464, column: 28, scope: !9243)
!9243 = distinct !DILexicalBlock(scope: !9239, file: !1293, line: 3463, column: 33)
!9244 = !DILocation(line: 3465, column: 5, scope: !9243)
!9245 = !DILocation(line: 3467, column: 5, scope: !9227)
!9246 = !DILocation(line: 3468, column: 5, scope: !9227)
!9247 = !DILocation(line: 3469, column: 1, scope: !9227)
!9248 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1293, file: !1293, line: 2417, type: !291, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9249)
!9249 = !{!9250}
!9250 = !DILocalVariable(name: "savedMask", scope: !9248, file: !1293, line: 2419, type: !61)
!9251 = !DILocation(line: 2420, column: 17, scope: !9248)
!9252 = !DILocation(line: 0, scope: !9248)
!9253 = !DILocation(line: 2425, column: 25, scope: !9248)
!9254 = !DILocation(line: 2426, column: 5, scope: !9248)
!9255 = !DILocation(line: 2427, column: 1, scope: !9248)
!9256 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1293, file: !1293, line: 1308, type: !291, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9257)
!9257 = !{!9258, !9259}
!9258 = !DILocalVariable(name: "D", scope: !9256, file: !1293, line: 1310, type: !1463)
!9259 = !DILocalVariable(name: "status", scope: !9256, file: !1293, line: 1311, type: !1515)
!9260 = !DILocation(line: 1310, column: 60, scope: !9256)
!9261 = !DILocation(line: 0, scope: !9256)
!9262 = !DILocation(line: 1313, column: 5, scope: !9263)
!9263 = distinct !DILexicalBlock(scope: !9264, file: !1293, line: 1313, column: 5)
!9264 = distinct !DILexicalBlock(scope: !9256, file: !1293, line: 1313, column: 5)
!9265 = !DILocation(line: 1313, column: 5, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9263, file: !1293, line: 1313, column: 5)
!9267 = !DILocation(line: 1313, column: 5, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9269, file: !1293, line: 1313, column: 5)
!9269 = distinct !DILexicalBlock(scope: !9270, file: !1293, line: 1313, column: 5)
!9270 = distinct !DILexicalBlock(scope: !9266, file: !1293, line: 1313, column: 5)
!9271 = !DILocation(line: 1315, column: 5, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9273, file: !1293, line: 1315, column: 5)
!9273 = distinct !DILexicalBlock(scope: !9256, file: !1293, line: 1315, column: 5)
!9274 = !DILocation(line: 1315, column: 5, scope: !9273)
!9275 = !DILocation(line: 1315, column: 5, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9272, file: !1293, line: 1315, column: 5)
!9277 = !DILocation(line: 1317, column: 5, scope: !9256)
!9278 = !DILocation(line: 1319, column: 5, scope: !9256)
!9279 = !DILocation(line: 1320, column: 46, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9256, file: !1293, line: 1319, column: 15)
!9281 = !DILocation(line: 1320, column: 51, scope: !9280)
!9282 = !DILocation(line: 1320, column: 18, scope: !9280)
!9283 = !DILocation(line: 1322, column: 31, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9280, file: !1293, line: 1322, column: 13)
!9285 = !DILocation(line: 1322, column: 28, scope: !9284)
!9286 = !DILocation(line: 1322, column: 26, scope: !9284)
!9287 = !DILocation(line: 1322, column: 15, scope: !9284)
!9288 = !DILocation(line: 1322, column: 13, scope: !9280)
!9289 = distinct !{!9289, !9278, !9290}
!9290 = !DILocation(line: 1325, column: 5, scope: !9256)
!9291 = !DILocation(line: 1327, column: 5, scope: !9256)
!9292 = !DILocation(line: 1328, column: 1, scope: !9256)
!9293 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1293, file: !1293, line: 1394, type: !8869, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9294)
!9294 = !{!9295}
!9295 = !DILocalVariable(name: "D", arg: 1, scope: !9293, file: !1293, line: 1394, type: !1463)
!9296 = !DILocation(line: 0, scope: !9293)
!9297 = !DILocation(line: 1401, column: 1, scope: !9293)
!9298 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1293, file: !1293, line: 1556, type: !9299, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9320)
!9299 = !DISubroutineType(types: !9300)
!9300 = !{!1171, !9301, !1463}
!9301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9302, size: 32)
!9302 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1489, line: 121, baseType: !9303)
!9303 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 105, size: 480, elements: !9304)
!9304 = !{!9305, !9306, !9307, !9308, !9309, !9310, !9311, !9312, !9313, !9314, !9315, !9316, !9317, !9318, !9319}
!9305 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !9303, file: !1489, line: 106, baseType: !1762, size: 32)
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !9303, file: !1489, line: 107, baseType: !1564, size: 32, offset: 32)
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !9303, file: !1489, line: 108, baseType: !1767, size: 32, offset: 64)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !9303, file: !1489, line: 109, baseType: !1771, size: 32, offset: 96)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !9303, file: !1489, line: 110, baseType: !1775, size: 32, offset: 128)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !9303, file: !1489, line: 111, baseType: !1771, size: 32, offset: 160)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !9303, file: !1489, line: 112, baseType: !1780, size: 32, offset: 192)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !9303, file: !1489, line: 113, baseType: !1771, size: 32, offset: 224)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !9303, file: !1489, line: 114, baseType: !1771, size: 32, offset: 256)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !9303, file: !1489, line: 115, baseType: !1771, size: 32, offset: 288)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !9303, file: !1489, line: 116, baseType: !1787, size: 32, offset: 320)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !9303, file: !1489, line: 117, baseType: !1792, size: 32, offset: 352)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !9303, file: !1489, line: 118, baseType: !1797, size: 32, offset: 384)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !9303, file: !1489, line: 119, baseType: !1801, size: 32, offset: 416)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !9303, file: !1489, line: 120, baseType: !1805, size: 32, offset: 448)
!9320 = !{!9321, !9322, !9323}
!9321 = !DILocalVariable(name: "driver", arg: 1, scope: !9298, file: !1293, line: 1556, type: !9301)
!9322 = !DILocalVariable(name: "D", arg: 2, scope: !9298, file: !1293, line: 1556, type: !1463)
!9323 = !DILocalVariable(name: "smap", scope: !9298, file: !1293, line: 1558, type: !1514)
!9324 = !DILocation(line: 0, scope: !9298)
!9325 = !DILocation(line: 1561, column: 15, scope: !9298)
!9326 = !DILocation(line: 1562, column: 22, scope: !9298)
!9327 = !DILocation(line: 1563, column: 5, scope: !9298)
!9328 = !DILocation(line: 1563, column: 22, scope: !9298)
!9329 = !DILocation(line: 1565, column: 5, scope: !9298)
!9330 = !DILocation(line: 1565, column: 22, scope: !9298)
!9331 = !DILocation(line: 1566, column: 5, scope: !9298)
!9332 = !DILocation(line: 1566, column: 22, scope: !9298)
!9333 = !DILocation(line: 1568, column: 5, scope: !9298)
!9334 = !DILocation(line: 1568, column: 22, scope: !9298)
!9335 = !DILocation(line: 1569, column: 5, scope: !9298)
!9336 = !DILocation(line: 1569, column: 22, scope: !9298)
!9337 = !DILocation(line: 1570, column: 5, scope: !9298)
!9338 = !DILocation(line: 1570, column: 22, scope: !9298)
!9339 = !DILocation(line: 1573, column: 8, scope: !9298)
!9340 = !DILocation(line: 1573, column: 13, scope: !9298)
!9341 = !DILocation(line: 1573, column: 28, scope: !9298)
!9342 = !DILocation(line: 1574, column: 8, scope: !9298)
!9343 = !DILocation(line: 1574, column: 13, scope: !9298)
!9344 = !DILocation(line: 1574, column: 29, scope: !9298)
!9345 = !DILocation(line: 1575, column: 8, scope: !9298)
!9346 = !DILocation(line: 1575, column: 13, scope: !9298)
!9347 = !DILocation(line: 1575, column: 30, scope: !9298)
!9348 = !DILocation(line: 1576, column: 8, scope: !9298)
!9349 = !DILocation(line: 1576, column: 13, scope: !9298)
!9350 = !DILocation(line: 1576, column: 23, scope: !9298)
!9351 = !DILocation(line: 1577, column: 8, scope: !9298)
!9352 = !DILocation(line: 1577, column: 13, scope: !9298)
!9353 = !DILocation(line: 1577, column: 24, scope: !9298)
!9354 = !DILocation(line: 1578, column: 8, scope: !9298)
!9355 = !DILocation(line: 1578, column: 13, scope: !9298)
!9356 = !DILocation(line: 1578, column: 25, scope: !9298)
!9357 = !DILocation(line: 1579, column: 8, scope: !9298)
!9358 = !DILocation(line: 1579, column: 23, scope: !9298)
!9359 = !DILocation(line: 1583, column: 10, scope: !9360)
!9360 = distinct !DILexicalBlock(scope: !9298, file: !1293, line: 1583, column: 9)
!9361 = !DILocation(line: 1583, column: 24, scope: !9360)
!9362 = !DILocation(line: 1583, column: 32, scope: !9360)
!9363 = !DILocation(line: 1583, column: 35, scope: !9360)
!9364 = !DILocation(line: 1583, column: 49, scope: !9360)
!9365 = !DILocation(line: 1583, column: 9, scope: !9298)
!9366 = !DILocation(line: 1586, column: 12, scope: !9367)
!9367 = distinct !DILexicalBlock(scope: !9360, file: !1293, line: 1583, column: 59)
!9368 = !DILocation(line: 1586, column: 17, scope: !9367)
!9369 = !DILocation(line: 1586, column: 25, scope: !9367)
!9370 = !DILocation(line: 1587, column: 12, scope: !9367)
!9371 = !DILocation(line: 1587, column: 17, scope: !9367)
!9372 = !DILocation(line: 1587, column: 24, scope: !9367)
!9373 = !DILocation(line: 1591, column: 10, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9298, file: !1293, line: 1591, column: 9)
!9375 = !DILocation(line: 1589, column: 5, scope: !9367)
!9376 = !DILocation(line: 1600, column: 32, scope: !9377)
!9377 = distinct !DILexicalBlock(scope: !9298, file: !1293, line: 1600, column: 9)
!9378 = !DILocation(line: 1600, column: 35, scope: !9377)
!9379 = !DILocation(line: 1600, column: 49, scope: !9377)
!9380 = !DILocation(line: 1600, column: 9, scope: !9298)
!9381 = !DILocation(line: 1601, column: 12, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9377, file: !1293, line: 1600, column: 59)
!9383 = !DILocation(line: 1601, column: 17, scope: !9382)
!9384 = !DILocation(line: 1601, column: 25, scope: !9382)
!9385 = !DILocation(line: 1602, column: 12, scope: !9382)
!9386 = !DILocation(line: 1602, column: 17, scope: !9382)
!9387 = !DILocation(line: 1602, column: 24, scope: !9382)
!9388 = !DILocation(line: 1603, column: 5, scope: !9382)
!9389 = !DILocation(line: 1607, column: 8, scope: !9298)
!9390 = !DILocation(line: 1607, column: 20, scope: !9298)
!9391 = !DILocation(line: 1622, column: 5, scope: !9298)
!9392 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1293, file: !1293, line: 4553, type: !1565, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9393)
!9393 = !{!9394, !9395, !9396, !9397}
!9394 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9392, file: !1293, line: 4553, type: !88)
!9395 = !DILocalVariable(name: "D", scope: !9392, file: !1293, line: 4555, type: !1463)
!9396 = !DILocalVariable(name: "unlock", scope: !9392, file: !1293, line: 4556, type: !61)
!9397 = !DILocalVariable(name: "cmd", scope: !9392, file: !1293, line: 4557, type: !381)
!9398 = !DILocation(line: 0, scope: !9392)
!9399 = !DILocation(line: 4555, column: 24, scope: !9392)
!9400 = !DILocation(line: 4557, column: 5, scope: !9392)
!9401 = !DILocation(line: 4558, column: 12, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9392, file: !1293, line: 4558, column: 9)
!9403 = !DILocation(line: 4558, column: 9, scope: !9402)
!9404 = !DILocation(line: 4558, column: 23, scope: !9402)
!9405 = !DILocation(line: 4558, column: 31, scope: !9402)
!9406 = !DILocation(line: 4558, column: 34, scope: !9402)
!9407 = !DILocation(line: 4558, column: 48, scope: !9402)
!9408 = !DILocation(line: 4558, column: 56, scope: !9402)
!9409 = !DILocation(line: 4558, column: 59, scope: !9402)
!9410 = !DILocation(line: 4558, column: 73, scope: !9402)
!9411 = !DILocation(line: 4558, column: 9, scope: !9392)
!9412 = !DILocation(line: 4563, column: 24, scope: !9392)
!9413 = !DILocation(line: 4563, column: 31, scope: !9392)
!9414 = !DILocation(line: 4563, column: 36, scope: !9392)
!9415 = !DILocation(line: 4563, column: 28, scope: !9392)
!9416 = !DILocation(line: 4563, column: 5, scope: !9392)
!9417 = !DILocation(line: 4564, column: 5, scope: !9392)
!9418 = !DILocation(line: 4567, column: 28, scope: !9392)
!9419 = !DILocation(line: 4567, column: 36, scope: !9392)
!9420 = !DILocation(line: 4567, column: 41, scope: !9392)
!9421 = !DILocation(line: 4567, column: 5, scope: !9392)
!9422 = !DILocation(line: 4568, column: 17, scope: !9392)
!9423 = !DILocation(line: 4568, column: 22, scope: !9392)
!9424 = !DILocation(line: 4568, column: 14, scope: !9392)
!9425 = !DILocation(line: 4569, column: 22, scope: !9392)
!9426 = !DILocation(line: 4569, column: 54, scope: !9392)
!9427 = !DILocation(line: 4569, column: 65, scope: !9392)
!9428 = !DILocation(line: 4569, column: 62, scope: !9392)
!9429 = !DILocation(line: 4569, column: 87, scope: !9392)
!9430 = !DILocation(line: 4569, column: 85, scope: !9392)
!9431 = !DILocation(line: 4569, column: 60, scope: !9392)
!9432 = !DILocation(line: 4569, column: 58, scope: !9392)
!9433 = !DILocation(line: 4569, column: 51, scope: !9392)
!9434 = !DILocation(line: 4572, column: 24, scope: !9392)
!9435 = !DILocation(line: 4572, column: 5, scope: !9392)
!9436 = !DILocation(line: 4573, column: 5, scope: !9392)
!9437 = !DILocation(line: 4575, column: 5, scope: !9392)
!9438 = !DILocation(line: 4576, column: 1, scope: !9392)
!9439 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1293, file: !1293, line: 4488, type: !8869, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9440)
!9440 = !{!9441, !9442}
!9441 = !DILocalVariable(name: "D", arg: 1, scope: !9439, file: !1293, line: 4488, type: !1463)
!9442 = !DILocalVariable(name: "status", scope: !9439, file: !1293, line: 4490, type: !1515)
!9443 = !DILocation(line: 0, scope: !9439)
!9444 = !DILocation(line: 4490, column: 5, scope: !9439)
!9445 = !DILocation(line: 4491, column: 5, scope: !9439)
!9446 = !DILocation(line: 4492, column: 32, scope: !9447)
!9447 = distinct !DILexicalBlock(scope: !9439, file: !1293, line: 4491, column: 10)
!9448 = !DILocation(line: 4492, column: 40, scope: !9447)
!9449 = !DILocation(line: 4492, column: 45, scope: !9447)
!9450 = !DILocation(line: 4492, column: 9, scope: !9447)
!9451 = !DILocation(line: 4493, column: 20, scope: !9439)
!9452 = !DILocation(line: 4493, column: 32, scope: !9439)
!9453 = !DILocation(line: 4493, column: 29, scope: !9439)
!9454 = !DILocation(line: 4493, column: 27, scope: !9439)
!9455 = !DILocation(line: 4493, column: 16, scope: !9439)
!9456 = !DILocation(line: 4493, column: 5, scope: !9447)
!9457 = distinct !{!9457, !9445, !9458}
!9458 = !DILocation(line: 4493, column: 54, scope: !9439)
!9459 = !DILocation(line: 4494, column: 1, scope: !9439)
!9460 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1293, file: !1293, line: 1742, type: !9299, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9461)
!9461 = !{!9462, !9463, !9464}
!9462 = !DILocalVariable(name: "driver", arg: 1, scope: !9460, file: !1293, line: 1742, type: !9301)
!9463 = !DILocalVariable(name: "D", arg: 2, scope: !9460, file: !1293, line: 1742, type: !1463)
!9464 = !DILocalVariable(name: "smap", scope: !9460, file: !1293, line: 1744, type: !1514)
!9465 = !DILocation(line: 0, scope: !9460)
!9466 = !DILocation(line: 1747, column: 15, scope: !9460)
!9467 = !DILocation(line: 1748, column: 22, scope: !9460)
!9468 = !DILocation(line: 1749, column: 5, scope: !9460)
!9469 = !DILocation(line: 1749, column: 22, scope: !9460)
!9470 = !DILocation(line: 1750, column: 5, scope: !9460)
!9471 = !DILocation(line: 1750, column: 22, scope: !9460)
!9472 = !DILocation(line: 1751, column: 5, scope: !9460)
!9473 = !DILocation(line: 1751, column: 22, scope: !9460)
!9474 = !DILocation(line: 1752, column: 5, scope: !9460)
!9475 = !DILocation(line: 1752, column: 22, scope: !9460)
!9476 = !DILocation(line: 1753, column: 5, scope: !9460)
!9477 = !DILocation(line: 1753, column: 22, scope: !9460)
!9478 = !DILocation(line: 1756, column: 8, scope: !9460)
!9479 = !DILocation(line: 1756, column: 13, scope: !9460)
!9480 = !DILocation(line: 1756, column: 24, scope: !9460)
!9481 = !DILocation(line: 1758, column: 8, scope: !9460)
!9482 = !DILocation(line: 1758, column: 13, scope: !9460)
!9483 = !DILocation(line: 1758, column: 28, scope: !9460)
!9484 = !DILocation(line: 1759, column: 8, scope: !9460)
!9485 = !DILocation(line: 1759, column: 13, scope: !9460)
!9486 = !DILocation(line: 1759, column: 29, scope: !9460)
!9487 = !DILocation(line: 1760, column: 8, scope: !9460)
!9488 = !DILocation(line: 1760, column: 13, scope: !9460)
!9489 = !DILocation(line: 1760, column: 23, scope: !9460)
!9490 = !DILocation(line: 1761, column: 8, scope: !9460)
!9491 = !DILocation(line: 1761, column: 13, scope: !9460)
!9492 = !DILocation(line: 1761, column: 24, scope: !9460)
!9493 = !DILocation(line: 1762, column: 8, scope: !9460)
!9494 = !DILocation(line: 1762, column: 13, scope: !9460)
!9495 = !DILocation(line: 1762, column: 21, scope: !9460)
!9496 = !DILocation(line: 1763, column: 8, scope: !9460)
!9497 = !DILocation(line: 1763, column: 13, scope: !9460)
!9498 = !DILocation(line: 1763, column: 20, scope: !9460)
!9499 = !DILocation(line: 1764, column: 8, scope: !9460)
!9500 = !DILocation(line: 1764, column: 23, scope: !9460)
!9501 = !DILocation(line: 1768, column: 8, scope: !9460)
!9502 = !DILocation(line: 1768, column: 20, scope: !9460)
!9503 = !DILocation(line: 1770, column: 5, scope: !9460)
!9504 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1293, file: !1293, line: 1775, type: !9299, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9505)
!9505 = !{!9506, !9507}
!9506 = !DILocalVariable(name: "driver", arg: 1, scope: !9504, file: !1293, line: 1775, type: !9301)
!9507 = !DILocalVariable(name: "D", arg: 2, scope: !9504, file: !1293, line: 1775, type: !1463)
!9508 = !DILocation(line: 0, scope: !9504)
!9509 = !DILocation(line: 1793, column: 5, scope: !9504)
!9510 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1293, file: !1293, line: 1932, type: !9299, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9511)
!9511 = !{!9512, !9513}
!9512 = !DILocalVariable(name: "driver", arg: 1, scope: !9510, file: !1293, line: 1932, type: !9301)
!9513 = !DILocalVariable(name: "D", arg: 2, scope: !9510, file: !1293, line: 1932, type: !1463)
!9514 = !DILocation(line: 0, scope: !9510)
!9515 = !DILocation(line: 1935, column: 13, scope: !9510)
!9516 = !DILocation(line: 1935, column: 25, scope: !9510)
!9517 = !DILocation(line: 1936, column: 13, scope: !9510)
!9518 = !DILocation(line: 1936, column: 22, scope: !9510)
!9519 = !DILocation(line: 1937, column: 13, scope: !9510)
!9520 = !DILocation(line: 1937, column: 23, scope: !9510)
!9521 = !DILocation(line: 1939, column: 13, scope: !9510)
!9522 = !DILocation(line: 1939, column: 24, scope: !9510)
!9523 = !DILocation(line: 1940, column: 13, scope: !9510)
!9524 = !DILocation(line: 1940, column: 25, scope: !9510)
!9525 = !DILocation(line: 1945, column: 13, scope: !9510)
!9526 = !DILocation(line: 1945, column: 32, scope: !9510)
!9527 = !DILocation(line: 1946, column: 13, scope: !9510)
!9528 = !DILocation(line: 1946, column: 30, scope: !9510)
!9529 = !DILocation(line: 1947, column: 13, scope: !9510)
!9530 = !DILocation(line: 1947, column: 26, scope: !9510)
!9531 = !DILocation(line: 1948, column: 13, scope: !9510)
!9532 = !DILocation(line: 1948, column: 25, scope: !9510)
!9533 = !DILocation(line: 1949, column: 13, scope: !9510)
!9534 = !DILocation(line: 1949, column: 24, scope: !9510)
!9535 = !DILocation(line: 1956, column: 13, scope: !9510)
!9536 = !DILocation(line: 1956, column: 23, scope: !9510)
!9537 = !DILocation(line: 1957, column: 13, scope: !9510)
!9538 = !DILocation(line: 1957, column: 28, scope: !9510)
!9539 = !DILocation(line: 1960, column: 13, scope: !9510)
!9540 = !DILocation(line: 1960, column: 30, scope: !9510)
!9541 = !DILocation(line: 1961, column: 13, scope: !9510)
!9542 = !DILocation(line: 1961, column: 30, scope: !9510)
!9543 = !DILocation(line: 1962, column: 13, scope: !9510)
!9544 = !DILocation(line: 1962, column: 20, scope: !9510)
!9545 = !DILocation(line: 1968, column: 9, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9510, file: !1293, line: 1968, column: 9)
!9547 = !DILocation(line: 1968, column: 36, scope: !9546)
!9548 = !DILocation(line: 1968, column: 9, scope: !9510)
!9549 = !DILocation(line: 1971, column: 12, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9546, file: !1293, line: 1970, column: 5)
!9551 = !DILocation(line: 1971, column: 25, scope: !9550)
!9552 = !DILocation(line: 1979, column: 8, scope: !9510)
!9553 = !DILocation(line: 1979, column: 13, scope: !9510)
!9554 = !DILocation(line: 1979, column: 25, scope: !9510)
!9555 = !DILocation(line: 1980, column: 8, scope: !9510)
!9556 = !DILocation(line: 1980, column: 13, scope: !9510)
!9557 = !DILocation(line: 1980, column: 24, scope: !9510)
!9558 = !DILocation(line: 1981, column: 8, scope: !9510)
!9559 = !DILocation(line: 1981, column: 13, scope: !9510)
!9560 = !DILocation(line: 1981, column: 24, scope: !9510)
!9561 = !DILocation(line: 1982, column: 8, scope: !9510)
!9562 = !DILocation(line: 1982, column: 13, scope: !9510)
!9563 = !DILocation(line: 1982, column: 22, scope: !9510)
!9564 = !DILocation(line: 1983, column: 8, scope: !9510)
!9565 = !DILocation(line: 1983, column: 13, scope: !9510)
!9566 = !DILocation(line: 1983, column: 21, scope: !9510)
!9567 = !DILocation(line: 1984, column: 8, scope: !9510)
!9568 = !DILocation(line: 1984, column: 13, scope: !9510)
!9569 = !DILocation(line: 1984, column: 22, scope: !9510)
!9570 = !DILocation(line: 1985, column: 8, scope: !9510)
!9571 = !DILocation(line: 1985, column: 13, scope: !9510)
!9572 = !DILocation(line: 1985, column: 22, scope: !9510)
!9573 = !DILocation(line: 1986, column: 8, scope: !9510)
!9574 = !DILocation(line: 1986, column: 13, scope: !9510)
!9575 = !DILocation(line: 1986, column: 21, scope: !9510)
!9576 = !DILocation(line: 1987, column: 8, scope: !9510)
!9577 = !DILocation(line: 1987, column: 13, scope: !9510)
!9578 = !DILocation(line: 1987, column: 20, scope: !9510)
!9579 = !DILocation(line: 1988, column: 8, scope: !9510)
!9580 = !DILocation(line: 1988, column: 13, scope: !9510)
!9581 = !DILocation(line: 1988, column: 25, scope: !9510)
!9582 = !DILocation(line: 1989, column: 8, scope: !9510)
!9583 = !DILocation(line: 1989, column: 13, scope: !9510)
!9584 = !DILocation(line: 1989, column: 22, scope: !9510)
!9585 = !DILocation(line: 1990, column: 8, scope: !9510)
!9586 = !DILocation(line: 1990, column: 13, scope: !9510)
!9587 = !DILocation(line: 1990, column: 22, scope: !9510)
!9588 = !DILocation(line: 1993, column: 8, scope: !9510)
!9589 = !DILocation(line: 1993, column: 13, scope: !9510)
!9590 = !DILocation(line: 1993, column: 26, scope: !9510)
!9591 = !DILocation(line: 1996, column: 8, scope: !9510)
!9592 = !DILocation(line: 1996, column: 20, scope: !9510)
!9593 = !DILocation(line: 1999, column: 8, scope: !9510)
!9594 = !DILocation(line: 1999, column: 24, scope: !9510)
!9595 = !DILocation(line: 2000, column: 8, scope: !9510)
!9596 = !DILocation(line: 2000, column: 19, scope: !9510)
!9597 = !DILocation(line: 2001, column: 8, scope: !9510)
!9598 = !DILocation(line: 2001, column: 24, scope: !9510)
!9599 = !DILocation(line: 2002, column: 8, scope: !9510)
!9600 = !DILocation(line: 2002, column: 23, scope: !9510)
!9601 = !DILocation(line: 2004, column: 5, scope: !9510)
!9602 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1293, file: !1293, line: 2160, type: !1763, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9603)
!9603 = !{!9604, !9605, !9606, !9619, !9620, !9621}
!9604 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9602, file: !1293, line: 2160, type: !88)
!9605 = !DILocalVariable(name: "Info", arg: 2, scope: !9602, file: !1293, line: 2160, type: !88)
!9606 = !DILocalVariable(name: "FlashInfo", scope: !9602, file: !1293, line: 2162, type: !9607)
!9607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9608, size: 32)
!9608 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1489, line: 99, baseType: !9609)
!9609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 90, size: 928, elements: !9610)
!9610 = !{!9611, !9612, !9613, !9614, !9615, !9616, !9617, !9618}
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !9609, file: !1489, line: 91, baseType: !61, size: 32)
!9612 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !9609, file: !1489, line: 92, baseType: !1819, size: 256, offset: 32)
!9613 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !9609, file: !1489, line: 93, baseType: !1819, size: 256, offset: 288)
!9614 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !9609, file: !1489, line: 94, baseType: !1819, size: 256, offset: 544)
!9615 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !9609, file: !1489, line: 95, baseType: !61, size: 32, offset: 800)
!9616 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !9609, file: !1489, line: 96, baseType: !1811, size: 16, offset: 832)
!9617 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !9609, file: !1489, line: 97, baseType: !61, size: 32, offset: 864)
!9618 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !9609, file: !1489, line: 98, baseType: !61, size: 32, offset: 896)
!9619 = !DILocalVariable(name: "D", scope: !9602, file: !1293, line: 2163, type: !1463)
!9620 = !DILocalVariable(name: "i", scope: !9602, file: !1293, line: 2164, type: !61)
!9621 = !DILocalVariable(name: "result", scope: !9602, file: !1293, line: 2166, type: !1171)
!9622 = !DILocation(line: 0, scope: !9602)
!9623 = !DILocation(line: 2163, column: 37, scope: !9602)
!9624 = !DILocation(line: 2202, column: 16, scope: !9602)
!9625 = !DILocation(line: 2202, column: 28, scope: !9602)
!9626 = !DILocation(line: 2204, column: 15, scope: !9602)
!9627 = !DILocation(line: 2204, column: 29, scope: !9602)
!9628 = !DILocation(line: 2204, column: 39, scope: !9602)
!9629 = !DILocation(line: 2204, column: 5, scope: !9602)
!9630 = !DILocation(line: 2205, column: 9, scope: !9631)
!9631 = distinct !DILexicalBlock(scope: !9602, file: !1293, line: 2204, column: 45)
!9632 = !DILocation(line: 2205, column: 33, scope: !9631)
!9633 = !DILocation(line: 2206, column: 41, scope: !9631)
!9634 = !DILocation(line: 2206, column: 55, scope: !9631)
!9635 = !DILocation(line: 2206, column: 9, scope: !9631)
!9636 = !DILocation(line: 2206, column: 36, scope: !9631)
!9637 = !DILocation(line: 2207, column: 38, scope: !9631)
!9638 = !DILocation(line: 2207, column: 52, scope: !9631)
!9639 = !DILocation(line: 2207, column: 32, scope: !9631)
!9640 = !DILocation(line: 2209, column: 10, scope: !9631)
!9641 = distinct !{!9641, !9629, !9642}
!9642 = !DILocation(line: 2210, column: 5, scope: !9602)
!9643 = !DILocation(line: 2212, column: 16, scope: !9602)
!9644 = !DILocation(line: 2212, column: 32, scope: !9602)
!9645 = !DILocation(line: 2213, column: 16, scope: !9602)
!9646 = !DILocation(line: 2213, column: 25, scope: !9602)
!9647 = !DILocation(line: 2236, column: 5, scope: !9602)
!9648 = !DILocation(line: 2238, column: 5, scope: !9602)
!9649 = !DILocation(line: 2239, column: 18, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9602, file: !1293, line: 2238, column: 10)
!9651 = !DILocation(line: 2240, column: 34, scope: !9602)
!9652 = !DILocation(line: 2240, column: 5, scope: !9650)
!9653 = distinct !{!9653, !9648, !9654}
!9654 = !DILocation(line: 2240, column: 43, scope: !9602)
!9655 = !DILocation(line: 2259, column: 5, scope: !9602)
!9656 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1293, file: !1293, line: 2275, type: !1565, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9657)
!9657 = !{!9658, !9659, !9660, !9661}
!9658 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9656, file: !1293, line: 2275, type: !88)
!9659 = !DILocalVariable(name: "D", scope: !9656, file: !1293, line: 2278, type: !1463)
!9660 = !DILocalVariable(name: "status", scope: !9656, file: !1293, line: 2279, type: !1515)
!9661 = !DILocalVariable(name: "saved_mask", scope: !9656, file: !1293, line: 2280, type: !61)
!9662 = !DILocation(line: 0, scope: !9656)
!9663 = !DILocation(line: 2278, column: 33, scope: !9656)
!9664 = !DILocation(line: 2286, column: 5, scope: !9656)
!9665 = !DILocation(line: 2293, column: 9, scope: !9656)
!9666 = !DILocation(line: 2294, column: 26, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9656, file: !1293, line: 2293, column: 19)
!9668 = !DILocation(line: 2297, column: 17, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9667, file: !1293, line: 2297, column: 17)
!9670 = !DILocation(line: 2297, column: 17, scope: !9667)
!9671 = !DILocation(line: 2298, column: 17, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9669, file: !1293, line: 2297, column: 36)
!9673 = !DILocation(line: 2299, column: 37, scope: !9672)
!9674 = !DILocation(line: 2300, column: 13, scope: !9672)
!9675 = !DILocation(line: 2303, column: 50, scope: !9667)
!9676 = !DILocation(line: 2303, column: 55, scope: !9667)
!9677 = !DILocation(line: 2303, column: 22, scope: !9667)
!9678 = !DILocation(line: 2306, column: 35, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9667, file: !1293, line: 2306, column: 17)
!9680 = !DILocation(line: 2306, column: 32, scope: !9679)
!9681 = !DILocation(line: 2306, column: 30, scope: !9679)
!9682 = !DILocation(line: 2306, column: 19, scope: !9679)
!9683 = !DILocation(line: 2306, column: 17, scope: !9667)
!9684 = !DILocation(line: 2307, column: 17, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9679, file: !1293, line: 2306, column: 59)
!9686 = !DILocation(line: 2308, column: 17, scope: !9685)
!9687 = !DILocation(line: 2315, column: 12, scope: !9656)
!9688 = !DILocation(line: 2315, column: 21, scope: !9656)
!9689 = !DILocation(line: 2325, column: 9, scope: !9656)
!9690 = !DILocation(line: 2326, column: 5, scope: !9656)
!9691 = !DILocation(line: 2311, column: 17, scope: !9692)
!9692 = distinct !DILexicalBlock(scope: !9679, file: !1293, line: 2310, column: 20)
!9693 = distinct !{!9693, !9665, !9694}
!9694 = !DILocation(line: 2313, column: 9, scope: !9656)
!9695 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1293, file: !1293, line: 2819, type: !1772, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9696)
!9696 = !{!9697, !9698, !9699, !9700, !9701, !9702, !9703, !9704, !9705, !9706, !9709, !9710}
!9697 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9695, file: !1293, line: 2819, type: !88)
!9698 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9695, file: !1293, line: 2819, type: !61)
!9699 = !DILocalVariable(name: "result", scope: !9695, file: !1293, line: 2821, type: !1171)
!9700 = !DILocalVariable(name: "blocksize", scope: !9695, file: !1293, line: 2822, type: !61)
!9701 = !DILocalVariable(name: "eraseunit", scope: !9695, file: !1293, line: 2823, type: !61)
!9702 = !DILocalVariable(name: "eraseaddr", scope: !9695, file: !1293, line: 2824, type: !61)
!9703 = !DILocalVariable(name: "iteration", scope: !9695, file: !1293, line: 2825, type: !61)
!9704 = !DILocalVariable(name: "D", scope: !9695, file: !1293, line: 2826, type: !1463)
!9705 = !DILocalVariable(name: "erase_block", scope: !9695, file: !1293, line: 2827, type: !61)
!9706 = !DILocalVariable(name: "a", scope: !9707, file: !1293, line: 2853, type: !61)
!9707 = distinct !DILexicalBlock(scope: !9708, file: !1293, line: 2852, column: 56)
!9708 = distinct !DILexicalBlock(scope: !9695, file: !1293, line: 2852, column: 9)
!9709 = !DILocalVariable(name: "b", scope: !9707, file: !1293, line: 2853, type: !61)
!9710 = !DILocalVariable(name: "c", scope: !9707, file: !1293, line: 2853, type: !61)
!9711 = !DILocation(line: 0, scope: !9695)
!9712 = !DILocation(line: 2826, column: 30, scope: !9695)
!9713 = !DILocation(line: 2829, column: 5, scope: !9714)
!9714 = distinct !DILexicalBlock(scope: !9715, file: !1293, line: 2829, column: 5)
!9715 = distinct !DILexicalBlock(scope: !9695, file: !1293, line: 2829, column: 5)
!9716 = !DILocation(line: 2829, column: 5, scope: !9715)
!9717 = !DILocation(line: 2829, column: 5, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9714, file: !1293, line: 2829, column: 5)
!9719 = !DILocation(line: 2836, column: 9, scope: !9695)
!9720 = !DILocation(line: 2838, column: 8, scope: !9695)
!9721 = !DILocation(line: 2838, column: 21, scope: !9695)
!9722 = !DILocation(line: 2847, column: 5, scope: !9695)
!9723 = !DILocation(line: 2848, column: 18, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9695, file: !1293, line: 2847, column: 10)
!9725 = !DILocation(line: 2850, column: 34, scope: !9695)
!9726 = !DILocation(line: 2850, column: 5, scope: !9724)
!9727 = distinct !{!9727, !9722, !9728}
!9728 = !DILocation(line: 2850, column: 43, scope: !9695)
!9729 = !DILocation(line: 2839, column: 32, scope: !9695)
!9730 = !DILocation(line: 2861, column: 53, scope: !9707)
!9731 = !DILocation(line: 2861, column: 40, scope: !9707)
!9732 = !DILocation(line: 2861, column: 25, scope: !9707)
!9733 = !DILocation(line: 2874, column: 16, scope: !9707)
!9734 = !DILocation(line: 2874, column: 13, scope: !9707)
!9735 = !DILocation(line: 0, scope: !9707)
!9736 = !DILocation(line: 2875, column: 24, scope: !9707)
!9737 = !DILocation(line: 2877, column: 21, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9707, file: !1293, line: 2877, column: 13)
!9739 = !DILocation(line: 2877, column: 13, scope: !9707)
!9740 = !DILocation(line: 2879, column: 23, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9742, file: !1293, line: 2879, column: 21)
!9742 = distinct !DILexicalBlock(scope: !9743, file: !1293, line: 2878, column: 120)
!9743 = distinct !DILexicalBlock(scope: !9744, file: !1293, line: 2878, column: 13)
!9744 = distinct !DILexicalBlock(scope: !9745, file: !1293, line: 2878, column: 13)
!9745 = distinct !DILexicalBlock(scope: !9738, file: !1293, line: 2877, column: 27)
!9746 = !DILocation(line: 2879, column: 21, scope: !9742)
!9747 = !DILocation(line: 2878, column: 48, scope: !9743)
!9748 = !DILocation(line: 2878, column: 83, scope: !9743)
!9749 = !DILocation(line: 2878, column: 113, scope: !9743)
!9750 = !DILocation(line: 2878, column: 35, scope: !9743)
!9751 = !DILocation(line: 2878, column: 13, scope: !9744)
!9752 = distinct !{!9752, !9751, !9753}
!9753 = !DILocation(line: 2883, column: 13, scope: !9744)
!9754 = !DILocation(line: 2863, column: 19, scope: !9707)
!9755 = !DILocation(line: 2825, column: 24, scope: !9695)
!9756 = !DILocation(line: 2886, column: 9, scope: !9707)
!9757 = !DILocation(line: 2888, column: 36, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9707, file: !1293, line: 2886, column: 31)
!9759 = !DILocation(line: 2888, column: 41, scope: !9758)
!9760 = !DILocation(line: 2889, column: 17, scope: !9758)
!9761 = !DILocation(line: 2891, column: 36, scope: !9758)
!9762 = !DILocation(line: 2891, column: 41, scope: !9758)
!9763 = !DILocation(line: 2892, column: 17, scope: !9758)
!9764 = !DILocation(line: 2894, column: 36, scope: !9758)
!9765 = !DILocation(line: 2894, column: 41, scope: !9758)
!9766 = !DILocation(line: 2895, column: 17, scope: !9758)
!9767 = !DILocation(line: 2897, column: 17, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !1293, line: 2897, column: 17)
!9769 = distinct !DILexicalBlock(scope: !9770, file: !1293, line: 2897, column: 17)
!9770 = distinct !DILexicalBlock(scope: !9758, file: !1293, line: 2897, column: 17)
!9771 = !DILocation(line: 0, scope: !9758)
!9772 = !DILocation(line: 2906, column: 5, scope: !9695)
!9773 = !DILocation(line: 2908, column: 32, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9695, file: !1293, line: 2906, column: 27)
!9775 = !DILocation(line: 2908, column: 37, scope: !9774)
!9776 = !DILocation(line: 2909, column: 13, scope: !9774)
!9777 = !DILocation(line: 2911, column: 32, scope: !9774)
!9778 = !DILocation(line: 2911, column: 37, scope: !9774)
!9779 = !DILocation(line: 2912, column: 13, scope: !9774)
!9780 = !DILocation(line: 2914, column: 32, scope: !9774)
!9781 = !DILocation(line: 2914, column: 37, scope: !9774)
!9782 = !DILocation(line: 2915, column: 13, scope: !9774)
!9783 = !DILocation(line: 0, scope: !9774)
!9784 = !DILocation(line: 2921, column: 56, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9786, file: !1293, line: 2921, column: 5)
!9786 = distinct !DILexicalBlock(scope: !9695, file: !1293, line: 2921, column: 5)
!9787 = !DILocation(line: 2921, column: 5, scope: !9786)
!9788 = !DILocation(line: 2921, column: 35, scope: !9786)
!9789 = !DILocation(line: 2921, column: 22, scope: !9786)
!9790 = !DILocation(line: 2922, column: 9, scope: !9791)
!9791 = distinct !DILexicalBlock(scope: !9785, file: !1293, line: 2921, column: 99)
!9792 = !DILocation(line: 2929, column: 9, scope: !9791)
!9793 = !DILocation(line: 2938, column: 26, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9791, file: !1293, line: 2929, column: 26)
!9795 = !DILocation(line: 2939, column: 37, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !9794, file: !1293, line: 2939, column: 17)
!9797 = !DILocation(line: 2939, column: 17, scope: !9794)
!9798 = distinct !{!9798, !9792, !9799}
!9799 = !DILocation(line: 2943, column: 9, scope: !9791)
!9800 = !DILocation(line: 2921, column: 71, scope: !9785)
!9801 = !DILocation(line: 2921, column: 85, scope: !9785)
!9802 = distinct !{!9802, !9787, !9803}
!9803 = !DILocation(line: 2983, column: 5, scope: !9786)
!9804 = !DILocation(line: 2985, column: 21, scope: !9695)
!9805 = !DILocation(line: 2992, column: 9, scope: !9695)
!9806 = !DILocation(line: 3000, column: 5, scope: !9695)
!9807 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1293, file: !1293, line: 2533, type: !1776, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9808)
!9808 = !{!9809, !9810, !9811, !9812, !9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822}
!9809 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9807, file: !1293, line: 2533, type: !88)
!9810 = !DILocalVariable(name: "Address", arg: 2, scope: !9807, file: !1293, line: 2533, type: !88)
!9811 = !DILocalVariable(name: "Data", arg: 3, scope: !9807, file: !1293, line: 2533, type: !88)
!9812 = !DILocalVariable(name: "Length", arg: 4, scope: !9807, file: !1293, line: 2533, type: !61)
!9813 = !DILocalVariable(name: "D", scope: !9807, file: !1293, line: 2535, type: !1463)
!9814 = !DILocalVariable(name: "savedMask", scope: !9807, file: !1293, line: 2536, type: !61)
!9815 = !DILocalVariable(name: "address", scope: !9807, file: !1293, line: 2537, type: !61)
!9816 = !DILocalVariable(name: "p_data", scope: !9807, file: !1293, line: 2538, type: !996)
!9817 = !DILocalVariable(name: "p_data_first", scope: !9807, file: !1293, line: 2539, type: !996)
!9818 = !DILocalVariable(name: "result", scope: !9807, file: !1293, line: 2540, type: !1171)
!9819 = !DILocalVariable(name: "written", scope: !9807, file: !1293, line: 2541, type: !61)
!9820 = !DILocalVariable(name: "length", scope: !9807, file: !1293, line: 2542, type: !61)
!9821 = !DILocalVariable(name: "cmd1", scope: !9807, file: !1293, line: 2543, type: !61)
!9822 = !DILocalVariable(name: "j", scope: !9823, file: !1293, line: 2599, type: !61)
!9823 = distinct !DILexicalBlock(scope: !9824, file: !1293, line: 2597, column: 61)
!9824 = distinct !DILexicalBlock(scope: !9825, file: !1293, line: 2597, column: 13)
!9825 = distinct !DILexicalBlock(scope: !9807, file: !1293, line: 2583, column: 25)
!9826 = !DILocation(line: 0, scope: !9807)
!9827 = !DILocation(line: 2535, column: 26, scope: !9807)
!9828 = !DILocation(line: 2537, column: 37, scope: !9807)
!9829 = !DILocation(line: 2538, column: 5, scope: !9807)
!9830 = !DILocation(line: 2538, column: 19, scope: !9807)
!9831 = !DILocation(line: 2542, column: 5, scope: !9807)
!9832 = !DILocation(line: 2545, column: 5, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9834, file: !1293, line: 2545, column: 5)
!9834 = distinct !DILexicalBlock(scope: !9807, file: !1293, line: 2545, column: 5)
!9835 = !DILocation(line: 2545, column: 5, scope: !9834)
!9836 = !DILocation(line: 2545, column: 5, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9833, file: !1293, line: 2545, column: 5)
!9838 = !DILocation(line: 2567, column: 9, scope: !9807)
!9839 = !DILocation(line: 2569, column: 8, scope: !9807)
!9840 = !DILocation(line: 2569, column: 21, scope: !9807)
!9841 = !DILocation(line: 2576, column: 5, scope: !9807)
!9842 = !DILocation(line: 2577, column: 18, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9807, file: !1293, line: 2576, column: 10)
!9844 = !DILocation(line: 2579, column: 34, scope: !9807)
!9845 = !DILocation(line: 2579, column: 5, scope: !9843)
!9846 = distinct !{!9846, !9841, !9847}
!9847 = !DILocation(line: 2579, column: 43, scope: !9807)
!9848 = !DILocation(line: 2583, column: 14, scope: !9807)
!9849 = !DILocation(line: 2583, column: 5, scope: !9807)
!9850 = !DILocation(line: 2584, column: 27, scope: !9825)
!9851 = !DILocation(line: 2592, column: 18, scope: !9825)
!9852 = !DILocation(line: 2592, column: 35, scope: !9825)
!9853 = !DILocation(line: 2592, column: 74, scope: !9825)
!9854 = !DILocation(line: 2592, column: 50, scope: !9825)
!9855 = !DILocation(line: 2592, column: 39, scope: !9825)
!9856 = !DILocation(line: 2595, column: 37, scope: !9825)
!9857 = !DILocation(line: 2595, column: 29, scope: !9825)
!9858 = !DILocation(line: 2595, column: 16, scope: !9825)
!9859 = !DILocation(line: 2597, column: 13, scope: !9824)
!9860 = !DILocation(line: 2597, column: 30, scope: !9824)
!9861 = !DILocation(line: 2597, column: 13, scope: !9825)
!9862 = !DILocation(line: 0, scope: !9823)
!9863 = !DILocation(line: 2600, column: 27, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9865, file: !1293, line: 2600, column: 13)
!9865 = distinct !DILexicalBlock(scope: !9823, file: !1293, line: 2600, column: 13)
!9866 = !DILocation(line: 2600, column: 13, scope: !9865)
!9867 = !DILocation(line: 2601, column: 38, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9864, file: !1293, line: 2600, column: 42)
!9869 = !DILocation(line: 2601, column: 17, scope: !9868)
!9870 = !DILocation(line: 2601, column: 36, scope: !9868)
!9871 = !DILocation(line: 2600, column: 38, scope: !9864)
!9872 = distinct !{!9872, !9866, !9873}
!9873 = !DILocation(line: 2602, column: 13, scope: !9865)
!9874 = !DILocation(line: 0, scope: !9825)
!9875 = !DILocation(line: 2606, column: 18, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !9825, file: !1293, line: 2606, column: 13)
!9877 = !DILocation(line: 2606, column: 29, scope: !9876)
!9878 = !DILocation(line: 2606, column: 13, scope: !9825)
!9879 = !DILocation(line: 2607, column: 13, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9876, file: !1293, line: 2606, column: 55)
!9881 = !DILocation(line: 2608, column: 9, scope: !9880)
!9882 = !DILocation(line: 2613, column: 16, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9825, file: !1293, line: 2613, column: 13)
!9884 = !DILocation(line: 2613, column: 29, scope: !9883)
!9885 = !DILocation(line: 0, scope: !9883)
!9886 = !DILocation(line: 2613, column: 13, scope: !9825)
!9887 = !DILocation(line: 2614, column: 20, scope: !9888)
!9888 = distinct !DILexicalBlock(scope: !9883, file: !1293, line: 2613, column: 35)
!9889 = !DILocation(line: 2615, column: 32, scope: !9888)
!9890 = !DILocation(line: 2615, column: 40, scope: !9888)
!9891 = !DILocation(line: 2615, column: 13, scope: !9888)
!9892 = !DILocation(line: 2616, column: 9, scope: !9888)
!9893 = !DILocation(line: 2619, column: 20, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9883, file: !1293, line: 2618, column: 9)
!9895 = !DILocation(line: 2620, column: 32, scope: !9894)
!9896 = !DILocation(line: 2620, column: 40, scope: !9894)
!9897 = !DILocation(line: 2620, column: 13, scope: !9894)
!9898 = !DILocation(line: 2626, column: 21, scope: !9825)
!9899 = !DILocation(line: 2633, column: 37, scope: !9825)
!9900 = !DILocation(line: 2634, column: 45, scope: !9825)
!9901 = !DILocation(line: 2634, column: 42, scope: !9825)
!9902 = !DILocation(line: 2634, column: 40, scope: !9825)
!9903 = !DILocation(line: 2634, column: 58, scope: !9825)
!9904 = !DILocation(line: 2634, column: 29, scope: !9825)
!9905 = !DILocation(line: 2635, column: 28, scope: !9825)
!9906 = !DILocation(line: 2636, column: 9, scope: !9825)
!9907 = !DILocation(line: 2638, column: 26, scope: !9825)
!9908 = !DILocation(line: 2638, column: 9, scope: !9825)
!9909 = !DILocation(line: 2639, column: 29, scope: !9825)
!9910 = !DILocation(line: 2639, column: 9, scope: !9825)
!9911 = !DILocation(line: 2662, column: 9, scope: !9825)
!9912 = !DILocation(line: 2670, column: 9, scope: !9825)
!9913 = !DILocation(line: 2676, column: 89, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9825, file: !1293, line: 2670, column: 13)
!9915 = !DILocation(line: 2676, column: 26, scope: !9914)
!9916 = !DILocation(line: 2678, column: 36, scope: !9825)
!9917 = !DILocation(line: 2678, column: 9, scope: !9914)
!9918 = distinct !{!9918, !9912, !9919}
!9919 = !DILocation(line: 2678, column: 45, scope: !9825)
!9920 = !DILocation(line: 2718, column: 19, scope: !9825)
!9921 = !DILocation(line: 2718, column: 16, scope: !9825)
!9922 = !DILocation(line: 2719, column: 16, scope: !9825)
!9923 = !DILocation(line: 2722, column: 31, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9825, file: !1293, line: 2722, column: 13)
!9925 = !DILocation(line: 2722, column: 13, scope: !9825)
!9926 = distinct !{!9926, !9849, !9927}
!9927 = !DILocation(line: 2725, column: 5, scope: !9807)
!9928 = !DILocation(line: 2748, column: 21, scope: !9807)
!9929 = !DILocation(line: 2755, column: 9, scope: !9807)
!9930 = !DILocation(line: 2757, column: 16, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9807, file: !1293, line: 2757, column: 9)
!9932 = !DILocation(line: 2761, column: 1, scope: !9807)
!9933 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1293, file: !1293, line: 3019, type: !1772, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9934)
!9934 = !{!9935, !9936}
!9935 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9933, file: !1293, line: 3019, type: !88)
!9936 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9933, file: !1293, line: 3019, type: !61)
!9937 = !DILocation(line: 0, scope: !9933)
!9938 = !DILocation(line: 3021, column: 5, scope: !9933)
!9939 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1293, file: !1293, line: 3124, type: !1781, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !9940)
!9940 = !{!9941, !9942, !9943, !9944, !9945, !9946, !9947, !9948}
!9941 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9939, file: !1293, line: 3124, type: !88)
!9942 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9939, file: !1293, line: 3124, type: !61)
!9943 = !DILocalVariable(name: "result", scope: !9939, file: !1293, line: 3126, type: !1171)
!9944 = !DILocalVariable(name: "savedMask", scope: !9939, file: !1293, line: 3127, type: !61)
!9945 = !DILocalVariable(name: "D", scope: !9939, file: !1293, line: 3128, type: !1463)
!9946 = !DILocalVariable(name: "status_busy", scope: !9939, file: !1293, line: 3129, type: !1515)
!9947 = !DILocalVariable(name: "status_suspend", scope: !9939, file: !1293, line: 3129, type: !1515)
!9948 = !DILocalVariable(name: "check_status", scope: !9949, file: !1293, line: 3141, type: !1515)
!9949 = distinct !DILexicalBlock(scope: !9950, file: !1293, line: 3140, column: 56)
!9950 = distinct !DILexicalBlock(scope: !9939, file: !1293, line: 3140, column: 9)
!9951 = !DILocation(line: 0, scope: !9939)
!9952 = !DILocation(line: 3128, column: 47, scope: !9939)
!9953 = !DILocation(line: 3131, column: 5, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9955, file: !1293, line: 3131, column: 5)
!9955 = distinct !DILexicalBlock(scope: !9939, file: !1293, line: 3131, column: 5)
!9956 = !DILocation(line: 3131, column: 5, scope: !9955)
!9957 = !DILocation(line: 3131, column: 5, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9954, file: !1293, line: 3131, column: 5)
!9959 = !DILocation(line: 3134, column: 50, scope: !9939)
!9960 = !DILocation(line: 3134, column: 55, scope: !9939)
!9961 = !DILocation(line: 3134, column: 22, scope: !9939)
!9962 = !DILocation(line: 3135, column: 50, scope: !9939)
!9963 = !DILocation(line: 3135, column: 55, scope: !9939)
!9964 = !DILocation(line: 3135, column: 22, scope: !9939)
!9965 = !DILocation(line: 3138, column: 17, scope: !9939)
!9966 = !DILocation(line: 3140, column: 32, scope: !9950)
!9967 = !DILocation(line: 3140, column: 29, scope: !9950)
!9968 = !DILocation(line: 3140, column: 27, scope: !9950)
!9969 = !DILocation(line: 3140, column: 11, scope: !9950)
!9970 = !DILocation(line: 3140, column: 9, scope: !9939)
!9971 = !DILocation(line: 3141, column: 34, scope: !9949)
!9972 = !DILocation(line: 3141, column: 60, scope: !9949)
!9973 = !DILocation(line: 3141, column: 58, scope: !9949)
!9974 = !DILocation(line: 0, scope: !9949)
!9975 = !DILocation(line: 3144, column: 37, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9949, file: !1293, line: 3144, column: 13)
!9977 = !DILocation(line: 3144, column: 35, scope: !9976)
!9978 = !DILocation(line: 3144, column: 16, scope: !9976)
!9979 = !DILocation(line: 3144, column: 52, scope: !9976)
!9980 = !DILocation(line: 3145, column: 21, scope: !9976)
!9981 = !DILocation(line: 3145, column: 38, scope: !9976)
!9982 = !DILocation(line: 3147, column: 13, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9984, file: !1293, line: 3147, column: 13)
!9984 = distinct !DILexicalBlock(scope: !9985, file: !1293, line: 3147, column: 13)
!9985 = distinct !DILexicalBlock(scope: !9976, file: !1293, line: 3145, column: 61)
!9986 = !DILocation(line: 3147, column: 13, scope: !9984)
!9987 = !DILocation(line: 3147, column: 13, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9983, file: !1293, line: 3147, column: 13)
!9989 = !DILocation(line: 3150, column: 13, scope: !9985)
!9990 = !DILocation(line: 3151, column: 33, scope: !9985)
!9991 = !DILocation(line: 3153, column: 9, scope: !9985)
!9992 = !DILocation(line: 3155, column: 20, scope: !9993)
!9993 = distinct !DILexicalBlock(scope: !9994, file: !1293, line: 3155, column: 17)
!9994 = distinct !DILexicalBlock(scope: !9976, file: !1293, line: 3153, column: 16)
!9995 = !DILocation(line: 3155, column: 31, scope: !9993)
!9996 = !DILocation(line: 3155, column: 17, scope: !9994)
!9997 = !DILocation(line: 3156, column: 36, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9993, file: !1293, line: 3155, column: 54)
!9999 = !DILocation(line: 3156, column: 17, scope: !9998)
!10000 = !DILocation(line: 3157, column: 36, scope: !9998)
!10001 = !DILocation(line: 3157, column: 17, scope: !9998)
!10002 = !DILocation(line: 3158, column: 13, scope: !9998)
!10003 = !DILocation(line: 3191, column: 5, scope: !9939)
!10004 = !DILocation(line: 3193, column: 9, scope: !9939)
!10005 = !DILocation(line: 3160, column: 13, scope: !9994)
!10006 = !DILocation(line: 3173, column: 13, scope: !9994)
!10007 = !DILocation(line: 3194, column: 18, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10009, file: !1293, line: 3193, column: 32)
!10009 = distinct !DILexicalBlock(scope: !9939, file: !1293, line: 3193, column: 9)
!10010 = !DILocation(line: 3195, column: 5, scope: !10008)
!10011 = !DILocation(line: 3197, column: 5, scope: !9939)
!10012 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1293, file: !1293, line: 3225, type: !1772, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10013)
!10013 = !{!10014, !10015, !10016, !10017, !10018}
!10014 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10012, file: !1293, line: 3225, type: !88)
!10015 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10012, file: !1293, line: 3225, type: !61)
!10016 = !DILocalVariable(name: "D", scope: !10012, file: !1293, line: 3227, type: !1463)
!10017 = !DILocalVariable(name: "status", scope: !10012, file: !1293, line: 3228, type: !1515)
!10018 = !DILocalVariable(name: "savedMask", scope: !10012, file: !1293, line: 3229, type: !61)
!10019 = !DILocation(line: 0, scope: !10012)
!10020 = !DILocation(line: 3227, column: 30, scope: !10012)
!10021 = !DILocation(line: 3231, column: 17, scope: !10012)
!10022 = !DILocation(line: 3234, column: 5, scope: !10012)
!10023 = !DILocation(line: 3238, column: 5, scope: !10012)
!10024 = !DILocation(line: 3239, column: 46, scope: !10025)
!10025 = distinct !DILexicalBlock(scope: !10012, file: !1293, line: 3238, column: 15)
!10026 = !DILocation(line: 3239, column: 51, scope: !10025)
!10027 = !DILocation(line: 3239, column: 18, scope: !10025)
!10028 = !DILocation(line: 3241, column: 31, scope: !10029)
!10029 = distinct !DILexicalBlock(scope: !10025, file: !1293, line: 3241, column: 13)
!10030 = !DILocation(line: 3241, column: 28, scope: !10029)
!10031 = !DILocation(line: 3241, column: 26, scope: !10029)
!10032 = !DILocation(line: 3241, column: 15, scope: !10029)
!10033 = !DILocation(line: 3241, column: 13, scope: !10025)
!10034 = distinct !{!10034, !10023, !10035}
!10035 = !DILocation(line: 3244, column: 5, scope: !10012)
!10036 = !DILocation(line: 3246, column: 5, scope: !10012)
!10037 = !DILocation(line: 3248, column: 5, scope: !10012)
!10038 = !DILocation(line: 3250, column: 5, scope: !10012)
!10039 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1293, file: !1293, line: 3277, type: !1772, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10040)
!10040 = !{!10041, !10042, !10043}
!10041 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10039, file: !1293, line: 3277, type: !88)
!10042 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10039, file: !1293, line: 3277, type: !61)
!10043 = !DILocalVariable(name: "D", scope: !10039, file: !1293, line: 3279, type: !1463)
!10044 = !DILocation(line: 0, scope: !10039)
!10045 = !DILocation(line: 3279, column: 29, scope: !10039)
!10046 = !DILocation(line: 3281, column: 5, scope: !10039)
!10047 = !DILocation(line: 3282, column: 5, scope: !10039)
!10048 = !DILocation(line: 3283, column: 5, scope: !10039)
!10049 = !DILocation(line: 3285, column: 5, scope: !10039)
!10050 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1293, file: !1293, line: 3332, type: !1798, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10051)
!10051 = !{!10052, !10053, !10054}
!10052 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10050, file: !1293, line: 3332, type: !88)
!10053 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !10050, file: !1293, line: 3332, type: !88)
!10054 = !DILocalVariable(name: "ACTION", arg: 3, scope: !10050, file: !1293, line: 3332, type: !61)
!10055 = !DILocation(line: 0, scope: !10050)
!10056 = !DILocation(line: 3334, column: 5, scope: !10050)
!10057 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1293, file: !1293, line: 2350, type: !1806, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10058)
!10058 = !{!10059, !10060, !10061, !10062}
!10059 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10057, file: !1293, line: 2350, type: !88)
!10060 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !10057, file: !1293, line: 2350, type: !61)
!10061 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !10057, file: !1293, line: 2350, type: !88)
!10062 = !DILocalVariable(name: "D", scope: !10057, file: !1293, line: 2352, type: !1463)
!10063 = !DILocation(line: 0, scope: !10057)
!10064 = !DILocation(line: 2353, column: 9, scope: !10057)
!10065 = !DILocation(line: 2354, column: 12, scope: !10066)
!10066 = distinct !DILexicalBlock(scope: !10067, file: !1293, line: 2353, column: 51)
!10067 = distinct !DILexicalBlock(scope: !10057, file: !1293, line: 2353, column: 9)
!10068 = !DILocation(line: 2354, column: 9, scope: !10066)
!10069 = !DILocation(line: 2355, column: 5, scope: !10066)
!10070 = !DILocation(line: 2356, column: 17, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10072, file: !1293, line: 2356, column: 13)
!10072 = distinct !DILexicalBlock(scope: !10073, file: !1293, line: 2355, column: 71)
!10073 = distinct !DILexicalBlock(scope: !10067, file: !1293, line: 2355, column: 16)
!10074 = !DILocation(line: 2356, column: 14, scope: !10071)
!10075 = !DILocation(line: 2356, column: 28, scope: !10071)
!10076 = !DILocation(line: 2356, column: 49, scope: !10071)
!10077 = !DILocation(line: 2356, column: 56, scope: !10071)
!10078 = !DILocation(line: 2356, column: 70, scope: !10071)
!10079 = !DILocation(line: 2356, column: 80, scope: !10071)
!10080 = !DILocation(line: 2356, column: 13, scope: !10072)
!10081 = !DILocation(line: 2361, column: 9, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10083, file: !1293, line: 2361, column: 9)
!10083 = distinct !DILexicalBlock(scope: !10084, file: !1293, line: 2361, column: 9)
!10084 = distinct !DILexicalBlock(scope: !10085, file: !1293, line: 2361, column: 9)
!10085 = distinct !DILexicalBlock(scope: !10073, file: !1293, line: 2359, column: 12)
!10086 = !DILocation(line: 2363, column: 5, scope: !10057)
!10087 = !DILocation(line: 2364, column: 1, scope: !10057)
!10088 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1293, file: !1293, line: 3355, type: !1565, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10089)
!10089 = !{!10090, !10091, !10092}
!10090 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10088, file: !1293, line: 3355, type: !88)
!10091 = !DILocalVariable(name: "D", scope: !10088, file: !1293, line: 3357, type: !1463)
!10092 = !DILocalVariable(name: "status", scope: !10088, file: !1293, line: 3358, type: !1263)
!10093 = !DILocation(line: 0, scope: !10088)
!10094 = !DILocation(line: 3366, column: 12, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10088, file: !1293, line: 3366, column: 9)
!10096 = !DILocation(line: 3366, column: 17, scope: !10095)
!10097 = !DILocation(line: 3366, column: 9, scope: !10095)
!10098 = !DILocation(line: 3366, column: 9, scope: !10088)
!10099 = !DILocation(line: 3357, column: 25, scope: !10088)
!10100 = !DILocation(line: 3367, column: 18, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10095, file: !1293, line: 3366, column: 33)
!10102 = !DILocation(line: 3368, column: 25, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10101, file: !1293, line: 3368, column: 13)
!10104 = !DILocation(line: 3368, column: 22, scope: !10103)
!10105 = !DILocation(line: 3368, column: 20, scope: !10103)
!10106 = !DILocation(line: 3368, column: 13, scope: !10101)
!10107 = !DILocation(line: 3373, column: 5, scope: !10088)
!10108 = !DILocation(line: 3374, column: 1, scope: !10088)
!10109 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1293, file: !1293, line: 3044, type: !10110, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10112)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{!1171, !88, !61, !381}
!10112 = !{!10113, !10114, !10115, !10116, !10117, !10118, !10119, !10120}
!10113 = !DILocalVariable(name: "MTDData", arg: 1, scope: !10109, file: !1293, line: 3044, type: !88)
!10114 = !DILocalVariable(name: "addr", arg: 2, scope: !10109, file: !1293, line: 3044, type: !61)
!10115 = !DILocalVariable(name: "data", arg: 3, scope: !10109, file: !1293, line: 3044, type: !381)
!10116 = !DILocalVariable(name: "savedMask", scope: !10109, file: !1293, line: 3046, type: !61)
!10117 = !DILocalVariable(name: "D", scope: !10109, file: !1293, line: 3047, type: !1463)
!10118 = !DILocalVariable(name: "result", scope: !10109, file: !1293, line: 3048, type: !1171)
!10119 = !DILocalVariable(name: "check_data", scope: !10109, file: !1293, line: 3049, type: !381)
!10120 = !DILocalVariable(name: "status_busy", scope: !10109, file: !1293, line: 3050, type: !1263)
!10121 = !DILocation(line: 0, scope: !10109)
!10122 = !DILocation(line: 3047, column: 43, scope: !10109)
!10123 = !DILocation(line: 3053, column: 47, scope: !10109)
!10124 = !DILocation(line: 3053, column: 52, scope: !10109)
!10125 = !DILocation(line: 3053, column: 19, scope: !10109)
!10126 = !DILocation(line: 3056, column: 9, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10109, file: !1293, line: 3056, column: 9)
!10128 = !DILocation(line: 3056, column: 9, scope: !10109)
!10129 = !DILocation(line: 3058, column: 9, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10131, file: !1293, line: 3058, column: 9)
!10131 = distinct !DILexicalBlock(scope: !10132, file: !1293, line: 3058, column: 9)
!10132 = distinct !DILexicalBlock(scope: !10127, file: !1293, line: 3056, column: 28)
!10133 = !DILocation(line: 3058, column: 9, scope: !10131)
!10134 = !DILocation(line: 3058, column: 9, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10130, file: !1293, line: 3058, column: 9)
!10136 = !DILocation(line: 3060, column: 9, scope: !10132)
!10137 = !DILocation(line: 3062, column: 29, scope: !10132)
!10138 = !DILocation(line: 3063, column: 5, scope: !10132)
!10139 = !DILocation(line: 3065, column: 38, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10127, file: !1293, line: 3065, column: 15)
!10141 = !DILocation(line: 3065, column: 35, scope: !10140)
!10142 = !DILocation(line: 3065, column: 33, scope: !10140)
!10143 = !DILocation(line: 3065, column: 17, scope: !10140)
!10144 = !DILocation(line: 3065, column: 15, scope: !10127)
!10145 = !DILocation(line: 3066, column: 21, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10140, file: !1293, line: 3065, column: 62)
!10147 = !DILocation(line: 3068, column: 9, scope: !10146)
!10148 = !DILocation(line: 3071, column: 23, scope: !10146)
!10149 = !DILocation(line: 3071, column: 22, scope: !10146)
!10150 = !DILocation(line: 3073, column: 24, scope: !10151)
!10151 = distinct !DILexicalBlock(scope: !10146, file: !1293, line: 3073, column: 13)
!10152 = !DILocation(line: 3073, column: 13, scope: !10146)
!10153 = !DILocation(line: 3078, column: 16, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10155, file: !1293, line: 3078, column: 16)
!10155 = distinct !DILexicalBlock(scope: !10151, file: !1293, line: 3075, column: 16)
!10156 = !DILocation(line: 3078, column: 16, scope: !10155)
!10157 = !DILocation(line: 3081, column: 58, scope: !10158)
!10158 = distinct !DILexicalBlock(scope: !10154, file: !1293, line: 3078, column: 46)
!10159 = !DILocation(line: 3081, column: 17, scope: !10158)
!10160 = !DILocation(line: 3082, column: 22, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10158, file: !1293, line: 3082, column: 21)
!10162 = !DILocation(line: 3082, column: 49, scope: !10161)
!10163 = !DILocation(line: 3082, column: 21, scope: !10158)
!10164 = !DILocation(line: 3088, column: 9, scope: !10146)
!10165 = !DILocation(line: 3091, column: 9, scope: !10109)
!10166 = !DILocation(line: 3092, column: 13, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10168, file: !1293, line: 3092, column: 13)
!10168 = distinct !DILexicalBlock(scope: !10109, file: !1293, line: 3091, column: 9)
!10169 = !DILocation(line: 3092, column: 33, scope: !10167)
!10170 = !DILocation(line: 3092, column: 13, scope: !10168)
!10171 = !DILocation(line: 3106, column: 5, scope: !10109)
!10172 = !DILocation(line: 3107, column: 1, scope: !10109)
!10173 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1293, file: !1293, line: 3497, type: !10174, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10176)
!10174 = !DISubroutineType(types: !10175)
!10175 = !{null, !1463, !61}
!10176 = !{!10177, !10178, !10179}
!10177 = !DILocalVariable(name: "D", arg: 1, scope: !10173, file: !1293, line: 3497, type: !1463)
!10178 = !DILocalVariable(name: "addr", arg: 2, scope: !10173, file: !1293, line: 3497, type: !61)
!10179 = !DILocalVariable(name: "savedMask", scope: !10173, file: !1293, line: 3499, type: !61)
!10180 = !DILocation(line: 0, scope: !10173)
!10181 = !DILocation(line: 3501, column: 14, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10173, file: !1293, line: 3501, column: 9)
!10183 = !DILocation(line: 3501, column: 25, scope: !10182)
!10184 = !DILocation(line: 3501, column: 9, scope: !10173)
!10185 = !DILocation(line: 3502, column: 9, scope: !10186)
!10186 = distinct !DILexicalBlock(scope: !10182, file: !1293, line: 3501, column: 51)
!10187 = !DILocation(line: 3503, column: 5, scope: !10186)
!10188 = !DILocation(line: 3507, column: 17, scope: !10173)
!10189 = !DILocation(line: 3516, column: 5, scope: !10173)
!10190 = !DILocation(line: 3517, column: 31, scope: !10173)
!10191 = !DILocation(line: 3517, column: 38, scope: !10173)
!10192 = !DILocation(line: 3517, column: 43, scope: !10173)
!10193 = !DILocation(line: 3517, column: 59, scope: !10173)
!10194 = !DILocation(line: 3517, column: 56, scope: !10173)
!10195 = !DILocation(line: 3517, column: 5, scope: !10173)
!10196 = !DILocation(line: 3523, column: 5, scope: !10173)
!10197 = !DILocation(line: 3524, column: 1, scope: !10173)
!10198 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1293, file: !1293, line: 2018, type: !9299, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10199)
!10199 = !{!10200, !10201, !10202}
!10200 = !DILocalVariable(name: "driver", arg: 1, scope: !10198, file: !1293, line: 2018, type: !9301)
!10201 = !DILocalVariable(name: "D", arg: 2, scope: !10198, file: !1293, line: 2018, type: !1463)
!10202 = !DILocalVariable(name: "result", scope: !10198, file: !1293, line: 2020, type: !1171)
!10203 = !DILocation(line: 0, scope: !10198)
!10204 = !DILocation(line: 2022, column: 13, scope: !10198)
!10205 = !DILocation(line: 2022, column: 5, scope: !10198)
!10206 = !DILocation(line: 2031, column: 16, scope: !10207)
!10207 = distinct !DILexicalBlock(scope: !10198, file: !1293, line: 2022, column: 31)
!10208 = !DILocation(line: 2031, column: 27, scope: !10207)
!10209 = !DILocation(line: 2033, column: 22, scope: !10207)
!10210 = !DILocation(line: 2034, column: 13, scope: !10207)
!10211 = !DILocation(line: 2049, column: 16, scope: !10207)
!10212 = !DILocation(line: 2049, column: 27, scope: !10207)
!10213 = !DILocation(line: 2051, column: 23, scope: !10207)
!10214 = !DILocation(line: 2053, column: 13, scope: !10207)
!10215 = !DILocation(line: 2058, column: 22, scope: !10207)
!10216 = !DILocation(line: 2059, column: 13, scope: !10207)
!10217 = !DILocation(line: 2079, column: 13, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10219, file: !1293, line: 2079, column: 13)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !1293, line: 2079, column: 13)
!10220 = distinct !DILexicalBlock(scope: !10207, file: !1293, line: 2079, column: 13)
!10221 = !DILocation(line: 2083, column: 5, scope: !10198)
!10222 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1293, file: !1293, line: 2100, type: !10223, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10225)
!10223 = !DISubroutineType(types: !10224)
!10224 = !{!1171, !9301, !1463, !61, !61}
!10225 = !{!10226, !10227, !10228, !10229, !10230}
!10226 = !DILocalVariable(name: "driver", arg: 1, scope: !10222, file: !1293, line: 2100, type: !9301)
!10227 = !DILocalVariable(name: "D", arg: 2, scope: !10222, file: !1293, line: 2100, type: !1463)
!10228 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !10222, file: !1293, line: 2100, type: !61)
!10229 = !DILocalVariable(name: "parameter", arg: 4, scope: !10222, file: !1293, line: 2100, type: !61)
!10230 = !DILocalVariable(name: "result", scope: !10222, file: !1293, line: 2102, type: !1171)
!10231 = !DILocation(line: 0, scope: !10222)
!10232 = !DILocation(line: 2105, column: 16, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10222, file: !1293, line: 2105, column: 9)
!10234 = !DILocation(line: 2105, column: 24, scope: !10233)
!10235 = !DILocation(line: 2109, column: 12, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10222, file: !1293, line: 2109, column: 9)
!10237 = !DILocation(line: 2109, column: 16, scope: !10236)
!10238 = !DILocation(line: 2109, column: 24, scope: !10236)
!10239 = !DILocation(line: 2109, column: 30, scope: !10236)
!10240 = !DILocation(line: 2109, column: 40, scope: !10236)
!10241 = !DILocation(line: 2109, column: 9, scope: !10222)
!10242 = !DILocation(line: 2118, column: 19, scope: !10222)
!10243 = !DILocation(line: 2118, column: 8, scope: !10222)
!10244 = !DILocation(line: 2118, column: 17, scope: !10222)
!10245 = !DILocation(line: 2119, column: 23, scope: !10222)
!10246 = !DILocation(line: 2119, column: 8, scope: !10222)
!10247 = !DILocation(line: 2119, column: 21, scope: !10222)
!10248 = !DILocation(line: 2122, column: 5, scope: !10222)
!10249 = !DILocation(line: 2125, column: 8, scope: !10222)
!10250 = !DILocation(line: 2125, column: 13, scope: !10222)
!10251 = !DILocation(line: 2125, column: 24, scope: !10222)
!10252 = !DILocation(line: 2126, column: 26, scope: !10222)
!10253 = !DILocation(line: 2126, column: 5, scope: !10222)
!10254 = !DILocation(line: 2128, column: 9, scope: !10255)
!10255 = distinct !DILexicalBlock(scope: !10222, file: !1293, line: 2128, column: 9)
!10256 = !DILocation(line: 2128, column: 31, scope: !10255)
!10257 = !DILocation(line: 2128, column: 60, scope: !10255)
!10258 = !DILocation(line: 2128, column: 9, scope: !10222)
!10259 = !DILocation(line: 2129, column: 12, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10255, file: !1293, line: 2128, column: 110)
!10261 = !DILocation(line: 2129, column: 17, scope: !10260)
!10262 = !DILocation(line: 2129, column: 28, scope: !10260)
!10263 = !DILocation(line: 2130, column: 9, scope: !10260)
!10264 = !DILocation(line: 2131, column: 5, scope: !10260)
!10265 = !DILocation(line: 2134, column: 14, scope: !10222)
!10266 = !DILocation(line: 2136, column: 5, scope: !10222)
!10267 = !DILocation(line: 2137, column: 1, scope: !10222)
!10268 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1293, file: !1293, line: 3387, type: !10269, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10271)
!10269 = !DISubroutineType(types: !10270)
!10270 = !{null, !1463, !996}
!10271 = !{!10272, !10273, !10274}
!10272 = !DILocalVariable(name: "D", arg: 1, scope: !10268, file: !1293, line: 3387, type: !1463)
!10273 = !DILocalVariable(name: "id", arg: 2, scope: !10268, file: !1293, line: 3387, type: !996)
!10274 = !DILocalVariable(name: "cmd", scope: !10268, file: !1293, line: 3389, type: !381)
!10275 = !DILocation(line: 0, scope: !10268)
!10276 = !DILocation(line: 3389, column: 5, scope: !10268)
!10277 = !DILocation(line: 3405, column: 9, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10268, file: !1293, line: 3405, column: 9)
!10279 = !DILocation(line: 3405, column: 21, scope: !10278)
!10280 = !DILocation(line: 0, scope: !10278)
!10281 = !DILocation(line: 3405, column: 9, scope: !10268)
!10282 = !DILocation(line: 3411, column: 31, scope: !10268)
!10283 = !DILocation(line: 3411, column: 5, scope: !10268)
!10284 = !DILocation(line: 3412, column: 1, scope: !10268)
!10285 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1293, file: !1293, line: 3585, type: !10286, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1292, retainedNodes: !10288)
!10286 = !DISubroutineType(types: !10287)
!10287 = !{null, !8068, !996, !996, !8068, !8068}
!10288 = !{!10289, !10290, !10291, !10292, !10293, !10294}
!10289 = !DILocalVariable(name: "CS", arg: 1, scope: !10285, file: !1293, line: 3585, type: !8068)
!10290 = !DILocalVariable(name: "cmd", arg: 2, scope: !10285, file: !1293, line: 3585, type: !996)
!10291 = !DILocalVariable(name: "data", arg: 3, scope: !10285, file: !1293, line: 3585, type: !996)
!10292 = !DILocalVariable(name: "outl", arg: 4, scope: !10285, file: !1293, line: 3585, type: !8068)
!10293 = !DILocalVariable(name: "inl", arg: 5, scope: !10285, file: !1293, line: 3585, type: !8068)
!10294 = !DILocalVariable(name: "savedMask", scope: !10285, file: !1293, line: 3587, type: !61)
!10295 = !DILocation(line: 0, scope: !10285)
!10296 = !DILocation(line: 3589, column: 17, scope: !10285)
!10297 = !DILocation(line: 3590, column: 5, scope: !10285)
!10298 = !DILocation(line: 3591, column: 5, scope: !10285)
!10299 = !DILocation(line: 3593, column: 1, scope: !10285)
!10300 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1618, file: !1618, line: 110, type: !8546, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1617, retainedNodes: !10301)
!10301 = !{!10302, !10303, !10304, !10305}
!10302 = !DILocalVariable(name: "id", arg: 1, scope: !10300, file: !1618, line: 110, type: !996)
!10303 = !DILocalVariable(name: "i", scope: !10300, file: !1618, line: 114, type: !1171)
!10304 = !DILocalVariable(name: "j", scope: !10300, file: !1618, line: 114, type: !1171)
!10305 = !DILocalVariable(name: "id_list", scope: !10300, file: !1618, line: 115, type: !10306)
!10306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10307, size: 32)
!10307 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1695)
!10308 = !DILocation(line: 0, scope: !10300)
!10309 = !DILocation(line: 119, column: 5, scope: !10310)
!10310 = distinct !DILexicalBlock(scope: !10300, file: !1618, line: 119, column: 5)
!10311 = !DILocation(line: 119, column: 46, scope: !10312)
!10312 = distinct !DILexicalBlock(scope: !10310, file: !1618, line: 119, column: 5)
!10313 = !DILocation(line: 119, column: 19, scope: !10312)
!10314 = distinct !{!10314, !10309, !10315}
!10315 = !DILocation(line: 131, column: 5, scope: !10310)
!10316 = !DILocation(line: 121, column: 23, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10318, file: !1618, line: 121, column: 9)
!10318 = distinct !DILexicalBlock(scope: !10319, file: !1618, line: 121, column: 9)
!10319 = distinct !DILexicalBlock(scope: !10312, file: !1618, line: 119, column: 50)
!10320 = !DILocation(line: 121, column: 9, scope: !10318)
!10321 = !DILocation(line: 122, column: 17, scope: !10322)
!10322 = distinct !DILexicalBlock(scope: !10323, file: !1618, line: 122, column: 17)
!10323 = distinct !DILexicalBlock(scope: !10317, file: !1618, line: 121, column: 51)
!10324 = !DILocation(line: 122, column: 37, scope: !10322)
!10325 = !DILocation(line: 122, column: 34, scope: !10322)
!10326 = !DILocation(line: 122, column: 17, scope: !10323)
!10327 = !DILocation(line: 121, column: 47, scope: !10317)
!10328 = distinct !{!10328, !10320, !10329}
!10329 = !DILocation(line: 125, column: 9, scope: !10318)
!10330 = !DILocation(line: 0, scope: !10318)
!10331 = !DILocation(line: 127, column: 15, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10319, file: !1618, line: 127, column: 13)
!10333 = !DILocation(line: 127, column: 13, scope: !10319)
!10334 = !DILocation(line: 134, column: 1, scope: !10300)
!10335 = distinct !DISubprogram(name: "CMEM_Index", scope: !1618, file: !1618, line: 153, type: !8701, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1617, retainedNodes: !10336)
!10336 = !{!10337, !10338, !10339, !10346}
!10337 = !DILocalVariable(name: "i", scope: !10335, file: !1618, line: 156, type: !1171)
!10338 = !DILocalVariable(name: "j", scope: !10335, file: !1618, line: 156, type: !1171)
!10339 = !DILocalVariable(name: "id", scope: !10335, file: !1618, line: 157, type: !10340)
!10340 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1688, line: 89, baseType: !10341)
!10341 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1688, line: 86, size: 64, elements: !10342)
!10342 = !{!10343, !10344}
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !10341, file: !1688, line: 87, baseType: !1701, size: 64)
!10344 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !10341, file: !1688, line: 88, baseType: !10345, size: 64)
!10345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1263, size: 64, elements: !733)
!10346 = !DILocalVariable(name: "id_list", scope: !10335, file: !1618, line: 158, type: !10306)
!10347 = !DILocation(line: 157, column: 5, scope: !10335)
!10348 = !DILocation(line: 157, column: 17, scope: !10335)
!10349 = !DILocation(line: 0, scope: !10335)
!10350 = !DILocation(line: 161, column: 9, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10335, file: !1618, line: 161, column: 9)
!10352 = !DILocation(line: 161, column: 20, scope: !10351)
!10353 = !DILocation(line: 161, column: 9, scope: !10335)
!10354 = !DILocation(line: 172, column: 58, scope: !10335)
!10355 = !DILocation(line: 172, column: 5, scope: !10335)
!10356 = !DILocation(line: 178, column: 5, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10335, file: !1618, line: 178, column: 5)
!10358 = !DILocation(line: 180, column: 23, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10360, file: !1618, line: 180, column: 9)
!10360 = distinct !DILexicalBlock(scope: !10361, file: !1618, line: 180, column: 9)
!10361 = distinct !DILexicalBlock(scope: !10362, file: !1618, line: 178, column: 53)
!10362 = distinct !DILexicalBlock(scope: !10357, file: !1618, line: 178, column: 5)
!10363 = !DILocation(line: 180, column: 9, scope: !10360)
!10364 = !DILocation(line: 181, column: 17, scope: !10365)
!10365 = distinct !DILexicalBlock(scope: !10366, file: !1618, line: 181, column: 17)
!10366 = distinct !DILexicalBlock(scope: !10359, file: !1618, line: 180, column: 51)
!10367 = !DILocation(line: 181, column: 37, scope: !10365)
!10368 = !DILocation(line: 181, column: 34, scope: !10365)
!10369 = !DILocation(line: 181, column: 17, scope: !10366)
!10370 = !DILocation(line: 180, column: 47, scope: !10359)
!10371 = distinct !{!10371, !10363, !10372}
!10372 = !DILocation(line: 184, column: 9, scope: !10360)
!10373 = !DILocation(line: 0, scope: !10360)
!10374 = !DILocation(line: 186, column: 15, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10361, file: !1618, line: 186, column: 13)
!10376 = !DILocation(line: 186, column: 13, scope: !10361)
!10377 = !DILocation(line: 188, column: 26, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10375, file: !1618, line: 186, column: 41)
!10379 = !DILocation(line: 188, column: 24, scope: !10378)
!10380 = !DILocation(line: 189, column: 13, scope: !10378)
!10381 = !DILocation(line: 178, column: 46, scope: !10362)
!10382 = !DILocation(line: 178, column: 19, scope: !10362)
!10383 = distinct !{!10383, !10356, !10384}
!10384 = !DILocation(line: 191, column: 5, scope: !10357)
!10385 = !DILocation(line: 222, column: 12, scope: !10335)
!10386 = !DILocation(line: 223, column: 1, scope: !10335)
!10387 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1618, file: !1618, line: 240, type: !10388, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1617, retainedNodes: !10390)
!10388 = !DISubroutineType(types: !10389)
!10389 = !{!10306, !61}
!10390 = !{!10391}
!10391 = !DILocalVariable(name: "index", arg: 1, scope: !10387, file: !1618, line: 240, type: !61)
!10392 = !DILocation(line: 0, scope: !10387)
!10393 = !DILocation(line: 242, column: 13, scope: !10387)
!10394 = !DILocation(line: 242, column: 5, scope: !10387)
!10395 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1618, file: !1618, line: 254, type: !10396, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1617, retainedNodes: !10398)
!10396 = !DISubroutineType(types: !10397)
!10397 = !{null, !8068, !88, !1262}
!10398 = !{!10399, !10400, !10401, !10402, !10404, !10405}
!10399 = !DILocalVariable(name: "CS", arg: 1, scope: !10395, file: !1618, line: 254, type: !8068)
!10400 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10395, file: !1618, line: 254, type: !88)
!10401 = !DILocalVariable(name: "flashid", arg: 3, scope: !10395, file: !1618, line: 254, type: !1262)
!10402 = !DILocalVariable(name: "cmd", scope: !10403, file: !1618, line: 258, type: !381)
!10403 = distinct !DILexicalBlock(scope: !10395, file: !1618, line: 257, column: 5)
!10404 = !DILocalVariable(name: "id", scope: !10403, file: !1618, line: 258, type: !1553)
!10405 = !DILocalVariable(name: "i", scope: !10403, file: !1618, line: 258, type: !381)
!10406 = !DILocation(line: 0, scope: !10395)
!10407 = !DILocation(line: 258, column: 9, scope: !10403)
!10408 = !DILocation(line: 258, column: 22, scope: !10403)
!10409 = !DILocation(line: 0, scope: !10403)
!10410 = !DILocation(line: 260, column: 13, scope: !10403)
!10411 = !DILocation(line: 261, column: 9, scope: !10403)
!10412 = !DILocation(line: 263, column: 13, scope: !10413)
!10413 = distinct !DILexicalBlock(scope: !10403, file: !1618, line: 263, column: 13)
!10414 = !DILocation(line: 263, column: 27, scope: !10413)
!10415 = !DILocation(line: 263, column: 48, scope: !10413)
!10416 = !DILocation(line: 263, column: 13, scope: !10403)
!10417 = !DILocation(line: 264, column: 17, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10413, file: !1618, line: 263, column: 95)
!10419 = !DILocation(line: 265, column: 13, scope: !10418)
!10420 = !DILocation(line: 266, column: 9, scope: !10418)
!10421 = !DILocation(line: 268, column: 9, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10403, file: !1618, line: 268, column: 9)
!10423 = !DILocation(line: 269, column: 26, scope: !10424)
!10424 = distinct !DILexicalBlock(scope: !10425, file: !1618, line: 268, column: 50)
!10425 = distinct !DILexicalBlock(scope: !10422, file: !1618, line: 268, column: 9)
!10426 = !DILocation(line: 269, column: 13, scope: !10424)
!10427 = !DILocation(line: 269, column: 24, scope: !10424)
!10428 = !DILocation(line: 268, column: 46, scope: !10425)
!10429 = !DILocation(line: 268, column: 23, scope: !10425)
!10430 = distinct !{!10430, !10421, !10431}
!10431 = !DILocation(line: 270, column: 9, scope: !10422)
!10432 = !DILocation(line: 271, column: 5, scope: !10395)
!10433 = !DILocation(line: 272, column: 5, scope: !10395)
!10434 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1618, file: !1618, line: 285, type: !8546, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1617, retainedNodes: !10435)
!10435 = !{!10436, !10437, !10438, !10439}
!10436 = !DILocalVariable(name: "id", arg: 1, scope: !10434, file: !1618, line: 285, type: !996)
!10437 = !DILocalVariable(name: "i", scope: !10434, file: !1618, line: 289, type: !1171)
!10438 = !DILocalVariable(name: "j", scope: !10434, file: !1618, line: 289, type: !1171)
!10439 = !DILocalVariable(name: "id_list", scope: !10434, file: !1618, line: 290, type: !10306)
!10440 = !DILocation(line: 0, scope: !10434)
!10441 = !DILocation(line: 294, column: 5, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10434, file: !1618, line: 294, column: 5)
!10443 = !DILocation(line: 294, column: 46, scope: !10444)
!10444 = distinct !DILexicalBlock(scope: !10442, file: !1618, line: 294, column: 5)
!10445 = !DILocation(line: 294, column: 19, scope: !10444)
!10446 = distinct !{!10446, !10441, !10447}
!10447 = !DILocation(line: 306, column: 5, scope: !10442)
!10448 = !DILocation(line: 296, column: 23, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10450, file: !1618, line: 296, column: 9)
!10450 = distinct !DILexicalBlock(scope: !10451, file: !1618, line: 296, column: 9)
!10451 = distinct !DILexicalBlock(scope: !10444, file: !1618, line: 294, column: 53)
!10452 = !DILocation(line: 296, column: 9, scope: !10450)
!10453 = !DILocation(line: 297, column: 17, scope: !10454)
!10454 = distinct !DILexicalBlock(scope: !10455, file: !1618, line: 297, column: 17)
!10455 = distinct !DILexicalBlock(scope: !10449, file: !1618, line: 296, column: 51)
!10456 = !DILocation(line: 297, column: 37, scope: !10454)
!10457 = !DILocation(line: 297, column: 34, scope: !10454)
!10458 = !DILocation(line: 297, column: 17, scope: !10455)
!10459 = !DILocation(line: 296, column: 47, scope: !10449)
!10460 = distinct !{!10460, !10452, !10461}
!10461 = !DILocation(line: 300, column: 9, scope: !10450)
!10462 = !DILocation(line: 0, scope: !10450)
!10463 = !DILocation(line: 302, column: 15, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10451, file: !1618, line: 302, column: 13)
!10465 = !DILocation(line: 302, column: 13, scope: !10451)
!10466 = !DILocation(line: 310, column: 1, scope: !10434)
!10467 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1618, file: !1618, line: 328, type: !8701, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1617, retainedNodes: !10468)
!10468 = !{!10469, !10470, !10471, !10472}
!10469 = !DILocalVariable(name: "i", scope: !10467, file: !1618, line: 331, type: !1171)
!10470 = !DILocalVariable(name: "j", scope: !10467, file: !1618, line: 331, type: !1171)
!10471 = !DILocalVariable(name: "id", scope: !10467, file: !1618, line: 332, type: !10340)
!10472 = !DILocalVariable(name: "id_list", scope: !10467, file: !1618, line: 333, type: !10306)
!10473 = !DILocation(line: 332, column: 5, scope: !10467)
!10474 = !DILocation(line: 332, column: 17, scope: !10467)
!10475 = !DILocation(line: 0, scope: !10467)
!10476 = !DILocation(line: 336, column: 9, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10467, file: !1618, line: 336, column: 9)
!10478 = !DILocation(line: 336, column: 28, scope: !10477)
!10479 = !DILocation(line: 336, column: 9, scope: !10467)
!10480 = !DILocation(line: 344, column: 60, scope: !10467)
!10481 = !DILocation(line: 344, column: 5, scope: !10467)
!10482 = !DILocation(line: 350, column: 5, scope: !10483)
!10483 = distinct !DILexicalBlock(scope: !10467, file: !1618, line: 350, column: 5)
!10484 = !DILocation(line: 352, column: 23, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10486, file: !1618, line: 352, column: 9)
!10486 = distinct !DILexicalBlock(scope: !10487, file: !1618, line: 352, column: 9)
!10487 = distinct !DILexicalBlock(scope: !10488, file: !1618, line: 350, column: 53)
!10488 = distinct !DILexicalBlock(scope: !10483, file: !1618, line: 350, column: 5)
!10489 = !DILocation(line: 352, column: 9, scope: !10486)
!10490 = !DILocation(line: 353, column: 17, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10492, file: !1618, line: 353, column: 17)
!10492 = distinct !DILexicalBlock(scope: !10485, file: !1618, line: 352, column: 51)
!10493 = !DILocation(line: 353, column: 37, scope: !10491)
!10494 = !DILocation(line: 353, column: 34, scope: !10491)
!10495 = !DILocation(line: 353, column: 17, scope: !10492)
!10496 = !DILocation(line: 352, column: 47, scope: !10485)
!10497 = distinct !{!10497, !10489, !10498}
!10498 = !DILocation(line: 356, column: 9, scope: !10486)
!10499 = !DILocation(line: 0, scope: !10486)
!10500 = !DILocation(line: 358, column: 15, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10487, file: !1618, line: 358, column: 13)
!10502 = !DILocation(line: 358, column: 13, scope: !10487)
!10503 = !DILocation(line: 360, column: 34, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10501, file: !1618, line: 358, column: 41)
!10505 = !DILocation(line: 360, column: 32, scope: !10504)
!10506 = !DILocation(line: 361, column: 13, scope: !10504)
!10507 = !DILocation(line: 350, column: 46, scope: !10488)
!10508 = !DILocation(line: 350, column: 19, scope: !10488)
!10509 = distinct !{!10509, !10482, !10510}
!10510 = !DILocation(line: 363, column: 5, scope: !10483)
!10511 = !DILocation(line: 364, column: 12, scope: !10467)
!10512 = !DILocation(line: 365, column: 1, scope: !10467)
!10513 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2809, file: !2809, line: 64, type: !10514, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2808, retainedNodes: !10520)
!10514 = !DISubroutineType(types: !10515)
!10515 = !{null, !8068, !10516, !1262}
!10516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10517, size: 32)
!10517 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !10518)
!10518 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !10519, line: 158, baseType: !1263)
!10519 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!10520 = !{!10521, !10522, !10523, !10524, !10525, !10527, !10528}
!10521 = !DILocalVariable(name: "CS", arg: 1, scope: !10513, file: !2809, line: 64, type: !8068)
!10522 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !10513, file: !2809, line: 64, type: !10516)
!10523 = !DILocalVariable(name: "flashid", arg: 3, scope: !10513, file: !2809, line: 64, type: !1262)
!10524 = !DILocalVariable(name: "savedMask", scope: !10513, file: !2809, line: 66, type: !61)
!10525 = !DILocalVariable(name: "cmd", scope: !10526, file: !2809, line: 70, type: !381)
!10526 = distinct !DILexicalBlock(scope: !10513, file: !2809, line: 69, column: 5)
!10527 = !DILocalVariable(name: "id", scope: !10526, file: !2809, line: 70, type: !1553)
!10528 = !DILocalVariable(name: "i", scope: !10526, file: !2809, line: 70, type: !381)
!10529 = !DILocation(line: 0, scope: !10513)
!10530 = !DILocation(line: 70, column: 9, scope: !10526)
!10531 = !DILocation(line: 70, column: 22, scope: !10526)
!10532 = !DILocation(line: 0, scope: !10526)
!10533 = !DILocation(line: 72, column: 13, scope: !10526)
!10534 = !DILocation(line: 73, column: 21, scope: !10526)
!10535 = !DILocation(line: 74, column: 9, scope: !10526)
!10536 = !DILocation(line: 75, column: 9, scope: !10526)
!10537 = !DILocation(line: 77, column: 13, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10526, file: !2809, line: 77, column: 13)
!10539 = !DILocation(line: 77, column: 27, scope: !10538)
!10540 = !DILocation(line: 77, column: 48, scope: !10538)
!10541 = !DILocation(line: 77, column: 13, scope: !10526)
!10542 = !DILocation(line: 78, column: 17, scope: !10543)
!10543 = distinct !DILexicalBlock(scope: !10538, file: !2809, line: 77, column: 87)
!10544 = !DILocation(line: 79, column: 25, scope: !10543)
!10545 = !DILocation(line: 80, column: 13, scope: !10543)
!10546 = !DILocation(line: 81, column: 13, scope: !10543)
!10547 = !DILocation(line: 82, column: 9, scope: !10543)
!10548 = !DILocation(line: 84, column: 9, scope: !10549)
!10549 = distinct !DILexicalBlock(scope: !10526, file: !2809, line: 84, column: 9)
!10550 = !DILocation(line: 85, column: 26, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10552, file: !2809, line: 84, column: 50)
!10552 = distinct !DILexicalBlock(scope: !10549, file: !2809, line: 84, column: 9)
!10553 = !DILocation(line: 85, column: 13, scope: !10551)
!10554 = !DILocation(line: 85, column: 24, scope: !10551)
!10555 = !DILocation(line: 84, column: 46, scope: !10552)
!10556 = !DILocation(line: 84, column: 23, scope: !10552)
!10557 = distinct !{!10557, !10548, !10558}
!10558 = !DILocation(line: 86, column: 9, scope: !10549)
!10559 = !DILocation(line: 87, column: 5, scope: !10513)
!10560 = !DILocation(line: 89, column: 1, scope: !10513)
!10561 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1705, file: !1705, line: 248, type: !4009, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !293)
!10562 = !DILocation(line: 250, column: 5, scope: !10561)
!10563 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1705, file: !1705, line: 270, type: !4009, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !293)
!10564 = !DILocation(line: 272, column: 5, scope: !10563)
!10565 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1705, file: !1705, line: 294, type: !291, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !293)
!10566 = !DILocation(line: 296, column: 5, scope: !10565)
!10567 = !DILocation(line: 297, column: 5, scope: !10565)
!10568 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1705, file: !1705, line: 304, type: !291, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !293)
!10569 = !DILocation(line: 309, column: 5, scope: !10568)
!10570 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1705, file: !1705, line: 312, type: !291, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !293)
!10571 = !DILocation(line: 317, column: 5, scope: !10570)
!10572 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1705, file: !1705, line: 334, type: !4009, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !293)
!10573 = !DILocation(line: 336, column: 5, scope: !10572)
!10574 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1705, file: !1705, line: 353, type: !4009, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !293)
!10575 = !DILocation(line: 355, column: 5, scope: !10574)
!10576 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1705, file: !1705, line: 374, type: !291, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !293)
!10577 = !DILocation(line: 376, column: 5, scope: !10576)
!10578 = !DILocation(line: 377, column: 1, scope: !10576)
!10579 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1705, file: !1705, line: 395, type: !4009, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !293)
!10580 = !DILocation(line: 397, column: 5, scope: !10579)
!10581 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1705, file: !1705, line: 416, type: !4009, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1704, retainedNodes: !293)
!10582 = !DILocation(line: 418, column: 5, scope: !10581)
!10583 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1716, file: !1716, line: 254, type: !4009, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !293)
!10584 = !DILocation(line: 256, column: 32, scope: !10583)
!10585 = !DILocation(line: 257, column: 5, scope: !10583)
!10586 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1716, file: !1716, line: 269, type: !8701, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !293)
!10587 = !DILocation(line: 275, column: 24, scope: !10586)
!10588 = !DILocation(line: 278, column: 24, scope: !10586)
!10589 = !DILocation(line: 278, column: 33, scope: !10586)
!10590 = !DILocation(line: 278, column: 49, scope: !10586)
!10591 = !DILocation(line: 278, column: 22, scope: !10586)
!10592 = !DILocation(line: 281, column: 5, scope: !10586)
!10593 = !DILocation(line: 283, column: 34, scope: !10586)
!10594 = !DILocation(line: 283, column: 23, scope: !10586)
!10595 = !DILocation(line: 286, column: 25, scope: !10586)
!10596 = !DILocation(line: 321, column: 5, scope: !10586)
!10597 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1716, file: !1716, line: 332, type: !8701, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10598)
!10598 = !{!10599}
!10599 = !DILocalVariable(name: "result", scope: !10597, file: !1716, line: 334, type: !1171)
!10600 = !DILocation(line: 340, column: 30, scope: !10597)
!10601 = !DILocation(line: 343, column: 24, scope: !10597)
!10602 = !DILocation(line: 344, column: 18, scope: !10597)
!10603 = !DILocation(line: 348, column: 17, scope: !10597)
!10604 = !DILocation(line: 353, column: 19, scope: !10597)
!10605 = !DILocation(line: 354, column: 18, scope: !10597)
!10606 = !DILocation(line: 354, column: 27, scope: !10597)
!10607 = !DILocation(line: 354, column: 43, scope: !10597)
!10608 = !DILocation(line: 350, column: 14, scope: !10597)
!10609 = !DILocation(line: 0, scope: !10597)
!10610 = !DILocation(line: 356, column: 16, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10597, file: !1716, line: 356, column: 9)
!10612 = !DILocation(line: 395, column: 1, scope: !10597)
!10613 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1716, file: !1716, line: 406, type: !10614, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !293)
!10614 = !DISubroutineType(types: !2761)
!10615 = !DILocation(line: 408, column: 5, scope: !10613)
!10616 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1716, file: !1716, line: 420, type: !10617, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10619)
!10617 = !DISubroutineType(types: !10618)
!10618 = !{!61, !381}
!10619 = !{!10620, !10621, !10622}
!10620 = !DILocalVariable(name: "CS", arg: 1, scope: !10616, file: !1716, line: 420, type: !381)
!10621 = !DILocalVariable(name: "index", scope: !10616, file: !1716, line: 422, type: !61)
!10622 = !DILocalVariable(name: "list", scope: !10616, file: !1716, line: 423, type: !2033)
!10623 = !DILocation(line: 0, scope: !10616)
!10624 = !DILocation(line: 427, column: 13, scope: !10616)
!10625 = !DILocation(line: 430, column: 34, scope: !10616)
!10626 = !DILocation(line: 430, column: 5, scope: !10616)
!10627 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1716, file: !1716, line: 442, type: !10628, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10630)
!10628 = !DISubroutineType(types: !10629)
!10629 = !{!61, !61, !1905}
!10630 = !{!10631, !10632, !10633}
!10631 = !DILocalVariable(name: "address", arg: 1, scope: !10627, file: !1716, line: 442, type: !61)
!10632 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !10627, file: !1716, line: 442, type: !1905)
!10633 = !DILocalVariable(name: "i", scope: !10627, file: !1716, line: 444, type: !1263)
!10634 = !DILocation(line: 0, scope: !10627)
!10635 = !DILocation(line: 446, column: 23, scope: !10627)
!10636 = !DILocation(line: 448, column: 36, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10638, file: !1716, line: 448, column: 5)
!10638 = distinct !DILexicalBlock(scope: !10627, file: !1716, line: 448, column: 5)
!10639 = !DILocation(line: 448, column: 41, scope: !10637)
!10640 = !DILocation(line: 448, column: 5, scope: !10638)
!10641 = !DILocation(line: 449, column: 39, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10643, file: !1716, line: 449, column: 13)
!10643 = distinct !DILexicalBlock(scope: !10637, file: !1716, line: 448, column: 54)
!10644 = !DILocation(line: 449, column: 21, scope: !10642)
!10645 = !DILocation(line: 449, column: 46, scope: !10642)
!10646 = !DILocation(line: 450, column: 46, scope: !10642)
!10647 = !DILocation(line: 450, column: 25, scope: !10642)
!10648 = !DILocation(line: 449, column: 13, scope: !10643)
!10649 = !DILocation(line: 448, column: 48, scope: !10637)
!10650 = !DILocation(line: 448, column: 29, scope: !10637)
!10651 = !DILocation(line: 448, column: 31, scope: !10637)
!10652 = distinct !{!10652, !10640, !10653}
!10653 = !DILocation(line: 453, column: 5, scope: !10638)
!10654 = !DILocation(line: 454, column: 27, scope: !10627)
!10655 = !DILocation(line: 454, column: 5, scope: !10627)
!10656 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1716, file: !1716, line: 462, type: !3757, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10657)
!10657 = !{!10658}
!10658 = !DILocalVariable(name: "address", arg: 1, scope: !10656, file: !1716, line: 462, type: !61)
!10659 = !DILocation(line: 0, scope: !10656)
!10660 = !DILocation(line: 464, column: 45, scope: !10656)
!10661 = !DILocation(line: 464, column: 12, scope: !10656)
!10662 = !DILocation(line: 464, column: 5, scope: !10656)
!10663 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1716, file: !1716, line: 487, type: !3757, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10664)
!10664 = !{!10665, !10666, !10667}
!10665 = !DILocalVariable(name: "address", arg: 1, scope: !10663, file: !1716, line: 487, type: !61)
!10666 = !DILocalVariable(name: "index", scope: !10663, file: !1716, line: 490, type: !61)
!10667 = !DILocalVariable(name: "list", scope: !10663, file: !1716, line: 491, type: !2033)
!10668 = !DILocation(line: 0, scope: !10663)
!10669 = !DILocation(line: 490, column: 22, scope: !10663)
!10670 = !DILocation(line: 495, column: 45, scope: !10663)
!10671 = !DILocation(line: 495, column: 12, scope: !10663)
!10672 = !DILocation(line: 495, column: 5, scope: !10663)
!10673 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1716, file: !1716, line: 517, type: !10674, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10678)
!10674 = !DISubroutineType(types: !10675)
!10675 = !{!1171, !10676}
!10676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10677, size: 32)
!10677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1919)
!10678 = !{!10679, !10680, !10681}
!10679 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !10673, file: !1716, line: 517, type: !10676)
!10680 = !DILocalVariable(name: "result", scope: !10673, file: !1716, line: 519, type: !61)
!10681 = !DILocalVariable(name: "i", scope: !10673, file: !1716, line: 519, type: !61)
!10682 = !DILocation(line: 0, scope: !10673)
!10683 = !DILocation(line: 522, column: 29, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10685, file: !1716, line: 522, column: 5)
!10685 = distinct !DILexicalBlock(scope: !10673, file: !1716, line: 522, column: 5)
!10686 = !DILocation(line: 522, column: 38, scope: !10684)
!10687 = !DILocation(line: 522, column: 5, scope: !10685)
!10688 = !DILocation(line: 523, column: 31, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10684, file: !1716, line: 522, column: 51)
!10690 = !DILocation(line: 523, column: 37, scope: !10689)
!10691 = !DILocation(line: 523, column: 16, scope: !10689)
!10692 = !DILocation(line: 522, column: 45, scope: !10684)
!10693 = distinct !{!10693, !10687, !10694}
!10694 = !DILocation(line: 524, column: 5, scope: !10685)
!10695 = !DILocation(line: 525, column: 5, scope: !10673)
!10696 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1716, file: !1716, line: 535, type: !10697, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10699)
!10697 = !DISubroutineType(types: !10698)
!10698 = !{!61, !61, !61, !1731, !1905}
!10699 = !{!10700, !10701, !10702, !10703, !10704, !10705, !10706, !10707, !10708}
!10700 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10696, file: !1716, line: 536, type: !61)
!10701 = !DILocalVariable(name: "length", arg: 2, scope: !10696, file: !1716, line: 537, type: !61)
!10702 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10696, file: !1716, line: 538, type: !1731)
!10703 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !10696, file: !1716, line: 539, type: !1905)
!10704 = !DILocalVariable(name: "addr", scope: !10696, file: !1716, line: 541, type: !61)
!10705 = !DILocalVariable(name: "ptr", scope: !10696, file: !1716, line: 541, type: !61)
!10706 = !DILocalVariable(name: "blksize", scope: !10696, file: !1716, line: 541, type: !61)
!10707 = !DILocalVariable(name: "total_blocks", scope: !10696, file: !1716, line: 541, type: !61)
!10708 = !DILocalVariable(name: "endaddr", scope: !10696, file: !1716, line: 542, type: !61)
!10709 = !DILocation(line: 0, scope: !10696)
!10710 = !DILocation(line: 542, column: 33, scope: !10696)
!10711 = !DILocation(line: 557, column: 59, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10713, file: !1716, line: 557, column: 5)
!10713 = distinct !DILexicalBlock(scope: !10696, file: !1716, line: 557, column: 5)
!10714 = !DILocation(line: 557, column: 5, scope: !10713)
!10715 = !DILocation(line: 560, column: 19, scope: !10716)
!10716 = distinct !DILexicalBlock(scope: !10712, file: !1716, line: 559, column: 5)
!10717 = !DILocation(line: 562, column: 26, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10716, file: !1716, line: 562, column: 13)
!10719 = !DILocation(line: 0, scope: !10718)
!10720 = !DILocation(line: 562, column: 13, scope: !10716)
!10721 = !DILocation(line: 563, column: 39, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10718, file: !1716, line: 562, column: 34)
!10723 = !DILocation(line: 564, column: 29, scope: !10722)
!10724 = !DILocation(line: 564, column: 42, scope: !10722)
!10725 = !DILocation(line: 565, column: 9, scope: !10722)
!10726 = !DILocation(line: 567, column: 45, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10718, file: !1716, line: 567, column: 18)
!10728 = !DILocation(line: 567, column: 26, scope: !10727)
!10729 = !DILocation(line: 567, column: 18, scope: !10718)
!10730 = !DILocation(line: 568, column: 29, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10727, file: !1716, line: 567, column: 59)
!10732 = !DILocation(line: 568, column: 41, scope: !10731)
!10733 = !DILocation(line: 569, column: 9, scope: !10731)
!10734 = !DILocation(line: 572, column: 16, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10727, file: !1716, line: 571, column: 14)
!10736 = !DILocation(line: 573, column: 21, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10735, file: !1716, line: 573, column: 17)
!10738 = !DILocation(line: 573, column: 17, scope: !10735)
!10739 = !DILocation(line: 576, column: 29, scope: !10735)
!10740 = !DILocation(line: 576, column: 39, scope: !10735)
!10741 = !DILocation(line: 577, column: 29, scope: !10735)
!10742 = !DILocation(line: 577, column: 42, scope: !10735)
!10743 = !DILocation(line: 0, scope: !10713)
!10744 = !DILocation(line: 579, column: 14, scope: !10716)
!10745 = !DILocation(line: 580, column: 21, scope: !10716)
!10746 = distinct !{!10746, !10714, !10747}
!10747 = !DILocation(line: 581, column: 5, scope: !10713)
!10748 = !DILocation(line: 586, column: 1, scope: !10696)
!10749 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1716, file: !1716, line: 593, type: !10750, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10752)
!10750 = !DISubroutineType(types: !10751)
!10751 = !{!1171, !61, !61, !1731}
!10752 = !{!10753, !10754, !10755}
!10753 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10749, file: !1716, line: 593, type: !61)
!10754 = !DILocalVariable(name: "length", arg: 2, scope: !10749, file: !1716, line: 593, type: !61)
!10755 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10749, file: !1716, line: 593, type: !1731)
!10756 = !DILocation(line: 0, scope: !10749)
!10757 = !DILocation(line: 595, column: 12, scope: !10749)
!10758 = !DILocation(line: 595, column: 5, scope: !10749)
!10759 = !DILocation(line: 597, column: 81, scope: !10749)
!10760 = !DILocation(line: 597, column: 12, scope: !10749)
!10761 = !DILocation(line: 597, column: 5, scope: !10749)
!10762 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1716, file: !1716, line: 606, type: !10750, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10763)
!10763 = !{!10764, !10765, !10766}
!10764 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10762, file: !1716, line: 606, type: !61)
!10765 = !DILocalVariable(name: "length", arg: 2, scope: !10762, file: !1716, line: 606, type: !61)
!10766 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10762, file: !1716, line: 606, type: !1731)
!10767 = !DILocation(line: 0, scope: !10762)
!10768 = !DILocation(line: 624, column: 5, scope: !10762)
!10769 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1716, file: !1716, line: 637, type: !10750, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10770)
!10770 = !{!10771, !10772, !10773, !10774, !10775}
!10771 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10769, file: !1716, line: 637, type: !61)
!10772 = !DILocalVariable(name: "length", arg: 2, scope: !10769, file: !1716, line: 637, type: !61)
!10773 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10769, file: !1716, line: 637, type: !1731)
!10774 = !DILocalVariable(name: "index", scope: !10769, file: !1716, line: 642, type: !61)
!10775 = !DILocalVariable(name: "list", scope: !10769, file: !1716, line: 644, type: !2033)
!10776 = !DILocation(line: 0, scope: !10769)
!10777 = !DILocation(line: 642, column: 22, scope: !10769)
!10778 = !DILocation(line: 648, column: 81, scope: !10769)
!10779 = !DILocation(line: 648, column: 12, scope: !10769)
!10780 = !DILocation(line: 648, column: 5, scope: !10769)
!10781 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1716, file: !1716, line: 658, type: !10750, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10782)
!10782 = !{!10783, !10784, !10785}
!10783 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10781, file: !1716, line: 658, type: !61)
!10784 = !DILocalVariable(name: "length", arg: 2, scope: !10781, file: !1716, line: 658, type: !61)
!10785 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !10781, file: !1716, line: 658, type: !1731)
!10786 = !DILocation(line: 0, scope: !10781)
!10787 = !DILocation(line: 688, column: 5, scope: !10781)
!10788 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1716, file: !1716, line: 700, type: !8135, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10789)
!10789 = !{!10790, !10791, !10792}
!10790 = !DILocalVariable(name: "CS", arg: 1, scope: !10788, file: !1716, line: 700, type: !8068)
!10791 = !DILocalVariable(name: "index", scope: !10788, file: !1716, line: 705, type: !61)
!10792 = !DILocalVariable(name: "list", scope: !10788, file: !1716, line: 707, type: !2033)
!10793 = !DILocation(line: 0, scope: !10788)
!10794 = !DILocation(line: 705, column: 22, scope: !10788)
!10795 = !DILocation(line: 711, column: 24, scope: !10788)
!10796 = !DILocation(line: 711, column: 5, scope: !10788)
!10797 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1716, file: !1716, line: 721, type: !10798, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10800)
!10798 = !DISubroutineType(types: !10799)
!10799 = !{null, !1951, !1231, !61}
!10800 = !{!10801, !10802, !10803}
!10801 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !10797, file: !1716, line: 721, type: !1951)
!10802 = !DILocalVariable(name: "index", arg: 2, scope: !10797, file: !1716, line: 721, type: !1231)
!10803 = !DILocalVariable(name: "bankSize", arg: 3, scope: !10797, file: !1716, line: 721, type: !61)
!10804 = !DILocation(line: 0, scope: !10797)
!10805 = !DILocation(line: 723, column: 18, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10797, file: !1716, line: 723, column: 9)
!10807 = !DILocation(line: 723, column: 26, scope: !10806)
!10808 = !DILocation(line: 723, column: 35, scope: !10806)
!10809 = !DILocation(line: 723, column: 9, scope: !10797)
!10810 = !DILocation(line: 724, column: 26, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10806, file: !1716, line: 723, column: 48)
!10812 = !DILocation(line: 724, column: 32, scope: !10811)
!10813 = !DILocation(line: 725, column: 5, scope: !10811)
!10814 = !DILocation(line: 726, column: 18, scope: !10815)
!10815 = distinct !DILexicalBlock(scope: !10806, file: !1716, line: 725, column: 12)
!10816 = !DILocation(line: 727, column: 26, scope: !10815)
!10817 = !DILocation(line: 727, column: 32, scope: !10815)
!10818 = !DILocation(line: 728, column: 18, scope: !10815)
!10819 = !DILocation(line: 728, column: 26, scope: !10815)
!10820 = !DILocation(line: 728, column: 35, scope: !10815)
!10821 = !DILocation(line: 731, column: 1, scope: !10797)
!10822 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1716, file: !1716, line: 739, type: !10823, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10825)
!10823 = !DISubroutineType(types: !10824)
!10824 = !{!61, !61, !61, !1951, !10676}
!10825 = !{!10826, !10827, !10828, !10829, !10830, !10831, !10832, !10833, !10834}
!10826 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !10822, file: !1716, line: 740, type: !61)
!10827 = !DILocalVariable(name: "length", arg: 2, scope: !10822, file: !1716, line: 741, type: !61)
!10828 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !10822, file: !1716, line: 742, type: !1951)
!10829 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !10822, file: !1716, line: 743, type: !10676)
!10830 = !DILocalVariable(name: "Partition", scope: !10822, file: !1716, line: 745, type: !61)
!10831 = !DILocalVariable(name: "Index", scope: !10822, file: !1716, line: 746, type: !1171)
!10832 = !DILocalVariable(name: "bankSize", scope: !10822, file: !1716, line: 747, type: !61)
!10833 = !DILocalVariable(name: "NextBankAddr", scope: !10822, file: !1716, line: 748, type: !61)
!10834 = !DILocalVariable(name: "srcBankIdx", scope: !10822, file: !1716, line: 748, type: !61)
!10835 = !DILocation(line: 0, scope: !10822)
!10836 = !DILocation(line: 750, column: 12, scope: !10822)
!10837 = !DILocation(line: 750, column: 5, scope: !10822)
!10838 = !DILocation(line: 752, column: 51, scope: !10839)
!10839 = distinct !DILexicalBlock(scope: !10840, file: !1716, line: 752, column: 5)
!10840 = distinct !DILexicalBlock(scope: !10822, file: !1716, line: 752, column: 5)
!10841 = !DILocation(line: 752, column: 5, scope: !10840)
!10842 = !DILocation(line: 753, column: 51, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !1716, line: 753, column: 13)
!10844 = distinct !DILexicalBlock(scope: !10839, file: !1716, line: 752, column: 70)
!10845 = !DILocation(line: 753, column: 24, scope: !10843)
!10846 = !DILocation(line: 753, column: 13, scope: !10844)
!10847 = !DILocation(line: 758, column: 49, scope: !10844)
!10848 = !DILocation(line: 758, column: 22, scope: !10844)
!10849 = !DILocation(line: 760, column: 22, scope: !10850)
!10850 = distinct !DILexicalBlock(scope: !10844, file: !1716, line: 760, column: 13)
!10851 = !DILocation(line: 760, column: 13, scope: !10844)
!10852 = !DILocation(line: 761, column: 37, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10850, file: !1716, line: 760, column: 39)
!10854 = !DILocation(line: 762, column: 24, scope: !10855)
!10855 = distinct !DILexicalBlock(scope: !10853, file: !1716, line: 762, column: 17)
!10856 = !DILocation(line: 762, column: 17, scope: !10853)
!10857 = !DILocation(line: 767, column: 33, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10853, file: !1716, line: 767, column: 17)
!10859 = !DILocation(line: 767, column: 42, scope: !10858)
!10860 = !DILocation(line: 767, column: 17, scope: !10853)
!10861 = !DILocation(line: 768, column: 33, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10858, file: !1716, line: 767, column: 55)
!10863 = !DILocation(line: 768, column: 39, scope: !10862)
!10864 = !DILocation(line: 769, column: 13, scope: !10862)
!10865 = !DILocation(line: 770, column: 46, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10867, file: !1716, line: 770, column: 21)
!10867 = distinct !DILexicalBlock(scope: !10858, file: !1716, line: 769, column: 20)
!10868 = !DILocation(line: 770, column: 21, scope: !10867)
!10869 = !DILocation(line: 773, column: 33, scope: !10867)
!10870 = !DILocation(line: 773, column: 39, scope: !10867)
!10871 = !DILocation(line: 774, column: 33, scope: !10867)
!10872 = !DILocation(line: 774, column: 42, scope: !10867)
!10873 = !DILocation(line: 777, column: 22, scope: !10853)
!10874 = !DILocation(line: 778, column: 20, scope: !10853)
!10875 = !DILocation(line: 779, column: 9, scope: !10853)
!10876 = !DILocation(line: 746, column: 13, scope: !10822)
!10877 = !DILocation(line: 752, column: 66, scope: !10839)
!10878 = distinct !{!10878, !10841, !10879}
!10879 = !DILocation(line: 781, column: 5, scope: !10840)
!10880 = !DILocation(line: 784, column: 5, scope: !10822)
!10881 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1716, file: !1716, line: 796, type: !8701, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10882)
!10882 = !{!10883, !10884}
!10883 = !DILocalVariable(name: "result", scope: !10881, file: !1716, line: 798, type: !1171)
!10884 = !DILocalVariable(name: "i", scope: !10881, file: !1716, line: 799, type: !1171)
!10885 = !DILocation(line: 803, column: 19, scope: !10881)
!10886 = !DILocation(line: 803, column: 28, scope: !10881)
!10887 = !DILocation(line: 803, column: 17, scope: !10881)
!10888 = !DILocation(line: 822, column: 33, scope: !10881)
!10889 = !DILocation(line: 822, column: 56, scope: !10881)
!10890 = !DILocation(line: 822, column: 88, scope: !10881)
!10891 = !DILocation(line: 822, column: 97, scope: !10881)
!10892 = !DILocation(line: 822, column: 5, scope: !10881)
!10893 = !DILocation(line: 829, column: 39, scope: !10881)
!10894 = !DILocation(line: 829, column: 62, scope: !10881)
!10895 = !DILocation(line: 829, column: 14, scope: !10881)
!10896 = !DILocation(line: 0, scope: !10881)
!10897 = !DILocation(line: 834, column: 16, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10881, file: !1716, line: 834, column: 9)
!10899 = !DILocation(line: 834, column: 9, scope: !10881)
!10900 = !DILocation(line: 838, column: 30, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10881, file: !1716, line: 838, column: 5)
!10902 = !DILocation(line: 838, column: 58, scope: !10901)
!10903 = !DILocation(line: 838, column: 78, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10901, file: !1716, line: 838, column: 5)
!10905 = !DILocation(line: 838, column: 88, scope: !10904)
!10906 = !DILocation(line: 838, column: 5, scope: !10901)
!10907 = !DILocation(line: 839, column: 39, scope: !10908)
!10908 = distinct !DILexicalBlock(scope: !10904, file: !1716, line: 838, column: 102)
!10909 = !DILocation(line: 839, column: 22, scope: !10908)
!10910 = !DILocation(line: 840, column: 37, scope: !10911)
!10911 = distinct !DILexicalBlock(scope: !10908, file: !1716, line: 840, column: 13)
!10912 = !DILocation(line: 840, column: 13, scope: !10908)
!10913 = !DILocation(line: 841, column: 36, scope: !10914)
!10914 = distinct !DILexicalBlock(scope: !10911, file: !1716, line: 840, column: 63)
!10915 = !DILocation(line: 842, column: 9, scope: !10914)
!10916 = !DILocation(line: 838, column: 95, scope: !10904)
!10917 = distinct !{!10917, !10906, !10918}
!10918 = !DILocation(line: 843, column: 5, scope: !10901)
!10919 = !DILocation(line: 871, column: 49, scope: !10881)
!10920 = !DILocation(line: 871, column: 72, scope: !10881)
!10921 = !DILocation(line: 871, column: 47, scope: !10881)
!10922 = !DILocation(line: 871, column: 97, scope: !10881)
!10923 = !DILocation(line: 871, column: 19, scope: !10881)
!10924 = !DILocation(line: 882, column: 14, scope: !10881)
!10925 = !DILocation(line: 887, column: 13, scope: !10881)
!10926 = !DILocation(line: 887, column: 22, scope: !10881)
!10927 = !DILocation(line: 887, column: 5, scope: !10881)
!10928 = !DILocation(line: 889, column: 22, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10881, file: !1716, line: 887, column: 34)
!10930 = !DILocation(line: 890, column: 13, scope: !10929)
!10931 = !DILocation(line: 902, column: 1, scope: !10881)
!10932 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1716, file: !1716, line: 912, type: !10933, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10935)
!10933 = !DISubroutineType(types: !10934)
!10934 = !{null, !1006}
!10935 = !{!10936}
!10936 = !DILocalVariable(name: "CS", arg: 1, scope: !10932, file: !1716, line: 912, type: !1006)
!10937 = !DILocation(line: 0, scope: !10932)
!10938 = !DILocation(line: 914, column: 12, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10932, file: !1716, line: 914, column: 9)
!10940 = !DILocation(line: 914, column: 9, scope: !10932)
!10941 = !DILocation(line: 918, column: 26, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10939, file: !1716, line: 914, column: 18)
!10943 = !DILocation(line: 918, column: 24, scope: !10942)
!10944 = !DILocation(line: 920, column: 28, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10942, file: !1716, line: 920, column: 13)
!10946 = !DILocation(line: 920, column: 13, scope: !10942)
!10947 = !DILocation(line: 921, column: 13, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10949, file: !1716, line: 921, column: 13)
!10949 = distinct !DILexicalBlock(scope: !10950, file: !1716, line: 921, column: 13)
!10950 = distinct !DILexicalBlock(scope: !10951, file: !1716, line: 921, column: 13)
!10951 = distinct !DILexicalBlock(scope: !10945, file: !1716, line: 920, column: 33)
!10952 = !DILocation(line: 923, column: 19, scope: !10942)
!10953 = !DILocation(line: 923, column: 17, scope: !10942)
!10954 = !DILocation(line: 924, column: 5, scope: !10942)
!10955 = !DILocation(line: 935, column: 14, scope: !10932)
!10956 = !DILocation(line: 936, column: 1, scope: !10932)
!10957 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1716, file: !1716, line: 952, type: !8701, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !293)
!10958 = !DILocation(line: 955, column: 5, scope: !10957)
!10959 = !DILocation(line: 956, column: 12, scope: !10957)
!10960 = !DILocation(line: 956, column: 5, scope: !10957)
!10961 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1716, file: !1716, line: 974, type: !8701, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1715, retainedNodes: !10962)
!10962 = !{!10963}
!10963 = !DILocalVariable(name: "result", scope: !10961, file: !1716, line: 976, type: !1171)
!10964 = !DILocation(line: 981, column: 5, scope: !10961)
!10965 = !DILocation(line: 986, column: 24, scope: !10961)
!10966 = !DILocation(line: 986, column: 33, scope: !10961)
!10967 = !DILocation(line: 986, column: 49, scope: !10961)
!10968 = !DILocation(line: 986, column: 22, scope: !10961)
!10969 = !DILocation(line: 1002, column: 19, scope: !10961)
!10970 = !DILocation(line: 1002, column: 17, scope: !10961)
!10971 = !DILocation(line: 1014, column: 22, scope: !10961)
!10972 = !DILocation(line: 1014, column: 5, scope: !10961)
!10973 = !DILocation(line: 1024, column: 33, scope: !10961)
!10974 = !DILocation(line: 1026, column: 27, scope: !10961)
!10975 = !DILocation(line: 1027, column: 26, scope: !10961)
!10976 = !DILocation(line: 1042, column: 33, scope: !10961)
!10977 = !DILocation(line: 1044, column: 32, scope: !10961)
!10978 = !DILocation(line: 1052, column: 18, scope: !10961)
!10979 = !DILocation(line: 1052, column: 27, scope: !10961)
!10980 = !DILocation(line: 1052, column: 43, scope: !10961)
!10981 = !DILocation(line: 1048, column: 14, scope: !10961)
!10982 = !DILocation(line: 0, scope: !10961)
!10983 = !DILocation(line: 1063, column: 5, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10985, file: !1716, line: 1063, column: 5)
!10985 = distinct !DILexicalBlock(scope: !10961, file: !1716, line: 1063, column: 5)
!10986 = !DILocation(line: 1063, column: 5, scope: !10985)
!10987 = !DILocation(line: 1063, column: 5, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10984, file: !1716, line: 1063, column: 5)
!10989 = !DILocation(line: 1096, column: 36, scope: !10961)
!10990 = !DILocation(line: 1096, column: 34, scope: !10961)
!10991 = !DILocation(line: 1101, column: 5, scope: !10961)
!10992 = !DILocation(line: 1103, column: 34, scope: !10961)
!10993 = !DILocation(line: 1109, column: 35, scope: !10961)
!10994 = !DILocation(line: 1110, column: 33, scope: !10961)
!10995 = !DILocation(line: 1111, column: 34, scope: !10961)
!10996 = !DILocation(line: 1113, column: 5, scope: !10961)
!10997 = distinct !DISubprogram(name: "CreateFDMLock", scope: !2074, file: !2074, line: 84, type: !291, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !293)
!10998 = !DILocation(line: 86, column: 1, scope: !10997)
!10999 = distinct !DISubprogram(name: "GetFDMLock", scope: !2074, file: !2074, line: 87, type: !9167, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11000)
!11000 = !{!11001}
!11001 = !DILocalVariable(name: "savedMask", scope: !10999, file: !2074, line: 89, type: !1171)
!11002 = !DILocation(line: 90, column: 17, scope: !10999)
!11003 = !DILocation(line: 0, scope: !10999)
!11004 = !DILocation(line: 91, column: 9, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10999, file: !2074, line: 91, column: 9)
!11006 = !DILocation(line: 91, column: 9, scope: !10999)
!11007 = !DILocation(line: 92, column: 17, scope: !11008)
!11008 = distinct !DILexicalBlock(scope: !11005, file: !2074, line: 91, column: 24)
!11009 = !DILocation(line: 94, column: 9, scope: !11008)
!11010 = !DILocation(line: 0, scope: !11005)
!11011 = !DILocation(line: 102, column: 1, scope: !10999)
!11012 = distinct !DISubprogram(name: "FreeFDMLock", scope: !2074, file: !2074, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11013)
!11013 = !{!11014}
!11014 = !DILocalVariable(name: "savedMask", scope: !11012, file: !2074, line: 105, type: !1171)
!11015 = !DILocation(line: 106, column: 17, scope: !11012)
!11016 = !DILocation(line: 0, scope: !11012)
!11017 = !DILocation(line: 107, column: 9, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11012, file: !2074, line: 107, column: 9)
!11019 = !DILocation(line: 107, column: 9, scope: !11012)
!11020 = !DILocation(line: 108, column: 17, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11018, file: !2074, line: 107, column: 24)
!11022 = !DILocation(line: 109, column: 9, scope: !11021)
!11023 = !DILocation(line: 114, column: 1, scope: !11012)
!11024 = !DILocation(line: 111, column: 9, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11018, file: !2074, line: 110, column: 12)
!11026 = !DILocation(line: 112, column: 9, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11028, file: !2074, line: 112, column: 9)
!11028 = distinct !DILexicalBlock(scope: !11029, file: !2074, line: 112, column: 9)
!11029 = distinct !DILexicalBlock(scope: !11025, file: !2074, line: 112, column: 9)
!11030 = distinct !DISubprogram(name: "create_FDM_lock", scope: !2074, file: !2074, line: 119, type: !291, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !293)
!11031 = !DILocation(line: 123, column: 1, scope: !11030)
!11032 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !2074, file: !2074, line: 130, type: !291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11033)
!11033 = !{!11034}
!11034 = !DILocalVariable(name: "Result", scope: !11032, file: !2074, line: 132, type: !2130)
!11035 = !DILocation(line: 133, column: 5, scope: !11032)
!11036 = !DILocation(line: 134, column: 18, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11032, file: !2074, line: 133, column: 8)
!11038 = !DILocation(line: 0, scope: !11032)
!11039 = !DILocation(line: 135, column: 21, scope: !11032)
!11040 = !DILocation(line: 135, column: 5, scope: !11037)
!11041 = distinct !{!11041, !11035, !11042}
!11042 = !DILocation(line: 135, column: 43, scope: !11032)
!11043 = !DILocation(line: 136, column: 1, scope: !11032)
!11044 = distinct !DISubprogram(name: "release_FDM_lock", scope: !2074, file: !2074, line: 143, type: !291, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !293)
!11045 = !DILocation(line: 147, column: 5, scope: !11044)
!11046 = !DILocation(line: 148, column: 1, scope: !11044)
!11047 = distinct !DISubprogram(name: "readRawDiskData", scope: !2074, file: !2074, line: 216, type: !11048, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11089)
!11048 = !DISubroutineType(types: !11049)
!11049 = !{!1171, !11050, !61, !996, !61}
!11050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11051, size: 32)
!11051 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !2021, line: 93, baseType: !11052)
!11052 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2021, line: 83, size: 1056, elements: !11053)
!11053 = !{!11054, !11055, !11075, !11076, !11088}
!11054 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !11052, file: !2021, line: 84, baseType: !61, size: 32)
!11055 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !11052, file: !2021, line: 85, baseType: !11056, size: 32, offset: 32)
!11056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11057, size: 32)
!11057 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1489, line: 121, baseType: !11058)
!11058 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 105, size: 480, elements: !11059)
!11059 = !{!11060, !11061, !11062, !11063, !11064, !11065, !11066, !11067, !11068, !11069, !11070, !11071, !11072, !11073, !11074}
!11060 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !11058, file: !1489, line: 106, baseType: !1762, size: 32)
!11061 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !11058, file: !1489, line: 107, baseType: !1564, size: 32, offset: 32)
!11062 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !11058, file: !1489, line: 108, baseType: !1767, size: 32, offset: 64)
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !11058, file: !1489, line: 109, baseType: !1771, size: 32, offset: 96)
!11064 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !11058, file: !1489, line: 110, baseType: !1775, size: 32, offset: 128)
!11065 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !11058, file: !1489, line: 111, baseType: !1771, size: 32, offset: 160)
!11066 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !11058, file: !1489, line: 112, baseType: !1780, size: 32, offset: 192)
!11067 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !11058, file: !1489, line: 113, baseType: !1771, size: 32, offset: 224)
!11068 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !11058, file: !1489, line: 114, baseType: !1771, size: 32, offset: 256)
!11069 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !11058, file: !1489, line: 115, baseType: !1771, size: 32, offset: 288)
!11070 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !11058, file: !1489, line: 116, baseType: !1787, size: 32, offset: 320)
!11071 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !11058, file: !1489, line: 117, baseType: !1792, size: 32, offset: 352)
!11072 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !11058, file: !1489, line: 118, baseType: !1797, size: 32, offset: 384)
!11073 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !11058, file: !1489, line: 119, baseType: !1801, size: 32, offset: 416)
!11074 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !11058, file: !1489, line: 120, baseType: !1805, size: 32, offset: 448)
!11075 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !11052, file: !2021, line: 86, baseType: !88, size: 32, offset: 64)
!11076 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !11052, file: !2021, line: 87, baseType: !11077, size: 928, offset: 96)
!11077 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1489, line: 99, baseType: !11078)
!11078 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1489, line: 90, size: 928, elements: !11079)
!11079 = !{!11080, !11081, !11082, !11083, !11084, !11085, !11086, !11087}
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !11078, file: !1489, line: 91, baseType: !61, size: 32)
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !11078, file: !1489, line: 92, baseType: !1819, size: 256, offset: 32)
!11082 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !11078, file: !1489, line: 93, baseType: !1819, size: 256, offset: 288)
!11083 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !11078, file: !1489, line: 94, baseType: !1819, size: 256, offset: 544)
!11084 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !11078, file: !1489, line: 95, baseType: !61, size: 32, offset: 800)
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !11078, file: !1489, line: 96, baseType: !1811, size: 16, offset: 832)
!11086 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !11078, file: !1489, line: 97, baseType: !61, size: 32, offset: 864)
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !11078, file: !1489, line: 98, baseType: !61, size: 32, offset: 896)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !11052, file: !2021, line: 92, baseType: !91, size: 8, offset: 1024)
!11089 = !{!11090, !11091, !11092, !11093, !11094, !11095}
!11090 = !DILocalVariable(name: "D", arg: 1, scope: !11047, file: !2074, line: 216, type: !11050)
!11091 = !DILocalVariable(name: "addr", arg: 2, scope: !11047, file: !2074, line: 216, type: !61)
!11092 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11047, file: !2074, line: 216, type: !996)
!11093 = !DILocalVariable(name: "len", arg: 4, scope: !11047, file: !2074, line: 216, type: !61)
!11094 = !DILocalVariable(name: "phyAddr", scope: !11047, file: !2074, line: 219, type: !61)
!11095 = !DILocalVariable(name: "diskSize", scope: !11047, file: !2074, line: 220, type: !61)
!11096 = !DILocation(line: 0, scope: !11047)
!11097 = !DILocation(line: 220, column: 28, scope: !11047)
!11098 = !DILocation(line: 222, column: 14, scope: !11099)
!11099 = distinct !DILexicalBlock(scope: !11047, file: !2074, line: 222, column: 9)
!11100 = !DILocation(line: 222, column: 26, scope: !11099)
!11101 = !DILocation(line: 225, column: 51, scope: !11047)
!11102 = !DILocation(line: 225, column: 61, scope: !11047)
!11103 = !DILocation(line: 225, column: 15, scope: !11047)
!11104 = !DILocation(line: 225, column: 70, scope: !11047)
!11105 = !DILocation(line: 227, column: 13, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11047, file: !2074, line: 227, column: 9)
!11107 = !DILocation(line: 227, column: 9, scope: !11047)
!11108 = !DILocation(line: 228, column: 9, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11106, file: !2074, line: 227, column: 23)
!11110 = !DILocation(line: 229, column: 5, scope: !11109)
!11111 = !DILocation(line: 231, column: 5, scope: !11047)
!11112 = !DILocation(line: 233, column: 22, scope: !11047)
!11113 = !DILocation(line: 233, column: 5, scope: !11047)
!11114 = !DILocation(line: 235, column: 5, scope: !11047)
!11115 = !DILocation(line: 237, column: 5, scope: !11047)
!11116 = !DILocation(line: 238, column: 1, scope: !11047)
!11117 = distinct !DISubprogram(name: "MountDevice", scope: !2074, file: !2074, line: 165, type: !11118, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11120)
!11118 = !DISubroutineType(types: !11119)
!11119 = !{null, !11050}
!11120 = !{!11121, !11122}
!11121 = !DILocalVariable(name: "D", arg: 1, scope: !11117, file: !2074, line: 165, type: !11050)
!11122 = !DILocalVariable(name: "Result", scope: !11117, file: !2074, line: 167, type: !1171)
!11123 = !DILocation(line: 0, scope: !11117)
!11124 = !DILocation(line: 171, column: 12, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11117, file: !2074, line: 171, column: 9)
!11126 = !DILocation(line: 171, column: 9, scope: !11117)
!11127 = !DILocation(line: 176, column: 5, scope: !11117)
!11128 = !DILocation(line: 186, column: 17, scope: !11117)
!11129 = !DILocation(line: 186, column: 28, scope: !11117)
!11130 = !DILocation(line: 186, column: 43, scope: !11117)
!11131 = !DILocation(line: 186, column: 64, scope: !11117)
!11132 = !DILocation(line: 186, column: 52, scope: !11117)
!11133 = !DILocation(line: 186, column: 14, scope: !11117)
!11134 = !DILocation(line: 188, column: 5, scope: !11117)
!11135 = !DILocation(line: 190, column: 16, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11117, file: !2074, line: 190, column: 9)
!11137 = !DILocation(line: 190, column: 9, scope: !11117)
!11138 = !DILocation(line: 191, column: 9, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !11140, file: !2074, line: 191, column: 9)
!11140 = distinct !DILexicalBlock(scope: !11141, file: !2074, line: 191, column: 9)
!11141 = distinct !DILexicalBlock(scope: !11142, file: !2074, line: 191, column: 9)
!11142 = distinct !DILexicalBlock(scope: !11136, file: !2074, line: 190, column: 31)
!11143 = !DILocation(line: 194, column: 17, scope: !11117)
!11144 = !DILocation(line: 195, column: 1, scope: !11117)
!11145 = distinct !DISubprogram(name: "writeRawDiskData", scope: !2074, file: !2074, line: 277, type: !11048, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11146)
!11146 = !{!11147, !11148, !11149, !11150, !11151, !11152, !11153, !11154, !11155, !11156, !11160, !11161, !11162, !11167}
!11147 = !DILocalVariable(name: "D", arg: 1, scope: !11145, file: !2074, line: 277, type: !11050)
!11148 = !DILocalVariable(name: "addr", arg: 2, scope: !11145, file: !2074, line: 277, type: !61)
!11149 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11145, file: !2074, line: 277, type: !996)
!11150 = !DILocalVariable(name: "len", arg: 4, scope: !11145, file: !2074, line: 277, type: !61)
!11151 = !DILocalVariable(name: "dest", scope: !11145, file: !2074, line: 279, type: !61)
!11152 = !DILocalVariable(name: "src", scope: !11145, file: !2074, line: 279, type: !61)
!11153 = !DILocalVariable(name: "diskSize", scope: !11145, file: !2074, line: 280, type: !61)
!11154 = !DILocalVariable(name: "result", scope: !11145, file: !2074, line: 281, type: !1171)
!11155 = !DILocalVariable(name: "DoneLength", scope: !11145, file: !2074, line: 282, type: !61)
!11156 = !DILocalVariable(name: "blockSize", scope: !11157, file: !2074, line: 313, type: !61)
!11157 = distinct !DILexicalBlock(scope: !11158, file: !2074, line: 312, column: 14)
!11158 = distinct !DILexicalBlock(scope: !11159, file: !2074, line: 305, column: 13)
!11159 = distinct !DILexicalBlock(scope: !11145, file: !2074, line: 298, column: 30)
!11160 = !DILocalVariable(name: "programBytes", scope: !11157, file: !2074, line: 314, type: !61)
!11161 = !DILocalVariable(name: "nextBlkAddr", scope: !11157, file: !2074, line: 316, type: !61)
!11162 = !DILocalVariable(name: "Cell", scope: !11163, file: !2074, line: 346, type: !11165)
!11163 = distinct !DILexicalBlock(scope: !11164, file: !2074, line: 345, column: 83)
!11164 = distinct !DILexicalBlock(scope: !11157, file: !2074, line: 345, column: 17)
!11165 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !11166, line: 76, baseType: !1263)
!11166 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/gdma_transfer_data_interrupt/GCC")
!11167 = !DILocalVariable(name: "b", scope: !11163, file: !2074, line: 347, type: !996)
!11168 = !DILocation(line: 0, scope: !11145)
!11169 = !DILocation(line: 280, column: 28, scope: !11145)
!11170 = !DILocation(line: 284, column: 14, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11145, file: !2074, line: 284, column: 9)
!11172 = !DILocation(line: 284, column: 9, scope: !11145)
!11173 = !DILocation(line: 288, column: 14, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11145, file: !2074, line: 288, column: 9)
!11175 = !DILocation(line: 288, column: 20, scope: !11174)
!11176 = !DILocation(line: 288, column: 9, scope: !11145)
!11177 = !DILocation(line: 292, column: 13, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11145, file: !2074, line: 292, column: 9)
!11179 = !DILocation(line: 292, column: 9, scope: !11145)
!11180 = !DILocation(line: 293, column: 9, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11178, file: !2074, line: 292, column: 23)
!11182 = !DILocation(line: 294, column: 5, scope: !11181)
!11183 = !DILocation(line: 296, column: 5, scope: !11145)
!11184 = !DILocation(line: 346, column: 17, scope: !11163)
!11185 = !DILocation(line: 298, column: 23, scope: !11145)
!11186 = !DILocation(line: 298, column: 5, scope: !11145)
!11187 = !DILocation(line: 299, column: 52, scope: !11159)
!11188 = !DILocation(line: 299, column: 62, scope: !11159)
!11189 = !DILocation(line: 299, column: 16, scope: !11159)
!11190 = !DILocation(line: 299, column: 71, scope: !11159)
!11191 = !DILocation(line: 299, column: 78, scope: !11159)
!11192 = !DILocation(line: 300, column: 34, scope: !11159)
!11193 = !DILocation(line: 302, column: 12, scope: !11159)
!11194 = !DILocation(line: 302, column: 23, scope: !11159)
!11195 = !DILocation(line: 302, column: 81, scope: !11159)
!11196 = !DILocation(line: 302, column: 45, scope: !11159)
!11197 = !DILocation(line: 302, column: 9, scope: !11159)
!11198 = !DILocation(line: 305, column: 29, scope: !11158)
!11199 = !DILocation(line: 305, column: 57, scope: !11158)
!11200 = !DILocation(line: 305, column: 66, scope: !11158)
!11201 = !DILocation(line: 305, column: 80, scope: !11158)
!11202 = !DILocation(line: 305, column: 13, scope: !11159)
!11203 = !DILocation(line: 306, column: 25, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11158, file: !2074, line: 305, column: 87)
!11205 = !DILocation(line: 306, column: 36, scope: !11204)
!11206 = !DILocation(line: 306, column: 51, scope: !11204)
!11207 = !DILocation(line: 306, column: 60, scope: !11204)
!11208 = !DILocation(line: 306, column: 74, scope: !11204)
!11209 = !DILocation(line: 306, column: 22, scope: !11204)
!11210 = !DILocation(line: 307, column: 24, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11204, file: !2074, line: 307, column: 17)
!11212 = !DILocation(line: 307, column: 17, scope: !11204)
!11213 = !DILocation(line: 310, column: 23, scope: !11204)
!11214 = !DILocation(line: 311, column: 9, scope: !11204)
!11215 = !DILocation(line: 313, column: 47, scope: !11157)
!11216 = !DILocation(line: 313, column: 56, scope: !11157)
!11217 = !DILocation(line: 313, column: 34, scope: !11157)
!11218 = !DILocation(line: 0, scope: !11157)
!11219 = !DILocation(line: 316, column: 42, scope: !11157)
!11220 = !DILocation(line: 316, column: 58, scope: !11157)
!11221 = !DILocation(line: 316, column: 55, scope: !11157)
!11222 = !DILocation(line: 326, column: 22, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11157, file: !2074, line: 326, column: 17)
!11224 = !DILocation(line: 326, column: 37, scope: !11223)
!11225 = !DILocation(line: 326, column: 17, scope: !11157)
!11226 = !DILocation(line: 332, column: 43, scope: !11157)
!11227 = !DILocation(line: 345, column: 30, scope: !11164)
!11228 = !DILocation(line: 345, column: 52, scope: !11164)
!11229 = !DILocation(line: 0, scope: !11163)
!11230 = !DILocation(line: 348, column: 26, scope: !11163)
!11231 = !DILocation(line: 348, column: 24, scope: !11163)
!11232 = !DILocation(line: 348, column: 22, scope: !11163)
!11233 = !DILocation(line: 349, column: 41, scope: !11163)
!11234 = !DILocation(line: 349, column: 24, scope: !11163)
!11235 = !DILocation(line: 349, column: 22, scope: !11163)
!11236 = !DILocation(line: 350, column: 29, scope: !11163)
!11237 = !DILocation(line: 350, column: 40, scope: !11163)
!11238 = !DILocation(line: 350, column: 55, scope: !11163)
!11239 = !DILocation(line: 350, column: 64, scope: !11163)
!11240 = !DILocation(line: 350, column: 26, scope: !11163)
!11241 = !DILocation(line: 351, column: 28, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !11163, file: !2074, line: 351, column: 21)
!11243 = !DILocation(line: 354, column: 13, scope: !11164)
!11244 = !DILocation(line: 362, column: 33, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11246, file: !2074, line: 361, column: 24)
!11246 = distinct !DILexicalBlock(scope: !11247, file: !2074, line: 355, column: 21)
!11247 = distinct !DILexicalBlock(scope: !11164, file: !2074, line: 354, column: 20)
!11248 = !DILocation(line: 362, column: 44, scope: !11245)
!11249 = !DILocation(line: 362, column: 59, scope: !11245)
!11250 = !DILocation(line: 362, column: 68, scope: !11245)
!11251 = !DILocation(line: 362, column: 82, scope: !11245)
!11252 = !DILocation(line: 362, column: 30, scope: !11245)
!11253 = !DILocation(line: 364, column: 28, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11247, file: !2074, line: 364, column: 21)
!11255 = !DILocation(line: 364, column: 21, scope: !11247)
!11256 = !DILocation(line: 368, column: 24, scope: !11157)
!11257 = !DILocation(line: 0, scope: !11158)
!11258 = distinct !{!11258, !11186, !11259}
!11259 = !DILocation(line: 370, column: 5, scope: !11145)
!11260 = !DILocation(line: 372, column: 5, scope: !11145)
!11261 = !DILocation(line: 379, column: 1, scope: !11145)
!11262 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !2074, file: !2074, line: 398, type: !11263, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11265)
!11263 = !DISubroutineType(types: !11264)
!11264 = !{!1171, !11050, !61}
!11265 = !{!11266, !11267, !11268, !11269}
!11266 = !DILocalVariable(name: "D", arg: 1, scope: !11262, file: !2074, line: 398, type: !11050)
!11267 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !11262, file: !2074, line: 398, type: !61)
!11268 = !DILocalVariable(name: "result", scope: !11262, file: !2074, line: 401, type: !1171)
!11269 = !DILocalVariable(name: "block_index", scope: !11262, file: !2074, line: 402, type: !61)
!11270 = !DILocation(line: 0, scope: !11262)
!11271 = !DILocation(line: 402, column: 36, scope: !11262)
!11272 = !DILocation(line: 403, column: 13, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11262, file: !2074, line: 403, column: 9)
!11274 = !DILocation(line: 403, column: 9, scope: !11262)
!11275 = !DILocation(line: 404, column: 9, scope: !11276)
!11276 = distinct !DILexicalBlock(scope: !11273, file: !2074, line: 403, column: 23)
!11277 = !DILocation(line: 405, column: 5, scope: !11276)
!11278 = !DILocation(line: 407, column: 37, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11262, file: !2074, line: 407, column: 9)
!11280 = !DILocation(line: 407, column: 21, scope: !11279)
!11281 = !DILocation(line: 407, column: 9, scope: !11262)
!11282 = !DILocation(line: 412, column: 5, scope: !11262)
!11283 = !DILocation(line: 414, column: 8, scope: !11262)
!11284 = !DILocation(line: 414, column: 19, scope: !11262)
!11285 = !DILocation(line: 414, column: 32, scope: !11262)
!11286 = !DILocation(line: 414, column: 5, scope: !11262)
!11287 = !DILocation(line: 416, column: 17, scope: !11262)
!11288 = !DILocation(line: 416, column: 28, scope: !11262)
!11289 = !DILocation(line: 416, column: 42, scope: !11262)
!11290 = !DILocation(line: 416, column: 14, scope: !11262)
!11291 = !DILocation(line: 418, column: 5, scope: !11262)
!11292 = !DILocation(line: 420, column: 16, scope: !11293)
!11293 = distinct !DILexicalBlock(scope: !11262, file: !2074, line: 420, column: 9)
!11294 = !DILocation(line: 424, column: 1, scope: !11262)
!11295 = distinct !DISubprogram(name: "NOR_init", scope: !2074, file: !2074, line: 433, type: !8701, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !293)
!11296 = !DILocation(line: 436, column: 9, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11295, file: !2074, line: 436, column: 9)
!11298 = !DILocation(line: 436, column: 9, scope: !11295)
!11299 = !DILocation(line: 437, column: 9, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11297, file: !2074, line: 436, column: 62)
!11301 = !DILocation(line: 438, column: 9, scope: !11300)
!11302 = !DILocation(line: 439, column: 27, scope: !11300)
!11303 = !DILocation(line: 440, column: 5, scope: !11300)
!11304 = !DILocation(line: 441, column: 5, scope: !11295)
!11305 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !2074, file: !2074, line: 444, type: !9167, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !293)
!11306 = !DILocation(line: 446, column: 12, scope: !11305)
!11307 = !DILocation(line: 446, column: 5, scope: !11305)
!11308 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !2074, file: !2074, line: 449, type: !11309, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11311)
!11309 = !DISubroutineType(types: !11310)
!11310 = !{!1171, !61, !61, !996}
!11311 = !{!11312, !11313, !11314, !11315, !11316, !11317, !11318}
!11312 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11308, file: !2074, line: 449, type: !61)
!11313 = !DILocalVariable(name: "page_idx", arg: 2, scope: !11308, file: !2074, line: 449, type: !61)
!11314 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11308, file: !2074, line: 449, type: !996)
!11315 = !DILocalVariable(name: "D", scope: !11308, file: !2074, line: 451, type: !11050)
!11316 = !DILocalVariable(name: "mtdData", scope: !11308, file: !2074, line: 452, type: !2082)
!11317 = !DILocalVariable(name: "result", scope: !11308, file: !2074, line: 453, type: !1171)
!11318 = !DILocalVariable(name: "addr", scope: !11308, file: !2074, line: 455, type: !61)
!11319 = !DILocation(line: 0, scope: !11308)
!11320 = !DILocation(line: 452, column: 60, scope: !11308)
!11321 = !DILocation(line: 455, column: 32, scope: !11308)
!11322 = !DILocation(line: 455, column: 22, scope: !11308)
!11323 = !DILocation(line: 455, column: 95, scope: !11308)
!11324 = !DILocation(line: 455, column: 76, scope: !11308)
!11325 = !DILocation(line: 455, column: 118, scope: !11308)
!11326 = !DILocation(line: 455, column: 74, scope: !11308)
!11327 = !DILocation(line: 455, column: 106, scope: !11308)
!11328 = !DILocation(line: 457, column: 14, scope: !11308)
!11329 = !DILocation(line: 459, column: 16, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11308, file: !2074, line: 459, column: 9)
!11331 = !DILocation(line: 463, column: 1, scope: !11308)
!11332 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !2074, file: !2074, line: 466, type: !11309, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11333)
!11333 = !{!11334, !11335, !11336, !11337, !11338, !11339, !11340}
!11334 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11332, file: !2074, line: 466, type: !61)
!11335 = !DILocalVariable(name: "page_idx", arg: 2, scope: !11332, file: !2074, line: 466, type: !61)
!11336 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !11332, file: !2074, line: 466, type: !996)
!11337 = !DILocalVariable(name: "D", scope: !11332, file: !2074, line: 468, type: !11050)
!11338 = !DILocalVariable(name: "mtdData", scope: !11332, file: !2074, line: 469, type: !2082)
!11339 = !DILocalVariable(name: "result", scope: !11332, file: !2074, line: 470, type: !1171)
!11340 = !DILocalVariable(name: "addr", scope: !11332, file: !2074, line: 472, type: !61)
!11341 = !DILocation(line: 0, scope: !11332)
!11342 = !DILocation(line: 469, column: 60, scope: !11332)
!11343 = !DILocation(line: 472, column: 32, scope: !11332)
!11344 = !DILocation(line: 472, column: 22, scope: !11332)
!11345 = !DILocation(line: 472, column: 95, scope: !11332)
!11346 = !DILocation(line: 472, column: 76, scope: !11332)
!11347 = !DILocation(line: 472, column: 118, scope: !11332)
!11348 = !DILocation(line: 472, column: 74, scope: !11332)
!11349 = !DILocation(line: 472, column: 106, scope: !11332)
!11350 = !DILocation(line: 474, column: 14, scope: !11332)
!11351 = !DILocation(line: 475, column: 16, scope: !11352)
!11352 = distinct !DILexicalBlock(scope: !11332, file: !2074, line: 475, column: 9)
!11353 = !DILocation(line: 479, column: 1, scope: !11332)
!11354 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !2074, file: !2074, line: 481, type: !11355, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11357)
!11355 = !DISubroutineType(types: !11356)
!11356 = !{!1171, !61}
!11357 = !{!11358, !11359}
!11358 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11354, file: !2074, line: 481, type: !61)
!11359 = !DILocalVariable(name: "result", scope: !11354, file: !2074, line: 483, type: !1171)
!11360 = !DILocation(line: 0, scope: !11354)
!11361 = !DILocation(line: 484, column: 14, scope: !11354)
!11362 = !DILocation(line: 485, column: 16, scope: !11363)
!11363 = distinct !DILexicalBlock(scope: !11354, file: !2074, line: 485, column: 9)
!11364 = !DILocation(line: 489, column: 1, scope: !11354)
!11365 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !2074, file: !2074, line: 492, type: !3757, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11366)
!11366 = !{!11367, !11368, !11369}
!11367 = !DILocalVariable(name: "block_idx", arg: 1, scope: !11365, file: !2074, line: 492, type: !61)
!11368 = !DILocalVariable(name: "D", scope: !11365, file: !2074, line: 494, type: !11050)
!11369 = !DILocalVariable(name: "mtdData", scope: !11365, file: !2074, line: 495, type: !2082)
!11370 = !DILocation(line: 0, scope: !11365)
!11371 = !DILocation(line: 495, column: 60, scope: !11365)
!11372 = !DILocation(line: 496, column: 12, scope: !11365)
!11373 = !DILocation(line: 496, column: 5, scope: !11365)
!11374 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !2074, file: !2074, line: 499, type: !3757, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11375)
!11375 = !{!11376, !11377, !11378}
!11376 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11374, file: !2074, line: 499, type: !61)
!11377 = !DILocalVariable(name: "D", scope: !11374, file: !2074, line: 501, type: !11050)
!11378 = !DILocalVariable(name: "mtdData", scope: !11374, file: !2074, line: 502, type: !2082)
!11379 = !DILocation(line: 0, scope: !11374)
!11380 = !DILocation(line: 502, column: 60, scope: !11374)
!11381 = !DILocation(line: 504, column: 12, scope: !11374)
!11382 = !DILocation(line: 504, column: 5, scope: !11374)
!11383 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !2074, file: !2074, line: 510, type: !11384, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11386)
!11384 = !DISubroutineType(types: !11385)
!11385 = !{!1171, !61, !1231, !1231}
!11386 = !{!11387, !11388, !11389, !11390, !11391}
!11387 = !DILocalVariable(name: "block_addr", arg: 1, scope: !11383, file: !2074, line: 510, type: !61)
!11388 = !DILocalVariable(name: "block_index", arg: 2, scope: !11383, file: !2074, line: 510, type: !1231)
!11389 = !DILocalVariable(name: "offset", arg: 3, scope: !11383, file: !2074, line: 510, type: !1231)
!11390 = !DILocalVariable(name: "D", scope: !11383, file: !2074, line: 512, type: !11050)
!11391 = !DILocalVariable(name: "mtdData", scope: !11383, file: !2074, line: 513, type: !2082)
!11392 = !DILocation(line: 0, scope: !11383)
!11393 = !DILocation(line: 513, column: 60, scope: !11383)
!11394 = !DILocation(line: 519, column: 20, scope: !11383)
!11395 = !DILocation(line: 519, column: 18, scope: !11383)
!11396 = !DILocation(line: 520, column: 22, scope: !11397)
!11397 = distinct !DILexicalBlock(scope: !11383, file: !2074, line: 520, column: 9)
!11398 = !DILocation(line: 520, column: 9, scope: !11383)
!11399 = !DILocation(line: 524, column: 28, scope: !11383)
!11400 = !DILocation(line: 524, column: 26, scope: !11383)
!11401 = !DILocation(line: 524, column: 13, scope: !11383)
!11402 = !DILocation(line: 526, column: 5, scope: !11383)
!11403 = !DILocation(line: 527, column: 1, scope: !11383)
!11404 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !2074, file: !2074, line: 532, type: !11405, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11407)
!11405 = !DISubroutineType(types: !11406)
!11406 = !{!1171, !61, !61, !1231}
!11407 = !{!11408, !11409, !11410, !11411, !11412}
!11408 = !DILocalVariable(name: "block_index", arg: 1, scope: !11404, file: !2074, line: 532, type: !61)
!11409 = !DILocalVariable(name: "offset", arg: 2, scope: !11404, file: !2074, line: 532, type: !61)
!11410 = !DILocalVariable(name: "addr", arg: 3, scope: !11404, file: !2074, line: 532, type: !1231)
!11411 = !DILocalVariable(name: "D", scope: !11404, file: !2074, line: 534, type: !11050)
!11412 = !DILocalVariable(name: "mtdData", scope: !11404, file: !2074, line: 535, type: !2082)
!11413 = !DILocation(line: 0, scope: !11404)
!11414 = !DILocation(line: 535, column: 60, scope: !11404)
!11415 = !DILocation(line: 537, column: 23, scope: !11404)
!11416 = !DILocation(line: 537, column: 13, scope: !11404)
!11417 = !DILocation(line: 537, column: 79, scope: !11404)
!11418 = !DILocation(line: 537, column: 60, scope: !11404)
!11419 = !DILocation(line: 537, column: 58, scope: !11404)
!11420 = !DILocation(line: 537, column: 88, scope: !11404)
!11421 = !DILocation(line: 537, column: 11, scope: !11404)
!11422 = !DILocation(line: 539, column: 5, scope: !11404)
!11423 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !2074, file: !2074, line: 545, type: !11424, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11426)
!11424 = !DISubroutineType(types: !11425)
!11425 = !{!2130, !1171}
!11426 = !{!11427}
!11427 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !11423, file: !2074, line: 545, type: !1171)
!11428 = !DILocation(line: 0, scope: !11423)
!11429 = !DILocation(line: 547, column: 9, scope: !11423)
!11430 = !DILocation(line: 558, column: 9, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11432, file: !2074, line: 558, column: 9)
!11432 = distinct !DILexicalBlock(scope: !11433, file: !2074, line: 558, column: 9)
!11433 = distinct !DILexicalBlock(scope: !11434, file: !2074, line: 558, column: 9)
!11434 = distinct !DILexicalBlock(scope: !11435, file: !2074, line: 557, column: 12)
!11435 = distinct !DILexicalBlock(scope: !11436, file: !2074, line: 555, column: 16)
!11436 = distinct !DILexicalBlock(scope: !11437, file: !2074, line: 553, column: 16)
!11437 = distinct !DILexicalBlock(scope: !11438, file: !2074, line: 551, column: 16)
!11438 = distinct !DILexicalBlock(scope: !11439, file: !2074, line: 549, column: 16)
!11439 = distinct !DILexicalBlock(scope: !11423, file: !2074, line: 547, column: 9)
!11440 = !DILocation(line: 560, column: 1, scope: !11423)
!11441 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !2074, file: !2074, line: 561, type: !11442, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11445)
!11442 = !DISubroutineType(types: !11443)
!11443 = !{!11444, !61}
!11444 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1412, line: 127, baseType: !2076)
!11445 = !{!11446, !11447, !11448}
!11446 = !DILocalVariable(name: "address", arg: 1, scope: !11441, file: !2074, line: 561, type: !61)
!11447 = !DILocalVariable(name: "block_size", scope: !11441, file: !2074, line: 563, type: !61)
!11448 = !DILocalVariable(name: "block_index", scope: !11441, file: !2074, line: 564, type: !61)
!11449 = !DILocation(line: 0, scope: !11441)
!11450 = !DILocation(line: 566, column: 19, scope: !11441)
!11451 = !DILocation(line: 567, column: 21, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11441, file: !2074, line: 567, column: 9)
!11453 = !DILocation(line: 567, column: 9, scope: !11441)
!11454 = !DILocation(line: 568, column: 9, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11456, file: !2074, line: 568, column: 9)
!11456 = distinct !DILexicalBlock(scope: !11457, file: !2074, line: 568, column: 9)
!11457 = distinct !DILexicalBlock(scope: !11458, file: !2074, line: 568, column: 9)
!11458 = distinct !DILexicalBlock(scope: !11452, file: !2074, line: 567, column: 45)
!11459 = !DILocation(line: 570, column: 18, scope: !11441)
!11460 = !DILocation(line: 571, column: 9, scope: !11441)
!11461 = !DILocation(line: 574, column: 9, scope: !11462)
!11462 = distinct !DILexicalBlock(scope: !11463, file: !2074, line: 573, column: 38)
!11463 = distinct !DILexicalBlock(scope: !11464, file: !2074, line: 573, column: 16)
!11464 = distinct !DILexicalBlock(scope: !11441, file: !2074, line: 571, column: 9)
!11465 = !DILocation(line: 576, column: 9, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11467, file: !2074, line: 575, column: 39)
!11467 = distinct !DILexicalBlock(scope: !11463, file: !2074, line: 575, column: 16)
!11468 = !DILocation(line: 578, column: 9, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !2074, line: 578, column: 9)
!11470 = distinct !DILexicalBlock(scope: !11471, file: !2074, line: 578, column: 9)
!11471 = distinct !DILexicalBlock(scope: !11472, file: !2074, line: 578, column: 9)
!11472 = distinct !DILexicalBlock(scope: !11467, file: !2074, line: 577, column: 12)
!11473 = !DILocation(line: 0, scope: !11464)
!11474 = !DILocation(line: 580, column: 1, scope: !11441)
!11475 = distinct !DISubprogram(name: "hal_flash_init", scope: !2074, file: !2074, line: 583, type: !9167, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !293)
!11476 = !DILocation(line: 585, column: 5, scope: !11475)
!11477 = !DILocation(line: 586, column: 5, scope: !11475)
!11478 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !2074, file: !2074, line: 589, type: !9167, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !293)
!11479 = !DILocation(line: 591, column: 5, scope: !11478)
!11480 = distinct !DISubprogram(name: "hal_flash_erase", scope: !2074, file: !2074, line: 595, type: !11481, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11483)
!11481 = !DISubroutineType(types: !11482)
!11482 = !{!2130, !61, !11444}
!11483 = !{!11484, !11485, !11486, !11487, !11488}
!11484 = !DILocalVariable(name: "start_address", arg: 1, scope: !11480, file: !2074, line: 595, type: !61)
!11485 = !DILocalVariable(name: "block", arg: 2, scope: !11480, file: !2074, line: 595, type: !11444)
!11486 = !DILocalVariable(name: "result", scope: !11480, file: !2074, line: 597, type: !1171)
!11487 = !DILocalVariable(name: "block_index", scope: !11480, file: !2074, line: 598, type: !61)
!11488 = !DILocalVariable(name: "erase_type", scope: !11480, file: !2074, line: 599, type: !61)
!11489 = !DILocation(line: 0, scope: !11480)
!11490 = !DILocation(line: 601, column: 9, scope: !11480)
!11491 = !DILocation(line: 602, column: 28, scope: !11492)
!11492 = distinct !DILexicalBlock(scope: !11493, file: !2074, line: 602, column: 13)
!11493 = distinct !DILexicalBlock(scope: !11494, file: !2074, line: 601, column: 38)
!11494 = distinct !DILexicalBlock(scope: !11480, file: !2074, line: 601, column: 9)
!11495 = !DILocation(line: 602, column: 37, scope: !11492)
!11496 = !DILocation(line: 602, column: 13, scope: !11493)
!11497 = !DILocation(line: 607, column: 28, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11499, file: !2074, line: 607, column: 13)
!11499 = distinct !DILexicalBlock(scope: !11500, file: !2074, line: 606, column: 46)
!11500 = distinct !DILexicalBlock(scope: !11494, file: !2074, line: 606, column: 16)
!11501 = !DILocation(line: 607, column: 38, scope: !11498)
!11502 = !DILocation(line: 607, column: 13, scope: !11499)
!11503 = !DILocation(line: 612, column: 28, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11505, file: !2074, line: 612, column: 13)
!11505 = distinct !DILexicalBlock(scope: !11506, file: !2074, line: 611, column: 46)
!11506 = distinct !DILexicalBlock(scope: !11500, file: !2074, line: 611, column: 16)
!11507 = !DILocation(line: 612, column: 38, scope: !11504)
!11508 = !DILocation(line: 612, column: 13, scope: !11505)
!11509 = !DILocation(line: 0, scope: !11494)
!11510 = !DILocation(line: 621, column: 19, scope: !11480)
!11511 = !DILocation(line: 622, column: 21, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11480, file: !2074, line: 622, column: 9)
!11513 = !DILocation(line: 622, column: 9, scope: !11480)
!11514 = !DILocation(line: 626, column: 17, scope: !11480)
!11515 = !DILocation(line: 627, column: 14, scope: !11480)
!11516 = !DILocation(line: 628, column: 16, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11480, file: !2074, line: 628, column: 9)
!11518 = !DILocation(line: 628, column: 9, scope: !11480)
!11519 = !DILocation(line: 629, column: 16, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11517, file: !2074, line: 628, column: 38)
!11521 = !DILocation(line: 629, column: 9, scope: !11520)
!11522 = !DILocation(line: 632, column: 1, scope: !11480)
!11523 = distinct !DISubprogram(name: "hal_flash_read", scope: !2074, file: !2074, line: 634, type: !11524, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11526)
!11524 = !DISubroutineType(types: !11525)
!11525 = !{!2130, !61, !996, !61}
!11526 = !{!11527, !11528, !11529, !11530, !11531}
!11527 = !DILocalVariable(name: "start_address", arg: 1, scope: !11523, file: !2074, line: 634, type: !61)
!11528 = !DILocalVariable(name: "buffer", arg: 2, scope: !11523, file: !2074, line: 634, type: !996)
!11529 = !DILocalVariable(name: "length", arg: 3, scope: !11523, file: !2074, line: 634, type: !61)
!11530 = !DILocalVariable(name: "D", scope: !11523, file: !2074, line: 636, type: !11050)
!11531 = !DILocalVariable(name: "result", scope: !11523, file: !2074, line: 637, type: !1171)
!11532 = !DILocation(line: 0, scope: !11523)
!11533 = !DILocation(line: 639, column: 14, scope: !11523)
!11534 = !DILocation(line: 641, column: 16, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11523, file: !2074, line: 641, column: 9)
!11536 = !DILocation(line: 641, column: 9, scope: !11523)
!11537 = !DILocation(line: 642, column: 16, scope: !11538)
!11538 = distinct !DILexicalBlock(scope: !11535, file: !2074, line: 641, column: 38)
!11539 = !DILocation(line: 642, column: 9, scope: !11538)
!11540 = !DILocation(line: 645, column: 1, scope: !11523)
!11541 = distinct !DISubprogram(name: "hal_flash_write", scope: !2074, file: !2074, line: 647, type: !11542, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2073, retainedNodes: !11544)
!11542 = !DISubroutineType(types: !11543)
!11543 = !{!2130, !61, !6474, !61}
!11544 = !{!11545, !11546, !11547, !11548, !11549, !11550}
!11545 = !DILocalVariable(name: "address", arg: 1, scope: !11541, file: !2074, line: 647, type: !61)
!11546 = !DILocalVariable(name: "data", arg: 2, scope: !11541, file: !2074, line: 647, type: !6474)
!11547 = !DILocalVariable(name: "length", arg: 3, scope: !11541, file: !2074, line: 647, type: !61)
!11548 = !DILocalVariable(name: "D", scope: !11541, file: !2074, line: 649, type: !11050)
!11549 = !DILocalVariable(name: "result", scope: !11541, file: !2074, line: 650, type: !1171)
!11550 = !DILocalVariable(name: "addr", scope: !11551, file: !2074, line: 660, type: !61)
!11551 = distinct !DILexicalBlock(scope: !11552, file: !2074, line: 659, column: 40)
!11552 = distinct !DILexicalBlock(scope: !11541, file: !2074, line: 659, column: 8)
!11553 = !DILocation(line: 0, scope: !11541)
!11554 = !DILocation(line: 652, column: 14, scope: !11541)
!11555 = !DILocation(line: 653, column: 16, scope: !11556)
!11556 = distinct !DILexicalBlock(scope: !11541, file: !2074, line: 653, column: 9)
!11557 = !DILocation(line: 653, column: 9, scope: !11541)
!11558 = !DILocation(line: 654, column: 16, scope: !11559)
!11559 = distinct !DILexicalBlock(scope: !11556, file: !2074, line: 653, column: 38)
!11560 = !DILocation(line: 654, column: 9, scope: !11559)
!11561 = !DILocation(line: 659, column: 8, scope: !11552)
!11562 = !DILocation(line: 659, column: 8, scope: !11541)
!11563 = !DILocation(line: 661, column: 25, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11551, file: !2074, line: 661, column: 8)
!11565 = !DILocation(line: 0, scope: !11551)
!11566 = !DILocation(line: 661, column: 58, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11564, file: !2074, line: 661, column: 8)
!11568 = !DILocation(line: 661, column: 8, scope: !11564)
!11569 = !DILocation(line: 662, column: 13, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11567, file: !2074, line: 661, column: 147)
!11571 = !DILocation(line: 661, column: 128, scope: !11567)
!11572 = distinct !{!11572, !11568, !11573}
!11573 = !DILocation(line: 663, column: 8, scope: !11564)
!11574 = !DILocation(line: 668, column: 1, scope: !11541)
!11575 = distinct !DISubprogram(name: "BlockAddress", scope: !2135, file: !2135, line: 111, type: !11576, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11578)
!11576 = !DISubroutineType(types: !11577)
!11577 = !{!88, !88, !61}
!11578 = !{!11579, !11580, !11581, !11582, !11583, !11584}
!11579 = !DILocalVariable(name: "DriverData", arg: 1, scope: !11575, file: !2135, line: 111, type: !88)
!11580 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11575, file: !2135, line: 111, type: !61)
!11581 = !DILocalVariable(name: "D", scope: !11575, file: !2135, line: 113, type: !2163)
!11582 = !DILocalVariable(name: "addr", scope: !11575, file: !2135, line: 114, type: !61)
!11583 = !DILocalVariable(name: "region", scope: !11575, file: !2135, line: 115, type: !61)
!11584 = !DILocalVariable(name: "BlockUpperBound", scope: !11575, file: !2135, line: 115, type: !61)
!11585 = !DILocation(line: 0, scope: !11575)
!11586 = !DILocation(line: 117, column: 26, scope: !11575)
!11587 = !DILocation(line: 117, column: 40, scope: !11575)
!11588 = !DILocation(line: 118, column: 28, scope: !11575)
!11589 = !DILocation(line: 118, column: 5, scope: !11575)
!11590 = !DILocation(line: 119, column: 39, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11575, file: !2135, line: 118, column: 43)
!11592 = !DILocation(line: 119, column: 76, scope: !11591)
!11593 = !DILocation(line: 119, column: 52, scope: !11591)
!11594 = !DILocation(line: 119, column: 14, scope: !11591)
!11595 = !DILocation(line: 120, column: 15, scope: !11591)
!11596 = !DILocation(line: 121, column: 50, scope: !11591)
!11597 = !DILocation(line: 121, column: 25, scope: !11591)
!11598 = distinct !{!11598, !11589, !11599}
!11599 = !DILocation(line: 122, column: 5, scope: !11575)
!11600 = !DILocation(line: 123, column: 68, scope: !11575)
!11601 = !DILocation(line: 123, column: 44, scope: !11575)
!11602 = !DILocation(line: 123, column: 25, scope: !11575)
!11603 = !DILocation(line: 123, column: 107, scope: !11575)
!11604 = !DILocation(line: 123, column: 83, scope: !11575)
!11605 = !DILocation(line: 123, column: 10, scope: !11575)
!11606 = !DILocation(line: 125, column: 16, scope: !11575)
!11607 = !DILocation(line: 125, column: 25, scope: !11575)
!11608 = !DILocation(line: 125, column: 5, scope: !11575)
!11609 = distinct !DISubprogram(name: "MapWindow", scope: !2135, file: !2135, line: 180, type: !1768, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11610)
!11610 = !{!11611, !11612, !11613, !11614}
!11611 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11609, file: !2135, line: 180, type: !88)
!11612 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11609, file: !2135, line: 180, type: !61)
!11613 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !11609, file: !2135, line: 180, type: !61)
!11614 = !DILocalVariable(name: "D", scope: !11609, file: !2135, line: 182, type: !2163)
!11615 = !DILocation(line: 0, scope: !11609)
!11616 = !DILocation(line: 185, column: 5, scope: !11617)
!11617 = distinct !DILexicalBlock(scope: !11618, file: !2135, line: 185, column: 5)
!11618 = distinct !DILexicalBlock(scope: !11609, file: !2135, line: 185, column: 5)
!11619 = !DILocation(line: 185, column: 5, scope: !11618)
!11620 = !DILocation(line: 185, column: 5, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11617, file: !2135, line: 185, column: 5)
!11622 = !DILocation(line: 186, column: 27, scope: !11609)
!11623 = !DILocation(line: 186, column: 19, scope: !11609)
!11624 = !DILocation(line: 186, column: 8, scope: !11609)
!11625 = !DILocation(line: 186, column: 17, scope: !11609)
!11626 = !DILocation(line: 188, column: 5, scope: !11609)
!11627 = !DILocation(line: 0, scope: !2156)
!11628 = !DILocation(line: 142, column: 12, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !2156, file: !2135, line: 142, column: 9)
!11630 = !DILocation(line: 142, column: 34, scope: !11629)
!11631 = !DILocation(line: 142, column: 64, scope: !11629)
!11632 = !DILocation(line: 142, column: 75, scope: !11629)
!11633 = !DILocation(line: 142, column: 9, scope: !2156)
!11634 = !DILocation(line: 143, column: 79, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11636, file: !2135, line: 143, column: 13)
!11636 = distinct !DILexicalBlock(scope: !11629, file: !2135, line: 142, column: 99)
!11637 = !DILocation(line: 143, column: 13, scope: !11636)
!11638 = !DILocation(line: 144, column: 72, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11640, file: !2135, line: 144, column: 17)
!11640 = distinct !DILexicalBlock(scope: !11635, file: !2135, line: 143, column: 94)
!11641 = !DILocation(line: 144, column: 83, scope: !11639)
!11642 = !DILocation(line: 144, column: 17, scope: !11640)
!11643 = !DILocation(line: 145, column: 87, scope: !11644)
!11644 = distinct !DILexicalBlock(scope: !11645, file: !2135, line: 145, column: 21)
!11645 = distinct !DILexicalBlock(scope: !11639, file: !2135, line: 144, column: 107)
!11646 = !DILocation(line: 145, column: 21, scope: !11645)
!11647 = !DILocation(line: 146, column: 33, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11644, file: !2135, line: 145, column: 102)
!11649 = !DILocation(line: 147, column: 25, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11648, file: !2135, line: 147, column: 25)
!11651 = !DILocation(line: 147, column: 62, scope: !11650)
!11652 = !DILocation(line: 147, column: 34, scope: !11650)
!11653 = !DILocation(line: 147, column: 25, scope: !11648)
!11654 = !DILocation(line: 148, column: 91, scope: !11655)
!11655 = distinct !DILexicalBlock(scope: !11650, file: !2135, line: 147, column: 106)
!11656 = !DILocation(line: 149, column: 111, scope: !11655)
!11657 = !DILocation(line: 149, column: 101, scope: !11655)
!11658 = !DILocation(line: 149, column: 87, scope: !11655)
!11659 = !DILocation(line: 149, column: 99, scope: !11655)
!11660 = !DILocation(line: 150, column: 37, scope: !11655)
!11661 = !DILocation(line: 150, column: 34, scope: !11655)
!11662 = !DILocation(line: 151, column: 21, scope: !11655)
!11663 = !DILocation(line: 152, column: 91, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11650, file: !2135, line: 151, column: 28)
!11665 = !DILocation(line: 153, column: 111, scope: !11664)
!11666 = !DILocation(line: 153, column: 101, scope: !11664)
!11667 = !DILocation(line: 153, column: 87, scope: !11664)
!11668 = !DILocation(line: 153, column: 99, scope: !11664)
!11669 = !DILocation(line: 154, column: 34, scope: !11664)
!11670 = !DILocation(line: 157, column: 32, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11644, file: !2135, line: 156, column: 24)
!11672 = !DILocation(line: 158, column: 83, scope: !11671)
!11673 = !DILocation(line: 159, column: 60, scope: !11671)
!11674 = !DILocation(line: 159, column: 33, scope: !11671)
!11675 = !DILocation(line: 159, column: 30, scope: !11671)
!11676 = !DILocation(line: 162, column: 29, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11639, file: !2135, line: 161, column: 20)
!11678 = !DILocation(line: 163, column: 83, scope: !11677)
!11679 = !DILocation(line: 164, column: 103, scope: !11677)
!11680 = !DILocation(line: 164, column: 93, scope: !11677)
!11681 = !DILocation(line: 164, column: 79, scope: !11677)
!11682 = !DILocation(line: 164, column: 91, scope: !11677)
!11683 = !DILocation(line: 165, column: 56, scope: !11677)
!11684 = !DILocation(line: 165, column: 29, scope: !11677)
!11685 = !DILocation(line: 165, column: 26, scope: !11677)
!11686 = !DILocation(line: 168, column: 24, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11635, file: !2135, line: 167, column: 16)
!11688 = !DILocation(line: 169, column: 75, scope: !11687)
!11689 = !DILocation(line: 170, column: 50, scope: !11687)
!11690 = !DILocation(line: 170, column: 22, scope: !11687)
!11691 = !DILocation(line: 173, column: 21, scope: !11692)
!11692 = distinct !DILexicalBlock(scope: !11629, file: !2135, line: 172, column: 12)
!11693 = !DILocation(line: 174, column: 75, scope: !11692)
!11694 = !DILocation(line: 175, column: 95, scope: !11692)
!11695 = !DILocation(line: 175, column: 85, scope: !11692)
!11696 = !DILocation(line: 175, column: 71, scope: !11692)
!11697 = !DILocation(line: 175, column: 83, scope: !11692)
!11698 = !DILocation(line: 176, column: 46, scope: !11692)
!11699 = !DILocation(line: 176, column: 18, scope: !11692)
!11700 = !DILocation(line: 0, scope: !11629)
!11701 = !DILocation(line: 178, column: 5, scope: !2156)
!11702 = distinct !DISubprogram(name: "BlockSize", scope: !2135, file: !2135, line: 191, type: !2157, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11703)
!11703 = !{!11704, !11705, !11706, !11707, !11708}
!11704 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11702, file: !2135, line: 191, type: !88)
!11705 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !11702, file: !2135, line: 191, type: !61)
!11706 = !DILocalVariable(name: "D", scope: !11702, file: !2135, line: 193, type: !2163)
!11707 = !DILocalVariable(name: "region", scope: !11702, file: !2135, line: 194, type: !61)
!11708 = !DILocalVariable(name: "BlockUpperBound", scope: !11702, file: !2135, line: 194, type: !61)
!11709 = !DILocation(line: 0, scope: !11702)
!11710 = !DILocation(line: 196, column: 26, scope: !11702)
!11711 = !DILocation(line: 196, column: 45, scope: !11702)
!11712 = !DILocation(line: 197, column: 28, scope: !11702)
!11713 = !DILocation(line: 197, column: 5, scope: !11702)
!11714 = !DILocation(line: 198, column: 15, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11702, file: !2135, line: 197, column: 43)
!11716 = !DILocation(line: 199, column: 50, scope: !11715)
!11717 = !DILocation(line: 199, column: 25, scope: !11715)
!11718 = distinct !{!11718, !11713, !11719}
!11719 = !DILocation(line: 200, column: 5, scope: !11702)
!11720 = !DILocation(line: 202, column: 35, scope: !11702)
!11721 = !DILocation(line: 202, column: 5, scope: !11702)
!11722 = distinct !DISubprogram(name: "BlockIndex", scope: !2135, file: !2135, line: 205, type: !2157, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11723)
!11723 = !{!11724, !11725, !11726, !11727, !11728, !11729}
!11724 = !DILocalVariable(name: "DriveData", arg: 1, scope: !11722, file: !2135, line: 205, type: !88)
!11725 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !11722, file: !2135, line: 205, type: !61)
!11726 = !DILocalVariable(name: "D", scope: !11722, file: !2135, line: 207, type: !2163)
!11727 = !DILocalVariable(name: "region", scope: !11722, file: !2135, line: 208, type: !61)
!11728 = !DILocalVariable(name: "BlockUpperAddr", scope: !11722, file: !2135, line: 208, type: !61)
!11729 = !DILocalVariable(name: "blk_idx", scope: !11722, file: !2135, line: 209, type: !61)
!11730 = !DILocation(line: 0, scope: !11722)
!11731 = !DILocation(line: 211, column: 25, scope: !11722)
!11732 = !DILocation(line: 211, column: 44, scope: !11722)
!11733 = !DILocation(line: 211, column: 81, scope: !11722)
!11734 = !DILocation(line: 211, column: 57, scope: !11722)
!11735 = !DILocation(line: 213, column: 28, scope: !11722)
!11736 = !DILocation(line: 213, column: 40, scope: !11722)
!11737 = !DILocation(line: 213, column: 66, scope: !11722)
!11738 = !DILocation(line: 213, column: 5, scope: !11722)
!11739 = !DILocation(line: 214, column: 17, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11722, file: !2135, line: 213, column: 78)
!11741 = !DILocation(line: 215, column: 18, scope: !11740)
!11742 = !DILocation(line: 216, column: 15, scope: !11740)
!11743 = !DILocation(line: 217, column: 48, scope: !11740)
!11744 = !DILocation(line: 217, column: 85, scope: !11740)
!11745 = !DILocation(line: 217, column: 61, scope: !11740)
!11746 = distinct !{!11746, !11738, !11747}
!11747 = !DILocation(line: 218, column: 5, scope: !11722)
!11748 = !DILocation(line: 221, column: 53, scope: !11749)
!11749 = distinct !DILexicalBlock(scope: !11750, file: !2135, line: 220, column: 37)
!11750 = distinct !DILexicalBlock(scope: !11722, file: !2135, line: 220, column: 9)
!11751 = !DILocation(line: 221, column: 29, scope: !11749)
!11752 = !DILocation(line: 221, column: 17, scope: !11749)
!11753 = !DILocation(line: 222, column: 5, scope: !11749)
!11754 = !DILocation(line: 0, scope: !11750)
!11755 = !DILocation(line: 225, column: 5, scope: !11722)
!11756 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !2135, file: !2135, line: 232, type: !4009, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11757 = !DILocation(line: 238, column: 5, scope: !11756)
!11758 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !2135, file: !2135, line: 243, type: !4009, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11759 = !DILocation(line: 245, column: 5, scope: !11758)
!11760 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !2135, file: !2135, line: 249, type: !4009, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11761 = !DILocation(line: 254, column: 5, scope: !11760)
!11762 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !2135, file: !2135, line: 259, type: !4009, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11763 = !DILocation(line: 261, column: 5, scope: !11762)
!11764 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !2135, file: !2135, line: 271, type: !4431, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11765)
!11765 = !{!11766, !11767}
!11766 = !DILocalVariable(name: "delay", arg: 1, scope: !11764, file: !2135, line: 271, type: !61)
!11767 = !DILocalVariable(name: "ret", scope: !11764, file: !2135, line: 276, type: !3176)
!11768 = !DILocation(line: 0, scope: !11764)
!11769 = !DILocation(line: 277, column: 11, scope: !11764)
!11770 = !DILocation(line: 278, column: 13, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11764, file: !2135, line: 278, column: 9)
!11772 = !DILocation(line: 278, column: 9, scope: !11764)
!11773 = !DILocation(line: 279, column: 9, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11775, file: !2135, line: 279, column: 9)
!11775 = distinct !DILexicalBlock(scope: !11776, file: !2135, line: 279, column: 9)
!11776 = distinct !DILexicalBlock(scope: !11777, file: !2135, line: 279, column: 9)
!11777 = distinct !DILexicalBlock(scope: !11771, file: !2135, line: 278, column: 35)
!11778 = !DILocation(line: 282, column: 1, scope: !11764)
!11779 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2811, file: !2811, line: 58, type: !11780, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !11782)
!11780 = !DISubroutineType(types: !11781)
!11781 = !{null, !2442, !7, !2442, null}
!11782 = !{!11783, !11784, !11785, !11786, !11795}
!11783 = !DILocalVariable(name: "func", arg: 1, scope: !11779, file: !2811, line: 58, type: !2442)
!11784 = !DILocalVariable(name: "line", arg: 2, scope: !11779, file: !2811, line: 58, type: !7)
!11785 = !DILocalVariable(name: "message", arg: 3, scope: !11779, file: !2811, line: 58, type: !2442)
!11786 = !DILocalVariable(name: "ap", scope: !11779, file: !2811, line: 60, type: !11787)
!11787 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !11788, line: 46, baseType: !11789)
!11788 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!11789 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !11790, line: 32, baseType: !11791)
!11790 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!11791 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2811, baseType: !11792)
!11792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !11793)
!11793 = !{!11794}
!11794 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !11792, file: !2811, line: 60, baseType: !88, size: 32)
!11795 = !DILocalVariable(name: "mask", scope: !11779, file: !2811, line: 62, type: !61)
!11796 = !DILocation(line: 0, scope: !11779)
!11797 = !DILocation(line: 60, column: 5, scope: !11779)
!11798 = !DILocation(line: 60, column: 13, scope: !11779)
!11799 = !DILocation(line: 62, column: 5, scope: !11779)
!11800 = !DILocation(line: 63, column: 5, scope: !11779)
!11801 = !DILocation(line: 65, column: 5, scope: !11779)
!11802 = !DILocation(line: 66, column: 5, scope: !11779)
!11803 = !DILocation(line: 67, column: 5, scope: !11779)
!11804 = !DILocation(line: 69, column: 37, scope: !11779)
!11805 = !DILocation(line: 69, column: 5, scope: !11779)
!11806 = !DILocation(line: 71, column: 1, scope: !11779)
!11807 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2811, file: !2811, line: 72, type: !11780, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !11808)
!11808 = !{!11809, !11810, !11811, !11812, !11813}
!11809 = !DILocalVariable(name: "func", arg: 1, scope: !11807, file: !2811, line: 72, type: !2442)
!11810 = !DILocalVariable(name: "line", arg: 2, scope: !11807, file: !2811, line: 72, type: !7)
!11811 = !DILocalVariable(name: "message", arg: 3, scope: !11807, file: !2811, line: 72, type: !2442)
!11812 = !DILocalVariable(name: "ap", scope: !11807, file: !2811, line: 74, type: !11787)
!11813 = !DILocalVariable(name: "mask", scope: !11807, file: !2811, line: 76, type: !61)
!11814 = !DILocation(line: 0, scope: !11807)
!11815 = !DILocation(line: 74, column: 5, scope: !11807)
!11816 = !DILocation(line: 74, column: 13, scope: !11807)
!11817 = !DILocation(line: 76, column: 5, scope: !11807)
!11818 = !DILocation(line: 77, column: 5, scope: !11807)
!11819 = !DILocation(line: 79, column: 5, scope: !11807)
!11820 = !DILocation(line: 80, column: 5, scope: !11807)
!11821 = !DILocation(line: 81, column: 5, scope: !11807)
!11822 = !DILocation(line: 83, column: 37, scope: !11807)
!11823 = !DILocation(line: 83, column: 5, scope: !11807)
!11824 = !DILocation(line: 85, column: 1, scope: !11807)
!11825 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2811, file: !2811, line: 86, type: !11780, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !11826)
!11826 = !{!11827, !11828, !11829, !11830, !11831}
!11827 = !DILocalVariable(name: "func", arg: 1, scope: !11825, file: !2811, line: 86, type: !2442)
!11828 = !DILocalVariable(name: "line", arg: 2, scope: !11825, file: !2811, line: 86, type: !7)
!11829 = !DILocalVariable(name: "message", arg: 3, scope: !11825, file: !2811, line: 86, type: !2442)
!11830 = !DILocalVariable(name: "ap", scope: !11825, file: !2811, line: 88, type: !11787)
!11831 = !DILocalVariable(name: "mask", scope: !11825, file: !2811, line: 90, type: !61)
!11832 = !DILocation(line: 0, scope: !11825)
!11833 = !DILocation(line: 88, column: 5, scope: !11825)
!11834 = !DILocation(line: 88, column: 13, scope: !11825)
!11835 = !DILocation(line: 90, column: 5, scope: !11825)
!11836 = !DILocation(line: 91, column: 5, scope: !11825)
!11837 = !DILocation(line: 93, column: 5, scope: !11825)
!11838 = !DILocation(line: 94, column: 5, scope: !11825)
!11839 = !DILocation(line: 95, column: 5, scope: !11825)
!11840 = !DILocation(line: 97, column: 37, scope: !11825)
!11841 = !DILocation(line: 97, column: 5, scope: !11825)
!11842 = !DILocation(line: 99, column: 1, scope: !11825)
!11843 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2811, file: !2811, line: 101, type: !11844, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2810, retainedNodes: !11848)
!11844 = !DISubroutineType(types: !11845)
!11845 = !{null, !2442, !7, !2442, !11846, !7, null}
!11846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11847, size: 32)
!11847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!11848 = !{!11849, !11850, !11851, !11852, !11853}
!11849 = !DILocalVariable(name: "func", arg: 1, scope: !11843, file: !2811, line: 101, type: !2442)
!11850 = !DILocalVariable(name: "line", arg: 2, scope: !11843, file: !2811, line: 101, type: !7)
!11851 = !DILocalVariable(name: "message", arg: 3, scope: !11843, file: !2811, line: 101, type: !2442)
!11852 = !DILocalVariable(name: "data", arg: 4, scope: !11843, file: !2811, line: 101, type: !11846)
!11853 = !DILocalVariable(name: "length", arg: 5, scope: !11843, file: !2811, line: 101, type: !7)
!11854 = !DILocation(line: 0, scope: !11843)
!11855 = !DILocation(line: 103, column: 1, scope: !11843)
!11856 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2215, file: !2215, line: 87, type: !3757, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !11857)
!11857 = !{!11858, !11859}
!11858 = !DILocalVariable(name: "bank_no", arg: 1, scope: !11856, file: !2215, line: 87, type: !61)
!11859 = !DILocalVariable(name: "value", scope: !11856, file: !2215, line: 89, type: !61)
!11860 = !DILocation(line: 0, scope: !11856)
!11861 = !DILocation(line: 91, column: 41, scope: !11856)
!11862 = !DILocation(line: 91, column: 5, scope: !11856)
!11863 = !DILocation(line: 91, column: 19, scope: !11856)
!11864 = !DILocation(line: 91, column: 31, scope: !11856)
!11865 = !DILocation(line: 92, column: 77, scope: !11856)
!11866 = !DILocation(line: 92, column: 60, scope: !11856)
!11867 = !DILocation(line: 92, column: 31, scope: !11856)
!11868 = !DILocation(line: 94, column: 5, scope: !11856)
!11869 = !DILocation(line: 94, column: 27, scope: !11856)
!11870 = !DILocation(line: 94, column: 39, scope: !11856)
!11871 = !DILocation(line: 94, column: 65, scope: !11856)
!11872 = distinct !{!11872, !11868, !11873}
!11873 = !DILocation(line: 94, column: 70, scope: !11856)
!11874 = !DILocation(line: 96, column: 29, scope: !11856)
!11875 = !DILocation(line: 96, column: 64, scope: !11856)
!11876 = !DILocation(line: 98, column: 5, scope: !11856)
!11877 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2215, file: !2215, line: 102, type: !11878, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !11880)
!11878 = !DISubroutineType(types: !11879)
!11879 = !{null, !61, !61}
!11880 = !{!11881, !11882}
!11881 = !DILocalVariable(name: "bank_no", arg: 1, scope: !11877, file: !2215, line: 102, type: !61)
!11882 = !DILocalVariable(name: "value", arg: 2, scope: !11877, file: !2215, line: 102, type: !61)
!11883 = !DILocation(line: 0, scope: !11877)
!11884 = !DILocation(line: 106, column: 40, scope: !11877)
!11885 = !DILocation(line: 106, column: 77, scope: !11877)
!11886 = !DILocation(line: 106, column: 102, scope: !11877)
!11887 = !DILocation(line: 106, column: 5, scope: !11877)
!11888 = !DILocation(line: 106, column: 19, scope: !11877)
!11889 = !DILocation(line: 106, column: 31, scope: !11877)
!11890 = !DILocation(line: 107, column: 77, scope: !11877)
!11891 = !DILocation(line: 107, column: 60, scope: !11877)
!11892 = !DILocation(line: 107, column: 31, scope: !11877)
!11893 = !DILocation(line: 109, column: 5, scope: !11877)
!11894 = !DILocation(line: 109, column: 27, scope: !11877)
!11895 = !DILocation(line: 109, column: 39, scope: !11877)
!11896 = !DILocation(line: 109, column: 65, scope: !11877)
!11897 = distinct !{!11897, !11893, !11898}
!11898 = !DILocation(line: 109, column: 70, scope: !11877)
!11899 = !DILocation(line: 111, column: 5, scope: !11877)
!11900 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2215, file: !2215, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!11901 = !DILocation(line: 117, column: 36, scope: !11900)
!11902 = !DILocation(line: 117, column: 18, scope: !11900)
!11903 = !DILocation(line: 118, column: 37, scope: !11900)
!11904 = !DILocation(line: 118, column: 18, scope: !11900)
!11905 = !DILocation(line: 119, column: 37, scope: !11900)
!11906 = !DILocation(line: 119, column: 19, scope: !11900)
!11907 = !DILocation(line: 120, column: 37, scope: !11900)
!11908 = !DILocation(line: 120, column: 19, scope: !11900)
!11909 = !DILocation(line: 121, column: 37, scope: !11900)
!11910 = !DILocation(line: 121, column: 19, scope: !11900)
!11911 = !DILocation(line: 122, column: 37, scope: !11900)
!11912 = !DILocation(line: 122, column: 19, scope: !11900)
!11913 = !DILocation(line: 123, column: 37, scope: !11900)
!11914 = !DILocation(line: 123, column: 19, scope: !11900)
!11915 = !DILocation(line: 125, column: 37, scope: !11900)
!11916 = !DILocation(line: 125, column: 19, scope: !11900)
!11917 = !DILocation(line: 126, column: 37, scope: !11900)
!11918 = !DILocation(line: 126, column: 19, scope: !11900)
!11919 = !DILocation(line: 127, column: 37, scope: !11900)
!11920 = !DILocation(line: 127, column: 19, scope: !11900)
!11921 = !DILocation(line: 128, column: 37, scope: !11900)
!11922 = !DILocation(line: 128, column: 19, scope: !11900)
!11923 = !DILocation(line: 130, column: 36, scope: !11900)
!11924 = !DILocation(line: 130, column: 18, scope: !11900)
!11925 = !DILocation(line: 131, column: 36, scope: !11900)
!11926 = !DILocation(line: 131, column: 18, scope: !11900)
!11927 = !DILocation(line: 133, column: 5, scope: !11900)
!11928 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2215, file: !2215, line: 140, type: !11929, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!11929 = !DISubroutineType(types: !11930)
!11930 = !{!7}
!11931 = !DILocation(line: 144, column: 5, scope: !11928)
!11932 = !DILocation(line: 144, column: 19, scope: !11928)
!11933 = !DILocation(line: 144, column: 28, scope: !11928)
!11934 = !DILocation(line: 147, column: 19, scope: !11928)
!11935 = !DILocation(line: 147, column: 28, scope: !11928)
!11936 = !DILocation(line: 150, column: 19, scope: !11928)
!11937 = !DILocation(line: 150, column: 28, scope: !11928)
!11938 = !DILocation(line: 152, column: 5, scope: !11928)
!11939 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2215, file: !2215, line: 157, type: !8701, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !11940)
!11940 = !{!11941, !11942, !11943, !11944, !11945, !11946}
!11941 = !DILocalVariable(name: "mbist_src", scope: !11939, file: !2215, line: 159, type: !61)
!11942 = !DILocalVariable(name: "mbist_len", scope: !11939, file: !2215, line: 159, type: !61)
!11943 = !DILocalVariable(name: "mbist_data", scope: !11939, file: !2215, line: 159, type: !3730)
!11944 = !DILocalVariable(name: "i", scope: !11939, file: !2215, line: 160, type: !61)
!11945 = !DILocalVariable(name: "bist_data_inv", scope: !11939, file: !2215, line: 160, type: !61)
!11946 = !DILocalVariable(name: "bist_data_random", scope: !11939, file: !2215, line: 160, type: !61)
!11947 = !DILocation(line: 159, column: 36, scope: !11939)
!11948 = !DILocation(line: 0, scope: !11939)
!11949 = !DILocation(line: 165, column: 5, scope: !11939)
!11950 = !DILocation(line: 165, column: 19, scope: !11939)
!11951 = !DILocation(line: 165, column: 30, scope: !11939)
!11952 = !DILocation(line: 166, column: 5, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11939, file: !2215, line: 166, column: 5)
!11954 = !DILocation(line: 167, column: 9, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11956, file: !2215, line: 167, column: 9)
!11956 = distinct !DILexicalBlock(scope: !11957, file: !2215, line: 166, column: 66)
!11957 = distinct !DILexicalBlock(scope: !11953, file: !2215, line: 166, column: 5)
!11958 = !DILocation(line: 168, column: 13, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11960, file: !2215, line: 168, column: 13)
!11960 = distinct !DILexicalBlock(scope: !11961, file: !2215, line: 167, column: 34)
!11961 = distinct !DILexicalBlock(scope: !11955, file: !2215, line: 167, column: 9)
!11962 = !DILocation(line: 168, column: 57, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11959, file: !2215, line: 168, column: 13)
!11964 = distinct !{!11964, !11958, !11965}
!11965 = !DILocation(line: 183, column: 13, scope: !11959)
!11966 = !DILocation(line: 170, column: 42, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11963, file: !2215, line: 168, column: 83)
!11968 = !DILocation(line: 172, column: 42, scope: !11967)
!11969 = !DILocation(line: 174, column: 45, scope: !11967)
!11970 = !DILocation(line: 174, column: 59, scope: !11967)
!11971 = !DILocation(line: 174, column: 154, scope: !11967)
!11972 = !DILocation(line: 174, column: 87, scope: !11967)
!11973 = !DILocation(line: 174, column: 134, scope: !11967)
!11974 = !DILocation(line: 174, column: 42, scope: !11967)
!11975 = !DILocation(line: 175, column: 42, scope: !11967)
!11976 = !DILocation(line: 177, column: 17, scope: !11967)
!11977 = !DILocation(line: 177, column: 39, scope: !11967)
!11978 = !DILocation(line: 177, column: 50, scope: !11967)
!11979 = !DILocation(line: 177, column: 71, scope: !11967)
!11980 = distinct !{!11980, !11976, !11981}
!11981 = !DILocation(line: 177, column: 78, scope: !11967)
!11982 = !DILocation(line: 179, column: 36, scope: !11983)
!11983 = distinct !DILexicalBlock(scope: !11967, file: !2215, line: 179, column: 21)
!11984 = !DILocation(line: 179, column: 47, scope: !11983)
!11985 = !DILocation(line: 179, column: 69, scope: !11983)
!11986 = !DILocation(line: 168, column: 79, scope: !11963)
!11987 = !DILocation(line: 179, column: 21, scope: !11967)
!11988 = !DILocation(line: 167, column: 30, scope: !11961)
!11989 = !DILocation(line: 167, column: 23, scope: !11961)
!11990 = distinct !{!11990, !11954, !11991}
!11991 = !DILocation(line: 184, column: 9, scope: !11955)
!11992 = !DILocation(line: 166, column: 62, scope: !11957)
!11993 = !DILocation(line: 166, column: 43, scope: !11957)
!11994 = distinct !{!11994, !11952, !11995}
!11995 = !DILocation(line: 185, column: 5, scope: !11953)
!11996 = !DILocation(line: 189, column: 1, scope: !11939)
!11997 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2215, file: !2215, line: 190, type: !8701, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!11998 = !DILocation(line: 192, column: 9, scope: !11999)
!11999 = distinct !DILexicalBlock(scope: !11997, file: !2215, line: 192, column: 9)
!12000 = !DILocation(line: 192, column: 26, scope: !11999)
!12001 = !DILocation(line: 0, scope: !11997)
!12002 = !DILocation(line: 197, column: 1, scope: !11997)
!12003 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2215, file: !2215, line: 201, type: !291, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !12004)
!12004 = !{!12005, !12006}
!12005 = !DILocalVariable(name: "dqy_in_del", scope: !12003, file: !2215, line: 203, type: !1171)
!12006 = !DILocalVariable(name: "dqs_in_del", scope: !12003, file: !2215, line: 204, type: !1171)
!12007 = !DILocation(line: 0, scope: !12003)
!12008 = !DILocation(line: 206, column: 5, scope: !12003)
!12009 = !DILocation(line: 206, column: 19, scope: !12003)
!12010 = !DILocation(line: 206, column: 28, scope: !12003)
!12011 = !DILocation(line: 207, column: 19, scope: !12003)
!12012 = !DILocation(line: 207, column: 28, scope: !12003)
!12013 = !DILocation(line: 208, column: 19, scope: !12003)
!12014 = !DILocation(line: 208, column: 28, scope: !12003)
!12015 = !DILocation(line: 209, column: 19, scope: !12003)
!12016 = !DILocation(line: 209, column: 28, scope: !12003)
!12017 = !DILocation(line: 212, column: 23, scope: !12018)
!12018 = distinct !DILexicalBlock(scope: !12019, file: !2215, line: 211, column: 78)
!12019 = distinct !DILexicalBlock(scope: !12020, file: !2215, line: 211, column: 5)
!12020 = distinct !DILexicalBlock(scope: !12003, file: !2215, line: 211, column: 5)
!12021 = !DILocation(line: 212, column: 32, scope: !12018)
!12022 = !DILocation(line: 213, column: 23, scope: !12018)
!12023 = !DILocation(line: 213, column: 32, scope: !12018)
!12024 = !DILocation(line: 215, column: 19, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12018, file: !2215, line: 215, column: 13)
!12026 = !DILocation(line: 215, column: 15, scope: !12025)
!12027 = !DILocation(line: 215, column: 13, scope: !12018)
!12028 = !DILocation(line: 211, column: 40, scope: !12019)
!12029 = !DILocation(line: 211, column: 5, scope: !12020)
!12030 = distinct !{!12030, !12029, !12031}
!12031 = !DILocation(line: 218, column: 5, scope: !12020)
!12032 = !DILocation(line: 211, column: 57, scope: !12019)
!12033 = !DILocation(line: 212, column: 9, scope: !12018)
!12034 = !DILocation(line: 212, column: 45, scope: !12018)
!12035 = !DILocation(line: 212, column: 83, scope: !12018)
!12036 = !DILocation(line: 212, column: 121, scope: !12018)
!12037 = !DILocation(line: 212, column: 70, scope: !12018)
!12038 = !DILocation(line: 212, column: 108, scope: !12018)
!12039 = !DILocation(line: 212, column: 146, scope: !12018)
!12040 = !DILocation(line: 222, column: 49, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12042, file: !2215, line: 221, column: 84)
!12042 = distinct !DILexicalBlock(scope: !12043, file: !2215, line: 221, column: 9)
!12043 = distinct !DILexicalBlock(scope: !12044, file: !2215, line: 221, column: 9)
!12044 = distinct !DILexicalBlock(scope: !12045, file: !2215, line: 220, column: 25)
!12045 = distinct !DILexicalBlock(scope: !12003, file: !2215, line: 220, column: 9)
!12046 = !DILocation(line: 222, column: 13, scope: !12041)
!12047 = !DILocation(line: 222, column: 27, scope: !12041)
!12048 = !DILocation(line: 222, column: 36, scope: !12041)
!12049 = !DILocation(line: 224, column: 23, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12041, file: !2215, line: 224, column: 17)
!12051 = !DILocation(line: 224, column: 19, scope: !12050)
!12052 = !DILocation(line: 224, column: 17, scope: !12041)
!12053 = distinct !{!12053, !12054, !12055}
!12054 = !DILocation(line: 221, column: 9, scope: !12043)
!12055 = !DILocation(line: 227, column: 9, scope: !12043)
!12056 = !DILocation(line: 230, column: 1, scope: !12003)
!12057 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2215, file: !2215, line: 253, type: !291, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!12058 = !DILocation(line: 257, column: 26, scope: !12057)
!12059 = !DILocation(line: 259, column: 5, scope: !12057)
!12060 = !DILocation(line: 259, column: 19, scope: !12057)
!12061 = !DILocation(line: 259, column: 29, scope: !12057)
!12062 = !DILocation(line: 260, column: 5, scope: !12057)
!12063 = !DILocation(line: 260, column: 27, scope: !12057)
!12064 = !DILocation(line: 260, column: 93, scope: !12057)
!12065 = distinct !{!12065, !12062, !12066}
!12066 = !DILocation(line: 260, column: 98, scope: !12057)
!12067 = !DILocation(line: 261, column: 29, scope: !12057)
!12068 = !DILocation(line: 262, column: 5, scope: !12057)
!12069 = !DILocation(line: 262, column: 27, scope: !12057)
!12070 = !DILocation(line: 262, column: 93, scope: !12057)
!12071 = distinct !{!12071, !12068, !12072}
!12072 = !DILocation(line: 262, column: 98, scope: !12057)
!12073 = !DILocation(line: 264, column: 42, scope: !12057)
!12074 = !DILocation(line: 265, column: 48, scope: !12057)
!12075 = !DILocation(line: 267, column: 5, scope: !12057)
!12076 = !DILocation(line: 267, column: 27, scope: !12057)
!12077 = !DILocation(line: 267, column: 39, scope: !12057)
!12078 = !DILocation(line: 267, column: 65, scope: !12057)
!12079 = distinct !{!12079, !12075, !12080}
!12080 = !DILocation(line: 267, column: 70, scope: !12057)
!12081 = !DILocation(line: 269, column: 5, scope: !12057)
!12082 = !DILocation(line: 273, column: 8, scope: !12057)
!12083 = !DILocation(line: 275, column: 5, scope: !12057)
!12084 = !DILocation(line: 275, column: 27, scope: !12057)
!12085 = !DILocation(line: 275, column: 39, scope: !12057)
!12086 = !DILocation(line: 275, column: 65, scope: !12057)
!12087 = distinct !{!12087, !12083, !12088}
!12088 = !DILocation(line: 275, column: 70, scope: !12057)
!12089 = !DILocation(line: 278, column: 9, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12057, file: !2215, line: 278, column: 9)
!12091 = !DILocation(line: 278, column: 44, scope: !12090)
!12092 = !DILocation(line: 278, column: 9, scope: !12057)
!12093 = !DILocation(line: 279, column: 13, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12095, file: !2215, line: 279, column: 12)
!12095 = distinct !DILexicalBlock(scope: !12090, file: !2215, line: 278, column: 55)
!12096 = !DILocation(line: 279, column: 48, scope: !12094)
!12097 = !DILocation(line: 279, column: 56, scope: !12094)
!12098 = !DILocation(line: 0, scope: !12094)
!12099 = !DILocation(line: 288, column: 1, scope: !12057)
!12100 = distinct !DISubprogram(name: "custom_setEMI", scope: !2215, file: !2215, line: 294, type: !12101, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!12101 = !DISubroutineType(types: !12102)
!12102 = !{!1483}
!12103 = !DILocation(line: 298, column: 5, scope: !12100)
!12104 = !DILocation(line: 300, column: 5, scope: !12100)
!12105 = !DILocation(line: 302, column: 20, scope: !12100)
!12106 = !DILocation(line: 302, column: 18, scope: !12100)
!12107 = !DILocation(line: 303, column: 20, scope: !12100)
!12108 = !DILocation(line: 303, column: 18, scope: !12100)
!12109 = !DILocation(line: 304, column: 20, scope: !12100)
!12110 = !DILocation(line: 304, column: 18, scope: !12100)
!12111 = !DILocation(line: 307, column: 5, scope: !12100)
!12112 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2215, file: !2215, line: 312, type: !12101, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!12113 = !DILocation(line: 319, column: 29, scope: !12112)
!12114 = !DILocation(line: 319, column: 5, scope: !12112)
!12115 = !DILocation(line: 319, column: 19, scope: !12112)
!12116 = !DILocation(line: 319, column: 27, scope: !12112)
!12117 = !DILocation(line: 320, column: 29, scope: !12112)
!12118 = !DILocation(line: 320, column: 19, scope: !12112)
!12119 = !DILocation(line: 320, column: 27, scope: !12112)
!12120 = !DILocation(line: 322, column: 30, scope: !12112)
!12121 = !DILocation(line: 322, column: 19, scope: !12112)
!12122 = !DILocation(line: 322, column: 28, scope: !12112)
!12123 = !DILocation(line: 324, column: 30, scope: !12112)
!12124 = !DILocation(line: 324, column: 19, scope: !12112)
!12125 = !DILocation(line: 324, column: 28, scope: !12112)
!12126 = !DILocation(line: 326, column: 31, scope: !12112)
!12127 = !DILocation(line: 326, column: 19, scope: !12112)
!12128 = !DILocation(line: 326, column: 29, scope: !12112)
!12129 = !DILocation(line: 327, column: 31, scope: !12112)
!12130 = !DILocation(line: 327, column: 19, scope: !12112)
!12131 = !DILocation(line: 327, column: 29, scope: !12112)
!12132 = !DILocation(line: 332, column: 30, scope: !12112)
!12133 = !DILocation(line: 332, column: 19, scope: !12112)
!12134 = !DILocation(line: 332, column: 28, scope: !12112)
!12135 = !DILocation(line: 333, column: 30, scope: !12112)
!12136 = !DILocation(line: 333, column: 19, scope: !12112)
!12137 = !DILocation(line: 333, column: 28, scope: !12112)
!12138 = !DILocation(line: 334, column: 30, scope: !12112)
!12139 = !DILocation(line: 334, column: 19, scope: !12112)
!12140 = !DILocation(line: 334, column: 28, scope: !12112)
!12141 = !DILocation(line: 336, column: 30, scope: !12112)
!12142 = !DILocation(line: 336, column: 19, scope: !12112)
!12143 = !DILocation(line: 336, column: 28, scope: !12112)
!12144 = !DILocation(line: 337, column: 30, scope: !12112)
!12145 = !DILocation(line: 337, column: 19, scope: !12112)
!12146 = !DILocation(line: 337, column: 28, scope: !12112)
!12147 = !DILocation(line: 338, column: 30, scope: !12112)
!12148 = !DILocation(line: 338, column: 19, scope: !12112)
!12149 = !DILocation(line: 338, column: 28, scope: !12112)
!12150 = !DILocation(line: 339, column: 30, scope: !12112)
!12151 = !DILocation(line: 339, column: 19, scope: !12112)
!12152 = !DILocation(line: 339, column: 28, scope: !12112)
!12153 = !DILocation(line: 341, column: 5, scope: !12112)
!12154 = !DILocation(line: 345, column: 5, scope: !12112)
!12155 = !DILocation(line: 345, column: 19, scope: !12112)
!12156 = !DILocation(line: 345, column: 28, scope: !12112)
!12157 = !DILocation(line: 346, column: 5, scope: !12112)
!12158 = !DILocation(line: 346, column: 28, scope: !12112)
!12159 = !DILocation(line: 346, column: 82, scope: !12112)
!12160 = distinct !{!12160, !12157, !12161}
!12161 = !DILocation(line: 346, column: 87, scope: !12112)
!12162 = !DILocation(line: 347, column: 28, scope: !12112)
!12163 = !DILocation(line: 348, column: 5, scope: !12112)
!12164 = !DILocation(line: 348, column: 28, scope: !12112)
!12165 = !DILocation(line: 348, column: 82, scope: !12112)
!12166 = distinct !{!12166, !12163, !12167}
!12167 = !DILocation(line: 348, column: 87, scope: !12112)
!12168 = !DILocation(line: 349, column: 28, scope: !12112)
!12169 = !DILocation(line: 351, column: 5, scope: !12112)
!12170 = !DILocation(line: 353, column: 5, scope: !12112)
!12171 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2215, file: !2215, line: 358, type: !291, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!12172 = !DILocation(line: 361, column: 36, scope: !12171)
!12173 = !DILocation(line: 361, column: 50, scope: !12171)
!12174 = !DILocation(line: 361, column: 34, scope: !12171)
!12175 = !DILocation(line: 362, column: 50, scope: !12171)
!12176 = !DILocation(line: 362, column: 34, scope: !12171)
!12177 = !DILocation(line: 363, column: 50, scope: !12171)
!12178 = !DILocation(line: 363, column: 34, scope: !12171)
!12179 = !DILocation(line: 364, column: 50, scope: !12171)
!12180 = !DILocation(line: 364, column: 34, scope: !12171)
!12181 = !DILocation(line: 365, column: 50, scope: !12171)
!12182 = !DILocation(line: 365, column: 34, scope: !12171)
!12183 = !DILocation(line: 366, column: 50, scope: !12171)
!12184 = !DILocation(line: 366, column: 34, scope: !12171)
!12185 = !DILocation(line: 367, column: 50, scope: !12171)
!12186 = !DILocation(line: 367, column: 34, scope: !12171)
!12187 = !DILocation(line: 368, column: 50, scope: !12171)
!12188 = !DILocation(line: 368, column: 34, scope: !12171)
!12189 = !DILocation(line: 369, column: 50, scope: !12171)
!12190 = !DILocation(line: 369, column: 34, scope: !12171)
!12191 = !DILocation(line: 370, column: 50, scope: !12171)
!12192 = !DILocation(line: 370, column: 34, scope: !12171)
!12193 = !DILocation(line: 371, column: 50, scope: !12171)
!12194 = !DILocation(line: 371, column: 34, scope: !12171)
!12195 = !DILocation(line: 372, column: 50, scope: !12171)
!12196 = !DILocation(line: 372, column: 34, scope: !12171)
!12197 = !DILocation(line: 373, column: 51, scope: !12171)
!12198 = !DILocation(line: 373, column: 35, scope: !12171)
!12199 = !DILocation(line: 374, column: 51, scope: !12171)
!12200 = !DILocation(line: 374, column: 35, scope: !12171)
!12201 = !DILocation(line: 375, column: 50, scope: !12171)
!12202 = !DILocation(line: 375, column: 34, scope: !12171)
!12203 = !DILocation(line: 376, column: 50, scope: !12171)
!12204 = !DILocation(line: 376, column: 34, scope: !12171)
!12205 = !DILocation(line: 377, column: 50, scope: !12171)
!12206 = !DILocation(line: 377, column: 34, scope: !12171)
!12207 = !DILocation(line: 378, column: 50, scope: !12171)
!12208 = !DILocation(line: 378, column: 34, scope: !12171)
!12209 = !DILocation(line: 379, column: 50, scope: !12171)
!12210 = !DILocation(line: 379, column: 34, scope: !12171)
!12211 = !DILocation(line: 380, column: 50, scope: !12171)
!12212 = !DILocation(line: 380, column: 34, scope: !12171)
!12213 = !DILocation(line: 382, column: 1, scope: !12171)
!12214 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2215, file: !2215, line: 384, type: !291, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!12215 = !DILocation(line: 387, column: 5, scope: !12214)
!12216 = !DILocation(line: 387, column: 27, scope: !12214)
!12217 = !DILocation(line: 387, column: 36, scope: !12214)
!12218 = !DILocation(line: 387, column: 76, scope: !12214)
!12219 = distinct !{!12219, !12215, !12220}
!12220 = !DILocation(line: 387, column: 84, scope: !12214)
!12221 = !DILocation(line: 388, column: 50, scope: !12214)
!12222 = !DILocation(line: 388, column: 19, scope: !12214)
!12223 = !DILocation(line: 388, column: 28, scope: !12214)
!12224 = !DILocation(line: 389, column: 50, scope: !12214)
!12225 = !DILocation(line: 389, column: 19, scope: !12214)
!12226 = !DILocation(line: 389, column: 28, scope: !12214)
!12227 = !DILocation(line: 390, column: 50, scope: !12214)
!12228 = !DILocation(line: 390, column: 19, scope: !12214)
!12229 = !DILocation(line: 390, column: 28, scope: !12214)
!12230 = !DILocation(line: 391, column: 50, scope: !12214)
!12231 = !DILocation(line: 391, column: 19, scope: !12214)
!12232 = !DILocation(line: 391, column: 28, scope: !12214)
!12233 = !DILocation(line: 392, column: 50, scope: !12214)
!12234 = !DILocation(line: 392, column: 19, scope: !12214)
!12235 = !DILocation(line: 392, column: 28, scope: !12214)
!12236 = !DILocation(line: 393, column: 50, scope: !12214)
!12237 = !DILocation(line: 393, column: 19, scope: !12214)
!12238 = !DILocation(line: 393, column: 28, scope: !12214)
!12239 = !DILocation(line: 394, column: 51, scope: !12214)
!12240 = !DILocation(line: 394, column: 19, scope: !12214)
!12241 = !DILocation(line: 394, column: 29, scope: !12214)
!12242 = !DILocation(line: 395, column: 51, scope: !12214)
!12243 = !DILocation(line: 395, column: 19, scope: !12214)
!12244 = !DILocation(line: 395, column: 29, scope: !12214)
!12245 = !DILocation(line: 396, column: 50, scope: !12214)
!12246 = !DILocation(line: 396, column: 19, scope: !12214)
!12247 = !DILocation(line: 396, column: 28, scope: !12214)
!12248 = !DILocation(line: 397, column: 50, scope: !12214)
!12249 = !DILocation(line: 397, column: 19, scope: !12214)
!12250 = !DILocation(line: 397, column: 28, scope: !12214)
!12251 = !DILocation(line: 398, column: 50, scope: !12214)
!12252 = !DILocation(line: 398, column: 19, scope: !12214)
!12253 = !DILocation(line: 398, column: 28, scope: !12214)
!12254 = !DILocation(line: 399, column: 50, scope: !12214)
!12255 = !DILocation(line: 399, column: 19, scope: !12214)
!12256 = !DILocation(line: 399, column: 28, scope: !12214)
!12257 = !DILocation(line: 400, column: 50, scope: !12214)
!12258 = !DILocation(line: 400, column: 19, scope: !12214)
!12259 = !DILocation(line: 400, column: 28, scope: !12214)
!12260 = !DILocation(line: 401, column: 50, scope: !12214)
!12261 = !DILocation(line: 401, column: 19, scope: !12214)
!12262 = !DILocation(line: 401, column: 28, scope: !12214)
!12263 = !DILocation(line: 402, column: 50, scope: !12214)
!12264 = !DILocation(line: 402, column: 19, scope: !12214)
!12265 = !DILocation(line: 402, column: 28, scope: !12214)
!12266 = !DILocation(line: 403, column: 50, scope: !12214)
!12267 = !DILocation(line: 403, column: 19, scope: !12214)
!12268 = !DILocation(line: 403, column: 28, scope: !12214)
!12269 = !DILocation(line: 404, column: 50, scope: !12214)
!12270 = !DILocation(line: 404, column: 19, scope: !12214)
!12271 = !DILocation(line: 404, column: 28, scope: !12214)
!12272 = !DILocation(line: 405, column: 50, scope: !12214)
!12273 = !DILocation(line: 405, column: 19, scope: !12214)
!12274 = !DILocation(line: 405, column: 28, scope: !12214)
!12275 = !DILocation(line: 406, column: 50, scope: !12214)
!12276 = !DILocation(line: 406, column: 19, scope: !12214)
!12277 = !DILocation(line: 406, column: 28, scope: !12214)
!12278 = !DILocation(line: 408, column: 1, scope: !12214)
!12279 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2215, file: !2215, line: 410, type: !291, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!12280 = !DILocation(line: 413, column: 29, scope: !12279)
!12281 = !DILocation(line: 413, column: 43, scope: !12279)
!12282 = !DILocation(line: 413, column: 51, scope: !12279)
!12283 = !DILocation(line: 413, column: 27, scope: !12279)
!12284 = !DILocation(line: 416, column: 19, scope: !12279)
!12285 = !DILocation(line: 416, column: 29, scope: !12279)
!12286 = !DILocation(line: 417, column: 5, scope: !12279)
!12287 = !DILocation(line: 417, column: 27, scope: !12279)
!12288 = !DILocation(line: 417, column: 93, scope: !12279)
!12289 = distinct !{!12289, !12286, !12290}
!12290 = !DILocation(line: 417, column: 98, scope: !12279)
!12291 = !DILocation(line: 418, column: 29, scope: !12279)
!12292 = !DILocation(line: 419, column: 5, scope: !12279)
!12293 = !DILocation(line: 419, column: 27, scope: !12279)
!12294 = !DILocation(line: 419, column: 93, scope: !12279)
!12295 = distinct !{!12295, !12292, !12296}
!12296 = !DILocation(line: 419, column: 98, scope: !12279)
!12297 = !DILocation(line: 421, column: 5, scope: !12279)
!12298 = !DILocation(line: 422, column: 5, scope: !12279)
!12299 = !DILocation(line: 422, column: 19, scope: !12279)
!12300 = !DILocation(line: 422, column: 28, scope: !12279)
!12301 = !DILocation(line: 423, column: 5, scope: !12279)
!12302 = !DILocation(line: 423, column: 28, scope: !12279)
!12303 = !DILocation(line: 423, column: 82, scope: !12279)
!12304 = distinct !{!12304, !12301, !12305}
!12305 = !DILocation(line: 423, column: 87, scope: !12279)
!12306 = !DILocation(line: 424, column: 28, scope: !12279)
!12307 = !DILocation(line: 425, column: 5, scope: !12279)
!12308 = !DILocation(line: 425, column: 28, scope: !12279)
!12309 = !DILocation(line: 425, column: 82, scope: !12279)
!12310 = distinct !{!12310, !12307, !12311}
!12311 = !DILocation(line: 425, column: 87, scope: !12279)
!12312 = !DILocation(line: 426, column: 28, scope: !12279)
!12313 = !DILocation(line: 428, column: 50, scope: !12279)
!12314 = !DILocation(line: 428, column: 19, scope: !12279)
!12315 = !DILocation(line: 428, column: 28, scope: !12279)
!12316 = !DILocation(line: 432, column: 1, scope: !12279)
!12317 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2215, file: !2215, line: 434, type: !291, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!12318 = !DILocation(line: 437, column: 5, scope: !12317)
!12319 = !DILocation(line: 440, column: 5, scope: !12317)
!12320 = !DILocation(line: 440, column: 27, scope: !12317)
!12321 = !DILocation(line: 440, column: 36, scope: !12317)
!12322 = !DILocation(line: 440, column: 76, scope: !12317)
!12323 = distinct !{!12323, !12319, !12324}
!12324 = !DILocation(line: 440, column: 84, scope: !12317)
!12325 = !DILocation(line: 441, column: 45, scope: !12317)
!12326 = !DILocation(line: 441, column: 54, scope: !12317)
!12327 = !DILocation(line: 441, column: 28, scope: !12317)
!12328 = !DILocation(line: 442, column: 19, scope: !12317)
!12329 = !DILocation(line: 442, column: 31, scope: !12317)
!12330 = !DILocation(line: 443, column: 5, scope: !12317)
!12331 = !DILocation(line: 443, column: 27, scope: !12317)
!12332 = !DILocation(line: 443, column: 39, scope: !12317)
!12333 = !DILocation(line: 443, column: 65, scope: !12317)
!12334 = distinct !{!12334, !12330, !12335}
!12335 = !DILocation(line: 443, column: 70, scope: !12317)
!12336 = !DILocation(line: 444, column: 19, scope: !12317)
!12337 = !DILocation(line: 444, column: 28, scope: !12317)
!12338 = !DILocation(line: 445, column: 5, scope: !12317)
!12339 = !DILocation(line: 445, column: 27, scope: !12317)
!12340 = !DILocation(line: 445, column: 91, scope: !12317)
!12341 = distinct !{!12341, !12338, !12342}
!12342 = !DILocation(line: 445, column: 96, scope: !12317)
!12343 = !DILocation(line: 447, column: 43, scope: !12317)
!12344 = !DILocation(line: 447, column: 51, scope: !12317)
!12345 = !DILocation(line: 447, column: 27, scope: !12317)
!12346 = !DILocation(line: 450, column: 1, scope: !12317)
!12347 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2215, file: !2215, line: 452, type: !12348, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !12351)
!12348 = !DISubroutineType(types: !12349)
!12349 = !{!1171, !12350}
!12350 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2218, line: 43, baseType: !2217)
!12351 = !{!12352, !12353}
!12352 = !DILocalVariable(name: "clock", arg: 1, scope: !12347, file: !2215, line: 452, type: !12350)
!12353 = !DILocalVariable(name: "delay", scope: !12347, file: !2215, line: 457, type: !60)
!12354 = !DILocation(line: 0, scope: !12347)
!12355 = !DILocation(line: 457, column: 5, scope: !12347)
!12356 = !DILocation(line: 457, column: 23, scope: !12347)
!12357 = !DILocation(line: 458, column: 9, scope: !12347)
!12358 = !DILocation(line: 465, column: 9, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12360, file: !2215, line: 458, column: 39)
!12360 = distinct !DILexicalBlock(scope: !12347, file: !2215, line: 458, column: 9)
!12361 = !DILocation(line: 465, column: 23, scope: !12359)
!12362 = !DILocation(line: 465, column: 32, scope: !12359)
!12363 = !DILocation(line: 466, column: 32, scope: !12359)
!12364 = !DILocation(line: 467, column: 9, scope: !12359)
!12365 = !DILocation(line: 467, column: 32, scope: !12359)
!12366 = !DILocation(line: 467, column: 86, scope: !12359)
!12367 = distinct !{!12367, !12364, !12368}
!12368 = !DILocation(line: 467, column: 91, scope: !12359)
!12369 = !DILocation(line: 468, column: 32, scope: !12359)
!12370 = !DILocation(line: 469, column: 9, scope: !12359)
!12371 = !DILocation(line: 469, column: 32, scope: !12359)
!12372 = !DILocation(line: 469, column: 86, scope: !12359)
!12373 = distinct !{!12373, !12370, !12374}
!12374 = !DILocation(line: 469, column: 91, scope: !12359)
!12375 = !DILocation(line: 470, column: 32, scope: !12359)
!12376 = !DILocation(line: 472, column: 20, scope: !12377)
!12377 = distinct !DILexicalBlock(scope: !12359, file: !2215, line: 472, column: 9)
!12378 = !DILocation(line: 472, column: 25, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12377, file: !2215, line: 472, column: 9)
!12380 = !DILocation(line: 472, column: 31, scope: !12379)
!12381 = !DILocation(line: 472, column: 9, scope: !12377)
!12382 = !DILocation(line: 472, column: 44, scope: !12379)
!12383 = distinct !{!12383, !12381, !12384}
!12384 = !DILocation(line: 472, column: 47, scope: !12377)
!12385 = !DILocation(line: 478, column: 9, scope: !12386)
!12386 = distinct !DILexicalBlock(scope: !12387, file: !2215, line: 477, column: 12)
!12387 = distinct !DILexicalBlock(scope: !12360, file: !2215, line: 475, column: 16)
!12388 = !DILocation(line: 483, column: 1, scope: !12347)
!12389 = distinct !DISubprogram(name: "emi_mask_master", scope: !2215, file: !2215, line: 487, type: !291, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!12390 = !DILocation(line: 490, column: 30, scope: !12389)
!12391 = !DILocation(line: 490, column: 44, scope: !12389)
!12392 = !DILocation(line: 490, column: 53, scope: !12389)
!12393 = !DILocation(line: 490, column: 28, scope: !12389)
!12394 = !DILocation(line: 492, column: 1, scope: !12389)
!12395 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2215, file: !2215, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2214, retainedNodes: !293)
!12396 = !DILocation(line: 497, column: 30, scope: !12395)
!12397 = !DILocation(line: 497, column: 44, scope: !12395)
!12398 = !DILocation(line: 497, column: 53, scope: !12395)
!12399 = !DILocation(line: 497, column: 28, scope: !12395)
!12400 = !DILocation(line: 500, column: 1, scope: !12395)
!12401 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2381, file: !2381, line: 56, type: !9182, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !293)
!12402 = !DILocation(line: 61, column: 5, scope: !12401)
!12403 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2381, file: !2381, line: 65, type: !9182, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !293)
!12404 = !DILocation(line: 70, column: 5, scope: !12403)
!12405 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2381, file: !2381, line: 74, type: !291, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !293)
!12406 = !DILocation(line: 79, column: 9, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12408, file: !2381, line: 78, column: 12)
!12408 = distinct !DILexicalBlock(scope: !12405, file: !2381, line: 76, column: 9)
!12409 = !DILocation(line: 81, column: 1, scope: !12405)
!12410 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2381, file: !2381, line: 83, type: !291, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !293)
!12411 = !DILocation(line: 88, column: 9, scope: !12412)
!12412 = distinct !DILexicalBlock(scope: !12413, file: !2381, line: 87, column: 12)
!12413 = distinct !DILexicalBlock(scope: !12410, file: !2381, line: 85, column: 9)
!12414 = !DILocation(line: 90, column: 1, scope: !12410)
!12415 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2381, file: !2381, line: 92, type: !291, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !293)
!12416 = !DILocation(line: 97, column: 9, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12418, file: !2381, line: 96, column: 12)
!12418 = distinct !DILexicalBlock(scope: !12415, file: !2381, line: 94, column: 9)
!12419 = !DILocation(line: 99, column: 1, scope: !12415)
!12420 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2381, file: !2381, line: 101, type: !291, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2380, retainedNodes: !293)
!12421 = !DILocation(line: 106, column: 9, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12423, file: !2381, line: 105, column: 12)
!12423 = distinct !DILexicalBlock(scope: !12420, file: !2381, line: 103, column: 9)
!12424 = !DILocation(line: 108, column: 1, scope: !12420)
!12425 = distinct !DISubprogram(name: "__io_putchar", scope: !2393, file: !2393, line: 59, type: !12426, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !12428)
!12426 = !DISubroutineType(types: !12427)
!12427 = !{!7, !7}
!12428 = !{!12429}
!12429 = !DILocalVariable(name: "ch", arg: 1, scope: !12425, file: !2393, line: 59, type: !7)
!12430 = !DILocation(line: 0, scope: !12425)
!12431 = !DILocation(line: 66, column: 35, scope: !12425)
!12432 = !DILocation(line: 66, column: 5, scope: !12425)
!12433 = !DILocation(line: 67, column: 5, scope: !12425)
!12434 = distinct !DISubprogram(name: "main", scope: !2393, file: !2393, line: 172, type: !11929, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !293)
!12435 = !DILocation(line: 175, column: 5, scope: !12434)
!12436 = !DILocation(line: 177, column: 5, scope: !12434)
!12437 = !DILocation(line: 180, column: 5, scope: !12434)
!12438 = !DILocation(line: 319, column: 3, scope: !12439, inlinedAt: !12440)
!12439 = distinct !DISubprogram(name: "__enable_irq", scope: !7795, file: !7795, line: 317, type: !291, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !293)
!12440 = distinct !DILocation(line: 183, column: 5, scope: !12434)
!12441 = !{i64 659663}
!12442 = !DILocation(line: 496, column: 3, scope: !12443, inlinedAt: !12444)
!12443 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !7795, file: !7795, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !293)
!12444 = distinct !DILocation(line: 184, column: 5, scope: !12434)
!12445 = !{i64 663938}
!12446 = !DILocation(line: 187, column: 5, scope: !12434)
!12447 = !DILocation(line: 189, column: 5, scope: !12434)
!12448 = !DILocation(line: 190, column: 5, scope: !12434)
!12449 = !DILocation(line: 192, column: 5, scope: !12434)
!12450 = !DILocation(line: 194, column: 5, scope: !12434)
!12451 = distinct !{!12451, !12450, !12452}
!12452 = !DILocation(line: 194, column: 14, scope: !12434)
!12453 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2393, file: !2393, line: 98, type: !291, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !293)
!12454 = !DILocation(line: 100, column: 5, scope: !12453)
!12455 = !DILocation(line: 101, column: 1, scope: !12453)
!12456 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2393, file: !2393, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !293)
!12457 = !DILocation(line: 112, column: 5, scope: !12456)
!12458 = !DILocation(line: 113, column: 5, scope: !12456)
!12459 = !DILocation(line: 114, column: 5, scope: !12456)
!12460 = !DILocation(line: 117, column: 1, scope: !12456)
!12461 = distinct !DISubprogram(name: "gdma_transfer_data_interrupt", scope: !2393, file: !2393, line: 149, type: !291, scopeLine: 150, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !12462)
!12462 = !{!12463}
!12463 = !DILocalVariable(name: "count", scope: !12461, file: !2393, line: 151, type: !61)
!12464 = !DILocation(line: 0, scope: !12461)
!12465 = !DILocation(line: 153, column: 5, scope: !12461)
!12466 = !DILocation(line: 155, column: 5, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12461, file: !2393, line: 155, column: 5)
!12468 = !DILocation(line: 156, column: 30, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12470, file: !2393, line: 155, column: 50)
!12470 = distinct !DILexicalBlock(scope: !12467, file: !2393, line: 155, column: 5)
!12471 = !DILocation(line: 156, column: 9, scope: !12469)
!12472 = !DILocation(line: 156, column: 28, scope: !12469)
!12473 = !DILocation(line: 155, column: 46, scope: !12470)
!12474 = !DILocation(line: 155, column: 27, scope: !12470)
!12475 = distinct !{!12475, !12466, !12476}
!12476 = !DILocation(line: 157, column: 5, scope: !12467)
!12477 = !DILocation(line: 160, column: 9, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12479, file: !2393, line: 159, column: 50)
!12479 = distinct !DILexicalBlock(scope: !12480, file: !2393, line: 159, column: 5)
!12480 = distinct !DILexicalBlock(scope: !12461, file: !2393, line: 159, column: 5)
!12481 = !DILocation(line: 160, column: 33, scope: !12478)
!12482 = !DILocation(line: 159, column: 46, scope: !12479)
!12483 = !DILocation(line: 159, column: 27, scope: !12479)
!12484 = !DILocation(line: 159, column: 5, scope: !12480)
!12485 = distinct !{!12485, !12484, !12486}
!12486 = !DILocation(line: 161, column: 5, scope: !12480)
!12487 = !DILocation(line: 163, column: 5, scope: !12461)
!12488 = !DILocation(line: 165, column: 5, scope: !12461)
!12489 = !DILocation(line: 167, column: 5, scope: !12461)
!12490 = !DILocation(line: 170, column: 1, scope: !12461)
!12491 = distinct !DISubprogram(name: "gdma_callback", scope: !2393, file: !2393, line: 123, type: !547, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !12492)
!12492 = !{!12493, !12494, !12495}
!12493 = !DILocalVariable(name: "event", arg: 1, scope: !12491, file: !2393, line: 123, type: !549)
!12494 = !DILocalVariable(name: "user_data", arg: 2, scope: !12491, file: !2393, line: 123, type: !88)
!12495 = !DILocalVariable(name: "count", scope: !12491, file: !2393, line: 126, type: !61)
!12496 = !DILocation(line: 0, scope: !12491)
!12497 = !DILocation(line: 128, column: 5, scope: !12491)
!12498 = !DILocation(line: 130, column: 5, scope: !12491)
!12499 = !DILocation(line: 132, column: 5, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12491, file: !2393, line: 132, column: 5)
!12501 = !DILocation(line: 133, column: 13, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12503, file: !2393, line: 133, column: 13)
!12503 = distinct !DILexicalBlock(scope: !12504, file: !2393, line: 132, column: 50)
!12504 = distinct !DILexicalBlock(scope: !12500, file: !2393, line: 132, column: 5)
!12505 = !DILocation(line: 133, column: 40, scope: !12502)
!12506 = !DILocation(line: 133, column: 37, scope: !12502)
!12507 = !DILocation(line: 133, column: 13, scope: !12503)
!12508 = !DILocation(line: 134, column: 13, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12502, file: !2393, line: 133, column: 60)
!12510 = !DILocation(line: 135, column: 9, scope: !12509)
!12511 = !DILocation(line: 132, column: 46, scope: !12504)
!12512 = !DILocation(line: 132, column: 27, scope: !12504)
!12513 = distinct !{!12513, !12499, !12514}
!12514 = !DILocation(line: 137, column: 5, scope: !12500)
!12515 = !DILocation(line: 138, column: 5, scope: !12491)
!12516 = !DILocation(line: 141, column: 5, scope: !12491)
!12517 = !DILocation(line: 143, column: 1, scope: !12491)
!12518 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !2393, file: !2393, line: 75, type: !291, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2392, retainedNodes: !12519)
!12519 = !{!12520}
!12520 = !DILocalVariable(name: "uart_config", scope: !12518, file: !2393, line: 77, type: !12521)
!12521 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !905, line: 378, baseType: !12522)
!12522 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !905, line: 373, size: 128, elements: !12523)
!12523 = !{!12524, !12525, !12526, !12527}
!12524 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !12522, file: !905, line: 374, baseType: !6197, size: 32)
!12525 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !12522, file: !905, line: 375, baseType: !6247, size: 32, offset: 32)
!12526 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !12522, file: !905, line: 376, baseType: !6249, size: 32, offset: 64)
!12527 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !12522, file: !905, line: 377, baseType: !6251, size: 32, offset: 96)
!12528 = !DILocation(line: 77, column: 5, scope: !12518)
!12529 = !DILocation(line: 77, column: 23, scope: !12518)
!12530 = !DILocation(line: 80, column: 5, scope: !12518)
!12531 = !DILocation(line: 81, column: 5, scope: !12518)
!12532 = !DILocation(line: 82, column: 5, scope: !12518)
!12533 = !DILocation(line: 83, column: 5, scope: !12518)
!12534 = !DILocation(line: 87, column: 17, scope: !12518)
!12535 = !DILocation(line: 87, column: 26, scope: !12518)
!12536 = !DILocation(line: 88, column: 17, scope: !12518)
!12537 = !DILocation(line: 88, column: 29, scope: !12518)
!12538 = !DILocation(line: 89, column: 17, scope: !12518)
!12539 = !DILocation(line: 89, column: 26, scope: !12518)
!12540 = !DILocation(line: 90, column: 17, scope: !12518)
!12541 = !DILocation(line: 90, column: 24, scope: !12518)
!12542 = !DILocation(line: 91, column: 5, scope: !12518)
!12543 = !DILocation(line: 92, column: 1, scope: !12518)
!12544 = distinct !DISubprogram(name: "_close", scope: !2404, file: !2404, line: 5, type: !12426, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !12545)
!12545 = !{!12546}
!12546 = !DILocalVariable(name: "file", arg: 1, scope: !12544, file: !2404, line: 5, type: !7)
!12547 = !DILocation(line: 0, scope: !12544)
!12548 = !DILocation(line: 7, column: 5, scope: !12544)
!12549 = distinct !DISubprogram(name: "_fstat", scope: !2404, file: !2404, line: 10, type: !12550, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !12598)
!12550 = !DISubroutineType(types: !12551)
!12551 = !{!7, !7, !12552}
!12552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12553, size: 32)
!12553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !12554, line: 27, size: 704, elements: !12555)
!12554 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!12555 = !{!12556, !12559, !12562, !12565, !12568, !12571, !12574, !12575, !12578, !12588, !12589, !12590, !12593, !12596}
!12556 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !12553, file: !12554, line: 29, baseType: !12557, size: 16)
!12557 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2408, line: 161, baseType: !12558)
!12558 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2448, line: 56, baseType: !1668)
!12559 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !12553, file: !12554, line: 30, baseType: !12560, size: 16, offset: 16)
!12560 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2408, line: 139, baseType: !12561)
!12561 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2448, line: 75, baseType: !1265)
!12562 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !12553, file: !12554, line: 31, baseType: !12563, size: 32, offset: 32)
!12563 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2408, line: 189, baseType: !12564)
!12564 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2448, line: 90, baseType: !63)
!12565 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !12553, file: !12554, line: 32, baseType: !12566, size: 16, offset: 64)
!12566 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2408, line: 194, baseType: !12567)
!12567 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2448, line: 209, baseType: !1265)
!12568 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !12553, file: !12554, line: 33, baseType: !12569, size: 16, offset: 80)
!12569 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2408, line: 165, baseType: !12570)
!12570 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2448, line: 60, baseType: !1265)
!12571 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !12553, file: !12554, line: 34, baseType: !12572, size: 16, offset: 96)
!12572 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2408, line: 169, baseType: !12573)
!12573 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2448, line: 63, baseType: !1265)
!12574 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !12553, file: !12554, line: 35, baseType: !12557, size: 16, offset: 112)
!12575 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !12553, file: !12554, line: 36, baseType: !12576, size: 32, offset: 128)
!12576 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2408, line: 157, baseType: !12577)
!12577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2448, line: 102, baseType: !2464)
!12578 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !12553, file: !12554, line: 42, baseType: !12579, size: 128, offset: 192)
!12579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !12580, line: 47, size: 128, elements: !12581)
!12580 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!12581 = !{!12582, !12587}
!12582 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !12579, file: !12580, line: 48, baseType: !12583, size: 64)
!12583 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !12584, line: 42, baseType: !12585)
!12584 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!12585 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !12586)
!12586 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!12587 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !12579, file: !12580, line: 49, baseType: !2449, size: 32, offset: 64)
!12588 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !12553, file: !12554, line: 43, baseType: !12579, size: 128, offset: 320)
!12589 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !12553, file: !12554, line: 44, baseType: !12579, size: 128, offset: 448)
!12590 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !12553, file: !12554, line: 45, baseType: !12591, size: 32, offset: 576)
!12591 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2408, line: 102, baseType: !12592)
!12592 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2448, line: 34, baseType: !2449)
!12593 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !12553, file: !12554, line: 46, baseType: !12594, size: 32, offset: 608)
!12594 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2408, line: 97, baseType: !12595)
!12595 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2448, line: 30, baseType: !2449)
!12596 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !12553, file: !12554, line: 48, baseType: !12597, size: 64, offset: 640)
!12597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2449, size: 64, elements: !508)
!12598 = !{!12599, !12600}
!12599 = !DILocalVariable(name: "file", arg: 1, scope: !12549, file: !2404, line: 10, type: !7)
!12600 = !DILocalVariable(name: "st", arg: 2, scope: !12549, file: !2404, line: 10, type: !12552)
!12601 = !DILocation(line: 0, scope: !12549)
!12602 = !DILocation(line: 12, column: 5, scope: !12549)
!12603 = distinct !DISubprogram(name: "_isatty", scope: !2404, file: !2404, line: 15, type: !12426, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !12604)
!12604 = !{!12605}
!12605 = !DILocalVariable(name: "file", arg: 1, scope: !12603, file: !2404, line: 15, type: !7)
!12606 = !DILocation(line: 0, scope: !12603)
!12607 = !DILocation(line: 17, column: 5, scope: !12603)
!12608 = distinct !DISubprogram(name: "_lseek", scope: !2404, file: !2404, line: 20, type: !12609, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !12611)
!12609 = !DISubroutineType(types: !12610)
!12610 = !{!7, !7, !7, !7}
!12611 = !{!12612, !12613, !12614}
!12612 = !DILocalVariable(name: "file", arg: 1, scope: !12608, file: !2404, line: 20, type: !7)
!12613 = !DILocalVariable(name: "ptr", arg: 2, scope: !12608, file: !2404, line: 20, type: !7)
!12614 = !DILocalVariable(name: "dir", arg: 3, scope: !12608, file: !2404, line: 20, type: !7)
!12615 = !DILocation(line: 0, scope: !12608)
!12616 = !DILocation(line: 22, column: 5, scope: !12608)
!12617 = distinct !DISubprogram(name: "_open", scope: !2404, file: !2404, line: 25, type: !12618, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !12620)
!12618 = !DISubroutineType(types: !12619)
!12619 = !{!7, !2442, !7, !7}
!12620 = !{!12621, !12622, !12623}
!12621 = !DILocalVariable(name: "name", arg: 1, scope: !12617, file: !2404, line: 25, type: !2442)
!12622 = !DILocalVariable(name: "flags", arg: 2, scope: !12617, file: !2404, line: 25, type: !7)
!12623 = !DILocalVariable(name: "mode", arg: 3, scope: !12617, file: !2404, line: 25, type: !7)
!12624 = !DILocation(line: 0, scope: !12617)
!12625 = !DILocation(line: 27, column: 5, scope: !12617)
!12626 = distinct !DISubprogram(name: "_read", scope: !2404, file: !2404, line: 30, type: !12627, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !12629)
!12627 = !DISubroutineType(types: !12628)
!12628 = !{!7, !7, !2409, !7}
!12629 = !{!12630, !12631, !12632}
!12630 = !DILocalVariable(name: "file", arg: 1, scope: !12626, file: !2404, line: 30, type: !7)
!12631 = !DILocalVariable(name: "ptr", arg: 2, scope: !12626, file: !2404, line: 30, type: !2409)
!12632 = !DILocalVariable(name: "len", arg: 3, scope: !12626, file: !2404, line: 30, type: !7)
!12633 = !DILocation(line: 0, scope: !12626)
!12634 = !DILocation(line: 32, column: 5, scope: !12626)
!12635 = distinct !DISubprogram(name: "_getpid", scope: !2404, file: !2404, line: 48, type: !11929, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !293)
!12636 = !DILocation(line: 50, column: 5, scope: !12635)
!12637 = distinct !DISubprogram(name: "_kill", scope: !2404, file: !2404, line: 56, type: !12638, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !12640)
!12638 = !DISubroutineType(types: !12639)
!12639 = !{!7, !7, !7}
!12640 = !{!12641, !12642}
!12641 = !DILocalVariable(name: "pid", arg: 1, scope: !12637, file: !2404, line: 56, type: !7)
!12642 = !DILocalVariable(name: "sig", arg: 2, scope: !12637, file: !2404, line: 56, type: !7)
!12643 = !DILocation(line: 0, scope: !12637)
!12644 = !DILocation(line: 58, column: 5, scope: !12637)
!12645 = distinct !DISubprogram(name: "_exit", scope: !2404, file: !2404, line: 61, type: !12426, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !12646)
!12646 = !{!12647}
!12647 = !DILocalVariable(name: "val", arg: 1, scope: !12645, file: !2404, line: 61, type: !7)
!12648 = !DILocation(line: 0, scope: !12645)
!12649 = !DILocation(line: 63, column: 5, scope: !12645)
!12650 = !DILocation(line: 0, scope: !2403)
!12651 = !DILocation(line: 73, column: 5, scope: !2403)
!12652 = !{i64 1127}
!12653 = !DILocation(line: 75, column: 14, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !2403, file: !2404, line: 75, column: 9)
!12655 = !DILocation(line: 75, column: 11, scope: !12654)
!12656 = !DILocation(line: 75, column: 9, scope: !2403)
!12657 = !DILocation(line: 81, column: 32, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !2403, file: !2404, line: 81, column: 9)
!12659 = !DILocation(line: 81, column: 15, scope: !12658)
!12660 = !DILocation(line: 92, column: 1, scope: !2403)
!12661 = !DILocation(line: 81, column: 9, scope: !2403)
!12662 = distinct !DISubprogram(name: "_write", scope: !2404, file: !2404, line: 94, type: !12627, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2596, retainedNodes: !12663)
!12663 = !{!12664, !12665, !12666, !12667}
!12664 = !DILocalVariable(name: "file", arg: 1, scope: !12662, file: !2404, line: 94, type: !7)
!12665 = !DILocalVariable(name: "ptr", arg: 2, scope: !12662, file: !2404, line: 94, type: !2409)
!12666 = !DILocalVariable(name: "len", arg: 3, scope: !12662, file: !2404, line: 94, type: !7)
!12667 = !DILocalVariable(name: "DataIdx", scope: !12662, file: !2404, line: 96, type: !7)
!12668 = !DILocation(line: 0, scope: !12662)
!12669 = !DILocation(line: 98, column: 31, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12671, file: !2404, line: 98, column: 5)
!12671 = distinct !DILexicalBlock(scope: !12662, file: !2404, line: 98, column: 5)
!12672 = !DILocation(line: 98, column: 5, scope: !12671)
!12673 = !DILocation(line: 99, column: 26, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12670, file: !2404, line: 98, column: 49)
!12675 = !DILocation(line: 99, column: 22, scope: !12674)
!12676 = !DILocation(line: 99, column: 9, scope: !12674)
!12677 = !DILocation(line: 98, column: 45, scope: !12670)
!12678 = distinct !{!12678, !12672, !12679}
!12679 = !DILocation(line: 100, column: 5, scope: !12671)
!12680 = !DILocation(line: 101, column: 5, scope: !12662)
!12681 = distinct !DISubprogram(name: "SysTick_Set", scope: !2608, file: !2608, line: 62, type: !3757, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !12682)
!12682 = !{!12683, !12684}
!12683 = !DILocalVariable(name: "ticks", arg: 1, scope: !12681, file: !2608, line: 62, type: !61)
!12684 = !DILocalVariable(name: "val", scope: !12681, file: !2608, line: 64, type: !61)
!12685 = !DILocation(line: 0, scope: !12681)
!12686 = !DILocation(line: 67, column: 16, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12681, file: !2608, line: 67, column: 9)
!12688 = !DILocation(line: 67, column: 21, scope: !12687)
!12689 = !DILocation(line: 67, column: 9, scope: !12681)
!12690 = !DILocation(line: 72, column: 20, scope: !12681)
!12691 = !DILocation(line: 75, column: 19, scope: !12681)
!12692 = !DILocation(line: 79, column: 20, scope: !12681)
!12693 = !DILocation(line: 80, column: 20, scope: !12681)
!12694 = !DILocation(line: 83, column: 19, scope: !12681)
!12695 = !DILocation(line: 85, column: 5, scope: !12681)
!12696 = !DILocation(line: 86, column: 1, scope: !12681)
!12697 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2608, file: !2608, line: 95, type: !291, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !293)
!12698 = !DILocation(line: 97, column: 28, scope: !12697)
!12699 = !DILocation(line: 98, column: 1, scope: !12697)
!12700 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2608, file: !2608, line: 107, type: !4009, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !293)
!12701 = !DILocation(line: 109, column: 12, scope: !12700)
!12702 = !DILocation(line: 109, column: 5, scope: !12700)
!12703 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2608, file: !2608, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !12704)
!12704 = !{!12705}
!12705 = !DILocalVariable(name: "cm_mux_sel", scope: !12703, file: !2608, line: 121, type: !381)
!12706 = !DILocation(line: 121, column: 38, scope: !12703)
!12707 = !DILocation(line: 121, column: 26, scope: !12703)
!12708 = !DILocation(line: 0, scope: !12703)
!12709 = !DILocation(line: 123, column: 5, scope: !12703)
!12710 = !DILocation(line: 132, column: 13, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12703, file: !2608, line: 123, column: 25)
!12712 = !DILocation(line: 140, column: 13, scope: !12711)
!12713 = !DILocation(line: 0, scope: !12711)
!12714 = !DILocation(line: 146, column: 26, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12703, file: !2608, line: 146, column: 9)
!12716 = !DILocation(line: 146, column: 50, scope: !12715)
!12717 = !DILocation(line: 146, column: 41, scope: !12715)
!12718 = !DILocation(line: 148, column: 25, scope: !12719)
!12719 = distinct !DILexicalBlock(scope: !12715, file: !2608, line: 147, column: 52)
!12720 = !DILocation(line: 149, column: 5, scope: !12719)
!12721 = !DILocation(line: 150, column: 1, scope: !12703)
!12722 = distinct !DISubprogram(name: "SystemInit", scope: !2608, file: !2608, line: 158, type: !291, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !293)
!12723 = !DILocation(line: 162, column: 16, scope: !12722)
!12724 = !DILocation(line: 166, column: 16, scope: !12722)
!12725 = !DILocation(line: 169, column: 16, scope: !12722)
!12726 = !DILocation(line: 172, column: 1, scope: !12722)
!12727 = distinct !DISubprogram(name: "CachePreInit", scope: !2608, file: !2608, line: 180, type: !291, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2607, retainedNodes: !293)
!12728 = !DILocation(line: 183, column: 22, scope: !12727)
!12729 = !DILocation(line: 186, column: 21, scope: !12727)
!12730 = !DILocation(line: 189, column: 21, scope: !12727)
!12731 = !DILocation(line: 192, column: 29, scope: !12727)
!12732 = !DILocation(line: 193, column: 33, scope: !12727)
!12733 = !DILocation(line: 195, column: 28, scope: !12727)
!12734 = !DILocation(line: 200, column: 30, scope: !12727)
!12735 = !DILocation(line: 214, column: 1, scope: !12727)
