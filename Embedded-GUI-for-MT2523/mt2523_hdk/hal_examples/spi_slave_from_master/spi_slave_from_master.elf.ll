; ModuleID = './build/spi_slave_from_master.elf.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabihf"

%union.CACHE_CON_Type = type { %struct.anon }
%struct.anon = type { i32 }
%struct.CACHE_ENTRY_Type = type { %union.CACHE_CON_Type, %union.CACHE_CON_Type }
%struct.GPT_REGISTER_T = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.GPT_REGISTER_GLOABL_T = type { i32, i32, i32 }
%struct.gpt_context_t = type { i32, %struct.gpt_callback_context_t, i8, i8 }
%struct.gpt_callback_context_t = type { void (i8*)*, i8* }
%struct.gpt_sw_context_t = type { [32 x %struct.gpt_sw_timer_t], i32, i32, i32, i32, i8, i8, i8 }
%struct.gpt_sw_timer_t = type { %struct.gpt_callback_context_t, i32, i8, i8 }
%struct.GPIO_REGISTER_T = type { [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIN_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [224 x i8], [2 x %struct.GPIO_DIR_REGISTER_T], [2 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [7 x %struct.GPIO_DIR_REGISTER_T], [144 x i8], [4 x %struct.GPIO_DIR_REGISTER_T], [192 x i8], [6 x %struct.GPIO_DIN_REGISTER_T] }
%struct.GPIO_DIN_REGISTER_T = type { i32, [12 x i8] }
%struct.GPIO_DIR_REGISTER_T = type { i32, i32, i32, [4 x i8] }
%struct.uart_callback_t = type { void (i32, i8*)*, i8* }
%struct.hal_uart_dma_config_t = type { i8*, i32, i32, i8*, i32, i32, i32 }
%struct.uart_dma_callback_data_t = type { i8, i32 }
%struct.UART_REGISTER_T = type { %struct.anon, %struct.anon, %struct.anon, i32, %struct.anon, %struct.anon, i32, %struct.anon, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.nvic_function_t = type { void (i32)*, i32 }
%struct.GFH_CMEM_ID_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryIDList }
%struct.GFH_Header = type { i32, i16, i32 }
%struct.CMEMEntryIDList = type { i32, i32, [5 x %struct.CMEMEntryID] }
%struct.CMEMEntryID = type { i8, i8, [8 x i8] }
%struct.anon.9 = type { i8 }
%struct.SF_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]], i8*, %struct.SF_MTD_CMD*, i32, i16, i16, i16, i16, i8, [3 x i8], i8, i8, i16, i32, i32, i8, i8, i32 (i8*)*, i32 (i8*)*, i32 (i8*, i32, i8*, i32)*, i32 (i8*, i32, i8*, i32)* }
%struct.hal_cache_region_config_t = type { i32, i32 }
%struct.SF_MTD_CMD = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.CMEMEntryNOR = type { i16, i16, i32, [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t] }
%struct.NOR_MTD_Driver = type { i32 (i8*, i8*)*, i32 (i8*)*, i8* (i8*, i32, i32)*, i32 (i8*, i32)*, i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32)*, i32 (i8*, i32, i32, i8*, i32)*, i32 (i8*, i32*)*, i32 (i8*, i8*, i32)*, i1 (i8*, i32)*, i32 (i8*, i32, i8*)* }
%struct.NOR_FLASH_DRV_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, i16*, i16*, %struct.NOR_MTD_FlashInfo, [8 x i32], [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.hal_cache_region_config_t*, i8*, i8*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, void (%struct.NOR_FLASH_DRV_Data*)*, void (%struct.NOR_FLASH_DRV_Data*)*, i32, i32 (%struct.NOR_FLASH_DRV_Data*)*, i32 (%struct.NOR_FLASH_DRV_Data*, i32, i32)*, %struct.hal_cache_region_config_t*, i32, i32, i32, i16, i16, i8, i8 }
%struct.NOR_MTD_FlashInfo = type { i32, [8 x i32], [8 x i32], [8 x i32], i32, i16, i32, i32 }
%struct.GFH_CMEM_NOR_INFO_v1 = type { %struct.GFH_Header, %struct.CMEMEntryNORList }
%struct.CMEMEntryNORList = type { i32, i32, [5 x %struct.CMEMEntryNOR] }
%struct.NOR_FLASH_DISK_Data = type { i32, %struct.NOR_MTD_Driver*, i8*, %struct.NOR_MTD_FlashInfo, i8 }
%struct.EMI_SETTINGS = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.EMI_REGISTER_T = type { [96 x i8], i32, [12 x i8], i32, [20 x i8], i32, [4 x i8], i32, [60 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [28 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [12 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [4 x i8], i32, [92 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [60 x i8], i32, [124 x i8], i32, [4 x i8], i32, [4 x i8], i32, [4 x i8], i32, [20 x i8], i32, [20 x i8], i32 }
%struct.hal_uart_config_t = type { i32, i32, i32, i32 }
%union.CMEMFlashID = type { [4 x i16] }
%struct.NOR_Flash_MTD_Data = type { i32, i8*, %struct.anon.9*, %struct.anon.9*, i8, %struct.hal_cache_region_config_t*, i8*, %struct.hal_cache_region_config_t*, i8*, i32, i8*, [8 x [2 x %struct.hal_cache_region_config_t]] }
%struct.__va_list = type { i8* }
%struct.stat = type { i16, i16, i32, i16, i16, i16, i16, i32, %struct.timespec, %struct.timespec, %struct.timespec, i32, i32, [2 x i32] }
%struct.timespec = type { i64, i32 }
%struct._reent = type { i32, %struct.__sFILE*, %struct.__sFILE*, %struct.__sFILE*, i32, i8*, i32, i32, %struct.__locale_t*, %struct._mprec*, void (%struct._reent*)*, i32, i32, i8*, %struct._rand48*, %struct.GPT_REGISTER_T*, i8*, void (i32)**, %struct._atexit*, %struct._atexit, %struct._glue, %struct.__sFILE*, %struct._misc_reent*, i8* }
%struct.__locale_t = type opaque
%struct._mprec = type { %struct._Bigint*, i32, %struct._Bigint*, %struct._Bigint** }
%struct._Bigint = type { %struct._Bigint*, i32, i32, i32, i32, [1 x i32] }
%struct._rand48 = type { [3 x i16], [3 x i16], i16, i64 }
%struct._atexit = type { %struct._atexit*, i32, [32 x void ()*], %struct._on_exit_args* }
%struct._on_exit_args = type { [32 x i8*], [32 x i8*], i32, i32 }
%struct._glue = type { %struct._glue*, i32, %struct.__sFILE* }
%struct.__sFILE = type { i8*, i32, i32, i16, i16, %struct.__sbuf, i32, %struct._reent*, i8*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i8*, i32)*, i32 (%struct._reent*, i8*, i32, i32)*, i32 (%struct._reent*, i8*)*, %struct.__sbuf, i8*, i32, [3 x i8], [1 x i8], %struct.__sbuf, i32, i32, %struct.__lock*, %struct._mbstate_t, i32 }
%struct.__sbuf = type { i8*, i32 }
%struct.__lock = type opaque
%struct._mbstate_t = type { i32, %struct.anon }
%struct._misc_reent = type { i8*, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, [8 x i8], i32, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t, %struct._mbstate_t }

@g_cache_status = dso_local global i8 0, align 1, !dbg !0
@g_cache_con = external dso_local local_unnamed_addr global %union.CACHE_CON_Type, align 4
@g_cache_region_en = external dso_local local_unnamed_addr global i32, align 4
@g_cache_entry = external dso_local local_unnamed_addr global [16 x %struct.CACHE_ENTRY_Type], align 4
@.str = private unnamed_addr constant [50 x i8] c"../../../../../driver/chip/mt2523/src/hal_cache.c\00", align 1
@__func__.hal_cache_region_config = private unnamed_addr constant [24 x i8] c"hal_cache_region_config\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@gp_gpt = dso_local local_unnamed_addr global [6 x %struct.GPT_REGISTER_T*] [%struct.GPT_REGISTER_T* inttoptr (i32 -1575747568 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747520 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747472 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747424 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747376 to %struct.GPT_REGISTER_T*), %struct.GPT_REGISTER_T* inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*)], section ".tcm_rwdata", align 4, !dbg !92
@gp_gpt_glb = dso_local local_unnamed_addr global %struct.GPT_REGISTER_GLOABL_T* inttoptr (i32 -1575747584 to %struct.GPT_REGISTER_GLOABL_T*), align 4, !dbg !279
@gpt_get_lfosc_clock.flag = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 1, !dbg !342
@gpt_clock_source = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !339
@g_gpt_context = dso_local global [6 x %struct.gpt_context_t] zeroinitializer, section ".tcm_zidata", align 4, !dbg !294
@gpt_sw_context = dso_local local_unnamed_addr global %struct.gpt_sw_context_t zeroinitializer, align 4, !dbg !316
@__const.is_pin_with_pullsel.pin_number_with_pullsel = private unnamed_addr constant [5 x i32] [i32 0, i32 1, i32 2, i32 3, i32 10], align 4
@gpio_register_base = dso_local local_unnamed_addr global %struct.GPIO_REGISTER_T* inttoptr (i32 -1576927232 to %struct.GPIO_REGISTER_T*), align 4, !dbg !343
@g_uart_hwstatus = internal global [4 x i32] zeroinitializer, align 4, !dbg !626
@.str.35 = private unnamed_addr constant [49 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart.c\00", align 1
@__func__.uart_receive_handler = private unnamed_addr constant [21 x i8] c"uart_receive_handler\00", align 1
@.str.1.36 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@g_uart_callback = internal unnamed_addr global [4 x %struct.uart_callback_t] zeroinitializer, align 4, !dbg !737
@g_uart_dma_config = internal unnamed_addr global [4 x %struct.hal_uart_dma_config_t] zeroinitializer, align 4, !dbg !755
@__func__.uart_send_handler = private unnamed_addr constant [18 x i8] c"uart_send_handler\00", align 1
@__func__.uart_error_handler = private unnamed_addr constant [19 x i8] c"uart_error_handler\00", align 1
@g_uart_baudrate_map = internal unnamed_addr constant [13 x i32] [i32 110, i32 300, i32 1200, i32 2400, i32 4800, i32 9600, i32 19200, i32 38400, i32 57600, i32 115200, i32 230400, i32 460800, i32 921600], align 4, !dbg !769
@g_uart_global_data_initialized = internal unnamed_addr global i1 false, align 1, !dbg !780
@__func__.hal_uart_init = private unnamed_addr constant [14 x i8] c"hal_uart_init\00", align 1
@__func__.hal_uart_deinit = private unnamed_addr constant [16 x i8] c"hal_uart_deinit\00", align 1
@__func__.hal_uart_send_dma = private unnamed_addr constant [18 x i8] c"hal_uart_send_dma\00", align 1
@__func__.hal_uart_receive_dma = private unnamed_addr constant [21 x i8] c"hal_uart_receive_dma\00", align 1
@g_uart_dma_callback_data = internal global [8 x %struct.uart_dma_callback_data_t] zeroinitializer, align 4, !dbg !750
@__func__.hal_uart_register_callback = private unnamed_addr constant [27 x i8] c"hal_uart_register_callback\00", align 1
@__func__.hal_uart_get_available_send_space = private unnamed_addr constant [34 x i8] c"hal_uart_get_available_send_space\00", align 1
@__func__.hal_uart_get_available_receive_bytes = private unnamed_addr constant [37 x i8] c"hal_uart_get_available_receive_bytes\00", align 1
@__func__.hal_uart_set_dma = private unnamed_addr constant [17 x i8] c"hal_uart_set_dma\00", align 1
@__func__.uart_start_dma_transmission = private unnamed_addr constant [28 x i8] c"uart_start_dma_transmission\00", align 1
@__const.uart_set_baudrate.fraction_L_mapping = private unnamed_addr constant [10 x i32] [i32 0, i32 0, i32 32, i32 144, i32 168, i32 84, i32 108, i32 186, i32 246, i32 254], align 4
@g_uart_regbase = dso_local local_unnamed_addr constant [4 x %struct.UART_REGISTER_T*] [%struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609695232 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609629696 to %struct.UART_REGISTER_T*), %struct.UART_REGISTER_T* inttoptr (i32 -1609564160 to %struct.UART_REGISTER_T*)], align 4, !dbg !781
@g_uart_port_to_pdn = dso_local local_unnamed_addr constant [4 x i32] [i32 45, i32 46, i32 47, i32 48], align 4, !dbg !853
@g_uart_port_to_irq_num = dso_local local_unnamed_addr constant [4 x i32] [i32 29, i32 30, i32 31, i32 32], align 4, !dbg !858
@.str.81 = private unnamed_addr constant [67 x i8] c"../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c\00", align 1
@__func__.uart_interrupt_handler = private unnamed_addr constant [23 x i8] c"uart_interrupt_handler\00", align 1
@.str.1.82 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@switch.table.uart_dma_channel_to_callback_data = private unnamed_addr constant [8 x i8] c"\00\01\00\01\00\01\00\01", align 1
@switch.table.uart_dma_channel_to_callback_data.2 = private unnamed_addr constant [8 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 3, i32 0, i32 0], align 4
@g_spi_slave_status = internal global [1 x i8] zeroinitializer, align 1, !dbg !866
@__FUNCTION__.hal_spi_slave_init = private unnamed_addr constant [19 x i8] c"hal_spi_slave_init\00", align 1
@.str.83 = private unnamed_addr constant [23 x i8] c"[SPIS%d][init]:busy.\0D\0A\00", align 1
@g_slvx_callback = internal unnamed_addr global [1 x void ([2 x i32], i8*)*] zeroinitializer, align 4, !dbg !947
@g_slvx_user_data = internal unnamed_addr global [1 x i8*] zeroinitializer, align 4, !dbg !961
@g_last2now_status = dso_local local_unnamed_addr global [2 x i8] zeroinitializer, align 1, !dbg !973
@g_spi_slave_fsm = internal unnamed_addr constant [4 x [6 x i32]] [[6 x i32] [i32 1, i32 0, i32 1, i32 1, i32 1, i32 1], [6 x i32] [i32 0, i32 1, i32 0, i32 1, i32 0, i32 1], [6 x i32] [i32 2, i32 1, i32 4, i32 0, i32 7, i32 8], [6 x i32] [i32 3, i32 1, i32 5, i32 9, i32 6, i32 0]], align 4, !dbg !1013
@__FUNCTION__.spi_slave_send = private unnamed_addr constant [15 x i8] c"spi_slave_send\00", align 1
@.str.92 = private unnamed_addr constant [29 x i8] c"[SPIS%d][send]:size error.\0D\0A\00", align 1
@__FUNCTION__.spi_slave_receive = private unnamed_addr constant [18 x i8] c"spi_slave_receive\00", align 1
@.str.1.97 = private unnamed_addr constant [32 x i8] c"[SPIS%d][receive]:size error.\0D\0A\00", align 1
@hal_nvic_init.priority_set = internal unnamed_addr global i1 false, align 4, !dbg !1018
@defualt_irq_priority = internal unnamed_addr constant [64 x i32] [i32 5, i32 68, i32 7, i32 8, i32 68, i32 68, i32 68, i32 68, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 68, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 68, i32 68, i32 43, i32 44, i32 26, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68, i32 68], align 4, !dbg !1108
@nvic_function_table = dso_local local_unnamed_addr global [64 x %struct.nvic_function_t] zeroinitializer, align 4, !dbg !1095
@__FUNCTION__.isrC_main = private unnamed_addr constant [10 x i8] c"isrC_main\00", align 1
@.str.108 = private unnamed_addr constant [25 x i8] c"ERROR: no IRQ handler! \0A\00", align 1
@DelayResume = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1113
@.str.118 = private unnamed_addr constant [61 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c\00", align 1
@__func__.SFI_BlankCheck = private unnamed_addr constant [15 x i8] c"SFI_BlankCheck\00", align 1
@.str.1.119 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.SFI_MacEnable = private unnamed_addr constant [14 x i8] c"SFI_MacEnable\00", align 1
@NOR_FLASH_LeaveDPDCmd = dso_local local_unnamed_addr global i8 0, section ".tcm_rwdata", align 1, !dbg !1189
@NOR_FLASH_FATStartAddr = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1191
@NOR_FLASH_FATStartValue = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1193
@SFI_MAC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1195
@SFI_DIRECT_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1197
@SFI_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1199
@SFI_MISC_CTL2_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1201
@SFI_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1203
@SFI_CLK_SWITCH_MISC_CTL_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1205
@SFI_CLK_SWITCH_DLY_CTL_3_BACKUP = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !1207
@sf_dal_brbusy_wait = dso_local local_unnamed_addr global i8 0, align 1, !dbg !1209
@sf_dal_resume_time = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !1522
@sf_dal_flash_return_ready_max = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1524
@.str.122 = private unnamed_addr constant [58 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c\00", align 1
@__func__.Flash_ReturnReady = private unnamed_addr constant [18 x i8] c"Flash_ReturnReady\00", align 1
@.str.1.123 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.Flash_CheckReady = private unnamed_addr constant [17 x i8] c"Flash_CheckReady\00", align 1
@__func__.Flash_ResumeOperation = private unnamed_addr constant [22 x i8] c"Flash_ResumeOperation\00", align 1
@__func__.Flash_SuspendOperation = private unnamed_addr constant [23 x i8] c"Flash_SuspendOperation\00", align 1
@MTDMutex = internal unnamed_addr global i1 false, align 4, !dbg !1533
@__func__.SF_DAL_FreeDevLock = private unnamed_addr constant [19 x i8] c"SF_DAL_FreeDevLock\00", align 1
@__func__.SF_DAL_Init_Vendor = private unnamed_addr constant [19 x i8] c"SF_DAL_Init_Vendor\00", align 1
@__func__.SF_DAL_IOCtrl = private unnamed_addr constant [14 x i8] c"SF_DAL_IOCtrl\00", align 1
@__func__.SF_DAL_ProgramData = private unnamed_addr constant [19 x i8] c"SF_DAL_ProgramData\00", align 1
@tmp_data_buffer = internal unnamed_addr global [128 x i8] zeroinitializer, align 1, !dbg !1526
@__func__.SF_DAL_EraseBlock = private unnamed_addr constant [18 x i8] c"SF_DAL_EraseBlock\00", align 1
@__func__.SF_DAL_CheckReadyAndResume = private unnamed_addr constant [27 x i8] c"SF_DAL_CheckReadyAndResume\00", align 1
@__func__.SF_DAL_CheckDeviceReady = private unnamed_addr constant [24 x i8] c"SF_DAL_CheckDeviceReady\00", align 1
@combo_mem_id_list = dso_local constant %struct.GFH_CMEM_ID_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 72, i32 258 }, %struct.CMEMEntryIDList { i32 1, i32 5, [5 x %struct.CMEMEntryID] [%struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2(\15\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EFp\16\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\C2%8\00\00\00\00\00" }, %struct.CMEMEntryID { i8 3, i8 3, [8 x i8] c"\EF@\18\00\00\00\00\00" }] } }, align 4, !dbg !1534
@cmem_index = internal unnamed_addr global i16 -1, align 2, !dbg !1586
@cmem_emiinit_index = internal unnamed_addr global i16 -1, align 2, !dbg !1589
@FLASH_ID = dso_local local_unnamed_addr constant [19 x i8] c"{0xC2, 0x28, 0x16}\00", align 1, !dbg !1622
@nor_egid = dso_local local_unnamed_addr global %struct.anon.9* null, align 4, !dbg !1633
@EntireDiskMtdData = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1949
@RegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1820
@mtdflash = dso_local global %struct.SF_MTD_Data zeroinitializer, align 4, !dbg !1848
@nor_list = internal unnamed_addr global %struct.CMEMEntryNOR* null, align 4, !dbg !1951
@cmem_nor_index = internal unnamed_addr global i32 0, align 4, !dbg !1658
@PAGE_BUFFER_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1844
@NORFlashMtd = dso_local global %struct.NOR_MTD_Driver zeroinitializer, align 4, !dbg !1846
@FlashDriveData = dso_local local_unnamed_addr global %struct.NOR_FLASH_DRV_Data zeroinitializer, align 4, !dbg !1670
@StatusMap = dso_local global [8 x i8] zeroinitializer, align 1, !dbg !1931
@sf_dal_data_cmd = dso_local global %struct.SF_MTD_CMD zeroinitializer, align 1, !dbg !1934
@combo_mem_sw_list = internal constant %struct.GFH_CMEM_NOR_INFO_v1 { %struct.GFH_Header { i32 21843277, i16 700, i32 259 }, %struct.CMEMEntryNORList { i32 2, i32 5, [5 x %struct.CMEMEntryNOR] [%struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }, %struct.CMEMEntryNOR { i16 0, i16 64, i32 100, [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 0, i32 4096 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer], [8 x %struct.hal_cache_region_config_t] [%struct.hal_cache_region_config_t { i32 4194304, i32 1 }, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer, %struct.hal_cache_region_config_t zeroinitializer] }] } }, align 4, !dbg !1964
@BlockLayout = internal unnamed_addr global %struct.hal_cache_region_config_t* null, align 4, !dbg !1823
@BankInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1836
@TOTAL_BLOCKS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1807
@NOR_LARGEST_BLOCK_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1811
@TOTAL_SECTORS = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1809
@cmem_id = dso_local local_unnamed_addr global %struct.CMEMEntryID* null, align 4, !dbg !1660
@.str.138 = private unnamed_addr constant [60 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c\00", align 1
@__func__.CMEM_Init_nor_list = private unnamed_addr constant [19 x i8] c"CMEM_Init_nor_list\00", align 1
@.str.1.139 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@EntireDiskRegionInfo = internal global [8 x %struct.hal_cache_region_config_t] zeroinitializer, align 4, !dbg !1936
@__func__.CMEM_Init_FullDriver = private unnamed_addr constant [21 x i8] c"CMEM_Init_FullDriver\00", align 1
@FDMBuffer = dso_local local_unnamed_addr global [512 x i8] zeroinitializer, align 1, !dbg !1815
@CS0_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1832
@CS1_SIZE = dso_local local_unnamed_addr global i32 0, align 4, !dbg !1834
@FDMMutex = internal unnamed_addr global i1 false, align 4, !dbg !1991
@.str.144 = private unnamed_addr constant [55 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_disk.c\00", align 1
@.str.1.145 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.FreeFDMLock = private unnamed_addr constant [12 x i8] c"FreeFDMLock\00", align 1
@flash_init_status = internal unnamed_addr global i1 false, section ".tcm_rwdata", align 4, !dbg !2051
@EntireDiskDriveData = dso_local global %struct.NOR_FLASH_DISK_Data zeroinitializer, align 4, !dbg !1938
@__func__.get_rawdisk_error_code = private unnamed_addr constant [23 x i8] c"get_rawdisk_error_code\00", align 1
@__func__.get_block_size_from_address = private unnamed_addr constant [28 x i8] c"get_block_size_from_address\00", align 1
@__func__.MountDevice = private unnamed_addr constant [12 x i8] c"MountDevice\00", align 1
@switch.table.get_rawdisk_error_code = private unnamed_addr constant [9 x i32] [i32 -7, i32 -3, i32 -3, i32 -3, i32 -3, i32 -4, i32 -3, i32 -6, i32 -7], align 4
@gNOR_ReturnReadyBegin = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2052
@gNOR_ReturnReadyEnd = dso_local local_unnamed_addr global i32 -1, align 4, !dbg !2066
@NOR_Flash_Base_Address = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2068
@NOR_FLASH_BUSY = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2070
@NOR_FLASH_SUSPENDED = dso_local local_unnamed_addr global i8 0, align 1, !dbg !2072
@.str.160 = private unnamed_addr constant [54 x i8] c"../../../../../driver/chip/mt2523/src/hal_flash_mtd.c\00", align 1
@__func__.MapWindow = private unnamed_addr constant [10 x i8] c"MapWindow\00", align 1
@.str.1.161 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@__func__.DelayAWhile_UST = private unnamed_addr constant [16 x i8] c"DelayAWhile_UST\00", align 1
@LookupAddress.replaced = internal unnamed_addr global i32 0, align 4, !dbg !2074
@LookupAddress.look_up_hit = internal unnamed_addr global i32 0, align 4, !dbg !2128
@LookupAddress.look_up_miss = internal unnamed_addr global i32 0, align 4, !dbg !2130
@emi_settings = dso_local local_unnamed_addr global [1 x %struct.EMI_SETTINGS] [%struct.EMI_SETTINGS { i32 16, i32 0, i32 16384, i32 -1608118272, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 131074, i32 131074 }], section ".tcm_rwdata", align 4, !dbg !2132
@__EMI_CurSR0 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2144
@__EMI_CurSR1 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2146
@__EMI_CurSR2 = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2148
@emi_register = dso_local local_unnamed_addr global %struct.EMI_REGISTER_T* inttoptr (i32 -1610285056 to %struct.EMI_REGISTER_T*), section ".tcm_rwdata", align 4, !dbg !2150
@EMI_GENA_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2253
@EMI_RDCT_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2255
@EMI_DSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2257
@EMI_MSRAM_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2259
@EMI_IDL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2261
@EMI_IDL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2263
@EMI_IDL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2265
@EMI_ODL_C_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2267
@EMI_ODL_D_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2269
@EMI_ODL_E_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2271
@EMI_ODL_F_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2273
@EMI_IO_A_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2275
@EMI_IO_B_VAL = dso_local local_unnamed_addr global i32 0, section ".tcm_zidata", align 4, !dbg !2277
@__const.TestCase_MBIST.mbist_data = private unnamed_addr constant [2 x i32] [i32 23205, i32 65535], align 4
@emi_register_backup = dso_local global %struct.EMI_REGISTER_T zeroinitializer, section ".tcm_zidata", align 4, !dbg !2279
@dvfs_dma_runing_status = dso_local local_unnamed_addr global i32 0, section ".tcm_rwdata", align 4, !dbg !2251
@cm_freq_state = dso_local local_unnamed_addr global i32 1, section ".tcm_rwdata", align 4, !dbg !2298
@.str.172 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@.str.1.173 = private unnamed_addr constant [20 x i8] c"welcome to main()\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"---spi_slave_transfer_data_two_boards_example begins---\0D\0A\0D\0A\00", align 1
@spi_slave_poweron_flag = internal global i8 0, align 1, !dbg !2310
@spi_slave_cfg_write_flag = internal global i8 0, align 1, !dbg !2316
@spi_slave_write_data_flag = internal global i8 0, align 1, !dbg !2318
@spi_slave_write_error_flag = internal global i8 0, align 1, !dbg !2320
@spi_slave_cfg_read_flag = internal global i8 0, align 1, !dbg !2322
@spi_slave_read_data_flag = internal global i8 0, align 1, !dbg !2324
@spi_slave_read_error_flag = internal global i8 0, align 1, !dbg !2326
@spi_slave_timeout_flag = internal global i8 0, align 1, !dbg !2328
@g_tansfer_buffer = internal global [1024 x i8] zeroinitializer, section ".noncached_zidata", align 4, !dbg !2330
@.str.3 = private unnamed_addr constant [22 x i8] c"SPI slave init fail\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c"SPI slave register callback fail\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"SPI Slave is waiting for PWON command\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"  Slave detect PWON command error\0D\0A\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"SPI Slave is waiting for CW command\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"SPI Slave is waiting for WR command\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"  Slave detect WR command error\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [42 x i8] c"SPI slave Start to check data integrity\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"  Data check fail\0D\0A\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"  Data check pass\0D\0A\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"SPI Slave is waiting for CR command\0D\0A\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"SPI Slave is waiting for RD command\0D\0A\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"  SPI Slave detect RD error\0D\0A\00", align 1
@.str.16 = private unnamed_addr constant [41 x i8] c"SPI Slave is waiting for PWOFF command\0D\0A\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"SPI slave deinit\0D\0A\0D\0A\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"  SPI slave deinit failed\0D\0A\00", align 1
@.str.19 = private unnamed_addr constant [56 x i8] c"---spi_slave_transfer_data_two_boards_example ends---\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [35 x i8] c"  ---Receive POWERON command----\0D\0A\00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"  ---Receive POWEROFF command----\0D\0A\00", align 1
@.str.22 = private unnamed_addr constant [38 x i8] c"  ---Receive CRD_FINISH command----\0D\0A\00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"  ---Receive CWR_FINISH command----\0D\0A\00", align 1
@.str.24 = private unnamed_addr constant [37 x i8] c"  ---Receive RD_FINISH command----\0D\0A\00", align 1
@.str.25 = private unnamed_addr constant [37 x i8] c"  ---Receive WR_FINISH command----\0D\0A\00", align 1
@.str.26 = private unnamed_addr constant [25 x i8] c"  ---detect RD_ERR----\0D\0A\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"  ---detect WR_ERR----\0D\0A\00", align 1
@.str.28 = private unnamed_addr constant [28 x i8] c"  ---detect TMOUT_ERR----\0D\0A\00", align 1
@.str.29 = private unnamed_addr constant [61 x i8] c"  HAL_SPI_SLAVE_FSM_ERROR_PWROFF_AFTER_CR, fsm is poweroff\0D\0A\00", align 1
@.str.30 = private unnamed_addr constant [61 x i8] c"  HAL_SPI_SLAVE_FSM_ERROR_PWROFF_AFTER_CW, fsm is poweroff\0D\0A\00", align 1
@.str.31 = private unnamed_addr constant [52 x i8] c"  HAL_SPI_SLAVE_FSM_ERROR_CONTINOUS_CR, fsm is CR\0D\0A\00", align 1
@.str.32 = private unnamed_addr constant [51 x i8] c"  HAL_SPI_SLAVE_FSM_ERROR_CR_AFTER_CW, fsm is CR\0D\0A\00", align 1
@.str.33 = private unnamed_addr constant [52 x i8] c"  HAL_SPI_SLAVE_FSM_ERROR_CONTINOUS_CW, fsm is CW\0D\0A\00", align 1
@.str.34 = private unnamed_addr constant [51 x i8] c"  HAL_SPI_SLAVE_FSM_ERROR_CW_AFTER_CR, fsm is CW\0D\0A\00", align 1
@.str.35.174 = private unnamed_addr constant [59 x i8] c"  HAL_SPI_SLAVE_FSM_ERROR_WRITE_AFTER_CR, fsm is poweron\0D\0A\00", align 1
@.str.36 = private unnamed_addr constant [58 x i8] c"  HAL_SPI_SLAVE_FSM_ERROR_READ_AFTER_CW, fsm is poweron\0D\0A\00", align 1
@.str.37 = private unnamed_addr constant [56 x i8] c"  HAL_SPI_SLAVE_FSM_INVALID_OPERATION, fsm is poweron\0D\0A\00", align 1
@_sbrk_r.heap_end = internal unnamed_addr global i8* null, align 4, !dbg !2335
@end = external dso_local global i8, align 1
@System_Initialize_Done = internal global i32 0, align 4, !dbg !2539
@SystemCoreClock = dso_local local_unnamed_addr global i32 0, align 4, !dbg !2647
@build_date_time_str = dso_local local_unnamed_addr global [31 x i8] c"2022/12/13 08:00:32 GMT +00:00\00", align 1, !dbg !2649
@sw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"SDK_V4.6.1\00", align 1, !dbg !2654
@hw_verno_str = dso_local local_unnamed_addr global [11 x i8] c"mt2523_hdk\00", align 1, !dbg !2660

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_init() local_unnamed_addr #0 !dbg !2753 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2761
  call void @llvm.dbg.value(metadata i32 %1, metadata !2760, metadata !DIExpression()), !dbg !2762
  %2 = load volatile i8, i8* @g_cache_status, align 1, !dbg !2763, !range !2765
  %3 = icmp eq i8 %2, 0, !dbg !2763
  br i1 %3, label %5, label %4, !dbg !2766

4:                                                ; preds = %0
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2767
  br label %15, !dbg !2769

5:                                                ; preds = %0
  store volatile i8 1, i8* @g_cache_status, align 1, !dbg !2770
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2772
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2773
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2774
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2775
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2776
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2777
  call void @llvm.dbg.value(metadata i32 0, metadata !2758, metadata !DIExpression()), !dbg !2762
  br label %7, !dbg !2778

7:                                                ; preds = %5, %7
  %8 = phi i32 [ 0, %5 ], [ %13, %7 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !2758, metadata !DIExpression()), !dbg !2762
  %9 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %8, !dbg !2780
  store volatile i32 0, i32* %9, align 4, !dbg !2783
  %10 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %8, !dbg !2784
  store volatile i32 0, i32* %10, align 4, !dbg !2785
  %11 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 0, i32 0, i32 0, !dbg !2786
  store i32 0, i32* %11, align 4, !dbg !2787
  %12 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %8, i32 1, i32 0, i32 0, !dbg !2788
  store i32 0, i32* %12, align 4, !dbg !2789
  %13 = add nuw nsw i32 %8, 1, !dbg !2790
  call void @llvm.dbg.value(metadata i32 %13, metadata !2758, metadata !DIExpression()), !dbg !2762
  %14 = icmp eq i32 %13, 16, !dbg !2791
  br i1 %14, label %15, label %7, !dbg !2778, !llvm.loop !2792

15:                                               ; preds = %7, %4
  %16 = phi i32 [ -6, %4 ], [ 0, %7 ], !dbg !2762
  ret i32 %16, !dbg !2794
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !2795 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2798
  call void @llvm.dbg.value(metadata i32 %1, metadata !2797, metadata !DIExpression()), !dbg !2799
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2800
  %3 = and i32 %2, -31, !dbg !2800
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2800
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2801
  %5 = or i32 %4, 19, !dbg !2801
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2801
  %6 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2802
  %7 = and i32 %6, -31, !dbg !2802
  store volatile i32 %7, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2802
  %8 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2803
  %9 = or i32 %8, 3, !dbg !2803
  store volatile i32 %9, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2803
  tail call void asm sideeffect "isb", ""() #22, !dbg !2804, !srcloc !2808
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2809
  ret i32 0, !dbg !2810
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_deinit() local_unnamed_addr #0 !dbg !2811 {
  %1 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2814
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2815
  store volatile i32 0, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2816
  store i32 0, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2817
  store i32 0, i32* @g_cache_region_en, align 4, !dbg !2818
  call void @llvm.dbg.value(metadata i32 0, metadata !2813, metadata !DIExpression()), !dbg !2819
  br label %2, !dbg !2820

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %8, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !2813, metadata !DIExpression()), !dbg !2819
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %3, !dbg !2822
  store volatile i32 0, i32* %4, align 4, !dbg !2825
  %5 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %3, !dbg !2826
  store volatile i32 0, i32* %5, align 4, !dbg !2827
  %6 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 0, i32 0, i32 0, !dbg !2828
  store i32 0, i32* %6, align 4, !dbg !2829
  %7 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %3, i32 1, i32 0, i32 0, !dbg !2830
  store i32 0, i32* %7, align 4, !dbg !2831
  %8 = add nuw nsw i32 %3, 1, !dbg !2832
  call void @llvm.dbg.value(metadata i32 %8, metadata !2813, metadata !DIExpression()), !dbg !2819
  %9 = icmp eq i32 %8, 16, !dbg !2833
  br i1 %9, label %10, label %2, !dbg !2820, !llvm.loop !2834

10:                                               ; preds = %2
  store volatile i8 0, i8* @g_cache_status, align 1, !dbg !2836
  ret i32 0, !dbg !2837
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_enable() local_unnamed_addr #2 !dbg !2838 {
  %1 = load i32, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2839
  %2 = and i32 %1, 768, !dbg !2841
  %3 = icmp eq i32 %2, 0, !dbg !2841
  br i1 %3, label %8, label %4, !dbg !2842

4:                                                ; preds = %0
  %5 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2843
  %6 = or i32 %5, 13, !dbg !2843
  store volatile i32 %6, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2843
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2844
  store i32 %7, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2845
  br label %8, !dbg !2846

8:                                                ; preds = %0, %4
  %9 = phi i32 [ 0, %4 ], [ -5, %0 ], !dbg !2847
  ret i32 %9, !dbg !2848
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_disable() local_unnamed_addr #0 !dbg !2849 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2852
  call void @llvm.dbg.value(metadata i32 %1, metadata !2851, metadata !DIExpression()), !dbg !2853
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2854
  %3 = and i32 %2, 1, !dbg !2856
  %4 = icmp eq i32 %3, 0, !dbg !2856
  br i1 %4, label %7, label %5, !dbg !2857

5:                                                ; preds = %0
  %6 = tail call i32 @hal_cache_invalidate_all_cache_lines() #21, !dbg !2858
  br label %7, !dbg !2860

7:                                                ; preds = %5, %0
  %8 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2861
  %9 = and i32 %8, -2, !dbg !2861
  store volatile i32 %9, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2861
  %10 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2862
  store i32 %10, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2863
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !2864
  ret i32 0, !dbg !2865
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_enable(i32 noundef %0) local_unnamed_addr #2 !dbg !2866 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2870, metadata !DIExpression()), !dbg !2871
  %2 = icmp ugt i32 %0, 15, !dbg !2872
  br i1 %2, label %13, label %3, !dbg !2874

3:                                                ; preds = %1
  %4 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2875
  %5 = load volatile i32, i32* %4, align 4, !dbg !2875
  %6 = and i32 %5, 256, !dbg !2877
  %7 = icmp eq i32 %6, 0, !dbg !2877
  br i1 %7, label %13, label %8, !dbg !2878

8:                                                ; preds = %3
  %9 = shl nuw nsw i32 1, %0, !dbg !2879
  %10 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2881
  %11 = or i32 %10, %9, !dbg !2881
  store volatile i32 %11, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2881
  %12 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2882
  store i32 %12, i32* @g_cache_region_en, align 4, !dbg !2883
  br label %13, !dbg !2884

13:                                               ; preds = %3, %1, %8
  %14 = phi i32 [ 0, %8 ], [ -4, %1 ], [ -1, %3 ], !dbg !2871
  ret i32 %14, !dbg !2885
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_region_disable(i32 noundef %0) local_unnamed_addr #2 !dbg !2886 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2888, metadata !DIExpression()), !dbg !2889
  %2 = icmp ugt i32 %0, 15, !dbg !2890
  br i1 %2, label %11, label %3, !dbg !2892

3:                                                ; preds = %1
  %4 = shl nuw nsw i32 1, %0, !dbg !2893
  %5 = xor i32 %4, -1, !dbg !2894
  %6 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2895
  %7 = and i32 %6, %5, !dbg !2895
  store volatile i32 %7, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2895
  %8 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !2896
  store i32 %8, i32* @g_cache_region_en, align 4, !dbg !2897
  %9 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2898
  store i32 0, i32* %9, align 4, !dbg !2899
  %10 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2900
  store i32 0, i32* %10, align 4, !dbg !2901
  br label %11, !dbg !2902

11:                                               ; preds = %1, %3
  %12 = phi i32 [ 0, %3 ], [ -4, %1 ], !dbg !2889
  ret i32 %12, !dbg !2903
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_cache_set_size(i32 noundef %0) local_unnamed_addr #2 !dbg !2904 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2909, metadata !DIExpression()), !dbg !2910
  %2 = icmp ugt i32 %0, 3, !dbg !2911
  br i1 %2, label %13, label %3, !dbg !2913

3:                                                ; preds = %1
  %4 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2914
  %5 = and i32 %4, -769, !dbg !2914
  store volatile i32 %5, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2914
  %6 = shl nuw nsw i32 %0, 8, !dbg !2915
  %7 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2916
  %8 = or i32 %7, %6, !dbg !2916
  store volatile i32 %8, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2916
  %9 = icmp eq i32 %0, 0, !dbg !2917
  br i1 %9, label %10, label %11, !dbg !2919

10:                                               ; preds = %3
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2920
  br label %11, !dbg !2922

11:                                               ; preds = %10, %3
  %12 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !2923
  store i32 %12, i32* getelementptr inbounds (%union.CACHE_CON_Type, %union.CACHE_CON_Type* @g_cache_con, i32 0, i32 0, i32 0), align 4, !dbg !2924
  br label %13, !dbg !2925

13:                                               ; preds = %1, %11
  %14 = phi i32 [ 0, %11 ], [ -5, %1 ], !dbg !2910
  ret i32 %14, !dbg !2926
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_region_config(i32 noundef %0, %struct.hal_cache_region_config_t* noundef readonly %1) local_unnamed_addr #0 !dbg !2927 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2938, metadata !DIExpression()), !dbg !2940
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !2939, metadata !DIExpression()), !dbg !2940
  %3 = icmp ugt i32 %0, 15, !dbg !2941
  br i1 %3, label %30, label %4, !dbg !2943

4:                                                ; preds = %2
  %5 = icmp eq %struct.hal_cache_region_config_t* %1, null, !dbg !2944
  br i1 %5, label %30, label %6, !dbg !2946

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 0, !dbg !2947
  %8 = load i32, i32* %7, align 4, !dbg !2947
  %9 = and i32 %8, 4095, !dbg !2949
  %10 = icmp eq i32 %9, 0, !dbg !2949
  br i1 %10, label %12, label %11, !dbg !2950

11:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 251, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2951
  unreachable, !dbg !2951

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 0, i32 1, !dbg !2953
  %14 = load i32, i32* %13, align 4, !dbg !2953
  %15 = and i32 %14, 4095, !dbg !2955
  %16 = icmp eq i32 %15, 0, !dbg !2955
  br i1 %16, label %18, label %17, !dbg !2956

17:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i32 0, i32 0), i32 noundef 257, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.hal_cache_region_config, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i32 0, i32 0)) #23, !dbg !2957
  unreachable, !dbg !2957

18:                                               ; preds = %12
  %19 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %0, !dbg !2959
  store volatile i32 %8, i32* %19, align 4, !dbg !2960
  %20 = load i32, i32* %7, align 4, !dbg !2961
  %21 = load i32, i32* %13, align 4, !dbg !2962
  %22 = add i32 %21, %20, !dbg !2963
  %23 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %0, !dbg !2964
  store volatile i32 %22, i32* %23, align 4, !dbg !2965
  %24 = load volatile i32, i32* %19, align 4, !dbg !2966
  %25 = or i32 %24, 256, !dbg !2966
  store volatile i32 %25, i32* %19, align 4, !dbg !2966
  %26 = load volatile i32, i32* %19, align 4, !dbg !2967
  %27 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 0, i32 0, i32 0, !dbg !2968
  store i32 %26, i32* %27, align 4, !dbg !2969
  %28 = load volatile i32, i32* %23, align 4, !dbg !2970
  %29 = getelementptr inbounds [16 x %struct.CACHE_ENTRY_Type], [16 x %struct.CACHE_ENTRY_Type]* @g_cache_entry, i32 0, i32 %0, i32 1, i32 0, i32 0, !dbg !2971
  store i32 %28, i32* %29, align 4, !dbg !2972
  br label %30, !dbg !2973

30:                                               ; preds = %4, %2, %18
  %31 = phi i32 [ 0, %18 ], [ -4, %2 ], [ -7, %4 ], !dbg !2940
  ret i32 %31, !dbg !2974
}

; Function Attrs: noreturn optsize
declare dso_local void @__assert_func(i8* noundef, i32 noundef, i8* noundef, i8* noundef) local_unnamed_addr #3

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !2975 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2979, metadata !DIExpression()), !dbg !2981
  %2 = and i32 %0, 31, !dbg !2982
  %3 = icmp eq i32 %2, 0, !dbg !2982
  br i1 %3, label %4, label %9, !dbg !2984

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !2985
  call void @llvm.dbg.value(metadata i32 %5, metadata !2980, metadata !DIExpression()), !dbg !2981
  %6 = and i32 %0, -32, !dbg !2986
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2987
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2988
  %8 = or i32 %7, 5, !dbg !2988
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !2988
  tail call void asm sideeffect "isb", ""() #22, !dbg !2989, !srcloc !2808
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !2991
  br label %9, !dbg !2992

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !2981
  ret i32 %10, !dbg !2993
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_invalidate_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !2994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !2998, metadata !DIExpression()), !dbg !3002
  call void @llvm.dbg.value(metadata i32 %1, metadata !2999, metadata !DIExpression()), !dbg !3002
  %3 = add i32 %1, %0, !dbg !3003
  call void @llvm.dbg.value(metadata i32 %3, metadata !3001, metadata !DIExpression()), !dbg !3002
  %4 = or i32 %1, %0, !dbg !3004
  %5 = and i32 %4, 31, !dbg !3004
  %6 = icmp eq i32 %5, 0, !dbg !3004
  br i1 %6, label %7, label %16, !dbg !3004

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3006
  call void @llvm.dbg.value(metadata i32 %8, metadata !3000, metadata !DIExpression()), !dbg !3002
  call void @llvm.dbg.value(metadata i32 %0, metadata !2998, metadata !DIExpression()), !dbg !3002
  %9 = icmp ugt i32 %3, %0, !dbg !3007
  br i1 %9, label %10, label %15, !dbg !3008

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !2998, metadata !DIExpression()), !dbg !3002
  %12 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %11) #21, !dbg !3009
  %13 = add i32 %11, 32, !dbg !3011
  call void @llvm.dbg.value(metadata i32 %13, metadata !2998, metadata !DIExpression()), !dbg !3002
  %14 = icmp ult i32 %13, %3, !dbg !3007
  br i1 %14, label %10, label %15, !dbg !3008, !llvm.loop !3012

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3014, !srcloc !2808
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3016
  br label %16, !dbg !3017

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3002
  ret i32 %17, !dbg !3018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_one_cache_line(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3019 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3021, metadata !DIExpression()), !dbg !3023
  %2 = and i32 %0, 31, !dbg !3024
  %3 = icmp eq i32 %2, 0, !dbg !3024
  br i1 %3, label %4, label %9, !dbg !3026

4:                                                ; preds = %1
  %5 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3027
  call void @llvm.dbg.value(metadata i32 %5, metadata !3022, metadata !DIExpression()), !dbg !3023
  %6 = and i32 %0, -32, !dbg !3028
  store volatile i32 %6, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3029
  %7 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3030
  %8 = or i32 %7, 21, !dbg !3030
  store volatile i32 %8, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3030
  tail call void asm sideeffect "isb", ""() #22, !dbg !3031, !srcloc !2808
  tail call void @restore_interrupt_mask(i32 noundef %5) #20, !dbg !3033
  br label %9, !dbg !3034

9:                                                ; preds = %1, %4
  %10 = phi i32 [ 0, %4 ], [ -7, %1 ], !dbg !3023
  ret i32 %10, !dbg !3035
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_multiple_cache_lines(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3036 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3038, metadata !DIExpression()), !dbg !3042
  call void @llvm.dbg.value(metadata i32 %1, metadata !3039, metadata !DIExpression()), !dbg !3042
  %3 = add i32 %1, %0, !dbg !3043
  call void @llvm.dbg.value(metadata i32 %3, metadata !3041, metadata !DIExpression()), !dbg !3042
  %4 = or i32 %1, %0, !dbg !3044
  %5 = and i32 %4, 31, !dbg !3044
  %6 = icmp eq i32 %5, 0, !dbg !3044
  br i1 %6, label %7, label %16, !dbg !3044

7:                                                ; preds = %2
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3046
  call void @llvm.dbg.value(metadata i32 %8, metadata !3040, metadata !DIExpression()), !dbg !3042
  call void @llvm.dbg.value(metadata i32 %0, metadata !3038, metadata !DIExpression()), !dbg !3042
  %9 = icmp ugt i32 %3, %0, !dbg !3047
  br i1 %9, label %10, label %15, !dbg !3048

10:                                               ; preds = %7, %10
  %11 = phi i32 [ %13, %10 ], [ %0, %7 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !3038, metadata !DIExpression()), !dbg !3042
  %12 = tail call i32 @hal_cache_flush_one_cache_line(i32 noundef %11) #21, !dbg !3049
  %13 = add i32 %11, 32, !dbg !3051
  call void @llvm.dbg.value(metadata i32 %13, metadata !3038, metadata !DIExpression()), !dbg !3042
  %14 = icmp ult i32 %13, %3, !dbg !3047
  br i1 %14, label %10, label %15, !dbg !3048, !llvm.loop !3052

15:                                               ; preds = %10, %7
  tail call void asm sideeffect "isb", ""() #22, !dbg !3054, !srcloc !2808
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !3056
  br label %16, !dbg !3057

16:                                               ; preds = %2, %15
  %17 = phi i32 [ 0, %15 ], [ -7, %2 ], !dbg !3042
  ret i32 %17, !dbg !3058
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_cache_flush_all_cache_lines() local_unnamed_addr #0 section ".tcm_code" !dbg !3059 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3062
  call void @llvm.dbg.value(metadata i32 %1, metadata !3061, metadata !DIExpression()), !dbg !3063
  %2 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3064
  %3 = and i32 %2, -31, !dbg !3064
  store volatile i32 %3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3064
  %4 = load volatile i32, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3065
  %5 = or i32 %4, 19, !dbg !3065
  store volatile i32 %5, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !3065
  tail call void asm sideeffect "isb", ""() #22, !dbg !3066, !srcloc !2808
  tail call void @restore_interrupt_mask(i32 noundef %1) #20, !dbg !3068
  ret i32 0, !dbg !3069
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) local_unnamed_addr #2 !dbg !3070 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3074, metadata !DIExpression()), !dbg !3076
  %2 = load volatile i32, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !3077
  %3 = and i32 %2, 8, !dbg !3079
  %4 = icmp eq i32 %3, 0, !dbg !3079
  br i1 %4, label %23, label %5, !dbg !3080

5:                                                ; preds = %1, %20
  %6 = phi i32 [ %21, %20 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !3075, metadata !DIExpression()), !dbg !3076
  %7 = load volatile i32, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !3081
  %8 = shl nuw nsw i32 1, %6, !dbg !3086
  %9 = and i32 %7, %8, !dbg !3087
  %10 = icmp eq i32 %9, 0, !dbg !3087
  br i1 %10, label %20, label %11, !dbg !3088

11:                                               ; preds = %5
  %12 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634304 to [16 x i32]*), i32 0, i32 %6, !dbg !3089
  %13 = load volatile i32, i32* %12, align 4, !dbg !3089
  %14 = and i32 %13, -257, !dbg !3092
  %15 = icmp ugt i32 %14, %0, !dbg !3093
  br i1 %15, label %20, label %16, !dbg !3094

16:                                               ; preds = %11
  %17 = getelementptr inbounds [16 x i32], [16 x i32]* inttoptr (i32 -1601634240 to [16 x i32]*), i32 0, i32 %6, !dbg !3095
  %18 = load volatile i32, i32* %17, align 4, !dbg !3095
  %19 = icmp ugt i32 %18, %0, !dbg !3096
  br i1 %19, label %23, label %20, !dbg !3097

20:                                               ; preds = %5, %16, %11
  %21 = add nuw nsw i32 %6, 1, !dbg !3098
  call void @llvm.dbg.value(metadata i32 %21, metadata !3075, metadata !DIExpression()), !dbg !3076
  %22 = icmp eq i32 %21, 16, !dbg !3099
  br i1 %22, label %23, label %5, !dbg !3100, !llvm.loop !3101

23:                                               ; preds = %20, %16, %1
  %24 = phi i1 [ false, %1 ], [ false, %20 ], [ true, %16 ], !dbg !3076
  ret i1 %24, !dbg !3103
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_init(i32 noundef %0) local_unnamed_addr #0 !dbg !3104 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3110, metadata !DIExpression()), !dbg !3111
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3112
  br i1 %2, label %3, label %26, !dbg !3114

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3115
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3117
  %6 = load i32, i32* %5, align 4, !dbg !3117
  %7 = icmp eq i32 %6, 1, !dbg !3118
  br i1 %7, label %26, label %8, !dbg !3119

8:                                                ; preds = %3
  %9 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3120
  %10 = load i8, i8* %9, align 4, !dbg !3120, !range !2765
  %11 = icmp eq i8 %10, 0, !dbg !3120
  br i1 %11, label %12, label %26, !dbg !3121

12:                                               ; preds = %8
  %13 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3122
  %14 = tail call i8* @memset(i8* noundef nonnull %13, i32 noundef 0, i32 noundef 16) #20, !dbg !3123
  tail call void @gpt_open_clock_source() #20, !dbg !3124
  store i8 1, i8* %9, align 4, !dbg !3125
  %15 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3126
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %15, align 4, !dbg !3126
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 2, !dbg !3127
  %18 = load volatile i32, i32* %17, align 4, !dbg !3128
  %19 = and i32 %18, -2, !dbg !3128
  store volatile i32 %19, i32* %17, align 4, !dbg !3128
  %20 = shl nuw i32 1, %0, !dbg !3129
  %21 = xor i32 %20, -1, !dbg !3130
  %22 = load %struct.GPT_REGISTER_GLOABL_T*, %struct.GPT_REGISTER_GLOABL_T** @gp_gpt_glb, align 4, !dbg !3131
  %23 = getelementptr inbounds %struct.GPT_REGISTER_GLOABL_T, %struct.GPT_REGISTER_GLOABL_T* %22, i32 0, i32 2, !dbg !3132
  %24 = load volatile i32, i32* %23, align 4, !dbg !3133
  %25 = and i32 %24, %21, !dbg !3133
  store volatile i32 %25, i32* %23, align 4, !dbg !3133
  br label %26, !dbg !3134

26:                                               ; preds = %3, %8, %1, %12
  %27 = phi i32 [ 0, %12 ], [ -2, %1 ], [ -4, %8 ], [ -4, %3 ], !dbg !3111
  ret i32 %27, !dbg !3135
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) unnamed_addr #4 !dbg !3136 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3140, metadata !DIExpression()), !dbg !3141
  %2 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3142, !range !2765
  %3 = icmp ne i8 %2, 0, !dbg !3144
  %4 = icmp ne i32 %0, 3
  %5 = icmp ult i32 %0, 4
  %6 = or i1 %4, %3, !dbg !3145
  %7 = and i1 %5, %6, !dbg !3145
  ret i1 %7, !dbg !3146
}

; Function Attrs: optsize
declare dso_local i8* @memset(i8* noundef, i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !3147 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3149, metadata !DIExpression()), !dbg !3150
  %2 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3151
  br i1 %2, label %3, label %14, !dbg !3153

3:                                                ; preds = %1
  %4 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, !dbg !3154
  %5 = getelementptr inbounds %struct.gpt_context_t, %struct.gpt_context_t* %4, i32 0, i32 0, !dbg !3156
  %6 = load i32, i32* %5, align 4, !dbg !3156
  %7 = icmp eq i32 %6, 1, !dbg !3157
  br i1 %7, label %14, label %8, !dbg !3158

8:                                                ; preds = %3
  %9 = bitcast %struct.gpt_context_t* %4 to i8*, !dbg !3159
  %10 = tail call i8* @memset(i8* noundef nonnull %9, i32 noundef 0, i32 noundef 16) #20, !dbg !3160
  %11 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3161
  store i8 0, i8* %11, align 4, !dbg !3162
  %12 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3163
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %12, align 4, !dbg !3163
  tail call void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %13) #20, !dbg !3164
  br label %14, !dbg !3165

14:                                               ; preds = %3, %1, %8
  %15 = phi i32 [ 0, %8 ], [ -2, %1 ], [ -3, %3 ], !dbg !3150
  ret i32 %15, !dbg !3166
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_get_free_run_count(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".tcm_code" !dbg !3167 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3172, metadata !DIExpression()), !dbg !3174
  call void @llvm.dbg.value(metadata i32* %1, metadata !3173, metadata !DIExpression()), !dbg !3174
  switch i32 %0, label %22 [
    i32 0, label %3
    i32 1, label %11
  ], !dbg !3175

3:                                                ; preds = %2
  %4 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3176
  %5 = icmp eq i32 %4, 1, !dbg !3180
  br i1 %5, label %8, label %6, !dbg !3181

6:                                                ; preds = %3
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3182
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %7, i32 noundef 16, i32 noundef 0) #20, !dbg !3184
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3185
  br label %8, !dbg !3186

8:                                                ; preds = %6, %3
  %9 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3187
  %10 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %9) #20, !dbg !3188
  br label %20, !dbg !3189

11:                                               ; preds = %2
  %12 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3190
  %13 = icmp eq i32 %12, 1, !dbg !3194
  br i1 %13, label %16, label %14, !dbg !3195

14:                                               ; preds = %11
  %15 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3196
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %15, i32 noundef 0, i32 noundef 12) #20, !dbg !3198
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3199
  br label %16, !dbg !3200

16:                                               ; preds = %14, %11
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3201
  %18 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %17) #20, !dbg !3202
  %19 = tail call i32 @gpt_clock_calibrate_count_to_us(i32 noundef %18) #20, !dbg !3203
  br label %20

20:                                               ; preds = %16, %8
  %21 = phi i32 [ %19, %16 ], [ %10, %8 ], !dbg !3204
  store i32 %21, i32* %1, align 4, !dbg !3204
  br label %22, !dbg !3205

22:                                               ; preds = %2, %20
  %23 = phi i32 [ 0, %20 ], [ -1, %2 ], !dbg !3174
  ret i32 %23, !dbg !3206
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @hal_gpt_get_duration_count(i32 noundef %0, i32 noundef %1, i32* noundef writeonly %2) local_unnamed_addr #6 section ".tcm_code" !dbg !3207 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3211, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.value(metadata i32 %1, metadata !3212, metadata !DIExpression()), !dbg !3214
  call void @llvm.dbg.value(metadata i32* %2, metadata !3213, metadata !DIExpression()), !dbg !3214
  %4 = icmp eq i32* %2, null, !dbg !3215
  br i1 %4, label %7, label %5, !dbg !3217

5:                                                ; preds = %3
  %6 = sub i32 %1, %0, !dbg !3218
  store i32 %6, i32* %2, align 4, !dbg !3218
  br label %7, !dbg !3220

7:                                                ; preds = %3, %5
  %8 = phi i32 [ 0, %5 ], [ -1, %3 ], !dbg !3214
  ret i32 %8, !dbg !3221
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @hal_gpt_get_running_status(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #7 !dbg !3222 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3227, metadata !DIExpression()), !dbg !3229
  call void @llvm.dbg.value(metadata i32* %1, metadata !3228, metadata !DIExpression()), !dbg !3229
  %3 = icmp ugt i32 %0, 5, !dbg !3230
  br i1 %3, label %7, label %4, !dbg !3232

4:                                                ; preds = %2
  %5 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3233
  %6 = load i32, i32* %5, align 4, !dbg !3233
  store i32 %6, i32* %1, align 4, !dbg !3234
  br label %7, !dbg !3235

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !3229
  ret i32 %8, !dbg !3236
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_register_callback(i32 noundef %0, void (i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !3237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3241, metadata !DIExpression()), !dbg !3244
  call void @llvm.dbg.value(metadata void (i8*)* %1, metadata !3242, metadata !DIExpression()), !dbg !3244
  call void @llvm.dbg.value(metadata i8* %2, metadata !3243, metadata !DIExpression()), !dbg !3244
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3245
  br i1 %4, label %5, label %18, !dbg !3247

5:                                                ; preds = %3
  %6 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3248
  %7 = load i32, i32* %6, align 4, !dbg !3248
  %8 = icmp eq i32 %7, 1, !dbg !3250
  br i1 %8, label %18, label %9, !dbg !3251

9:                                                ; preds = %5
  %10 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3252
  %11 = load i8, i8* %10, align 4, !dbg !3252, !range !2765
  %12 = icmp eq i8 %11, 1, !dbg !3253
  br i1 %12, label %13, label %18, !dbg !3254

13:                                               ; preds = %9
  %14 = icmp eq void (i8*)* %1, null, !dbg !3255
  br i1 %14, label %18, label %15, !dbg !3257

15:                                               ; preds = %13
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 0, !dbg !3258
  store void (i8*)* %1, void (i8*)** %16, align 4, !dbg !3259
  %17 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 1, i32 1, !dbg !3260
  store i8* %2, i8** %17, align 4, !dbg !3261
  tail call void @gpt_nvic_register() #20, !dbg !3262
  br label %18, !dbg !3263

18:                                               ; preds = %13, %5, %9, %3, %15
  %19 = phi i32 [ 0, %15 ], [ -2, %3 ], [ -3, %9 ], [ -3, %5 ], [ -1, %13 ], !dbg !3244
  ret i32 %19, !dbg !3264
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_ms(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3265 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3270, metadata !DIExpression()), !dbg !3274
  call void @llvm.dbg.value(metadata i32 %1, metadata !3271, metadata !DIExpression()), !dbg !3274
  call void @llvm.dbg.value(metadata i32 %2, metadata !3272, metadata !DIExpression()), !dbg !3274
  %5 = bitcast i32* %4 to i8*, !dbg !3275
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3275
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3273, metadata !DIExpression()), !dbg !3276
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3277
  br i1 %6, label %7, label %51, !dbg !3279

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3280
  %9 = load i32, i32* %8, align 4, !dbg !3280
  %10 = icmp eq i32 %9, 1, !dbg !3282
  br i1 %10, label %51, label %11, !dbg !3283

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3284
  %13 = load i8, i8* %12, align 4, !dbg !3284, !range !2765
  %14 = icmp eq i8 %13, 1, !dbg !3285
  br i1 %14, label %15, label %51, !dbg !3286

15:                                               ; preds = %11
  %16 = icmp ugt i32 %1, 130150523, !dbg !3287
  br i1 %16, label %51, label %17, !dbg !3289

17:                                               ; preds = %15
  %18 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3290
  store volatile i32 %18, i32* %4, align 4, !dbg !3291
  tail call void @gpt_open_clock_source() #20, !dbg !3292
  %19 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3293
  %20 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3293
  %21 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %20, i32 0, i32 2, !dbg !3294
  %22 = load volatile i32, i32* %21, align 4, !dbg !3295
  %23 = and i32 %22, -2, !dbg !3295
  store volatile i32 %23, i32* %21, align 4, !dbg !3295
  %24 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3296
  %25 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %24, i32 0, i32 0, !dbg !3297
  %26 = load volatile i32, i32* %25, align 4, !dbg !3298
  %27 = and i32 %26, -2, !dbg !3298
  store volatile i32 %27, i32* %25, align 4, !dbg !3298
  %28 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3299
  %29 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %28, i32 0, i32 1, !dbg !3300
  store volatile i32 16, i32* %29, align 4, !dbg !3301
  %30 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %1) #20, !dbg !3302
  %31 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3303
  %32 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %31, i32 0, i32 6, !dbg !3304
  store volatile i32 %30, i32* %32, align 4, !dbg !3305
  %33 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3306
  %34 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %33, i32 0, i32 4, !dbg !3307
  store volatile i32 1, i32* %34, align 4, !dbg !3308
  %35 = shl i32 %2, 4, !dbg !3309
  %36 = or i32 %35, 2, !dbg !3310
  %37 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3311
  %38 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %37, i32 0, i32 0, !dbg !3312
  store volatile i32 %36, i32* %38, align 4, !dbg !3313
  %39 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4
  %40 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 5
  br label %41, !dbg !3314

41:                                               ; preds = %41, %17
  %42 = load volatile i32, i32* %40, align 4, !dbg !3315
  %43 = icmp eq i32 %42, 0, !dbg !3314
  br i1 %43, label %44, label %41, !dbg !3314, !llvm.loop !3316

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %39, i32 0, i32 0, !dbg !3318
  %46 = load volatile i32, i32* %45, align 4, !dbg !3319
  %47 = or i32 %46, 1, !dbg !3319
  store volatile i32 %47, i32* %45, align 4, !dbg !3319
  %48 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %19, align 4, !dbg !3320
  %49 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %48, i32 0, i32 2, !dbg !3321
  store volatile i32 1, i32* %49, align 4, !dbg !3322
  store i32 1, i32* %8, align 4, !dbg !3323
  %50 = load volatile i32, i32* %4, align 4, !dbg !3324
  tail call void @restore_interrupt_mask(i32 noundef %50) #20, !dbg !3325
  br label %51, !dbg !3326

51:                                               ; preds = %15, %7, %11, %3, %44
  %52 = phi i32 [ 0, %44 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], [ -1, %15 ], !dbg !3274
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3327
  ret i32 %52, !dbg !3327
}

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nofree nosync nounwind willreturn
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #8

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_ms(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3328 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3332, metadata !DIExpression()), !dbg !3333
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3334
  %3 = icmp eq i32 %2, 1, !dbg !3336
  br i1 %3, label %6, label %4, !dbg !3337

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3338
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 16, i32 noundef 0) #20, !dbg !3340
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 5, i32 0), align 4, !dbg !3341
  br label %6, !dbg !3342

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 5), align 4, !dbg !3343
  %8 = tail call i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) #20, !dbg !3344
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3345
  ret i32 0, !dbg !3346
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_start_timer_us(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !3347 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3349, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i32 %1, metadata !3350, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.value(metadata i32 %2, metadata !3351, metadata !DIExpression()), !dbg !3353
  %5 = bitcast i32* %4 to i8*, !dbg !3354
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3354
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3352, metadata !DIExpression()), !dbg !3355
  %6 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3356
  br i1 %6, label %7, label %50, !dbg !3358

7:                                                ; preds = %3
  %8 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3359
  %9 = load i32, i32* %8, align 4, !dbg !3359
  %10 = icmp eq i32 %9, 1, !dbg !3361
  br i1 %10, label %50, label %11, !dbg !3362

11:                                               ; preds = %7
  %12 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 2, !dbg !3363
  %13 = load i8, i8* %12, align 4, !dbg !3363, !range !2765
  %14 = icmp eq i8 %13, 1, !dbg !3364
  br i1 %14, label %15, label %50, !dbg !3365

15:                                               ; preds = %11
  %16 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3366
  store i8 1, i8* %16, align 1, !dbg !3367
  %17 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3368
  store volatile i32 %17, i32* %4, align 4, !dbg !3369
  tail call void @gpt_open_clock_source() #20, !dbg !3370
  %18 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3371
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3371
  %20 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %19, i32 0, i32 2, !dbg !3372
  %21 = load volatile i32, i32* %20, align 4, !dbg !3373
  %22 = and i32 %21, -2, !dbg !3373
  store volatile i32 %22, i32* %20, align 4, !dbg !3373
  %23 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3374
  %24 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %23, i32 0, i32 0, !dbg !3375
  %25 = load volatile i32, i32* %24, align 4, !dbg !3376
  %26 = and i32 %25, -2, !dbg !3376
  store volatile i32 %26, i32* %24, align 4, !dbg !3376
  %27 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3377
  %28 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %27, i32 0, i32 1, !dbg !3378
  store volatile i32 12, i32* %28, align 4, !dbg !3379
  %29 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %1) #20, !dbg !3380
  %30 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3381
  %31 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %30, i32 0, i32 6, !dbg !3382
  store volatile i32 %29, i32* %31, align 4, !dbg !3383
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3384
  %33 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %32, i32 0, i32 4, !dbg !3385
  store volatile i32 1, i32* %33, align 4, !dbg !3386
  %34 = shl i32 %2, 4, !dbg !3387
  %35 = or i32 %34, 2, !dbg !3388
  %36 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3389
  %37 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %36, i32 0, i32 0, !dbg !3390
  store volatile i32 %35, i32* %37, align 4, !dbg !3391
  %38 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4
  %39 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 5
  br label %40, !dbg !3392

40:                                               ; preds = %40, %15
  %41 = load volatile i32, i32* %39, align 4, !dbg !3393
  %42 = icmp eq i32 %41, 0, !dbg !3392
  br i1 %42, label %43, label %40, !dbg !3392, !llvm.loop !3394

43:                                               ; preds = %40
  %44 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %38, i32 0, i32 0, !dbg !3396
  %45 = load volatile i32, i32* %44, align 4, !dbg !3397
  %46 = or i32 %45, 1, !dbg !3397
  store volatile i32 %46, i32* %44, align 4, !dbg !3397
  %47 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %18, align 4, !dbg !3398
  %48 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %47, i32 0, i32 2, !dbg !3399
  store volatile i32 1, i32* %48, align 4, !dbg !3400
  %49 = load volatile i32, i32* %4, align 4, !dbg !3401
  tail call void @restore_interrupt_mask(i32 noundef %49) #20, !dbg !3402
  store i32 1, i32* %8, align 4, !dbg !3403
  br label %50, !dbg !3404

50:                                               ; preds = %7, %11, %3, %43
  %51 = phi i32 [ 0, %43 ], [ -2, %3 ], [ -4, %11 ], [ -4, %7 ], !dbg !3353
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3405
  ret i32 %51, !dbg !3405
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_delay_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3406 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3408, metadata !DIExpression()), !dbg !3409
  %2 = load i32, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3410
  %3 = icmp eq i32 %2, 1, !dbg !3412
  br i1 %3, label %6, label %4, !dbg !3413

4:                                                ; preds = %1
  %5 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3414
  tail call void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %5, i32 noundef 0, i32 noundef 12) #20, !dbg !3416
  store i32 1, i32* getelementptr inbounds ([6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 4, i32 0), align 4, !dbg !3417
  br label %6, !dbg !3418

6:                                                ; preds = %4, %1
  %7 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 4), align 4, !dbg !3419
  %8 = tail call i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) #20, !dbg !3420
  tail call void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %7, i32 noundef %8) #20, !dbg !3421
  ret i32 0, !dbg !3422
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_stop_timer(i32 noundef %0) local_unnamed_addr #0 !dbg !3423 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3425, metadata !DIExpression()), !dbg !3427
  %3 = bitcast i32* %2 to i8*, !dbg !3428
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3428
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3426, metadata !DIExpression()), !dbg !3429
  %4 = tail call fastcc zeroext i1 @hal_gpt_is_port_valid(i32 noundef %0) #21, !dbg !3430
  br i1 %4, label %5, label %24, !dbg !3432

5:                                                ; preds = %1
  %6 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3433
  store volatile i32 %6, i32* %2, align 4, !dbg !3434
  %7 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %0, !dbg !3435
  %8 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3435
  %9 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %8, i32 0, i32 2, !dbg !3436
  %10 = load volatile i32, i32* %9, align 4, !dbg !3437
  %11 = and i32 %10, -2, !dbg !3437
  store volatile i32 %11, i32* %9, align 4, !dbg !3437
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3438
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3439
  %14 = load volatile i32, i32* %13, align 4, !dbg !3440
  %15 = and i32 %14, -2, !dbg !3440
  store volatile i32 %15, i32* %13, align 4, !dbg !3440
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %7, align 4, !dbg !3441
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 4, !dbg !3442
  store volatile i32 1, i32* %17, align 4, !dbg !3443
  %18 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 0, !dbg !3444
  store i32 0, i32* %18, align 4, !dbg !3445
  %19 = load volatile i32, i32* %2, align 4, !dbg !3446
  tail call void @restore_interrupt_mask(i32 noundef %19) #20, !dbg !3447
  %20 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %0, i32 3, !dbg !3448
  %21 = load i8, i8* %20, align 1, !dbg !3448, !range !2765
  %22 = icmp eq i8 %21, 0, !dbg !3448
  br i1 %22, label %24, label %23, !dbg !3450

23:                                               ; preds = %5
  store i8 0, i8* %20, align 1, !dbg !3451
  br label %24, !dbg !3453

24:                                               ; preds = %5, %23, %1
  %25 = phi i32 [ -2, %1 ], [ 0, %23 ], [ 0, %5 ], !dbg !3427
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3454
  ret i32 %25, !dbg !3454
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_timer(i32* noundef writeonly %0) local_unnamed_addr #0 !dbg !3455 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3459, metadata !DIExpression()), !dbg !3462
  %2 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3463
  %3 = icmp ugt i32 %2, 31, !dbg !3465
  br i1 %3, label %13, label %4, !dbg !3466

4:                                                ; preds = %1
  %5 = icmp eq i32* %0, null, !dbg !3467
  br i1 %5, label %13, label %6, !dbg !3469

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3470
  call void @llvm.dbg.value(metadata i32 %7, metadata !3461, metadata !DIExpression()), !dbg !3462
  %8 = tail call i32 @gpt_sw_get_free_timer() #20, !dbg !3471
  call void @llvm.dbg.value(metadata i32 %8, metadata !3460, metadata !DIExpression()), !dbg !3462
  %9 = or i32 %8, -559087616, !dbg !3472
  store i32 %9, i32* %0, align 4, !dbg !3473
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %8, i32 2, !dbg !3474
  store i8 1, i8* %10, align 4, !dbg !3475
  %11 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3476
  %12 = add i32 %11, 1, !dbg !3476
  store i32 %12, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3476
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !3477
  br label %13, !dbg !3478

13:                                               ; preds = %4, %1, %6
  %14 = phi i32 [ 0, %6 ], [ -3, %1 ], [ -1, %4 ], !dbg !3462
  ret i32 %14, !dbg !3479
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_free_timer(i32 noundef %0) local_unnamed_addr #9 !dbg !3480 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !3482, metadata !DIExpression()), !dbg !3484
  %3 = bitcast i32* %2 to i8*, !dbg !3485
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3485
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3483, metadata !DIExpression()), !dbg !3486
  %4 = and i32 %0, -559087616, !dbg !3487
  %5 = icmp eq i32 %4, -559087616, !dbg !3489
  br i1 %5, label %6, label %24, !dbg !3490

6:                                                ; preds = %1
  %7 = and i32 %0, 65535, !dbg !3491
  store volatile i32 %7, i32* %2, align 4, !dbg !3492
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3493
  %9 = icmp eq i32 %8, 0, !dbg !3495
  br i1 %9, label %24, label %10, !dbg !3496

10:                                               ; preds = %6
  %11 = load volatile i32, i32* %2, align 4, !dbg !3497
  %12 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %11, i32 3, !dbg !3499
  %13 = load i8, i8* %12, align 1, !dbg !3499, !range !2765
  %14 = icmp eq i8 %13, 0, !dbg !3499
  br i1 %14, label %15, label %24, !dbg !3500

15:                                               ; preds = %10
  %16 = load volatile i32, i32* %2, align 4, !dbg !3501
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 2, !dbg !3503
  %18 = load i8, i8* %17, align 4, !dbg !3503, !range !2765
  %19 = icmp eq i8 %18, 1, !dbg !3504
  br i1 %19, label %20, label %24, !dbg !3505

20:                                               ; preds = %15
  %21 = load volatile i32, i32* %2, align 4, !dbg !3506
  %22 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %21, i32 2, !dbg !3507
  store i8 0, i8* %22, align 4, !dbg !3508
  %23 = add i32 %8, -1, !dbg !3509
  store i32 %23, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !3509
  br label %24, !dbg !3510

24:                                               ; preds = %15, %10, %6, %1, %20
  %25 = phi i32 [ 0, %20 ], [ -1, %1 ], [ -3, %6 ], [ -3, %10 ], [ -3, %15 ], !dbg !3484
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3511
  ret i32 %25, !dbg !3511
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_start_timer_ms(i32 noundef %0, i32 noundef %1, void (i8*)* noundef %2, i8* noundef %3) local_unnamed_addr #0 !dbg !3512 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3516, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i32 %1, metadata !3517, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata void (i8*)* %2, metadata !3518, metadata !DIExpression()), !dbg !3523
  call void @llvm.dbg.value(metadata i8* %3, metadata !3519, metadata !DIExpression()), !dbg !3523
  %5 = and i32 %0, -559087616, !dbg !3524
  %6 = icmp ne i32 %5, -559087616, !dbg !3526
  %7 = icmp eq void (i8*)* %2, null
  %8 = or i1 %6, %7, !dbg !3527
  call void @llvm.dbg.value(metadata i32 %0, metadata !3522, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !3523
  br i1 %8, label %44, label %9, !dbg !3527

9:                                                ; preds = %4
  %10 = and i32 %0, 65535, !dbg !3528
  call void @llvm.dbg.value(metadata i32 %10, metadata !3522, metadata !DIExpression()), !dbg !3523
  %11 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 3, !dbg !3529
  %12 = load i8, i8* %11, align 1, !dbg !3529, !range !2765
  %13 = icmp eq i8 %12, 0, !dbg !3529
  br i1 %13, label %14, label %44, !dbg !3531

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 2, !dbg !3532
  %16 = load i8, i8* %15, align 4, !dbg !3532, !range !2765
  %17 = icmp eq i8 %16, 1, !dbg !3534
  br i1 %17, label %18, label %44, !dbg !3535

18:                                               ; preds = %14
  %19 = icmp ugt i32 %1, 130150523, !dbg !3536
  br i1 %19, label %44, label %20, !dbg !3538

20:                                               ; preds = %18
  %21 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3539
  call void @llvm.dbg.value(metadata i32 %21, metadata !3521, metadata !DIExpression()), !dbg !3523
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3540
  %22 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3541, !range !2765
  %23 = icmp eq i8 %22, 0, !dbg !3543
  br i1 %23, label %24, label %27, !dbg !3544

24:                                               ; preds = %20
  %25 = tail call i32 @hal_gpt_init(i32 noundef 3) #21, !dbg !3545
  %26 = tail call i32 @hal_gpt_register_callback(i32 noundef 3, void (i8*)* noundef nonnull @gpt_sw_handler, i8* noundef null) #21, !dbg !3547
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 5), align 4, !dbg !3548
  br label %27, !dbg !3549

27:                                               ; preds = %24, %20
  %28 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3550
  %29 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3551, !range !2765
  %30 = icmp eq i8 %29, 0, !dbg !3553
  br i1 %30, label %31, label %34, !dbg !3554

31:                                               ; preds = %27
  %32 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3555
  %33 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %32) #20, !dbg !3557
  call void @llvm.dbg.value(metadata i32 %33, metadata !3520, metadata !DIExpression()), !dbg !3523
  br label %34, !dbg !3558

34:                                               ; preds = %27, %31
  %35 = phi i32 [ %33, %31 ], [ 0, %27 ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %35, metadata !3520, metadata !DIExpression()), !dbg !3523
  %36 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3560
  %37 = add i32 %36, %35, !dbg !3560
  store i32 %37, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3560
  %38 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3561
  %39 = add i32 %38, 1, !dbg !3561
  store i32 %39, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3561
  store i8 1, i8* %11, align 1, !dbg !3562
  %40 = add i32 %37, %1, !dbg !3563
  %41 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 1, !dbg !3564
  store i32 %40, i32* %41, align 4, !dbg !3565
  %42 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 0, !dbg !3566
  store void (i8*)* %2, void (i8*)** %42, align 4, !dbg !3567
  %43 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %10, i32 0, i32 1, !dbg !3568
  store i8* %3, i8** %43, align 4, !dbg !3569
  tail call void @gpt_sw_start_timer() #20, !dbg !3570
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3571
  tail call void @restore_interrupt_mask(i32 noundef %21) #20, !dbg !3572
  br label %44, !dbg !3573

44:                                               ; preds = %18, %14, %9, %4, %34
  %45 = phi i32 [ 0, %34 ], [ -1, %4 ], [ -3, %9 ], [ -3, %14 ], [ -1, %18 ], !dbg !3523
  ret i32 %45, !dbg !3574
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_stop_timer_ms(i32 noundef %0) local_unnamed_addr #0 !dbg !3575 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3577, metadata !DIExpression()), !dbg !3581
  %2 = and i32 %0, -559087616, !dbg !3582
  %3 = icmp eq i32 %2, -559087616, !dbg !3584
  br i1 %3, label %4, label %31, !dbg !3585

4:                                                ; preds = %1
  %5 = and i32 %0, 65535, !dbg !3586
  call void @llvm.dbg.value(metadata i32 %5, metadata !3580, metadata !DIExpression()), !dbg !3581
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 3, !dbg !3587
  %7 = load i8, i8* %6, align 1, !dbg !3587, !range !2765
  %8 = icmp eq i8 %7, 1, !dbg !3589
  br i1 %8, label %9, label %31, !dbg !3590

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %5, i32 2, !dbg !3591
  %11 = load i8, i8* %10, align 4, !dbg !3591, !range !2765
  %12 = icmp eq i8 %11, 1, !dbg !3593
  br i1 %12, label %13, label %31, !dbg !3594

13:                                               ; preds = %9
  %14 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3595
  call void @llvm.dbg.value(metadata i32 %14, metadata !3579, metadata !DIExpression()), !dbg !3581
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3596
  %15 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #21, !dbg !3597
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3598
  %16 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3599, !range !2765
  %17 = icmp eq i8 %16, 0, !dbg !3601
  br i1 %17, label %18, label %21, !dbg !3602

18:                                               ; preds = %13
  %19 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3603
  %20 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %19) #20, !dbg !3605
  call void @llvm.dbg.value(metadata i32 %20, metadata !3578, metadata !DIExpression()), !dbg !3581
  br label %21, !dbg !3606

21:                                               ; preds = %13, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %13 ], !dbg !3607
  call void @llvm.dbg.value(metadata i32 %22, metadata !3578, metadata !DIExpression()), !dbg !3581
  %23 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3608
  %24 = add i32 %23, %22, !dbg !3608
  store i32 %24, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3608
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3609
  %26 = add i32 %25, -1, !dbg !3609
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3609
  store i8 0, i8* %6, align 1, !dbg !3610
  %27 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !3611
  %28 = icmp eq i32 %27, 0, !dbg !3613
  br i1 %28, label %30, label %29, !dbg !3614

29:                                               ; preds = %21
  tail call void @gpt_sw_start_timer() #20, !dbg !3615
  br label %30, !dbg !3617

30:                                               ; preds = %21, %29
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3618
  tail call void @restore_interrupt_mask(i32 noundef %14) #20, !dbg !3619
  br label %31, !dbg !3620

31:                                               ; preds = %9, %4, %1, %30
  %32 = phi i32 [ 0, %30 ], [ -1, %1 ], [ -3, %4 ], [ -3, %9 ], !dbg !3581
  ret i32 %32, !dbg !3621
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_gpt_sw_get_remaining_time_ms(i32 noundef %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #0 !dbg !3622 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3626, metadata !DIExpression()), !dbg !3631
  call void @llvm.dbg.value(metadata i32* %1, metadata !3627, metadata !DIExpression()), !dbg !3631
  %3 = and i32 %0, -559087616, !dbg !3632
  %4 = icmp eq i32 %3, -559087616, !dbg !3634
  br i1 %4, label %5, label %20, !dbg !3635

5:                                                ; preds = %2
  %6 = and i32 %0, 65535, !dbg !3636
  call void @llvm.dbg.value(metadata i32 %6, metadata !3630, metadata !DIExpression()), !dbg !3631
  %7 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 2, !dbg !3637
  %8 = load i8, i8* %7, align 4, !dbg !3637, !range !2765
  %9 = icmp eq i8 %8, 1, !dbg !3639
  br i1 %9, label %10, label %20, !dbg !3640

10:                                               ; preds = %5
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !3641
  call void @llvm.dbg.value(metadata i32 %11, metadata !3629, metadata !DIExpression()), !dbg !3631
  %12 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3642
  %13 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3643
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %13, i32 0, i32 5, !dbg !3644
  %15 = load volatile i32, i32* %14, align 4, !dbg !3644
  %16 = add i32 %15, %12, !dbg !3645
  call void @llvm.dbg.value(metadata i32 %16, metadata !3628, metadata !DIExpression()), !dbg !3631
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %6, i32 1, !dbg !3646
  %18 = load i32, i32* %17, align 4, !dbg !3646
  %19 = tail call i32 @llvm.usub.sat.i32(i32 %18, i32 %16), !dbg !3648
  store i32 %19, i32* %1, align 4, !dbg !3649
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !3650
  br label %20, !dbg !3651

20:                                               ; preds = %5, %2, %10
  %21 = phi i32 [ 0, %10 ], [ -1, %2 ], [ -3, %5 ], !dbg !3631
  ret i32 %21, !dbg !3652
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.usub.sat.i32(i32, i32) #1

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 section ".tcm_code" !dbg !3653 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3657, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata i32 %1, metadata !3658, metadata !DIExpression()), !dbg !3664
  call void @llvm.dbg.value(metadata i32 %2, metadata !3659, metadata !DIExpression()), !dbg !3664
  %4 = and i32 %0, 65535, !dbg !3665
  %5 = mul i32 %4, %1, !dbg !3666
  call void @llvm.dbg.value(metadata i32 %5, metadata !3660, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3664
  %6 = lshr i32 %0, 16, !dbg !3667
  %7 = mul i32 %6, %1, !dbg !3668
  call void @llvm.dbg.value(metadata i32 %7, metadata !3660, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3664
  %8 = and i32 %5, 65535, !dbg !3669
  call void @llvm.dbg.value(metadata i32 %8, metadata !3662, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3664
  %9 = lshr i32 %5, 16, !dbg !3670
  %10 = add i32 %9, %7, !dbg !3671
  call void @llvm.dbg.value(metadata i32 %10, metadata !3662, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3664
  %11 = udiv i32 %10, %2, !dbg !3672
  call void @llvm.dbg.value(metadata i32 %11, metadata !3663, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !3664
  %12 = mul i32 %11, %2
  %13 = sub i32 %10, %12
  %14 = shl i32 %13, 16, !dbg !3673
  %15 = or i32 %14, %8, !dbg !3674
  %16 = udiv i32 %15, %2, !dbg !3675
  call void @llvm.dbg.value(metadata i32 %16, metadata !3663, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !3664
  %17 = shl i32 %11, 16, !dbg !3676
  %18 = add i32 %16, %17, !dbg !3677
  ret i32 %18, !dbg !3678
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #11 section ".tcm_code" !dbg !3679 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3683, metadata !DIExpression()), !dbg !3684
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5, !dbg !3685
  %3 = load volatile i32, i32* %2, align 4, !dbg !3685
  ret i32 %3, !dbg !3686
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @gpt_convert_ms_to_32k_count(i32 noundef %0) local_unnamed_addr #10 section ".tcm_code" !dbg !3687 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3691, metadata !DIExpression()), !dbg !3692
  %2 = shl i32 %0, 5, !dbg !3693
  %3 = mul i32 %0, 7, !dbg !3694
  %4 = udiv i32 %3, 10, !dbg !3695
  %5 = add i32 %4, %2, !dbg !3696
  %6 = mul i32 %0, 6, !dbg !3697
  %7 = udiv i32 %6, 100, !dbg !3698
  %8 = add i32 %5, %7, !dbg !3699
  %9 = shl i32 %0, 3, !dbg !3700
  %10 = udiv i32 %9, 1000, !dbg !3701
  %11 = add i32 %8, %10, !dbg !3702
  ret i32 %11, !dbg !3703
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_get_lfosc_clock() local_unnamed_addr #0 section ".tcm_code" !dbg !290 {
  %1 = load i1, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3704
  br i1 %1, label %10, label %2, !dbg !3706

2:                                                ; preds = %0
  %3 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3707
  br i1 %3, label %4, label %6, !dbg !3710

4:                                                ; preds = %2
  %5 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !3711
  store i32 %5, i32* @gpt_clock_source, align 4, !dbg !3713
  switch i32 %5, label %8 [
    i32 26000, label %6
    i32 0, label %6
  ], !dbg !3714

6:                                                ; preds = %2, %4, %4
  %7 = phi i1 [ false, %4 ], [ false, %4 ], [ true, %2 ]
  store i32 26000, i32* @gpt_clock_source, align 4, !dbg !3716
  br label %8, !dbg !3716

8:                                                ; preds = %6, %4
  %9 = phi i1 [ true, %4 ], [ %7, %6 ]
  store i1 %9, i1* @gpt_get_lfosc_clock.flag, align 1, !dbg !3716
  br label %10, !dbg !3717

10:                                               ; preds = %8, %0
  ret void, !dbg !3717
}

; Function Attrs: optsize
declare dso_local i32 @clock_get_freq_lfosc() local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_open_clock_source() local_unnamed_addr #0 section ".tcm_code" !dbg !3718 {
  %1 = tail call zeroext i1 @hal_clock_is_enabled(i32 noundef 66) #20, !dbg !3719
  br i1 %1, label %4, label %2, !dbg !3721

2:                                                ; preds = %0
  %3 = tail call i32 @hal_clock_enable(i32 noundef 66) #20, !dbg !3722
  br label %4, !dbg !3724

4:                                                ; preds = %2, %0
  ret void, !dbg !3725
}

; Function Attrs: optsize
declare dso_local zeroext i1 @hal_clock_is_enabled(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_enable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_us_to_count(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3726 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3728, metadata !DIExpression()), !dbg !3729
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3730
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3731
  br i1 %2, label %3, label %6, !dbg !3733

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3734
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef %4, i32 noundef 26000) #21, !dbg !3736
  br label %6, !dbg !3737

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3738
  ret i32 %7, !dbg !3739
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @gpt_clock_calibrate_count_to_us(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !3740 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !3742, metadata !DIExpression()), !dbg !3743
  tail call void @gpt_get_lfosc_clock() #21, !dbg !3744
  %2 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !3745
  br i1 %2, label %3, label %6, !dbg !3747

3:                                                ; preds = %1
  %4 = load i32, i32* @gpt_clock_source, align 4, !dbg !3748
  %5 = tail call i32 @gpt_calibrate_algorithm(i32 noundef %0, i32 noundef 26000, i32 noundef %4) #21, !dbg !3750
  br label %6, !dbg !3751

6:                                                ; preds = %1, %3
  %7 = phi i32 [ %5, %3 ], [ %0, %1 ], !dbg !3752
  ret i32 %7, !dbg !3753
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_start_free_run_timer(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".tcm_code" !dbg !3754 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3758, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %1, metadata !3759, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.value(metadata i32 %2, metadata !3760, metadata !DIExpression()), !dbg !3761
  tail call void @gpt_open_clock_source() #21, !dbg !3762
  %4 = or i32 %2, %1, !dbg !3763
  %5 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3764
  store volatile i32 %4, i32* %5, align 4, !dbg !3765
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3766
  store volatile i32 49, i32* %6, align 4, !dbg !3767
  ret void, !dbg !3768
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_delay_time(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !3769 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3773, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 %1, metadata !3774, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 0, metadata !3775, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.value(metadata i32 0, metadata !3776, metadata !DIExpression()), !dbg !3777
  %3 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3778
  call void @llvm.dbg.value(metadata i32 %3, metadata !3776, metadata !DIExpression()), !dbg !3777
  %4 = add i32 %1, 1, !dbg !3779
  %5 = add i32 %4, %3, !dbg !3780
  call void @llvm.dbg.value(metadata i32 %5, metadata !3775, metadata !DIExpression()), !dbg !3777
  %6 = icmp ugt i32 %5, %3, !dbg !3781
  br i1 %6, label %7, label %10, !dbg !3783

7:                                                ; preds = %2, %7
  %8 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3784
  %9 = icmp ult i32 %8, %5, !dbg !3786
  br i1 %9, label %7, label %16, !dbg !3787, !llvm.loop !3788

10:                                               ; preds = %2, %10
  %11 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3790
  %12 = icmp ult i32 %11, %3, !dbg !3792
  br i1 %12, label %13, label %10, !dbg !3793, !llvm.loop !3794

13:                                               ; preds = %10, %13
  %14 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3796
  %15 = icmp ult i32 %14, %5, !dbg !3797
  br i1 %15, label %13, label %16, !dbg !3798, !llvm.loop !3799

16:                                               ; preds = %13, %7
  ret void, !dbg !3801
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_reset_default_timer(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !3802 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3806, metadata !DIExpression()), !dbg !3807
  %2 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3808
  store volatile i32 0, i32* %2, align 4, !dbg !3809
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 0, !dbg !3810
  store volatile i32 0, i32* %3, align 4, !dbg !3811
  %4 = load volatile i32, i32* %3, align 4, !dbg !3812
  %5 = or i32 %4, 2, !dbg !3812
  store volatile i32 %5, i32* %3, align 4, !dbg !3812
  %6 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 5
  br label %7, !dbg !3813

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %6, align 4, !dbg !3814
  %9 = icmp eq i32 %8, 0, !dbg !3813
  br i1 %9, label %10, label %7, !dbg !3813, !llvm.loop !3815

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 1, !dbg !3817
  store volatile i32 16, i32* %11, align 4, !dbg !3818
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 4, !dbg !3819
  store volatile i32 1, i32* %12, align 4, !dbg !3820
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 6, !dbg !3821
  store volatile i32 -1, i32* %13, align 4, !dbg !3822
  %14 = icmp eq %struct.GPT_REGISTER_T* %0, inttoptr (i32 -1575747328 to %struct.GPT_REGISTER_T*), !dbg !3823
  br i1 %14, label %15, label %16, !dbg !3825

15:                                               ; preds = %10
  store volatile i32 0, i32* inttoptr (i32 -1575747296 to i32*), align 32, !dbg !3826
  br label %16, !dbg !3828

16:                                               ; preds = %15, %10
  ret void, !dbg !3829
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3830 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3832, metadata !DIExpression()), !dbg !3834
  %3 = bitcast i32* %2 to i8*, !dbg !3835
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3835
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3833, metadata !DIExpression()), !dbg !3836
  %4 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3837
  %5 = load volatile i32, i32* %4, align 4, !dbg !3837
  store volatile i32 %5, i32* %2, align 4, !dbg !3838
  %6 = load volatile i32, i32* %4, align 4, !dbg !3839
  %7 = and i32 %6, -2, !dbg !3839
  store volatile i32 %7, i32* %4, align 4, !dbg !3839
  %8 = load volatile i32, i32* %2, align 4, !dbg !3840
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3841
  ret i32 %8, !dbg !3842
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !3843 {
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3847, metadata !DIExpression()), !dbg !3849
  call void @llvm.dbg.value(metadata i32 %1, metadata !3848, metadata !DIExpression()), !dbg !3849
  %3 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %0, i32 0, i32 2, !dbg !3850
  store volatile i32 %1, i32* %3, align 4, !dbg !3851
  ret void, !dbg !3852
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_interrupt_handler(i32 %0) #0 !dbg !3853 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 undef, metadata !3855, metadata !DIExpression()), !dbg !3860
  %5 = bitcast i32* %2 to i8*, !dbg !3861
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !3861
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3857, metadata !DIExpression()), !dbg !3862
  %6 = bitcast i32* %3 to i8*, !dbg !3863
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6), !dbg !3863
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3858, metadata !DIExpression()), !dbg !3864
  %7 = bitcast i32* %4 to i8*, !dbg !3865
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7), !dbg !3865
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3859, metadata !DIExpression()), !dbg !3866
  call void @llvm.dbg.value(metadata i32 undef, metadata !3855, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata i32 0, metadata !3856, metadata !DIExpression()), !dbg !3860
  br label %8, !dbg !3867

8:                                                ; preds = %1, %33
  %9 = phi i32 [ 0, %1 ], [ %36, %33 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !3856, metadata !DIExpression()), !dbg !3860
  %10 = getelementptr inbounds [6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 %9, !dbg !3869
  %11 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3869
  %12 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 3, !dbg !3872
  %13 = load volatile i32, i32* %12, align 4, !dbg !3872
  store volatile i32 %13, i32* %3, align 4, !dbg !3873
  %14 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %11, i32 0, i32 2, !dbg !3874
  %15 = load volatile i32, i32* %14, align 4, !dbg !3874
  store volatile i32 %15, i32* %4, align 4, !dbg !3875
  %16 = tail call i32 @gpt_save_and_mask_interrupt(%struct.GPT_REGISTER_T* noundef %11) #21, !dbg !3876
  store volatile i32 %16, i32* %2, align 4, !dbg !3877
  %17 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3878
  %18 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %17, i32 0, i32 4, !dbg !3879
  store volatile i32 1, i32* %18, align 4, !dbg !3880
  %19 = load volatile i32, i32* %3, align 4, !dbg !3881
  %20 = and i32 %19, 1, !dbg !3883
  %21 = icmp eq i32 %20, 0, !dbg !3883
  br i1 %21, label %33, label %22, !dbg !3884

22:                                               ; preds = %8
  %23 = load volatile i32, i32* %4, align 4, !dbg !3885
  %24 = and i32 %23, 1, !dbg !3886
  %25 = icmp eq i32 %24, 0, !dbg !3886
  br i1 %25, label %33, label %26, !dbg !3887

26:                                               ; preds = %22
  %27 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 0, !dbg !3888
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !3888
  %29 = icmp eq void (i8*)* %28, null, !dbg !3891
  br i1 %29, label %33, label %30, !dbg !3892

30:                                               ; preds = %26
  %31 = getelementptr inbounds [6 x %struct.gpt_context_t], [6 x %struct.gpt_context_t]* @g_gpt_context, i32 0, i32 %9, i32 1, i32 1, !dbg !3893
  %32 = load i8*, i8** %31, align 4, !dbg !3893
  tail call void %28(i8* noundef %32) #20, !dbg !3895
  br label %33, !dbg !3896

33:                                               ; preds = %26, %30, %22, %8
  %34 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** %10, align 4, !dbg !3897
  %35 = load volatile i32, i32* %2, align 4, !dbg !3898
  tail call void @gpt_restore_interrupt(%struct.GPT_REGISTER_T* noundef %34, i32 noundef %35) #21, !dbg !3899
  %36 = add nuw nsw i32 %9, 1, !dbg !3900
  call void @llvm.dbg.value(metadata i32 %36, metadata !3856, metadata !DIExpression()), !dbg !3860
  %37 = icmp eq i32 %36, 6, !dbg !3901
  br i1 %37, label %38, label %8, !dbg !3867, !llvm.loop !3902

38:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7), !dbg !3904
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6), !dbg !3904
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !3904
  ret void, !dbg !3904
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_nvic_register() local_unnamed_addr #0 !dbg !3905 {
  %1 = tail call i32 @hal_nvic_disable_irq(i32 noundef 11) #20, !dbg !3906
  %2 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 11, void (i32)* noundef nonnull @gpt_interrupt_handler) #20, !dbg !3907
  %3 = tail call i32 @hal_nvic_enable_irq(i32 noundef 11) #20, !dbg !3908
  ret void, !dbg !3909
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %0) local_unnamed_addr #9 !dbg !3910 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.GPT_REGISTER_T* %0, metadata !3912, metadata !DIExpression()), !dbg !3917
  %3 = bitcast i32* %2 to i8*, !dbg !3918
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !3918
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3913, metadata !DIExpression()), !dbg !3919
  %4 = tail call i32 @gpt_current_count(%struct.GPT_REGISTER_T* noundef %0) #21, !dbg !3920
  call void @llvm.dbg.value(metadata i32 %4, metadata !3914, metadata !DIExpression()), !dbg !3917
  %5 = lshr i32 %4, 15, !dbg !3921
  call void @llvm.dbg.value(metadata i32 %5, metadata !3915, metadata !DIExpression()), !dbg !3917
  %6 = and i32 %4, 32767, !dbg !3922
  %7 = mul nuw nsw i32 %6, 1000, !dbg !3923
  %8 = add nuw nsw i32 %7, 16384, !dbg !3924
  %9 = lshr i32 %8, 15, !dbg !3925
  call void @llvm.dbg.value(metadata i32 %9, metadata !3916, metadata !DIExpression()), !dbg !3917
  %10 = mul nuw nsw i32 %5, 1000, !dbg !3926
  %11 = add nuw nsw i32 %9, %10, !dbg !3927
  store volatile i32 %11, i32* %2, align 4, !dbg !3928
  %12 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !3929
  %13 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %12, i32 0, i32 0, !dbg !3930
  %14 = load volatile i32, i32* %13, align 4, !dbg !3931
  %15 = or i32 %14, 2, !dbg !3931
  store volatile i32 %15, i32* %13, align 4, !dbg !3931
  %16 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4
  %17 = getelementptr inbounds %struct.GPT_REGISTER_T, %struct.GPT_REGISTER_T* %16, i32 0, i32 5
  br label %18, !dbg !3932

18:                                               ; preds = %18, %1
  %19 = load volatile i32, i32* %17, align 4, !dbg !3933
  %20 = icmp eq i32 %19, 0, !dbg !3932
  br i1 %20, label %21, label %18, !dbg !3932, !llvm.loop !3934

21:                                               ; preds = %18
  %22 = load volatile i32, i32* %2, align 4, !dbg !3936
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !3937
  ret i32 %22, !dbg !3938
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @gpt_sw_get_free_timer() local_unnamed_addr #12 !dbg !3939 {
  call void @llvm.dbg.value(metadata i32 0, metadata !3942, metadata !DIExpression()), !dbg !3943
  br label %1, !dbg !3944

1:                                                ; preds = %0, %6
  %2 = phi i32 [ 0, %0 ], [ %7, %6 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !3942, metadata !DIExpression()), !dbg !3943
  %3 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %2, i32 2, !dbg !3946
  %4 = load i8, i8* %3, align 4, !dbg !3946, !range !2765
  %5 = icmp eq i8 %4, 1, !dbg !3950
  br i1 %5, label %6, label %9, !dbg !3951

6:                                                ; preds = %1
  %7 = add nuw nsw i32 %2, 1, !dbg !3952
  call void @llvm.dbg.value(metadata i32 %7, metadata !3942, metadata !DIExpression()), !dbg !3943
  %8 = icmp eq i32 %7, 32, !dbg !3953
  br i1 %8, label %9, label %1, !dbg !3944, !llvm.loop !3954

9:                                                ; preds = %6, %1
  %10 = phi i32 [ %2, %1 ], [ 32, %6 ], !dbg !3943
  ret i32 %10, !dbg !3956
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_start_timer() local_unnamed_addr #0 !dbg !3957 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = bitcast i32* %1 to i8*, !dbg !3961
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3961
  %4 = bitcast i32* %2 to i8*, !dbg !3961
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3961
  %5 = load i8, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !3962, !range !2765
  %6 = icmp eq i8 %5, 0, !dbg !3962
  br i1 %6, label %7, label %11, !dbg !3964

7:                                                ; preds = %0
  call void @llvm.dbg.value(metadata i32* %1, metadata !3959, metadata !DIExpression(DW_OP_deref)), !dbg !3965
  call void @llvm.dbg.value(metadata i32* %2, metadata !3960, metadata !DIExpression(DW_OP_deref)), !dbg !3965
  call void @gpt_sw_get_minimum_left_time_ms(i32* noundef nonnull %1, i32* noundef nonnull %2) #21, !dbg !3966
  %8 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !3967
  store i32 %8, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !3968
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3969
  %9 = load i32, i32* %1, align 4, !dbg !3970
  call void @llvm.dbg.value(metadata i32 %9, metadata !3959, metadata !DIExpression()), !dbg !3965
  %10 = tail call i32 @hal_gpt_start_timer_ms(i32 noundef 3, i32 noundef %9, i32 noundef 0) #20, !dbg !3971
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !3972
  br label %11, !dbg !3973

11:                                               ; preds = %0, %7
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !3973
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !3973
  ret void, !dbg !3973
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local void @gpt_sw_get_minimum_left_time_ms(i32* nocapture noundef writeonly %0, i32* nocapture noundef writeonly %1) local_unnamed_addr #13 !dbg !3974 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !3978, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32* %1, metadata !3979, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32 -1, metadata !3981, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32 0, metadata !3980, metadata !DIExpression()), !dbg !3983
  br label %3, !dbg !3984

3:                                                ; preds = %2, %13
  %4 = phi i32 [ 0, %2 ], [ %15, %13 ]
  %5 = phi i32 [ -1, %2 ], [ %14, %13 ]
  call void @llvm.dbg.value(metadata i32 %4, metadata !3980, metadata !DIExpression()), !dbg !3983
  call void @llvm.dbg.value(metadata i32 %5, metadata !3981, metadata !DIExpression()), !dbg !3983
  %6 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %4, i32 3, !dbg !3986
  %7 = load i8, i8* %6, align 1, !dbg !3986, !range !2765
  %8 = icmp eq i8 %7, 0, !dbg !3986
  br i1 %8, label %13, label %9, !dbg !3990

9:                                                ; preds = %3
  %10 = tail call i32 @gpt_sw_absolute_value(i32 noundef %4) #21, !dbg !3991
  call void @llvm.dbg.value(metadata i32 %10, metadata !3982, metadata !DIExpression()), !dbg !3983
  %11 = icmp ult i32 %10, %5, !dbg !3993
  br i1 %11, label %12, label %13, !dbg !3995

12:                                               ; preds = %9
  call void @llvm.dbg.value(metadata i32 %10, metadata !3981, metadata !DIExpression()), !dbg !3983
  store i32 %4, i32* %1, align 4, !dbg !3996
  br label %13, !dbg !3998

13:                                               ; preds = %3, %12, %9
  %14 = phi i32 [ %10, %12 ], [ %5, %9 ], [ %5, %3 ], !dbg !3983
  call void @llvm.dbg.value(metadata i32 %14, metadata !3981, metadata !DIExpression()), !dbg !3983
  %15 = add nuw nsw i32 %4, 1, !dbg !3999
  call void @llvm.dbg.value(metadata i32 %15, metadata !3980, metadata !DIExpression()), !dbg !3983
  %16 = icmp eq i32 %15, 32, !dbg !4000
  br i1 %16, label %17, label %3, !dbg !3984, !llvm.loop !4001

17:                                               ; preds = %13
  store i32 %14, i32* %0, align 4, !dbg !4003
  ret void, !dbg !4004
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @gpt_sw_absolute_value(i32 noundef %0) local_unnamed_addr #4 !dbg !4005 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4007, metadata !DIExpression()), !dbg !4011
  %2 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %0, i32 1, !dbg !4012
  %3 = load i32, i32* %2, align 4, !dbg !4012
  %4 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 2), align 4, !dbg !4012
  %5 = sub i32 %3, %4, !dbg !4012
  call void @llvm.dbg.value(metadata i32 %5, metadata !4008, metadata !DIExpression()), !dbg !4011
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4013
  %7 = sub i32 %6, %4, !dbg !4013
  call void @llvm.dbg.value(metadata i32 %7, metadata !4009, metadata !DIExpression()), !dbg !4011
  %8 = icmp ugt i32 %5, %7, !dbg !4014
  %9 = sub i32 %3, %6
  %10 = select i1 %8, i32 %9, i32 0, !dbg !4016
  call void @llvm.dbg.value(metadata i32 %10, metadata !4010, metadata !DIExpression()), !dbg !4011
  ret i32 %10, !dbg !4017
}

; Function Attrs: noinline nounwind optsize
define dso_local void @gpt_sw_handler(i8* nocapture noundef readnone %0) #0 !dbg !4018 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !4020, metadata !DIExpression()), !dbg !4024
  %4 = bitcast i32* %2 to i8*, !dbg !4025
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4), !dbg !4025
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4022, metadata !DIExpression()), !dbg !4026
  %5 = bitcast i32* %3 to i8*, !dbg !4027
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5), !dbg !4027
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4023, metadata !DIExpression()), !dbg !4028
  %6 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 3), align 4, !dbg !4029
  %7 = icmp eq i32 %6, 0, !dbg !4031
  br i1 %7, label %38, label %8, !dbg !4032

8:                                                ; preds = %1
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4033
  %9 = tail call i32 @hal_gpt_stop_timer(i32 noundef 3) #20, !dbg !4035
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 7), align 2, !dbg !4036
  %10 = load %struct.GPT_REGISTER_T*, %struct.GPT_REGISTER_T** getelementptr inbounds ([6 x %struct.GPT_REGISTER_T*], [6 x %struct.GPT_REGISTER_T*]* @gp_gpt, i32 0, i32 3), align 4, !dbg !4037
  %11 = tail call i32 @gpt_sw_get_current_time_ms(%struct.GPT_REGISTER_T* noundef %10) #21, !dbg !4038
  store volatile i32 %11, i32* %2, align 4, !dbg !4039
  %12 = load volatile i32, i32* %2, align 4, !dbg !4040
  %13 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4041
  %14 = add i32 %13, %12, !dbg !4041
  store i32 %14, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 1), align 4, !dbg !4041
  store i8 1, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4042
  call void @llvm.dbg.value(metadata i32 0, metadata !4021, metadata !DIExpression()), !dbg !4024
  br label %15, !dbg !4043

15:                                               ; preds = %8, %31
  %16 = phi i32 [ 0, %8 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !4021, metadata !DIExpression()), !dbg !4024
  %17 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 3, !dbg !4045
  %18 = load i8, i8* %17, align 1, !dbg !4045, !range !2765
  %19 = icmp eq i8 %18, 0, !dbg !4045
  br i1 %19, label %31, label %20, !dbg !4049

20:                                               ; preds = %15
  %21 = tail call i32 @gpt_sw_absolute_value(i32 noundef %16) #21, !dbg !4050
  store volatile i32 %21, i32* %3, align 4, !dbg !4052
  %22 = load volatile i32, i32* %3, align 4, !dbg !4053
  %23 = icmp eq i32 %22, 0, !dbg !4055
  br i1 %23, label %24, label %31, !dbg !4056

24:                                               ; preds = %20
  store i8 0, i8* %17, align 1, !dbg !4057
  %25 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4059
  %26 = add i32 %25, -1, !dbg !4059
  store i32 %26, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4059
  %27 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 0, !dbg !4060
  %28 = load void (i8*)*, void (i8*)** %27, align 4, !dbg !4060
  %29 = getelementptr inbounds %struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 0, i32 %16, i32 0, i32 1, !dbg !4061
  %30 = load i8*, i8** %29, align 4, !dbg !4061
  tail call void %28(i8* noundef %30) #20, !dbg !4062
  br label %31, !dbg !4063

31:                                               ; preds = %15, %24, %20
  %32 = add nuw nsw i32 %16, 1, !dbg !4064
  call void @llvm.dbg.value(metadata i32 %32, metadata !4021, metadata !DIExpression()), !dbg !4024
  %33 = icmp eq i32 %32, 32, !dbg !4065
  br i1 %33, label %34, label %15, !dbg !4043, !llvm.loop !4066

34:                                               ; preds = %31
  store i8 0, i8* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 6), align 1, !dbg !4068
  %35 = load i32, i32* getelementptr inbounds (%struct.gpt_sw_context_t, %struct.gpt_sw_context_t* @gpt_sw_context, i32 0, i32 4), align 4, !dbg !4069
  %36 = icmp eq i32 %35, 0, !dbg !4071
  br i1 %36, label %38, label %37, !dbg !4072

37:                                               ; preds = %34
  tail call void @gpt_sw_start_timer() #21, !dbg !4073
  br label %38, !dbg !4075

38:                                               ; preds = %34, %37, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5), !dbg !4076
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4), !dbg !4076
  ret void, !dbg !4076
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readnone
define dso_local i32 @is_pin_with_pullsel(i32 noundef %0) local_unnamed_addr #14 !dbg !4077 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4082, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.declare(metadata [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, metadata !4084, metadata !DIExpression()), !dbg !4086
  call void @llvm.dbg.value(metadata i32 0, metadata !4083, metadata !DIExpression()), !dbg !4085
  br label %5, !dbg !4087

2:                                                ; preds = %5
  %3 = add nuw nsw i32 %6, 1, !dbg !4089
  call void @llvm.dbg.value(metadata i32 %3, metadata !4083, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.value(metadata i32 %6, metadata !4083, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4085
  %4 = icmp eq i32 %3, 5, !dbg !4091
  br i1 %4, label %10, label %5, !dbg !4087, !llvm.loop !4092

5:                                                ; preds = %1, %2
  %6 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !4083, metadata !DIExpression()), !dbg !4085
  %7 = getelementptr inbounds [5 x i32], [5 x i32]* @__const.is_pin_with_pullsel.pin_number_with_pullsel, i32 0, i32 %6, !dbg !4094
  %8 = load i32, i32* %7, align 4, !dbg !4094
  %9 = icmp eq i32 %8, %0, !dbg !4097
  call void @llvm.dbg.value(metadata i32 %6, metadata !4083, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4085
  br i1 %9, label %10, label %2, !dbg !4098

10:                                               ; preds = %2, %5
  %11 = phi i32 [ 1, %5 ], [ 0, %2 ], !dbg !4085
  ret i32 %11, !dbg !4099
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_init(i32 noundef %0) local_unnamed_addr #10 !dbg !4100 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4105, metadata !DIExpression()), !dbg !4106
  ret i32 0, !dbg !4107
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_gpio_deinit(i32 noundef %0) local_unnamed_addr #10 !dbg !4108 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4110, metadata !DIExpression()), !dbg !4111
  ret i32 0, !dbg !4112
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_direction(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4113 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4117, metadata !DIExpression()), !dbg !4121
  call void @llvm.dbg.value(metadata i32 %1, metadata !4118, metadata !DIExpression()), !dbg !4121
  %3 = icmp ugt i32 %0, 48, !dbg !4122
  br i1 %3, label %13, label %4, !dbg !4124

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4125
  call void @llvm.dbg.value(metadata i32 %5, metadata !4119, metadata !DIExpression()), !dbg !4121
  %6 = and i32 %0, 31, !dbg !4126
  call void @llvm.dbg.value(metadata i32 %6, metadata !4120, metadata !DIExpression()), !dbg !4121
  %7 = icmp eq i32 %1, 0, !dbg !4127
  %8 = shl nuw i32 1, %6, !dbg !4129
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4129
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 2, !dbg !4130
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %5, i32 1, !dbg !4130
  %12 = select i1 %7, i32* %10, i32* %11, !dbg !4130
  store volatile i32 %8, i32* %12, align 4, !dbg !4129
  br label %13, !dbg !4131

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4121
  ret i32 %14, !dbg !4131
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_direction(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4132 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4137, metadata !DIExpression()), !dbg !4142
  call void @llvm.dbg.value(metadata i32* %1, metadata !4138, metadata !DIExpression()), !dbg !4142
  %3 = icmp ugt i32 %0, 48, !dbg !4143
  br i1 %3, label %15, label %4, !dbg !4145

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4146
  br i1 %5, label %15, label %6, !dbg !4148

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4149
  call void @llvm.dbg.value(metadata i32 %7, metadata !4139, metadata !DIExpression()), !dbg !4142
  %8 = and i32 %0, 31, !dbg !4150
  call void @llvm.dbg.value(metadata i32 %8, metadata !4140, metadata !DIExpression()), !dbg !4142
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4151
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 0, i32 %7, i32 0, !dbg !4152
  %11 = load volatile i32, i32* %10, align 4, !dbg !4152
  call void @llvm.dbg.value(metadata i32 %11, metadata !4141, metadata !DIExpression()), !dbg !4142
  %12 = shl nuw i32 1, %8, !dbg !4153
  %13 = and i32 %11, %12, !dbg !4154
  call void @llvm.dbg.value(metadata i32 %13, metadata !4141, metadata !DIExpression()), !dbg !4142
  %14 = lshr i32 %13, %8, !dbg !4155
  store i32 %14, i32* %1, align 4, !dbg !4156
  br label %15, !dbg !4157

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4142
  ret i32 %16, !dbg !4158
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_pinmux_set_function(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !4159 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4164, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i8 %1, metadata !4165, metadata !DIExpression()), !dbg !4169
  %3 = icmp ugt i32 %0, 48, !dbg !4170
  br i1 %3, label %18, label %4, !dbg !4172

4:                                                ; preds = %2
  %5 = icmp ugt i8 %1, 15, !dbg !4173
  br i1 %5, label %18, label %6, !dbg !4175

6:                                                ; preds = %4
  %7 = zext i8 %1 to i32, !dbg !4176
  %8 = lshr i32 %0, 3, !dbg !4177
  call void @llvm.dbg.value(metadata i32 %8, metadata !4166, metadata !DIExpression()), !dbg !4169
  call void @llvm.dbg.value(metadata i32 %0, metadata !4167, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4169
  %9 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4178
  call void @llvm.dbg.value(metadata i32 %9, metadata !4168, metadata !DIExpression()), !dbg !4169
  %10 = shl nuw nsw i32 %0, 2, !dbg !4179
  %11 = and i32 %10, 28, !dbg !4179
  %12 = shl nuw i32 15, %11, !dbg !4180
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4181
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 25, i32 %8, i32 2, !dbg !4182
  store volatile i32 %12, i32* %14, align 4, !dbg !4183
  %15 = shl nuw i32 %7, %11, !dbg !4184
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4185
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 25, i32 %8, i32 1, !dbg !4186
  store volatile i32 %15, i32* %17, align 4, !dbg !4187
  tail call void @restore_interrupt_mask(i32 noundef %9) #20, !dbg !4188
  br label %18, !dbg !4189

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4169
  ret i32 %19, !dbg !4190
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_input(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4191 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4196, metadata !DIExpression()), !dbg !4201
  call void @llvm.dbg.value(metadata i32* %1, metadata !4197, metadata !DIExpression()), !dbg !4201
  %3 = icmp ugt i32 %0, 48, !dbg !4202
  br i1 %3, label %15, label %4, !dbg !4204

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4205
  br i1 %5, label %15, label %6, !dbg !4207

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4208
  call void @llvm.dbg.value(metadata i32 %7, metadata !4198, metadata !DIExpression()), !dbg !4201
  %8 = and i32 %0, 31, !dbg !4209
  call void @llvm.dbg.value(metadata i32 %8, metadata !4199, metadata !DIExpression()), !dbg !4201
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4210
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 8, i32 %7, i32 0, !dbg !4211
  %11 = load volatile i32, i32* %10, align 4, !dbg !4211
  call void @llvm.dbg.value(metadata i32 %11, metadata !4200, metadata !DIExpression()), !dbg !4201
  %12 = shl nuw i32 1, %8, !dbg !4212
  %13 = and i32 %11, %12, !dbg !4213
  call void @llvm.dbg.value(metadata i32 %13, metadata !4200, metadata !DIExpression()), !dbg !4201
  %14 = lshr i32 %13, %8, !dbg !4214
  store i32 %14, i32* %1, align 4, !dbg !4215
  br label %15, !dbg !4216

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4201
  ret i32 %16, !dbg !4217
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_output(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4218 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4222, metadata !DIExpression()), !dbg !4226
  call void @llvm.dbg.value(metadata i32 %1, metadata !4223, metadata !DIExpression()), !dbg !4226
  %3 = icmp ugt i32 %0, 48, !dbg !4227
  br i1 %3, label %13, label %4, !dbg !4229

4:                                                ; preds = %2
  %5 = lshr i32 %0, 5, !dbg !4230
  call void @llvm.dbg.value(metadata i32 %5, metadata !4224, metadata !DIExpression()), !dbg !4226
  %6 = and i32 %0, 31, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %6, metadata !4225, metadata !DIExpression()), !dbg !4226
  %7 = icmp eq i32 %1, 0, !dbg !4232
  %8 = shl nuw i32 1, %6, !dbg !4234
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4234
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 1, !dbg !4235
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %5, i32 2, !dbg !4235
  %12 = select i1 %7, i32* %11, i32* %10, !dbg !4235
  store volatile i32 %8, i32* %12, align 4, !dbg !4234
  br label %13, !dbg !4236

13:                                               ; preds = %4, %2
  %14 = phi i32 [ -2, %2 ], [ 0, %4 ], !dbg !4226
  ret i32 %14, !dbg !4236
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_output(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4237 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4239, metadata !DIExpression()), !dbg !4244
  call void @llvm.dbg.value(metadata i32* %1, metadata !4240, metadata !DIExpression()), !dbg !4244
  %3 = icmp ugt i32 %0, 48, !dbg !4245
  br i1 %3, label %15, label %4, !dbg !4247

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4248
  br i1 %5, label %15, label %6, !dbg !4250

6:                                                ; preds = %4
  %7 = lshr i32 %0, 5, !dbg !4251
  call void @llvm.dbg.value(metadata i32 %7, metadata !4241, metadata !DIExpression()), !dbg !4244
  %8 = and i32 %0, 31, !dbg !4252
  call void @llvm.dbg.value(metadata i32 %8, metadata !4242, metadata !DIExpression()), !dbg !4244
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4253
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 6, i32 %7, i32 0, !dbg !4254
  %11 = load volatile i32, i32* %10, align 4, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %11, metadata !4243, metadata !DIExpression()), !dbg !4244
  %12 = shl nuw i32 1, %8, !dbg !4255
  %13 = and i32 %11, %12, !dbg !4256
  call void @llvm.dbg.value(metadata i32 %13, metadata !4243, metadata !DIExpression()), !dbg !4244
  %14 = lshr i32 %13, %8, !dbg !4257
  store i32 %14, i32* %1, align 4, !dbg !4258
  br label %15, !dbg !4259

15:                                               ; preds = %4, %2, %6
  %16 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4244
  ret i32 %16, !dbg !4260
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_toggle_pin(i32 noundef %0) local_unnamed_addr #2 !dbg !4261 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4263, metadata !DIExpression()), !dbg !4267
  %2 = icmp ugt i32 %0, 48, !dbg !4268
  br i1 %2, label %16, label %3, !dbg !4270

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4271
  call void @llvm.dbg.value(metadata i32 %4, metadata !4264, metadata !DIExpression()), !dbg !4267
  %5 = and i32 %0, 31, !dbg !4272
  call void @llvm.dbg.value(metadata i32 %5, metadata !4265, metadata !DIExpression()), !dbg !4267
  %6 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4273
  %7 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 0, !dbg !4274
  %8 = load volatile i32, i32* %7, align 4, !dbg !4274
  call void @llvm.dbg.value(metadata i32 %8, metadata !4266, metadata !DIExpression()), !dbg !4267
  %9 = shl nuw i32 1, %5, !dbg !4275
  %10 = and i32 %8, %9, !dbg !4276
  call void @llvm.dbg.value(metadata i32 %10, metadata !4266, metadata !DIExpression()), !dbg !4267
  %11 = lshr i32 %10, %5, !dbg !4277
  %12 = icmp eq i32 %11, 0, !dbg !4277
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 2, !dbg !4279
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %6, i32 0, i32 6, i32 %4, i32 1, !dbg !4279
  %15 = select i1 %12, i32* %14, i32* %13, !dbg !4279
  store volatile i32 %9, i32* %15, align 4, !dbg !4280
  br label %16, !dbg !4281

16:                                               ; preds = %3, %1
  %17 = phi i32 [ -2, %1 ], [ 0, %3 ], !dbg !4267
  ret i32 %17, !dbg !4281
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_enable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4282 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4284, metadata !DIExpression()), !dbg !4287
  %2 = icmp ugt i32 %0, 48, !dbg !4288
  br i1 %2, label %9, label %3, !dbg !4290

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4291
  call void @llvm.dbg.value(metadata i32 %4, metadata !4285, metadata !DIExpression()), !dbg !4287
  %5 = and i32 %0, 31, !dbg !4292
  call void @llvm.dbg.value(metadata i32 %5, metadata !4286, metadata !DIExpression()), !dbg !4287
  %6 = shl nuw i32 1, %5, !dbg !4293
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4294
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 1, !dbg !4295
  store volatile i32 %6, i32* %8, align 4, !dbg !4296
  br label %9, !dbg !4297

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4287
  ret i32 %10, !dbg !4298
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_inversion(i32 noundef %0) local_unnamed_addr #2 !dbg !4299 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4301, metadata !DIExpression()), !dbg !4304
  %2 = icmp ugt i32 %0, 48, !dbg !4305
  br i1 %2, label %9, label %3, !dbg !4307

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4308
  call void @llvm.dbg.value(metadata i32 %4, metadata !4302, metadata !DIExpression()), !dbg !4304
  %5 = and i32 %0, 31, !dbg !4309
  call void @llvm.dbg.value(metadata i32 %5, metadata !4303, metadata !DIExpression()), !dbg !4304
  %6 = shl nuw i32 1, %5, !dbg !4310
  %7 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4311
  %8 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %7, i32 0, i32 4, i32 %4, i32 2, !dbg !4312
  store volatile i32 %6, i32* %8, align 4, !dbg !4313
  br label %9, !dbg !4314

9:                                                ; preds = %1, %3
  %10 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !4304
  ret i32 %10, !dbg !4315
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_up(i32 noundef %0) local_unnamed_addr #2 !dbg !4316 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4318, metadata !DIExpression()), !dbg !4321
  %2 = icmp ugt i32 %0, 48, !dbg !4322
  br i1 %2, label %14, label %3, !dbg !4324

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4325
  %5 = icmp eq i32 %4, 0, !dbg !4325
  br i1 %5, label %14, label %6, !dbg !4326

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4327
  call void @llvm.dbg.value(metadata i32 %7, metadata !4319, metadata !DIExpression()), !dbg !4321
  %8 = and i32 %0, 31, !dbg !4328
  call void @llvm.dbg.value(metadata i32 %8, metadata !4320, metadata !DIExpression()), !dbg !4321
  %9 = shl nuw i32 1, %8, !dbg !4329
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4330
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4331
  store volatile i32 %9, i32* %11, align 4, !dbg !4332
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4333
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 1, !dbg !4334
  store volatile i32 %9, i32* %13, align 4, !dbg !4335
  br label %14, !dbg !4336

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4321
  ret i32 %15, !dbg !4337
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_pull_down(i32 noundef %0) local_unnamed_addr #2 !dbg !4338 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4340, metadata !DIExpression()), !dbg !4343
  %2 = icmp ugt i32 %0, 48, !dbg !4344
  br i1 %2, label %14, label %3, !dbg !4346

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4347
  %5 = icmp eq i32 %4, 0, !dbg !4347
  br i1 %5, label %14, label %6, !dbg !4348

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4349
  call void @llvm.dbg.value(metadata i32 %7, metadata !4341, metadata !DIExpression()), !dbg !4343
  %8 = and i32 %0, 31, !dbg !4350
  call void @llvm.dbg.value(metadata i32 %8, metadata !4342, metadata !DIExpression()), !dbg !4343
  %9 = shl nuw i32 1, %8, !dbg !4351
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4352
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 1, !dbg !4353
  store volatile i32 %9, i32* %11, align 4, !dbg !4354
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4355
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 10, i32 %7, i32 2, !dbg !4356
  store volatile i32 %9, i32* %13, align 4, !dbg !4357
  br label %14, !dbg !4358

14:                                               ; preds = %1, %3, %6
  %15 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4343
  ret i32 %15, !dbg !4359
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_disable_pull(i32 noundef %0) local_unnamed_addr #2 !dbg !4360 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4362, metadata !DIExpression()), !dbg !4365
  %2 = icmp ugt i32 %0, 48, !dbg !4366
  br i1 %2, label %12, label %3, !dbg !4368

3:                                                ; preds = %1
  %4 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4369
  %5 = icmp eq i32 %4, 0, !dbg !4369
  br i1 %5, label %12, label %6, !dbg !4370

6:                                                ; preds = %3
  %7 = lshr i32 %0, 5, !dbg !4371
  call void @llvm.dbg.value(metadata i32 %7, metadata !4363, metadata !DIExpression()), !dbg !4365
  %8 = and i32 %0, 31, !dbg !4372
  call void @llvm.dbg.value(metadata i32 %8, metadata !4364, metadata !DIExpression()), !dbg !4365
  %9 = shl nuw i32 1, %8, !dbg !4373
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4374
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 2, i32 %7, i32 2, !dbg !4375
  store volatile i32 %9, i32* %11, align 4, !dbg !4376
  br label %12, !dbg !4377

12:                                               ; preds = %1, %3, %6
  %13 = phi i32 [ 0, %6 ], [ -2, %3 ], [ -2, %1 ], !dbg !4365
  ret i32 %13, !dbg !4378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_clockout(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4379 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4385, metadata !DIExpression()), !dbg !4387
  call void @llvm.dbg.value(metadata i32 %1, metadata !4386, metadata !DIExpression()), !dbg !4387
  %3 = icmp ugt i32 %0, 5, !dbg !4388
  br i1 %3, label %7, label %4, !dbg !4390

4:                                                ; preds = %2
  %5 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4391
  %6 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %5, i32 0, i32 29, i32 %0, i32 0, !dbg !4392
  store volatile i32 %1, i32* %6, align 4, !dbg !4393
  br label %7, !dbg !4394

7:                                                ; preds = %2, %4
  %8 = phi i32 [ 0, %4 ], [ -1, %2 ], !dbg !4387
  ret i32 %8, !dbg !4395
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_pupd_register(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !4396 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4400, metadata !DIExpression()), !dbg !4406
  call void @llvm.dbg.value(metadata i8 %1, metadata !4401, metadata !DIExpression()), !dbg !4406
  call void @llvm.dbg.value(metadata i8 %2, metadata !4402, metadata !DIExpression()), !dbg !4406
  call void @llvm.dbg.value(metadata i8 %3, metadata !4403, metadata !DIExpression()), !dbg !4406
  %5 = icmp ugt i32 %0, 48, !dbg !4407
  br i1 %5, label %30, label %6, !dbg !4409

6:                                                ; preds = %4
  %7 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4410
  %8 = icmp eq i32 %7, 0, !dbg !4410
  br i1 %8, label %9, label %30, !dbg !4411

9:                                                ; preds = %6
  %10 = lshr i32 %0, 5, !dbg !4412
  call void @llvm.dbg.value(metadata i32 %10, metadata !4404, metadata !DIExpression()), !dbg !4406
  %11 = and i32 %0, 31, !dbg !4413
  call void @llvm.dbg.value(metadata i32 %11, metadata !4405, metadata !DIExpression()), !dbg !4406
  %12 = icmp eq i8 %1, 0, !dbg !4414
  %13 = shl nuw i32 1, %11, !dbg !4416
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4416
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 2, !dbg !4417
  %16 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 20, i32 %10, i32 1, !dbg !4417
  %17 = select i1 %12, i32* %15, i32* %16, !dbg !4417
  store volatile i32 %13, i32* %17, align 4, !dbg !4416
  %18 = icmp eq i8 %2, 0, !dbg !4418
  %19 = shl nuw i32 1, %11, !dbg !4420
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4420
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 2, !dbg !4421
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 22, i32 %10, i32 1, !dbg !4421
  %23 = select i1 %18, i32* %21, i32* %22, !dbg !4421
  store volatile i32 %19, i32* %23, align 4, !dbg !4420
  %24 = icmp eq i8 %3, 0, !dbg !4422
  %25 = shl nuw i32 1, %11, !dbg !4424
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4424
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 1, !dbg !4425
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %10, i32 2, !dbg !4425
  %29 = select i1 %24, i32* %28, i32* %27, !dbg !4425
  store volatile i32 %25, i32* %29, align 4, !dbg !4424
  br label %30, !dbg !4426

30:                                               ; preds = %9, %4, %6
  %31 = phi i32 [ -2, %6 ], [ -2, %4 ], [ 0, %9 ], !dbg !4406
  ret i32 %31, !dbg !4426
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4429, metadata !DIExpression()), !dbg !4436
  %2 = icmp ugt i32 %0, 48, !dbg !4437
  br i1 %2, label %40, label %3, !dbg !4439

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4440
  call void @llvm.dbg.value(metadata i32 %4, metadata !4430, metadata !DIExpression()), !dbg !4436
  %5 = and i32 %0, 31, !dbg !4441
  call void @llvm.dbg.value(metadata i32 %5, metadata !4433, metadata !DIExpression()), !dbg !4436
  %6 = lshr i32 %0, 4, !dbg !4442
  call void @llvm.dbg.value(metadata i32 %6, metadata !4431, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata i32 %0, metadata !4434, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4436
  %7 = lshr i32 %0, 3, !dbg !4443
  call void @llvm.dbg.value(metadata i32 %7, metadata !4432, metadata !DIExpression()), !dbg !4436
  call void @llvm.dbg.value(metadata i32 %0, metadata !4435, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4436
  %8 = shl nuw nsw i32 %0, 2, !dbg !4444
  %9 = and i32 %8, 28, !dbg !4444
  %10 = shl nuw i32 15, %9, !dbg !4445
  %11 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4446
  %12 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %11, i32 0, i32 25, i32 %7, i32 2, !dbg !4447
  store volatile i32 %10, i32* %12, align 4, !dbg !4448
  %13 = shl nuw i32 1, %5, !dbg !4449
  %14 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4450
  %15 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %14, i32 0, i32 0, i32 %4, i32 2, !dbg !4451
  store volatile i32 %13, i32* %15, align 4, !dbg !4452
  %16 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4453
  %17 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %16, i32 0, i32 18, i32 %4, i32 2, !dbg !4454
  store volatile i32 %13, i32* %17, align 4, !dbg !4455
  %18 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4456
  %19 = icmp eq i32 %18, 0, !dbg !4456
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4458
  br i1 %19, label %23, label %21, !dbg !4459

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 2, i32 %4, i32 2, !dbg !4460
  br label %29, !dbg !4462

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 20, i32 %4, i32 2, !dbg !4463
  store volatile i32 %13, i32* %24, align 4, !dbg !4465
  %25 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4466
  %26 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %25, i32 0, i32 22, i32 %4, i32 2, !dbg !4467
  store volatile i32 %13, i32* %26, align 4, !dbg !4468
  %27 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4469
  %28 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %27, i32 0, i32 23, i32 %4, i32 2, !dbg !4470
  br label %29

29:                                               ; preds = %23, %21
  %30 = phi i32* [ %28, %23 ], [ %22, %21 ]
  store volatile i32 %13, i32* %30, align 4, !dbg !4458
  %31 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4471
  %32 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %31, i32 0, i32 12, i32 %4, i32 2, !dbg !4472
  store volatile i32 %13, i32* %32, align 4, !dbg !4473
  %33 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4474
  %34 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %33, i32 0, i32 14, i32 %4, i32 2, !dbg !4475
  store volatile i32 %13, i32* %34, align 4, !dbg !4476
  %35 = shl nuw nsw i32 %0, 1, !dbg !4477
  %36 = and i32 %35, 30, !dbg !4477
  %37 = shl nuw i32 3, %36, !dbg !4478
  %38 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4479
  %39 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %38, i32 0, i32 27, i32 %6, i32 2, !dbg !4480
  store volatile i32 %37, i32* %39, align 4, !dbg !4481
  br label %40, !dbg !4482

40:                                               ; preds = %1, %29
  %41 = phi i32 [ 0, %29 ], [ -2, %1 ], !dbg !4436
  ret i32 %41, !dbg !4483
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_clear_high_impedance(i32 noundef %0) local_unnamed_addr #2 !dbg !4484 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4486, metadata !DIExpression()), !dbg !4491
  %2 = icmp ugt i32 %0, 48, !dbg !4492
  br i1 %2, label %34, label %3, !dbg !4494

3:                                                ; preds = %1
  %4 = lshr i32 %0, 5, !dbg !4495
  call void @llvm.dbg.value(metadata i32 %4, metadata !4487, metadata !DIExpression()), !dbg !4491
  %5 = and i32 %0, 31, !dbg !4496
  call void @llvm.dbg.value(metadata i32 %5, metadata !4489, metadata !DIExpression()), !dbg !4491
  %6 = lshr i32 %0, 3, !dbg !4497
  call void @llvm.dbg.value(metadata i32 %6, metadata !4488, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata i32 %0, metadata !4490, metadata !DIExpression(DW_OP_constu, 7, DW_OP_and, DW_OP_stack_value)), !dbg !4491
  %7 = shl nuw nsw i32 %0, 2, !dbg !4498
  %8 = and i32 %7, 28, !dbg !4498
  %9 = shl nuw i32 15, %8, !dbg !4499
  %10 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4500
  %11 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %10, i32 0, i32 25, i32 %6, i32 2, !dbg !4501
  store volatile i32 %9, i32* %11, align 4, !dbg !4502
  %12 = shl nuw i32 1, %5, !dbg !4503
  %13 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4504
  %14 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %13, i32 0, i32 0, i32 %4, i32 2, !dbg !4505
  store volatile i32 %12, i32* %14, align 4, !dbg !4506
  %15 = tail call i32 @is_pin_with_pullsel(i32 noundef %0) #21, !dbg !4507
  %16 = icmp eq i32 %15, 0, !dbg !4507
  %17 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4509
  br i1 %16, label %22, label %18, !dbg !4510

18:                                               ; preds = %3
  %19 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 2, i32 %4, i32 1, !dbg !4511
  store volatile i32 %12, i32* %19, align 4, !dbg !4513
  %20 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4514
  %21 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %20, i32 0, i32 10, i32 %4, i32 2, !dbg !4515
  br label %28, !dbg !4516

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %17, i32 0, i32 20, i32 %4, i32 1, !dbg !4517
  store volatile i32 %12, i32* %23, align 4, !dbg !4519
  %24 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4520
  %25 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %24, i32 0, i32 22, i32 %4, i32 1, !dbg !4521
  store volatile i32 %12, i32* %25, align 4, !dbg !4522
  %26 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4523
  %27 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %26, i32 0, i32 23, i32 %4, i32 1, !dbg !4524
  br label %28

28:                                               ; preds = %22, %18
  %29 = phi i32* [ %27, %22 ], [ %21, %18 ]
  store volatile i32 %12, i32* %29, align 4, !dbg !4509
  %30 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4525
  %31 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %30, i32 0, i32 18, i32 %4, i32 1, !dbg !4526
  store volatile i32 %12, i32* %31, align 4, !dbg !4527
  %32 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4528
  %33 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %32, i32 0, i32 14, i32 %4, i32 1, !dbg !4529
  store volatile i32 %12, i32* %33, align 4, !dbg !4530
  br label %34, !dbg !4531

34:                                               ; preds = %1, %28
  %35 = phi i32 [ 0, %28 ], [ -2, %1 ], !dbg !4491
  ret i32 %35, !dbg !4532
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_gpio_set_driving_current(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !4533 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4537, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i32 %1, metadata !4538, metadata !DIExpression()), !dbg !4541
  %3 = icmp ugt i32 %0, 48, !dbg !4542
  br i1 %3, label %14, label %4, !dbg !4544

4:                                                ; preds = %2
  %5 = lshr i32 %0, 4, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %5, metadata !4539, metadata !DIExpression()), !dbg !4541
  call void @llvm.dbg.value(metadata i32 %0, metadata !4540, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4541
  %6 = shl nuw nsw i32 %0, 1, !dbg !4546
  %7 = and i32 %6, 30, !dbg !4546
  %8 = shl nuw i32 3, %7, !dbg !4547
  %9 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4548
  %10 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %9, i32 0, i32 16, i32 %5, i32 2, !dbg !4549
  store volatile i32 %8, i32* %10, align 4, !dbg !4550
  %11 = shl i32 %1, %7, !dbg !4551
  %12 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4552
  %13 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %12, i32 0, i32 16, i32 %5, i32 1, !dbg !4553
  store volatile i32 %11, i32* %13, align 4, !dbg !4554
  br label %14, !dbg !4555

14:                                               ; preds = %2, %4
  %15 = phi i32 [ 0, %4 ], [ -2, %2 ], !dbg !4541
  ret i32 %15, !dbg !4556
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_gpio_get_driving_current(i32 noundef %0, i32* noundef writeonly %1) local_unnamed_addr #11 !dbg !4557 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4562, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32* %1, metadata !4563, metadata !DIExpression()), !dbg !4567
  %3 = icmp ugt i32 %0, 48, !dbg !4568
  br i1 %3, label %18, label %4, !dbg !4570

4:                                                ; preds = %2
  %5 = icmp eq i32* %1, null, !dbg !4571
  br i1 %5, label %18, label %6, !dbg !4573

6:                                                ; preds = %4
  %7 = lshr i32 %0, 4, !dbg !4574
  call void @llvm.dbg.value(metadata i32 %7, metadata !4564, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.value(metadata i32 %0, metadata !4565, metadata !DIExpression(DW_OP_constu, 15, DW_OP_and, DW_OP_stack_value)), !dbg !4567
  %8 = load %struct.GPIO_REGISTER_T*, %struct.GPIO_REGISTER_T** @gpio_register_base, align 4, !dbg !4575
  %9 = getelementptr inbounds %struct.GPIO_REGISTER_T, %struct.GPIO_REGISTER_T* %8, i32 0, i32 16, i32 %7, i32 0, !dbg !4576
  %10 = load volatile i32, i32* %9, align 4, !dbg !4576
  call void @llvm.dbg.value(metadata i32 %10, metadata !4566, metadata !DIExpression()), !dbg !4567
  %11 = shl nuw nsw i32 %0, 1, !dbg !4577
  %12 = and i32 %11, 30, !dbg !4577
  %13 = shl nuw i32 3, %12, !dbg !4578
  %14 = and i32 %10, %13, !dbg !4579
  call void @llvm.dbg.value(metadata i32 %14, metadata !4566, metadata !DIExpression()), !dbg !4567
  %15 = lshr i32 %14, %12, !dbg !4580
  call void @llvm.dbg.value(metadata i32 %15, metadata !4566, metadata !DIExpression()), !dbg !4567
  %16 = shl i32 %15, 2, !dbg !4581
  %17 = add i32 %16, 4, !dbg !4581
  store i32 %17, i32* %1, align 4, !dbg !4582
  br label %18, !dbg !4583

18:                                               ; preds = %4, %2, %6
  %19 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !4567
  ret i32 %19, !dbg !4584
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_receive_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4585 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4589, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i1 %1, metadata !4590, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4654
  %4 = bitcast i32* %3 to i8*, !dbg !4655
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4655
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4656
  %6 = load volatile i32, i32* %5, align 4, !dbg !4656
  %7 = icmp eq i32 %6, 2, !dbg !4658
  br i1 %7, label %9, label %8, !dbg !4659

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 156, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4660
  unreachable, !dbg !4660

9:                                                ; preds = %2
  %10 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4662
  %11 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %10, align 4, !dbg !4662
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %11, metadata !4596, metadata !DIExpression()), !dbg !4654
  %12 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4663
  call void @llvm.dbg.value(metadata i32 %12, metadata !4591, metadata !DIExpression()), !dbg !4654
  br i1 %1, label %13, label %14, !dbg !4664

13:                                               ; preds = %9
  tail call void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %11) #20, !dbg !4665
  br label %14, !dbg !4668

14:                                               ; preds = %13, %9
  call void @llvm.dbg.value(metadata i32* %3, metadata !4593, metadata !DIExpression(DW_OP_deref)), !dbg !4654
  %15 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4669
  call void @llvm.dbg.value(metadata i32 %15, metadata !4652, metadata !DIExpression()), !dbg !4654
  %16 = icmp eq i32 %15, 0, !dbg !4670
  br i1 %16, label %18, label %17, !dbg !4672

17:                                               ; preds = %14
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 169, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4673
  unreachable, !dbg !4673

18:                                               ; preds = %14
  %19 = load i32, i32* %3, align 4, !dbg !4675
  call void @llvm.dbg.value(metadata i32 %19, metadata !4593, metadata !DIExpression()), !dbg !4654
  %20 = icmp eq i32 %19, 0, !dbg !4677
  br i1 %20, label %43, label %21, !dbg !4678

21:                                               ; preds = %18
  %22 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4679
  %23 = load void (i32, i8*)*, void (i32, i8*)** %22, align 4, !dbg !4679
  call void @llvm.dbg.value(metadata void (i32, i8*)* %23, metadata !4594, metadata !DIExpression()), !dbg !4654
  call void @llvm.dbg.value(metadata i8* undef, metadata !4595, metadata !DIExpression()), !dbg !4654
  %24 = icmp eq void (i32, i8*)* %23, null, !dbg !4680
  br i1 %24, label %25, label %26, !dbg !4682

25:                                               ; preds = %21
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 179, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4683
  unreachable, !dbg !4683

26:                                               ; preds = %21
  %27 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4685
  %28 = load i8*, i8** %27, align 4, !dbg !4685
  call void @llvm.dbg.value(metadata i8* %28, metadata !4595, metadata !DIExpression()), !dbg !4654
  %29 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4686
  call void %23(i32 noundef 1, i8* noundef %28) #20, !dbg !4687
  %30 = call i32 @vdma_enable_interrupt(i32 noundef %12) #20, !dbg !4688
  call void @llvm.dbg.value(metadata i32* %3, metadata !4593, metadata !DIExpression(DW_OP_deref)), !dbg !4654
  %31 = call i32 @vdma_get_available_receive_bytes(i32 noundef %12, i32* noundef nonnull %3) #20, !dbg !4689
  call void @llvm.dbg.value(metadata i32 %31, metadata !4652, metadata !DIExpression()), !dbg !4654
  %32 = icmp eq i32 %31, 0, !dbg !4690
  br i1 %32, label %34, label %33, !dbg !4692

33:                                               ; preds = %26
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 189, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4693
  unreachable, !dbg !4693

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4, !dbg !4695
  call void @llvm.dbg.value(metadata i32 %35, metadata !4593, metadata !DIExpression()), !dbg !4654
  %36 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !4697
  %37 = load i32, i32* %36, align 4, !dbg !4697
  %38 = icmp ult i32 %35, %37, !dbg !4698
  br i1 %38, label %43, label %39, !dbg !4699

39:                                               ; preds = %34
  %40 = call i32 @vdma_disable_interrupt(i32 noundef %12) #20, !dbg !4700
  call void @llvm.dbg.value(metadata i32 %40, metadata !4652, metadata !DIExpression()), !dbg !4654
  %41 = icmp eq i32 %40, 0, !dbg !4702
  br i1 %41, label %43, label %42, !dbg !4704

42:                                               ; preds = %39
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 195, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.uart_receive_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4705
  unreachable, !dbg !4705

43:                                               ; preds = %34, %39, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4707
  ret void, !dbg !4707
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_receive_bytes(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_disable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_enable_interrupt(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_send_handler(i32 noundef %0, i1 noundef zeroext %1) local_unnamed_addr #0 !dbg !4708 {
  %3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !4710, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.value(metadata i1 %1, metadata !4711, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !4718
  %4 = bitcast i32* %3 to i8*, !dbg !4719
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4719
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4720
  %6 = load volatile i32, i32* %5, align 4, !dbg !4720
  %7 = icmp eq i32 %6, 2, !dbg !4722
  br i1 %7, label %9, label %8, !dbg !4723

8:                                                ; preds = %2
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 222, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4724
  unreachable, !dbg !4724

9:                                                ; preds = %2
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4726
  call void @llvm.dbg.value(metadata i32 %10, metadata !4712, metadata !DIExpression()), !dbg !4718
  br i1 %1, label %36, label %11, !dbg !4727

11:                                               ; preds = %9
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4728
  %13 = load void (i32, i8*)*, void (i32, i8*)** %12, align 4, !dbg !4728
  call void @llvm.dbg.value(metadata void (i32, i8*)* %13, metadata !4716, metadata !DIExpression()), !dbg !4718
  call void @llvm.dbg.value(metadata i8* undef, metadata !4717, metadata !DIExpression()), !dbg !4718
  %14 = icmp eq void (i32, i8*)* %13, null, !dbg !4731
  br i1 %14, label %15, label %16, !dbg !4733

15:                                               ; preds = %11
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 256, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4734
  unreachable, !dbg !4734

16:                                               ; preds = %11
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4736
  %18 = load i8*, i8** %17, align 4, !dbg !4736
  call void @llvm.dbg.value(metadata i8* %18, metadata !4717, metadata !DIExpression()), !dbg !4718
  %19 = tail call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4737
  tail call void %13(i32 noundef 2, i8* noundef %18) #20, !dbg !4738
  %20 = tail call i32 @vdma_enable_interrupt(i32 noundef %10) #20, !dbg !4739
  call void @llvm.dbg.value(metadata i32* %3, metadata !4715, metadata !DIExpression(DW_OP_deref)), !dbg !4718
  %21 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %3) #20, !dbg !4740
  call void @llvm.dbg.value(metadata i32 %21, metadata !4713, metadata !DIExpression()), !dbg !4718
  %22 = icmp eq i32 %21, 0, !dbg !4741
  br i1 %22, label %24, label %23, !dbg !4743

23:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 266, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4744
  unreachable, !dbg !4744

24:                                               ; preds = %16
  %25 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !4746
  %26 = load i32, i32* %25, align 4, !dbg !4746
  %27 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !4747
  %28 = load i32, i32* %27, align 4, !dbg !4747
  %29 = sub i32 %26, %28, !dbg !4748
  call void @llvm.dbg.value(metadata i32 %29, metadata !4714, metadata !DIExpression()), !dbg !4718
  %30 = load i32, i32* %3, align 4, !dbg !4749
  call void @llvm.dbg.value(metadata i32 %30, metadata !4715, metadata !DIExpression()), !dbg !4718
  %31 = icmp ult i32 %30, %29, !dbg !4751
  br i1 %31, label %36, label %32, !dbg !4752

32:                                               ; preds = %24
  %33 = call i32 @vdma_disable_interrupt(i32 noundef %10) #20, !dbg !4753
  call void @llvm.dbg.value(metadata i32 %33, metadata !4713, metadata !DIExpression()), !dbg !4718
  %34 = icmp eq i32 %33, 0, !dbg !4755
  br i1 %34, label %36, label %35, !dbg !4757

35:                                               ; preds = %32
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 274, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.uart_send_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4758
  unreachable, !dbg !4758

36:                                               ; preds = %24, %32, %9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #22, !dbg !4760
  ret void, !dbg !4760
}

; Function Attrs: optsize
declare dso_local i32 @vdma_get_available_send_space(i32 noundef, i32* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_error_handler(i32 noundef %0) local_unnamed_addr #0 !dbg !4761 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4765, metadata !DIExpression()), !dbg !4769
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4770
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !4770
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !4766, metadata !DIExpression()), !dbg !4769
  %4 = tail call i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !4771
  %5 = icmp eq i32 %4, 0, !dbg !4771
  br i1 %5, label %6, label %14, !dbg !4773

6:                                                ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 1) #20, !dbg !4774
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %3, i32 noundef 0) #20, !dbg !4776
  %7 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !4777
  %8 = load void (i32, i8*)*, void (i32, i8*)** %7, align 4, !dbg !4777
  call void @llvm.dbg.value(metadata void (i32, i8*)* %8, metadata !4767, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.value(metadata i8* undef, metadata !4768, metadata !DIExpression()), !dbg !4769
  %9 = icmp eq void (i32, i8*)* %8, null, !dbg !4778
  br i1 %9, label %10, label %11, !dbg !4780

10:                                               ; preds = %6
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 296, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.uart_error_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4781
  unreachable, !dbg !4781

11:                                               ; preds = %6
  %12 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !4783
  %13 = load i8*, i8** %12, align 4, !dbg !4783
  call void @llvm.dbg.value(metadata i8* %13, metadata !4768, metadata !DIExpression()), !dbg !4769
  tail call void %8(i32 noundef -1, i8* noundef %13) #20, !dbg !4784
  br label %14, !dbg !4785

14:                                               ; preds = %11, %1
  ret void, !dbg !4786
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !4787 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4793, metadata !DIExpression()), !dbg !4798
  call void @llvm.dbg.value(metadata i32 %1, metadata !4794, metadata !DIExpression()), !dbg !4798
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4799
  br i1 %3, label %4, label %16, !dbg !4801

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %1) #21, !dbg !4802
  br i1 %5, label %6, label %16, !dbg !4803

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4804
  %8 = load volatile i32, i32* %7, align 4, !dbg !4804
  %9 = icmp eq i32 %8, 0, !dbg !4806
  br i1 %9, label %16, label %10, !dbg !4807

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4808
  call void @llvm.dbg.value(metadata i32 %11, metadata !4796, metadata !DIExpression()), !dbg !4798
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4809
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4810
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4810
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4797, metadata !DIExpression()), !dbg !4798
  %14 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %1, !dbg !4811
  %15 = load i32, i32* %14, align 4, !dbg !4811
  call void @llvm.dbg.value(metadata i32 %15, metadata !4795, metadata !DIExpression()), !dbg !4798
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %13, i32 noundef %15) #20, !dbg !4812
  br label %16, !dbg !4813

16:                                               ; preds = %6, %2, %4, %10
  %17 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4798
  ret i32 %17, !dbg !4814
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4815 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4819, metadata !DIExpression()), !dbg !4820
  %2 = icmp ult i32 %0, 4, !dbg !4821
  ret i1 %2, !dbg !4822
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @uart_baudrate_is_valid(i32 noundef %0) unnamed_addr #10 !dbg !4823 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4827, metadata !DIExpression()), !dbg !4828
  %2 = icmp ult i32 %0, 13, !dbg !4829
  ret i1 %2, !dbg !4830
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_format(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4847, metadata !DIExpression()), !dbg !4851
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4848, metadata !DIExpression()), !dbg !4851
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4852
  br i1 %3, label %4, label %23, !dbg !4854

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4855
  br i1 %5, label %6, label %23, !dbg !4856

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4857
  %8 = load volatile i32, i32* %7, align 4, !dbg !4857
  %9 = icmp eq i32 %8, 0, !dbg !4859
  br i1 %9, label %23, label %10, !dbg !4860

10:                                               ; preds = %6
  %11 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4861
  call void @llvm.dbg.value(metadata i32 %11, metadata !4849, metadata !DIExpression()), !dbg !4851
  tail call void @restore_interrupt_mask(i32 noundef %11) #20, !dbg !4862
  %12 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4863
  %13 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %12, align 4, !dbg !4863
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %13, metadata !4850, metadata !DIExpression()), !dbg !4851
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4864
  %15 = load i32, i32* %14, align 4, !dbg !4864
  %16 = tail call i32 @hal_uart_set_baudrate(i32 noundef %0, i32 noundef %15) #21, !dbg !4865
  %17 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4866
  %18 = load i32, i32* %17, align 4, !dbg !4866
  %19 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4867
  %20 = load i32, i32* %19, align 4, !dbg !4867
  %21 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4868
  %22 = load i32, i32* %21, align 4, !dbg !4868
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %13, i32 noundef %18, i32 noundef %20, i32 noundef %22) #20, !dbg !4869
  br label %23, !dbg !4870

23:                                               ; preds = %6, %2, %4, %10
  %24 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -4, %2 ], [ -2, %6 ], !dbg !4851
  ret i32 %24, !dbg !4871
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !4872 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !4876, metadata !DIExpression()), !dbg !4877
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 0, !dbg !4878
  %3 = load i32, i32* %2, align 4, !dbg !4878
  %4 = icmp ult i32 %3, 13, !dbg !4879
  br i1 %4, label %5, label %17, !dbg !4880

5:                                                ; preds = %1
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !4881
  %7 = load i32, i32* %6, align 4, !dbg !4881
  %8 = icmp ult i32 %7, 4, !dbg !4882
  br i1 %8, label %9, label %17, !dbg !4883

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !4884
  %11 = load i32, i32* %10, align 4, !dbg !4884
  %12 = icmp ult i32 %11, 2, !dbg !4885
  br i1 %12, label %13, label %17, !dbg !4886

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !4887
  %15 = load i32, i32* %14, align 4, !dbg !4887
  %16 = icmp ult i32 %15, 3, !dbg !4888
  br label %17

17:                                               ; preds = %13, %9, %5, %1
  %18 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %16, %13 ], !dbg !4877
  ret i1 %18, !dbg !4889
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !4890 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4895, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !4896, metadata !DIExpression()), !dbg !4903
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4904
  br i1 %3, label %4, label %41, !dbg !4906

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @uart_config_is_valid(%struct.hal_uart_config_t* noundef %1) #21, !dbg !4907
  br i1 %5, label %6, label %41, !dbg !4908

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4909
  call void @llvm.dbg.value(metadata i32 %7, metadata !4900, metadata !DIExpression()), !dbg !4903
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4910
  %9 = load volatile i32, i32* %8, align 4, !dbg !4910
  %10 = icmp eq i32 %9, 0, !dbg !4912
  br i1 %10, label %12, label %11, !dbg !4913

11:                                               ; preds = %6
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4914
  br label %41, !dbg !4916

12:                                               ; preds = %6
  %13 = load i1, i1* @g_uart_global_data_initialized, align 1, !dbg !4917
  br i1 %13, label %22, label %14, !dbg !4919

14:                                               ; preds = %12, %14
  %15 = phi i32 [ %19, %14 ], [ 0, %12 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !4898, metadata !DIExpression()), !dbg !4903
  %16 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %15, !dbg !4920
  store volatile i32 0, i32* %16, align 4, !dbg !4925
  %17 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 1, !dbg !4926
  store i8* null, i8** %17, align 4, !dbg !4927
  %18 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %15, i32 0, !dbg !4928
  store void (i32, i8*)* null, void (i32, i8*)** %18, align 4, !dbg !4929
  %19 = add nuw nsw i32 %15, 1, !dbg !4930
  call void @llvm.dbg.value(metadata i32 %19, metadata !4898, metadata !DIExpression()), !dbg !4903
  %20 = icmp eq i32 %19, 4, !dbg !4931
  br i1 %20, label %21, label %14, !dbg !4932, !llvm.loop !4933

21:                                               ; preds = %14
  store i1 true, i1* @g_uart_global_data_initialized, align 1, !dbg !4935
  br label %22, !dbg !4936

22:                                               ; preds = %21, %12
  store volatile i32 1, i32* %8, align 4, !dbg !4937
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !4938
  %23 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !4939
  %24 = load i32, i32* %23, align 4, !dbg !4939
  %25 = tail call i32 @hal_clock_enable(i32 noundef %24) #20, !dbg !4940
  call void @llvm.dbg.value(metadata i32 %25, metadata !4901, metadata !DIExpression()), !dbg !4903
  %26 = icmp eq i32 %25, 0, !dbg !4941
  br i1 %26, label %28, label %27, !dbg !4943

27:                                               ; preds = %22
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 526, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.hal_uart_init, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4944
  unreachable, !dbg !4944

28:                                               ; preds = %22
  %29 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4946
  %30 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %29, align 4, !dbg !4946
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %30, metadata !4897, metadata !DIExpression()), !dbg !4903
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !4947
  %31 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !4948
  %32 = load i32, i32* %31, align 4, !dbg !4948
  %33 = getelementptr inbounds [13 x i32], [13 x i32]* @g_uart_baudrate_map, i32 0, i32 %32, !dbg !4949
  %34 = load i32, i32* %33, align 4, !dbg !4949
  call void @llvm.dbg.value(metadata i32 %34, metadata !4899, metadata !DIExpression()), !dbg !4903
  tail call void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %30, i32 noundef %34) #20, !dbg !4950
  %35 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !4951
  %36 = load i32, i32* %35, align 4, !dbg !4951
  %37 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !4952
  %38 = load i32, i32* %37, align 4, !dbg !4952
  %39 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !4953
  %40 = load i32, i32* %39, align 4, !dbg !4953
  tail call void @uart_set_format(%struct.UART_REGISTER_T* noundef %30, i32 noundef %36, i32 noundef %38, i32 noundef %40) #20, !dbg !4954
  tail call void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %30) #20, !dbg !4955
  br label %41, !dbg !4956

41:                                               ; preds = %2, %4, %28, %11
  %42 = phi i32 [ -3, %11 ], [ 0, %28 ], [ -4, %4 ], [ -4, %2 ], !dbg !4903
  ret i32 %42, !dbg !4957
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !4958 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !4962, metadata !DIExpression()), !dbg !4969
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !4970
  br i1 %2, label %3, label %54, !dbg !4972

3:                                                ; preds = %1
  %4 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !4973
  call void @llvm.dbg.value(metadata i32 %4, metadata !4966, metadata !DIExpression()), !dbg !4969
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !4974
  %6 = load volatile i32, i32* %5, align 4, !dbg !4974
  %7 = icmp eq i32 %6, 0, !dbg !4976
  br i1 %7, label %52, label %8, !dbg !4977

8:                                                ; preds = %3
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !4978
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !4978
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !4963, metadata !DIExpression()), !dbg !4969
  tail call void @uart_query_empty(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !4979
  %11 = load volatile i32, i32* %5, align 4, !dbg !4980
  %12 = icmp eq i32 %11, 2, !dbg !4982
  br i1 %12, label %13, label %43, !dbg !4983

13:                                               ; preds = %8
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !4984
  call void @llvm.dbg.value(metadata i32 %14, metadata !4964, metadata !DIExpression()), !dbg !4969
  %15 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !4986
  call void @llvm.dbg.value(metadata i32 %15, metadata !4965, metadata !DIExpression()), !dbg !4969
  %16 = tail call i32 @vdma_disable_interrupt(i32 noundef %14) #20, !dbg !4987
  call void @llvm.dbg.value(metadata i32 %16, metadata !4967, metadata !DIExpression()), !dbg !4969
  %17 = icmp eq i32 %16, 0, !dbg !4988
  br i1 %17, label %19, label %18, !dbg !4990

18:                                               ; preds = %13
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4991
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 575, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !4993
  unreachable, !dbg !4993

19:                                               ; preds = %13
  %20 = tail call i32 @vdma_disable_interrupt(i32 noundef %15) #20, !dbg !4994
  call void @llvm.dbg.value(metadata i32 %20, metadata !4967, metadata !DIExpression()), !dbg !4969
  %21 = icmp eq i32 %20, 0, !dbg !4995
  br i1 %21, label %23, label %22, !dbg !4997

22:                                               ; preds = %19
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4998
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 581, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5000
  unreachable, !dbg !5000

23:                                               ; preds = %19
  %24 = tail call i32 @vdma_stop(i32 noundef %14) #20, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %24, metadata !4967, metadata !DIExpression()), !dbg !4969
  %25 = icmp eq i32 %24, 0, !dbg !5002
  br i1 %25, label %27, label %26, !dbg !5004

26:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5005
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 587, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5007
  unreachable, !dbg !5007

27:                                               ; preds = %23
  %28 = tail call i32 @vdma_stop(i32 noundef %15) #20, !dbg !5008
  call void @llvm.dbg.value(metadata i32 %28, metadata !4967, metadata !DIExpression()), !dbg !4969
  %29 = icmp eq i32 %28, 0, !dbg !5009
  br i1 %29, label %31, label %30, !dbg !5011

30:                                               ; preds = %27
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5012
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 593, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5014
  unreachable, !dbg !5014

31:                                               ; preds = %27
  %32 = tail call i32 @vdma_deinit(i32 noundef %14) #20, !dbg !5015
  call void @llvm.dbg.value(metadata i32 %32, metadata !4967, metadata !DIExpression()), !dbg !4969
  %33 = icmp eq i32 %32, 0, !dbg !5016
  br i1 %33, label %35, label %34, !dbg !5018

34:                                               ; preds = %31
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5019
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 599, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5021
  unreachable, !dbg !5021

35:                                               ; preds = %31
  %36 = tail call i32 @vdma_deinit(i32 noundef %15) #20, !dbg !5022
  call void @llvm.dbg.value(metadata i32 %36, metadata !4967, metadata !DIExpression()), !dbg !4969
  %37 = icmp eq i32 %36, 0, !dbg !5023
  br i1 %37, label %39, label %38, !dbg !5025

38:                                               ; preds = %35
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5026
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 605, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5028
  unreachable, !dbg !5028

39:                                               ; preds = %35
  %40 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5029
  %41 = load i32, i32* %40, align 4, !dbg !5029
  %42 = tail call i32 @hal_nvic_disable_irq(i32 noundef %41) #20, !dbg !5030
  br label %43, !dbg !5031

43:                                               ; preds = %39, %8
  tail call void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %10) #20, !dbg !5032
  %44 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_pdn to [0 x i32]*), i32 0, i32 %0, !dbg !5033
  %45 = load i32, i32* %44, align 4, !dbg !5033
  %46 = tail call i32 @hal_clock_disable(i32 noundef %45) #20, !dbg !5034
  call void @llvm.dbg.value(metadata i32 %46, metadata !4968, metadata !DIExpression()), !dbg !4969
  %47 = icmp eq i32 %46, 0, !dbg !5035
  br i1 %47, label %49, label %48, !dbg !5037

48:                                               ; preds = %43
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !5038
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 614, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.hal_uart_deinit, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5040
  unreachable, !dbg !5040

49:                                               ; preds = %43
  %50 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5041
  store void (i32, i8*)* null, void (i32, i8*)** %50, align 4, !dbg !5042
  %51 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5043
  store i8* null, i8** %51, align 4, !dbg !5044
  store volatile i32 0, i32* %5, align 4, !dbg !5045
  br label %52, !dbg !5046

52:                                               ; preds = %3, %49
  %53 = phi i32 [ 0, %49 ], [ -2, %3 ]
  tail call void @restore_interrupt_mask(i32 noundef %4) #20, !dbg !4969
  br label %54, !dbg !5047

54:                                               ; preds = %52, %1
  %55 = phi i32 [ -4, %1 ], [ %53, %52 ], !dbg !4969
  ret i32 %55, !dbg !5047
}

; Function Attrs: optsize
declare dso_local i32 @vdma_stop(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_deinit(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @hal_clock_disable(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %1) local_unnamed_addr #0 !dbg !5048 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5052, metadata !DIExpression()), !dbg !5055
  call void @llvm.dbg.value(metadata i8 %1, metadata !5053, metadata !DIExpression()), !dbg !5055
  %3 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5056
  br i1 %3, label %4, label %11, !dbg !5058

4:                                                ; preds = %2
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5059
  %6 = load volatile i32, i32* %5, align 4, !dbg !5059
  %7 = icmp eq i32 %6, 1, !dbg !5061
  br i1 %7, label %8, label %11, !dbg !5062

8:                                                ; preds = %4
  %9 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5063
  %10 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %9, align 4, !dbg !5063
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %10, metadata !5054, metadata !DIExpression()), !dbg !5055
  tail call void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %10, i8 noundef zeroext %1) #20, !dbg !5064
  br label %11, !dbg !5065

11:                                               ; preds = %4, %2, %8
  ret void, !dbg !5065
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_polling(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5066 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5072, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i8* %1, metadata !5073, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i32 %2, metadata !5074, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i32 0, metadata !5075, metadata !DIExpression()), !dbg !5076
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5077
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5079
  br i1 %6, label %7, label %20, !dbg !5079

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5080
  %9 = load volatile i32, i32* %8, align 4, !dbg !5080
  %10 = icmp ne i32 %9, 1, !dbg !5082
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5083
  call void @llvm.dbg.value(metadata i32 0, metadata !5075, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i8* %1, metadata !5073, metadata !DIExpression()), !dbg !5076
  br i1 %12, label %20, label %13, !dbg !5083

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %18, %13 ], [ 0, %7 ]
  %15 = phi i8* [ %17, %13 ], [ %1, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5075, metadata !DIExpression()), !dbg !5076
  call void @llvm.dbg.value(metadata i8* %15, metadata !5073, metadata !DIExpression()), !dbg !5076
  %16 = load i8, i8* %15, align 1, !dbg !5084
  tail call void @hal_uart_put_char(i32 noundef %0, i8 noundef zeroext %16) #21, !dbg !5088
  %17 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !5089
  call void @llvm.dbg.value(metadata i8* %17, metadata !5073, metadata !DIExpression()), !dbg !5076
  %18 = add nuw i32 %14, 1, !dbg !5090
  call void @llvm.dbg.value(metadata i32 %18, metadata !5075, metadata !DIExpression()), !dbg !5076
  %19 = icmp eq i32 %18, %2, !dbg !5091
  br i1 %19, label %20, label %13, !dbg !5092, !llvm.loop !5093

20:                                               ; preds = %13, %7, %3
  %21 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5076
  ret i32 %21, !dbg !5095
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_send_dma(i32 noundef %0, i8* noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5096 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5098, metadata !DIExpression()), !dbg !5106
  call void @llvm.dbg.value(metadata i8* %1, metadata !5099, metadata !DIExpression()), !dbg !5106
  call void @llvm.dbg.value(metadata i32 %2, metadata !5100, metadata !DIExpression()), !dbg !5106
  %5 = bitcast i32* %4 to i8*, !dbg !5107
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5107
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5108
  %7 = xor i1 %6, true, !dbg !5110
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5110
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5110
  br i1 %11, label %45, label %12, !dbg !5110

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5111
  %14 = load volatile i32, i32* %13, align 4, !dbg !5111
  %15 = icmp eq i32 %14, 2, !dbg !5113
  br i1 %15, label %16, label %45, !dbg !5114

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5115
  call void @llvm.dbg.value(metadata i32 %17, metadata !5101, metadata !DIExpression()), !dbg !5106
  call void @llvm.dbg.value(metadata i32* %4, metadata !5104, metadata !DIExpression(DW_OP_deref)), !dbg !5106
  %18 = call i32 @vdma_get_available_send_space(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5116
  call void @llvm.dbg.value(metadata i32 %18, metadata !5105, metadata !DIExpression()), !dbg !5106
  %19 = icmp eq i32 %18, 0, !dbg !5117
  br i1 %19, label %21, label %20, !dbg !5119

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 708, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5120
  unreachable, !dbg !5120

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5122
  call void @llvm.dbg.value(metadata i32 %22, metadata !5104, metadata !DIExpression()), !dbg !5106
  %23 = icmp ult i32 %22, %2, !dbg !5124
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5103, metadata !DIExpression()), !dbg !5106
  call void @llvm.dbg.value(metadata i32 0, metadata !5102, metadata !DIExpression()), !dbg !5106
  %25 = icmp eq i32 %24, 0, !dbg !5125
  br i1 %25, label %38, label %28, !dbg !5128

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %34, metadata !5102, metadata !DIExpression()), !dbg !5106
  %27 = icmp eq i32 %34, %24, !dbg !5125
  br i1 %27, label %36, label %28, !dbg !5128, !llvm.loop !5129

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %34, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5102, metadata !DIExpression()), !dbg !5106
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5131
  %31 = load i8, i8* %30, align 1, !dbg !5131
  %32 = call i32 @vdma_push_data(i32 noundef %17, i8 noundef zeroext %31) #20, !dbg !5133
  call void @llvm.dbg.value(metadata i32 %32, metadata !5105, metadata !DIExpression()), !dbg !5106
  %33 = icmp eq i32 %32, 0, !dbg !5134
  %34 = add nuw i32 %29, 1, !dbg !5136
  call void @llvm.dbg.value(metadata i32 %34, metadata !5102, metadata !DIExpression()), !dbg !5106
  br i1 %33, label %26, label %35, !dbg !5137

35:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 720, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5138
  unreachable, !dbg !5138

36:                                               ; preds = %26
  %37 = load i32, i32* %4, align 4, !dbg !5140
  br label %38, !dbg !5140

38:                                               ; preds = %36, %21
  %39 = phi i32 [ %37, %36 ], [ %22, %21 ], !dbg !5140
  call void @llvm.dbg.value(metadata i32 %39, metadata !5104, metadata !DIExpression()), !dbg !5106
  %40 = icmp eq i32 %24, %39, !dbg !5142
  br i1 %40, label %41, label %45, !dbg !5143

41:                                               ; preds = %38
  %42 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5144
  call void @llvm.dbg.value(metadata i32 %42, metadata !5105, metadata !DIExpression()), !dbg !5106
  %43 = icmp eq i32 %42, 0, !dbg !5146
  br i1 %43, label %45, label %44, !dbg !5148

44:                                               ; preds = %41
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 731, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.hal_uart_send_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5149
  unreachable, !dbg !5149

45:                                               ; preds = %38, %41, %12, %3
  %46 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %41 ], [ %24, %38 ], !dbg !5106
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5151
  ret i32 %46, !dbg !5151
}

; Function Attrs: optsize
declare dso_local i32 @vdma_push_data(i32 noundef, i8 noundef zeroext) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i8 @hal_uart_get_char(i32 noundef %0) local_unnamed_addr #0 !dbg !5152 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5156, metadata !DIExpression()), !dbg !5159
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5160
  br i1 %2, label %3, label %11, !dbg !5162

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5163
  %5 = load volatile i32, i32* %4, align 4, !dbg !5163
  %6 = icmp eq i32 %5, 1, !dbg !5165
  br i1 %6, label %7, label %11, !dbg !5166

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5167
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5167
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5158, metadata !DIExpression()), !dbg !5159
  %10 = tail call zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5168
  call void @llvm.dbg.value(metadata i8 %10, metadata !5157, metadata !DIExpression()), !dbg !5159
  br label %11, !dbg !5169

11:                                               ; preds = %3, %1, %7
  %12 = phi i8 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5159
  ret i8 %12, !dbg !5170
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_char_unblocking(i32 noundef %0) local_unnamed_addr #0 !dbg !5171 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5175, metadata !DIExpression()), !dbg !5178
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5179
  br i1 %2, label %3, label %11, !dbg !5181

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5182
  %5 = load volatile i32, i32* %4, align 4, !dbg !5182
  %6 = icmp eq i32 %5, 1, !dbg !5184
  br i1 %6, label %7, label %11, !dbg !5185

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5186
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5186
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5177, metadata !DIExpression()), !dbg !5178
  %10 = tail call i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5187
  call void @llvm.dbg.value(metadata i32 %10, metadata !5176, metadata !DIExpression()), !dbg !5178
  br label %11, !dbg !5188

11:                                               ; preds = %3, %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ], [ 0, %3 ], !dbg !5178
  ret i32 %12, !dbg !5189
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_polling(i32 noundef %0, i8* noundef writeonly %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5190 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5194, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i8* %1, metadata !5195, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i32 %2, metadata !5196, metadata !DIExpression()), !dbg !5199
  call void @llvm.dbg.value(metadata i8* %1, metadata !5198, metadata !DIExpression()), !dbg !5199
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5200
  %5 = icmp ne i8* %1, null
  %6 = and i1 %5, %4, !dbg !5202
  br i1 %6, label %7, label %19, !dbg !5202

7:                                                ; preds = %3
  %8 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5203
  %9 = load volatile i32, i32* %8, align 4, !dbg !5203
  %10 = icmp ne i32 %9, 1, !dbg !5205
  %11 = icmp eq i32 %2, 0
  %12 = or i1 %10, %11, !dbg !5206
  call void @llvm.dbg.value(metadata i32 0, metadata !5197, metadata !DIExpression()), !dbg !5199
  br i1 %12, label %19, label %13, !dbg !5206

13:                                               ; preds = %7, %13
  %14 = phi i32 [ %17, %13 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !5197, metadata !DIExpression()), !dbg !5199
  %15 = tail call zeroext i8 @hal_uart_get_char(i32 noundef %0) #21, !dbg !5207
  %16 = getelementptr inbounds i8, i8* %1, i32 %14, !dbg !5211
  store i8 %15, i8* %16, align 1, !dbg !5212
  %17 = add nuw i32 %14, 1, !dbg !5213
  call void @llvm.dbg.value(metadata i32 %17, metadata !5197, metadata !DIExpression()), !dbg !5199
  %18 = icmp eq i32 %17, %2, !dbg !5214
  br i1 %18, label %19, label %13, !dbg !5215, !llvm.loop !5216

19:                                               ; preds = %13, %7, %3
  %20 = phi i32 [ 0, %3 ], [ 0, %7 ], [ %2, %13 ], !dbg !5199
  ret i32 %20, !dbg !5218
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_receive_dma(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !5219 {
  %4 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5221, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i8* %1, metadata !5222, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i32 %2, metadata !5223, metadata !DIExpression()), !dbg !5229
  %5 = bitcast i32* %4 to i8*, !dbg !5230
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5230
  %6 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5231
  %7 = xor i1 %6, true, !dbg !5233
  %8 = icmp eq i8* %1, null
  %9 = or i1 %8, %7, !dbg !5233
  %10 = icmp eq i32 %2, 0
  %11 = or i1 %10, %9, !dbg !5233
  br i1 %11, label %44, label %12, !dbg !5233

12:                                               ; preds = %3
  %13 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5234
  %14 = load volatile i32, i32* %13, align 4, !dbg !5234
  %15 = icmp eq i32 %14, 2, !dbg !5236
  br i1 %15, label %16, label %44, !dbg !5237

16:                                               ; preds = %12
  %17 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %17, metadata !5224, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i32* %4, metadata !5226, metadata !DIExpression(DW_OP_deref)), !dbg !5229
  %18 = call i32 @vdma_get_available_receive_bytes(i32 noundef %17, i32* noundef nonnull %4) #20, !dbg !5239
  call void @llvm.dbg.value(metadata i32 %18, metadata !5228, metadata !DIExpression()), !dbg !5229
  %19 = icmp eq i32 %18, 0, !dbg !5240
  br i1 %19, label %21, label %20, !dbg !5242

20:                                               ; preds = %16
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 821, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5243
  unreachable, !dbg !5243

21:                                               ; preds = %16
  %22 = load i32, i32* %4, align 4, !dbg !5245
  call void @llvm.dbg.value(metadata i32 %22, metadata !5226, metadata !DIExpression()), !dbg !5229
  %23 = icmp ult i32 %22, %2, !dbg !5247
  %24 = select i1 %23, i32 %22, i32 %2
  call void @llvm.dbg.value(metadata i32 %24, metadata !5225, metadata !DIExpression()), !dbg !5229
  call void @llvm.dbg.value(metadata i32 0, metadata !5227, metadata !DIExpression()), !dbg !5229
  %25 = icmp eq i32 %24, 0, !dbg !5248
  br i1 %25, label %37, label %28, !dbg !5251

26:                                               ; preds = %28
  call void @llvm.dbg.value(metadata i32 %33, metadata !5227, metadata !DIExpression()), !dbg !5229
  %27 = icmp eq i32 %33, %24, !dbg !5248
  br i1 %27, label %35, label %28, !dbg !5251, !llvm.loop !5252

28:                                               ; preds = %21, %26
  %29 = phi i32 [ %33, %26 ], [ 0, %21 ]
  call void @llvm.dbg.value(metadata i32 %29, metadata !5227, metadata !DIExpression()), !dbg !5229
  %30 = getelementptr inbounds i8, i8* %1, i32 %29, !dbg !5254
  %31 = call i32 @vdma_pop_data(i32 noundef %17, i8* noundef %30) #20, !dbg !5256
  call void @llvm.dbg.value(metadata i32 %31, metadata !5228, metadata !DIExpression()), !dbg !5229
  %32 = icmp eq i32 %31, 0, !dbg !5257
  %33 = add nuw i32 %29, 1, !dbg !5259
  call void @llvm.dbg.value(metadata i32 %33, metadata !5227, metadata !DIExpression()), !dbg !5229
  br i1 %32, label %26, label %34, !dbg !5260

34:                                               ; preds = %28
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 833, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5261
  unreachable, !dbg !5261

35:                                               ; preds = %26
  %36 = load i32, i32* %4, align 4, !dbg !5263
  br label %37, !dbg !5263

37:                                               ; preds = %35, %21
  %38 = phi i32 [ %36, %35 ], [ %22, %21 ], !dbg !5263
  call void @llvm.dbg.value(metadata i32 %38, metadata !5226, metadata !DIExpression()), !dbg !5229
  %39 = icmp eq i32 %24, %38, !dbg !5265
  br i1 %39, label %40, label %44, !dbg !5266

40:                                               ; preds = %37
  %41 = call i32 @vdma_enable_interrupt(i32 noundef %17) #20, !dbg !5267
  call void @llvm.dbg.value(metadata i32 %41, metadata !5228, metadata !DIExpression()), !dbg !5229
  %42 = icmp eq i32 %41, 0, !dbg !5269
  br i1 %42, label %44, label %43, !dbg !5271

43:                                               ; preds = %40
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 844, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.hal_uart_receive_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5272
  unreachable, !dbg !5272

44:                                               ; preds = %37, %40, %12, %3
  %45 = phi i32 [ 0, %3 ], [ 0, %12 ], [ %24, %40 ], [ %24, %37 ], !dbg !5229
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !5274
  ret i32 %45, !dbg !5274
}

; Function Attrs: optsize
declare dso_local i32 @vdma_pop_data(i32 noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_register_callback(i32 noundef %0, void (i32, i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !5275 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5279, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata void (i32, i8*)* %1, metadata !5280, metadata !DIExpression()), !dbg !5287
  call void @llvm.dbg.value(metadata i8* %2, metadata !5281, metadata !DIExpression()), !dbg !5287
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5288
  %5 = icmp ne void (i32, i8*)* %1, null
  %6 = and i1 %5, %4, !dbg !5290
  br i1 %6, label %7, label %39, !dbg !5290

7:                                                ; preds = %3
  %8 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !5291
  call void @llvm.dbg.value(metadata i32 %8, metadata !5284, metadata !DIExpression()), !dbg !5287
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5292
  %10 = load volatile i32, i32* %9, align 4, !dbg !5292
  %11 = icmp eq i32 %10, 1, !dbg !5294
  br i1 %11, label %12, label %37, !dbg !5295

12:                                               ; preds = %7
  %13 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5296
  call void @llvm.dbg.value(metadata i32 %13, metadata !5282, metadata !DIExpression()), !dbg !5287
  %14 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5297
  call void @llvm.dbg.value(metadata i32 %14, metadata !5283, metadata !DIExpression()), !dbg !5287
  %15 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 0, !dbg !5298
  store void (i32, i8*)* %1, void (i32, i8*)** %15, align 4, !dbg !5299
  %16 = getelementptr inbounds [4 x %struct.uart_callback_t], [4 x %struct.uart_callback_t]* @g_uart_callback, i32 0, i32 %0, i32 1, !dbg !5300
  store i8* %2, i8** %16, align 4, !dbg !5301
  %17 = shl i32 %0, 1, !dbg !5302
  %18 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %17, !dbg !5303
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %13, %struct.uart_dma_callback_data_t* noundef nonnull %18) #20, !dbg !5304
  %19 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %18, i32 0, i32 0, !dbg !5305
  %20 = tail call i32 @vdma_register_callback(i32 noundef %13, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %19) #20, !dbg !5306
  call void @llvm.dbg.value(metadata i32 %20, metadata !5285, metadata !DIExpression()), !dbg !5287
  %21 = icmp eq i32 %20, 0, !dbg !5307
  br i1 %21, label %23, label %22, !dbg !5309

22:                                               ; preds = %12
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5310
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5312
  unreachable, !dbg !5312

23:                                               ; preds = %12
  %24 = or i32 %17, 1, !dbg !5313
  %25 = getelementptr inbounds [8 x %struct.uart_dma_callback_data_t], [8 x %struct.uart_dma_callback_data_t]* @g_uart_dma_callback_data, i32 0, i32 %24, !dbg !5314
  tail call void @uart_dma_channel_to_callback_data(i32 noundef %14, %struct.uart_dma_callback_data_t* noundef nonnull %25) #20, !dbg !5315
  %26 = getelementptr %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %25, i32 0, i32 0, !dbg !5316
  %27 = tail call i32 @vdma_register_callback(i32 noundef %14, void (i32, i8*)* noundef nonnull @uart_dma_callback_handler, i8* noundef nonnull %26) #20, !dbg !5317
  call void @llvm.dbg.value(metadata i32 %27, metadata !5285, metadata !DIExpression()), !dbg !5287
  %28 = icmp eq i32 %27, 0, !dbg !5318
  br i1 %28, label %30, label %29, !dbg !5320

29:                                               ; preds = %23
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5321
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 928, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5323
  unreachable, !dbg !5323

30:                                               ; preds = %23
  %31 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5324
  %32 = load i32, i32* %31, align 4, !dbg !5324
  %33 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef %32, void (i32)* noundef nonnull @uart_interrupt_handler) #20, !dbg !5325
  call void @llvm.dbg.value(metadata i32 %33, metadata !5286, metadata !DIExpression()), !dbg !5287
  %34 = icmp eq i32 %33, 0, !dbg !5326
  br i1 %34, label %36, label %35, !dbg !5328

35:                                               ; preds = %30
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5329
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 934, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.hal_uart_register_callback, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5331
  unreachable, !dbg !5331

36:                                               ; preds = %30
  tail call fastcc void @uart_start_dma_transmission(i32 noundef %0) #21, !dbg !5332
  store volatile i32 2, i32* %9, align 4, !dbg !5333
  br label %37, !dbg !5334

37:                                               ; preds = %7, %36
  %38 = phi i32 [ 0, %36 ], [ -2, %7 ]
  tail call void @restore_interrupt_mask(i32 noundef %8) #20, !dbg !5287
  br label %39, !dbg !5335

39:                                               ; preds = %37, %3
  %40 = phi i32 [ -4, %3 ], [ %38, %37 ], !dbg !5287
  ret i32 %40, !dbg !5335
}

; Function Attrs: noinline nounwind optsize
define internal void @uart_dma_callback_handler(i32 noundef %0, i8* nocapture noundef readonly %1) #0 !dbg !5336 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5341, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.value(metadata i8* %1, metadata !5342, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.value(metadata i8* %1, metadata !5343, metadata !DIExpression()), !dbg !5344
  %3 = load i8, i8* %1, align 4, !dbg !5345, !range !2765
  %4 = icmp eq i8 %3, 0, !dbg !5345
  %5 = getelementptr inbounds i8, i8* %1, i32 4, !dbg !5347
  %6 = bitcast i8* %5 to i32*, !dbg !5347
  %7 = load i32, i32* %6, align 4, !dbg !5347
  br i1 %4, label %9, label %8, !dbg !5348

8:                                                ; preds = %2
  call void @llvm.dbg.value(metadata i8* %1, metadata !5343, metadata !DIExpression()), !dbg !5344
  tail call void @uart_receive_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5349
  br label %10, !dbg !5351

9:                                                ; preds = %2
  tail call void @uart_send_handler(i32 noundef %7, i1 noundef zeroext false) #21, !dbg !5352
  br label %10

10:                                               ; preds = %9, %8
  ret void, !dbg !5354
}

; Function Attrs: optsize
declare dso_local i32 @vdma_register_callback(i32 noundef, void (i32, i8*)* noundef, i8* noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @uart_start_dma_transmission(i32 noundef %0) unnamed_addr #0 !dbg !5355 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5357, metadata !DIExpression()), !dbg !5362
  %2 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5363
  %3 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %2, align 4, !dbg !5363
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %3, metadata !5358, metadata !DIExpression()), !dbg !5362
  %4 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5364
  call void @llvm.dbg.value(metadata i32 %4, metadata !5359, metadata !DIExpression()), !dbg !5362
  %5 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5365
  call void @llvm.dbg.value(metadata i32 %5, metadata !5360, metadata !DIExpression()), !dbg !5362
  tail call void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5366
  %6 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([4 x i32]* @g_uart_port_to_irq_num to [0 x i32]*), i32 0, i32 %0, !dbg !5367
  %7 = load i32, i32* %6, align 4, !dbg !5367
  %8 = tail call i32 @hal_nvic_enable_irq(i32 noundef %7) #20, !dbg !5368
  %9 = tail call i32 @vdma_enable_interrupt(i32 noundef %4) #20, !dbg !5369
  call void @llvm.dbg.value(metadata i32 %9, metadata !5361, metadata !DIExpression()), !dbg !5362
  %10 = icmp eq i32 %9, 0, !dbg !5370
  br i1 %10, label %12, label %11, !dbg !5372

11:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 870, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5373
  unreachable, !dbg !5373

12:                                               ; preds = %1
  %13 = tail call i32 @vdma_enable_interrupt(i32 noundef %5) #20, !dbg !5375
  call void @llvm.dbg.value(metadata i32 %13, metadata !5361, metadata !DIExpression()), !dbg !5362
  %14 = icmp eq i32 %13, 0, !dbg !5376
  br i1 %14, label %16, label %15, !dbg !5378

15:                                               ; preds = %12
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 875, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5379
  unreachable, !dbg !5379

16:                                               ; preds = %12
  %17 = tail call i32 @vdma_start(i32 noundef %4) #20, !dbg !5381
  call void @llvm.dbg.value(metadata i32 %17, metadata !5361, metadata !DIExpression()), !dbg !5362
  %18 = icmp eq i32 %17, 0, !dbg !5382
  br i1 %18, label %20, label %19, !dbg !5384

19:                                               ; preds = %16
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 880, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5385
  unreachable, !dbg !5385

20:                                               ; preds = %16
  %21 = tail call i32 @vdma_start(i32 noundef %5) #20, !dbg !5387
  call void @llvm.dbg.value(metadata i32 %21, metadata !5361, metadata !DIExpression()), !dbg !5362
  %22 = icmp eq i32 %21, 0, !dbg !5388
  br i1 %22, label %24, label %23, !dbg !5390

23:                                               ; preds = %20
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 885, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.uart_start_dma_transmission, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5391
  unreachable, !dbg !5391

24:                                               ; preds = %20
  tail call void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %3) #20, !dbg !5393
  ret void, !dbg !5394
}

; Function Attrs: optsize
declare dso_local i32 @vdma_start(i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_send_space(i32 noundef %0) local_unnamed_addr #0 !dbg !5395 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5397, metadata !DIExpression()), !dbg !5401
  %3 = bitcast i32* %2 to i8*, !dbg !5402
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5402
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5403
  br i1 %4, label %5, label %16, !dbg !5405

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5406
  %7 = load volatile i32, i32* %6, align 4, !dbg !5406
  %8 = icmp eq i32 %7, 2, !dbg !5408
  br i1 %8, label %9, label %16, !dbg !5409

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5410
  call void @llvm.dbg.value(metadata i32 %10, metadata !5398, metadata !DIExpression()), !dbg !5401
  call void @llvm.dbg.value(metadata i32* %2, metadata !5399, metadata !DIExpression(DW_OP_deref)), !dbg !5401
  %11 = call i32 @vdma_get_available_send_space(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5411
  call void @llvm.dbg.value(metadata i32 %11, metadata !5400, metadata !DIExpression()), !dbg !5401
  %12 = icmp eq i32 %11, 0, !dbg !5412
  br i1 %12, label %14, label %13, !dbg !5414

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 964, i8* noundef getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.hal_uart_get_available_send_space, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5415
  unreachable, !dbg !5415

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5417
  call void @llvm.dbg.value(metadata i32 %15, metadata !5399, metadata !DIExpression()), !dbg !5401
  br label %16, !dbg !5418

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5401
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5419
  ret i32 %17, !dbg !5419
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_get_available_receive_bytes(i32 noundef %0) local_unnamed_addr #0 !dbg !5420 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5422, metadata !DIExpression()), !dbg !5426
  %3 = bitcast i32* %2 to i8*, !dbg !5427
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5427
  %4 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5428
  br i1 %4, label %5, label %16, !dbg !5430

5:                                                ; preds = %1
  %6 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5431
  %7 = load volatile i32, i32* %6, align 4, !dbg !5431
  %8 = icmp eq i32 %7, 2, !dbg !5433
  br i1 %8, label %9, label %16, !dbg !5434

9:                                                ; preds = %5
  %10 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5435
  call void @llvm.dbg.value(metadata i32 %10, metadata !5423, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.value(metadata i32* %2, metadata !5424, metadata !DIExpression(DW_OP_deref)), !dbg !5426
  %11 = call i32 @vdma_get_available_receive_bytes(i32 noundef %10, i32* noundef nonnull %2) #20, !dbg !5436
  call void @llvm.dbg.value(metadata i32 %11, metadata !5425, metadata !DIExpression()), !dbg !5426
  %12 = icmp eq i32 %11, 0, !dbg !5437
  br i1 %12, label %14, label %13, !dbg !5439

13:                                               ; preds = %9
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 988, i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @__func__.hal_uart_get_available_receive_bytes, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5440
  unreachable, !dbg !5440

14:                                               ; preds = %9
  %15 = load i32, i32* %2, align 4, !dbg !5442
  call void @llvm.dbg.value(metadata i32 %15, metadata !5424, metadata !DIExpression()), !dbg !5426
  br label %16, !dbg !5443

16:                                               ; preds = %5, %1, %14
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ], [ 0, %5 ], !dbg !5426
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #22, !dbg !5444
  ret i32 %17, !dbg !5444
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_hardware_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5447, metadata !DIExpression()), !dbg !5449
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5450
  br i1 %2, label %3, label %10, !dbg !5452

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5453
  %5 = load volatile i32, i32* %4, align 4, !dbg !5453
  %6 = icmp eq i32 %5, 0, !dbg !5455
  br i1 %6, label %10, label %7, !dbg !5456

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5457
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5457
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5448, metadata !DIExpression()), !dbg !5449
  tail call void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5458
  br label %10, !dbg !5459

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5449
  ret i32 %11, !dbg !5460
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_software_flowcontrol(i32 noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #0 !dbg !5461 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5465, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8 %1, metadata !5466, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8 %2, metadata !5467, metadata !DIExpression()), !dbg !5470
  call void @llvm.dbg.value(metadata i8 %3, metadata !5468, metadata !DIExpression()), !dbg !5470
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5471
  br i1 %5, label %6, label %13, !dbg !5473

6:                                                ; preds = %4
  %7 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5474
  %8 = load volatile i32, i32* %7, align 4, !dbg !5474
  %9 = icmp eq i32 %8, 0, !dbg !5476
  br i1 %9, label %13, label %10, !dbg !5477

10:                                               ; preds = %6
  %11 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5478
  %12 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %11, align 4, !dbg !5478
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %12, metadata !5469, metadata !DIExpression()), !dbg !5470
  tail call void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %12, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) #20, !dbg !5479
  br label %13, !dbg !5480

13:                                               ; preds = %6, %4, %10
  %14 = phi i32 [ 0, %10 ], [ -4, %4 ], [ -2, %6 ], !dbg !5470
  ret i32 %14, !dbg !5481
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_disable_flowcontrol(i32 noundef %0) local_unnamed_addr #0 !dbg !5482 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !5484, metadata !DIExpression()), !dbg !5486
  %2 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5487
  br i1 %2, label %3, label %10, !dbg !5489

3:                                                ; preds = %1
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5490
  %5 = load volatile i32, i32* %4, align 4, !dbg !5490
  %6 = icmp eq i32 %5, 0, !dbg !5492
  br i1 %6, label %10, label %7, !dbg !5493

7:                                                ; preds = %3
  %8 = getelementptr inbounds [0 x %struct.UART_REGISTER_T*], [0 x %struct.UART_REGISTER_T*]* bitcast ([4 x %struct.UART_REGISTER_T*]* @g_uart_regbase to [0 x %struct.UART_REGISTER_T*]*), i32 0, i32 %0, !dbg !5494
  %9 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %8, align 4, !dbg !5494
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %9, metadata !5485, metadata !DIExpression()), !dbg !5486
  tail call void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %9) #20, !dbg !5495
  br label %10, !dbg !5496

10:                                               ; preds = %3, %1, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %1 ], [ -2, %3 ], !dbg !5486
  ret i32 %11, !dbg !5497
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_uart_set_dma(i32 noundef %0, %struct.hal_uart_dma_config_t* nocapture noundef readonly %1) local_unnamed_addr #0 !dbg !5498 {
  %3 = alloca %struct.hal_cache_region_config_t, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !5504, metadata !DIExpression()), !dbg !5516
  call void @llvm.dbg.value(metadata %struct.hal_uart_dma_config_t* %1, metadata !5505, metadata !DIExpression()), !dbg !5516
  %4 = bitcast %struct.hal_cache_region_config_t* %3 to i8*, !dbg !5517
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5517
  call void @llvm.dbg.declare(metadata %struct.hal_cache_region_config_t* %3, metadata !5507, metadata !DIExpression()), !dbg !5518
  %5 = tail call fastcc zeroext i1 @uart_port_is_valid(i32 noundef %0) #21, !dbg !5519
  br i1 %5, label %6, label %101, !dbg !5521

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 0, !dbg !5522
  %8 = load i8*, i8** %7, align 4, !dbg !5522
  %9 = icmp eq i8* %8, null, !dbg !5524
  br i1 %9, label %101, label %10, !dbg !5525

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 3, !dbg !5526
  %12 = load i8*, i8** %11, align 4, !dbg !5526
  %13 = icmp eq i8* %12, null, !dbg !5527
  br i1 %13, label %101, label %14, !dbg !5528

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 1, !dbg !5529
  %16 = load i32, i32* %15, align 4, !dbg !5529
  %17 = icmp ugt i32 %16, 131071, !dbg !5531
  br i1 %17, label %101, label %18, !dbg !5532

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 2, !dbg !5533
  %20 = load i32, i32* %19, align 4, !dbg !5533
  %21 = icmp ugt i32 %20, 131071, !dbg !5534
  %22 = icmp ugt i32 %20, %16
  %23 = select i1 %21, i1 true, i1 %22, !dbg !5535
  br i1 %23, label %101, label %24, !dbg !5535

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 4, !dbg !5536
  %26 = load i32, i32* %25, align 4, !dbg !5536
  %27 = icmp ugt i32 %26, 131071, !dbg !5538
  br i1 %27, label %101, label %28, !dbg !5539

28:                                               ; preds = %24
  %29 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 5, !dbg !5540
  %30 = load i32, i32* %29, align 4, !dbg !5540
  %31 = icmp ugt i32 %30, 131071, !dbg !5541
  br i1 %31, label %101, label %32, !dbg !5542

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.hal_uart_dma_config_t, %struct.hal_uart_dma_config_t* %1, i32 0, i32 6, !dbg !5543
  %34 = load i32, i32* %33, align 4, !dbg !5543
  %35 = icmp ugt i32 %34, 131071, !dbg !5544
  %36 = icmp ugt i32 %30, %26
  %37 = select i1 %35, i1 true, i1 %36, !dbg !5545
  %38 = icmp ugt i32 %34, %26
  %39 = select i1 %37, i1 true, i1 %38, !dbg !5545
  br i1 %39, label %101, label %40, !dbg !5545

40:                                               ; preds = %32
  %41 = getelementptr inbounds [4 x i32], [4 x i32]* @g_uart_hwstatus, i32 0, i32 %0, !dbg !5546
  %42 = load volatile i32, i32* %41, align 4, !dbg !5546
  %43 = icmp eq i32 %42, 1, !dbg !5548
  br i1 %43, label %44, label %101, !dbg !5549

44:                                               ; preds = %40
  %45 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 0) #20, !dbg !5550
  call void @llvm.dbg.value(metadata i32 %45, metadata !5513, metadata !DIExpression()), !dbg !5516
  %46 = tail call i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef 1) #20, !dbg !5551
  call void @llvm.dbg.value(metadata i32 %46, metadata !5514, metadata !DIExpression()), !dbg !5516
  %47 = tail call i32 @vdma_init(i32 noundef %45) #20, !dbg !5552
  call void @llvm.dbg.value(metadata i32 %47, metadata !5515, metadata !DIExpression()), !dbg !5516
  %48 = icmp eq i32 %47, 0, !dbg !5553
  br i1 %48, label %50, label %49, !dbg !5555

49:                                               ; preds = %44
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1107, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5556
  unreachable, !dbg !5556

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 4, !dbg !5558
  %52 = ptrtoint i8* %51 to i32, !dbg !5559
  %53 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 0, !dbg !5560
  store i32 %52, i32* %53, align 4, !dbg !5561
  %54 = load i32, i32* %15, align 4, !dbg !5562
  %55 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 0, i32 1, !dbg !5563
  store i32 %54, i32* %55, align 4, !dbg !5564
  %56 = call i32 @vdma_configure(i32 noundef %45, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5565
  call void @llvm.dbg.value(metadata i32 %56, metadata !5515, metadata !DIExpression()), !dbg !5516
  %57 = icmp eq i32 %56, 0, !dbg !5566
  br i1 %57, label %59, label %58, !dbg !5568

58:                                               ; preds = %50
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1114, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5569
  unreachable, !dbg !5569

59:                                               ; preds = %50
  %60 = load i32, i32* %19, align 4, !dbg !5571
  %61 = call i32 @vdma_set_threshold(i32 noundef %45, i32 noundef %60) #20, !dbg !5572
  call void @llvm.dbg.value(metadata i32 %61, metadata !5515, metadata !DIExpression()), !dbg !5516
  %62 = icmp eq i32 %61, 0, !dbg !5573
  br i1 %62, label %64, label %63, !dbg !5575

63:                                               ; preds = %59
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1119, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5576
  unreachable, !dbg !5576

64:                                               ; preds = %59
  %65 = call i32 @vdma_init(i32 noundef %46) #20, !dbg !5578
  call void @llvm.dbg.value(metadata i32 %65, metadata !5515, metadata !DIExpression()), !dbg !5516
  %66 = icmp eq i32 %65, 0, !dbg !5579
  br i1 %66, label %68, label %67, !dbg !5581

67:                                               ; preds = %64
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1125, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5582
  unreachable, !dbg !5582

68:                                               ; preds = %64
  %69 = load i8*, i8** %11, align 4, !dbg !5584
  %70 = ptrtoint i8* %69 to i32, !dbg !5585
  store i32 %70, i32* %53, align 4, !dbg !5586
  %71 = load i32, i32* %25, align 4, !dbg !5587
  store i32 %71, i32* %55, align 4, !dbg !5588
  %72 = call i32 @vdma_configure(i32 noundef %46, %struct.hal_cache_region_config_t* noundef nonnull %3) #20, !dbg !5589
  call void @llvm.dbg.value(metadata i32 %72, metadata !5515, metadata !DIExpression()), !dbg !5516
  %73 = icmp eq i32 %72, 0, !dbg !5590
  br i1 %73, label %75, label %74, !dbg !5592

74:                                               ; preds = %68
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1132, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5593
  unreachable, !dbg !5593

75:                                               ; preds = %68
  %76 = load i32, i32* %29, align 4, !dbg !5595
  %77 = call i32 @vdma_set_threshold(i32 noundef %46, i32 noundef %76) #20, !dbg !5596
  call void @llvm.dbg.value(metadata i32 %77, metadata !5515, metadata !DIExpression()), !dbg !5516
  %78 = icmp eq i32 %77, 0, !dbg !5597
  br i1 %78, label %80, label %79, !dbg !5599

79:                                               ; preds = %75
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1137, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5600
  unreachable, !dbg !5600

80:                                               ; preds = %75
  %81 = load i32, i32* %33, align 4, !dbg !5602
  %82 = call i32 @vdma_set_alert_length(i32 noundef %46, i32 noundef %81) #20, !dbg !5603
  call void @llvm.dbg.value(metadata i32 %82, metadata !5515, metadata !DIExpression()), !dbg !5516
  %83 = icmp eq i32 %82, 0, !dbg !5604
  br i1 %83, label %85, label %84, !dbg !5606

84:                                               ; preds = %80
  call void @__assert_func(i8* noundef getelementptr inbounds ([49 x i8], [49 x i8]* @.str.35, i32 0, i32 0), i32 noundef 1142, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.hal_uart_set_dma, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.36, i32 0, i32 0)) #23, !dbg !5607
  unreachable, !dbg !5607

85:                                               ; preds = %80
  %86 = call i32 @save_and_set_interrupt_mask() #20, !dbg !5609
  call void @llvm.dbg.value(metadata i32 %86, metadata !5506, metadata !DIExpression()), !dbg !5516
  %87 = load i8*, i8** %7, align 4, !dbg !5610
  %88 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 0, !dbg !5611
  store i8* %87, i8** %88, align 4, !dbg !5612
  %89 = load i32, i32* %15, align 4, !dbg !5613
  %90 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 1, !dbg !5614
  store i32 %89, i32* %90, align 4, !dbg !5615
  %91 = load i32, i32* %19, align 4, !dbg !5616
  %92 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 2, !dbg !5617
  store i32 %91, i32* %92, align 4, !dbg !5618
  %93 = load i32, i32* %33, align 4, !dbg !5619
  %94 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 6, !dbg !5620
  store i32 %93, i32* %94, align 4, !dbg !5621
  %95 = load i8*, i8** %11, align 4, !dbg !5622
  %96 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 3, !dbg !5623
  store i8* %95, i8** %96, align 4, !dbg !5624
  %97 = load i32, i32* %25, align 4, !dbg !5625
  %98 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 4, !dbg !5626
  store i32 %97, i32* %98, align 4, !dbg !5627
  %99 = load i32, i32* %29, align 4, !dbg !5628
  %100 = getelementptr inbounds [4 x %struct.hal_uart_dma_config_t], [4 x %struct.hal_uart_dma_config_t]* @g_uart_dma_config, i32 0, i32 %0, i32 5, !dbg !5629
  store i32 %99, i32* %100, align 4, !dbg !5630
  call void @restore_interrupt_mask(i32 noundef %86) #20, !dbg !5631
  br label %101, !dbg !5632

101:                                              ; preds = %40, %24, %28, %32, %14, %18, %6, %10, %2, %85
  %102 = phi i32 [ 0, %85 ], [ -4, %2 ], [ -4, %10 ], [ -4, %6 ], [ -4, %18 ], [ -4, %14 ], [ -4, %32 ], [ -4, %28 ], [ -4, %24 ], [ -2, %40 ], !dbg !5516
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #22, !dbg !5633
  ret i32 %102, !dbg !5633
}

; Function Attrs: optsize
declare dso_local i32 @vdma_init(i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_configure(i32 noundef, %struct.hal_cache_region_config_t* noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_threshold(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: optsize
declare dso_local i32 @vdma_set_alert_length(i32 noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_set_baudrate(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !5634 {
  %3 = alloca [10 x i32], align 4
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5693, metadata !DIExpression()), !dbg !5708
  call void @llvm.dbg.value(metadata i32 %1, metadata !5694, metadata !DIExpression()), !dbg !5708
  call void @llvm.dbg.declare(metadata [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, metadata !5703, metadata !DIExpression()), !dbg !5709
  %4 = bitcast [10 x i32]* %3 to i8*, !dbg !5710
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5710
  call void @llvm.dbg.declare(metadata [10 x i32]* %3, metadata !5707, metadata !DIExpression()), !dbg !5711
  call void @llvm.memset.p0i8.i32(i8* noundef nonnull align 4 dereferenceable(40) %4, i8 0, i32 20, i1 false), !dbg !5711
  %5 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 5, !dbg !5711
  store i32 1, i32* %5, align 4, !dbg !5711
  %6 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 6, !dbg !5711
  store i32 1, i32* %6, align 4, !dbg !5711
  %7 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 7, !dbg !5711
  store i32 1, i32* %7, align 4, !dbg !5711
  %8 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 8, !dbg !5711
  store i32 1, i32* %8, align 4, !dbg !5711
  %9 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 9, !dbg !5711
  store i32 1, i32* %9, align 4, !dbg !5711
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !5712
  store volatile i32 0, i32* %10, align 4, !dbg !5713
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !5714
  store volatile i32 0, i32* %11, align 4, !dbg !5715
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !5716
  store volatile i32 0, i32* %12, align 4, !dbg !5717
  %13 = tail call zeroext i1 @is_clk_use_lfosc() #20, !dbg !5718
  br i1 %13, label %14, label %17, !dbg !5720

14:                                               ; preds = %2
  %15 = tail call i32 @clock_get_freq_lfosc() #20, !dbg !5721
  %16 = mul i32 %15, 1000, !dbg !5723
  call void @llvm.dbg.value(metadata i32 %16, metadata !5695, metadata !DIExpression()), !dbg !5708
  br label %17, !dbg !5724

17:                                               ; preds = %2, %14
  %18 = phi i32 [ %16, %14 ], [ 26000000, %2 ], !dbg !5725
  call void @llvm.dbg.value(metadata i32 %18, metadata !5695, metadata !DIExpression()), !dbg !5708
  %19 = shl i32 %1, 8, !dbg !5726
  %20 = udiv i32 %18, %19, !dbg !5727
  call void @llvm.dbg.value(metadata i32 %20, metadata !5696, metadata !DIExpression()), !dbg !5708
  %21 = mul i32 %18, 10, !dbg !5728
  %22 = udiv i32 %21, %19, !dbg !5729
  %23 = urem i32 %22, 10, !dbg !5730
  call void @llvm.dbg.value(metadata i32 %23, metadata !5697, metadata !DIExpression()), !dbg !5708
  %24 = icmp ne i32 %23, 0, !dbg !5731
  %25 = icmp ugt i32 %19, %18
  %26 = select i1 %24, i1 true, i1 %25, !dbg !5733
  %27 = zext i1 %26 to i32, !dbg !5733
  %28 = add i32 %20, %27, !dbg !5733
  call void @llvm.dbg.value(metadata i32 %28, metadata !5696, metadata !DIExpression()), !dbg !5708
  call void @llvm.dbg.value(metadata i32 %28, metadata !5699, metadata !DIExpression()), !dbg !5708
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5708
  br label %29, !dbg !5734

29:                                               ; preds = %29, %17
  %30 = phi i32 [ %28, %17 ], [ %34, %29 ], !dbg !5708
  %31 = mul i32 %30, %1, !dbg !5708
  %32 = udiv i32 %18, %31, !dbg !5708
  call void @llvm.dbg.value(metadata i32 %32, metadata !5700, metadata !DIExpression()), !dbg !5708
  call void @llvm.dbg.value(metadata i32 %30, metadata !5699, metadata !DIExpression()), !dbg !5708
  %33 = icmp ugt i32 %32, 256, !dbg !5735
  %34 = add i32 %30, 1, !dbg !5736
  call void @llvm.dbg.value(metadata i32 %34, metadata !5699, metadata !DIExpression()), !dbg !5708
  call void @llvm.dbg.value(metadata i32 undef, metadata !5700, metadata !DIExpression()), !dbg !5708
  br i1 %33, label %29, label %35, !dbg !5734, !llvm.loop !5738

35:                                               ; preds = %29
  %36 = udiv i32 %21, %31, !dbg !5740
  %37 = urem i32 %36, 10, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %37, metadata !5698, metadata !DIExpression()), !dbg !5708
  %38 = add nsw i32 %32, -1, !dbg !5742
  call void @llvm.dbg.value(metadata i32 %38, metadata !5700, metadata !DIExpression()), !dbg !5708
  %39 = add nsw i32 %32, -2, !dbg !5743
  %40 = lshr i32 %39, 1, !dbg !5744
  call void @llvm.dbg.value(metadata i32 %40, metadata !5701, metadata !DIExpression()), !dbg !5708
  %41 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !5745
  store volatile i32 3, i32* %41, align 4, !dbg !5746
  %42 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5747
  %43 = load volatile i32, i32* %42, align 4, !dbg !5747
  call void @llvm.dbg.value(metadata i32 %43, metadata !5702, metadata !DIExpression()), !dbg !5708
  %44 = or i32 %43, 128, !dbg !5748
  store volatile i32 %44, i32* %42, align 4, !dbg !5749
  %45 = and i32 %30, 255, !dbg !5750
  %46 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5751
  store volatile i32 %45, i32* %46, align 4, !dbg !5752
  %47 = lshr i32 %30, 8, !dbg !5753
  %48 = and i32 %47, 255, !dbg !5754
  %49 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5755
  store volatile i32 %48, i32* %49, align 4, !dbg !5756
  store volatile i32 %43, i32* %42, align 4, !dbg !5757
  %50 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !5758
  store volatile i32 %38, i32* %50, align 4, !dbg !5759
  %51 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !5760
  store volatile i32 %40, i32* %51, align 4, !dbg !5761
  %52 = getelementptr inbounds [10 x i32], [10 x i32]* @__const.uart_set_baudrate.fraction_L_mapping, i32 0, i32 %37, !dbg !5762
  %53 = load i32, i32* %52, align 4, !dbg !5762
  store volatile i32 %53, i32* %11, align 4, !dbg !5763
  %54 = getelementptr inbounds [10 x i32], [10 x i32]* %3, i32 0, i32 %37, !dbg !5764
  %55 = load i32, i32* %54, align 4, !dbg !5764
  store volatile i32 %55, i32* %12, align 4, !dbg !5765
  %56 = icmp ugt i32 %1, 2999999, !dbg !5766
  br i1 %56, label %57, label %59, !dbg !5768

57:                                               ; preds = %35
  %58 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !5769
  store volatile i32 18, i32* %58, align 4, !dbg !5771
  br label %59, !dbg !5772

59:                                               ; preds = %57, %35
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #22, !dbg !5773
  ret void, !dbg !5773
}

; Function Attrs: argmemonly nofree nounwind willreturn writeonly
declare void @llvm.memset.p0i8.i32(i8* nocapture writeonly, i8, i32, i1 immarg) #15

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_format(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #2 !dbg !5774 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5778, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata i32 %1, metadata !5779, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata i32 %2, metadata !5780, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata i32 %3, metadata !5781, metadata !DIExpression()), !dbg !5783
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5784
  %6 = load volatile i32, i32* %5, align 4, !dbg !5784
  call void @llvm.dbg.value(metadata i32 %6, metadata !5782, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5783
  store volatile i32 128, i32* %5, align 4, !dbg !5785
  %7 = trunc i32 %6 to i16, !dbg !5786
  %8 = and i16 %7, -4, !dbg !5786
  call void @llvm.dbg.value(metadata i16 %7, metadata !5782, metadata !DIExpression(DW_OP_constu, 18446744073709551612, DW_OP_and, DW_OP_stack_value)), !dbg !5783
  switch i32 %1, label %15 [
    i32 3, label %13
    i32 1, label %9
    i32 2, label %11
  ], !dbg !5787

9:                                                ; preds = %4
  %10 = or i16 %8, 1, !dbg !5788
  call void @llvm.dbg.value(metadata i16 %10, metadata !5782, metadata !DIExpression()), !dbg !5783
  br label %15, !dbg !5790

11:                                               ; preds = %4
  %12 = or i16 %8, 2, !dbg !5791
  call void @llvm.dbg.value(metadata i16 %12, metadata !5782, metadata !DIExpression()), !dbg !5783
  br label %15, !dbg !5792

13:                                               ; preds = %4
  %14 = or i16 %7, 3, !dbg !5793
  call void @llvm.dbg.value(metadata i16 %14, metadata !5782, metadata !DIExpression()), !dbg !5783
  br label %15, !dbg !5794

15:                                               ; preds = %4, %13, %11, %9
  %16 = phi i16 [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %4 ], !dbg !5783
  call void @llvm.dbg.value(metadata i16 %16, metadata !5782, metadata !DIExpression()), !dbg !5783
  %17 = and i16 %16, -61, !dbg !5795
  call void @llvm.dbg.value(metadata i16 %16, metadata !5782, metadata !DIExpression(DW_OP_constu, 18446744073709551611, DW_OP_and, DW_OP_stack_value)), !dbg !5783
  %18 = icmp eq i32 %2, 1, !dbg !5796
  %19 = select i1 %18, i16 4, i16 0, !dbg !5796
  %20 = or i16 %17, %19, !dbg !5796
  call void @llvm.dbg.value(metadata !DIArgList(i16 %17, i16 %19), metadata !5782, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !5783
  call void @llvm.dbg.value(metadata i16 %20, metadata !5782, metadata !DIExpression()), !dbg !5783
  %21 = icmp eq i32 %3, 2, !dbg !5797
  %22 = or i16 %20, 16, !dbg !5797
  %23 = select i1 %21, i16 %22, i16 %20, !dbg !5797
  call void @llvm.dbg.value(metadata i16 %23, metadata !5782, metadata !DIExpression()), !dbg !5783
  %24 = zext i16 %23 to i32, !dbg !5798
  store volatile i32 %24, i32* %5, align 4, !dbg !5799
  ret void, !dbg !5800
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_put_char_block(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1) local_unnamed_addr #2 !dbg !5801 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5805, metadata !DIExpression()), !dbg !5808
  call void @llvm.dbg.value(metadata i8 %1, metadata !5806, metadata !DIExpression()), !dbg !5808
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %4, !dbg !5809

4:                                                ; preds = %4, %2
  %5 = load volatile i32, i32* %3, align 4, !dbg !5810
  call void @llvm.dbg.value(metadata i32 %5, metadata !5807, metadata !DIExpression()), !dbg !5808
  %6 = and i32 %5, 32, !dbg !5812
  %7 = icmp eq i32 %6, 0, !dbg !5812
  br i1 %7, label %4, label %8, !dbg !5814, !llvm.loop !5815

8:                                                ; preds = %4
  %9 = zext i8 %1 to i32, !dbg !5817
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5819
  store volatile i32 %9, i32* %10, align 4, !dbg !5820
  ret void, !dbg !5821
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local zeroext i8 @uart_get_char_block(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5822 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5826, metadata !DIExpression()), !dbg !5829
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !5830

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !5831
  call void @llvm.dbg.value(metadata i32 %4, metadata !5827, metadata !DIExpression()), !dbg !5829
  %5 = and i32 %4, 1, !dbg !5833
  %6 = icmp eq i32 %5, 0, !dbg !5833
  br i1 %6, label %3, label %7, !dbg !5835, !llvm.loop !5836

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5838
  %9 = load volatile i32, i32* %8, align 4, !dbg !5838
  %10 = trunc i32 %9 to i8, !dbg !5840
  call void @llvm.dbg.value(metadata i8 %10, metadata !5828, metadata !DIExpression()), !dbg !5829
  ret i8 %10, !dbg !5841
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_get_char_unblocking(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5842 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5846, metadata !DIExpression()), !dbg !5849
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5850
  %3 = load volatile i32, i32* %2, align 4, !dbg !5850
  call void @llvm.dbg.value(metadata i32 %3, metadata !5847, metadata !DIExpression()), !dbg !5849
  %4 = and i32 %3, 1, !dbg !5851
  %5 = icmp eq i32 %4, 0, !dbg !5851
  br i1 %5, label %9, label %6, !dbg !5853

6:                                                ; preds = %1
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !5854
  %8 = load volatile i32, i32* %7, align 4, !dbg !5854
  call void @llvm.dbg.value(metadata i32 %8, metadata !5848, metadata !DIExpression()), !dbg !5849
  br label %9, !dbg !5856

9:                                                ; preds = %1, %6
  %10 = phi i32 [ %8, %6 ], [ -1, %1 ], !dbg !5857
  call void @llvm.dbg.value(metadata i32 %10, metadata !5848, metadata !DIExpression()), !dbg !5849
  ret i32 %10, !dbg !5858
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_hardware_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5859 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5863, metadata !DIExpression()), !dbg !5866
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5867
  %3 = load volatile i32, i32* %2, align 4, !dbg !5867
  call void @llvm.dbg.value(metadata i32 %3, metadata !5865, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5866
  store volatile i32 191, i32* %2, align 4, !dbg !5868
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5869
  %5 = load volatile i32, i32* %4, align 4, !dbg !5869
  call void @llvm.dbg.value(metadata i32 %5, metadata !5864, metadata !DIExpression()), !dbg !5866
  %6 = and i32 %5, 65343, !dbg !5870
  %7 = or i32 %6, 192, !dbg !5870
  call void @llvm.dbg.value(metadata i32 %5, metadata !5864, metadata !DIExpression(DW_OP_constu, 192, DW_OP_or, DW_OP_stack_value)), !dbg !5866
  store volatile i32 %7, i32* %4, align 4, !dbg !5871
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5872
  store volatile i32 0, i32* %8, align 4, !dbg !5873
  store volatile i32 0, i32* %2, align 4, !dbg !5874
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5875
  store volatile i32 2, i32* %9, align 4, !dbg !5876
  %10 = and i32 %3, 65535, !dbg !5877
  store volatile i32 %10, i32* %2, align 4, !dbg !5878
  ret void, !dbg !5879
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_software_flowcontrol(%struct.UART_REGISTER_T* noundef %0, i8 noundef zeroext %1, i8 noundef zeroext %2, i8 noundef zeroext %3) local_unnamed_addr #2 !dbg !5880 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5884, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.value(metadata i8 %1, metadata !5885, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.value(metadata i8 %2, metadata !5886, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.value(metadata i8 %3, metadata !5887, metadata !DIExpression()), !dbg !5890
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5891
  %6 = load volatile i32, i32* %5, align 4, !dbg !5891
  call void @llvm.dbg.value(metadata i32 %6, metadata !5889, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5890
  store volatile i32 191, i32* %5, align 4, !dbg !5892
  %7 = zext i8 %1 to i32, !dbg !5893
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !5894
  store volatile i32 %7, i32* %8, align 4, !dbg !5895
  %9 = zext i8 %2 to i32, !dbg !5896
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !5897
  store volatile i32 %9, i32* %10, align 4, !dbg !5898
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5899
  %12 = load volatile i32, i32* %11, align 4, !dbg !5899
  call void @llvm.dbg.value(metadata i32 %12, metadata !5888, metadata !DIExpression()), !dbg !5890
  %13 = and i32 %12, 65509, !dbg !5900
  %14 = or i32 %13, 26, !dbg !5900
  call void @llvm.dbg.value(metadata i32 %12, metadata !5888, metadata !DIExpression(DW_OP_constu, 26, DW_OP_or, DW_OP_stack_value)), !dbg !5890
  store volatile i32 %14, i32* %11, align 4, !dbg !5901
  %15 = zext i8 %3 to i32, !dbg !5902
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !5903
  store volatile i32 %15, i32* %16, align 4, !dbg !5904
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !5905
  store volatile i32 1, i32* %17, align 4, !dbg !5906
  %18 = and i32 %6, 65535, !dbg !5907
  store volatile i32 %18, i32* %5, align 4, !dbg !5908
  ret void, !dbg !5909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_disable_flowcontrol(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5910 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5912, metadata !DIExpression()), !dbg !5914
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5915
  %3 = load volatile i32, i32* %2, align 4, !dbg !5915
  call void @llvm.dbg.value(metadata i32 %3, metadata !5913, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5914
  store volatile i32 191, i32* %2, align 4, !dbg !5916
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5917
  store volatile i32 0, i32* %4, align 4, !dbg !5918
  store volatile i32 0, i32* %2, align 4, !dbg !5919
  %5 = and i32 %3, 65535, !dbg !5920
  store volatile i32 %5, i32* %2, align 4, !dbg !5921
  ret void, !dbg !5922
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_set_fifo(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5923 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5925, metadata !DIExpression()), !dbg !5928
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5929
  %3 = load volatile i32, i32* %2, align 4, !dbg !5929
  call void @llvm.dbg.value(metadata i32 %3, metadata !5927, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5928
  store volatile i32 191, i32* %2, align 4, !dbg !5930
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5931
  %5 = load volatile i32, i32* %4, align 4, !dbg !5931
  call void @llvm.dbg.value(metadata i32 %5, metadata !5926, metadata !DIExpression()), !dbg !5928
  %6 = and i32 %5, 65519, !dbg !5932
  %7 = or i32 %6, 16, !dbg !5932
  call void @llvm.dbg.value(metadata i32 %5, metadata !5926, metadata !DIExpression(DW_OP_constu, 16, DW_OP_or, DW_OP_stack_value)), !dbg !5928
  store volatile i32 %7, i32* %4, align 4, !dbg !5933
  store volatile i32 0, i32* %2, align 4, !dbg !5934
  store volatile i32 135, i32* %4, align 4, !dbg !5935
  %8 = and i32 %3, 65535, !dbg !5936
  store volatile i32 %8, i32* %2, align 4, !dbg !5937
  ret void, !dbg !5938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_unmask_receive_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !5939 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5941, metadata !DIExpression()), !dbg !5944
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !5945
  %3 = load volatile i32, i32* %2, align 4, !dbg !5945
  call void @llvm.dbg.value(metadata i32 %3, metadata !5943, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !5944
  %4 = load volatile i32, i32* %2, align 4, !dbg !5946
  %5 = and i32 %4, -129, !dbg !5946
  store volatile i32 %5, i32* %2, align 4, !dbg !5946
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !5947
  %7 = load volatile i32, i32* %6, align 4, !dbg !5947
  call void @llvm.dbg.value(metadata i32 %7, metadata !5942, metadata !DIExpression()), !dbg !5944
  %8 = and i32 %7, 65530, !dbg !5948
  %9 = or i32 %8, 5, !dbg !5948
  call void @llvm.dbg.value(metadata i32 %7, metadata !5942, metadata !DIExpression(DW_OP_constu, 5, DW_OP_or, DW_OP_stack_value)), !dbg !5944
  store volatile i32 %9, i32* %6, align 4, !dbg !5949
  %10 = and i32 %3, 65535, !dbg !5950
  %11 = load volatile i32, i32* %2, align 4, !dbg !5951
  %12 = and i32 %10, %11, !dbg !5951
  store volatile i32 %12, i32* %2, align 4, !dbg !5951
  ret void, !dbg !5952
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !5953 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5957, metadata !DIExpression()), !dbg !5960
  call void @llvm.dbg.value(metadata i32 %1, metadata !5958, metadata !DIExpression()), !dbg !5960
  call void @llvm.dbg.value(metadata i16 145, metadata !5959, metadata !DIExpression()), !dbg !5960
  %3 = icmp eq i32 %1, 0, !dbg !5961
  %4 = select i1 %3, i32 149, i32 147
  call void @llvm.dbg.value(metadata i16 undef, metadata !5959, metadata !DIExpression()), !dbg !5960
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5963
  store volatile i32 %4, i32* %5, align 4, !dbg !5964
  ret void, !dbg !5965
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5966 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5971, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.value(metadata i32 0, metadata !5974, metadata !DIExpression()), !dbg !5975
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !5976
  %3 = load volatile i32, i32* %2, align 4, !dbg !5976
  call void @llvm.dbg.value(metadata i32 %3, metadata !5972, metadata !DIExpression()), !dbg !5975
  %4 = and i32 %3, 1, !dbg !5977
  %5 = icmp eq i32 %4, 0, !dbg !5977
  br i1 %5, label %6, label %16, !dbg !5979

6:                                                ; preds = %1
  %7 = and i32 %3, 63, !dbg !5980
  switch i32 %7, label %16 [
    i32 12, label %8
    i32 6, label %9
    i32 2, label %15
  ], !dbg !5981

8:                                                ; preds = %6
  call void @llvm.dbg.value(metadata i32 2, metadata !5974, metadata !DIExpression()), !dbg !5975
  br label %16, !dbg !5982

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5984
  %11 = load volatile i32, i32* %10, align 4, !dbg !5984
  call void @llvm.dbg.value(metadata i32 %11, metadata !5973, metadata !DIExpression()), !dbg !5975
  %12 = and i32 %11, 16, !dbg !5985
  %13 = icmp eq i32 %12, 0, !dbg !5985
  %14 = select i1 %13, i32 1, i32 3
  br label %16

15:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 5, metadata !5974, metadata !DIExpression()), !dbg !5975
  br label %16, !dbg !5987

16:                                               ; preds = %8, %15, %6, %9, %1
  %17 = phi i32 [ 0, %1 ], [ 0, %6 ], [ 5, %15 ], [ 2, %8 ], [ %14, %9 ], !dbg !5975
  ret i32 %17, !dbg !5988
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @uart_verify_error(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !5989 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !5993, metadata !DIExpression()), !dbg !5996
  call void @llvm.dbg.value(metadata i32 0, metadata !5995, metadata !DIExpression()), !dbg !5996
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0, !dbg !5997
  %3 = load volatile i32, i32* %2, align 4, !dbg !5997
  call void @llvm.dbg.value(metadata i32 %3, metadata !5994, metadata !DIExpression()), !dbg !5996
  %4 = and i32 %3, 14, !dbg !5998
  %5 = icmp eq i32 %4, 0, !dbg !5998
  %6 = sext i1 %5 to i32, !dbg !6000
  call void @llvm.dbg.value(metadata i32 %6, metadata !5995, metadata !DIExpression()), !dbg !5996
  ret i32 %6, !dbg !6001
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @uart_clear_timeout_interrupt(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #11 !dbg !6002 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6004, metadata !DIExpression()), !dbg !6006
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6007
  %3 = load volatile i32, i32* %2, align 4, !dbg !6007
  call void @llvm.dbg.value(metadata i32 %3, metadata !6005, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6006
  call void @llvm.dbg.value(metadata i32 %3, metadata !6005, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6006
  ret void, !dbg !6008
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_reset_default_value(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6009 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6011, metadata !DIExpression()), !dbg !6012
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 3, !dbg !6013
  store volatile i32 191, i32* %2, align 4, !dbg !6014
  %3 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 2, i32 0, !dbg !6015
  store volatile i32 16, i32* %3, align 4, !dbg !6016
  %4 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 4, i32 0, !dbg !6017
  store volatile i32 0, i32* %4, align 4, !dbg !6018
  %5 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 6, !dbg !6019
  store volatile i32 0, i32* %5, align 4, !dbg !6020
  store volatile i32 128, i32* %2, align 4, !dbg !6021
  %6 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 0, i32 0, !dbg !6022
  store volatile i32 0, i32* %6, align 4, !dbg !6023
  %7 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 1, i32 0, !dbg !6024
  store volatile i32 0, i32* %7, align 4, !dbg !6025
  store volatile i32 0, i32* %2, align 4, !dbg !6026
  store volatile i32 0, i32* %7, align 4, !dbg !6027
  store volatile i32 0, i32* %3, align 4, !dbg !6028
  store volatile i32 191, i32* %2, align 4, !dbg !6029
  store volatile i32 0, i32* %3, align 4, !dbg !6030
  store volatile i32 0, i32* %2, align 4, !dbg !6031
  store volatile i32 0, i32* %4, align 4, !dbg !6032
  %8 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 7, i32 0, !dbg !6033
  store volatile i32 0, i32* %8, align 4, !dbg !6034
  %9 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 8, !dbg !6035
  store volatile i32 0, i32* %9, align 4, !dbg !6036
  %10 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 9, !dbg !6037
  store volatile i32 0, i32* %10, align 4, !dbg !6038
  %11 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 10, !dbg !6039
  store volatile i32 0, i32* %11, align 4, !dbg !6040
  %12 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 11, !dbg !6041
  store volatile i32 0, i32* %12, align 4, !dbg !6042
  %13 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 13, !dbg !6043
  store volatile i32 0, i32* %13, align 4, !dbg !6044
  %14 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 14, !dbg !6045
  store volatile i32 0, i32* %14, align 4, !dbg !6046
  %15 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 15, !dbg !6047
  store volatile i32 0, i32* %15, align 4, !dbg !6048
  %16 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 16, !dbg !6049
  store volatile i32 0, i32* %16, align 4, !dbg !6050
  %17 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 17, !dbg !6051
  store volatile i32 0, i32* %17, align 4, !dbg !6052
  %18 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 18, !dbg !6053
  store volatile i32 0, i32* %18, align 4, !dbg !6054
  %19 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6055
  store volatile i32 0, i32* %19, align 4, !dbg !6056
  store volatile i32 0, i32* %13, align 4, !dbg !6057
  %20 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 21, !dbg !6058
  store volatile i32 0, i32* %20, align 4, !dbg !6059
  %21 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 22, !dbg !6060
  store volatile i32 0, i32* %21, align 4, !dbg !6061
  ret void, !dbg !6062
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_query_empty(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6063 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6065, metadata !DIExpression()), !dbg !6066
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 5, i32 0
  br label %3, !dbg !6067

3:                                                ; preds = %3, %1
  %4 = load volatile i32, i32* %2, align 4, !dbg !6068
  %5 = and i32 %4, 64, !dbg !6069
  %6 = icmp eq i32 %5, 0, !dbg !6070
  br i1 %6, label %3, label %7, !dbg !6067, !llvm.loop !6071

7:                                                ; preds = %3
  ret void, !dbg !6073
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @uart_port_to_dma_channel(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !6074 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6078, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 %1, metadata !6079, metadata !DIExpression()), !dbg !6081
  call void @llvm.dbg.value(metadata i32 15, metadata !6080, metadata !DIExpression()), !dbg !6081
  switch i32 %0, label %15 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
    i32 3, label %12
  ], !dbg !6082

3:                                                ; preds = %2
  %4 = icmp eq i32 %1, 0, !dbg !6083
  %5 = select i1 %4, i32 14, i32 15
  br label %15

6:                                                ; preds = %2
  %7 = icmp eq i32 %1, 0, !dbg !6086
  %8 = select i1 %7, i32 8, i32 9
  br label %15

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, 0, !dbg !6088
  %11 = select i1 %10, i32 10, i32 11
  br label %15

12:                                               ; preds = %2
  %13 = icmp eq i32 %1, 0, !dbg !6090
  %14 = select i1 %13, i32 12, i32 13
  br label %15

15:                                               ; preds = %12, %9, %6, %3, %2
  %16 = phi i32 [ 15, %2 ], [ %5, %3 ], [ %8, %6 ], [ %11, %9 ], [ %14, %12 ], !dbg !6081
  call void @llvm.dbg.value(metadata i32 %16, metadata !6080, metadata !DIExpression()), !dbg !6081
  ret i32 %16, !dbg !6092
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local void @uart_dma_channel_to_callback_data(i32 noundef %0, %struct.uart_dma_callback_data_t* nocapture noundef writeonly %1) local_unnamed_addr #6 !dbg !6093 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6103, metadata !DIExpression()), !dbg !6105
  call void @llvm.dbg.value(metadata %struct.uart_dma_callback_data_t* %1, metadata !6104, metadata !DIExpression()), !dbg !6105
  %3 = add i32 %0, -8, !dbg !6106
  %4 = icmp ult i32 %3, 8, !dbg !6106
  br i1 %4, label %5, label %12, !dbg !6106

5:                                                ; preds = %2
  %6 = getelementptr inbounds [8 x i8], [8 x i8]* @switch.table.uart_dma_channel_to_callback_data, i32 0, i32 %3, !dbg !6106
  %7 = load i8, i8* %6, align 1, !dbg !6106
  %8 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table.uart_dma_channel_to_callback_data.2, i32 0, i32 %3, !dbg !6106
  %9 = load i32, i32* %8, align 4, !dbg !6106
  %10 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 0, !dbg !6107
  store i8 %7, i8* %10, align 4, !dbg !6107
  %11 = getelementptr inbounds %struct.uart_dma_callback_data_t, %struct.uart_dma_callback_data_t* %1, i32 0, i32 1, !dbg !6107
  store i32 %9, i32* %11, align 4, !dbg !6107
  br label %12, !dbg !6109

12:                                               ; preds = %2, %5
  ret void, !dbg !6109
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @uart_enable_dma(%struct.UART_REGISTER_T* noundef %0) local_unnamed_addr #2 !dbg !6110 {
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %0, metadata !6114, metadata !DIExpression()), !dbg !6115
  %2 = getelementptr inbounds %struct.UART_REGISTER_T, %struct.UART_REGISTER_T* %0, i32 0, i32 19, !dbg !6116
  store volatile i32 3, i32* %2, align 4, !dbg !6117
  ret void, !dbg !6118
}

; Function Attrs: noinline nounwind optsize
define dso_local void @uart_interrupt_handler(i32 noundef %0) #0 !dbg !6119 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6121, metadata !DIExpression()), !dbg !6125
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* inttoptr (i32 -1609760768 to %struct.UART_REGISTER_T*), metadata !6124, metadata !DIExpression()), !dbg !6125
  %2 = add i32 %0, -30, !dbg !6126
  %3 = icmp ult i32 %2, 3, !dbg !6126
  %4 = add i32 %0, -29
  %5 = select i1 %3, i32 %4, i32 0, !dbg !6126
  call void @llvm.dbg.value(metadata i32 %5, metadata !6122, metadata !DIExpression()), !dbg !6125
  %6 = getelementptr inbounds [4 x %struct.UART_REGISTER_T*], [4 x %struct.UART_REGISTER_T*]* @g_uart_regbase, i32 0, i32 %5, !dbg !6127
  %7 = load %struct.UART_REGISTER_T*, %struct.UART_REGISTER_T** %6, align 4, !dbg !6127
  call void @llvm.dbg.value(metadata %struct.UART_REGISTER_T* %7, metadata !6124, metadata !DIExpression()), !dbg !6125
  %8 = tail call i32 @uart_query_interrupt_type(%struct.UART_REGISTER_T* noundef %7) #20, !dbg !6128
  call void @llvm.dbg.value(metadata i32 %8, metadata !6123, metadata !DIExpression()), !dbg !6125
  switch i32 %8, label %12 [
    i32 2, label %9
    i32 1, label %10
    i32 4, label %13
    i32 0, label %13
    i32 3, label %11
  ], !dbg !6129

9:                                                ; preds = %1
  tail call void @uart_receive_handler(i32 noundef %5, i1 noundef zeroext true) #20, !dbg !6130
  br label %13, !dbg !6132

10:                                               ; preds = %1
  tail call void @uart_error_handler(i32 noundef %5) #20, !dbg !6133
  br label %13, !dbg !6134

11:                                               ; preds = %1
  tail call void @uart_purge_fifo(%struct.UART_REGISTER_T* noundef %7, i32 noundef 1) #20, !dbg !6135
  br label %13, !dbg !6136

12:                                               ; preds = %1
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([67 x i8], [67 x i8]* @.str.81, i32 0, i32 0), i32 noundef 276, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.uart_interrupt_handler, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.82, i32 0, i32 0)) #23, !dbg !6137
  unreachable, !dbg !6137

13:                                               ; preds = %11, %1, %1, %10, %9
  ret void, !dbg !6138
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_slave_init(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) local_unnamed_addr #0 !dbg !6139 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6155, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6156, metadata !DIExpression()), !dbg !6160
  %3 = tail call fastcc zeroext i1 @is_slave_port(i32 noundef %0) #21, !dbg !6161
  br i1 %3, label %4, label %13, !dbg !6163

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @is_slave_config(%struct.hal_uart_config_t* noundef %1) #21, !dbg !6164
  br i1 %5, label %6, label %13, !dbg !6166

6:                                                ; preds = %4
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6167
  call void @llvm.dbg.value(metadata i32 %7, metadata !6158, metadata !DIExpression()), !dbg !6168
  %8 = getelementptr inbounds [1 x i8], [1 x i8]* @g_spi_slave_status, i32 0, i32 %0, !dbg !6169
  %9 = load volatile i8, i8* %8, align 1, !dbg !6169
  %10 = icmp eq i8 %9, 1, !dbg !6169
  br i1 %10, label %12, label %11, !dbg !6167

11:                                               ; preds = %6
  store volatile i8 1, i8* %8, align 1, !dbg !6171
  call void @llvm.dbg.value(metadata i32 0, metadata !6157, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.value(metadata i32 undef, metadata !6157, metadata !DIExpression()), !dbg !6160
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6167
  tail call void @spi_slave_init(i32 noundef %0, %struct.hal_uart_config_t* noundef %1) #20, !dbg !6173
  br label %13, !dbg !6174

12:                                               ; preds = %6
  call void @llvm.dbg.value(metadata i32 undef, metadata !6157, metadata !DIExpression()), !dbg !6160
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6167
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__FUNCTION__.hal_spi_slave_init, i32 0, i32 0), i32 noundef 117, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @.str.83, i32 0, i32 0), i32 noundef %0) #20, !dbg !6175
  br label %13, !dbg !6178

13:                                               ; preds = %4, %2, %11, %12
  %14 = phi i32 [ -3, %12 ], [ 0, %11 ], [ -2, %2 ], [ -1, %4 ], !dbg !6160
  ret i32 %14, !dbg !6179
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define internal fastcc zeroext i1 @is_slave_port(i32 noundef %0) unnamed_addr #10 !dbg !6180 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6184, metadata !DIExpression()), !dbg !6185
  %2 = icmp eq i32 %0, 0, !dbg !6186
  ret i1 %2, !dbg !6187
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define internal fastcc zeroext i1 @is_slave_config(%struct.hal_uart_config_t* nocapture noundef readonly %0) unnamed_addr #4 !dbg !6188 {
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %0, metadata !6194, metadata !DIExpression()), !dbg !6196
  call void @llvm.dbg.value(metadata i8 1, metadata !6195, metadata !DIExpression()), !dbg !6196
  %2 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 1, !dbg !6197
  %3 = load i32, i32* %2, align 4, !dbg !6197
  call void @llvm.dbg.value(metadata i1 undef, metadata !6195, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6196
  %4 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 2, !dbg !6198
  %5 = load i32, i32* %4, align 4, !dbg !6198
  call void @llvm.dbg.value(metadata i1 undef, metadata !6195, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6196
  %6 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %0, i32 0, i32 3, !dbg !6199
  %7 = load i32, i32* %6, align 4, !dbg !6199
  %8 = or i32 %5, %3, !dbg !6200
  call void @llvm.dbg.value(metadata i1 undef, metadata !6195, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6196
  %9 = or i32 %8, %7, !dbg !6201
  %10 = icmp ult i32 %9, 2, !dbg !6201
  call void @llvm.dbg.value(metadata i1 %10, metadata !6195, metadata !DIExpression(DW_OP_LLVM_convert, 1, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !6196
  ret i1 %10, !dbg !6202
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_slave_deinit(i32 noundef %0) local_unnamed_addr #0 !dbg !6203 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6207, metadata !DIExpression()), !dbg !6208
  %2 = tail call fastcc zeroext i1 @is_slave_port(i32 noundef %0) #21, !dbg !6209
  br i1 %2, label %3, label %6, !dbg !6211

3:                                                ; preds = %1
  %4 = tail call i32 @hal_nvic_disable_irq(i32 noundef 42) #20, !dbg !6212
  %5 = getelementptr inbounds [1 x i8], [1 x i8]* @g_spi_slave_status, i32 0, i32 %0, !dbg !6213
  store volatile i8 0, i8* %5, align 1, !dbg !6213
  store i8 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 0), align 1, !dbg !6215
  store i8 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6216
  br label %6, !dbg !6217

6:                                                ; preds = %1, %3
  %7 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6208
  ret i32 %7, !dbg !6218
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_slave_register_callback(i32 noundef %0, void ([2 x i32], i8*)* noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6219 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6223, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata void ([2 x i32], i8*)* %1, metadata !6224, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.value(metadata i8* %2, metadata !6225, metadata !DIExpression()), !dbg !6226
  %4 = tail call fastcc zeroext i1 @is_slave_port(i32 noundef %0) #21, !dbg !6227
  br i1 %4, label %5, label %13, !dbg !6229

5:                                                ; preds = %3
  %6 = icmp eq void ([2 x i32], i8*)* %1, null, !dbg !6230
  br i1 %6, label %13, label %7, !dbg !6232

7:                                                ; preds = %5
  %8 = getelementptr inbounds [1 x void ([2 x i32], i8*)*], [1 x void ([2 x i32], i8*)*]* @g_slvx_callback, i32 0, i32 %0, !dbg !6233
  store void ([2 x i32], i8*)* %1, void ([2 x i32], i8*)** %8, align 4, !dbg !6234
  %9 = getelementptr inbounds [1 x i8*], [1 x i8*]* @g_slvx_user_data, i32 0, i32 %0, !dbg !6235
  store i8* %2, i8** %9, align 4, !dbg !6236
  %10 = tail call i32 @hal_nvic_register_isr_handler(i32 noundef 42, void (i32)* noundef nonnull @hal_spi_slave_isr) #20, !dbg !6237
  %11 = tail call i32 @hal_nvic_set_priority(i32 noundef 42, i32 noundef 47) #20, !dbg !6238
  %12 = tail call i32 @hal_nvic_enable_irq(i32 noundef 42) #20, !dbg !6239
  br label %13, !dbg !6240

13:                                               ; preds = %5, %3, %7
  %14 = phi i32 [ 0, %7 ], [ -2, %3 ], [ -1, %5 ], !dbg !6226
  ret i32 %14, !dbg !6241
}

; Function Attrs: noinline nounwind optsize
define internal void @hal_spi_slave_isr(i32 noundef %0) #0 !dbg !6242 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6244, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 0, metadata !6245, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 0, metadata !6246, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 undef, metadata !6246, metadata !DIExpression()), !dbg !6247
  call void @llvm.dbg.value(metadata i32 0, metadata !6245, metadata !DIExpression()), !dbg !6247
  %2 = load void ([2 x i32], i8*)*, void ([2 x i32], i8*)** getelementptr inbounds ([1 x void ([2 x i32], i8*)*], [1 x void ([2 x i32], i8*)*]* @g_slvx_callback, i32 0, i32 0), align 4, !dbg !6248
  %3 = load i8*, i8** getelementptr inbounds ([1 x i8*], [1 x i8*]* @g_slvx_user_data, i32 0, i32 0), align 4, !dbg !6249
  tail call void @spi_slave_lisr(i32 noundef 0, void ([2 x i32], i8*)* noundef %2, i8* noundef %3) #20, !dbg !6250
  ret void, !dbg !6251
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_slave_send(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6252 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6256, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.value(metadata i8* %1, metadata !6257, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.value(metadata i32 %2, metadata !6258, metadata !DIExpression()), !dbg !6260
  call void @llvm.dbg.value(metadata i32 0, metadata !6259, metadata !DIExpression()), !dbg !6260
  %4 = tail call fastcc zeroext i1 @is_slave_port(i32 noundef %0) #21, !dbg !6261
  br i1 %4, label %5, label %14, !dbg !6263

5:                                                ; preds = %3
  %6 = icmp eq i8* %1, null, !dbg !6264
  %7 = icmp eq i32 %2, 0
  %8 = or i1 %6, %7, !dbg !6266
  br i1 %8, label %14, label %9, !dbg !6266

9:                                                ; preds = %5
  %10 = ptrtoint i8* %1 to i32, !dbg !6267
  %11 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %10) #20, !dbg !6269
  br i1 %11, label %14, label %12, !dbg !6270

12:                                               ; preds = %9
  %13 = tail call i32 @spi_slave_send(i32 noundef %0, i8* noundef nonnull %1, i32 noundef %2) #20, !dbg !6271
  call void @llvm.dbg.value(metadata i32 %13, metadata !6259, metadata !DIExpression()), !dbg !6260
  br label %14, !dbg !6272

14:                                               ; preds = %9, %5, %3, %12
  %15 = phi i32 [ %13, %12 ], [ -2, %3 ], [ -1, %5 ], [ -1, %9 ], !dbg !6260
  ret i32 %15, !dbg !6273
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_slave_get_master_read_config(i32 noundef %0, i32* noundef %1, i32* noundef %2) local_unnamed_addr #0 !dbg !6274 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6278, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.value(metadata i32* %1, metadata !6279, metadata !DIExpression()), !dbg !6281
  call void @llvm.dbg.value(metadata i32* %2, metadata !6280, metadata !DIExpression()), !dbg !6281
  %4 = tail call fastcc zeroext i1 @is_slave_port(i32 noundef %0) #21, !dbg !6282
  br i1 %4, label %5, label %13, !dbg !6284

5:                                                ; preds = %3
  %6 = icmp eq i32* %1, null, !dbg !6285
  %7 = icmp eq i32* %2, null
  %8 = or i1 %6, %7, !dbg !6287
  br i1 %8, label %13, label %9, !dbg !6287

9:                                                ; preds = %5
  %10 = tail call i32 @spi_slave_query_config_info(i32 noundef %0, i32* noundef nonnull %1, i32* noundef nonnull %2) #20, !dbg !6288
  %11 = icmp eq i32 %10, 0, !dbg !6290
  %12 = select i1 %11, i32 0, i32 -4, !dbg !6281
  br label %13, !dbg !6281

13:                                               ; preds = %9, %5, %3
  %14 = phi i32 [ -2, %3 ], [ -1, %5 ], [ %12, %9 ], !dbg !6281
  ret i32 %14, !dbg !6291
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_slave_receive(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6292 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6296, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i8* %1, metadata !6297, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i32 %2, metadata !6298, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.value(metadata i32 0, metadata !6299, metadata !DIExpression()), !dbg !6300
  %4 = tail call fastcc zeroext i1 @is_slave_port(i32 noundef %0) #21, !dbg !6301
  br i1 %4, label %5, label %14, !dbg !6303

5:                                                ; preds = %3
  %6 = icmp eq i8* %1, null, !dbg !6304
  %7 = icmp eq i32 %2, 0
  %8 = or i1 %6, %7, !dbg !6306
  br i1 %8, label %14, label %9, !dbg !6306

9:                                                ; preds = %5
  %10 = ptrtoint i8* %1 to i32, !dbg !6307
  %11 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %10) #20, !dbg !6309
  br i1 %11, label %14, label %12, !dbg !6310

12:                                               ; preds = %9
  %13 = tail call i32 @spi_slave_receive(i32 noundef %0, i8* noundef nonnull %1, i32 noundef %2) #20, !dbg !6311
  call void @llvm.dbg.value(metadata i32 %13, metadata !6299, metadata !DIExpression()), !dbg !6300
  br label %14, !dbg !6312

14:                                               ; preds = %9, %5, %3, %12
  %15 = phi i32 [ %13, %12 ], [ -2, %3 ], [ -1, %5 ], [ -1, %9 ], !dbg !6300
  ret i32 %15, !dbg !6313
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_slave_get_master_write_config(i32 noundef %0, i32* noundef %1, i32* noundef %2) local_unnamed_addr #0 !dbg !6314 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6316, metadata !DIExpression()), !dbg !6319
  call void @llvm.dbg.value(metadata i32* %1, metadata !6317, metadata !DIExpression()), !dbg !6319
  call void @llvm.dbg.value(metadata i32* %2, metadata !6318, metadata !DIExpression()), !dbg !6319
  %4 = tail call fastcc zeroext i1 @is_slave_port(i32 noundef %0) #21, !dbg !6320
  br i1 %4, label %5, label %13, !dbg !6322

5:                                                ; preds = %3
  %6 = icmp eq i32* %1, null, !dbg !6323
  %7 = icmp eq i32* %2, null
  %8 = or i1 %6, %7, !dbg !6325
  br i1 %8, label %13, label %9, !dbg !6325

9:                                                ; preds = %5
  %10 = tail call i32 @spi_slave_query_config_info(i32 noundef %0, i32* noundef nonnull %1, i32* noundef nonnull %2) #20, !dbg !6326
  %11 = icmp eq i32 %10, 0, !dbg !6328
  %12 = select i1 %11, i32 0, i32 -4, !dbg !6319
  br label %13, !dbg !6319

13:                                               ; preds = %9, %5, %3
  %14 = phi i32 [ -2, %3 ], [ -1, %5 ], [ %12, %9 ], !dbg !6319
  ret i32 %14, !dbg !6329
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_slave_set_early_miso(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !6330 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6335, metadata !DIExpression()), !dbg !6337
  call void @llvm.dbg.value(metadata i32 %1, metadata !6336, metadata !DIExpression()), !dbg !6337
  %3 = tail call fastcc zeroext i1 @is_slave_port(i32 noundef %0) #21, !dbg !6338
  br i1 %3, label %4, label %7, !dbg !6340

4:                                                ; preds = %2
  %5 = icmp ult i32 %1, 2, !dbg !6341
  br i1 %5, label %6, label %7, !dbg !6341

6:                                                ; preds = %4
  tail call void @spi_slave_set_early_miso(i32 noundef %0, i32 noundef %1) #20, !dbg !6343
  br label %7, !dbg !6344

7:                                                ; preds = %4, %2, %6
  %8 = phi i32 [ 0, %6 ], [ -2, %2 ], [ -1, %4 ], !dbg !6337
  ret i32 %8, !dbg !6345
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_spi_slave_set_command(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 !dbg !6346 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6351, metadata !DIExpression()), !dbg !6354
  call void @llvm.dbg.value(metadata i32 %1, metadata !6352, metadata !DIExpression()), !dbg !6354
  call void @llvm.dbg.value(metadata i8 %2, metadata !6353, metadata !DIExpression()), !dbg !6354
  %4 = tail call fastcc zeroext i1 @is_slave_port(i32 noundef %0) #21, !dbg !6355
  br i1 %4, label %5, label %10, !dbg !6357

5:                                                ; preds = %3
  %6 = icmp ugt i32 %1, 7, !dbg !6358
  %7 = icmp eq i8 %2, 0
  %8 = or i1 %6, %7, !dbg !6360
  br i1 %8, label %10, label %9, !dbg !6360

9:                                                ; preds = %5
  tail call void @spi_slave_set_command(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) #20, !dbg !6361
  br label %10, !dbg !6362

10:                                               ; preds = %5, %3, %9
  %11 = phi i32 [ 0, %9 ], [ -2, %3 ], [ -1, %5 ], !dbg !6354
  ret i32 %11, !dbg !6363
}

; Function Attrs: noinline nounwind optsize
define dso_local void @spi_slave_lisr(i32 noundef %0, void ([2 x i32], i8*)* nocapture noundef readonly %1, i8* noundef %2) local_unnamed_addr #0 !dbg !6364 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6377, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata void ([2 x i32], i8*)* %1, metadata !6378, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata i8* %2, metadata !6379, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata i32 0, metadata !6383, metadata !DIExpression()), !dbg !6384
  %4 = load volatile i32, i32* inttoptr (i32 -1609236444 to i32*), align 4, !dbg !6385
  %5 = and i32 %4, 511, !dbg !6386
  call void @llvm.dbg.value(metadata i32 %5, metadata !6381, metadata !DIExpression()), !dbg !6384
  switch i32 %5, label %50 [
    i32 32, label %6
    i32 16, label %14
    i32 1, label %22
    i32 2, label %27
    i32 4, label %32
    i32 8, label %39
    i32 64, label %46
    i32 128, label %46
    i32 256, label %46
  ], !dbg !6387

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 32, metadata !6382, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6384
  %7 = tail call i32 @hal_clock_enable(i32 noundef 51) #20, !dbg !6388
  %8 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6390
  store i8 %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 0), align 1, !dbg !6390
  store i8 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6390
  call void @llvm.dbg.value(metadata i8 %8, metadata !6380, metadata !DIExpression()), !dbg !6384
  %9 = zext i8 %8 to i32, !dbg !6392
  %10 = getelementptr inbounds [4 x [6 x i32]], [4 x [6 x i32]]* @g_spi_slave_fsm, i32 0, i32 %9, i32 1, !dbg !6392
  %11 = load i32, i32* %10, align 4, !dbg !6392
  call void @llvm.dbg.value(metadata i32 %11, metadata !6383, metadata !DIExpression()), !dbg !6384
  %12 = load volatile i32, i32* inttoptr (i32 -1609236464 to i32*), align 16, !dbg !6393
  %13 = or i32 %12, 1, !dbg !6393
  store volatile i32 %13, i32* inttoptr (i32 -1609236464 to i32*), align 16, !dbg !6393
  br label %50, !dbg !6394

14:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 16, metadata !6382, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6384
  %15 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6395
  store i8 %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 0), align 1, !dbg !6395
  store i8 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6395
  call void @llvm.dbg.value(metadata i8 %15, metadata !6380, metadata !DIExpression()), !dbg !6384
  %16 = zext i8 %15 to i32, !dbg !6397
  %17 = getelementptr inbounds [4 x [6 x i32]], [4 x [6 x i32]]* @g_spi_slave_fsm, i32 0, i32 %16, i32 0, !dbg !6397
  %18 = load i32, i32* %17, align 4, !dbg !6397
  call void @llvm.dbg.value(metadata i32 %18, metadata !6383, metadata !DIExpression()), !dbg !6384
  %19 = load volatile i32, i32* inttoptr (i32 -1609236464 to i32*), align 16, !dbg !6398
  %20 = and i32 %19, -2, !dbg !6398
  store volatile i32 %20, i32* inttoptr (i32 -1609236464 to i32*), align 16, !dbg !6398
  %21 = tail call i32 @hal_clock_disable(i32 noundef 51) #20, !dbg !6399
  br label %50, !dbg !6400

22:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 1, metadata !6382, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6384
  %23 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6401
  store i8 %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 0), align 1, !dbg !6401
  store i8 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6401
  call void @llvm.dbg.value(metadata i8 %23, metadata !6380, metadata !DIExpression()), !dbg !6384
  %24 = zext i8 %23 to i32, !dbg !6403
  %25 = getelementptr inbounds [4 x [6 x i32]], [4 x [6 x i32]]* @g_spi_slave_fsm, i32 0, i32 %24, i32 2, !dbg !6403
  %26 = load i32, i32* %25, align 4, !dbg !6403
  call void @llvm.dbg.value(metadata i32 %26, metadata !6383, metadata !DIExpression()), !dbg !6384
  br label %50, !dbg !6404

27:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 2, metadata !6382, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6384
  %28 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6405
  store i8 %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 0), align 1, !dbg !6405
  store i8 3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6405
  call void @llvm.dbg.value(metadata i8 %28, metadata !6380, metadata !DIExpression()), !dbg !6384
  %29 = zext i8 %28 to i32, !dbg !6407
  %30 = getelementptr inbounds [4 x [6 x i32]], [4 x [6 x i32]]* @g_spi_slave_fsm, i32 0, i32 %29, i32 4, !dbg !6407
  %31 = load i32, i32* %30, align 4, !dbg !6407
  call void @llvm.dbg.value(metadata i32 %31, metadata !6383, metadata !DIExpression()), !dbg !6384
  br label %50, !dbg !6408

32:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 4, metadata !6382, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6384
  %33 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6409
  store i8 %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 0), align 1, !dbg !6409
  store i8 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6409
  call void @llvm.dbg.value(metadata i8 %33, metadata !6380, metadata !DIExpression()), !dbg !6384
  %34 = zext i8 %33 to i32, !dbg !6411
  %35 = getelementptr inbounds [4 x [6 x i32]], [4 x [6 x i32]]* @g_spi_slave_fsm, i32 0, i32 %34, i32 3, !dbg !6411
  %36 = load i32, i32* %35, align 4, !dbg !6411
  call void @llvm.dbg.value(metadata i32 %36, metadata !6383, metadata !DIExpression()), !dbg !6384
  %37 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6412
  %38 = and i32 %37, -16385, !dbg !6412
  store volatile i32 %38, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6412
  br label %50, !dbg !6413

39:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 8, metadata !6382, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6384
  %40 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6414
  store i8 %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 0), align 1, !dbg !6414
  store i8 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6414
  call void @llvm.dbg.value(metadata i8 %40, metadata !6380, metadata !DIExpression()), !dbg !6384
  %41 = zext i8 %40 to i32, !dbg !6416
  %42 = getelementptr inbounds [4 x [6 x i32]], [4 x [6 x i32]]* @g_spi_slave_fsm, i32 0, i32 %41, i32 5, !dbg !6416
  %43 = load i32, i32* %42, align 4, !dbg !6416
  call void @llvm.dbg.value(metadata i32 %43, metadata !6383, metadata !DIExpression()), !dbg !6384
  %44 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6417
  %45 = and i32 %44, -8193, !dbg !6417
  store volatile i32 %45, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6417
  br label %50, !dbg !6418

46:                                               ; preds = %3, %3, %3
  call void @llvm.dbg.value(metadata i32 %5, metadata !6382, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6384
  %47 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6419
  store i8 %47, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 0), align 1, !dbg !6419
  store i8 1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @g_last2now_status, i32 0, i32 1), align 1, !dbg !6419
  %48 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6421
  %49 = and i32 %48, -24577, !dbg !6421
  store volatile i32 %49, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6421
  br label %50, !dbg !6422

50:                                               ; preds = %3, %46, %39, %32, %27, %22, %14, %6
  %51 = phi i32 [ undef, %3 ], [ %5, %46 ], [ 8, %39 ], [ 4, %32 ], [ 2, %27 ], [ 1, %22 ], [ 16, %14 ], [ 32, %6 ]
  %52 = phi i32 [ 0, %3 ], [ 0, %46 ], [ %43, %39 ], [ %36, %32 ], [ %31, %27 ], [ %26, %22 ], [ %18, %14 ], [ %11, %6 ], !dbg !6384
  call void @llvm.dbg.value(metadata i32 %52, metadata !6383, metadata !DIExpression()), !dbg !6384
  call void @llvm.dbg.value(metadata i32 %51, metadata !6382, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !6384
  call void @llvm.dbg.value(metadata i32 %52, metadata !6382, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !6384
  %53 = insertvalue [2 x i32] poison, i32 %52, 0, !dbg !6423
  %54 = insertvalue [2 x i32] %53, i32 %51, 1, !dbg !6423
  tail call void %1([2 x i32] %54, i8* noundef %2) #20, !dbg !6423
  ret void, !dbg !6424
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_slave_init(i32 noundef %0, %struct.hal_uart_config_t* nocapture noundef readonly %1) local_unnamed_addr #2 !dbg !6425 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6438, metadata !DIExpression()), !dbg !6440
  call void @llvm.dbg.value(metadata %struct.hal_uart_config_t* %1, metadata !6439, metadata !DIExpression()), !dbg !6440
  store volatile i32 1, i32* inttoptr (i32 -1609236456 to i32*), align 8, !dbg !6441
  store volatile i32 0, i32* inttoptr (i32 -1609236456 to i32*), align 8, !dbg !6442
  store volatile i32 65536, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6443
  store volatile i32 0, i32* inttoptr (i32 -1609236440 to i32*), align 8, !dbg !6444
  store volatile i32 134874753, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6445
  store volatile i32 202245122, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6446
  %3 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !6447
  %4 = load i32, i32* %3, align 4, !dbg !6447
  switch i32 %4, label %13 [
    i32 0, label %5
    i32 1, label %8
  ], !dbg !6448

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6449
  %7 = and i32 %6, -6145, !dbg !6449
  br label %11, !dbg !6451

8:                                                ; preds = %2
  %9 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6452
  %10 = or i32 %9, 6144, !dbg !6452
  br label %11, !dbg !6453

11:                                               ; preds = %5, %8
  %12 = phi i32 [ %10, %8 ], [ %7, %5 ]
  store volatile i32 %12, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6454
  br label %13, !dbg !6455

13:                                               ; preds = %11, %2
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !6455
  %15 = load i32, i32* %14, align 4, !dbg !6455
  switch i32 %15, label %24 [
    i32 0, label %16
    i32 1, label %19
  ], !dbg !6456

16:                                               ; preds = %13
  %17 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6457
  %18 = and i32 %17, -3, !dbg !6457
  br label %22, !dbg !6459

19:                                               ; preds = %13
  %20 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6460
  %21 = or i32 %20, 2, !dbg !6460
  br label %22, !dbg !6461

22:                                               ; preds = %16, %19
  %23 = phi i32 [ %21, %19 ], [ %18, %16 ]
  store volatile i32 %23, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6462
  br label %24, !dbg !6463

24:                                               ; preds = %22, %13
  %25 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !6463
  %26 = load i32, i32* %25, align 4, !dbg !6463
  switch i32 %26, label %35 [
    i32 0, label %27
    i32 1, label %30
  ], !dbg !6464

27:                                               ; preds = %24
  %28 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6465
  %29 = and i32 %28, -5, !dbg !6465
  br label %33, !dbg !6467

30:                                               ; preds = %24
  %31 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6468
  %32 = or i32 %31, 4, !dbg !6468
  br label %33, !dbg !6469

33:                                               ; preds = %27, %30
  %34 = phi i32 [ %32, %30 ], [ %29, %27 ]
  store volatile i32 %34, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6470
  br label %35, !dbg !6471

35:                                               ; preds = %33, %24
  %36 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !6471
  %37 = load i32, i32* %36, align 4, !dbg !6471
  store volatile i32 %37, i32* inttoptr (i32 -1609236460 to i32*), align 4, !dbg !6472
  %38 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6473
  %39 = or i32 %38, 2040, !dbg !6473
  store volatile i32 %39, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6473
  %40 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6474
  %41 = or i32 %40, 1, !dbg !6474
  store volatile i32 %41, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6474
  %42 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6475
  %43 = or i32 %42, 32768, !dbg !6475
  store volatile i32 %43, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6475
  ret void, !dbg !6476
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @spi_slave_send(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6477 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6479, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i8* %1, metadata !6480, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 %2, metadata !6481, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 0, metadata !6482, metadata !DIExpression()), !dbg !6483
  %4 = load volatile i32, i32* inttoptr (i32 -1609236476 to i32*), align 4, !dbg !6484
  call void @llvm.dbg.value(metadata i32 %4, metadata !6482, metadata !DIExpression()), !dbg !6483
  %5 = icmp eq i32 %4, %2, !dbg !6485
  br i1 %5, label %7, label %6, !dbg !6487

6:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__FUNCTION__.spi_slave_send, i32 0, i32 0), i32 noundef 204, i8* noundef getelementptr inbounds ([29 x i8], [29 x i8]* @.str.92, i32 0, i32 0), i32 noundef %0) #20, !dbg !6488
  br label %11, !dbg !6490

7:                                                ; preds = %3
  %8 = ptrtoint i8* %1 to i32, !dbg !6491
  store volatile i32 %8, i32* inttoptr (i32 -1609236452 to i32*), align 4, !dbg !6493
  store volatile i32 %2, i32* inttoptr (i32 -1609236448 to i32*), align 32, !dbg !6494
  %9 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6495
  %10 = or i32 %9, 16384, !dbg !6495
  store volatile i32 %10, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6495
  br label %11, !dbg !6496

11:                                               ; preds = %7, %6
  %12 = phi i32 [ -4, %6 ], [ 0, %7 ], !dbg !6483
  ret i32 %12, !dbg !6497
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @spi_slave_query_config_info(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #11 !dbg !6498 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6500, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.value(metadata i32* %1, metadata !6501, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.value(metadata i32* %2, metadata !6502, metadata !DIExpression()), !dbg !6503
  %4 = load volatile i32, i32* inttoptr (i32 -1609236464 to i32*), align 16, !dbg !6504
  %5 = and i32 %4, 255, !dbg !6506
  %6 = icmp eq i32 %5, 3, !dbg !6507
  br i1 %6, label %7, label %10, !dbg !6508

7:                                                ; preds = %3
  %8 = load volatile i32, i32* inttoptr (i32 -1609236472 to i32*), align 8, !dbg !6509
  store i32 %8, i32* %1, align 4, !dbg !6510
  %9 = load volatile i32, i32* inttoptr (i32 -1609236476 to i32*), align 4, !dbg !6511
  store i32 %9, i32* %2, align 4, !dbg !6512
  br label %10, !dbg !6513

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -4, %3 ], !dbg !6503
  ret i32 %11, !dbg !6514
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @spi_slave_receive(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !6515 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6517, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.value(metadata i8* %1, metadata !6518, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.value(metadata i32 %2, metadata !6519, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.value(metadata i32 0, metadata !6520, metadata !DIExpression()), !dbg !6521
  %4 = load volatile i32, i32* inttoptr (i32 -1609236476 to i32*), align 4, !dbg !6522
  call void @llvm.dbg.value(metadata i32 %4, metadata !6520, metadata !DIExpression()), !dbg !6521
  %5 = icmp eq i32 %4, %2, !dbg !6523
  br i1 %5, label %7, label %6, !dbg !6525

6:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__FUNCTION__.spi_slave_receive, i32 0, i32 0), i32 noundef 237, i8* noundef getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.97, i32 0, i32 0), i32 noundef %0) #20, !dbg !6526
  br label %11, !dbg !6528

7:                                                ; preds = %3
  %8 = ptrtoint i8* %1 to i32, !dbg !6529
  store volatile i32 %8, i32* inttoptr (i32 -1609236452 to i32*), align 4, !dbg !6531
  store volatile i32 %2, i32* inttoptr (i32 -1609236448 to i32*), align 32, !dbg !6532
  %9 = load volatile i32, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6533
  %10 = or i32 %9, 8192, !dbg !6533
  store volatile i32 %10, i32* inttoptr (i32 -1609236468 to i32*), align 4, !dbg !6533
  br label %11, !dbg !6534

11:                                               ; preds = %7, %6
  %12 = phi i32 [ -4, %6 ], [ 0, %7 ], !dbg !6521
  ret i32 %12, !dbg !6535
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_slave_set_early_miso(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6536 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6540, metadata !DIExpression()), !dbg !6542
  call void @llvm.dbg.value(metadata i32 %1, metadata !6541, metadata !DIExpression()), !dbg !6542
  switch i32 %1, label %11 [
    i32 0, label %3
    i32 1, label %6
  ], !dbg !6543

3:                                                ; preds = %2
  %4 = load volatile i32, i32* inttoptr (i32 -1609236440 to i32*), align 8, !dbg !6544
  %5 = and i32 %4, -2, !dbg !6544
  br label %9, !dbg !6546

6:                                                ; preds = %2
  %7 = load volatile i32, i32* inttoptr (i32 -1609236440 to i32*), align 8, !dbg !6547
  %8 = or i32 %7, 1, !dbg !6547
  br label %9, !dbg !6548

9:                                                ; preds = %3, %6
  %10 = phi i32 [ %8, %6 ], [ %5, %3 ]
  store volatile i32 %10, i32* inttoptr (i32 -1609236440 to i32*), align 8, !dbg !6549
  br label %11, !dbg !6550

11:                                               ; preds = %9, %2
  ret void, !dbg !6550
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @spi_slave_set_command(i32 noundef %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #2 !dbg !6551 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6555, metadata !DIExpression()), !dbg !6558
  call void @llvm.dbg.value(metadata i32 %1, metadata !6556, metadata !DIExpression()), !dbg !6558
  call void @llvm.dbg.value(metadata i8 %2, metadata !6557, metadata !DIExpression()), !dbg !6558
  switch i32 %1, label %58 [
    i32 0, label %4
    i32 1, label %11
    i32 2, label %18
    i32 3, label %25
    i32 4, label %31
    i32 5, label %38
    i32 6, label %45
    i32 7, label %52
  ], !dbg !6559

4:                                                ; preds = %3
  %5 = load volatile i32, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6560
  %6 = and i32 %5, 16777215, !dbg !6560
  store volatile i32 %6, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6560
  %7 = zext i8 %2 to i32, !dbg !6562
  %8 = shl nuw i32 %7, 24, !dbg !6563
  %9 = load volatile i32, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6564
  %10 = or i32 %9, %8, !dbg !6564
  store volatile i32 %10, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6564
  br label %58, !dbg !6565

11:                                               ; preds = %3
  %12 = load volatile i32, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6566
  %13 = and i32 %12, -16711681, !dbg !6566
  store volatile i32 %13, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6566
  %14 = zext i8 %2 to i32, !dbg !6567
  %15 = shl nuw nsw i32 %14, 16, !dbg !6568
  %16 = load volatile i32, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6569
  %17 = or i32 %16, %15, !dbg !6569
  store volatile i32 %17, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6569
  br label %58, !dbg !6570

18:                                               ; preds = %3
  %19 = load volatile i32, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6571
  %20 = and i32 %19, -65281, !dbg !6571
  store volatile i32 %20, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6571
  %21 = zext i8 %2 to i32, !dbg !6572
  %22 = shl nuw nsw i32 %21, 8, !dbg !6573
  %23 = load volatile i32, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6574
  %24 = or i32 %23, %22, !dbg !6574
  store volatile i32 %24, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6574
  br label %58, !dbg !6575

25:                                               ; preds = %3
  %26 = load volatile i32, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6576
  %27 = and i32 %26, -256, !dbg !6576
  store volatile i32 %27, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6576
  %28 = zext i8 %2 to i32, !dbg !6577
  %29 = load volatile i32, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6578
  %30 = or i32 %29, %28, !dbg !6578
  store volatile i32 %30, i32* inttoptr (i32 -1609236436 to i32*), align 4, !dbg !6578
  br label %58, !dbg !6579

31:                                               ; preds = %3
  %32 = load volatile i32, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6580
  %33 = and i32 %32, 16777215, !dbg !6580
  store volatile i32 %33, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6580
  %34 = zext i8 %2 to i32, !dbg !6581
  %35 = shl nuw i32 %34, 24, !dbg !6582
  %36 = load volatile i32, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6583
  %37 = or i32 %36, %35, !dbg !6583
  store volatile i32 %37, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6583
  br label %58, !dbg !6584

38:                                               ; preds = %3
  %39 = load volatile i32, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6585
  %40 = and i32 %39, -16711681, !dbg !6585
  store volatile i32 %40, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6585
  %41 = zext i8 %2 to i32, !dbg !6586
  %42 = shl nuw nsw i32 %41, 16, !dbg !6587
  %43 = load volatile i32, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6588
  %44 = or i32 %43, %42, !dbg !6588
  store volatile i32 %44, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6588
  br label %58, !dbg !6589

45:                                               ; preds = %3
  %46 = load volatile i32, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6590
  %47 = and i32 %46, -65281, !dbg !6590
  store volatile i32 %47, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6590
  %48 = zext i8 %2 to i32, !dbg !6591
  %49 = shl nuw nsw i32 %48, 8, !dbg !6592
  %50 = load volatile i32, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6593
  %51 = or i32 %50, %49, !dbg !6593
  store volatile i32 %51, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6593
  br label %58, !dbg !6594

52:                                               ; preds = %3
  %53 = load volatile i32, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6595
  %54 = and i32 %53, -256, !dbg !6595
  store volatile i32 %54, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6595
  %55 = zext i8 %2 to i32, !dbg !6596
  %56 = load volatile i32, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6597
  %57 = or i32 %56, %55, !dbg !6597
  store volatile i32 %57, i32* inttoptr (i32 -1609236432 to i32*), align 16, !dbg !6597
  br label %58, !dbg !6598

58:                                               ; preds = %3, %52, %45, %38, %31, %25, %18, %11, %4
  ret void, !dbg !6599
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_init() local_unnamed_addr #2 !dbg !1020 {
  %1 = load i1, i1* @hal_nvic_init.priority_set, align 4, !dbg !6600
  br i1 %1, label %9, label %2, !dbg !6602

2:                                                ; preds = %0, %2
  %3 = phi i32 [ %6, %2 ], [ 0, %0 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !1112, metadata !DIExpression()), !dbg !6603
  %4 = getelementptr inbounds [64 x i32], [64 x i32]* @defualt_irq_priority, i32 0, i32 %3, !dbg !6604
  %5 = load i32, i32* %4, align 4, !dbg !6604
  tail call fastcc void @NVIC_SetPriority(i32 noundef %3, i32 noundef %5) #21, !dbg !6609
  %6 = add nuw nsw i32 %3, 1, !dbg !6610
  call void @llvm.dbg.value(metadata i32 %6, metadata !1112, metadata !DIExpression()), !dbg !6603
  %7 = icmp eq i32 %6, 64, !dbg !6611
  br i1 %7, label %8, label %2, !dbg !6612, !llvm.loop !6613

8:                                                ; preds = %2
  store i1 true, i1* @hal_nvic_init.priority_set, align 4, !dbg !6615
  br label %9, !dbg !6616

9:                                                ; preds = %8, %0
  ret i32 0, !dbg !6617
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) unnamed_addr #2 !dbg !6618 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6622, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.value(metadata i32 %1, metadata !6623, metadata !DIExpression()), !dbg !6624
  %3 = trunc i32 %1 to i8, !dbg !6625
  %4 = shl i8 %3, 2, !dbg !6625
  %5 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6628
  store volatile i8 %4, i8* %5, align 1, !dbg !6629
  ret void, !dbg !6630
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_enable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6631 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6635, metadata !DIExpression()), !dbg !6637
  call void @llvm.dbg.value(metadata i32 -1, metadata !6636, metadata !DIExpression()), !dbg !6637
  %2 = icmp ugt i32 %0, 63, !dbg !6638
  br i1 %2, label %4, label %3, !dbg !6638

3:                                                ; preds = %1
  tail call fastcc void @NVIC_EnableIRQ(i32 noundef %0) #21, !dbg !6640
  call void @llvm.dbg.value(metadata i32 0, metadata !6636, metadata !DIExpression()), !dbg !6637
  br label %4, !dbg !6642

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6637
  ret i32 %5, !dbg !6643
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6644 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6648, metadata !DIExpression()), !dbg !6649
  %2 = and i32 %0, 31, !dbg !6650
  %3 = shl nuw i32 1, %2, !dbg !6651
  %4 = lshr i32 %0, 5, !dbg !6652
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6653
  store volatile i32 %3, i32* %5, align 4, !dbg !6654
  ret void, !dbg !6655
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_disable_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6656 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6658, metadata !DIExpression()), !dbg !6660
  call void @llvm.dbg.value(metadata i32 -1, metadata !6659, metadata !DIExpression()), !dbg !6660
  %2 = icmp ugt i32 %0, 63, !dbg !6661
  br i1 %2, label %4, label %3, !dbg !6661

3:                                                ; preds = %1
  tail call fastcc void @NVIC_DisableIRQ(i32 noundef %0) #21, !dbg !6663
  call void @llvm.dbg.value(metadata i32 0, metadata !6659, metadata !DIExpression()), !dbg !6660
  br label %4, !dbg !6665

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6660
  ret i32 %5, !dbg !6666
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6667 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6669, metadata !DIExpression()), !dbg !6670
  %2 = and i32 %0, 31, !dbg !6671
  %3 = shl nuw i32 1, %2, !dbg !6672
  %4 = lshr i32 %0, 5, !dbg !6673
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6674
  store volatile i32 %3, i32* %5, align 4, !dbg !6675
  ret void, !dbg !6676
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_pending_irq(i32 noundef %0) local_unnamed_addr #11 !dbg !6677 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6681, metadata !DIExpression()), !dbg !6683
  call void @llvm.dbg.value(metadata i32 255, metadata !6682, metadata !DIExpression()), !dbg !6683
  %2 = icmp ugt i32 %0, 63, !dbg !6684
  br i1 %2, label %5, label %3, !dbg !6684

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) #21, !dbg !6686
  call void @llvm.dbg.value(metadata i32 %4, metadata !6682, metadata !DIExpression()), !dbg !6683
  br label %5, !dbg !6688

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 255, %1 ], !dbg !6683
  ret i32 %6, !dbg !6689
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPendingIRQ(i32 noundef %0) unnamed_addr #11 !dbg !6690 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6694, metadata !DIExpression()), !dbg !6695
  %2 = lshr i32 %0, 5, !dbg !6696
  %3 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %2, !dbg !6697
  %4 = load volatile i32, i32* %3, align 4, !dbg !6697
  %5 = and i32 %0, 31, !dbg !6698
  %6 = lshr i32 %4, %5, !dbg !6699
  %7 = and i32 %6, 1, !dbg !6699
  ret i32 %7, !dbg !6700
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6701 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6703, metadata !DIExpression()), !dbg !6705
  call void @llvm.dbg.value(metadata i32 -1, metadata !6704, metadata !DIExpression()), !dbg !6705
  %2 = icmp ugt i32 %0, 63, !dbg !6706
  br i1 %2, label %4, label %3, !dbg !6706

3:                                                ; preds = %1
  tail call fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) #21, !dbg !6708
  call void @llvm.dbg.value(metadata i32 0, metadata !6704, metadata !DIExpression()), !dbg !6705
  br label %4, !dbg !6710

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6705
  ret i32 %5, !dbg !6711
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_SetPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6712 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6714, metadata !DIExpression()), !dbg !6715
  %2 = and i32 %0, 31, !dbg !6716
  %3 = shl nuw i32 1, %2, !dbg !6717
  %4 = lshr i32 %0, 5, !dbg !6718
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813056 to [8 x i32]*), i32 0, i32 %4, !dbg !6719
  store volatile i32 %3, i32* %5, align 4, !dbg !6720
  ret void, !dbg !6721
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_clear_pending_irq(i32 noundef %0) local_unnamed_addr #2 !dbg !6722 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6724, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.value(metadata i32 -1, metadata !6725, metadata !DIExpression()), !dbg !6726
  %2 = icmp ugt i32 %0, 63, !dbg !6727
  br i1 %2, label %4, label %3, !dbg !6727

3:                                                ; preds = %1
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !6729
  call void @llvm.dbg.value(metadata i32 0, metadata !6725, metadata !DIExpression()), !dbg !6726
  br label %4, !dbg !6731

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -3, %1 ], !dbg !6726
  ret i32 %5, !dbg !6732
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) unnamed_addr #2 !dbg !6733 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6735, metadata !DIExpression()), !dbg !6736
  %2 = and i32 %0, 31, !dbg !6737
  %3 = shl nuw i32 1, %2, !dbg !6738
  %4 = lshr i32 %0, 5, !dbg !6739
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6740
  store volatile i32 %3, i32* %5, align 4, !dbg !6741
  ret void, !dbg !6742
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @hal_nvic_set_priority(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 !dbg !6743 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6747, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.value(metadata i32 %1, metadata !6748, metadata !DIExpression()), !dbg !6750
  call void @llvm.dbg.value(metadata i32 -1, metadata !6749, metadata !DIExpression()), !dbg !6750
  %3 = icmp ugt i32 %0, 63, !dbg !6751
  br i1 %3, label %5, label %4, !dbg !6751

4:                                                ; preds = %2
  tail call fastcc void @NVIC_SetPriority(i32 noundef %0, i32 noundef %1) #21, !dbg !6753
  call void @llvm.dbg.value(metadata i32 0, metadata !6749, metadata !DIExpression()), !dbg !6750
  br label %5, !dbg !6755

5:                                                ; preds = %2, %4
  %6 = phi i32 [ 0, %4 ], [ -3, %2 ], !dbg !6750
  ret i32 %6, !dbg !6756
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_get_priority(i32 noundef %0) local_unnamed_addr #11 !dbg !6757 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6759, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.value(metadata i32 68, metadata !6760, metadata !DIExpression()), !dbg !6761
  %2 = icmp ugt i32 %0, 63, !dbg !6762
  br i1 %2, label %5, label %3, !dbg !6762

3:                                                ; preds = %1
  %4 = tail call fastcc i32 @NVIC_GetPriority(i32 noundef %0) #21, !dbg !6764
  call void @llvm.dbg.value(metadata i32 %4, metadata !6760, metadata !DIExpression()), !dbg !6761
  br label %5, !dbg !6766

5:                                                ; preds = %1, %3
  %6 = phi i32 [ %4, %3 ], [ 68, %1 ], !dbg !6761
  ret i32 %6, !dbg !6767
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @NVIC_GetPriority(i32 noundef %0) unnamed_addr #11 !dbg !6768 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6770, metadata !DIExpression()), !dbg !6771
  %2 = getelementptr inbounds [240 x i8], [240 x i8]* inttoptr (i32 -536812544 to [240 x i8]*), i32 0, i32 %0, !dbg !6772
  %3 = load volatile i8, i8* %2, align 1, !dbg !6772
  %4 = lshr i8 %3, 2, !dbg !6775
  %5 = zext i8 %4 to i32, !dbg !6775
  ret i32 %5, !dbg !6776
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @isrC_main() local_unnamed_addr #0 section ".tcm_code" !dbg !6777 {
  call void @llvm.dbg.value(metadata i32 -1, metadata !6779, metadata !DIExpression()), !dbg !6781
  tail call void @Flash_ReturnReady() #20, !dbg !6782
  %1 = tail call fastcc i32 @get_current_irq() #21, !dbg !6783
  call void @llvm.dbg.value(metadata i32 %1, metadata !6780, metadata !DIExpression()), !dbg !6781
  %2 = icmp ugt i32 %1, 63, !dbg !6784
  br i1 %2, label %12, label %3, !dbg !6784

3:                                                ; preds = %0
  %4 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 0, !dbg !6786
  %5 = load void (i32)*, void (i32)** %4, align 4, !dbg !6786
  %6 = icmp eq void (i32)* %5, null, !dbg !6788
  br i1 %6, label %7, label %8, !dbg !6789

7:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i32 -4, metadata !6779, metadata !DIExpression()), !dbg !6781
  tail call void (i8*, i32, i8*, ...) @log_hal_error_internal(i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__FUNCTION__.isrC_main, i32 0, i32 0), i32 noundef 261, i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.108, i32 0, i32 0)) #20, !dbg !6790
  br label %12, !dbg !6792

8:                                                ; preds = %3
  %9 = tail call fastcc i32 @get_pending_irq() #21, !dbg !6793
  %10 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %1, i32 1, !dbg !6795
  store i32 %9, i32* %10, align 4, !dbg !6796
  %11 = load void (i32)*, void (i32)** %4, align 4, !dbg !6797
  tail call void %11(i32 noundef %1) #20, !dbg !6798
  call void @llvm.dbg.value(metadata i32 0, metadata !6779, metadata !DIExpression()), !dbg !6781
  br label %12, !dbg !6799

12:                                               ; preds = %0, %8, %7
  %13 = phi i32 [ -4, %7 ], [ 0, %8 ], [ -3, %0 ], !dbg !6781
  ret i32 %13, !dbg !6800
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_current_irq() unnamed_addr #11 !dbg !6801 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6804
  %2 = and i32 %1, 511, !dbg !6805
  call void @llvm.dbg.value(metadata i32 %2, metadata !6803, metadata !DIExpression()), !dbg !6806
  %3 = add nsw i32 %2, -16, !dbg !6807
  ret i32 %3, !dbg !6808
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define internal fastcc i32 @get_pending_irq() unnamed_addr #11 !dbg !6809 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6810
  %2 = lshr i32 %1, 22, !dbg !6811
  %3 = and i32 %2, 1, !dbg !6811
  ret i32 %3, !dbg !6812
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_register_isr_handler(i32 noundef %0, void (i32)* noundef %1) local_unnamed_addr #0 !dbg !6813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6818, metadata !DIExpression()), !dbg !6821
  call void @llvm.dbg.value(metadata void (i32)* %1, metadata !6819, metadata !DIExpression()), !dbg !6821
  %3 = icmp ugt i32 %0, 63, !dbg !6822
  %4 = icmp eq void (i32)* %1, null
  %5 = or i1 %3, %4, !dbg !6822
  br i1 %5, label %10, label %6, !dbg !6822

6:                                                ; preds = %2
  %7 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6824
  call void @llvm.dbg.value(metadata i32 %7, metadata !6820, metadata !DIExpression()), !dbg !6821
  tail call fastcc void @NVIC_ClearPendingIRQ(i32 noundef %0) #21, !dbg !6825
  %8 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 0, !dbg !6826
  store void (i32)* %1, void (i32)** %8, align 4, !dbg !6827
  %9 = getelementptr inbounds [64 x %struct.nvic_function_t], [64 x %struct.nvic_function_t]* @nvic_function_table, i32 0, i32 %0, i32 1, !dbg !6828
  store i32 0, i32* %9, align 4, !dbg !6829
  tail call void @restore_interrupt_mask(i32 noundef %7) #20, !dbg !6830
  br label %10, !dbg !6831

10:                                               ; preds = %2, %6
  %11 = phi i32 [ 0, %6 ], [ -2, %2 ], !dbg !6821
  ret i32 %11, !dbg !6832
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_save_and_set_interrupt_mask(i32* nocapture noundef writeonly %0) local_unnamed_addr #0 !dbg !6833 {
  call void @llvm.dbg.value(metadata i32* %0, metadata !6837, metadata !DIExpression()), !dbg !6838
  %2 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !6839
  store i32 %2, i32* %0, align 4, !dbg !6840
  ret i32 0, !dbg !6841
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_nvic_restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 !dbg !6842 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6846, metadata !DIExpression()), !dbg !6847
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !6848
  ret i32 0, !dbg !6849
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @save_and_set_interrupt_mask() local_unnamed_addr #0 section ".tcm_code" !dbg !6850 {
  %1 = tail call i32 asm sideeffect "MRS $0, basepri_max", "=r"() #22, !dbg !6854, !srcloc !6860
  call void @llvm.dbg.value(metadata i32 %1, metadata !6858, metadata !DIExpression()) #22, !dbg !6861
  call void @llvm.dbg.value(metadata i32 %1, metadata !6852, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.value(metadata i32 1, metadata !6853, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.value(metadata i32 4, metadata !6863, metadata !DIExpression()) #22, !dbg !6868
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 4) #22, !dbg !6870, !srcloc !6871
  tail call void asm sideeffect "dmb", ""() #22, !dbg !6872, !srcloc !6875
  tail call void asm sideeffect "isb", ""() #22, !dbg !6876, !srcloc !6879
  ret i32 %1, !dbg !6880
}

; Function Attrs: noinline nounwind optsize
define dso_local void @restore_interrupt_mask(i32 noundef %0) local_unnamed_addr #0 section ".tcm_code" !dbg !6881 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6883, metadata !DIExpression()), !dbg !6884
  call void @llvm.dbg.value(metadata i32 %0, metadata !6863, metadata !DIExpression()) #22, !dbg !6885
  tail call void asm sideeffect "MSR basepri, $0", "r,~{memory}"(i32 %0) #22, !dbg !6887, !srcloc !6871
  tail call void asm sideeffect "dmb", ""() #22, !dbg !6888, !srcloc !6875
  tail call void asm sideeffect "isb", ""() #22, !dbg !6890, !srcloc !6879
  ret void, !dbg !6892
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_mask_all_interrupt() local_unnamed_addr #0 !dbg !6893 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6897
  call void @llvm.dbg.value(metadata i32 %1, metadata !6896, metadata !DIExpression()), !dbg !6898
  call void @llvm.dbg.value(metadata i32 0, metadata !6895, metadata !DIExpression()), !dbg !6898
  br label %2, !dbg !6899

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6895, metadata !DIExpression()), !dbg !6898
  tail call fastcc void @NVIC_DisableIRQ.115(i32 noundef %3) #21, !dbg !6901
  %4 = add nuw nsw i32 %3, 1, !dbg !6904
  call void @llvm.dbg.value(metadata i32 %4, metadata !6895, metadata !DIExpression()), !dbg !6898
  %5 = icmp eq i32 %4, 64, !dbg !6905
  br i1 %5, label %6, label %2, !dbg !6899, !llvm.loop !6906

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6908
  ret void, !dbg !6909
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_DisableIRQ.115(i32 noundef %0) unnamed_addr #2 !dbg !6910 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6912, metadata !DIExpression()), !dbg !6913
  %2 = and i32 %0, 31, !dbg !6914
  %3 = shl nuw i32 1, %2, !dbg !6915
  %4 = lshr i32 %0, 5, !dbg !6916
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813184 to [8 x i32]*), i32 0, i32 %4, !dbg !6917
  store volatile i32 %3, i32* %5, align 4, !dbg !6918
  ret void, !dbg !6919
}

; Function Attrs: noinline nounwind optsize
define dso_local void @nvic_unmask_all_interrupt() local_unnamed_addr #0 !dbg !6920 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #21, !dbg !6924
  call void @llvm.dbg.value(metadata i32 %1, metadata !6923, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.value(metadata i32 0, metadata !6922, metadata !DIExpression()), !dbg !6925
  br label %2, !dbg !6926

2:                                                ; preds = %0, %2
  %3 = phi i32 [ 0, %0 ], [ %4, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !6922, metadata !DIExpression()), !dbg !6925
  tail call fastcc void @NVIC_EnableIRQ.116(i32 noundef %3) #21, !dbg !6928
  %4 = add nuw nsw i32 %3, 1, !dbg !6931
  call void @llvm.dbg.value(metadata i32 %4, metadata !6922, metadata !DIExpression()), !dbg !6925
  %5 = icmp eq i32 %4, 64, !dbg !6932
  br i1 %5, label %6, label %2, !dbg !6926, !llvm.loop !6933

6:                                                ; preds = %2
  tail call void @restore_interrupt_mask(i32 noundef %1) #21, !dbg !6935
  ret void, !dbg !6936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_EnableIRQ.116(i32 noundef %0) unnamed_addr #2 !dbg !6937 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6939, metadata !DIExpression()), !dbg !6940
  %2 = and i32 %0, 31, !dbg !6941
  %3 = shl nuw i32 1, %2, !dbg !6942
  %4 = lshr i32 %0, 5, !dbg !6943
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536813312 to [8 x i32]*), i32 0, i32 %4, !dbg !6944
  store volatile i32 %3, i32* %5, align 4, !dbg !6945
  ret void, !dbg !6946
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @nvic_clear_all_pending_interrupt() local_unnamed_addr #2 !dbg !6947 {
  call void @llvm.dbg.value(metadata i32 0, metadata !6949, metadata !DIExpression()), !dbg !6950
  br label %1, !dbg !6951

1:                                                ; preds = %0, %1
  %2 = phi i32 [ 0, %0 ], [ %3, %1 ]
  call void @llvm.dbg.value(metadata i32 %2, metadata !6949, metadata !DIExpression()), !dbg !6950
  tail call fastcc void @NVIC_ClearPendingIRQ.117(i32 noundef %2) #21, !dbg !6953
  %3 = add nuw nsw i32 %2, 1, !dbg !6956
  call void @llvm.dbg.value(metadata i32 %3, metadata !6949, metadata !DIExpression()), !dbg !6950
  %4 = icmp eq i32 %3, 64, !dbg !6957
  br i1 %4, label %5, label %1, !dbg !6951, !llvm.loop !6958

5:                                                ; preds = %1
  ret void, !dbg !6960
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define internal fastcc void @NVIC_ClearPendingIRQ.117(i32 noundef %0) unnamed_addr #2 !dbg !6961 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6963, metadata !DIExpression()), !dbg !6964
  %2 = and i32 %0, 31, !dbg !6965
  %3 = shl nuw i32 1, %2, !dbg !6966
  %4 = lshr i32 %0, 5, !dbg !6967
  %5 = getelementptr inbounds [8 x i32], [8 x i32]* inttoptr (i32 -536812928 to [8 x i32]*), i32 0, i32 %4, !dbg !6968
  store volatile i32 %3, i32* %5, align 4, !dbg !6969
  ret void, !dbg !6970
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @nvic_irq_software_trigger(i32 noundef %0) local_unnamed_addr #0 !dbg !6971 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6973, metadata !DIExpression()), !dbg !6974
  %2 = icmp ugt i32 %0, 63, !dbg !6975
  br i1 %2, label %4, label %3, !dbg !6975

3:                                                ; preds = %1
  tail call fastcc void @software_trigger_irq(i32 noundef %0) #21, !dbg !6977
  br label %4, !dbg !6978

4:                                                ; preds = %1, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %1 ], !dbg !6974
  ret i32 %5, !dbg !6979
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @software_trigger_irq(i32 noundef %0) unnamed_addr #0 !dbg !6980 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !6982, metadata !DIExpression()), !dbg !6983
  %2 = and i32 %0, 511, !dbg !6984
  store volatile i32 %2, i32* inttoptr (i32 -536809728 to i32*), align 256, !dbg !6985
  tail call void asm sideeffect "dsb", ""() #22, !dbg !6986, !srcloc !6989
  ret void, !dbg !6990
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @hal_nvic_query_exception_number() local_unnamed_addr #11 !dbg !6991 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810236 to i32*), align 4, !dbg !6992
  %2 = and i32 %1, 511, !dbg !6993
  ret i32 %2, !dbg !6994
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_BlankCheck(i8* noundef %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !6995 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !6999, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.value(metadata i32 %1, metadata !7000, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.value(metadata i8* %0, metadata !7001, metadata !DIExpression()), !dbg !7098
  %3 = tail call i32 @BlockSize(i8* noundef %0, i32 noundef %1) #20, !dbg !7099
  call void @llvm.dbg.value(metadata i32 %3, metadata !7096, metadata !DIExpression(DW_OP_constu, 2, DW_OP_shr, DW_OP_stack_value)), !dbg !7098
  call void @llvm.dbg.value(metadata i32 0, metadata !7095, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.value(metadata i32* undef, metadata !7097, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.value(metadata i32 0, metadata !7095, metadata !DIExpression()), !dbg !7098
  %4 = icmp ult i32 %3, 4, !dbg !7100
  br i1 %4, label %20, label %5, !dbg !7103

5:                                                ; preds = %2
  %6 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !7104
  %7 = bitcast i8* %6 to i32**, !dbg !7104
  %8 = load i32*, i32** %7, align 4, !dbg !7104
  call void @llvm.dbg.value(metadata i32* %8, metadata !7097, metadata !DIExpression()), !dbg !7098
  %9 = lshr i32 %3, 2, !dbg !7105
  call void @llvm.dbg.value(metadata i32 %9, metadata !7096, metadata !DIExpression()), !dbg !7098
  br label %10, !dbg !7103

10:                                               ; preds = %5, %16
  %11 = phi i32* [ %18, %16 ], [ %8, %5 ]
  %12 = phi i32 [ %17, %16 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i32* %11, metadata !7097, metadata !DIExpression()), !dbg !7098
  call void @llvm.dbg.value(metadata i32 %12, metadata !7095, metadata !DIExpression()), !dbg !7098
  %13 = load i32, i32* %11, align 4, !dbg !7106
  %14 = icmp eq i32 %13, -1, !dbg !7109
  br i1 %14, label %16, label %15, !dbg !7110

15:                                               ; preds = %10
  tail call void @Flash_ReturnReady() #20, !dbg !7111
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.118, i32 0, i32 0), i32 noundef 81, i8* noundef getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.SFI_BlankCheck, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.119, i32 0, i32 0)) #23, !dbg !7111
  unreachable, !dbg !7111

16:                                               ; preds = %10
  %17 = add nuw nsw i32 %12, 1, !dbg !7116
  call void @llvm.dbg.value(metadata i32 %17, metadata !7095, metadata !DIExpression()), !dbg !7098
  %18 = getelementptr inbounds i32, i32* %11, i32 1, !dbg !7117
  call void @llvm.dbg.value(metadata i32* %18, metadata !7097, metadata !DIExpression()), !dbg !7098
  %19 = icmp eq i32 %17, %9, !dbg !7100
  br i1 %19, label %20, label %10, !dbg !7103, !llvm.loop !7118

20:                                               ; preds = %16, %2
  ret void, !dbg !7120
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_ReverseByteOrder(i32 noundef %0) local_unnamed_addr #16 section ".ram_code" !dbg !7121 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7123, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 0, metadata !7124, metadata !DIExpression()), !dbg !7125
  call void @llvm.dbg.value(metadata i32 %0, metadata !7124, metadata !DIExpression(DW_OP_constu, 24, DW_OP_shr, DW_OP_stack_value)), !dbg !7125
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0), metadata !7124, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7125
  call void @llvm.dbg.value(metadata !DIArgList(i32 %0, i32 %0, i32 %0), metadata !7124, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 24, DW_OP_shr, DW_OP_LLVM_arg, 2, DW_OP_constu, 8, DW_OP_shr, DW_OP_constu, 65280, DW_OP_and, DW_OP_or, DW_OP_LLVM_arg, 1, DW_OP_constu, 8, DW_OP_shl, DW_OP_constu, 16711680, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7125
  %2 = tail call i32 @llvm.bswap.i32(i32 %0), !dbg !7126
  call void @llvm.dbg.value(metadata i32 %2, metadata !7124, metadata !DIExpression()), !dbg !7125
  ret i32 %2, !dbg !7127
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_MacEnable(i16 noundef zeroext %0) local_unnamed_addr #0 section ".tcm_code" !dbg !7128 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7132, metadata !DIExpression()), !dbg !7134
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7135
  %3 = or i32 %2, 512, !dbg !7135
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7135
  %4 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7138
  call void @llvm.dbg.value(metadata i32 %4, metadata !7133, metadata !DIExpression()), !dbg !7134
  switch i16 %0, label %6 [
    i16 0, label %7
    i16 1, label %5
  ], !dbg !7139

5:                                                ; preds = %1
  br label %7, !dbg !7140

6:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !7144
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.118, i32 0, i32 0), i32 noundef 127, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SFI_MacEnable, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.119, i32 0, i32 0)) #23, !dbg !7144
  unreachable, !dbg !7144

7:                                                ; preds = %1, %5
  %8 = phi i32* [ inttoptr (i32 -1610350528 to i32*), %5 ], [ inttoptr (i32 -1610350588 to i32*), %1 ]
  %9 = load volatile i32, i32* %8, align 4, !dbg !7149
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !7133, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7134
  call void @llvm.dbg.value(metadata !DIArgList(i32 %9, i32 %4), metadata !7133, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 4, DW_OP_shl, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7134
  br label %10, !dbg !7150

10:                                               ; preds = %10, %7
  %11 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7151
  %12 = and i32 %11, 8192, !dbg !7152
  %13 = icmp eq i32 %12, 0, !dbg !7153
  br i1 %13, label %10, label %14, !dbg !7150, !llvm.loop !7154

14:                                               ; preds = %10, %14
  %15 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7156
  %16 = and i32 %15, 256, !dbg !7157
  %17 = icmp eq i32 %16, 0, !dbg !7158
  br i1 %17, label %14, label %18, !dbg !7159, !llvm.loop !7160

18:                                               ; preds = %14
  %19 = shl i32 %9, 4, !dbg !7149
  call void @llvm.dbg.value(metadata !DIArgList(i32 %19, i32 %4), metadata !7133, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 16, DW_OP_and, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7134
  %20 = and i32 %19, 16, !dbg !7149
  call void @llvm.dbg.value(metadata !DIArgList(i32 %20, i32 %4), metadata !7133, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7134
  call void @llvm.dbg.value(metadata i32 undef, metadata !7133, metadata !DIExpression(DW_OP_constu, 8, DW_OP_or, DW_OP_stack_value)), !dbg !7134
  %21 = or i32 %4, %20, !dbg !7162
  %22 = or i32 %21, 8, !dbg !7162
  call void @llvm.dbg.value(metadata i32 %22, metadata !7133, metadata !DIExpression()), !dbg !7134
  store volatile i32 %22, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7163
  ret void, !dbg !7164
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacLeave(i16 zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !7165 {
  call void @llvm.dbg.value(metadata i16 undef, metadata !7167, metadata !DIExpression()), !dbg !7169
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7170
  call void @llvm.dbg.value(metadata i32 %2, metadata !7168, metadata !DIExpression()), !dbg !7169
  %3 = and i32 %2, -268435477, !dbg !7171
  call void @llvm.dbg.value(metadata i32 %3, metadata !7168, metadata !DIExpression()), !dbg !7169
  store volatile i32 %3, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7172
  br label %4, !dbg !7173

4:                                                ; preds = %4, %1
  %5 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7174
  %6 = and i32 %5, 2, !dbg !7175
  %7 = icmp eq i32 %6, 0, !dbg !7173
  br i1 %7, label %8, label %4, !dbg !7173, !llvm.loop !7176

8:                                                ; preds = %4
  %9 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7178
  call void @llvm.dbg.value(metadata i32 %9, metadata !7168, metadata !DIExpression()), !dbg !7169
  %10 = and i32 %9, -9, !dbg !7179
  call void @llvm.dbg.value(metadata i32 %10, metadata !7168, metadata !DIExpression()), !dbg !7169
  store volatile i32 %10, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7180
  br label %11, !dbg !7181

11:                                               ; preds = %11, %8
  %12 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7182
  %13 = and i32 %12, 8, !dbg !7183
  %14 = icmp eq i32 %13, 0, !dbg !7181
  br i1 %14, label %15, label %11, !dbg !7181, !llvm.loop !7184

15:                                               ; preds = %11
  %16 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !7186, !range !2765
  %17 = icmp eq i8 %16, 0, !dbg !7188
  br i1 %17, label %18, label %21, !dbg !7189

18:                                               ; preds = %15
  %19 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7190
  %20 = and i32 %19, -513, !dbg !7190
  store volatile i32 %20, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7190
  br label %21, !dbg !7194

21:                                               ; preds = %18, %15
  ret void, !dbg !7195
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SFI_MacTrigger(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !7196 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7200, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 0, metadata !7201, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 0, metadata !7202, metadata !DIExpression()), !dbg !7203
  %2 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7204
  call void @llvm.dbg.value(metadata i32 %2, metadata !7201, metadata !DIExpression()), !dbg !7203
  call void @llvm.dbg.value(metadata i32 %2, metadata !7201, metadata !DIExpression(DW_OP_constu, 12, DW_OP_or, DW_OP_stack_value)), !dbg !7203
  %3 = icmp eq i16 %0, 1, !dbg !7205
  %4 = select i1 %3, i32 268435468, i32 12, !dbg !7207
  %5 = or i32 %2, %4, !dbg !7207
  call void @llvm.dbg.value(metadata i32 %5, metadata !7201, metadata !DIExpression()), !dbg !7203
  store volatile i32 %5, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7208
  br label %6, !dbg !7209

6:                                                ; preds = %6, %1
  %7 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7210
  %8 = and i32 %7, 2, !dbg !7211
  %9 = icmp eq i32 %8, 0, !dbg !7212
  br i1 %9, label %6, label %10, !dbg !7209, !llvm.loop !7213

10:                                               ; preds = %6, %10
  %11 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7215
  %12 = and i32 %11, 1, !dbg !7216
  %13 = icmp eq i32 %12, 0, !dbg !7217
  br i1 %13, label %14, label %10, !dbg !7217, !llvm.loop !7218

14:                                               ; preds = %10
  ret i32 0, !dbg !7220
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SFI_MacWaitReady(i16 noundef zeroext %0) local_unnamed_addr #2 section ".tcm_code" !dbg !7221 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7223, metadata !DIExpression()), !dbg !7224
  %2 = tail call i32 @SFI_MacTrigger(i16 noundef zeroext %0) #21, !dbg !7225
  tail call void @SFI_MacLeave(i16 zeroext undef) #21, !dbg !7226
  ret void, !dbg !7227
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command(i16 noundef zeroext %0, i32 noundef %1) local_unnamed_addr #0 section ".tcm_code" !dbg !7228 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7232, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i32 %1, metadata !7233, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i32 %1, metadata !7234, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i8 0, metadata !7236, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i32 0, metadata !7235, metadata !DIExpression()), !dbg !7237
  %3 = icmp eq i32 %1, 0, !dbg !7238
  br i1 %3, label %16, label %4, !dbg !7241

4:                                                ; preds = %2, %4
  %5 = phi i8 [ %12, %4 ], [ 0, %2 ]
  %6 = phi i32 [ %10, %4 ], [ 0, %2 ]
  %7 = phi i32 [ %11, %4 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i8 %5, metadata !7236, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i32 %6, metadata !7235, metadata !DIExpression()), !dbg !7237
  call void @llvm.dbg.value(metadata i32 %7, metadata !7234, metadata !DIExpression()), !dbg !7237
  %8 = shl i32 %6, 8, !dbg !7242
  %9 = and i32 %7, 255, !dbg !7244
  %10 = or i32 %8, %9, !dbg !7245
  call void @llvm.dbg.value(metadata i32 %10, metadata !7235, metadata !DIExpression()), !dbg !7237
  %11 = lshr i32 %7, 8, !dbg !7246
  call void @llvm.dbg.value(metadata i32 %11, metadata !7234, metadata !DIExpression()), !dbg !7237
  %12 = add nuw nsw i8 %5, 1, !dbg !7247
  call void @llvm.dbg.value(metadata i8 %12, metadata !7236, metadata !DIExpression()), !dbg !7237
  %13 = icmp ult i32 %7, 256, !dbg !7238
  br i1 %13, label %14, label %4, !dbg !7241, !llvm.loop !7248

14:                                               ; preds = %4
  %15 = zext i8 %12 to i32, !dbg !7250
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !7252
  store volatile i32 %10, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7253
  store volatile i32 %15, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7254
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7255
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !7256
  br label %16, !dbg !7257

16:                                               ; preds = %2, %14
  ret void, !dbg !7258
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_CommandAddress(i16 noundef zeroext %0, i8 noundef zeroext %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 section ".ram_code" !dbg !7259 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7263, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i8 %1, metadata !7264, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i32 %2, metadata !7265, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i32 %3, metadata !7266, metadata !DIExpression()), !dbg !7269
  %5 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %2) #21, !dbg !7270
  call void @llvm.dbg.value(metadata i32 %5, metadata !7268, metadata !DIExpression()), !dbg !7269
  %6 = icmp eq i32 %3, 3, !dbg !7271
  br i1 %6, label %7, label %11, !dbg !7273

7:                                                ; preds = %4
  %8 = and i32 %5, -256, !dbg !7274
  %9 = zext i8 %1 to i32, !dbg !7276
  %10 = or i32 %8, %9, !dbg !7277
  call void @llvm.dbg.value(metadata i32 %10, metadata !7267, metadata !DIExpression()), !dbg !7269
  br label %16, !dbg !7278

11:                                               ; preds = %4
  %12 = shl i32 %5, 8, !dbg !7279
  %13 = zext i8 %1 to i32, !dbg !7281
  %14 = or i32 %12, %13, !dbg !7282
  call void @llvm.dbg.value(metadata i32 %14, metadata !7267, metadata !DIExpression()), !dbg !7269
  %15 = lshr i32 %5, 24, !dbg !7283
  call void @llvm.dbg.value(metadata i32 %15, metadata !7268, metadata !DIExpression()), !dbg !7269
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %10, %7 ], [ %14, %11 ], !dbg !7284
  %18 = phi i32 [ %5, %7 ], [ %15, %11 ], !dbg !7269
  call void @llvm.dbg.value(metadata i32 %18, metadata !7268, metadata !DIExpression()), !dbg !7269
  call void @llvm.dbg.value(metadata i32 %17, metadata !7267, metadata !DIExpression()), !dbg !7269
  store volatile i32 %17, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7285
  store volatile i32 %18, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7286
  %19 = add i32 %3, 1, !dbg !7287
  store volatile i32 %19, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7288
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7289
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !7290
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !7291
  ret void, !dbg !7292
}

; Function Attrs: mustprogress nofree noinline nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_GPRAM_Write_C1A3(i32 noundef %0, i32 noundef %1) local_unnamed_addr #16 section ".ram_code" !dbg !7293 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7297, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.value(metadata i32 %1, metadata !7298, metadata !DIExpression()), !dbg !7299
  %3 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !7300
  %4 = and i32 %3, -256, !dbg !7301
  %5 = and i32 %0, 255, !dbg !7302
  %6 = or i32 %4, %5, !dbg !7303
  ret i32 %6, !dbg !7304
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @SFI_GPRAM_Write_C1A4(i32 noundef %0, i32 noundef %1, i8** nocapture noundef %2, i32* nocapture noundef %3) local_unnamed_addr #9 section ".ram_code" !dbg !7305 {
  %5 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7310, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i32 %1, metadata !7311, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i8** %2, metadata !7312, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata i32* %3, metadata !7313, metadata !DIExpression()), !dbg !7325
  %6 = bitcast %struct.anon* %5 to i8*, !dbg !7326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !7326
  call void @llvm.dbg.declare(metadata %struct.anon* %5, metadata !7314, metadata !DIExpression()), !dbg !7327
  %7 = tail call i32 @SFI_ReverseByteOrder(i32 noundef %1) #21, !dbg !7328
  call void @llvm.dbg.value(metadata i32 %7, metadata !7323, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %0), metadata !7322, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7325
  %8 = lshr i32 %7, 24, !dbg !7329
  call void @llvm.dbg.value(metadata i32 %8, metadata !7323, metadata !DIExpression()), !dbg !7325
  %9 = trunc i32 %8 to i8, !dbg !7330
  %10 = bitcast %struct.anon* %5 to [4 x i8]*, !dbg !7331
  store i8 %9, i8* %6, align 4, !dbg !7332
  call void @llvm.dbg.value(metadata i32 1, metadata !7324, metadata !DIExpression()), !dbg !7325
  %11 = load i8*, i8** %2, align 4, !dbg !7333
  br label %12, !dbg !7337

12:                                               ; preds = %4, %12
  %13 = phi i8* [ %11, %4 ], [ %17, %12 ], !dbg !7333
  %14 = phi i32 [ 1, %4 ], [ %18, %12 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !7324, metadata !DIExpression()), !dbg !7325
  %15 = load i8, i8* %13, align 1, !dbg !7338
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i32 0, i32 %14, !dbg !7339
  store i8 %15, i8* %16, align 1, !dbg !7340
  %17 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !7341
  store i8* %17, i8** %2, align 4, !dbg !7341
  %18 = add nuw nsw i32 %14, 1, !dbg !7342
  call void @llvm.dbg.value(metadata i32 %18, metadata !7324, metadata !DIExpression()), !dbg !7325
  %19 = icmp eq i32 %18, 4, !dbg !7343
  br i1 %19, label %20, label %12, !dbg !7337, !llvm.loop !7344

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.anon, %struct.anon* %5, i32 0, i32 0, !dbg !7346
  %22 = load i32, i32* %21, align 4, !dbg !7346
  call void @llvm.dbg.value(metadata i32 %22, metadata !7323, metadata !DIExpression()), !dbg !7325
  %23 = load i32, i32* %3, align 4, !dbg !7347
  %24 = tail call i32 @llvm.usub.sat.i32(i32 %23, i32 3), !dbg !7348
  %25 = shl i32 %7, 8, !dbg !7349
  call void @llvm.dbg.value(metadata !DIArgList(i32 %25, i32 %0), metadata !7322, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 255, DW_OP_and, DW_OP_or, DW_OP_stack_value)), !dbg !7325
  %26 = and i32 %0, 255, !dbg !7350
  call void @llvm.dbg.value(metadata !DIArgList(i32 %7, i32 %26), metadata !7322, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_constu, 8, DW_OP_shl, DW_OP_LLVM_arg, 1, DW_OP_or, DW_OP_stack_value)), !dbg !7325
  %27 = or i32 %25, %26, !dbg !7351
  call void @llvm.dbg.value(metadata i32 %27, metadata !7322, metadata !DIExpression()), !dbg !7325
  store i32 %24, i32* %3, align 4, !dbg !7352
  store volatile i32 %22, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !7353
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !7354
  ret i32 %27, !dbg !7355
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local void @SFI_GPRAM_Write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #9 section ".ram_code" !dbg !7356 {
  %4 = alloca %struct.anon, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !7360, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i8* %1, metadata !7361, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %2, metadata !7362, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i8* %1, metadata !7364, metadata !DIExpression()), !dbg !7366
  %5 = bitcast %struct.anon* %4 to i8*, !dbg !7367
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #22, !dbg !7367
  call void @llvm.dbg.declare(metadata %struct.anon* %4, metadata !7365, metadata !DIExpression()), !dbg !7368
  %6 = add i32 %0, -1610348544, !dbg !7369
  call void @llvm.dbg.value(metadata i32 %6, metadata !7360, metadata !DIExpression()), !dbg !7366
  %7 = ptrtoint i8* %1 to i32, !dbg !7370
  %8 = and i32 %7, 3, !dbg !7372
  %9 = icmp eq i32 %8, 0, !dbg !7373
  br i1 %9, label %10, label %23, !dbg !7374

10:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i8* %1, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %2, metadata !7362, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %6, metadata !7360, metadata !DIExpression()), !dbg !7366
  %11 = icmp sgt i32 %2, 0, !dbg !7375
  br i1 %11, label %12, label %72, !dbg !7379

12:                                               ; preds = %10, %12
  %13 = phi i8* [ %20, %12 ], [ %1, %10 ]
  %14 = phi i32 [ %21, %12 ], [ %2, %10 ]
  %15 = phi i32 [ %19, %12 ], [ %6, %10 ]
  call void @llvm.dbg.value(metadata i8* %13, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %14, metadata !7362, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %15, metadata !7360, metadata !DIExpression()), !dbg !7366
  %16 = bitcast i8* %13 to i32*, !dbg !7380
  %17 = load i32, i32* %16, align 4, !dbg !7380
  %18 = inttoptr i32 %15 to i32*, !dbg !7380
  store volatile i32 %17, i32* %18, align 4, !dbg !7380
  %19 = add i32 %15, 4, !dbg !7382
  call void @llvm.dbg.value(metadata i32 %19, metadata !7360, metadata !DIExpression()), !dbg !7366
  %20 = getelementptr inbounds i8, i8* %13, i32 4, !dbg !7383
  call void @llvm.dbg.value(metadata i8* %20, metadata !7364, metadata !DIExpression()), !dbg !7366
  %21 = add nsw i32 %14, -4, !dbg !7384
  call void @llvm.dbg.value(metadata i32 %21, metadata !7362, metadata !DIExpression()), !dbg !7366
  %22 = icmp ugt i32 %14, 4, !dbg !7375
  br i1 %22, label %12, label %72, !dbg !7379, !llvm.loop !7385

23:                                               ; preds = %3
  %24 = and i32 %7, 1, !dbg !7387
  %25 = icmp eq i32 %24, 0, !dbg !7389
  call void @llvm.dbg.value(metadata i8* %1, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i8* %1, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %2, metadata !7362, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %2, metadata !7362, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %6, metadata !7360, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %6, metadata !7360, metadata !DIExpression()), !dbg !7366
  %26 = icmp sgt i32 %2, 0, !dbg !7390
  br i1 %25, label %31, label %27, !dbg !7391

27:                                               ; preds = %23
  br i1 %26, label %28, label %72, !dbg !7392

28:                                               ; preds = %27
  %29 = bitcast %struct.anon* %4 to [4 x i8]*
  %30 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %52, !dbg !7392

31:                                               ; preds = %23
  br i1 %26, label %32, label %72, !dbg !7395

32:                                               ; preds = %31
  %33 = bitcast %struct.anon* %4 to [2 x i16]*
  %34 = bitcast %struct.anon* %4 to i16*
  %35 = getelementptr inbounds [2 x i16], [2 x i16]* %33, i32 0, i32 1
  %36 = getelementptr inbounds %struct.anon, %struct.anon* %4, i32 0, i32 0
  br label %37, !dbg !7395

37:                                               ; preds = %32, %37
  %38 = phi i8* [ %1, %32 ], [ %49, %37 ]
  %39 = phi i32 [ %2, %32 ], [ %50, %37 ]
  %40 = phi i32 [ %6, %32 ], [ %48, %37 ]
  call void @llvm.dbg.value(metadata i8* %38, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %39, metadata !7362, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %40, metadata !7360, metadata !DIExpression()), !dbg !7366
  %41 = bitcast i8* %38 to i16*, !dbg !7398
  %42 = load i16, i16* %41, align 2, !dbg !7398
  store i16 %42, i16* %34, align 4, !dbg !7401
  %43 = getelementptr inbounds i8, i8* %38, i32 2, !dbg !7402
  %44 = bitcast i8* %43 to i16*, !dbg !7402
  %45 = load i16, i16* %44, align 2, !dbg !7403
  store i16 %45, i16* %35, align 2, !dbg !7404
  %46 = load i32, i32* %36, align 4, !dbg !7405
  %47 = inttoptr i32 %40 to i32*, !dbg !7405
  store volatile i32 %46, i32* %47, align 4, !dbg !7405
  %48 = add i32 %40, 4, !dbg !7406
  call void @llvm.dbg.value(metadata i32 %48, metadata !7360, metadata !DIExpression()), !dbg !7366
  %49 = getelementptr inbounds i8, i8* %38, i32 4, !dbg !7407
  call void @llvm.dbg.value(metadata i8* %49, metadata !7364, metadata !DIExpression()), !dbg !7366
  %50 = add nsw i32 %39, -4, !dbg !7408
  call void @llvm.dbg.value(metadata i32 %50, metadata !7362, metadata !DIExpression()), !dbg !7366
  %51 = icmp ugt i32 %39, 4, !dbg !7409
  br i1 %51, label %37, label %72, !dbg !7395, !llvm.loop !7410

52:                                               ; preds = %28, %66
  %53 = phi i8* [ %1, %28 ], [ %59, %66 ]
  %54 = phi i32 [ %2, %28 ], [ %70, %66 ]
  %55 = phi i32 [ %6, %28 ], [ %69, %66 ]
  call void @llvm.dbg.value(metadata i8* %53, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %54, metadata !7362, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %55, metadata !7360, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i8* %53, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 0, metadata !7363, metadata !DIExpression()), !dbg !7366
  br label %56, !dbg !7412

56:                                               ; preds = %52, %56
  %57 = phi i8* [ %53, %52 ], [ %59, %56 ]
  %58 = phi i32 [ 0, %52 ], [ %62, %56 ]
  call void @llvm.dbg.value(metadata i8* %57, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %58, metadata !7363, metadata !DIExpression()), !dbg !7366
  %59 = getelementptr inbounds i8, i8* %57, i32 1, !dbg !7416
  call void @llvm.dbg.value(metadata i8* %59, metadata !7364, metadata !DIExpression()), !dbg !7366
  %60 = load i8, i8* %57, align 1, !dbg !7419
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i32 0, i32 %58, !dbg !7420
  store i8 %60, i8* %61, align 1, !dbg !7421
  %62 = add nuw nsw i32 %58, 1, !dbg !7422
  call void @llvm.dbg.value(metadata i32 %62, metadata !7363, metadata !DIExpression()), !dbg !7366
  %63 = icmp ult i32 %58, 3, !dbg !7423
  %64 = icmp ult i32 %62, %54, !dbg !7424
  %65 = select i1 %63, i1 %64, i1 false, !dbg !7424
  br i1 %65, label %56, label %66, !dbg !7412, !llvm.loop !7425

66:                                               ; preds = %56
  %67 = load i32, i32* %30, align 4, !dbg !7427
  %68 = inttoptr i32 %55 to i32*, !dbg !7427
  store volatile i32 %67, i32* %68, align 4, !dbg !7427
  %69 = add i32 %55, 4, !dbg !7428
  call void @llvm.dbg.value(metadata i32 %69, metadata !7360, metadata !DIExpression()), !dbg !7366
  %70 = add nsw i32 %54, -4, !dbg !7429
  call void @llvm.dbg.value(metadata i8* %59, metadata !7364, metadata !DIExpression()), !dbg !7366
  call void @llvm.dbg.value(metadata i32 %70, metadata !7362, metadata !DIExpression()), !dbg !7366
  %71 = icmp sgt i32 %54, 4, !dbg !7430
  br i1 %71, label %52, label %72, !dbg !7392, !llvm.loop !7431

72:                                               ; preds = %66, %37, %12, %27, %31, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #22, !dbg !7433
  ret void, !dbg !7433
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* nocapture noundef readonly %1, i8* nocapture noundef writeonly %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !7434 {
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i16 %0, metadata !7438, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i8* %1, metadata !7439, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i8* %2, metadata !7440, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i16 %3, metadata !7441, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i16 %4, metadata !7442, metadata !DIExpression()), !dbg !7448
  %7 = bitcast i32* %6 to i8*, !dbg !7449
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7449
  call void @llvm.dbg.value(metadata i8* %7, metadata !7447, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 0, metadata !7444, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7446, metadata !DIExpression()), !dbg !7448
  %8 = zext i16 %3 to i32
  call void @llvm.dbg.value(metadata i8* inttoptr (i32 -1610348544 to i8*), metadata !7446, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 0, metadata !7444, metadata !DIExpression()), !dbg !7448
  %9 = icmp eq i16 %3, 0, !dbg !7450
  br i1 %9, label %33, label %10, !dbg !7453

10:                                               ; preds = %5, %27
  %11 = phi i8* [ %31, %27 ], [ inttoptr (i32 -1610348544 to i8*), %5 ]
  %12 = phi i32 [ %29, %27 ], [ 0, %5 ]
  call void @llvm.dbg.value(metadata i8* %11, metadata !7446, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 %12, metadata !7444, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 0, metadata !7445, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 0, metadata !7443, metadata !DIExpression()), !dbg !7448
  store i32 0, i32* %6, align 4, !dbg !7454
  call void @llvm.dbg.value(metadata i32 0, metadata !7445, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 %12, metadata !7444, metadata !DIExpression()), !dbg !7448
  %13 = icmp ult i32 %12, %8, !dbg !7457
  br i1 %13, label %14, label %27, !dbg !7459

14:                                               ; preds = %10, %14
  %15 = phi i32 [ %21, %14 ], [ 0, %10 ]
  %16 = phi i32 [ %20, %14 ], [ %12, %10 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !7445, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 %16, metadata !7444, metadata !DIExpression()), !dbg !7448
  %17 = getelementptr inbounds i8, i8* %1, i32 %16, !dbg !7460
  %18 = load i8, i8* %17, align 1, !dbg !7460
  %19 = getelementptr inbounds i8, i8* %7, i32 %15, !dbg !7462
  store i8 %18, i8* %19, align 1, !dbg !7463
  %20 = add nuw nsw i32 %16, 1, !dbg !7464
  call void @llvm.dbg.value(metadata i32 %20, metadata !7444, metadata !DIExpression()), !dbg !7448
  %21 = add nuw nsw i32 %15, 1, !dbg !7465
  call void @llvm.dbg.value(metadata i32 %21, metadata !7445, metadata !DIExpression()), !dbg !7448
  %22 = icmp ult i32 %20, %8, !dbg !7457
  %23 = icmp ult i32 %15, 3, !dbg !7466
  %24 = select i1 %22, i1 %23, i1 false, !dbg !7466
  br i1 %24, label %14, label %25, !dbg !7459, !llvm.loop !7467

25:                                               ; preds = %14
  %26 = load i32, i32* %6, align 4, !dbg !7469
  br label %27, !dbg !7469

27:                                               ; preds = %25, %10
  %28 = phi i32 [ 0, %10 ], [ %26, %25 ], !dbg !7469
  %29 = phi i32 [ %12, %10 ], [ %20, %25 ], !dbg !7470
  call void @llvm.dbg.value(metadata i32 %28, metadata !7443, metadata !DIExpression()), !dbg !7448
  %30 = bitcast i8* %11 to i32*, !dbg !7469
  store volatile i32 %28, i32* %30, align 4, !dbg !7469
  %31 = getelementptr inbounds i8, i8* %11, i32 4, !dbg !7471
  call void @llvm.dbg.value(metadata i8* %31, metadata !7446, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 %29, metadata !7444, metadata !DIExpression()), !dbg !7448
  %32 = icmp ult i32 %29, %8, !dbg !7450
  br i1 %32, label %10, label %33, !dbg !7453, !llvm.loop !7472

33:                                               ; preds = %27, %5
  store volatile i32 %8, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7474
  %34 = zext i16 %4 to i32, !dbg !7475
  store volatile i32 %34, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7476
  tail call void @SFI_MacEnable(i16 noundef zeroext %0) #21, !dbg !7477
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %0) #21, !dbg !7478
  call void @llvm.dbg.value(metadata !DIArgList(i8* inttoptr (i32 -1610348544 to i8*), i32 %8), metadata !7446, metadata !DIExpression(DW_OP_LLVM_arg, 0, DW_OP_LLVM_arg, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_plus, DW_OP_stack_value)), !dbg !7448
  call void @llvm.dbg.value(metadata i8* %2, metadata !7440, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 0, metadata !7444, metadata !DIExpression()), !dbg !7448
  %35 = icmp eq i16 %4, 0, !dbg !7479
  br i1 %35, label %47, label %36, !dbg !7482

36:                                               ; preds = %33
  %37 = getelementptr inbounds i8, i8* inttoptr (i32 -1610348544 to i8*), i32 %8, !dbg !7483
  call void @llvm.dbg.value(metadata i8* %37, metadata !7446, metadata !DIExpression()), !dbg !7448
  br label %38, !dbg !7482

38:                                               ; preds = %36, %38
  %39 = phi i8* [ %44, %38 ], [ %2, %36 ]
  %40 = phi i8* [ %45, %38 ], [ %37, %36 ]
  %41 = phi i32 [ %43, %38 ], [ 0, %36 ]
  call void @llvm.dbg.value(metadata i8* %39, metadata !7440, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i8* %40, metadata !7446, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.value(metadata i32 %41, metadata !7444, metadata !DIExpression()), !dbg !7448
  %42 = load volatile i8, i8* %40, align 1, !dbg !7484
  store i8 %42, i8* %39, align 1, !dbg !7486
  %43 = add nuw nsw i32 %41, 1, !dbg !7487
  call void @llvm.dbg.value(metadata i32 %43, metadata !7444, metadata !DIExpression()), !dbg !7448
  %44 = getelementptr inbounds i8, i8* %39, i32 1, !dbg !7488
  call void @llvm.dbg.value(metadata i8* %44, metadata !7440, metadata !DIExpression()), !dbg !7448
  %45 = getelementptr inbounds i8, i8* %40, i32 1, !dbg !7489
  call void @llvm.dbg.value(metadata i8* %45, metadata !7446, metadata !DIExpression()), !dbg !7448
  %46 = icmp eq i32 %43, %34, !dbg !7479
  br i1 %46, label %47, label %38, !dbg !7482, !llvm.loop !7490

47:                                               ; preds = %38, %33
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7492
  ret void, !dbg !7492
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_Dev_Command_List(i16 noundef zeroext %0, i8* noundef readonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7493 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7497, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i8* %1, metadata !7498, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i32 0, metadata !7499, metadata !DIExpression()), !dbg !7505
  %4 = icmp eq i8* %1, null, !dbg !7506
  br i1 %4, label %67, label %5, !dbg !7508

5:                                                ; preds = %2
  %6 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7509
  call void @llvm.dbg.value(metadata i32 %27, metadata !7500, metadata !DIExpression()), !dbg !7505
  %7 = icmp eq i16 %0, 0
  br label %8, !dbg !7510

8:                                                ; preds = %61, %5
  %9 = phi i32 [ 0, %5 ], [ %66, %61 ], !dbg !7505
  call void @llvm.dbg.value(metadata i32 %9, metadata !7499, metadata !DIExpression()), !dbg !7505
  %10 = getelementptr inbounds i8, i8* %1, i32 %9, !dbg !7511
  %11 = load i8, i8* %10, align 1, !dbg !7511
  switch i8 %11, label %26 [
    i8 1, label %12
    i8 2, label %12
    i8 3, label %19
  ], !dbg !7512

12:                                               ; preds = %8, %8
  br i1 %7, label %13, label %16, !dbg !7513

13:                                               ; preds = %12
  %14 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7516
  %15 = and i32 %14, -2, !dbg !7516
  store volatile i32 %15, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7516
  br label %41, !dbg !7520

16:                                               ; preds = %12
  %17 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7521
  %18 = and i32 %17, -2, !dbg !7521
  store volatile i32 %18, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7521
  br label %41

19:                                               ; preds = %8
  br i1 %7, label %20, label %23, !dbg !7524

20:                                               ; preds = %19
  %21 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7526
  %22 = or i32 %21, 1, !dbg !7526
  store volatile i32 %22, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7526
  br label %41, !dbg !7530

23:                                               ; preds = %19
  %24 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7531
  %25 = or i32 %24, 1, !dbg !7531
  store volatile i32 %25, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7531
  br label %41

26:                                               ; preds = %8
  %27 = and i32 %6, 1, !dbg !7509
  %28 = icmp eq i32 %27, 0, !dbg !7534
  br i1 %7, label %29, label %35, !dbg !7537

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7538
  br i1 %28, label %33, label %31, !dbg !7541

31:                                               ; preds = %29
  %32 = or i32 %30, 1, !dbg !7538
  store volatile i32 %32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7538
  br label %67, !dbg !7538

33:                                               ; preds = %29
  %34 = and i32 %30, -2, !dbg !7538
  store volatile i32 %34, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7538
  br label %67

35:                                               ; preds = %26
  %36 = load volatile i32, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7542
  br i1 %28, label %39, label %37, !dbg !7545

37:                                               ; preds = %35
  %38 = or i32 %36, 1, !dbg !7542
  store volatile i32 %38, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7542
  br label %67, !dbg !7542

39:                                               ; preds = %35
  %40 = and i32 %36, -2, !dbg !7542
  store volatile i32 %40, i32* inttoptr (i32 -1610350528 to i32*), align 64, !dbg !7542
  br label %67

41:                                               ; preds = %20, %23, %13, %16
  %42 = add i32 %9, 2, !dbg !7546
  %43 = getelementptr inbounds i8, i8* %1, i32 %42, !dbg !7547
  %44 = load i8, i8* %43, align 1, !dbg !7547
  %45 = icmp eq i8 %44, 5, !dbg !7548
  br i1 %45, label %46, label %56, !dbg !7549

46:                                               ; preds = %41
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7550
  %47 = add i32 %9, 3
  %48 = getelementptr inbounds i8, i8* %1, i32 %47
  br label %49, !dbg !7551

49:                                               ; preds = %49, %46
  call void @llvm.dbg.value(metadata i8* %3, metadata !7501, metadata !DIExpression(DW_OP_deref)), !dbg !7552
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef nonnull %3, i16 noundef zeroext 1, i16 noundef zeroext 1) #21, !dbg !7553
  %50 = load i8, i8* %3, align 1, !dbg !7555
  call void @llvm.dbg.value(metadata i8 %50, metadata !7501, metadata !DIExpression()), !dbg !7552
  %51 = load i8, i8* %48, align 1, !dbg !7556
  %52 = and i8 %51, %50, !dbg !7557
  %53 = icmp eq i8 %52, 0, !dbg !7558
  br i1 %53, label %54, label %49, !dbg !7558, !llvm.loop !7559

54:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !7561
  %55 = add i32 %9, 1, !dbg !7562
  br label %61, !dbg !7563

56:                                               ; preds = %41
  %57 = add i32 %9, 1, !dbg !7564
  %58 = getelementptr inbounds i8, i8* %1, i32 %57, !dbg !7566
  %59 = load i8, i8* %58, align 1, !dbg !7566
  %60 = zext i8 %59 to i16, !dbg !7566
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %43, i8* noundef null, i16 noundef zeroext %60, i16 noundef zeroext 0) #21, !dbg !7567
  br label %61

61:                                               ; preds = %56, %54
  %62 = phi i32 [ %57, %56 ], [ %55, %54 ], !dbg !7562
  %63 = getelementptr inbounds i8, i8* %1, i32 %62, !dbg !7568
  %64 = load i8, i8* %63, align 1, !dbg !7568
  %65 = zext i8 %64 to i32, !dbg !7568
  %66 = add i32 %42, %65, !dbg !7569
  call void @llvm.dbg.value(metadata i32 %66, metadata !7499, metadata !DIExpression()), !dbg !7505
  br label %8, !dbg !7510, !llvm.loop !7570

67:                                               ; preds = %33, %31, %39, %37, %2
  ret void, !dbg !7572
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !7573 {
  %4 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !7577, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i8* %1, metadata !7578, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i8 %2, metadata !7579, metadata !DIExpression()), !dbg !7580
  store i8 %2, i8* %4, align 1
  call void @llvm.dbg.value(metadata i8* %4, metadata !7579, metadata !DIExpression(DW_OP_deref)), !dbg !7580
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !7581
  ret void, !dbg !7582
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SFI_ReadDeviceID_SPI(i16 noundef zeroext %0, i8* nocapture noundef writeonly %1) local_unnamed_addr #0 section ".ram_code" !dbg !7583 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !7587, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.value(metadata i8* %1, metadata !7588, metadata !DIExpression()), !dbg !7589
  tail call void @SFI_ReadDeviceID(i16 noundef zeroext %0, i8* noundef %1, i8 noundef zeroext -97) #21, !dbg !7590
  ret void, !dbg !7591
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SFI_Dev_WorkingFrequencyQuery() local_unnamed_addr #10 section ".ram_code" !dbg !7592 {
  ret i32 78, !dbg !7596
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SFI_Dev_WorkingVoltageQuery() local_unnamed_addr #11 section ".ram_code" !dbg !7597 {
  %1 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7601
  %2 = and i32 %1, 7340032, !dbg !7603
  %3 = icmp ult i32 %2, 2097153, !dbg !7604
  %4 = select i1 %3, i32 30, i32 18, !dbg !7605
  ret i32 %4, !dbg !7606
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize writeonly
define dso_local zeroext i1 @SFI_Dev_GetUniqueID(i8* nocapture noundef writeonly %0) local_unnamed_addr #17 section ".ram_code" !dbg !7607 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7611, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i32 0, metadata !7612, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.value(metadata i32 0, metadata !7612, metadata !DIExpression()), !dbg !7613
  br label %2, !dbg !7614

2:                                                ; preds = %1, %2
  %3 = phi i32 [ 0, %1 ], [ %5, %2 ]
  call void @llvm.dbg.value(metadata i32 %3, metadata !7612, metadata !DIExpression()), !dbg !7613
  %4 = getelementptr inbounds i8, i8* %0, i32 %3, !dbg !7616
  store i8 -1, i8* %4, align 1, !dbg !7619
  %5 = add nuw nsw i32 %3, 1, !dbg !7620
  call void @llvm.dbg.value(metadata i32 %5, metadata !7612, metadata !DIExpression()), !dbg !7613
  %6 = icmp eq i32 %5, 8, !dbg !7621
  br i1 %6, label %7, label %2, !dbg !7614, !llvm.loop !7622

7:                                                ; preds = %2
  ret i1 true, !dbg !7624
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Enter_DPD() local_unnamed_addr #0 section ".ram_code" !dbg !7625 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* @EntireDiskMtdData, metadata !7627, metadata !DIExpression()), !dbg !7628
  %1 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7629
  %2 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %1, i32 0, i32 19, !dbg !7630
  %3 = load i8, i8* %2, align 1, !dbg !7630
  store i8 %3, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7631
  %4 = load i8*, i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !7632
  %5 = ptrtoint i8* %4 to i32, !dbg !7633
  store i32 %5, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7634
  %6 = bitcast i8* %4 to i32*, !dbg !7635
  %7 = load volatile i32, i32* %6, align 4, !dbg !7636
  store i32 %7, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7637
  %8 = load volatile i32, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7638
  store i32 %8, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7639
  %9 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7640
  store i32 %9, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7641
  %10 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7642
  store i32 %10, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7643
  %11 = load volatile i32, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7644
  store i32 %11, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7645
  %12 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7646
  store i32 %12, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7647
  %13 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7648
  %14 = or i32 %13, 986880, !dbg !7649
  store volatile i32 %14, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7650
  %15 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7651
  %16 = or i32 %15, 252645135, !dbg !7652
  store volatile i32 %16, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7653
  %17 = load i16, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !7654
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !7655
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 18, !dbg !7656
  %20 = load i8, i8* %19, align 1, !dbg !7656
  %21 = zext i8 %20 to i32, !dbg !7657
  tail call void @SFI_Dev_Command(i16 noundef zeroext %17, i32 noundef %21) #21, !dbg !7658
  %22 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !7659
  ret void, !dbg !7660
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_Leave_DPD() local_unnamed_addr #0 section ".tcm_code" !dbg !7661 {
  %1 = load i32, i32* @SFI_MAC_CTL_BACKUP, align 4, !dbg !7662
  store volatile i32 %1, i32* inttoptr (i32 -1610350592 to i32*), align 262144, !dbg !7663
  %2 = load i32, i32* @SFI_DIRECT_CTL_BACKUP, align 4, !dbg !7664
  store volatile i32 %2, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !7665
  %3 = load i32, i32* @SFI_MISC_CTL_BACKUP, align 4, !dbg !7666
  store volatile i32 %3, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7667
  %4 = load i32, i32* @SFI_MISC_CTL2_BACKUP, align 4, !dbg !7668
  store volatile i32 %4, i32* inttoptr (i32 -1610350580 to i32*), align 4, !dbg !7669
  %5 = load i32, i32* @SFI_DLY_CTL_3_BACKUP, align 4, !dbg !7670
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7671
  %6 = load volatile i32, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7672
  %7 = and i32 %6, -252645136, !dbg !7673
  store volatile i32 %7, i32* inttoptr (i32 -1610350560 to i32*), align 32, !dbg !7674
  %8 = load i8, i8* @NOR_FLASH_LeaveDPDCmd, align 1, !dbg !7675
  %9 = zext i8 %8 to i32, !dbg !7675
  tail call void @SFI_Dev_Command(i16 noundef zeroext 0, i32 noundef %9) #21, !dbg !7676
  %10 = tail call i32 @hal_gpt_delay_us(i32 noundef 100) #20, !dbg !7677
  %11 = load i32, i32* @NOR_FLASH_FATStartValue, align 4, !dbg !7678
  %12 = load i32, i32* @NOR_FLASH_FATStartAddr, align 4, !dbg !7680
  %13 = inttoptr i32 %12 to i32*, !dbg !7681
  %14 = load volatile i32, i32* %13, align 4, !dbg !7682
  %15 = icmp eq i32 %11, %14, !dbg !7683
  br i1 %15, label %17, label %16, !dbg !7684

16:                                               ; preds = %0, %16
  br label %16, !dbg !7685, !llvm.loop !7686

17:                                               ; preds = %0
  ret void, !dbg !7688
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_LOW_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7689 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7690
  %2 = icmp eq i32 %1, 0, !dbg !7692
  br i1 %2, label %3, label %5, !dbg !7693

3:                                                ; preds = %0
  %4 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7694
  store i32 %4, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7696
  br label %5, !dbg !7697

5:                                                ; preds = %3, %0
  %6 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7698
  %7 = icmp eq i32 %6, 0, !dbg !7700
  br i1 %7, label %8, label %10, !dbg !7701

8:                                                ; preds = %5
  %9 = load volatile i32, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7702
  store i32 %9, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7704
  br label %10, !dbg !7705

10:                                               ; preds = %8, %5
  %11 = load volatile i32, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7706
  %12 = and i32 %11, -256, !dbg !7707
  store volatile i32 %12, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7708
  store volatile i32 0, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7709
  %13 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 0) #20, !dbg !7710
  ret void, !dbg !7711
}

; Function Attrs: optsize
declare dso_local i32 @clock_mux_sel(i32 noundef, i32 noundef) local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_DEV_SWITCH_TO_HIGH_FQ() local_unnamed_addr #0 section ".tcm_code" !dbg !7712 {
  %1 = load i32, i32* @SFI_CLK_SWITCH_MISC_CTL_BACKUP, align 4, !dbg !7713
  %2 = icmp eq i32 %1, 0, !dbg !7715
  br i1 %2, label %4, label %3, !dbg !7716

3:                                                ; preds = %0
  store volatile i32 %1, i32* inttoptr (i32 -1610350584 to i32*), align 8, !dbg !7717
  br label %4, !dbg !7719

4:                                                ; preds = %3, %0
  %5 = load i32, i32* @SFI_CLK_SWITCH_DLY_CTL_3_BACKUP, align 4, !dbg !7720
  %6 = icmp eq i32 %5, 0, !dbg !7722
  br i1 %6, label %8, label %7, !dbg !7723

7:                                                ; preds = %4
  store volatile i32 %5, i32* inttoptr (i32 -1610350552 to i32*), align 8, !dbg !7724
  br label %8, !dbg !7726

8:                                                ; preds = %7, %4
  %9 = tail call i32 @clock_mux_sel(i32 noundef 2, i32 noundef 7) #20, !dbg !7727
  ret void, !dbg !7728
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @ust_get_current_time() local_unnamed_addr #10 section ".tcm_code" !dbg !7729 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7731, metadata !DIExpression()), !dbg !7732
  ret i32 0, !dbg !7733
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_current_32K_counter() local_unnamed_addr #10 section ".ram_code" !dbg !7734 {
  call void @llvm.dbg.value(metadata i32 0, metadata !7736, metadata !DIExpression()), !dbg !7737
  ret i32 0, !dbg !7738
}

; Function Attrs: noinline nounwind optsize
define dso_local void @ust_busy_wait(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7739 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7741, metadata !DIExpression()), !dbg !7742
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !7743
  ret void, !dbg !7744
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SaveAndSetIRQMask() local_unnamed_addr #0 section ".ram_code" !dbg !7745 {
  %1 = tail call i32 @save_and_set_interrupt_mask() #20, !dbg !7748
  call void @llvm.dbg.value(metadata i32 %1, metadata !7747, metadata !DIExpression()), !dbg !7749
  ret i32 %1, !dbg !7750
}

; Function Attrs: noinline nounwind optsize
define dso_local void @RestoreIRQMask(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !7751 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !7753, metadata !DIExpression()), !dbg !7754
  tail call void @restore_interrupt_mask(i32 noundef %0) #20, !dbg !7755
  ret void, !dbg !7756
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_UnlockBlock_None(i8* nocapture readnone %0) #10 section ".ram_code" !dbg !7757 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !7759, metadata !DIExpression()), !dbg !7760
  ret i32 0, !dbg !7761
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @sfi_60qbit_test() local_unnamed_addr #10 section ".ram_code" !dbg !7762 {
  ret i32 0, !dbg !7765
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CompareData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #12 section ".ram_code" !dbg !7766 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !7770, metadata !DIExpression()), !dbg !7785
  call void @llvm.dbg.value(metadata i8* %1, metadata !7771, metadata !DIExpression()), !dbg !7785
  call void @llvm.dbg.value(metadata i32 %2, metadata !7772, metadata !DIExpression()), !dbg !7785
  %4 = ptrtoint i8* %0 to i32, !dbg !7786
  %5 = ptrtoint i8* %1 to i32
  %6 = or i32 %5, %4, !dbg !7787
  %7 = and i32 %6, 3, !dbg !7787
  %8 = icmp eq i32 %7, 0, !dbg !7787
  br i1 %8, label %9, label %26, !dbg !7787

9:                                                ; preds = %3
  %10 = bitcast i8* %0 to i32*, !dbg !7788
  call void @llvm.dbg.value(metadata i32* %10, metadata !7774, metadata !DIExpression()), !dbg !7789
  %11 = bitcast i8* %1 to i32*, !dbg !7790
  call void @llvm.dbg.value(metadata i32* %11, metadata !7777, metadata !DIExpression()), !dbg !7789
  call void @llvm.dbg.value(metadata i32 0, metadata !7773, metadata !DIExpression()), !dbg !7785
  call void @llvm.dbg.value(metadata i32 0, metadata !7773, metadata !DIExpression()), !dbg !7785
  %12 = icmp ult i32 %2, 4, !dbg !7791
  br i1 %12, label %65, label %13, !dbg !7794

13:                                               ; preds = %9
  %14 = lshr i32 %2, 2
  br label %15, !dbg !7794

15:                                               ; preds = %15, %13
  %16 = phi i32 [ 0, %13 ], [ %22, %15 ]
  call void @llvm.dbg.value(metadata i32 %16, metadata !7773, metadata !DIExpression()), !dbg !7785
  %17 = getelementptr inbounds i32, i32* %10, i32 %16, !dbg !7795
  %18 = load i32, i32* %17, align 4, !dbg !7795
  %19 = getelementptr inbounds i32, i32* %11, i32 %16, !dbg !7798
  %20 = load i32, i32* %19, align 4, !dbg !7798
  %21 = icmp eq i32 %18, %20, !dbg !7799
  %22 = add nuw nsw i32 %16, 1, !dbg !7800
  call void @llvm.dbg.value(metadata i32 %22, metadata !7773, metadata !DIExpression()), !dbg !7785
  %23 = xor i1 %21, true, !dbg !7801
  %24 = icmp eq i32 %22, %14
  %25 = select i1 %23, i1 true, i1 %24, !dbg !7801
  call void @llvm.dbg.value(metadata i32 %22, metadata !7773, metadata !DIExpression()), !dbg !7785
  br i1 %25, label %59, label %15, !dbg !7801, !llvm.loop !7802

26:                                               ; preds = %3
  %27 = and i32 %6, 1, !dbg !7804
  %28 = icmp eq i32 %27, 0, !dbg !7804
  br i1 %28, label %31, label %29, !dbg !7804

29:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 0, metadata !7773, metadata !DIExpression()), !dbg !7785
  %30 = icmp eq i32 %2, 0, !dbg !7805
  br i1 %30, label %65, label %48, !dbg !7808

31:                                               ; preds = %26
  %32 = bitcast i8* %0 to i16*, !dbg !7809
  call void @llvm.dbg.value(metadata i16* %32, metadata !7778, metadata !DIExpression()), !dbg !7810
  %33 = bitcast i8* %1 to i16*, !dbg !7811
  call void @llvm.dbg.value(metadata i16* %33, metadata !7781, metadata !DIExpression()), !dbg !7810
  call void @llvm.dbg.value(metadata i32 0, metadata !7773, metadata !DIExpression()), !dbg !7785
  call void @llvm.dbg.value(metadata i32 0, metadata !7773, metadata !DIExpression()), !dbg !7785
  %34 = icmp ult i32 %2, 2, !dbg !7812
  br i1 %34, label %65, label %35, !dbg !7815

35:                                               ; preds = %31
  %36 = lshr i32 %2, 1
  br label %37, !dbg !7815

37:                                               ; preds = %37, %35
  %38 = phi i32 [ 0, %35 ], [ %44, %37 ]
  call void @llvm.dbg.value(metadata i32 %38, metadata !7773, metadata !DIExpression()), !dbg !7785
  %39 = getelementptr inbounds i16, i16* %32, i32 %38, !dbg !7816
  %40 = load i16, i16* %39, align 2, !dbg !7816
  %41 = getelementptr inbounds i16, i16* %33, i32 %38, !dbg !7819
  %42 = load i16, i16* %41, align 2, !dbg !7819
  %43 = icmp eq i16 %40, %42, !dbg !7820
  %44 = add nuw nsw i32 %38, 1, !dbg !7821
  call void @llvm.dbg.value(metadata i32 %44, metadata !7773, metadata !DIExpression()), !dbg !7785
  %45 = xor i1 %43, true, !dbg !7822
  %46 = icmp eq i32 %44, %36
  %47 = select i1 %45, i1 true, i1 %46, !dbg !7822
  call void @llvm.dbg.value(metadata i32 %44, metadata !7773, metadata !DIExpression()), !dbg !7785
  br i1 %47, label %61, label %37, !dbg !7822, !llvm.loop !7823

48:                                               ; preds = %29, %48
  %49 = phi i32 [ %55, %48 ], [ 0, %29 ]
  call void @llvm.dbg.value(metadata i32 %49, metadata !7773, metadata !DIExpression()), !dbg !7785
  %50 = getelementptr inbounds i8, i8* %0, i32 %49, !dbg !7825
  %51 = load i8, i8* %50, align 1, !dbg !7825
  %52 = getelementptr inbounds i8, i8* %1, i32 %49, !dbg !7828
  %53 = load i8, i8* %52, align 1, !dbg !7828
  %54 = icmp eq i8 %51, %53, !dbg !7829
  %55 = add nuw i32 %49, 1, !dbg !7830
  call void @llvm.dbg.value(metadata i32 %55, metadata !7773, metadata !DIExpression()), !dbg !7785
  %56 = xor i1 %54, true, !dbg !7831
  %57 = icmp eq i32 %55, %2
  %58 = select i1 %56, i1 true, i1 %57, !dbg !7831
  call void @llvm.dbg.value(metadata i32 %55, metadata !7773, metadata !DIExpression()), !dbg !7785
  br i1 %58, label %63, label %48, !dbg !7831, !llvm.loop !7832

59:                                               ; preds = %15
  %60 = xor i1 %21, true, !dbg !7834
  br label %65, !dbg !7834

61:                                               ; preds = %37
  %62 = xor i1 %43, true, !dbg !7834
  br label %65, !dbg !7834

63:                                               ; preds = %48
  %64 = xor i1 %54, true, !dbg !7834
  br label %65, !dbg !7834

65:                                               ; preds = %63, %61, %59, %29, %31, %9
  %66 = phi i1 [ false, %9 ], [ false, %31 ], [ false, %29 ], [ %60, %59 ], [ %62, %61 ], [ %64, %63 ], !dbg !7785
  ret i1 %66, !dbg !7834
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ProgramData(i8* noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 section ".ram_code" !dbg !7835 {
  %4 = alloca i8*, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !7839, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i8* %1, metadata !7840, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i32 %2, metadata !7841, metadata !DIExpression()), !dbg !7850
  %6 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !7851
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %6, metadata !7842, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i8* %0, metadata !7843, metadata !DIExpression()), !dbg !7850
  %7 = bitcast i8** %4 to i8*, !dbg !7852
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7852
  call void @llvm.dbg.value(metadata i8* %1, metadata !7844, metadata !DIExpression()), !dbg !7850
  store i8* %1, i8** %4, align 4, !dbg !7853
  call void @llvm.dbg.value(metadata i32 0, metadata !7845, metadata !DIExpression()), !dbg !7850
  %8 = bitcast i32* %5 to i8*, !dbg !7854
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7854
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7855
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 21, !dbg !7856
  store i8 1, i8* %9, align 4, !dbg !7857
  call void @llvm.dbg.value(metadata i32 %2, metadata !7841, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i8* %0, metadata !7843, metadata !DIExpression()), !dbg !7850
  %10 = icmp eq i32 %2, 0, !dbg !7858
  br i1 %10, label %73, label %11, !dbg !7859

11:                                               ; preds = %3
  %12 = ptrtoint i8* %0 to i32, !dbg !7860
  call void @llvm.dbg.value(metadata i32 %12, metadata !7843, metadata !DIExpression()), !dbg !7850
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 24
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 22
  %15 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 13
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 23
  %17 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %6, i32 0, i32 12
  br label %18, !dbg !7859

18:                                               ; preds = %11, %66
  %19 = phi i32 [ %2, %11 ], [ %70, %66 ]
  %20 = phi i32 [ %12, %11 ], [ %71, %66 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !7841, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i32 %20, metadata !7843, metadata !DIExpression()), !dbg !7850
  %21 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !7861
  %22 = shl i32 %21, 1, !dbg !7863
  %23 = add i32 %22, -1, !dbg !7864
  %24 = and i32 %23, %20, !dbg !7865
  %25 = sub i32 %22, %24, !dbg !7866
  %26 = icmp ugt i32 %19, %25, !dbg !7867
  %27 = select i1 %26, i32 %25, i32 %19, !dbg !7868
  call void @llvm.dbg.value(metadata i32 %27, metadata !7847, metadata !DIExpression()), !dbg !7850
  call void @llvm.dbg.value(metadata i32 %27, metadata !7846, metadata !DIExpression()), !dbg !7850
  store i32 %27, i32* %5, align 4, !dbg !7869
  %28 = load i32, i32* %13, align 4, !dbg !7870
  %29 = and i32 %28, 16, !dbg !7872
  %30 = icmp eq i32 %29, 0, !dbg !7872
  br i1 %30, label %31, label %32, !dbg !7873

31:                                               ; preds = %18
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %6) #21, !dbg !7874
  br label %32, !dbg !7876

32:                                               ; preds = %31, %18
  %33 = load i8, i8* %14, align 1, !dbg !7877
  %34 = icmp eq i8 %33, 4, !dbg !7879
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7880
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 0, !dbg !7880
  %37 = load i8, i8* %36, align 1, !dbg !7880
  %38 = zext i8 %37 to i32, !dbg !7880
  br i1 %34, label %39, label %43, !dbg !7881

39:                                               ; preds = %32
  call void @llvm.dbg.value(metadata i8** %4, metadata !7844, metadata !DIExpression(DW_OP_deref)), !dbg !7850
  call void @llvm.dbg.value(metadata i32* %5, metadata !7846, metadata !DIExpression(DW_OP_deref)), !dbg !7850
  %40 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %38, i32 noundef %20, i8** noundef nonnull %4, i32* noundef nonnull %5) #20, !dbg !7882
  call void @llvm.dbg.value(metadata i32 %40, metadata !7845, metadata !DIExpression()), !dbg !7850
  %41 = load i8*, i8** %4, align 4, !dbg !7884
  call void @llvm.dbg.value(metadata i8* %41, metadata !7844, metadata !DIExpression()), !dbg !7850
  %42 = load i32, i32* %5, align 4, !dbg !7885
  call void @llvm.dbg.value(metadata i32 %42, metadata !7846, metadata !DIExpression()), !dbg !7850
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %41, i32 noundef %42) #20, !dbg !7886
  br label %47, !dbg !7887

43:                                               ; preds = %32
  %44 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %38, i32 noundef %20) #20, !dbg !7888
  call void @llvm.dbg.value(metadata i32 %44, metadata !7845, metadata !DIExpression()), !dbg !7850
  %45 = load i8*, i8** %4, align 4, !dbg !7890
  call void @llvm.dbg.value(metadata i8* %45, metadata !7844, metadata !DIExpression()), !dbg !7850
  %46 = load i32, i32* %5, align 4, !dbg !7891
  call void @llvm.dbg.value(metadata i32 %46, metadata !7846, metadata !DIExpression()), !dbg !7850
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %45, i32 noundef %46) #20, !dbg !7892
  br label %47

47:                                               ; preds = %43, %39
  %48 = phi i32 [ %40, %39 ], [ %44, %43 ], !dbg !7880
  call void @llvm.dbg.value(metadata i32 %48, metadata !7845, metadata !DIExpression()), !dbg !7850
  %49 = call i32 @SaveAndSetIRQMask() #21, !dbg !7893
  call void @llvm.dbg.value(metadata i32 %49, metadata !7849, metadata !DIExpression()), !dbg !7850
  %50 = load i8, i8* %14, align 1, !dbg !7894
  %51 = zext i8 %50 to i32, !dbg !7895
  %52 = add i32 %27, 1, !dbg !7896
  %53 = add i32 %52, %51, !dbg !7897
  store volatile i32 %53, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7898
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7899
  store volatile i32 %48, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7900
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !7901
  %54 = load i16, i16* %16, align 2, !dbg !7902
  call void @SFI_MacEnable(i16 noundef zeroext %54) #20, !dbg !7903
  %55 = load i16, i16* %16, align 2, !dbg !7904
  call void @SFI_MacWaitReady(i16 noundef zeroext %55) #20, !dbg !7905
  call void @RestoreIRQMask(i32 noundef %49) #21, !dbg !7906
  br label %56, !dbg !7907

56:                                               ; preds = %56, %47
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !7908
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 16, !dbg !7910
  %59 = load i8, i8* %58, align 1, !dbg !7910
  %60 = call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %6, i8 noundef zeroext %59) #21, !dbg !7911
  call void @llvm.dbg.value(metadata i32 %60, metadata !7848, metadata !DIExpression()), !dbg !7850
  %61 = load i8*, i8** %17, align 4, !dbg !7912
  %62 = load i8, i8* %61, align 1, !dbg !7914
  %63 = zext i8 %62 to i32, !dbg !7914
  %64 = and i32 %60, %63, !dbg !7915
  %65 = icmp eq i32 %64, 0, !dbg !7916
  br i1 %65, label %66, label %56, !dbg !7917, !llvm.loop !7918

66:                                               ; preds = %56
  call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !7920
  %67 = load i32, i32* %5, align 4, !dbg !7921
  call void @llvm.dbg.value(metadata i32 %67, metadata !7846, metadata !DIExpression()), !dbg !7850
  %68 = load i8*, i8** %4, align 4, !dbg !7922
  call void @llvm.dbg.value(metadata i8* %68, metadata !7844, metadata !DIExpression()), !dbg !7850
  %69 = getelementptr inbounds i8, i8* %68, i32 %67, !dbg !7922
  call void @llvm.dbg.value(metadata i8* %69, metadata !7844, metadata !DIExpression()), !dbg !7850
  store i8* %69, i8** %4, align 4, !dbg !7922
  %70 = sub i32 %19, %27, !dbg !7923
  call void @llvm.dbg.value(metadata i32 %70, metadata !7841, metadata !DIExpression()), !dbg !7850
  %71 = add i32 %27, %20, !dbg !7924
  call void @llvm.dbg.value(metadata i32 %71, metadata !7843, metadata !DIExpression()), !dbg !7850
  %72 = icmp eq i32 %70, 0, !dbg !7858
  br i1 %72, label %73, label %18, !dbg !7859, !llvm.loop !7925

73:                                               ; preds = %66, %3
  store i8 0, i8* %9, align 4, !dbg !7927
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !7928
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #22, !dbg !7929
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !7929
  ret void, !dbg !7929
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7930 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7934, metadata !DIExpression()), !dbg !7936
  br label %2, !dbg !7937

2:                                                ; preds = %2, %1
  %3 = tail call i32 @retrieve_MTD_lock() #21, !dbg !7938
  call void @llvm.dbg.value(metadata i32 %3, metadata !7935, metadata !DIExpression()), !dbg !7936
  %4 = icmp eq i32 %3, 0, !dbg !7940
  br i1 %4, label %5, label %2, !dbg !7941, !llvm.loop !7942

5:                                                ; preds = %2
  ret void, !dbg !7944
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !7945 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7947, metadata !DIExpression()), !dbg !7948
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !7949
  %3 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %2, align 4, !dbg !7949
  %4 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %3, i32 0, i32 1, !dbg !7950
  %5 = load i8, i8* %4, align 1, !dbg !7950
  %6 = zext i8 %5 to i32, !dbg !7951
  tail call void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* noundef %0, i32 noundef %6, i8 noundef zeroext 1) #21, !dbg !7952
  ret void, !dbg !7953
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_SET() local_unnamed_addr #0 section ".ram_code" !dbg !7954 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7957
  call void @llvm.dbg.value(metadata i32 %1, metadata !7956, metadata !DIExpression()), !dbg !7958
  store i8 1, i8* @NOR_FLASH_BUSY, align 1, !dbg !7959
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7960
  ret void, !dbg !7961
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8 noundef zeroext %1) local_unnamed_addr #0 section ".ram_code" !dbg !7962 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !7966, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata i8 %1, metadata !7967, metadata !DIExpression()), !dbg !7970
  %3 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7971
  call void @llvm.dbg.value(metadata i32 %3, metadata !7968, metadata !DIExpression()), !dbg !7970
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !7972
  %5 = load i16, i16* %4, align 2, !dbg !7972
  tail call void @SFI_MacEnable(i16 noundef zeroext %5) #20, !dbg !7973
  %6 = zext i8 %1 to i32, !dbg !7974
  store volatile i32 %6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7975
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !7976
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !7977
  %7 = load i16, i16* %4, align 2, !dbg !7978
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %7) #20, !dbg !7979
  %8 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !7980
  %9 = lshr i32 %8, 8, !dbg !7981
  %10 = and i32 %9, 255, !dbg !7982
  call void @llvm.dbg.value(metadata i32 %10, metadata !7969, metadata !DIExpression()), !dbg !7970
  tail call void @RestoreIRQMask(i32 noundef %3) #21, !dbg !7983
  ret i32 %10, !dbg !7984
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_BUSY_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !7985 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !7988
  call void @llvm.dbg.value(metadata i32 %1, metadata !7987, metadata !DIExpression()), !dbg !7989
  store i8 0, i8* @NOR_FLASH_BUSY, align 1, !dbg !7990
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7991
  %3 = and i32 %2, -513, !dbg !7991
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !7991
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !7994
  ret void, !dbg !7995
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* nocapture readnone %0) local_unnamed_addr #0 section ".ram_code" !dbg !7996 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !7998, metadata !DIExpression()), !dbg !8000
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8001
  call void @llvm.dbg.value(metadata i32 %2, metadata !7999, metadata !DIExpression()), !dbg !8000
  %3 = load i1, i1* @MTDMutex, align 4, !dbg !8002
  br i1 %3, label %4, label %5, !dbg !8004

4:                                                ; preds = %1
  store i1 false, i1* @MTDMutex, align 4, !dbg !8005
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8007
  ret void, !dbg !8008

5:                                                ; preds = %1
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8009
  tail call void @Flash_ReturnReady() #21, !dbg !8011
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 1449, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_FreeDevLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !8011
  unreachable, !dbg !8011
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ReturnReady() local_unnamed_addr #0 section ".ram_code" !dbg !8015 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* null, metadata !8017, metadata !DIExpression()), !dbg !8022
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8023
  call void @llvm.dbg.value(metadata i32 %1, metadata !8019, metadata !DIExpression()), !dbg !8022
  %2 = tail call i32 @get_NOR_init_status() #20, !dbg !8024
  %3 = icmp eq i32 %2, 0, !dbg !8026
  br i1 %3, label %4, label %125, !dbg !8027

4:                                                ; preds = %0
  store i32 0, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !8028
  %5 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8029
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %5, metadata !8017, metadata !DIExpression()), !dbg !8022
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 0, !dbg !8031
  %7 = load i32, i32* %6, align 4, !dbg !8031
  %8 = xor i32 %7, -1, !dbg !8031
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 5, !dbg !8031
  %10 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %9, align 4, !dbg !8031
  %11 = ptrtoint %struct.hal_cache_region_config_t* %10 to i32, !dbg !8031
  %12 = icmp eq i32 %8, %11, !dbg !8031
  br i1 %12, label %14, label %13, !dbg !8034

13:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8035
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 1069, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.Flash_ReturnReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !8035
  unreachable, !dbg !8035

14:                                               ; preds = %4
  %15 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8037
  %16 = icmp ult i32 %15, 16, !dbg !8039
  br i1 %16, label %17, label %34, !dbg !8040

17:                                               ; preds = %14
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !8041
  %19 = load i8, i8* %18, align 4, !dbg !8041
  %20 = icmp eq i8 %19, 1, !dbg !8042
  br i1 %20, label %21, label %34, !dbg !8043

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13
  %23 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12
  br label %24, !dbg !8044

24:                                               ; preds = %21, %24
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8046
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 16, !dbg !8048
  %27 = load i8, i8* %26, align 1, !dbg !8048
  %28 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %27) #21, !dbg !8049
  call void @llvm.dbg.value(metadata i32 %28, metadata !8018, metadata !DIExpression()), !dbg !8022
  %29 = load i8*, i8** %23, align 4, !dbg !8050
  %30 = load i8, i8* %29, align 1, !dbg !8052
  %31 = zext i8 %30 to i32, !dbg !8052
  %32 = and i32 %28, %31, !dbg !8053
  %33 = icmp eq i32 %32, 0, !dbg !8054
  br i1 %33, label %34, label %24, !dbg !8055, !llvm.loop !8056

34:                                               ; preds = %24, %17, %14
  %35 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8058, !range !2765
  %36 = icmp ne i8 %35, 0, !dbg !8058
  %37 = load i8, i8* @NOR_FLASH_BUSY, align 1
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %36, i1 true, i1 %38, !dbg !8060
  br i1 %39, label %116, label %40, !dbg !8060

40:                                               ; preds = %34
  %41 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 13, !dbg !8061
  %42 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8061
  %43 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %42, i32 0, i32 16, !dbg !8063
  %44 = load i8, i8* %43, align 1, !dbg !8063
  %45 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %44) #21, !dbg !8064
  call void @llvm.dbg.value(metadata i32 %45, metadata !8018, metadata !DIExpression()), !dbg !8022
  %46 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 12, !dbg !8065
  %47 = load i8*, i8** %46, align 4, !dbg !8065
  %48 = load i8, i8* %47, align 1, !dbg !8067
  %49 = zext i8 %48 to i32, !dbg !8067
  %50 = and i32 %45, %49, !dbg !8068
  %51 = icmp eq i32 %50, 0, !dbg !8069
  br i1 %51, label %85, label %52, !dbg !8070

52:                                               ; preds = %40
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %5) #21, !dbg !8071
  br label %53, !dbg !8073

53:                                               ; preds = %53, %52
  %54 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8074
  %55 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %54, i32 0, i32 16, !dbg !8076
  %56 = load i8, i8* %55, align 1, !dbg !8076
  %57 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %56) #21, !dbg !8077
  call void @llvm.dbg.value(metadata i32 %57, metadata !8018, metadata !DIExpression()), !dbg !8022
  %58 = load i8*, i8** %46, align 4, !dbg !8078
  %59 = load i8, i8* %58, align 1, !dbg !8080
  %60 = zext i8 %59 to i32, !dbg !8080
  %61 = and i32 %57, %60, !dbg !8081
  %62 = icmp eq i32 %61, 0, !dbg !8082
  br i1 %62, label %63, label %53, !dbg !8083, !llvm.loop !8084

63:                                               ; preds = %53
  %64 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !8086
  %65 = load i32, i32* %64, align 4, !dbg !8086
  %66 = and i32 %65, 4, !dbg !8088
  %67 = icmp eq i32 %66, 0, !dbg !8088
  br i1 %67, label %84, label %68, !dbg !8089

68:                                               ; preds = %63
  %69 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 21, !dbg !8090
  %70 = load i8, i8* %69, align 4, !dbg !8090
  %71 = icmp eq i8 %70, 2, !dbg !8091
  br i1 %71, label %72, label %84, !dbg !8092

72:                                               ; preds = %68
  store volatile i32 6, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8093
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8095
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8096
  %73 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !8097
  %74 = load i16, i16* %73, align 2, !dbg !8097
  tail call void @SFI_MacEnable(i16 noundef zeroext %74) #20, !dbg !8098
  %75 = load i16, i16* %73, align 2, !dbg !8099
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %75) #20, !dbg !8100
  store volatile i32 -1, i32* inttoptr (i32 -1610348540 to i32*), align 4, !dbg !8101
  store volatile i32 6, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8102
  store volatile i32 2, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8103
  %76 = load i16, i16* %73, align 2, !dbg !8104
  tail call void @SFI_MacEnable(i16 noundef zeroext %76) #20, !dbg !8105
  %77 = load i16, i16* %73, align 2, !dbg !8106
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %77) #20, !dbg !8107
  br label %78, !dbg !8108

78:                                               ; preds = %78, %72
  store volatile i32 5, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8109
  store volatile i32 1, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8111
  store volatile i32 1, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8112
  %79 = load i16, i16* %73, align 2, !dbg !8113
  tail call void @SFI_MacEnable(i16 noundef zeroext %79) #20, !dbg !8114
  %80 = load i16, i16* %73, align 2, !dbg !8115
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %80) #20, !dbg !8116
  %81 = load volatile i32, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8117
  call void @llvm.dbg.value(metadata i32 %81, metadata !8018, metadata !DIExpression(DW_OP_constu, 8, DW_OP_shr, DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_constu, 1, DW_OP_and, DW_OP_stack_value)), !dbg !8022
  %82 = and i32 %81, 256, !dbg !8118
  %83 = icmp eq i32 %82, 0, !dbg !8118
  br i1 %83, label %84, label %78, !dbg !8118, !llvm.loop !8119

84:                                               ; preds = %78, %68, %63
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8121
  br label %116, !dbg !8122

85:                                               ; preds = %40
  %86 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 24, !dbg !8123
  %87 = load i32, i32* %86, align 4, !dbg !8123
  %88 = and i32 %87, 2, !dbg !8126
  %89 = icmp eq i32 %88, 0, !dbg !8126
  br i1 %89, label %115, label %90, !dbg !8127

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 3, !dbg !8128
  %92 = load %struct.anon.9*, %struct.anon.9** %91, align 4, !dbg !8128
  %93 = icmp eq %struct.anon.9* %92, null, !dbg !8129
  br i1 %93, label %94, label %115, !dbg !8130

94:                                               ; preds = %90
  %95 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %41, align 4, !dbg !8131
  %96 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %95, i32 0, i32 15, !dbg !8133
  %97 = load i8, i8* %96, align 1, !dbg !8133
  %98 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %5, i8 noundef zeroext %97) #21, !dbg !8134
  call void @llvm.dbg.value(metadata i32 %98, metadata !8018, metadata !DIExpression()), !dbg !8022
  %99 = load i8*, i8** %46, align 4, !dbg !8135
  %100 = getelementptr inbounds i8, i8* %99, i32 2, !dbg !8137
  %101 = load i8, i8* %100, align 1, !dbg !8137
  %102 = zext i8 %101 to i32, !dbg !8137
  %103 = and i32 %98, %102, !dbg !8138
  %104 = icmp eq i32 %103, 0, !dbg !8139
  br i1 %104, label %105, label %115, !dbg !8140

105:                                              ; preds = %94
  %106 = getelementptr inbounds i8, i8* %99, i32 3, !dbg !8141
  %107 = load i8, i8* %106, align 1, !dbg !8141
  %108 = zext i8 %107 to i32, !dbg !8141
  %109 = and i32 %98, %108, !dbg !8142
  %110 = icmp eq i32 %109, 0, !dbg !8143
  br i1 %110, label %111, label %115, !dbg !8144

111:                                              ; preds = %105
  %112 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %5, i32 0, i32 23, !dbg !8145
  %113 = load i16, i16* %112, align 2, !dbg !8145
  tail call void @SFI_Dev_Command(i16 noundef zeroext %113, i32 noundef 122) #20, !dbg !8147
  %114 = load i16, i16* %112, align 2, !dbg !8148
  tail call void @SFI_Dev_Command(i16 noundef zeroext %114, i32 noundef 122) #20, !dbg !8149
  br label %115, !dbg !8150

115:                                              ; preds = %94, %105, %111, %90, %85
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8151
  br label %116

116:                                              ; preds = %84, %115, %34
  store i32 0, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8152
  %117 = load i32, i32* @gNOR_ReturnReadyBegin, align 4, !dbg !8153
  %118 = sub i32 0, %117, !dbg !8153
  call void @llvm.dbg.value(metadata i32 %118, metadata !8020, metadata !DIExpression()), !dbg !8154
  %119 = load i32, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !8155
  %120 = icmp ult i32 %119, %118, !dbg !8157
  br i1 %120, label %121, label %122, !dbg !8158

121:                                              ; preds = %116
  store i32 %118, i32* @sf_dal_flash_return_ready_max, align 4, !dbg !8159
  br label %122, !dbg !8161

122:                                              ; preds = %121, %116
  %123 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8162
  %124 = and i32 %123, -513, !dbg !8162
  store volatile i32 %124, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8162
  br label %125, !dbg !8165

125:                                              ; preds = %0, %122
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8022
  ret void, !dbg !8166
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8167 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8169, metadata !DIExpression()), !dbg !8173
  %2 = load i32, i32* @sf_dal_resume_time, align 4, !dbg !8174
  %3 = icmp eq i32 %2, -1, !dbg !8176
  br i1 %3, label %12, label %4, !dbg !8177

4:                                                ; preds = %1
  call void @llvm.dbg.value(metadata i32 0, metadata !8171, metadata !DIExpression()), !dbg !8173
  %5 = sub i32 0, %2, !dbg !8178
  call void @llvm.dbg.value(metadata i32 %5, metadata !8172, metadata !DIExpression()), !dbg !8173
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !8180
  %7 = load i8, i8* %6, align 4, !dbg !8180
  %8 = zext i8 %7 to i32, !dbg !8182
  %9 = icmp ugt i32 %8, %5, !dbg !8183
  br i1 %9, label %10, label %12, !dbg !8184

10:                                               ; preds = %4
  %11 = add i32 %2, %8, !dbg !8185
  tail call void @DelayAWhile_UST(i32 noundef %11) #20, !dbg !8187
  br label %12, !dbg !8188

12:                                               ; preds = %4, %10, %1
  %13 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8189
  call void @llvm.dbg.value(metadata i32 %13, metadata !8170, metadata !DIExpression()), !dbg !8173
  %14 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8190
  %15 = load i16, i16* %14, align 2, !dbg !8190
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8191
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %16, align 4, !dbg !8191
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 2, !dbg !8192
  %19 = load i8, i8* %18, align 1, !dbg !8192
  %20 = zext i8 %19 to i32, !dbg !8193
  tail call void @SFI_Dev_Command(i16 noundef zeroext %15, i32 noundef %20) #20, !dbg !8194
  tail call void @RestoreIRQMask(i32 noundef %13) #21, !dbg !8195
  ret void, !dbg !8196
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_SET() local_unnamed_addr #0 section ".ram_code" !dbg !8197 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8200
  call void @llvm.dbg.value(metadata i32 %1, metadata !8199, metadata !DIExpression()), !dbg !8201
  store i8 1, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8202
  %2 = load volatile i32, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8203
  %3 = and i32 %2, -513, !dbg !8203
  store volatile i32 %3, i32* inttoptr (i32 -1610350524 to i32*), align 4, !dbg !8203
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8206
  ret void, !dbg !8207
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !8208 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8212, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i32 %1, metadata !8213, metadata !DIExpression()), !dbg !8216
  call void @llvm.dbg.value(metadata i8 %2, metadata !8214, metadata !DIExpression()), !dbg !8216
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8217
  call void @llvm.dbg.value(metadata i32 %4, metadata !8215, metadata !DIExpression()), !dbg !8216
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8218
  %6 = load i16, i16* %5, align 2, !dbg !8218
  tail call void @SFI_MacEnable(i16 noundef zeroext %6) #20, !dbg !8219
  store volatile i32 %1, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8220
  %7 = zext i8 %2 to i32, !dbg !8221
  store volatile i32 %7, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8222
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8223
  %8 = load i16, i16* %5, align 2, !dbg !8224
  tail call void @SFI_MacWaitReady(i16 noundef zeroext %8) #20, !dbg !8225
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !8226
  ret void, !dbg !8227
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @retrieve_MTD_lock() local_unnamed_addr #0 section ".ram_code" !dbg !8228 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8233
  call void @llvm.dbg.value(metadata i32 %1, metadata !8232, metadata !DIExpression()), !dbg !8234
  %2 = load i1, i1* @MTDMutex, align 4, !dbg !8235
  br i1 %2, label %4, label %3, !dbg !8237

3:                                                ; preds = %0
  store i1 true, i1* @MTDMutex, align 4, !dbg !8238
  br label %4, !dbg !8240

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !8241
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8241
  ret i32 %5, !dbg !8242
}

; Function Attrs: noinline nounwind optsize
define dso_local zeroext i1 @Flash_CheckReady() local_unnamed_addr #0 section ".ram_code" !dbg !8243 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8250
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8247, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata i8 0, metadata !8249, metadata !DIExpression()), !dbg !8251
  %2 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !8252
  %3 = load i32, i32* %2, align 4, !dbg !8252
  %4 = xor i32 %3, -1, !dbg !8252
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !8252
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %5, align 4, !dbg !8252
  %7 = ptrtoint %struct.hal_cache_region_config_t* %6 to i32, !dbg !8252
  %8 = icmp eq i32 %4, %7, !dbg !8252
  br i1 %8, label %10, label %9, !dbg !8255

9:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !8256
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 1263, i8* noundef getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.Flash_CheckReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !8256
  unreachable, !dbg !8256

10:                                               ; preds = %0
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8258
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8259
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8259
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 16, !dbg !8260
  %14 = load i8, i8* %13, align 1, !dbg !8260
  %15 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %14) #21, !dbg !8261
  call void @llvm.dbg.value(metadata i32 %15, metadata !8248, metadata !DIExpression()), !dbg !8251
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8262
  %17 = load i8*, i8** %16, align 4, !dbg !8262
  %18 = load i8, i8* %17, align 1, !dbg !8264
  %19 = zext i8 %18 to i32, !dbg !8264
  %20 = and i32 %15, %19, !dbg !8265
  %21 = icmp eq i32 %20, 0, !dbg !8266
  br i1 %21, label %22, label %23, !dbg !8267

22:                                               ; preds = %10
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8268
  call void @llvm.dbg.value(metadata i8 1, metadata !8249, metadata !DIExpression()), !dbg !8251
  br label %23, !dbg !8270

23:                                               ; preds = %22, %10
  call void @llvm.dbg.value(metadata i8 poison, metadata !8249, metadata !DIExpression()), !dbg !8251
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8271
  ret i1 %21, !dbg !8272
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_ResumeOperation() local_unnamed_addr #0 section ".ram_code" !dbg !8273 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8275, metadata !DIExpression()), !dbg !8276
  %1 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8277, !range !2765
  %2 = icmp eq i8 %1, 0, !dbg !8277
  %3 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8277
  %4 = icmp eq i8 %3, 0, !dbg !8277
  %5 = select i1 %2, i1 true, i1 %4, !dbg !8277
  br i1 %5, label %6, label %7, !dbg !8277

6:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !8280
  tail call void @Flash_ReturnReady() #21, !dbg !8282
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 1293, i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.Flash_ResumeOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !8282
  unreachable, !dbg !8282

7:                                                ; preds = %0
  %8 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8286
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %8, metadata !8275, metadata !DIExpression()), !dbg !8276
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %8) #21, !dbg !8287
  ret void, !dbg !8288
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8289 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8291, metadata !DIExpression()), !dbg !8293
  %2 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8294
  call void @llvm.dbg.value(metadata i32 %2, metadata !8292, metadata !DIExpression()), !dbg !8293
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !8295
  %4 = load i16, i16* %3, align 2, !dbg !8295
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !8296
  %6 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %5, align 4, !dbg !8296
  %7 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %6, i32 0, i32 3, !dbg !8297
  %8 = load i8, i8* %7, align 1, !dbg !8297
  %9 = zext i8 %8 to i32, !dbg !8298
  tail call void @SFI_Dev_Command(i16 noundef zeroext %4, i32 noundef %9) #20, !dbg !8299
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 19, !dbg !8300
  %11 = load i8, i8* %10, align 4, !dbg !8300
  %12 = icmp eq i8 %11, 0, !dbg !8302
  br i1 %12, label %14, label %13, !dbg !8303

13:                                               ; preds = %1
  store i32 0, i32* @sf_dal_resume_time, align 4, !dbg !8304
  br label %14, !dbg !8306

14:                                               ; preds = %13, %1
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !8307
  tail call void @RestoreIRQMask(i32 noundef %2) #21, !dbg !8308
  ret void, !dbg !8309
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_FLAG_SUS_CLR() local_unnamed_addr #0 section ".ram_code" !dbg !8310 {
  %1 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8313
  call void @llvm.dbg.value(metadata i32 %1, metadata !8312, metadata !DIExpression()), !dbg !8314
  store i8 0, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8315
  tail call void @RestoreIRQMask(i32 noundef %1) #21, !dbg !8316
  ret void, !dbg !8317
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Flash_SuspendOperation() local_unnamed_addr #0 section ".ram_code" !dbg !8318 {
  %1 = load %struct.SF_MTD_Data*, %struct.SF_MTD_Data** bitcast (i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2) to %struct.SF_MTD_Data**), align 4, !dbg !8322
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8320, metadata !DIExpression()), !dbg !8323
  %2 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !8324, !range !2765
  %3 = icmp ne i8 %2, 0, !dbg !8324
  %4 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8324
  %5 = icmp eq i8 %4, 0, !dbg !8324
  %6 = select i1 %3, i1 %5, i1 false, !dbg !8324
  br i1 %6, label %8, label %7, !dbg !8324

7:                                                ; preds = %0
  tail call void @Flash_ReturnReady() #21, !dbg !8327
  tail call void @Flash_ReturnReady() #21, !dbg !8329
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 1313, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !8329
  unreachable, !dbg !8329

8:                                                ; preds = %0
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 0, !dbg !8333
  %10 = load i32, i32* %9, align 4, !dbg !8333
  %11 = xor i32 %10, -1, !dbg !8333
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 5, !dbg !8333
  %13 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %12, align 4, !dbg !8333
  %14 = ptrtoint %struct.hal_cache_region_config_t* %13 to i32, !dbg !8333
  %15 = icmp eq i32 %11, %14, !dbg !8333
  br i1 %15, label %17, label %16, !dbg !8336

16:                                               ; preds = %8
  tail call void @Flash_ReturnReady() #21, !dbg !8337
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 1315, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.Flash_SuspendOperation, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !8337
  unreachable, !dbg !8337

17:                                               ; preds = %8
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !8339
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13
  %19 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12
  br label %20, !dbg !8340

20:                                               ; preds = %20, %17
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %18, align 4, !dbg !8341
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 16, !dbg !8343
  %23 = load i8, i8* %22, align 1, !dbg !8343
  %24 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %1, i8 noundef zeroext %23) #21, !dbg !8344
  call void @llvm.dbg.value(metadata i32 %24, metadata !8321, metadata !DIExpression()), !dbg !8323
  %25 = load i8*, i8** %19, align 4, !dbg !8345
  %26 = load i8, i8* %25, align 1, !dbg !8347
  %27 = zext i8 %26 to i32, !dbg !8347
  %28 = and i32 %24, %27, !dbg !8348
  %29 = icmp eq i32 %28, 0, !dbg !8349
  br i1 %29, label %30, label %20, !dbg !8350, !llvm.loop !8351

30:                                               ; preds = %20
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !8353
  ret void, !dbg !8354
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @SF_DAL_CreateDevLock(%struct.SF_MTD_Data* nocapture %0) local_unnamed_addr #10 section ".ram_code" !dbg !8355 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8357, metadata !DIExpression()), !dbg !8358
  ret void, !dbg !8359
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !8360 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8383, metadata !DIExpression()), !dbg !8386
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8384, metadata !DIExpression()), !dbg !8386
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8387
  %4 = load i8*, i8** %3, align 4, !dbg !8387
  call void @llvm.dbg.value(metadata i8* %4, metadata !8385, metadata !DIExpression()), !dbg !8386
  store i8 1, i8* %4, align 1, !dbg !8388
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8389
  store i8 2, i8* %5, align 1, !dbg !8390
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8391
  store i8 8, i8* %6, align 1, !dbg !8392
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !8393
  store i8 4, i8* %7, align 1, !dbg !8394
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !8395
  store i8 60, i8* %8, align 1, !dbg !8396
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !8397
  store i8 -128, i8* %9, align 1, !dbg !8398
  %10 = getelementptr inbounds i8, i8* %4, i32 7, !dbg !8399
  store i8 96, i8* %10, align 1, !dbg !8400
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8401
  %12 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8401
  %13 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %12, i32 0, i32 15, !dbg !8402
  store i8 43, i8* %13, align 1, !dbg !8403
  %14 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8404
  %15 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %14, i32 0, i32 13, !dbg !8405
  store i8 43, i8* %15, align 1, !dbg !8406
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8407
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 14, !dbg !8408
  store i8 47, i8* %17, align 1, !dbg !8409
  %18 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8410
  %19 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %18, i32 0, i32 11, !dbg !8411
  store i8 5, i8* %19, align 1, !dbg !8412
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8413
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 12, !dbg !8414
  store i8 1, i8* %21, align 1, !dbg !8415
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8416
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 17, !dbg !8417
  store i8 43, i8* %23, align 1, !dbg !8418
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8419
  store i8 22, i8* %24, align 4, !dbg !8420
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 1, !dbg !8421
  %26 = load i8, i8* %25, align 1, !dbg !8421
  %27 = icmp eq i8 %26, 32, !dbg !8423
  br i1 %27, label %28, label %49, !dbg !8424

28:                                               ; preds = %2
  %29 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 2, !dbg !8425
  %30 = load i8, i8* %29, align 1, !dbg !8425
  %31 = icmp eq i8 %30, 24, !dbg !8426
  br i1 %31, label %32, label %41, !dbg !8427

32:                                               ; preds = %28
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8428
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 2, !dbg !8430
  store i8 117, i8* %34, align 1, !dbg !8431
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8432
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 3, !dbg !8433
  store i8 122, i8* %36, align 1, !dbg !8434
  %37 = load i8, i8* %25, align 1, !dbg !8435
  %38 = icmp eq i8 %37, 32, !dbg !8437
  br i1 %38, label %39, label %49, !dbg !8438

39:                                               ; preds = %32
  %40 = load i8, i8* %29, align 1, !dbg !8440
  br label %41, !dbg !8440

41:                                               ; preds = %28, %39
  %42 = phi i8 [ %40, %39 ], [ %30, %28 ], !dbg !8440
  %43 = icmp eq i8 %42, 22, !dbg !8441
  br i1 %43, label %44, label %49, !dbg !8442

44:                                               ; preds = %41
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8443
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 2, !dbg !8445
  store i8 117, i8* %46, align 1, !dbg !8446
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %11, align 4, !dbg !8447
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 3, !dbg !8448
  store i8 122, i8* %48, align 1, !dbg !8449
  br label %49, !dbg !8450

49:                                               ; preds = %2, %44, %41, %32
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8451
  store i32 (i8*)* @SF_DAL_UnlockBlock_MXIC, i32 (i8*)** %50, align 4, !dbg !8452
  ret i32 0, !dbg !8453
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_UnlockBlock_MXIC(i8* nocapture noundef readonly %0) #0 section ".ram_code" !dbg !8454 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata i8* %0, metadata !8456, metadata !DIExpression()), !dbg !8460
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8461
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8457, metadata !DIExpression()), !dbg !8460
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8462
  %4 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !8463
  %5 = load i8, i8* %4, align 1, !dbg !8465
  %6 = icmp eq i8 %5, -62, !dbg !8466
  br i1 %6, label %7, label %15, !dbg !8467

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i32 194, !dbg !8468
  %9 = load i8, i8* %8, align 1, !dbg !8468
  %10 = icmp eq i8 %9, 32, !dbg !8469
  br i1 %10, label %11, label %15, !dbg !8470

11:                                               ; preds = %7
  %12 = getelementptr inbounds i8, i8* %0, i32 195, !dbg !8471
  %13 = load i8, i8* %12, align 1, !dbg !8471
  %14 = icmp eq i8 %13, 22, !dbg !8472
  br i1 %14, label %48, label %15, !dbg !8473

15:                                               ; preds = %11, %7, %1
  %16 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !8474
  %17 = bitcast i8* %16 to i16*, !dbg !8474
  %18 = load i16, i16* %17, align 2, !dbg !8474
  %19 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8475
  %20 = bitcast i8* %19 to %struct.SF_MTD_CMD**, !dbg !8475
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8475
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 1, !dbg !8476
  %23 = load i8, i8* %22, align 1, !dbg !8476
  %24 = zext i8 %23 to i32, !dbg !8477
  tail call void @SFI_Dev_Command(i16 noundef zeroext %18, i32 noundef %24) #20, !dbg !8478
  tail call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8479
  %25 = load i16, i16* %17, align 2, !dbg !8480
  %26 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8481
  %27 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %26, i32 0, i32 11, !dbg !8482
  call void @llvm.dbg.value(metadata i8* %2, metadata !8459, metadata !DIExpression(DW_OP_deref)), !dbg !8460
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %25, i8* noundef nonnull %27, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !8483
  %28 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %20, align 4, !dbg !8484
  %29 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %28, i32 0, i32 12, !dbg !8485
  %30 = load i8, i8* %29, align 1, !dbg !8485
  %31 = zext i8 %30 to i32, !dbg !8486
  call void @llvm.dbg.value(metadata i32 %31, metadata !8458, metadata !DIExpression()), !dbg !8460
  %32 = shl nuw nsw i32 %31, 8, !dbg !8487
  %33 = load i8, i8* %2, align 1, !dbg !8488
  call void @llvm.dbg.value(metadata i8 %33, metadata !8459, metadata !DIExpression()), !dbg !8460
  %34 = zext i8 %33 to i32, !dbg !8488
  %35 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !8489
  %36 = bitcast i8* %35 to i8**, !dbg !8489
  %37 = load i8*, i8** %36, align 4, !dbg !8489
  %38 = getelementptr inbounds i8, i8* %37, i32 4, !dbg !8490
  %39 = load i8, i8* %38, align 1, !dbg !8490
  %40 = getelementptr inbounds i8, i8* %37, i32 5, !dbg !8491
  %41 = load i8, i8* %40, align 1, !dbg !8491
  %42 = or i8 %41, %39, !dbg !8492
  %43 = zext i8 %42 to i32, !dbg !8492
  %44 = xor i32 %43, -1, !dbg !8493
  %45 = and i32 %44, %34, !dbg !8494
  %46 = or i32 %45, %32, !dbg !8495
  call void @llvm.dbg.value(metadata i32 %46, metadata !8458, metadata !DIExpression()), !dbg !8460
  %47 = load i16, i16* %17, align 2, !dbg !8496
  call void @SFI_Dev_Command(i16 noundef zeroext %47, i32 noundef %46) #20, !dbg !8497
  call void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8498
  br label %48, !dbg !8499

48:                                               ; preds = %11, %15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8500
  ret i32 0, !dbg !8500
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_WaitReady_EMIINIT(%struct.SF_MTD_Data* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !8501 {
  %2 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !8503, metadata !DIExpression()), !dbg !8505
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8506
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23
  %4 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13
  %5 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 12
  br label %6, !dbg !8507

6:                                                ; preds = %6, %1
  %7 = load i16, i16* %3, align 2, !dbg !8508
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8510
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 16, !dbg !8511
  call void @llvm.dbg.value(metadata i8* %2, metadata !8504, metadata !DIExpression(DW_OP_deref)), !dbg !8505
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %7, i8* noundef nonnull %9, i8* noundef nonnull %2, i16 noundef zeroext 1, i16 noundef zeroext 1) #20, !dbg !8512
  %10 = load i8, i8* %2, align 1, !dbg !8513
  call void @llvm.dbg.value(metadata i8 %10, metadata !8504, metadata !DIExpression()), !dbg !8505
  %11 = load i8*, i8** %5, align 4, !dbg !8514
  %12 = load i8, i8* %11, align 1, !dbg !8515
  %13 = and i8 %12, %10, !dbg !8516
  %14 = icmp eq i8 %13, 0, !dbg !8517
  br i1 %14, label %15, label %6, !dbg !8518, !llvm.loop !8519

15:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #22, !dbg !8521
  ret void, !dbg !8521
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #7 !dbg !8522 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8524, metadata !DIExpression()), !dbg !8527
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8525, metadata !DIExpression()), !dbg !8527
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !8528
  %4 = load i8*, i8** %3, align 4, !dbg !8528
  call void @llvm.dbg.value(metadata i8* %4, metadata !8526, metadata !DIExpression()), !dbg !8527
  store i8 1, i8* %4, align 1, !dbg !8529
  %5 = getelementptr inbounds i8, i8* %4, i32 1, !dbg !8530
  store i8 2, i8* %5, align 1, !dbg !8531
  %6 = getelementptr inbounds i8, i8* %4, i32 2, !dbg !8532
  store i8 -128, i8* %6, align 1, !dbg !8533
  %7 = getelementptr inbounds i8, i8* %4, i32 3, !dbg !8534
  store i8 -128, i8* %7, align 1, !dbg !8535
  %8 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !8536
  store i8 60, i8* %8, align 1, !dbg !8537
  %9 = getelementptr inbounds i8, i8* %4, i32 5, !dbg !8538
  store i8 -128, i8* %9, align 1, !dbg !8539
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8540
  %11 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8540
  %12 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %11, i32 0, i32 10, !dbg !8541
  store i8 -97, i8* %12, align 1, !dbg !8542
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8543
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 15, !dbg !8544
  store i8 53, i8* %14, align 1, !dbg !8545
  %15 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8546
  %16 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %15, i32 0, i32 13, !dbg !8547
  store i8 53, i8* %16, align 1, !dbg !8548
  %17 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8549
  %18 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %17, i32 0, i32 11, !dbg !8550
  store i8 5, i8* %18, align 1, !dbg !8551
  %19 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8552
  %20 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %19, i32 0, i32 12, !dbg !8553
  store i8 1, i8* %20, align 1, !dbg !8554
  %21 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8555
  %22 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %21, i32 0, i32 2, !dbg !8556
  store i8 117, i8* %22, align 1, !dbg !8557
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %10, align 4, !dbg !8558
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 3, !dbg !8559
  store i8 122, i8* %24, align 1, !dbg !8560
  %25 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8561
  store i8 22, i8* %25, align 4, !dbg !8562
  %26 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 28, !dbg !8563
  store i32 (i8*)* @SF_DAL_UnlockBlock_None, i32 (i8*)** %26, align 4, !dbg !8564
  ret i32 0, !dbg !8565
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_Init_WINBOND_OTP(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture readnone %1) local_unnamed_addr #10 !dbg !8566 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !8568, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* undef, metadata !8569, metadata !DIExpression()), !dbg !8570
  ret i32 0, !dbg !8571
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* nocapture noundef writeonly %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !8572 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !8574, metadata !DIExpression()), !dbg !8576
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !8575, metadata !DIExpression()), !dbg !8576
  %3 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 0, !dbg !8577
  store i32 (i8*, i8*)* @SF_DAL_MountDevice, i32 (i8*, i8*)** %3, align 4, !dbg !8578
  %4 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 1, !dbg !8579
  store i32 (i8*)* @SF_DAL_ShutDown, i32 (i8*)** %4, align 4, !dbg !8580
  %5 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 2, !dbg !8581
  store i8* (i8*, i32, i32)* @MapWindow, i8* (i8*, i32, i32)** %5, align 4, !dbg !8582
  %6 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 3, !dbg !8583
  store i32 (i8*, i32)* @SF_DAL_EraseBlock, i32 (i8*, i32)** %6, align 4, !dbg !8584
  %7 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 4, !dbg !8585
  store i32 (i8*, i8*, i8*, i32)* @SF_DAL_ProgramData, i32 (i8*, i8*, i8*, i32)** %7, align 4, !dbg !8586
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 5, !dbg !8587
  store i32 (i8*, i32)* @SF_DAL_NonBlockEraseBlock, i32 (i8*, i32)** %8, align 4, !dbg !8588
  %9 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 6, !dbg !8589
  store i32 (i8*, i32)* @SF_DAL_CheckDeviceReady, i32 (i8*, i32)** %9, align 4, !dbg !8590
  %10 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 7, !dbg !8591
  store i32 (i8*, i32)* @SF_DAL_SuspendErase, i32 (i8*, i32)** %10, align 4, !dbg !8592
  %11 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 8, !dbg !8593
  store i32 (i8*, i32)* @SF_DAL_ResumeErase, i32 (i8*, i32)** %11, align 4, !dbg !8594
  %12 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 9, !dbg !8595
  store i32 (i8*, i32)* null, i32 (i8*, i32)** %12, align 4, !dbg !8596
  %13 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 10, !dbg !8597
  store i32 (i8*, i32, i32, i8*, i32)* null, i32 (i8*, i32, i32, i8*, i32)** %13, align 4, !dbg !8598
  %14 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 11, !dbg !8599
  store i32 (i8*, i32*)* null, i32 (i8*, i32*)** %14, align 4, !dbg !8600
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 12, !dbg !8601
  store i32 (i8*, i8*, i32)* @SF_DAL_LockEraseBlkAddr, i32 (i8*, i8*, i32)** %15, align 4, !dbg !8602
  %16 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 13, !dbg !8603
  store i1 (i8*, i32)* null, i1 (i8*, i32)** %16, align 4, !dbg !8604
  %17 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %0, i32 0, i32 14, !dbg !8605
  store i32 (i8*, i32, i8*)* @SF_DAL_IOCtrl, i32 (i8*, i32, i8*)** %17, align 4, !dbg !8606
  %18 = tail call i32 @custom_get_NORFLASH_Size() #20, !dbg !8607
  %19 = icmp ugt i32 %18, 16777216, !dbg !8609
  %20 = select i1 %19, i8 4, i8 3, !dbg !8610
  %21 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 22, !dbg !8611
  store i8 %20, i8* %21, align 1, !dbg !8613
  %22 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !8614
  %23 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8614
  %24 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %23, i32 0, i32 17, !dbg !8615
  store i8 0, i8* %24, align 1, !dbg !8616
  %25 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8617
  %26 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %25, i32 0, i32 10, !dbg !8618
  store i8 -81, i8* %26, align 1, !dbg !8619
  %27 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8620
  %28 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %27, i32 0, i32 9, !dbg !8621
  store i8 -97, i8* %28, align 1, !dbg !8622
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8623
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 0, !dbg !8624
  store i8 2, i8* %30, align 1, !dbg !8625
  %31 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8626
  %32 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %31, i32 0, i32 6, !dbg !8627
  store i8 32, i8* %32, align 1, !dbg !8628
  %33 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8629
  %34 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %33, i32 0, i32 7, !dbg !8630
  store i8 82, i8* %34, align 1, !dbg !8631
  %35 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8632
  %36 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %35, i32 0, i32 8, !dbg !8633
  store i8 -40, i8* %36, align 1, !dbg !8634
  %37 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8635
  %38 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %37, i32 0, i32 2, !dbg !8636
  store i8 -80, i8* %38, align 1, !dbg !8637
  %39 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8638
  %40 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %39, i32 0, i32 3, !dbg !8639
  store i8 48, i8* %40, align 1, !dbg !8640
  %41 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8641
  %42 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %41, i32 0, i32 1, !dbg !8642
  store i8 6, i8* %42, align 1, !dbg !8643
  %43 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8644
  %44 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %43, i32 0, i32 18, !dbg !8645
  store i8 -71, i8* %44, align 1, !dbg !8646
  %45 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8647
  %46 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %45, i32 0, i32 19, !dbg !8648
  store i8 -85, i8* %46, align 1, !dbg !8649
  %47 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %22, align 4, !dbg !8650
  %48 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %47, i32 0, i32 16, !dbg !8651
  store i8 5, i8* %48, align 1, !dbg !8652
  %49 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 15, !dbg !8653
  store i16 0, i16* %49, align 4, !dbg !8654
  %50 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 3, !dbg !8655
  store %struct.anon.9* null, %struct.anon.9** %50, align 4, !dbg !8656
  %51 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 2, !dbg !8657
  store %struct.anon.9* null, %struct.anon.9** %51, align 4, !dbg !8658
  %52 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 4, !dbg !8659
  store i8 0, i8* %52, align 4, !dbg !8660
  %53 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 19, !dbg !8661
  store i8 5, i8* %53, align 4, !dbg !8662
  ret i32 0, !dbg !8663
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_MountDevice(i8* nocapture noundef readonly %0, i8* nocapture noundef %1) #0 section ".ram_code" !dbg !8664 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8666, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i8* %1, metadata !8667, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i8* %1, metadata !8668, metadata !DIExpression()), !dbg !8684
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8685
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8681, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.value(metadata i32 0, metadata !8682, metadata !DIExpression()), !dbg !8684
  %4 = bitcast i8* %1 to i32*, !dbg !8686
  store i32 0, i32* %4, align 4, !dbg !8687
  %5 = getelementptr inbounds i8, i8* %0, i32 20
  %6 = bitcast i8* %5 to %struct.hal_cache_region_config_t**
  call void @llvm.dbg.value(metadata i32 0, metadata !8682, metadata !DIExpression()), !dbg !8684
  %7 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8688
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %7, i32 0, i32 0, !dbg !8689
  %9 = load i32, i32* %8, align 4, !dbg !8689
  %10 = icmp eq i32 %9, 0, !dbg !8690
  br i1 %10, label %34, label %11, !dbg !8691

11:                                               ; preds = %2
  %12 = getelementptr inbounds i8, i8* %1, i32 4
  %13 = bitcast i8* %12 to [8 x i32]*
  %14 = getelementptr inbounds i8, i8* %1, i32 68
  %15 = bitcast i8* %14 to [8 x i32]*
  br label %16, !dbg !8691

16:                                               ; preds = %11, %16
  %17 = phi i32 [ %9, %11 ], [ %32, %16 ]
  %18 = phi i32 [ 0, %11 ], [ %29, %16 ]
  call void @llvm.dbg.value(metadata i32 %18, metadata !8682, metadata !DIExpression()), !dbg !8684
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %13, i32 0, i32 %18, !dbg !8692
  store i32 %17, i32* %19, align 4, !dbg !8694
  %20 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8695
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %20, i32 %18, i32 1, !dbg !8696
  %22 = load i32, i32* %21, align 4, !dbg !8696
  %23 = getelementptr inbounds [8 x i32], [8 x i32]* %15, i32 0, i32 %18, !dbg !8697
  store i32 %22, i32* %23, align 4, !dbg !8698
  %24 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8699
  %25 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %24, i32 %18, i32 1, !dbg !8700
  %26 = load i32, i32* %25, align 4, !dbg !8700
  %27 = load i32, i32* %4, align 4, !dbg !8701
  %28 = add i32 %27, %26, !dbg !8701
  store i32 %28, i32* %4, align 4, !dbg !8701
  %29 = add i32 %18, 1, !dbg !8702
  call void @llvm.dbg.value(metadata i32 %29, metadata !8682, metadata !DIExpression()), !dbg !8684
  %30 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %6, align 4, !dbg !8688
  %31 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %30, i32 %29, i32 0, !dbg !8689
  %32 = load i32, i32* %31, align 4, !dbg !8689
  %33 = icmp eq i32 %32, 0, !dbg !8690
  br i1 %33, label %34, label %16, !dbg !8691, !llvm.loop !8703

34:                                               ; preds = %16, %2
  %35 = phi i32 [ 0, %2 ], [ %29, %16 ], !dbg !8684
  %36 = getelementptr inbounds i8, i8* %1, i32 100, !dbg !8705
  %37 = bitcast i8* %36 to i32*, !dbg !8705
  store i32 %35, i32* %37, align 4, !dbg !8706
  %38 = getelementptr inbounds i8, i8* %1, i32 104, !dbg !8707
  %39 = bitcast i8* %38 to i16*, !dbg !8707
  store i16 512, i16* %39, align 4, !dbg !8708
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !8709
  br label %40, !dbg !8710

40:                                               ; preds = %40, %34
  %41 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8711
  call void @llvm.dbg.value(metadata i32 %41, metadata !8683, metadata !DIExpression()), !dbg !8684
  %42 = icmp eq i32 %41, -121, !dbg !8713
  br i1 %42, label %40, label %43, !dbg !8714, !llvm.loop !8715

43:                                               ; preds = %40
  ret i32 0, !dbg !8717
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ShutDown(i8* nocapture noundef %0) #0 section ".ram_code" !dbg !8718 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8720, metadata !DIExpression()), !dbg !8724
  %2 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8725
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %2, metadata !8721, metadata !DIExpression()), !dbg !8724
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8726
  %3 = getelementptr inbounds i8, i8* %0, i32 176
  %4 = bitcast i8* %3 to %struct.SF_MTD_CMD**
  %5 = getelementptr inbounds i8, i8* %0, i32 172
  %6 = bitcast i8* %5 to i8**
  br label %7, !dbg !8727

7:                                                ; preds = %25, %1
  %8 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !8728
  call void @llvm.dbg.value(metadata i32 %8, metadata !8723, metadata !DIExpression()), !dbg !8724
  %9 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !8730, !range !2765
  %10 = icmp eq i8 %9, 0, !dbg !8730
  br i1 %10, label %12, label %11, !dbg !8732

11:                                               ; preds = %7
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %2) #21, !dbg !8733
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !8735
  br label %12, !dbg !8736

12:                                               ; preds = %11, %7
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %4, align 4, !dbg !8737
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 16, !dbg !8738
  %15 = load i8, i8* %14, align 1, !dbg !8738
  %16 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %2, i8 noundef zeroext %15) #21, !dbg !8739
  call void @llvm.dbg.value(metadata i32 %16, metadata !8722, metadata !DIExpression()), !dbg !8724
  %17 = load i8*, i8** %6, align 4, !dbg !8740
  %18 = load i8, i8* %17, align 1, !dbg !8742
  %19 = zext i8 %18 to i32, !dbg !8742
  %20 = and i32 %16, %19, !dbg !8743
  %21 = icmp eq i32 %20, 0, !dbg !8744
  br i1 %21, label %22, label %25, !dbg !8745

22:                                               ; preds = %12
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !8746
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8748
  %23 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8749
  %24 = bitcast i8* %23 to i8**, !dbg !8749
  store i8* null, i8** %24, align 4, !dbg !8750
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8751
  ret i32 0, !dbg !8752

25:                                               ; preds = %12
  tail call void @RestoreIRQMask(i32 noundef %8) #21, !dbg !8753
  br label %7, !dbg !8727, !llvm.loop !8755
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_EraseBlock(i8* nocapture noundef %0, i32 noundef %1) #0 section ".ram_code" !dbg !8757 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !8759, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %1, metadata !8760, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 0, metadata !8761, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 1, metadata !8765, metadata !DIExpression()), !dbg !8773
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8774
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !8766, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 0, metadata !8767, metadata !DIExpression()), !dbg !8773
  %4 = bitcast i8* %0 to i32*, !dbg !8775
  %5 = load i32, i32* %4, align 4, !dbg !8775
  %6 = xor i32 %5, -1, !dbg !8775
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8775
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !8775
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !8775
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !8775
  %11 = icmp eq i32 %6, %10, !dbg !8775
  br i1 %11, label %13, label %12, !dbg !8778

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !8779
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 2829, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !8779
  unreachable, !dbg !8779

13:                                               ; preds = %2
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8781
  %14 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8782
  store i8 2, i8* %14, align 4, !dbg !8783
  call void @llvm.dbg.value(metadata i32 %19, metadata !8767, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %1, metadata !8760, metadata !DIExpression(DW_OP_constu, 16777215, DW_OP_and, DW_OP_stack_value)), !dbg !8773
  br label %15, !dbg !8784

15:                                               ; preds = %15, %13
  %16 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8785
  call void @llvm.dbg.value(metadata i32 %16, metadata !8761, metadata !DIExpression()), !dbg !8773
  %17 = icmp eq i32 %16, -121, !dbg !8787
  br i1 %17, label %15, label %18, !dbg !8788, !llvm.loop !8789

18:                                               ; preds = %15
  %19 = lshr i32 %1, 24, !dbg !8791
  %20 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !8792
  %21 = bitcast i8* %20 to i8**, !dbg !8792
  %22 = load i8*, i8** %21, align 4, !dbg !8792
  %23 = ptrtoint i8* %22 to i32, !dbg !8793
  %24 = tail call i32 @CMEM_BlockSize(i32 noundef %23) #20, !dbg !8794
  call void @llvm.dbg.value(metadata i32 %24, metadata !8762, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %24, metadata !8763, metadata !DIExpression()), !dbg !8773
  %25 = getelementptr inbounds i8, i8* %0, i32 186, !dbg !8795
  %26 = bitcast i8* %25 to i16*, !dbg !8795
  %27 = load i16, i16* %26, align 2, !dbg !8795
  %28 = zext i16 %27 to i32, !dbg !8796
  call void @llvm.dbg.value(metadata i32 %28, metadata !8768, metadata !DIExpression()), !dbg !8797
  %29 = lshr i32 %24, 10, !dbg !8798
  call void @llvm.dbg.value(metadata i32 %29, metadata !8771, metadata !DIExpression()), !dbg !8797
  %30 = and i32 %29, %28, !dbg !8799
  %31 = and i32 %24, 1024
  %32 = or i32 %30, %31, !dbg !8801
  %33 = icmp eq i32 %32, 0, !dbg !8801
  call void @llvm.dbg.value(metadata i32 0, metadata !8772, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %29, metadata !8771, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %28, metadata !8768, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 1, metadata !8765, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %24, metadata !8763, metadata !DIExpression()), !dbg !8773
  br i1 %33, label %34, label %51, !dbg !8801

34:                                               ; preds = %18, %34
  %35 = phi i32 [ %48, %34 ], [ 0, %18 ]
  %36 = phi i32 [ %47, %34 ], [ %29, %18 ]
  %37 = phi i32 [ %46, %34 ], [ %28, %18 ]
  %38 = phi i32 [ %45, %34 ], [ 1, %18 ]
  %39 = phi i32 [ %44, %34 ], [ %24, %18 ]
  call void @llvm.dbg.value(metadata i32 %35, metadata !8772, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %36, metadata !8771, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %37, metadata !8768, metadata !DIExpression()), !dbg !8797
  call void @llvm.dbg.value(metadata i32 %38, metadata !8765, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %39, metadata !8763, metadata !DIExpression()), !dbg !8773
  %40 = and i32 %37, 1, !dbg !8802
  %41 = icmp eq i32 %40, 0, !dbg !8802
  %42 = add i32 %35, 10, !dbg !8808
  %43 = shl nuw i32 1, %42, !dbg !8808
  %44 = select i1 %41, i32 %39, i32 %43, !dbg !8808
  %45 = select i1 %41, i32 %38, i32 %36, !dbg !8808
  call void @llvm.dbg.value(metadata i32 %45, metadata !8765, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %44, metadata !8763, metadata !DIExpression()), !dbg !8773
  %46 = lshr i32 %37, 1, !dbg !8809
  call void @llvm.dbg.value(metadata i32 %46, metadata !8768, metadata !DIExpression()), !dbg !8797
  %47 = lshr i32 %36, 1, !dbg !8810
  call void @llvm.dbg.value(metadata i32 %47, metadata !8771, metadata !DIExpression()), !dbg !8797
  %48 = add i32 %35, 1, !dbg !8811
  call void @llvm.dbg.value(metadata i32 %48, metadata !8772, metadata !DIExpression()), !dbg !8797
  %49 = and i32 %36, 2, !dbg !8812
  %50 = icmp eq i32 %49, 0, !dbg !8812
  br i1 %50, label %34, label %51, !dbg !8813, !llvm.loop !8814

51:                                               ; preds = %34, %18
  %52 = phi i32 [ %24, %18 ], [ %44, %34 ], !dbg !8816
  %53 = phi i32 [ 1, %18 ], [ %45, %34 ], !dbg !8817
  call void @llvm.dbg.value(metadata i32 %53, metadata !8765, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %52, metadata !8763, metadata !DIExpression()), !dbg !8773
  switch i32 %52, label %69 [
    i32 4096, label %54
    i32 32768, label %59
    i32 65536, label %64
  ], !dbg !8818

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8819
  %56 = bitcast i8* %55 to %struct.SF_MTD_CMD**, !dbg !8819
  %57 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %56, align 4, !dbg !8819
  %58 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %57, i32 0, i32 6, !dbg !8821
  br label %70, !dbg !8822

59:                                               ; preds = %51
  %60 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8823
  %61 = bitcast i8* %60 to %struct.SF_MTD_CMD**, !dbg !8823
  %62 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %61, align 4, !dbg !8823
  %63 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %62, i32 0, i32 7, !dbg !8824
  br label %70, !dbg !8825

64:                                               ; preds = %51
  %65 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8826
  %66 = bitcast i8* %65 to %struct.SF_MTD_CMD**, !dbg !8826
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %66, align 4, !dbg !8826
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 8, !dbg !8827
  br label %70, !dbg !8828

69:                                               ; preds = %51
  tail call void @Flash_ReturnReady() #21, !dbg !8829
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 2897, i8* noundef getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.SF_DAL_EraseBlock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !8829
  unreachable, !dbg !8829

70:                                               ; preds = %54, %59, %64
  %71 = phi i8* [ %58, %54 ], [ %63, %59 ], [ %68, %64 ]
  %72 = phi %struct.SF_MTD_CMD* [ %57, %54 ], [ %62, %59 ], [ %67, %64 ]
  %73 = load i8, i8* %71, align 1, !dbg !8833
  %74 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %72, i32 0, i32 5, !dbg !8833
  store i8 %73, i8* %74, align 1, !dbg !8833
  call void @llvm.dbg.value(metadata i32 %53, metadata !8765, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %52, metadata !8763, metadata !DIExpression()), !dbg !8773
  %75 = trunc i32 %19 to i8, !dbg !8834
  switch i8 %75, label %96 [
    i8 -6, label %76
    i8 -5, label %81
    i8 -4, label %86
  ], !dbg !8834

76:                                               ; preds = %70
  %77 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8835
  %78 = bitcast i8* %77 to %struct.SF_MTD_CMD**, !dbg !8835
  %79 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %78, align 4, !dbg !8835
  %80 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %79, i32 0, i32 6, !dbg !8837
  br label %91, !dbg !8838

81:                                               ; preds = %70
  %82 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8839
  %83 = bitcast i8* %82 to %struct.SF_MTD_CMD**, !dbg !8839
  %84 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %83, align 4, !dbg !8839
  %85 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %84, i32 0, i32 7, !dbg !8840
  br label %91, !dbg !8841

86:                                               ; preds = %70
  %87 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !8842
  %88 = bitcast i8* %87 to %struct.SF_MTD_CMD**, !dbg !8842
  %89 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %88, align 4, !dbg !8842
  %90 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %89, i32 0, i32 8, !dbg !8843
  br label %91, !dbg !8844

91:                                               ; preds = %76, %81, %86
  %92 = phi i8* [ %90, %86 ], [ %85, %81 ], [ %80, %76 ]
  %93 = phi %struct.SF_MTD_CMD* [ %89, %86 ], [ %84, %81 ], [ %79, %76 ]
  %94 = load i8, i8* %92, align 1, !dbg !8845
  %95 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %93, i32 0, i32 5, !dbg !8845
  store i8 %94, i8* %95, align 1, !dbg !8845
  br label %96, !dbg !8846

96:                                               ; preds = %91, %70
  call void @llvm.dbg.value(metadata i8* undef, metadata !8764, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %53, metadata !8765, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %16, metadata !8761, metadata !DIExpression()), !dbg !8773
  %97 = icmp eq i32 %53, 0, !dbg !8846
  br i1 %97, label %111, label %98, !dbg !8849

98:                                               ; preds = %96
  %99 = load i8*, i8** %21, align 4, !dbg !8850
  call void @llvm.dbg.value(metadata i8* %99, metadata !8764, metadata !DIExpression()), !dbg !8773
  %100 = ptrtoint i8* %99 to i32, !dbg !8851
  call void @llvm.dbg.value(metadata i32 %100, metadata !8764, metadata !DIExpression()), !dbg !8773
  br label %101, !dbg !8849

101:                                              ; preds = %98, %107
  %102 = phi i32 [ %108, %107 ], [ %53, %98 ]
  %103 = phi i32 [ %109, %107 ], [ %100, %98 ]
  call void @llvm.dbg.value(metadata i32 %102, metadata !8765, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %103, metadata !8764, metadata !DIExpression()), !dbg !8773
  tail call void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* noundef %3, i32 noundef %103) #21, !dbg !8852
  br label %104, !dbg !8854

104:                                              ; preds = %104, %101
  %105 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8855
  call void @llvm.dbg.value(metadata i32 %105, metadata !8761, metadata !DIExpression()), !dbg !8773
  %106 = icmp eq i32 %105, -121, !dbg !8857
  br i1 %106, label %104, label %107, !dbg !8859, !llvm.loop !8860

107:                                              ; preds = %104
  %108 = add i32 %102, -1, !dbg !8862
  call void @llvm.dbg.value(metadata i32 %108, metadata !8765, metadata !DIExpression()), !dbg !8773
  %109 = add i32 %103, %52, !dbg !8863
  call void @llvm.dbg.value(metadata i32 %109, metadata !8764, metadata !DIExpression()), !dbg !8773
  call void @llvm.dbg.value(metadata i32 %105, metadata !8761, metadata !DIExpression()), !dbg !8773
  %110 = icmp eq i32 %108, 0, !dbg !8846
  br i1 %110, label %111, label %101, !dbg !8849, !llvm.loop !8864

111:                                              ; preds = %107, %96
  %112 = phi i32 [ %16, %96 ], [ %105, %107 ], !dbg !8773
  store i8 0, i8* %14, align 4, !dbg !8866
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8867
  ret i32 %112, !dbg !8868
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ProgramData(i8* nocapture noundef %0, i8* noundef %1, i8* noundef %2, i32 noundef %3) #0 section ".ram_code" !dbg !8869 {
  %5 = alloca i8*, align 4
  %6 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !8871, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i8* %1, metadata !8872, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i8* %2, metadata !8873, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %3, metadata !8874, metadata !DIExpression()), !dbg !8888
  %7 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !8889
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %7, metadata !8875, metadata !DIExpression()), !dbg !8888
  %8 = ptrtoint i8* %1 to i32, !dbg !8890
  call void @llvm.dbg.value(metadata i32 %8, metadata !8877, metadata !DIExpression()), !dbg !8888
  %9 = bitcast i8** %5 to i8*, !dbg !8891
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #22, !dbg !8891
  call void @llvm.dbg.value(metadata i8* %2, metadata !8878, metadata !DIExpression()), !dbg !8888
  store i8* %2, i8** %5, align 4, !dbg !8892
  call void @llvm.dbg.value(metadata i32 0, metadata !8880, metadata !DIExpression()), !dbg !8888
  %10 = bitcast i32* %6 to i8*, !dbg !8893
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #22, !dbg !8893
  %11 = bitcast i8* %0 to i32*, !dbg !8894
  %12 = load i32, i32* %11, align 4, !dbg !8894
  %13 = xor i32 %12, -1, !dbg !8894
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !8894
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !8894
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !8894
  %17 = ptrtoint %struct.hal_cache_region_config_t* %16 to i32, !dbg !8894
  %18 = icmp eq i32 %13, %17, !dbg !8894
  br i1 %18, label %20, label %19, !dbg !8897

19:                                               ; preds = %4
  tail call void @Flash_ReturnReady() #21, !dbg !8898
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 2545, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_ProgramData, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !8898
  unreachable, !dbg !8898

20:                                               ; preds = %4
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8900
  %21 = getelementptr inbounds i8, i8* %0, i32 196, !dbg !8901
  store i8 1, i8* %21, align 4, !dbg !8902
  br label %22, !dbg !8903

22:                                               ; preds = %22, %20
  %23 = tail call i32 @SF_DAL_CheckDeviceReady(i8* noundef %0, i32 undef) #21, !dbg !8904
  call void @llvm.dbg.value(metadata i32 %23, metadata !8880, metadata !DIExpression()), !dbg !8888
  %24 = icmp eq i32 %23, -121, !dbg !8906
  br i1 %24, label %22, label %25, !dbg !8907, !llvm.loop !8908

25:                                               ; preds = %22
  %26 = icmp eq i32 %3, 0, !dbg !8910
  br i1 %26, label %104, label %27, !dbg !8911

27:                                               ; preds = %25
  %28 = getelementptr inbounds i8, i8* %0, i32 200
  %29 = bitcast i8* %28 to i32*
  %30 = getelementptr inbounds i8, i8* %0, i32 197
  %31 = getelementptr inbounds i8, i8* %0, i32 176
  %32 = bitcast i8* %31 to %struct.SF_MTD_CMD**
  %33 = getelementptr inbounds i8, i8* %0, i32 198
  %34 = bitcast i8* %33 to i16*
  br label %35, !dbg !8911

35:                                               ; preds = %27, %96
  %36 = phi i8* [ %99, %96 ], [ %2, %27 ], !dbg !8912
  %37 = phi i32 [ %100, %96 ], [ %3, %27 ]
  %38 = phi i32 [ %88, %96 ], [ %8, %27 ], !dbg !8888
  call void @llvm.dbg.value(metadata i32 %38, metadata !8877, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %37, metadata !8874, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i8* %36, metadata !8878, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i8* %36, metadata !8879, metadata !DIExpression()), !dbg !8888
  %39 = load i32, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !8913
  %40 = shl i32 %39, 1, !dbg !8914
  %41 = add i32 %40, -1, !dbg !8915
  %42 = and i32 %41, %38, !dbg !8916
  %43 = sub i32 %40, %42, !dbg !8917
  %44 = icmp ugt i32 %37, %43, !dbg !8918
  %45 = select i1 %44, i32 %43, i32 %37, !dbg !8919
  call void @llvm.dbg.value(metadata i32 %45, metadata !8881, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 %45, metadata !8882, metadata !DIExpression()), !dbg !8888
  store i32 %45, i32* %6, align 4, !dbg !8920
  call void @llvm.dbg.value(metadata i8* %36, metadata !8878, metadata !DIExpression()), !dbg !8888
  %46 = ptrtoint i8* %36 to i32, !dbg !8921
  %47 = and i32 %46, 134217728, !dbg !8922
  %48 = icmp eq i32 %47, 0, !dbg !8922
  br i1 %48, label %58, label %49, !dbg !8923

49:                                               ; preds = %35
  call void @llvm.dbg.value(metadata i32 0, metadata !8884, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %45, metadata !8882, metadata !DIExpression()), !dbg !8888
  %50 = icmp eq i32 %45, 0, !dbg !8925
  br i1 %50, label %58, label %51, !dbg !8928

51:                                               ; preds = %49, %51
  %52 = phi i32 [ %56, %51 ], [ 0, %49 ]
  call void @llvm.dbg.value(metadata i32 %52, metadata !8884, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i8* %36, metadata !8878, metadata !DIExpression()), !dbg !8888
  %53 = getelementptr inbounds i8, i8* %36, i32 %52, !dbg !8929
  %54 = load i8, i8* %53, align 1, !dbg !8929
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 %52, !dbg !8931
  store i8 %54, i8* %55, align 1, !dbg !8932
  %56 = add nuw i32 %52, 1, !dbg !8933
  call void @llvm.dbg.value(metadata i32 %56, metadata !8884, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %45, metadata !8882, metadata !DIExpression()), !dbg !8888
  %57 = icmp eq i32 %56, %45, !dbg !8925
  br i1 %57, label %58, label %51, !dbg !8928, !llvm.loop !8934

58:                                               ; preds = %51, %49, %35
  %59 = phi i8* [ %36, %35 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %49 ], [ getelementptr inbounds ([128 x i8], [128 x i8]* @tmp_data_buffer, i32 0, i32 0), %51 ], !dbg !8936
  call void @llvm.dbg.value(metadata i8* %59, metadata !8879, metadata !DIExpression()), !dbg !8888
  %60 = load i32, i32* %29, align 4, !dbg !8937
  %61 = and i32 %60, 16, !dbg !8939
  %62 = icmp eq i32 %61, 0, !dbg !8939
  br i1 %62, label %63, label %64, !dbg !8940

63:                                               ; preds = %58
  call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %7) #21, !dbg !8941
  br label %64, !dbg !8943

64:                                               ; preds = %63, %58
  %65 = load i8, i8* %30, align 1, !dbg !8944
  %66 = icmp eq i8 %65, 4, !dbg !8946
  %67 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %32, align 4, !dbg !8947
  %68 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %67, i32 0, i32 0, !dbg !8947
  %69 = load i8, i8* %68, align 1, !dbg !8947
  %70 = zext i8 %69 to i32, !dbg !8947
  br i1 %66, label %71, label %75, !dbg !8948

71:                                               ; preds = %64
  call void @llvm.dbg.value(metadata i8** %5, metadata !8878, metadata !DIExpression(DW_OP_deref)), !dbg !8888
  call void @llvm.dbg.value(metadata i32* %6, metadata !8882, metadata !DIExpression(DW_OP_deref)), !dbg !8888
  %72 = call i32 @SFI_GPRAM_Write_C1A4(i32 noundef %70, i32 noundef %38, i8** noundef nonnull %5, i32* noundef nonnull %6) #20, !dbg !8949
  call void @llvm.dbg.value(metadata i32 %72, metadata !8883, metadata !DIExpression()), !dbg !8888
  %73 = load i8*, i8** %5, align 4, !dbg !8951
  call void @llvm.dbg.value(metadata i8* %73, metadata !8878, metadata !DIExpression()), !dbg !8888
  %74 = load i32, i32* %6, align 4, !dbg !8952
  call void @llvm.dbg.value(metadata i32 %74, metadata !8882, metadata !DIExpression()), !dbg !8888
  call void @SFI_GPRAM_Write(i32 noundef 8, i8* noundef %73, i32 noundef %74) #20, !dbg !8953
  br label %79, !dbg !8954

75:                                               ; preds = %64
  %76 = call i32 @SFI_GPRAM_Write_C1A3(i32 noundef %70, i32 noundef %38) #20, !dbg !8955
  call void @llvm.dbg.value(metadata i32 %76, metadata !8883, metadata !DIExpression()), !dbg !8888
  %77 = load i8*, i8** %5, align 4, !dbg !8957
  call void @llvm.dbg.value(metadata i8* %77, metadata !8878, metadata !DIExpression()), !dbg !8888
  %78 = load i32, i32* %6, align 4, !dbg !8958
  call void @llvm.dbg.value(metadata i32 %78, metadata !8882, metadata !DIExpression()), !dbg !8888
  call void @SFI_GPRAM_Write(i32 noundef 4, i8* noundef %77, i32 noundef %78) #20, !dbg !8959
  br label %79

79:                                               ; preds = %75, %71
  %80 = phi i32 [ %72, %71 ], [ %76, %75 ], !dbg !8947
  call void @llvm.dbg.value(metadata i32 %80, metadata !8883, metadata !DIExpression()), !dbg !8888
  %81 = call i32 @SaveAndSetIRQMask() #21, !dbg !8960
  call void @llvm.dbg.value(metadata i32 %81, metadata !8876, metadata !DIExpression()), !dbg !8888
  store volatile i32 %80, i32* inttoptr (i32 -1610348544 to i32*), align 2048, !dbg !8961
  %82 = load i8, i8* %30, align 1, !dbg !8962
  %83 = zext i8 %82 to i32, !dbg !8963
  %84 = add i32 %45, 1, !dbg !8964
  %85 = add i32 %84, %83, !dbg !8965
  store volatile i32 %85, i32* inttoptr (i32 -1610350576 to i32*), align 16, !dbg !8966
  store volatile i32 0, i32* inttoptr (i32 -1610350572 to i32*), align 4, !dbg !8967
  call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !8968
  %86 = load i16, i16* %34, align 2, !dbg !8969
  call void @SFI_MacEnable(i16 noundef zeroext %86) #20, !dbg !8970
  %87 = load i16, i16* %34, align 2, !dbg !8971
  call void @SFI_MacWaitReady(i16 noundef zeroext %87) #20, !dbg !8972
  call void @RestoreIRQMask(i32 noundef %81) #21, !dbg !8973
  %88 = add i32 %45, %38
  %89 = add i32 %88, -1
  %90 = getelementptr inbounds i8, i8* %59, i32 -1
  %91 = getelementptr inbounds i8, i8* %90, i32 %45
  br label %92, !dbg !8974

92:                                               ; preds = %92, %79
  %93 = load i8, i8* %91, align 1, !dbg !8975
  %94 = call i32 @SF_DAL_CheckReadyAndResume(i8* noundef %0, i32 noundef %89, i8 noundef zeroext %93) #21, !dbg !8977
  call void @llvm.dbg.value(metadata i32 %94, metadata !8880, metadata !DIExpression()), !dbg !8888
  %95 = icmp eq i32 %94, 0, !dbg !8978
  br i1 %95, label %92, label %96, !dbg !8979, !llvm.loop !8980

96:                                               ; preds = %92
  %97 = load i32, i32* %6, align 4, !dbg !8982
  call void @llvm.dbg.value(metadata i32 %97, metadata !8882, metadata !DIExpression()), !dbg !8888
  %98 = load i8*, i8** %5, align 4, !dbg !8983
  call void @llvm.dbg.value(metadata i8* %98, metadata !8878, metadata !DIExpression()), !dbg !8888
  %99 = getelementptr inbounds i8, i8* %98, i32 %97, !dbg !8983
  call void @llvm.dbg.value(metadata i8* %99, metadata !8878, metadata !DIExpression()), !dbg !8888
  store i8* %99, i8** %5, align 4, !dbg !8983
  %100 = sub i32 %37, %45, !dbg !8984
  call void @llvm.dbg.value(metadata i32 %100, metadata !8874, metadata !DIExpression()), !dbg !8888
  call void @llvm.dbg.value(metadata i32 undef, metadata !8877, metadata !DIExpression()), !dbg !8888
  %101 = icmp eq i32 %94, 1, !dbg !8985
  %102 = icmp ne i32 %100, 0
  %103 = select i1 %101, i1 %102, i1 false, !dbg !8987
  br i1 %103, label %35, label %104, !dbg !8987, !llvm.loop !8988

104:                                              ; preds = %96, %25
  %105 = phi i32 [ %23, %25 ], [ %94, %96 ], !dbg !8888
  call void @llvm.dbg.value(metadata i32 %105, metadata !8880, metadata !DIExpression()), !dbg !8888
  store i8 0, i8* %21, align 4, !dbg !8990
  call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !8991
  %106 = icmp eq i32 %105, 1, !dbg !8992
  %107 = select i1 %106, i32 0, i32 %105, !dbg !8888
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #22, !dbg !8994
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #22, !dbg !8994
  ret i32 %107, !dbg !8994
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_NonBlockEraseBlock(i8* nocapture readnone %0, i32 %1) #10 section ".ram_code" !dbg !8995 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !8997, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.value(metadata i32 undef, metadata !8998, metadata !DIExpression()), !dbg !8999
  ret i32 -12, !dbg !9000
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckDeviceReady(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9001 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9003, metadata !DIExpression()), !dbg !9013
  call void @llvm.dbg.value(metadata i32 undef, metadata !9004, metadata !DIExpression()), !dbg !9013
  call void @llvm.dbg.value(metadata i32 0, metadata !9006, metadata !DIExpression()), !dbg !9013
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9014
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9007, metadata !DIExpression()), !dbg !9013
  %4 = bitcast i8* %0 to i32*, !dbg !9015
  %5 = load i32, i32* %4, align 4, !dbg !9015
  %6 = xor i32 %5, -1, !dbg !9015
  %7 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9015
  %8 = bitcast i8* %7 to %struct.hal_cache_region_config_t**, !dbg !9015
  %9 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %8, align 4, !dbg !9015
  %10 = ptrtoint %struct.hal_cache_region_config_t* %9 to i32, !dbg !9015
  %11 = icmp eq i32 %6, %10, !dbg !9015
  br i1 %11, label %13, label %12, !dbg !9018

12:                                               ; preds = %2
  tail call void @Flash_ReturnReady() #21, !dbg !9019
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 3131, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !9019
  unreachable, !dbg !9019

13:                                               ; preds = %2
  %14 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9021
  %15 = bitcast i8* %14 to %struct.SF_MTD_CMD**, !dbg !9021
  %16 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9021
  %17 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %16, i32 0, i32 16, !dbg !9022
  %18 = load i8, i8* %17, align 1, !dbg !9022
  %19 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %18) #21, !dbg !9023
  call void @llvm.dbg.value(metadata i32 %19, metadata !9008, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9013
  %20 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %15, align 4, !dbg !9024
  %21 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %20, i32 0, i32 15, !dbg !9025
  %22 = load i8, i8* %21, align 1, !dbg !9025
  %23 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef nonnull %3, i8 noundef zeroext %22) #21, !dbg !9026
  call void @llvm.dbg.value(metadata i32 %23, metadata !9009, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9013
  %24 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9027
  call void @llvm.dbg.value(metadata i32 %24, metadata !9006, metadata !DIExpression()), !dbg !9013
  %25 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9028
  %26 = bitcast i8* %25 to i8**, !dbg !9028
  %27 = load i8*, i8** %26, align 4, !dbg !9028
  %28 = load i8, i8* %27, align 1, !dbg !9029
  %29 = zext i8 %28 to i32, !dbg !9029
  %30 = and i32 %19, %29, !dbg !9030
  %31 = icmp eq i32 %30, 0, !dbg !9031
  br i1 %31, label %32, label %62, !dbg !9032

32:                                               ; preds = %13
  call void @llvm.dbg.value(metadata i32 %23, metadata !9009, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 8, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9013
  %33 = getelementptr inbounds i8, i8* %27, i32 2, !dbg !9033
  %34 = load i8, i8* %33, align 1, !dbg !9033
  %35 = getelementptr inbounds i8, i8* %27, i32 3, !dbg !9034
  %36 = load i8, i8* %35, align 1, !dbg !9034
  %37 = or i8 %36, %34, !dbg !9035
  call void @llvm.dbg.value(metadata i8 %37, metadata !9010, metadata !DIExpression()), !dbg !9036
  %38 = zext i8 %37 to i32, !dbg !9037
  %39 = and i32 %23, %38, !dbg !9039
  %40 = icmp eq i32 %39, 0, !dbg !9040
  br i1 %40, label %41, label %46, !dbg !9041

41:                                               ; preds = %32
  %42 = icmp ne i8 %37, 0, !dbg !9042
  %43 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1
  %44 = icmp eq i8 %43, 0
  %45 = select i1 %42, i1 true, i1 %44, !dbg !9043
  br i1 %45, label %51, label %46, !dbg !9043

46:                                               ; preds = %41, %32
  %47 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9044, !range !2765
  %48 = icmp eq i8 %47, 0, !dbg !9044
  br i1 %48, label %49, label %50, !dbg !9048

49:                                               ; preds = %46
  tail call void @Flash_ReturnReady() #21, !dbg !9049
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 3147, i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.SF_DAL_CheckDeviceReady, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !9049
  unreachable, !dbg !9049

50:                                               ; preds = %46
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %3) #21, !dbg !9051
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9052
  call void @llvm.dbg.value(metadata i32 -121, metadata !9005, metadata !DIExpression()), !dbg !9013
  br label %62, !dbg !9053

51:                                               ; preds = %41
  %52 = getelementptr inbounds i8, i8* %0, i32 200, !dbg !9054
  %53 = bitcast i8* %52 to i32*, !dbg !9054
  %54 = load i32, i32* %53, align 4, !dbg !9054
  %55 = and i32 %54, 2, !dbg !9057
  %56 = icmp eq i32 %55, 0, !dbg !9057
  br i1 %56, label %63, label %57, !dbg !9058

57:                                               ; preds = %51
  %58 = getelementptr inbounds i8, i8* %0, i32 198, !dbg !9059
  %59 = bitcast i8* %58 to i16*, !dbg !9059
  %60 = load i16, i16* %59, align 2, !dbg !9059
  tail call void @SFI_Dev_Command(i16 noundef zeroext %60, i32 noundef 122) #20, !dbg !9061
  %61 = load i16, i16* %59, align 2, !dbg !9062
  tail call void @SFI_Dev_Command(i16 noundef zeroext %61, i32 noundef 122) #20, !dbg !9063
  br label %63, !dbg !9064

62:                                               ; preds = %50, %13
  call void @llvm.dbg.value(metadata i32 0, metadata !9005, metadata !DIExpression()), !dbg !9013
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !9065
  br label %65, !dbg !9066

63:                                               ; preds = %57, %51
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9067
  tail call void @SF_DAL_FLAG_SUS_CLR() #21, !dbg !9068
  call void @llvm.dbg.value(metadata i32 0, metadata !9005, metadata !DIExpression()), !dbg !9013
  tail call void @RestoreIRQMask(i32 noundef %24) #21, !dbg !9065
  %64 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !9069
  call void @llvm.dbg.value(metadata i32 %64, metadata !9005, metadata !DIExpression()), !dbg !9013
  br label %65, !dbg !9072

65:                                               ; preds = %62, %63
  %66 = phi i32 [ %64, %63 ], [ -121, %62 ], !dbg !9013
  call void @llvm.dbg.value(metadata i32 %66, metadata !9005, metadata !DIExpression()), !dbg !9013
  ret i32 %66, !dbg !9073
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_SuspendErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9074 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9076, metadata !DIExpression()), !dbg !9081
  call void @llvm.dbg.value(metadata i32 undef, metadata !9077, metadata !DIExpression()), !dbg !9081
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9082
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9078, metadata !DIExpression()), !dbg !9081
  %4 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9083
  call void @llvm.dbg.value(metadata i32 %4, metadata !9080, metadata !DIExpression()), !dbg !9081
  tail call void @SF_DAL_Dev_Suspend(%struct.SF_MTD_Data* noundef %3) #21, !dbg !9084
  %5 = getelementptr inbounds i8, i8* %0, i32 176
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**
  %7 = getelementptr inbounds i8, i8* %0, i32 172
  %8 = bitcast i8* %7 to i8**
  br label %9, !dbg !9085

9:                                                ; preds = %9, %2
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !9086
  %11 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %10, i32 0, i32 16, !dbg !9088
  %12 = load i8, i8* %11, align 1, !dbg !9088
  %13 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %3, i8 noundef zeroext %12) #21, !dbg !9089
  call void @llvm.dbg.value(metadata i32 %13, metadata !9079, metadata !DIExpression()), !dbg !9081
  %14 = load i8*, i8** %8, align 4, !dbg !9090
  %15 = load i8, i8* %14, align 1, !dbg !9092
  %16 = zext i8 %15 to i32, !dbg !9092
  %17 = and i32 %13, %16, !dbg !9093
  %18 = icmp eq i32 %17, 0, !dbg !9094
  br i1 %18, label %19, label %9, !dbg !9095, !llvm.loop !9096

19:                                               ; preds = %9
  tail call void @SF_DAL_FLAG_SUS_SET() #21, !dbg !9098
  tail call void @RestoreIRQMask(i32 noundef %4) #21, !dbg !9099
  ret i32 0, !dbg !9100
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_ResumeErase(i8* nocapture noundef readonly %0, i32 %1) #0 section ".ram_code" !dbg !9101 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9103, metadata !DIExpression()), !dbg !9106
  call void @llvm.dbg.value(metadata i32 undef, metadata !9104, metadata !DIExpression()), !dbg !9106
  %3 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9107
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %3, metadata !9105, metadata !DIExpression()), !dbg !9106
  tail call void @SF_DAL_GetDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9108
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef %3) #21, !dbg !9109
  tail call void @SF_DAL_FreeDevLock(%struct.SF_MTD_Data* undef) #21, !dbg !9110
  ret i32 0, !dbg !9111
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @SF_DAL_LockEraseBlkAddr(i8* nocapture readnone %0, i8* nocapture readnone %1, i32 %2) #10 section ".ram_code" !dbg !9112 {
  call void @llvm.dbg.value(metadata i8* undef, metadata !9114, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.value(metadata i8* undef, metadata !9115, metadata !DIExpression()), !dbg !9117
  call void @llvm.dbg.value(metadata i32 undef, metadata !9116, metadata !DIExpression()), !dbg !9117
  ret i32 0, !dbg !9118
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_IOCtrl(i8* noundef %0, i32 noundef %1, i8* nocapture readnone %2) #0 !dbg !9119 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9121, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.value(metadata i32 %1, metadata !9122, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.value(metadata i8* undef, metadata !9123, metadata !DIExpression()), !dbg !9125
  call void @llvm.dbg.value(metadata i8* %0, metadata !9124, metadata !DIExpression()), !dbg !9125
  switch i32 %1, label %20 [
    i32 0, label %4
    i32 1, label %9
  ], !dbg !9126

4:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !9124, metadata !DIExpression()), !dbg !9125
  %5 = getelementptr inbounds i8, i8* %0, i32 212, !dbg !9127
  %6 = bitcast i8* %5 to i32 (i8*)**, !dbg !9127
  %7 = load i32 (i8*)*, i32 (i8*)** %6, align 4, !dbg !9127
  %8 = tail call i32 %7(i8* noundef %0) #20, !dbg !9130
  br label %21, !dbg !9131

9:                                                ; preds = %3
  %10 = getelementptr inbounds i8, i8* %0, i32 193, !dbg !9132
  %11 = load i8, i8* %10, align 1, !dbg !9136
  %12 = icmp eq i8 %11, -62, !dbg !9137
  br i1 %12, label %13, label %21, !dbg !9138

13:                                               ; preds = %9
  %14 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !9139
  %15 = bitcast i8* %14 to %struct.hal_cache_region_config_t**, !dbg !9139
  %16 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %15, align 4, !dbg !9139
  %17 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %16, i32 0, i32 0, !dbg !9140
  %18 = load i32, i32* %17, align 4, !dbg !9140
  %19 = icmp eq i32 %18, 262144, !dbg !9141
  br i1 %19, label %22, label %21, !dbg !9142

20:                                               ; preds = %3
  tail call void @Flash_ReturnReady() #21, !dbg !9143
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 2361, i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.SF_DAL_IOCtrl, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !9143
  unreachable, !dbg !9143

21:                                               ; preds = %13, %9, %4
  br label %22, !dbg !9148

22:                                               ; preds = %13, %21
  %23 = phi i32 [ 0, %21 ], [ 194, %13 ], !dbg !9125
  ret i32 %23, !dbg !9149
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_FailCheck(i8* nocapture noundef readonly %0) local_unnamed_addr #0 section ".ram_code" !dbg !9150 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9152, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.value(metadata i8* %0, metadata !9153, metadata !DIExpression()), !dbg !9155
  %2 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9156
  %3 = bitcast i8* %2 to %struct.SF_MTD_CMD**, !dbg !9156
  %4 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %3, align 4, !dbg !9156
  %5 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %4, i32 0, i32 17, !dbg !9158
  %6 = load i8, i8* %5, align 1, !dbg !9158
  %7 = icmp eq i8 %6, 0, !dbg !9159
  br i1 %7, label %19, label %8, !dbg !9160

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9161
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %9, metadata !9153, metadata !DIExpression()), !dbg !9155
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %9, i8 noundef zeroext %6) #21, !dbg !9162
  call void @llvm.dbg.value(metadata i32 %10, metadata !9154, metadata !DIExpression()), !dbg !9155
  %11 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9164
  %12 = bitcast i8* %11 to i8**, !dbg !9164
  %13 = load i8*, i8** %12, align 4, !dbg !9164
  %14 = getelementptr inbounds i8, i8* %13, i32 7, !dbg !9166
  %15 = load i8, i8* %14, align 1, !dbg !9166
  %16 = zext i8 %15 to i32, !dbg !9166
  %17 = and i32 %10, %16, !dbg !9167
  %18 = icmp eq i32 %17, 0, !dbg !9167
  br i1 %18, label %19, label %20, !dbg !9168

19:                                               ; preds = %8, %1
  br label %20, !dbg !9169

20:                                               ; preds = %8, %19
  %21 = phi i32 [ 0, %19 ], [ -1, %8 ], !dbg !9155
  ret i32 %21, !dbg !9170
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_CheckReadyAndResume(i8* nocapture noundef readonly %0, i32 noundef %1, i8 noundef zeroext %2) local_unnamed_addr #0 section ".ram_code" !dbg !9171 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9175, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.value(metadata i32 %1, metadata !9176, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.value(metadata i8 %2, metadata !9177, metadata !DIExpression()), !dbg !9183
  %4 = bitcast i8* %0 to %struct.SF_MTD_Data*, !dbg !9184
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %4, metadata !9179, metadata !DIExpression()), !dbg !9183
  call void @llvm.dbg.value(metadata i32 0, metadata !9180, metadata !DIExpression()), !dbg !9183
  %5 = getelementptr inbounds i8, i8* %0, i32 176, !dbg !9185
  %6 = bitcast i8* %5 to %struct.SF_MTD_CMD**, !dbg !9185
  %7 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %6, align 4, !dbg !9185
  %8 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %7, i32 0, i32 16, !dbg !9186
  %9 = load i8, i8* %8, align 1, !dbg !9186
  %10 = tail call i32 @SF_DAL_Dev_ReadStatus(%struct.SF_MTD_Data* noundef %4, i8 noundef zeroext %9) #21, !dbg !9187
  call void @llvm.dbg.value(metadata i32 %10, metadata !9182, metadata !DIExpression(DW_OP_LLVM_convert, 32, DW_ATE_unsigned, DW_OP_LLVM_convert, 16, DW_ATE_unsigned, DW_OP_stack_value)), !dbg !9183
  %11 = load i8, i8* @NOR_FLASH_SUSPENDED, align 1, !dbg !9188, !range !2765
  %12 = icmp eq i8 %11, 0, !dbg !9188
  br i1 %12, label %18, label %13, !dbg !9190

13:                                               ; preds = %3
  %14 = load i8, i8* @NOR_FLASH_BUSY, align 1, !dbg !9191, !range !2765
  %15 = icmp eq i8 %14, 0, !dbg !9191
  br i1 %15, label %16, label %17, !dbg !9195

16:                                               ; preds = %13
  tail call void @Flash_ReturnReady() #21, !dbg !9196
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 3058, i8* noundef getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.SF_DAL_CheckReadyAndResume, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !9196
  unreachable, !dbg !9196

17:                                               ; preds = %13
  tail call void @SF_DAL_Dev_Resume(%struct.SF_MTD_Data* noundef nonnull %4) #21, !dbg !9198
  store i32 -1, i32* @gNOR_ReturnReadyEnd, align 4, !dbg !9199
  br label %42, !dbg !9200

18:                                               ; preds = %3
  call void @llvm.dbg.value(metadata i32 %10, metadata !9182, metadata !DIExpression()), !dbg !9183
  %19 = getelementptr inbounds i8, i8* %0, i32 172, !dbg !9201
  %20 = bitcast i8* %19 to i8**, !dbg !9201
  %21 = load i8*, i8** %20, align 4, !dbg !9201
  %22 = load i8, i8* %21, align 1, !dbg !9203
  %23 = zext i8 %22 to i32, !dbg !9203
  %24 = and i32 %10, %23, !dbg !9204
  %25 = icmp eq i32 %24, 0, !dbg !9205
  br i1 %25, label %26, label %42, !dbg !9206

26:                                               ; preds = %18
  %27 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9207
  call void @llvm.dbg.value(metadata i32 %27, metadata !9178, metadata !DIExpression()), !dbg !9183
  tail call void @SF_DAL_FLAG_BUSY_CLR() #21, !dbg !9209
  %28 = inttoptr i32 %1 to i8*, !dbg !9210
  %29 = load volatile i8, i8* %28, align 1, !dbg !9211
  call void @llvm.dbg.value(metadata i8 %29, metadata !9181, metadata !DIExpression()), !dbg !9183
  %30 = icmp eq i8 %29, %2, !dbg !9212
  br i1 %30, label %39, label %31, !dbg !9214

31:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !9180, metadata !DIExpression()), !dbg !9183
  %32 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %1) #20, !dbg !9215
  br i1 %32, label %33, label %38, !dbg !9218

33:                                               ; preds = %31
  %34 = and i32 %1, -32, !dbg !9219
  %35 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %34) #20, !dbg !9221
  %36 = load volatile i8, i8* %28, align 1, !dbg !9222
  %37 = icmp eq i8 %36, %2, !dbg !9224
  br i1 %37, label %39, label %38, !dbg !9225

38:                                               ; preds = %33, %31
  call void @llvm.dbg.value(metadata i32 -1, metadata !9180, metadata !DIExpression()), !dbg !9183
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !9226
  br label %42, !dbg !9227

39:                                               ; preds = %33, %26
  call void @llvm.dbg.value(metadata i32 -1, metadata !9180, metadata !DIExpression()), !dbg !9183
  tail call void @RestoreIRQMask(i32 noundef %27) #21, !dbg !9226
  %40 = tail call i32 @SF_DAL_FailCheck(i8* noundef nonnull %0) #21, !dbg !9228
  %41 = icmp eq i32 %40, 0, !dbg !9231
  br i1 %41, label %42, label %44, !dbg !9232

42:                                               ; preds = %18, %17, %38, %39
  %43 = phi i32 [ 1, %39 ], [ -1, %38 ], [ 0, %17 ], [ 0, %18 ]
  br label %44, !dbg !9233

44:                                               ; preds = %39, %42
  %45 = phi i32 [ %43, %42 ], [ -1, %39 ], !dbg !9183
  ret i32 %45, !dbg !9234
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_EraseBlock(%struct.SF_MTD_Data* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !9235 {
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9239, metadata !DIExpression()), !dbg !9242
  call void @llvm.dbg.value(metadata i32 %1, metadata !9240, metadata !DIExpression()), !dbg !9242
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 24, !dbg !9243
  %4 = load i32, i32* %3, align 4, !dbg !9243
  %5 = and i32 %4, 16, !dbg !9245
  %6 = icmp eq i32 %5, 0, !dbg !9245
  br i1 %6, label %7, label %8, !dbg !9246

7:                                                ; preds = %2
  tail call void @SF_DAL_Dev_WriteEnable(%struct.SF_MTD_Data* noundef nonnull %0) #21, !dbg !9247
  br label %8, !dbg !9249

8:                                                ; preds = %7, %2
  %9 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9250
  call void @llvm.dbg.value(metadata i32 %9, metadata !9241, metadata !DIExpression()), !dbg !9242
  tail call void @SF_DAL_FLAG_BUSY_SET() #21, !dbg !9251
  %10 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9252
  %11 = load i16, i16* %10, align 2, !dbg !9252
  %12 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9253
  %13 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %12, align 4, !dbg !9253
  %14 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %13, i32 0, i32 5, !dbg !9254
  %15 = load i8, i8* %14, align 1, !dbg !9254
  %16 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 22, !dbg !9255
  %17 = load i8, i8* %16, align 1, !dbg !9255
  %18 = zext i8 %17 to i32, !dbg !9256
  tail call void @SFI_Dev_CommandAddress(i16 noundef zeroext %11, i8 noundef zeroext %15, i32 noundef %1, i32 noundef %18) #20, !dbg !9257
  tail call void @RestoreIRQMask(i32 noundef %9) #21, !dbg !9258
  ret void, !dbg !9259
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* nocapture readnone %0, %struct.SF_MTD_Data* nocapture noundef %1) local_unnamed_addr #0 !dbg !9260 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* undef, metadata !9262, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9263, metadata !DIExpression()), !dbg !9265
  %3 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !9266
  %4 = load i8, i8* %3, align 1, !dbg !9266
  switch i8 %4, label %17 [
    i8 -62, label %5
    i8 -17, label %10
    i8 -8, label %15
  ], !dbg !9267

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !9268
  %7 = load i32, i32* %6, align 4, !dbg !9270
  %8 = or i32 %7, 4, !dbg !9270
  store i32 %8, i32* %6, align 4, !dbg !9270
  %9 = tail call i32 @SF_DAL_Init_MXIC(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9271
  call void @llvm.dbg.value(metadata i32 0, metadata !9264, metadata !DIExpression()), !dbg !9265
  br label %18, !dbg !9272

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 24, !dbg !9273
  %12 = load i32, i32* %11, align 4, !dbg !9274
  %13 = or i32 %12, 2, !dbg !9274
  store i32 %13, i32* %11, align 4, !dbg !9274
  %14 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9275
  call void @llvm.dbg.value(metadata i32 0, metadata !9264, metadata !DIExpression()), !dbg !9265
  call void @llvm.dbg.value(metadata i32 0, metadata !9264, metadata !DIExpression()), !dbg !9265
  br label %18, !dbg !9276

15:                                               ; preds = %2
  %16 = tail call i32 @SF_DAL_Init_WINBOND(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9277
  call void @llvm.dbg.value(metadata i32 0, metadata !9264, metadata !DIExpression()), !dbg !9265
  br label %18, !dbg !9278

17:                                               ; preds = %2
  call void @llvm.dbg.value(metadata i32 -120, metadata !9264, metadata !DIExpression()), !dbg !9265
  tail call void @Flash_ReturnReady() #21, !dbg !9279
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.122, i32 0, i32 0), i32 noundef 2079, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.SF_DAL_Init_Vendor, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.123, i32 0, i32 0)) #23, !dbg !9279
  unreachable, !dbg !9279

18:                                               ; preds = %15, %10, %5
  call void @llvm.dbg.value(metadata i32 0, metadata !9264, metadata !DIExpression()), !dbg !9265
  ret i32 0, !dbg !9283
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef writeonly %0, %struct.SF_MTD_Data* noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !9284 {
  call void @llvm.dbg.value(metadata %struct.NOR_MTD_Driver* %0, metadata !9288, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %1, metadata !9289, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 %2, metadata !9290, metadata !DIExpression()), !dbg !9293
  call void @llvm.dbg.value(metadata i32 %3, metadata !9291, metadata !DIExpression()), !dbg !9293
  %5 = icmp eq %struct.NOR_MTD_Driver* %0, null, !dbg !9294
  %6 = icmp eq %struct.SF_MTD_Data* %1, null
  %7 = or i1 %5, %6, !dbg !9296
  br i1 %7, label %33, label %8, !dbg !9296

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 13, !dbg !9297
  %10 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9297
  %11 = icmp eq %struct.SF_MTD_CMD* %10, null, !dbg !9299
  br i1 %11, label %33, label %12, !dbg !9300

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 12, !dbg !9301
  %14 = load i8*, i8** %13, align 4, !dbg !9301
  %15 = icmp eq i8* %14, null, !dbg !9302
  br i1 %15, label %33, label %16, !dbg !9303

16:                                               ; preds = %12
  %17 = inttoptr i32 %2 to i8*, !dbg !9304
  %18 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 1, !dbg !9305
  store i8* %17, i8** %18, align 4, !dbg !9306
  %19 = trunc i32 %3 to i16, !dbg !9307
  %20 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 16, !dbg !9308
  store i16 %19, i16* %20, align 2, !dbg !9309
  %21 = tail call i32 @SF_DAL_Init_Common(%struct.NOR_MTD_Driver* noundef nonnull %0, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9310
  %22 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9311
  %23 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %22, i32 0, i32 10, !dbg !9312
  store i8 -81, i8* %23, align 1, !dbg !9313
  %24 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %1, i32 0, i32 20, i32 0, !dbg !9314
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !9315
  %25 = load i8, i8* %24, align 1, !dbg !9316
  switch i8 %25, label %26 [
    i8 -1, label %28
    i8 0, label %28
  ], !dbg !9318

26:                                               ; preds = %16
  %27 = tail call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %24) #20, !dbg !9319
  br i1 %27, label %31, label %28, !dbg !9320

28:                                               ; preds = %16, %16, %26
  %29 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %9, align 4, !dbg !9321
  %30 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %29, i32 0, i32 10, !dbg !9323
  store i8 -97, i8* %30, align 1, !dbg !9324
  tail call void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* noundef nonnull %1, i8* noundef nonnull %24) #21, !dbg !9325
  br label %31, !dbg !9326

31:                                               ; preds = %28, %26
  %32 = tail call i32 @SF_DAL_Init_Vendor(%struct.NOR_MTD_Driver* undef, %struct.SF_MTD_Data* noundef nonnull %1) #21, !dbg !9327
  call void @llvm.dbg.value(metadata i32 0, metadata !9292, metadata !DIExpression()), !dbg !9293
  br label %33, !dbg !9328

33:                                               ; preds = %8, %12, %4, %31
  %34 = phi i32 [ 0, %31 ], [ -120, %4 ], [ -120, %12 ], [ -120, %8 ], !dbg !9293
  ret i32 %34, !dbg !9329
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_ReadID(%struct.SF_MTD_Data* nocapture noundef readonly %0, i8* noundef %1) local_unnamed_addr #0 section ".ram_code" !dbg !9330 {
  %3 = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.SF_MTD_Data* %0, metadata !9334, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.value(metadata i8* %1, metadata !9335, metadata !DIExpression()), !dbg !9337
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9338
  %4 = load volatile i32, i32* inttoptr (i32 -1610350588 to i32*), align 4, !dbg !9339
  %5 = and i32 %4, 1, !dbg !9339
  %6 = icmp eq i32 %5, 0, !dbg !9341
  %7 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 13, !dbg !9342
  %8 = load %struct.SF_MTD_CMD*, %struct.SF_MTD_CMD** %7, align 4, !dbg !9342
  %9 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 9, !dbg !9343
  %10 = getelementptr inbounds %struct.SF_MTD_CMD, %struct.SF_MTD_CMD* %8, i32 0, i32 10, !dbg !9343
  %11 = select i1 %6, i8* %9, i8* %10, !dbg !9343
  %12 = load i8, i8* %11, align 1, !dbg !9342
  store i8 %12, i8* %3, align 1, !dbg !9342
  %13 = getelementptr inbounds %struct.SF_MTD_Data, %struct.SF_MTD_Data* %0, i32 0, i32 23, !dbg !9344
  %14 = load i16, i16* %13, align 2, !dbg !9344
  call void @llvm.dbg.value(metadata i8* %3, metadata !9336, metadata !DIExpression(DW_OP_deref)), !dbg !9337
  call void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %14, i8* noundef nonnull %3, i8* noundef %1, i16 noundef zeroext 1, i16 noundef zeroext 3) #21, !dbg !9345
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #22, !dbg !9346
  ret void, !dbg !9346
}

; Function Attrs: noinline nounwind optsize
define dso_local void @SF_DAL_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) local_unnamed_addr #0 section ".ram_code" !dbg !9347 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9351, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.value(metadata i8* %1, metadata !9352, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.value(metadata i8* %2, metadata !9353, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.value(metadata i16 %3, metadata !9354, metadata !DIExpression()), !dbg !9357
  call void @llvm.dbg.value(metadata i16 %4, metadata !9355, metadata !DIExpression()), !dbg !9357
  %6 = tail call i32 @SaveAndSetIRQMask() #21, !dbg !9358
  call void @llvm.dbg.value(metadata i32 %6, metadata !9356, metadata !DIExpression()), !dbg !9357
  tail call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef %1, i8* noundef %2, i16 noundef zeroext %3, i16 noundef zeroext %4) #20, !dbg !9359
  tail call void @RestoreIRQMask(i32 noundef %6) #21, !dbg !9360
  ret void, !dbg !9361
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !9362 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9364, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9367, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i32 0, metadata !9365, metadata !DIExpression()), !dbg !9370
  br label %6, !dbg !9371

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !9373
  call void @llvm.dbg.value(metadata i32 %3, metadata !9365, metadata !DIExpression()), !dbg !9370
  call void @llvm.dbg.value(metadata i32 %8, metadata !9365, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9370
  %4 = icmp ult i32 %8, 4, !dbg !9375
  %5 = icmp eq i32 %3, 5, !dbg !9375
  br i1 %5, label %26, label %6, !dbg !9371, !llvm.loop !9376

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9365, metadata !DIExpression()), !dbg !9370
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9366, metadata !DIExpression()), !dbg !9370
  %12 = icmp eq i8 %10, 0, !dbg !9378
  br i1 %12, label %23, label %13, !dbg !9382

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9366, metadata !DIExpression()), !dbg !9370
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9383
  %16 = load i8, i8* %15, align 1, !dbg !9383
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9386
  %18 = load i8, i8* %17, align 1, !dbg !9386
  %19 = icmp eq i8 %16, %18, !dbg !9387
  br i1 %19, label %20, label %23, !dbg !9388

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !9389
  call void @llvm.dbg.value(metadata i32 %21, metadata !9366, metadata !DIExpression()), !dbg !9370
  %22 = icmp eq i32 %21, %11, !dbg !9378
  br i1 %22, label %26, label %13, !dbg !9382, !llvm.loop !9390

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !9392
  %25 = icmp eq i32 %24, %11, !dbg !9393
  call void @llvm.dbg.value(metadata i32 %8, metadata !9365, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9370
  br i1 %25, label %26, label %2, !dbg !9395

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !9375
  ret i1 %27, !dbg !9396
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Index() local_unnamed_addr #0 !dbg !9397 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !9409
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9409
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !9401, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9408, metadata !DIExpression()), !dbg !9411
  %3 = load i16, i16* @cmem_index, align 2, !dbg !9412
  %4 = icmp sgt i16 %3, -1, !dbg !9414
  br i1 %4, label %34, label %5, !dbg !9415

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !9416
  call void @NOR_ReadID(i16 noundef zeroext 0, i16* noundef nonnull inttoptr (i32 134217728 to i16*), i16* noundef nonnull %6) #20, !dbg !9417
  call void @llvm.dbg.value(metadata i32 0, metadata !9399, metadata !DIExpression()), !dbg !9411
  br label %7, !dbg !9418

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9399, metadata !DIExpression()), !dbg !9411
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9400, metadata !DIExpression()), !dbg !9411
  %12 = icmp eq i8 %10, 0, !dbg !9420
  br i1 %12, label %24, label %13, !dbg !9425

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9400, metadata !DIExpression()), !dbg !9411
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9426
  %16 = load i8, i8* %15, align 1, !dbg !9426
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !9429
  %18 = load i16, i16* %17, align 2, !dbg !9429
  %19 = zext i8 %16 to i16, !dbg !9430
  %20 = icmp eq i16 %18, %19, !dbg !9430
  br i1 %20, label %21, label %24, !dbg !9431

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !9432
  call void @llvm.dbg.value(metadata i32 %22, metadata !9400, metadata !DIExpression()), !dbg !9411
  %23 = icmp eq i32 %22, %11, !dbg !9420
  br i1 %23, label %27, label %13, !dbg !9425, !llvm.loop !9433

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !9435
  %26 = icmp eq i32 %25, %11, !dbg !9436
  br i1 %26, label %27, label %29, !dbg !9438

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !9439
  store i16 %28, i16* @cmem_index, align 2, !dbg !9441
  br label %34, !dbg !9442

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !9443
  call void @llvm.dbg.value(metadata i32 %30, metadata !9399, metadata !DIExpression()), !dbg !9411
  %31 = icmp eq i32 %30, 5, !dbg !9444
  br i1 %31, label %32, label %7, !dbg !9418, !llvm.loop !9445

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_index, align 2, !dbg !9447
  br label %34, !dbg !9447

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !9411
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9448
  ret i32 %36, !dbg !9448
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local nonnull %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %0) local_unnamed_addr #10 !dbg !9449 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9453, metadata !DIExpression()), !dbg !9454
  %2 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %0, !dbg !9455
  ret %struct.CMEMEntryID* %2, !dbg !9456
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_EMIINIT_ReadID(i16 noundef zeroext %0, i8* nocapture readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9457 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9461, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata i8* undef, metadata !9462, metadata !DIExpression()), !dbg !9468
  call void @llvm.dbg.value(metadata i16* %2, metadata !9463, metadata !DIExpression()), !dbg !9468
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9469
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9469
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9469
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9466, metadata !DIExpression()), !dbg !9470
  call void @llvm.dbg.value(metadata i8 -81, metadata !9464, metadata !DIExpression()), !dbg !9471
  store i8 -81, i8* %4, align 1, !dbg !9472
  call void @llvm.dbg.value(metadata i8* %4, metadata !9464, metadata !DIExpression(DW_OP_deref)), !dbg !9471
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9473
  %7 = load i8, i8* %6, align 1, !dbg !9474
  %8 = add i8 %7, 1, !dbg !9476
  %9 = icmp ult i8 %8, 2, !dbg !9476
  br i1 %9, label %12, label %10, !dbg !9476

10:                                               ; preds = %3
  %11 = call zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* noundef nonnull %6) #21, !dbg !9477
  br i1 %11, label %13, label %12, !dbg !9478

12:                                               ; preds = %10, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9464, metadata !DIExpression()), !dbg !9471
  store i8 -97, i8* %4, align 1, !dbg !9479
  call void @llvm.dbg.value(metadata i8* %4, metadata !9464, metadata !DIExpression(DW_OP_deref)), !dbg !9471
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9481
  br label %13, !dbg !9482

13:                                               ; preds = %12, %10
  br label %14, !dbg !9483

14:                                               ; preds = %13, %14
  %15 = phi i32 [ %20, %14 ], [ 0, %13 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !9467, metadata !DIExpression()), !dbg !9471
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %15, !dbg !9485
  %17 = load i8, i8* %16, align 1, !dbg !9485
  %18 = zext i8 %17 to i16, !dbg !9485
  %19 = getelementptr inbounds i16, i16* %2, i32 %15, !dbg !9488
  store i16 %18, i16* %19, align 2, !dbg !9489
  %20 = add nuw nsw i32 %15, 1, !dbg !9490
  call void @llvm.dbg.value(metadata i32 %20, metadata !9467, metadata !DIExpression()), !dbg !9471
  %21 = icmp eq i32 %20, 3, !dbg !9491
  br i1 %21, label %22, label %14, !dbg !9483, !llvm.loop !9492

22:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9494
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9494
  ret void, !dbg !9495
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local zeroext i1 @CMEM_EMIINIT_CheckValidDeviceID(i8* nocapture noundef readonly %0) local_unnamed_addr #12 section ".ram_code" !dbg !9496 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !9498, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9501, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata i32 0, metadata !9499, metadata !DIExpression()), !dbg !9502
  br label %6, !dbg !9503

2:                                                ; preds = %23
  %3 = add nuw nsw i32 %8, 1, !dbg !9505
  call void @llvm.dbg.value(metadata i32 %3, metadata !9499, metadata !DIExpression()), !dbg !9502
  call void @llvm.dbg.value(metadata i32 %8, metadata !9499, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9502
  %4 = icmp ult i32 %8, 4, !dbg !9507
  %5 = icmp eq i32 %3, 5, !dbg !9507
  br i1 %5, label %26, label %6, !dbg !9503, !llvm.loop !9508

6:                                                ; preds = %1, %2
  %7 = phi i1 [ true, %1 ], [ %4, %2 ]
  %8 = phi i32 [ 0, %1 ], [ %3, %2 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9499, metadata !DIExpression()), !dbg !9502
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9500, metadata !DIExpression()), !dbg !9502
  %12 = icmp eq i8 %10, 0, !dbg !9510
  br i1 %12, label %23, label %13, !dbg !9514

13:                                               ; preds = %6, %20
  %14 = phi i32 [ %21, %20 ], [ 0, %6 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9500, metadata !DIExpression()), !dbg !9502
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9515
  %16 = load i8, i8* %15, align 1, !dbg !9515
  %17 = getelementptr inbounds i8, i8* %0, i32 %14, !dbg !9518
  %18 = load i8, i8* %17, align 1, !dbg !9518
  %19 = icmp eq i8 %16, %18, !dbg !9519
  br i1 %19, label %20, label %23, !dbg !9520

20:                                               ; preds = %13
  %21 = add nuw nsw i32 %14, 1, !dbg !9521
  call void @llvm.dbg.value(metadata i32 %21, metadata !9500, metadata !DIExpression()), !dbg !9502
  %22 = icmp eq i32 %21, %11, !dbg !9510
  br i1 %22, label %26, label %13, !dbg !9514, !llvm.loop !9522

23:                                               ; preds = %13, %6
  %24 = phi i32 [ 0, %6 ], [ %14, %13 ], !dbg !9524
  %25 = icmp eq i32 %24, %11, !dbg !9525
  call void @llvm.dbg.value(metadata i32 %8, metadata !9499, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9502
  br i1 %25, label %26, label %2, !dbg !9527

26:                                               ; preds = %2, %23, %20
  %27 = phi i1 [ %7, %20 ], [ %7, %23 ], [ %4, %2 ], !dbg !9507
  ret i1 %27, !dbg !9528
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_EMIINIT_Index() local_unnamed_addr #0 section ".ram_code" !dbg !9529 {
  %1 = alloca %union.CMEMFlashID, align 2
  %2 = bitcast %union.CMEMFlashID* %1 to i8*, !dbg !9535
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9535
  call void @llvm.dbg.declare(metadata %union.CMEMFlashID* %1, metadata !9533, metadata !DIExpression()), !dbg !9536
  call void @llvm.dbg.value(metadata %struct.CMEMEntryID* null, metadata !9534, metadata !DIExpression()), !dbg !9537
  %3 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9538
  %4 = icmp sgt i16 %3, -1, !dbg !9540
  br i1 %4, label %34, label %5, !dbg !9541

5:                                                ; preds = %0
  %6 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 0, !dbg !9542
  call void @CMEM_EMIINIT_ReadID(i16 noundef zeroext 0, i8* undef, i16* noundef nonnull %6) #21, !dbg !9543
  call void @llvm.dbg.value(metadata i32 0, metadata !9531, metadata !DIExpression()), !dbg !9537
  br label %7, !dbg !9544

7:                                                ; preds = %5, %29
  %8 = phi i32 [ 0, %5 ], [ %30, %29 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9531, metadata !DIExpression()), !dbg !9537
  %9 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 1
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  call void @llvm.dbg.value(metadata i32 0, metadata !9532, metadata !DIExpression()), !dbg !9537
  %12 = icmp eq i8 %10, 0, !dbg !9546
  br i1 %12, label %24, label %13, !dbg !9551

13:                                               ; preds = %7, %21
  %14 = phi i32 [ %22, %21 ], [ 0, %7 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !9532, metadata !DIExpression()), !dbg !9537
  %15 = getelementptr inbounds %struct.GFH_CMEM_ID_INFO_v1, %struct.GFH_CMEM_ID_INFO_v1* @combo_mem_id_list, i32 0, i32 1, i32 2, i32 %8, i32 2, i32 %14, !dbg !9552
  %16 = load i8, i8* %15, align 1, !dbg !9552
  %17 = getelementptr inbounds %union.CMEMFlashID, %union.CMEMFlashID* %1, i32 0, i32 0, i32 %14, !dbg !9555
  %18 = load i16, i16* %17, align 2, !dbg !9555
  %19 = zext i8 %16 to i16, !dbg !9556
  %20 = icmp eq i16 %18, %19, !dbg !9556
  br i1 %20, label %21, label %24, !dbg !9557

21:                                               ; preds = %13
  %22 = add nuw nsw i32 %14, 1, !dbg !9558
  call void @llvm.dbg.value(metadata i32 %22, metadata !9532, metadata !DIExpression()), !dbg !9537
  %23 = icmp eq i32 %22, %11, !dbg !9546
  br i1 %23, label %27, label %13, !dbg !9551, !llvm.loop !9559

24:                                               ; preds = %13, %7
  %25 = phi i32 [ 0, %7 ], [ %14, %13 ], !dbg !9561
  %26 = icmp eq i32 %25, %11, !dbg !9562
  br i1 %26, label %27, label %29, !dbg !9564

27:                                               ; preds = %24, %21
  %28 = trunc i32 %8 to i16, !dbg !9565
  store i16 %28, i16* @cmem_emiinit_index, align 2, !dbg !9567
  br label %34, !dbg !9568

29:                                               ; preds = %24
  %30 = add nuw nsw i32 %8, 1, !dbg !9569
  call void @llvm.dbg.value(metadata i32 %30, metadata !9531, metadata !DIExpression()), !dbg !9537
  %31 = icmp eq i32 %30, 5, !dbg !9570
  br i1 %31, label %32, label %7, !dbg !9544, !llvm.loop !9571

32:                                               ; preds = %29
  %33 = load i16, i16* @cmem_emiinit_index, align 2, !dbg !9573
  br label %34, !dbg !9573

34:                                               ; preds = %27, %32, %0
  %35 = phi i16 [ %3, %0 ], [ %33, %32 ], [ %28, %27 ]
  %36 = sext i16 %35 to i32, !dbg !9537
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #22, !dbg !9574
  ret i32 %36, !dbg !9574
}

; Function Attrs: noinline nounwind optsize
define dso_local void @NOR_ReadID(i16 noundef zeroext %0, i16* nocapture noundef readnone %1, i16* nocapture noundef writeonly %2) local_unnamed_addr #0 section ".ram_code" !dbg !9575 {
  %4 = alloca i8, align 1
  %5 = alloca [3 x i8], align 1
  call void @llvm.dbg.value(metadata i16 %0, metadata !9583, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i16* %1, metadata !9584, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i16* %2, metadata !9585, metadata !DIExpression()), !dbg !9591
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9592
  %6 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 0, !dbg !9592
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9592
  call void @llvm.dbg.declare(metadata [3 x i8]* %5, metadata !9589, metadata !DIExpression()), !dbg !9593
  call void @llvm.dbg.value(metadata i8 -81, metadata !9587, metadata !DIExpression()), !dbg !9594
  store i8 -81, i8* %4, align 1, !dbg !9595
  %7 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !9596
  call void @llvm.dbg.value(metadata i32 %7, metadata !9586, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i8* %4, metadata !9587, metadata !DIExpression(DW_OP_deref)), !dbg !9594
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9597
  call void @RestoreIRQMask(i32 noundef %7) #20, !dbg !9598
  %8 = load i8, i8* %6, align 1, !dbg !9599
  %9 = add i8 %8, 1, !dbg !9601
  %10 = icmp ult i8 %9, 2, !dbg !9601
  br i1 %10, label %13, label %11, !dbg !9601

11:                                               ; preds = %3
  %12 = call zeroext i1 @CMEM_CheckValidDeviceID(i8* noundef nonnull %6) #20, !dbg !9602
  br i1 %12, label %15, label %13, !dbg !9603

13:                                               ; preds = %11, %3
  call void @llvm.dbg.value(metadata i8 -97, metadata !9587, metadata !DIExpression()), !dbg !9594
  store i8 -97, i8* %4, align 1, !dbg !9604
  %14 = call i32 @SaveAndSetIRQMask() #20, !dbg !9606
  call void @llvm.dbg.value(metadata i32 %14, metadata !9586, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata i8* %4, metadata !9587, metadata !DIExpression(DW_OP_deref)), !dbg !9594
  call void @SFI_Dev_Command_Ext(i16 noundef zeroext %0, i8* noundef nonnull %4, i8* noundef nonnull %6, i16 noundef zeroext 1, i16 noundef zeroext 3) #20, !dbg !9607
  call void @RestoreIRQMask(i32 noundef %14) #20, !dbg !9608
  br label %15, !dbg !9609

15:                                               ; preds = %13, %11
  br label %16, !dbg !9610

16:                                               ; preds = %15, %16
  %17 = phi i32 [ %22, %16 ], [ 0, %15 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !9590, metadata !DIExpression()), !dbg !9594
  %18 = getelementptr inbounds [3 x i8], [3 x i8]* %5, i32 0, i32 %17, !dbg !9612
  %19 = load i8, i8* %18, align 1, !dbg !9612
  %20 = zext i8 %19 to i16, !dbg !9612
  %21 = getelementptr inbounds i16, i16* %2, i32 %17, !dbg !9615
  store i16 %20, i16* %21, align 2, !dbg !9616
  %22 = add nuw nsw i32 %17, 1, !dbg !9617
  call void @llvm.dbg.value(metadata i32 %22, metadata !9590, metadata !DIExpression()), !dbg !9594
  %23 = icmp eq i32 %22, 3, !dbg !9618
  br i1 %23, label %24, label %16, !dbg !9610, !llvm.loop !9619

24:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %6) #22, !dbg !9621
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #22, !dbg !9621
  ret void, !dbg !9622
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_ROMSpace() local_unnamed_addr #10 !dbg !9623 {
  ret i32 3932160, !dbg !9624
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Size() local_unnamed_addr #10 !dbg !9625 {
  ret i32 4194304, !dbg !9626
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Initialize_FDD_tables() local_unnamed_addr #0 !dbg !9627 {
  %1 = tail call i32 @ComboMem_Initialize() #20, !dbg !9628
  ret void, !dbg !9629
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_sweep_device() local_unnamed_addr #10 !dbg !9630 {
  ret void, !dbg !9631
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @nor_manual_reclaim() local_unnamed_addr #10 !dbg !9632 {
  ret void, !dbg !9633
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_addr() local_unnamed_addr #10 !dbg !9634 {
  ret i32 3932160, !dbg !9635
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_fat_len() local_unnamed_addr #10 !dbg !9636 {
  ret i32 262144, !dbg !9637
}

; Function Attrs: noinline nounwind optsize
define dso_local void @Custom_NOR_Init() local_unnamed_addr #0 !dbg !9638 {
  %1 = tail call i32 @CMEM_Init_FullDriver() #20, !dbg !9639
  ret void, !dbg !9640
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_NORFLASH_Base() local_unnamed_addr #10 !dbg !9641 {
  ret i32 134217728, !dbg !9642
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @custom_get_FLASH_Size() local_unnamed_addr #10 !dbg !9643 {
  ret i32 4194304, !dbg !9644
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly
define dso_local i32 @INT_RetrieveFlashBaseAddr() local_unnamed_addr #6 !dbg !9645 {
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !9646
  ret i32 134217728, !dbg !9647
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_Common() local_unnamed_addr #0 !dbg !9648 {
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @RegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 0), align 4, !dbg !9649
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9650
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9651
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !9652
  %4 = load i16, i16* %3, align 2, !dbg !9652
  %5 = zext i16 %4 to i32, !dbg !9650
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !9653
  %6 = tail call i8* @memset(i8* noundef bitcast ([2 x %struct.hal_cache_region_config_t]* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 11, i32 0) to i8*), i32 noundef 255, i32 noundef 128) #20, !dbg !9654
  %7 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !9655
  store i8* inttoptr (i32 138149888 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 1), align 4, !dbg !9656
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 5), align 4, !dbg !9657
  ret i32 0, !dbg !9658
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR_MTD_SF() local_unnamed_addr #0 !dbg !9659 {
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DRV_Data, %struct.NOR_FLASH_DRV_Data* @FlashDriveData, i32 0, i32 1), align 4, !dbg !9662
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 12), align 4, !dbg !9663
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 13), align 4, !dbg !9664
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @mtdflash, i32 0, i32 23), align 2, !dbg !9665
  %1 = tail call i32 @INT_RetrieveFlashBaseAddr() #21, !dbg !9666
  %2 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9667
  %3 = load i32, i32* @cmem_nor_index, align 4, !dbg !9668
  %4 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %2, i32 %3, i32 2, !dbg !9669
  %5 = load i32, i32* %4, align 4, !dbg !9669
  %6 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @mtdflash, i32 noundef 138149888, i32 noundef %5) #20, !dbg !9670
  call void @llvm.dbg.value(metadata i32 %6, metadata !9661, metadata !DIExpression()), !dbg !9671
  %7 = icmp eq i32 %6, -120, !dbg !9672
  %8 = select i1 %7, i32 5, i32 0, !dbg !9671
  ret i32 %8, !dbg !9674
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i8 @EMINIT_CMEM_GET_NOR_FLASH_COUNT() local_unnamed_addr #10 !dbg !9675 {
  ret i8 1, !dbg !9677
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMINIT_CMEM_GET_NOR_FLASH_SIZE(i8 noundef zeroext %0) local_unnamed_addr #0 !dbg !9678 {
  call void @llvm.dbg.value(metadata i8 %0, metadata !9682, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9684, metadata !DIExpression()), !dbg !9685
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9686
  call void @llvm.dbg.value(metadata i32 %2, metadata !9683, metadata !DIExpression()), !dbg !9685
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9684, metadata !DIExpression()), !dbg !9685
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 4, i32 0, i32 0, !dbg !9687
  %4 = load i32, i32* %3, align 4, !dbg !9687
  ret i32 %4, !dbg !9688
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* nocapture noundef readonly %1) local_unnamed_addr #12 !dbg !9689 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9693, metadata !DIExpression()), !dbg !9696
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %1, metadata !9694, metadata !DIExpression()), !dbg !9696
  %3 = and i32 %0, 134217727, !dbg !9697
  call void @llvm.dbg.value(metadata i32 %3, metadata !9693, metadata !DIExpression()), !dbg !9696
  call void @llvm.dbg.value(metadata i16 0, metadata !9695, metadata !DIExpression()), !dbg !9696
  %4 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 1, i32 1, !dbg !9698
  %5 = load i32, i32* %4, align 4, !dbg !9698
  %6 = icmp eq i32 %5, 0, !dbg !9701
  br i1 %6, label %25, label %7, !dbg !9702

7:                                                ; preds = %2, %18
  %8 = phi i32 [ %21, %18 ], [ 1, %2 ]
  %9 = phi i32 [ %20, %18 ], [ 0, %2 ]
  %10 = phi i16 [ %19, %18 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i16 %10, metadata !9695, metadata !DIExpression()), !dbg !9696
  %11 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %9, i32 0, !dbg !9703
  %12 = load i32, i32* %11, align 4, !dbg !9703
  %13 = icmp ult i32 %3, %12, !dbg !9706
  br i1 %13, label %18, label %14, !dbg !9707

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %8, i32 0, !dbg !9708
  %16 = load i32, i32* %15, align 4, !dbg !9708
  %17 = icmp ult i32 %3, %16, !dbg !9709
  br i1 %17, label %25, label %18, !dbg !9710

18:                                               ; preds = %7, %14
  %19 = add i16 %10, 1, !dbg !9711
  call void @llvm.dbg.value(metadata i16 %19, metadata !9695, metadata !DIExpression()), !dbg !9696
  %20 = zext i16 %19 to i32, !dbg !9712
  %21 = add nuw nsw i32 %20, 1, !dbg !9713
  %22 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %21, i32 1, !dbg !9698
  %23 = load i32, i32* %22, align 4, !dbg !9698
  %24 = icmp eq i32 %23, 0, !dbg !9701
  br i1 %24, label %25, label %7, !dbg !9702, !llvm.loop !9714

25:                                               ; preds = %18, %14, %2
  %26 = phi i32 [ 0, %2 ], [ %9, %14 ], [ %20, %18 ], !dbg !9712
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %1, i32 %26, i32 1, !dbg !9716
  %28 = load i32, i32* %27, align 4, !dbg !9716
  ret i32 %28, !dbg !9717
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #12 !dbg !9718 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9720, metadata !DIExpression()), !dbg !9721
  %2 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9722
  %3 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef %2) #21, !dbg !9723
  ret i32 %3, !dbg !9724
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !9725 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9727, metadata !DIExpression()), !dbg !9730
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9731
  call void @llvm.dbg.value(metadata i32 %2, metadata !9728, metadata !DIExpression()), !dbg !9730
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9729, metadata !DIExpression()), !dbg !9730
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9729, metadata !DIExpression()), !dbg !9730
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 3, i32 0, !dbg !9732
  %4 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %0, %struct.hal_cache_region_config_t* noundef nonnull %3) #21, !dbg !9733
  ret i32 %4, !dbg !9734
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* nocapture noundef readonly %0) local_unnamed_addr #12 !dbg !9735 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9741, metadata !DIExpression()), !dbg !9744
  call void @llvm.dbg.value(metadata i32 0, metadata !9742, metadata !DIExpression()), !dbg !9744
  call void @llvm.dbg.value(metadata i32 0, metadata !9743, metadata !DIExpression()), !dbg !9744
  %2 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 0, i32 0, !dbg !9745
  %3 = load i32, i32* %2, align 4, !dbg !9745
  %4 = icmp eq i32 %3, 0, !dbg !9748
  br i1 %4, label %17, label %5, !dbg !9749

5:                                                ; preds = %1, %5
  %6 = phi i32 [ %15, %5 ], [ %3, %1 ]
  %7 = phi i32 [ %13, %5 ], [ 0, %1 ]
  %8 = phi i32 [ %12, %5 ], [ 0, %1 ]
  call void @llvm.dbg.value(metadata i32 %7, metadata !9743, metadata !DIExpression()), !dbg !9744
  call void @llvm.dbg.value(metadata i32 %8, metadata !9742, metadata !DIExpression()), !dbg !9744
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %7, i32 1, !dbg !9750
  %10 = load i32, i32* %9, align 4, !dbg !9750
  %11 = mul i32 %10, %6, !dbg !9752
  %12 = add i32 %11, %8, !dbg !9753
  call void @llvm.dbg.value(metadata i32 %12, metadata !9742, metadata !DIExpression()), !dbg !9744
  %13 = add i32 %7, 1, !dbg !9754
  call void @llvm.dbg.value(metadata i32 %13, metadata !9743, metadata !DIExpression()), !dbg !9744
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 0, !dbg !9745
  %15 = load i32, i32* %14, align 4, !dbg !9745
  %16 = icmp eq i32 %15, 0, !dbg !9748
  br i1 %16, label %17, label %5, !dbg !9749, !llvm.loop !9755

17:                                               ; preds = %5, %1
  %18 = phi i32 [ 0, %1 ], [ %12, %5 ], !dbg !9744
  ret i32 %18, !dbg !9757
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #13 !dbg !9758 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9762, metadata !DIExpression()), !dbg !9771
  call void @llvm.dbg.value(metadata i32 %1, metadata !9763, metadata !DIExpression()), !dbg !9771
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9764, metadata !DIExpression()), !dbg !9771
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9765, metadata !DIExpression()), !dbg !9771
  %5 = add i32 %1, %0, !dbg !9772
  call void @llvm.dbg.value(metadata i32 %5, metadata !9770, metadata !DIExpression()), !dbg !9771
  call void @llvm.dbg.value(metadata i32 %0, metadata !9766, metadata !DIExpression()), !dbg !9771
  call void @llvm.dbg.value(metadata i32 0, metadata !9767, metadata !DIExpression()), !dbg !9771
  call void @llvm.dbg.value(metadata i32 0, metadata !9769, metadata !DIExpression()), !dbg !9771
  %6 = icmp ugt i32 %5, %0, !dbg !9773
  br i1 %6, label %7, label %34, !dbg !9776

7:                                                ; preds = %4, %29
  %8 = phi i32 [ %32, %29 ], [ 0, %4 ]
  %9 = phi i32 [ %31, %29 ], [ %0, %4 ]
  %10 = phi i32 [ %30, %29 ], [ 0, %4 ]
  call void @llvm.dbg.value(metadata i32 %8, metadata !9769, metadata !DIExpression()), !dbg !9771
  call void @llvm.dbg.value(metadata i32 %9, metadata !9766, metadata !DIExpression()), !dbg !9771
  call void @llvm.dbg.value(metadata i32 %10, metadata !9767, metadata !DIExpression()), !dbg !9771
  %11 = tail call i32 @CMEM_BlockSize_Internal(i32 noundef %9, %struct.hal_cache_region_config_t* noundef %3) #21, !dbg !9777
  call void @llvm.dbg.value(metadata i32 %11, metadata !9768, metadata !DIExpression()), !dbg !9771
  %12 = icmp eq i32 %8, 0, !dbg !9779
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 0, !dbg !9781
  br i1 %12, label %14, label %16, !dbg !9782

14:                                               ; preds = %7
  store i32 %11, i32* %13, align 4, !dbg !9783
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9785
  store i32 1, i32* %15, align 4, !dbg !9786
  br label %29, !dbg !9787

16:                                               ; preds = %7
  %17 = load i32, i32* %13, align 4, !dbg !9788
  %18 = icmp eq i32 %11, %17, !dbg !9790
  br i1 %18, label %19, label %23, !dbg !9791

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %10, i32 1, !dbg !9792
  %21 = load i32, i32* %20, align 4, !dbg !9794
  %22 = add i32 %21, 1, !dbg !9794
  store i32 %22, i32* %20, align 4, !dbg !9794
  br label %29, !dbg !9795

23:                                               ; preds = %16
  %24 = add i32 %10, 1, !dbg !9796
  call void @llvm.dbg.value(metadata i32 %24, metadata !9767, metadata !DIExpression()), !dbg !9771
  %25 = icmp eq i32 %24, 9, !dbg !9798
  br i1 %25, label %34, label %26, !dbg !9800

26:                                               ; preds = %23
  %27 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 0, !dbg !9801
  store i32 %11, i32* %27, align 4, !dbg !9802
  %28 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %24, i32 1, !dbg !9803
  store i32 1, i32* %28, align 4, !dbg !9804
  br label %29

29:                                               ; preds = %19, %26, %14
  %30 = phi i32 [ %10, %14 ], [ %10, %19 ], [ %24, %26 ], !dbg !9805
  call void @llvm.dbg.value(metadata i32 %30, metadata !9767, metadata !DIExpression()), !dbg !9771
  %31 = add i32 %11, %9, !dbg !9806
  call void @llvm.dbg.value(metadata i32 %31, metadata !9766, metadata !DIExpression()), !dbg !9771
  %32 = add i32 %8, 1, !dbg !9807
  call void @llvm.dbg.value(metadata i32 %32, metadata !9769, metadata !DIExpression()), !dbg !9771
  %33 = icmp ult i32 %31, %5, !dbg !9773
  br i1 %33, label %7, label %34, !dbg !9776, !llvm.loop !9808

34:                                               ; preds = %23, %29, %4
  %35 = phi i32 [ 0, %4 ], [ 0, %29 ], [ 6, %23 ], !dbg !9771
  ret i32 %35, !dbg !9810
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2) local_unnamed_addr #0 !dbg !9811 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9815, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata i32 %1, metadata !9816, metadata !DIExpression()), !dbg !9818
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9817, metadata !DIExpression()), !dbg !9818
  %4 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9819
  %5 = tail call i8* @memset(i8* noundef %4, i32 noundef 0, i32 noundef 64) #20, !dbg !9820
  %6 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9821
  %7 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef %6) #21, !dbg !9822
  ret i32 %7, !dbg !9823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9824 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9826, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata i32 %1, metadata !9827, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9828, metadata !DIExpression()), !dbg !9829
  ret i32 0, !dbg !9830
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_RegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef %2) local_unnamed_addr #0 !dbg !9831 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9833, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata i32 %1, metadata !9834, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9835, metadata !DIExpression()), !dbg !9838
  %4 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9839
  call void @llvm.dbg.value(metadata i32 %4, metadata !9836, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9837, metadata !DIExpression()), !dbg !9838
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9837, metadata !DIExpression()), !dbg !9838
  %5 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %4, i32 3, i32 0, !dbg !9840
  %6 = tail call i32 @CMEM_NOR_Construct_RegionInfo_Internal(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* noundef nonnull %5) #21, !dbg !9841
  ret i32 %6, !dbg !9842
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @EMIINIT_CMEM_NOR_Construct_DualRegionInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* nocapture noundef readnone %2) local_unnamed_addr #10 !dbg !9843 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9845, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata i32 %1, metadata !9846, metadata !DIExpression()), !dbg !9848
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9847, metadata !DIExpression()), !dbg !9848
  ret i32 0, !dbg !9849
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @EMIINIT_CMEM_NOR_GetUniformBlock(i16 noundef zeroext %0) local_unnamed_addr #0 !dbg !9850 {
  call void @llvm.dbg.value(metadata i16 %0, metadata !9852, metadata !DIExpression()), !dbg !9855
  %2 = tail call i32 @CMEM_EMIINIT_Index() #20, !dbg !9856
  call void @llvm.dbg.value(metadata i32 %2, metadata !9853, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* null, metadata !9854, metadata !DIExpression()), !dbg !9855
  call void @llvm.dbg.value(metadata %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), metadata !9854, metadata !DIExpression()), !dbg !9855
  %3 = getelementptr inbounds %struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 %2, i32 2, !dbg !9857
  %4 = load i32, i32* %3, align 4, !dbg !9857
  ret i32 %4, !dbg !9858
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @CMEM_NOR_AddBankInfo(%struct.hal_cache_region_config_t* nocapture noundef %0, i32* nocapture noundef %1, i32 noundef %2) local_unnamed_addr #7 !dbg !9859 {
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %0, metadata !9863, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32* %1, metadata !9864, metadata !DIExpression()), !dbg !9866
  call void @llvm.dbg.value(metadata i32 %2, metadata !9865, metadata !DIExpression()), !dbg !9866
  %4 = load i32, i32* %1, align 4, !dbg !9867
  %5 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 0, !dbg !9869
  %6 = load i32, i32* %5, align 4, !dbg !9869
  %7 = icmp eq i32 %6, %2, !dbg !9870
  br i1 %7, label %8, label %12, !dbg !9871

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %4, i32 1, !dbg !9872
  %10 = load i32, i32* %9, align 4, !dbg !9874
  %11 = add i32 %10, 1, !dbg !9874
  store i32 %11, i32* %9, align 4, !dbg !9874
  br label %17, !dbg !9875

12:                                               ; preds = %3
  %13 = add i32 %4, 1, !dbg !9876
  store i32 %13, i32* %1, align 4, !dbg !9876
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %13, i32 1, !dbg !9878
  store i32 1, i32* %14, align 4, !dbg !9879
  %15 = load i32, i32* %1, align 4, !dbg !9880
  %16 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %0, i32 %15, i32 0, !dbg !9881
  store i32 %2, i32* %16, align 4, !dbg !9882
  br label %17

17:                                               ; preds = %12, %8
  ret void, !dbg !9883
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %0, i32 noundef %1, %struct.hal_cache_region_config_t* noundef %2, %struct.hal_cache_region_config_t* nocapture noundef readonly %3) local_unnamed_addr #0 !dbg !9884 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9888, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %1, metadata !9889, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %2, metadata !9890, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata %struct.hal_cache_region_config_t* %3, metadata !9891, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 0, metadata !9892, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 0, metadata !9893, metadata !DIExpression()), !dbg !9897
  %5 = bitcast %struct.hal_cache_region_config_t* %2 to i8*, !dbg !9898
  %6 = tail call i8* @memset(i8* noundef %5, i32 noundef 0, i32 noundef 64) #20, !dbg !9899
  call void @llvm.dbg.value(metadata i32 0, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 0, metadata !9895, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 0, metadata !9893, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 0, metadata !9892, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %0, metadata !9888, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %1, metadata !9889, metadata !DIExpression()), !dbg !9897
  %7 = icmp eq i32 %1, 0, !dbg !9900
  br i1 %7, label %53, label %8, !dbg !9903

8:                                                ; preds = %4, %46
  %9 = phi i32 [ %51, %46 ], [ 0, %4 ]
  %10 = phi i32 [ %23, %46 ], [ 0, %4 ]
  %11 = phi i32 [ %49, %46 ], [ 0, %4 ]
  %12 = phi i32 [ %20, %46 ], [ 0, %4 ]
  %13 = phi i32 [ %48, %46 ], [ %0, %4 ]
  %14 = phi i32 [ %47, %46 ], [ %1, %4 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %10, metadata !9895, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %11, metadata !9893, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %12, metadata !9892, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %13, metadata !9888, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %14, metadata !9889, metadata !DIExpression()), !dbg !9897
  %15 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %12, i32 1, !dbg !9904
  %16 = load i32, i32* %15, align 4, !dbg !9904
  %17 = icmp ult i32 %9, %16, !dbg !9907
  %18 = xor i1 %17, true, !dbg !9908
  %19 = zext i1 %18 to i32, !dbg !9908
  %20 = add i32 %12, %19, !dbg !9908
  call void @llvm.dbg.value(metadata i32 undef, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %20, metadata !9892, metadata !DIExpression()), !dbg !9897
  %21 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %3, i32 %20, i32 0, !dbg !9909
  %22 = load i32, i32* %21, align 4, !dbg !9909
  %23 = add i32 %22, %10, !dbg !9910
  call void @llvm.dbg.value(metadata i32 %23, metadata !9895, metadata !DIExpression()), !dbg !9897
  %24 = icmp ult i32 %23, %13, !dbg !9911
  br i1 %24, label %46, label %25, !dbg !9913

25:                                               ; preds = %8
  %26 = sub i32 %23, %13, !dbg !9914
  call void @llvm.dbg.value(metadata i32 %26, metadata !9894, metadata !DIExpression()), !dbg !9897
  %27 = icmp ult i32 %14, %26, !dbg !9916
  %28 = select i1 %27, i32 %14, i32 %26, !dbg !9918
  call void @llvm.dbg.value(metadata i32 %28, metadata !9894, metadata !DIExpression()), !dbg !9897
  %29 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 0, !dbg !9919
  %30 = load i32, i32* %29, align 4, !dbg !9919
  %31 = icmp eq i32 %30, %28, !dbg !9921
  br i1 %31, label %32, label %36, !dbg !9922

32:                                               ; preds = %25
  %33 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %11, i32 1, !dbg !9923
  %34 = load i32, i32* %33, align 4, !dbg !9925
  %35 = add i32 %34, 1, !dbg !9925
  store i32 %35, i32* %33, align 4, !dbg !9925
  br label %42, !dbg !9926

36:                                               ; preds = %25
  %37 = icmp ne i32 %30, 0, !dbg !9927
  %38 = zext i1 %37 to i32, !dbg !9930
  %39 = add nsw i32 %11, %38, !dbg !9930
  call void @llvm.dbg.value(metadata i32 %39, metadata !9893, metadata !DIExpression()), !dbg !9897
  %40 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 1, !dbg !9931
  store i32 1, i32* %40, align 4, !dbg !9932
  %41 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %2, i32 %39, i32 0, !dbg !9933
  store i32 %28, i32* %41, align 4, !dbg !9934
  br label %42

42:                                               ; preds = %36, %32
  %43 = phi i32 [ %11, %32 ], [ %39, %36 ], !dbg !9897
  call void @llvm.dbg.value(metadata i32 %43, metadata !9893, metadata !DIExpression()), !dbg !9897
  %44 = add i32 %28, %13, !dbg !9935
  call void @llvm.dbg.value(metadata i32 %44, metadata !9888, metadata !DIExpression()), !dbg !9897
  %45 = sub i32 %14, %28, !dbg !9936
  call void @llvm.dbg.value(metadata i32 %45, metadata !9889, metadata !DIExpression()), !dbg !9897
  br label %46, !dbg !9937

46:                                               ; preds = %8, %42
  %47 = phi i32 [ %45, %42 ], [ %14, %8 ]
  %48 = phi i32 [ %44, %42 ], [ %13, %8 ]
  %49 = phi i32 [ %43, %42 ], [ %11, %8 ], !dbg !9938
  call void @llvm.dbg.value(metadata i32 %49, metadata !9893, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %48, metadata !9888, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %47, metadata !9889, metadata !DIExpression()), !dbg !9897
  %50 = add nuw i32 %9, 1, !dbg !9939
  %51 = select i1 %17, i32 %50, i32 1, !dbg !9939
  call void @llvm.dbg.value(metadata i32 %51, metadata !9896, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %23, metadata !9895, metadata !DIExpression()), !dbg !9897
  call void @llvm.dbg.value(metadata i32 %20, metadata !9892, metadata !DIExpression()), !dbg !9897
  %52 = icmp eq i32 %47, 0, !dbg !9900
  br i1 %52, label %53, label %8, !dbg !9903, !llvm.loop !9940

53:                                               ; preds = %46, %4
  ret i32 0, !dbg !9942
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_NOR() local_unnamed_addr #0 !dbg !9943 {
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9947
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !9948
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !9947
  store %struct.hal_cache_region_config_t* %3, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !9949
  %4 = tail call i32 @custom_get_fat_addr() #20, !dbg !9950
  %5 = tail call i32 @custom_get_fat_len() #20, !dbg !9951
  %6 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !9952
  %7 = load i32, i32* @cmem_nor_index, align 4, !dbg !9953
  %8 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %6, i32 %7, i32 4, i32 0, !dbg !9952
  %9 = tail call i32 @CMEM_NOR_Construct_BankInfo(i32 noundef %4, i32 noundef %5, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0), %struct.hal_cache_region_config_t* noundef nonnull %8) #21, !dbg !9954
  %10 = tail call i32 @custom_get_fat_addr() #20, !dbg !9955
  %11 = tail call i32 @custom_get_fat_len() #20, !dbg !9956
  %12 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef %10, i32 noundef %11, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0)) #21, !dbg !9957
  call void @llvm.dbg.value(metadata i32 %12, metadata !9945, metadata !DIExpression()), !dbg !9958
  %13 = icmp eq i32 %12, 0, !dbg !9959
  br i1 %13, label %14, label %46, !dbg !9961

14:                                               ; preds = %0
  call void @llvm.dbg.value(metadata i32 0, metadata !9946, metadata !DIExpression()), !dbg !9958
  store i32 0, i32* @TOTAL_BLOCKS, align 4, !dbg !9962
  store i32 0, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9964
  call void @llvm.dbg.value(metadata i32 0, metadata !9946, metadata !DIExpression()), !dbg !9958
  %15 = load i32, i32* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 0, i32 0), align 4, !dbg !9965
  %16 = icmp eq i32 %15, 0, !dbg !9967
  br i1 %16, label %34, label %17, !dbg !9968

17:                                               ; preds = %14, %27
  %18 = phi i32 [ %31, %27 ], [ %15, %14 ]
  %19 = phi i32 [ %29, %27 ], [ 0, %14 ]
  %20 = phi i32 [ %24, %27 ], [ 0, %14 ]
  %21 = phi i32 [ %28, %27 ], [ 0, %14 ]
  call void @llvm.dbg.value(metadata i32 %19, metadata !9946, metadata !DIExpression()), !dbg !9958
  %22 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %19, i32 1, !dbg !9969
  %23 = load i32, i32* %22, align 4, !dbg !9969
  %24 = add i32 %20, %23, !dbg !9971
  %25 = icmp ugt i32 %18, %21, !dbg !9972
  br i1 %25, label %26, label %27, !dbg !9974

26:                                               ; preds = %17
  store i32 %18, i32* @NOR_LARGEST_BLOCK_SIZE, align 4, !dbg !9975
  br label %27, !dbg !9977

27:                                               ; preds = %17, %26
  %28 = phi i32 [ %21, %17 ], [ %18, %26 ]
  %29 = add nuw nsw i32 %19, 1, !dbg !9978
  call void @llvm.dbg.value(metadata i32 %29, metadata !9946, metadata !DIExpression()), !dbg !9958
  %30 = getelementptr inbounds [8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @RegionInfo, i32 0, i32 %29, i32 0, !dbg !9965
  %31 = load i32, i32* %30, align 4, !dbg !9965
  %32 = icmp eq i32 %31, 0, !dbg !9967
  br i1 %32, label %33, label %17, !dbg !9968, !llvm.loop !9979

33:                                               ; preds = %27
  store i32 %24, i32* @TOTAL_BLOCKS, align 4, !dbg !9971
  br label %34, !dbg !9968

34:                                               ; preds = %33, %14
  %35 = phi i32 [ %28, %33 ], [ 0, %14 ], !dbg !9981
  %36 = mul i32 %35, -5, !dbg !9982
  %37 = add i32 %36, 262144, !dbg !9983
  %38 = lshr i32 %37, 9, !dbg !9984
  store i32 %38, i32* @TOTAL_SECTORS, align 4, !dbg !9985
  %39 = tail call i32 @CMEM_Init_NOR_MTD_Common() #21, !dbg !9986
  call void @llvm.dbg.value(metadata i32 0, metadata !9945, metadata !DIExpression()), !dbg !9958
  %40 = load %struct.CMEMEntryID*, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !9987
  %41 = getelementptr inbounds %struct.CMEMEntryID, %struct.CMEMEntryID* %40, i32 0, i32 0, !dbg !9988
  %42 = load i8, i8* %41, align 1, !dbg !9988
  %43 = icmp eq i8 %42, 3, !dbg !9989
  br i1 %43, label %44, label %46, !dbg !9989

44:                                               ; preds = %34
  %45 = tail call i32 @CMEM_Init_NOR_MTD_SF() #21, !dbg !9990
  call void @llvm.dbg.value(metadata i32 %45, metadata !9945, metadata !DIExpression()), !dbg !9958
  br label %46, !dbg !9992

46:                                               ; preds = %44, %34, %0
  %47 = phi i32 [ %12, %0 ], [ %45, %44 ], [ 3, %34 ], !dbg !9958
  ret i32 %47, !dbg !9993
}

; Function Attrs: noinline nounwind optsize
define dso_local void @CMEM_Init_nor_list(i32 noundef %0) local_unnamed_addr #0 !dbg !9994 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !9998, metadata !DIExpression()), !dbg !9999
  %2 = icmp eq i32 %0, 0, !dbg !10000
  br i1 %2, label %3, label %9, !dbg !10002

3:                                                ; preds = %1
  %4 = tail call i32 @CMEM_Index() #20, !dbg !10003
  store i32 %4, i32* @cmem_nor_index, align 4, !dbg !10005
  %5 = icmp slt i32 %4, 0, !dbg !10006
  br i1 %5, label %6, label %7, !dbg !10008

6:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10009
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.138, i32 0, i32 0), i32 noundef 921, i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.CMEM_Init_nor_list, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.139, i32 0, i32 0)) #23, !dbg !10009
  unreachable, !dbg !10009

7:                                                ; preds = %3
  %8 = tail call %struct.CMEMEntryID* @CMEM_GetIDEntry(i32 noundef %4) #20, !dbg !10014
  store %struct.CMEMEntryID* %8, %struct.CMEMEntryID** @cmem_id, align 4, !dbg !10015
  br label %9, !dbg !10016

9:                                                ; preds = %7, %1
  store %struct.CMEMEntryNOR* getelementptr inbounds (%struct.GFH_CMEM_NOR_INFO_v1, %struct.GFH_CMEM_NOR_INFO_v1* @combo_mem_sw_list, i32 0, i32 1, i32 2, i32 0), %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10017
  ret void, !dbg !10018
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @ComboMem_Initialize() local_unnamed_addr #0 !dbg !10019 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10020
  %1 = tail call i32 @CMEM_Init_NOR() #21, !dbg !10021
  ret i32 %1, !dbg !10022
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @CMEM_Init_FullDriver() local_unnamed_addr #0 !dbg !10023 {
  tail call void @CMEM_Init_nor_list(i32 noundef 0) #21, !dbg !10026
  %1 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10027
  %2 = load i32, i32* @cmem_nor_index, align 4, !dbg !10028
  %3 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 1, !dbg !10029
  %4 = load i16, i16* %3, align 2, !dbg !10029
  %5 = zext i16 %4 to i32, !dbg !10027
  store i32 %5, i32* @PAGE_BUFFER_SIZE, align 4, !dbg !10030
  %6 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 3, i32 0, !dbg !10031
  store %struct.hal_cache_region_config_t* %6, %struct.hal_cache_region_config_t** @BlockLayout, align 4, !dbg !10032
  %7 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %1, i32 %2, i32 4, i32 0, !dbg !10033
  %8 = bitcast %struct.hal_cache_region_config_t* %7 to i8*, !dbg !10033
  %9 = tail call i8* @memcpy(i8* noundef bitcast ([8 x %struct.hal_cache_region_config_t]* @BankInfo to i8*), i8* noundef nonnull %8, i32 noundef 64) #20, !dbg !10034
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @StatusMap, i32 0, i32 0), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 12), align 4, !dbg !10035
  store %struct.SF_MTD_CMD* @sf_dal_data_cmd, %struct.SF_MTD_CMD** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 13), align 4, !dbg !10036
  store i16 0, i16* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 23), align 2, !dbg !10037
  store i32 xor (i32 ptrtoint ([8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo to i32), i32 -1), i32* getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 0), align 4, !dbg !10038
  store i8* inttoptr (i32 134217728 to i8*), i8** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 1), align 4, !dbg !10039
  %10 = load %struct.CMEMEntryNOR*, %struct.CMEMEntryNOR** @nor_list, align 4, !dbg !10040
  %11 = load i32, i32* @cmem_nor_index, align 4, !dbg !10041
  %12 = getelementptr inbounds %struct.CMEMEntryNOR, %struct.CMEMEntryNOR* %10, i32 %11, i32 2, !dbg !10042
  %13 = load i32, i32* %12, align 4, !dbg !10042
  %14 = tail call i32 @SF_DAL_Init_Driver(%struct.NOR_MTD_Driver* noundef nonnull @NORFlashMtd, %struct.SF_MTD_Data* noundef nonnull @EntireDiskMtdData, i32 noundef 134217728, i32 noundef %13) #20, !dbg !10043
  call void @llvm.dbg.value(metadata i32 %14, metadata !10025, metadata !DIExpression()), !dbg !10044
  %15 = icmp eq i32 %14, -120, !dbg !10045
  br i1 %15, label %16, label %17, !dbg !10048

16:                                               ; preds = %0
  tail call void @Flash_ReturnReady() #20, !dbg !10049
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.138, i32 0, i32 0), i32 noundef 1063, i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.CMEM_Init_FullDriver, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.139, i32 0, i32 0)) #23, !dbg !10049
  unreachable, !dbg !10049

17:                                               ; preds = %0
  %18 = tail call i32 @NOR_Get_FlashSizeFromBankInfo(%struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @BankInfo, i32 0, i32 0)) #21, !dbg !10051
  store i32 %18, i32* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 0), align 4, !dbg !10052
  %19 = tail call i32 @NOR_Construct_RegionInfo(i32 noundef 0, i32 noundef %18, %struct.hal_cache_region_config_t* noundef getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0)) #21, !dbg !10053
  store %struct.hal_cache_region_config_t* getelementptr inbounds ([8 x %struct.hal_cache_region_config_t], [8 x %struct.hal_cache_region_config_t]* @EntireDiskRegionInfo, i32 0, i32 0), %struct.hal_cache_region_config_t** getelementptr inbounds (%struct.SF_MTD_Data, %struct.SF_MTD_Data* @EntireDiskMtdData, i32 0, i32 5), align 4, !dbg !10054
  store %struct.NOR_MTD_Driver* @NORFlashMtd, %struct.NOR_MTD_Driver** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 1), align 4, !dbg !10055
  store i8* bitcast (%struct.SF_MTD_Data* @EntireDiskMtdData to i8*), i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10056
  store i8 0, i8* getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 4), align 4, !dbg !10057
  ret i32 0, !dbg !10058
}

; Function Attrs: optsize
declare dso_local i8* @memcpy(i8* noundef, i8* noundef, i32 noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @CreateFDMLock() local_unnamed_addr #10 !dbg !10059 {
  ret void, !dbg !10060
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @GetFDMLock() local_unnamed_addr #0 !dbg !10061 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10064
  call void @llvm.dbg.value(metadata i32 %1, metadata !10063, metadata !DIExpression()), !dbg !10065
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !10066
  br i1 %2, label %4, label %3, !dbg !10068

3:                                                ; preds = %0
  store i1 true, i1* @FDMMutex, align 4, !dbg !10069
  br label %4, !dbg !10071

4:                                                ; preds = %0, %3
  %5 = phi i32 [ 0, %3 ], [ -2, %0 ], !dbg !10072
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !10072
  ret i32 %5, !dbg !10073
}

; Function Attrs: noinline nounwind optsize
define dso_local void @FreeFDMLock() local_unnamed_addr #0 !dbg !10074 {
  %1 = tail call i32 @SaveAndSetIRQMask() #20, !dbg !10077
  call void @llvm.dbg.value(metadata i32 %1, metadata !10076, metadata !DIExpression()), !dbg !10078
  %2 = load i1, i1* @FDMMutex, align 4, !dbg !10079
  br i1 %2, label %3, label %4, !dbg !10081

3:                                                ; preds = %0
  store i1 false, i1* @FDMMutex, align 4, !dbg !10082
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !10084
  ret void, !dbg !10085

4:                                                ; preds = %0
  tail call void @RestoreIRQMask(i32 noundef %1) #20, !dbg !10086
  tail call void @Flash_ReturnReady() #20, !dbg !10088
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.144, i32 0, i32 0), i32 noundef 112, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.FreeFDMLock, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.145, i32 0, i32 0)) #23, !dbg !10088
  unreachable, !dbg !10088
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @create_FDM_lock() local_unnamed_addr #10 !dbg !10092 {
  ret void, !dbg !10093
}

; Function Attrs: noinline nounwind optsize
define dso_local void @retrieve_FDM_lock() local_unnamed_addr #0 !dbg !10094 {
  br label %1, !dbg !10097

1:                                                ; preds = %1, %0
  %2 = tail call i32 @GetFDMLock() #21, !dbg !10098
  call void @llvm.dbg.value(metadata i32 %2, metadata !10096, metadata !DIExpression()), !dbg !10100
  %3 = icmp eq i32 %2, 0, !dbg !10101
  br i1 %3, label %4, label %1, !dbg !10102, !llvm.loop !10103

4:                                                ; preds = %1
  ret void, !dbg !10105
}

; Function Attrs: noinline nounwind optsize
define dso_local void @release_FDM_lock() local_unnamed_addr #0 !dbg !10106 {
  tail call void @FreeFDMLock() #21, !dbg !10107
  ret void, !dbg !10108
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10109 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10152, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %1, metadata !10153, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i8* %2, metadata !10154, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.value(metadata i32 %3, metadata !10155, metadata !DIExpression()), !dbg !10158
  %5 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !10159
  %6 = load i32, i32* %5, align 4, !dbg !10159
  call void @llvm.dbg.value(metadata i32 %6, metadata !10157, metadata !DIExpression()), !dbg !10158
  %7 = icmp ule i32 %6, %1, !dbg !10160
  %8 = add i32 %3, %1
  %9 = icmp ugt i32 %8, %6
  %10 = or i1 %7, %9, !dbg !10162
  br i1 %10, label %26, label %11, !dbg !10162

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10163
  %13 = bitcast i8** %12 to %struct.NOR_Flash_MTD_Data**, !dbg !10163
  %14 = load %struct.NOR_Flash_MTD_Data*, %struct.NOR_Flash_MTD_Data** %13, align 4, !dbg !10163
  %15 = getelementptr inbounds %struct.NOR_Flash_MTD_Data, %struct.NOR_Flash_MTD_Data* %14, i32 0, i32 1, !dbg !10164
  %16 = load i8*, i8** %15, align 4, !dbg !10164
  %17 = ptrtoint i8* %16 to i32, !dbg !10165
  %18 = add i32 %17, %1, !dbg !10166
  call void @llvm.dbg.value(metadata i32 %18, metadata !10156, metadata !DIExpression()), !dbg !10158
  %19 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10167
  %20 = load i8, i8* %19, align 4, !dbg !10167, !range !2765
  %21 = icmp eq i8 %20, 0, !dbg !10167
  br i1 %21, label %22, label %23, !dbg !10169

22:                                               ; preds = %11
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !10170
  br label %23, !dbg !10172

23:                                               ; preds = %22, %11
  tail call void @retrieve_FDM_lock() #21, !dbg !10173
  %24 = inttoptr i32 %18 to i8*, !dbg !10174
  %25 = tail call i8* @memcpy(i8* noundef %2, i8* noundef %24, i32 noundef %3) #20, !dbg !10175
  tail call void @release_FDM_lock() #21, !dbg !10176
  br label %26, !dbg !10177

26:                                               ; preds = %4, %23
  %27 = phi i32 [ 0, %23 ], [ 2, %4 ], !dbg !10158
  ret i32 %27, !dbg !10178
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef %0) unnamed_addr #0 !dbg !10179 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10183, metadata !DIExpression()), !dbg !10185
  %2 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10186
  %3 = load i8, i8* %2, align 4, !dbg !10186, !range !2765
  %4 = icmp eq i8 %3, 0, !dbg !10186
  br i1 %4, label %5, label %18, !dbg !10188

5:                                                ; preds = %1
  tail call void @retrieve_FDM_lock() #21, !dbg !10189
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !10190
  %7 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %6, align 4, !dbg !10190
  %8 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %7, i32 0, i32 0, !dbg !10191
  %9 = load i32 (i8*, i8*)*, i32 (i8*, i8*)** %8, align 4, !dbg !10191
  %10 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10192
  %11 = load i8*, i8** %10, align 4, !dbg !10192
  %12 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, !dbg !10193
  %13 = bitcast %struct.NOR_MTD_FlashInfo* %12 to i8*, !dbg !10194
  %14 = tail call i32 %9(i8* noundef %11, i8* noundef nonnull %13) #20, !dbg !10195
  call void @llvm.dbg.value(metadata i32 %14, metadata !10184, metadata !DIExpression()), !dbg !10185
  tail call void @release_FDM_lock() #21, !dbg !10196
  %15 = icmp slt i32 %14, 0, !dbg !10197
  br i1 %15, label %16, label %17, !dbg !10199

16:                                               ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !10200
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.144, i32 0, i32 0), i32 noundef 191, i8* noundef getelementptr inbounds ([12 x i8], [12 x i8]* @__func__.MountDevice, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.145, i32 0, i32 0)) #23, !dbg !10200
  unreachable, !dbg !10200

17:                                               ; preds = %5
  store i8 1, i8* %2, align 4, !dbg !10205
  br label %18, !dbg !10206

18:                                               ; preds = %1, %17
  ret void, !dbg !10206
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1, i8* noundef %2, i32 noundef %3) local_unnamed_addr #0 !dbg !10207 {
  %5 = alloca i16, align 2
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10209, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 %1, metadata !10210, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i8* %2, metadata !10211, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 %3, metadata !10212, metadata !DIExpression()), !dbg !10230
  %6 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 0, !dbg !10231
  %7 = load i32, i32* %6, align 4, !dbg !10231
  call void @llvm.dbg.value(metadata i32 %7, metadata !10215, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 0, metadata !10216, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 0, metadata !10217, metadata !DIExpression()), !dbg !10230
  %8 = icmp ugt i32 %7, %1, !dbg !10232
  br i1 %8, label %9, label %101, !dbg !10234

9:                                                ; preds = %4
  %10 = add i32 %3, %1, !dbg !10235
  %11 = icmp ugt i32 %10, %7, !dbg !10237
  br i1 %11, label %101, label %12, !dbg !10238

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10239
  %14 = load i8, i8* %13, align 4, !dbg !10239, !range !2765
  %15 = icmp eq i8 %14, 0, !dbg !10239
  br i1 %15, label %16, label %17, !dbg !10241

16:                                               ; preds = %12
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !10242
  br label %17, !dbg !10244

17:                                               ; preds = %16, %12
  tail call void @retrieve_FDM_lock() #21, !dbg !10245
  %18 = bitcast i16* %5 to i8*, !dbg !10246
  call void @llvm.dbg.value(metadata i32 0, metadata !10216, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 0, metadata !10217, metadata !DIExpression()), !dbg !10230
  %19 = icmp eq i32 %3, 0, !dbg !10247
  br i1 %19, label %99, label %20, !dbg !10248

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2
  %22 = ptrtoint i8* %2 to i32
  %23 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1
  %24 = getelementptr inbounds i8, i8* %18, i32 1
  br label %25, !dbg !10248

25:                                               ; preds = %20, %96
  %26 = phi i32 [ 0, %20 ], [ %97, %96 ]
  call void @llvm.dbg.value(metadata i32 %26, metadata !10217, metadata !DIExpression()), !dbg !10230
  %27 = load i8*, i8** %21, align 4, !dbg !10249
  %28 = getelementptr inbounds i8, i8* %27, i32 4, !dbg !10250
  %29 = bitcast i8* %28 to i8**, !dbg !10250
  %30 = load i8*, i8** %29, align 4, !dbg !10250
  %31 = ptrtoint i8* %30 to i32, !dbg !10251
  %32 = add i32 %31, %1, !dbg !10252
  %33 = add i32 %32, %26, !dbg !10253
  call void @llvm.dbg.value(metadata i32 %33, metadata !10213, metadata !DIExpression()), !dbg !10230
  %34 = add i32 %26, %22, !dbg !10254
  call void @llvm.dbg.value(metadata i32 %34, metadata !10214, metadata !DIExpression()), !dbg !10230
  %35 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10255
  %36 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %35, i32 0, i32 2, !dbg !10256
  %37 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %36, align 4, !dbg !10256
  %38 = add i32 %26, %1, !dbg !10257
  %39 = call i32 @BlockIndex(i8* noundef %27, i32 noundef %38) #20, !dbg !10258
  %40 = call i8* %37(i8* noundef %27, i32 noundef %39, i32 noundef 0) #20, !dbg !10259
  %41 = and i32 %33, 1, !dbg !10260
  %42 = icmp eq i32 %41, 0, !dbg !10260
  br i1 %42, label %43, label %46, !dbg !10261

43:                                               ; preds = %25
  %44 = sub i32 %3, %26, !dbg !10262
  %45 = icmp eq i32 %44, 1, !dbg !10263
  br i1 %45, label %46, label %57, !dbg !10264

46:                                               ; preds = %43, %25
  %47 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10265
  %48 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %47, i32 0, i32 4, !dbg !10267
  %49 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %48, align 4, !dbg !10267
  %50 = load i8*, i8** %21, align 4, !dbg !10268
  %51 = inttoptr i32 %33 to i8*, !dbg !10269
  %52 = inttoptr i32 %34 to i8*, !dbg !10270
  %53 = call i32 %49(i8* noundef %50, i8* noundef %51, i8* noundef %52, i32 noundef 1) #20, !dbg !10271
  call void @llvm.dbg.value(metadata i32 %53, metadata !10216, metadata !DIExpression()), !dbg !10230
  %54 = icmp eq i32 %53, 0, !dbg !10272
  br i1 %54, label %55, label %99, !dbg !10274

55:                                               ; preds = %46
  %56 = add i32 %26, 1, !dbg !10275
  call void @llvm.dbg.value(metadata i32 %56, metadata !10217, metadata !DIExpression()), !dbg !10230
  br label %96, !dbg !10276

57:                                               ; preds = %43
  %58 = load i8*, i8** %21, align 4, !dbg !10277
  %59 = call i32 @BlockIndex(i8* noundef %58, i32 noundef %38) #20, !dbg !10278
  %60 = call i32 @BlockSize(i8* noundef %58, i32 noundef %59) #20, !dbg !10279
  call void @llvm.dbg.value(metadata i32 %60, metadata !10218, metadata !DIExpression()), !dbg !10280
  call void @llvm.dbg.value(metadata i32 %44, metadata !10222, metadata !DIExpression()), !dbg !10280
  %61 = add i32 %60, %33, !dbg !10281
  %62 = sub i32 0, %60, !dbg !10282
  %63 = and i32 %61, %62, !dbg !10283
  call void @llvm.dbg.value(metadata i32 %63, metadata !10223, metadata !DIExpression()), !dbg !10280
  %64 = add i32 %32, %3, !dbg !10284
  %65 = icmp ugt i32 %64, %63, !dbg !10286
  %66 = sub i32 %63, %33
  %67 = select i1 %65, i32 %66, i32 %44, !dbg !10287
  call void @llvm.dbg.value(metadata i32 %67, metadata !10222, metadata !DIExpression()), !dbg !10280
  %68 = and i32 %67, -2, !dbg !10288
  call void @llvm.dbg.value(metadata i32 %68, metadata !10222, metadata !DIExpression()), !dbg !10280
  %69 = icmp ne i32 %68, 2, !dbg !10289
  %70 = and i32 %34, 1
  %71 = icmp eq i32 %70, 0
  %72 = select i1 %69, i1 true, i1 %71, !dbg !10290
  br i1 %72, label %85, label %73, !dbg !10290

73:                                               ; preds = %57
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %18) #22, !dbg !10246
  call void @llvm.dbg.value(metadata i8* %18, metadata !10229, metadata !DIExpression()), !dbg !10291
  %74 = inttoptr i32 %34 to i8*, !dbg !10292
  %75 = load i8, i8* %74, align 1, !dbg !10293
  call void @llvm.dbg.value(metadata i8 undef, metadata !10224, metadata !DIExpression()), !dbg !10291
  store i8 %75, i8* %18, align 2, !dbg !10294
  %76 = getelementptr inbounds i8, i8* %74, i32 1, !dbg !10295
  %77 = load i8, i8* %76, align 1, !dbg !10296
  store i8 %77, i8* %24, align 1, !dbg !10297
  %78 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10298
  %79 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %78, i32 0, i32 4, !dbg !10299
  %80 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %79, align 4, !dbg !10299
  %81 = load i8*, i8** %21, align 4, !dbg !10300
  %82 = inttoptr i32 %33 to i8*, !dbg !10301
  call void @llvm.dbg.value(metadata i16* %5, metadata !10224, metadata !DIExpression(DW_OP_deref)), !dbg !10291
  %83 = call i32 %80(i8* noundef %81, i8* noundef %82, i8* noundef nonnull %18, i32 noundef 2) #20, !dbg !10302
  call void @llvm.dbg.value(metadata i32 %83, metadata !10216, metadata !DIExpression()), !dbg !10230
  %84 = icmp eq i32 %83, 0, !dbg !10303
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %18) #22, !dbg !10305
  br i1 %84, label %94, label %99

85:                                               ; preds = %57
  %86 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %23, align 4, !dbg !10306
  %87 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %86, i32 0, i32 4, !dbg !10310
  %88 = load i32 (i8*, i8*, i8*, i32)*, i32 (i8*, i8*, i8*, i32)** %87, align 4, !dbg !10310
  %89 = load i8*, i8** %21, align 4, !dbg !10311
  %90 = inttoptr i32 %33 to i8*, !dbg !10312
  %91 = inttoptr i32 %34 to i8*, !dbg !10313
  %92 = call i32 %88(i8* noundef %89, i8* noundef %90, i8* noundef %91, i32 noundef %68) #20, !dbg !10314
  call void @llvm.dbg.value(metadata i32 %92, metadata !10216, metadata !DIExpression()), !dbg !10230
  %93 = icmp eq i32 %92, 0, !dbg !10315
  br i1 %93, label %94, label %99, !dbg !10317

94:                                               ; preds = %73, %85
  call void @llvm.dbg.value(metadata i32 0, metadata !10216, metadata !DIExpression()), !dbg !10230
  %95 = add i32 %68, %26, !dbg !10318
  call void @llvm.dbg.value(metadata i32 %83, metadata !10216, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 %26, metadata !10217, metadata !DIExpression()), !dbg !10230
  br label %96

96:                                               ; preds = %94, %55
  %97 = phi i32 [ %56, %55 ], [ %95, %94 ], !dbg !10319
  call void @llvm.dbg.value(metadata i32 0, metadata !10216, metadata !DIExpression()), !dbg !10230
  call void @llvm.dbg.value(metadata i32 %97, metadata !10217, metadata !DIExpression()), !dbg !10230
  %98 = icmp ult i32 %97, %3, !dbg !10247
  br i1 %98, label %25, label %99, !dbg !10248, !llvm.loop !10320

99:                                               ; preds = %96, %73, %85, %46, %17
  %100 = phi i32 [ 0, %17 ], [ 5, %46 ], [ 5, %85 ], [ 5, %73 ], [ 0, %96 ]
  call void @release_FDM_lock() #21, !dbg !10322
  br label %101, !dbg !10323

101:                                              ; preds = %99, %9, %4
  %102 = phi i32 [ 2, %4 ], [ 3, %9 ], [ %100, %99 ], !dbg !10230
  ret i32 %102, !dbg !10323
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10324 {
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* %0, metadata !10328, metadata !DIExpression()), !dbg !10332
  call void @llvm.dbg.value(metadata i32 %1, metadata !10329, metadata !DIExpression()), !dbg !10332
  %3 = and i32 %1, 16777215, !dbg !10333
  call void @llvm.dbg.value(metadata i32 %3, metadata !10331, metadata !DIExpression()), !dbg !10332
  %4 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 4, !dbg !10334
  %5 = load i8, i8* %4, align 4, !dbg !10334, !range !2765
  %6 = icmp eq i8 %5, 0, !dbg !10334
  br i1 %6, label %7, label %8, !dbg !10336

7:                                                ; preds = %2
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull %0) #21, !dbg !10337
  br label %8, !dbg !10339

8:                                                ; preds = %7, %2
  %9 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 3, i32 0, !dbg !10340
  %10 = load i32, i32* %9, align 4, !dbg !10340
  %11 = icmp ult i32 %3, %10, !dbg !10342
  br i1 %11, label %12, label %27, !dbg !10343

12:                                               ; preds = %8
  tail call void @retrieve_FDM_lock() #21, !dbg !10344
  %13 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 1, !dbg !10345
  %14 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10345
  %15 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %14, i32 0, i32 2, !dbg !10346
  %16 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %15, align 4, !dbg !10346
  %17 = getelementptr inbounds %struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* %0, i32 0, i32 2, !dbg !10347
  %18 = load i8*, i8** %17, align 4, !dbg !10347
  %19 = tail call i8* %16(i8* noundef %18, i32 noundef %3, i32 noundef 0) #20, !dbg !10348
  %20 = load %struct.NOR_MTD_Driver*, %struct.NOR_MTD_Driver** %13, align 4, !dbg !10349
  %21 = getelementptr inbounds %struct.NOR_MTD_Driver, %struct.NOR_MTD_Driver* %20, i32 0, i32 3, !dbg !10350
  %22 = load i32 (i8*, i32)*, i32 (i8*, i32)** %21, align 4, !dbg !10350
  %23 = load i8*, i8** %17, align 4, !dbg !10351
  %24 = tail call i32 %22(i8* noundef %23, i32 noundef %1) #20, !dbg !10352
  call void @llvm.dbg.value(metadata i32 %24, metadata !10330, metadata !DIExpression()), !dbg !10332
  tail call void @release_FDM_lock() #21, !dbg !10353
  %25 = icmp eq i32 %24, 0, !dbg !10354
  %26 = select i1 %25, i32 0, i32 6, !dbg !10332
  br label %27, !dbg !10332

27:                                               ; preds = %12, %8
  %28 = phi i32 [ 2, %8 ], [ %26, %12 ], !dbg !10332
  ret i32 %28, !dbg !10356
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_init() local_unnamed_addr #0 !dbg !10357 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10358
  br i1 %1, label %3, label %2, !dbg !10360

2:                                                ; preds = %0
  tail call void @Custom_NOR_Init() #20, !dbg !10361
  tail call fastcc void @MountDevice(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData) #21, !dbg !10363
  store i1 true, i1* @flash_init_status, align 4, !dbg !10364
  br label %3, !dbg !10365

3:                                                ; preds = %2, %0
  ret i32 0, !dbg !10366
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn
define dso_local i32 @get_NOR_init_status() local_unnamed_addr #4 section ".ram_code" !dbg !10367 {
  %1 = load i1, i1* @flash_init_status, align 4, !dbg !10368
  %2 = select i1 %1, i32 0, i32 -5, !dbg !10368
  ret i32 %2, !dbg !10369
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ReadPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !10370 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10374, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.value(metadata i32 %1, metadata !10375, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.value(metadata i8* %2, metadata !10376, metadata !DIExpression()), !dbg !10381
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10377, metadata !DIExpression()), !dbg !10381
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10382
  call void @llvm.dbg.value(metadata i8* %4, metadata !10378, metadata !DIExpression()), !dbg !10381
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10383
  %6 = ptrtoint i8* %5 to i32, !dbg !10384
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10385
  %8 = bitcast i8* %7 to i8**, !dbg !10385
  %9 = load i8*, i8** %8, align 4, !dbg !10385
  %10 = ptrtoint i8* %9 to i32, !dbg !10386
  %11 = shl i32 %1, 9, !dbg !10387
  %12 = add i32 %11, %6, !dbg !10388
  %13 = sub i32 %12, %10, !dbg !10389
  call void @llvm.dbg.value(metadata i32 %13, metadata !10380, metadata !DIExpression()), !dbg !10381
  %14 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !10390
  call void @llvm.dbg.value(metadata i32 %14, metadata !10379, metadata !DIExpression()), !dbg !10381
  %15 = icmp eq i32 %14, 0, !dbg !10391
  %16 = select i1 %15, i32 0, i32 -13, !dbg !10381
  ret i32 %16, !dbg !10393
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ProgramPhysicalPage(i32 noundef %0, i32 noundef %1, i8* noundef %2) local_unnamed_addr #0 !dbg !10394 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10396, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata i32 %1, metadata !10397, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata i8* %2, metadata !10398, metadata !DIExpression()), !dbg !10403
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10399, metadata !DIExpression()), !dbg !10403
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10404
  call void @llvm.dbg.value(metadata i8* %4, metadata !10400, metadata !DIExpression()), !dbg !10403
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10405
  %6 = ptrtoint i8* %5 to i32, !dbg !10406
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10407
  %8 = bitcast i8* %7 to i8**, !dbg !10407
  %9 = load i8*, i8** %8, align 4, !dbg !10407
  %10 = ptrtoint i8* %9 to i32, !dbg !10408
  %11 = shl i32 %1, 9, !dbg !10409
  %12 = add i32 %11, %6, !dbg !10410
  %13 = sub i32 %12, %10, !dbg !10411
  call void @llvm.dbg.value(metadata i32 %13, metadata !10402, metadata !DIExpression()), !dbg !10403
  %14 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %13, i8* noundef %2, i32 noundef 512) #21, !dbg !10412
  call void @llvm.dbg.value(metadata i32 %14, metadata !10401, metadata !DIExpression()), !dbg !10403
  %15 = icmp eq i32 %14, 0, !dbg !10413
  %16 = select i1 %15, i32 0, i32 -14, !dbg !10403
  ret i32 %16, !dbg !10415
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_ErasePhysicalBlock(i32 noundef %0) local_unnamed_addr #0 !dbg !10416 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10420, metadata !DIExpression()), !dbg !10422
  %2 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0) #21, !dbg !10423
  call void @llvm.dbg.value(metadata i32 %2, metadata !10421, metadata !DIExpression()), !dbg !10422
  %3 = icmp eq i32 %2, 0, !dbg !10424
  %4 = select i1 %3, i32 0, i32 -15, !dbg !10422
  ret i32 %4, !dbg !10426
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockSize(i32 noundef %0) local_unnamed_addr #0 !dbg !10427 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10429, metadata !DIExpression()), !dbg !10432
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10430, metadata !DIExpression()), !dbg !10432
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10433
  call void @llvm.dbg.value(metadata i8* %2, metadata !10431, metadata !DIExpression()), !dbg !10432
  %3 = tail call i32 @BlockSize(i8* noundef %2, i32 noundef %0) #20, !dbg !10434
  ret i32 %3, !dbg !10435
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndex(i32 noundef %0) local_unnamed_addr #0 !dbg !10436 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10438, metadata !DIExpression()), !dbg !10441
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10439, metadata !DIExpression()), !dbg !10441
  %2 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10442
  call void @llvm.dbg.value(metadata i8* %2, metadata !10440, metadata !DIExpression()), !dbg !10441
  %3 = tail call i32 @BlockIndex(i8* noundef %2, i32 noundef %0) #20, !dbg !10443
  ret i32 %3, !dbg !10444
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_Addr2BlockIndexOffset(i32 noundef %0, i32* nocapture noundef writeonly %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10445 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10449, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.value(metadata i32* %1, metadata !10450, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.value(metadata i32* %2, metadata !10451, metadata !DIExpression()), !dbg !10454
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10452, metadata !DIExpression()), !dbg !10454
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10455
  call void @llvm.dbg.value(metadata i8* %4, metadata !10453, metadata !DIExpression()), !dbg !10454
  %5 = tail call i32 @BlockIndex(i8* noundef %4, i32 noundef %0) #20, !dbg !10456
  store i32 %5, i32* %1, align 4, !dbg !10457
  %6 = icmp eq i32 %5, -1, !dbg !10458
  br i1 %6, label %10, label %7, !dbg !10460

7:                                                ; preds = %3
  %8 = tail call i32 @BlockSize(i8* noundef %4, i32 noundef %5) #20, !dbg !10461
  %9 = urem i32 %0, %8, !dbg !10462
  store i32 %9, i32* %2, align 4, !dbg !10463
  br label %10, !dbg !10464

10:                                               ; preds = %3, %7
  %11 = phi i32 [ 0, %7 ], [ -1, %3 ], !dbg !10454
  ret i32 %11, !dbg !10465
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @NOR_BlockIndexOffset2Addr(i32 noundef %0, i32 noundef %1, i32* nocapture noundef writeonly %2) local_unnamed_addr #0 !dbg !10466 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10470, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.value(metadata i32 %1, metadata !10471, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.value(metadata i32* %2, metadata !10472, metadata !DIExpression()), !dbg !10475
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10473, metadata !DIExpression()), !dbg !10475
  %4 = load i8*, i8** getelementptr inbounds (%struct.NOR_FLASH_DISK_Data, %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, i32 0, i32 2), align 4, !dbg !10476
  call void @llvm.dbg.value(metadata i8* %4, metadata !10474, metadata !DIExpression()), !dbg !10475
  %5 = tail call i8* @BlockAddress(i8* noundef %4, i32 noundef %0) #20, !dbg !10477
  %6 = ptrtoint i8* %5 to i32, !dbg !10478
  %7 = getelementptr inbounds i8, i8* %4, i32 4, !dbg !10479
  %8 = bitcast i8* %7 to i8**, !dbg !10479
  %9 = load i8*, i8** %8, align 4, !dbg !10479
  %10 = ptrtoint i8* %9 to i32, !dbg !10480
  %11 = add i32 %6, %1, !dbg !10481
  %12 = sub i32 %11, %10, !dbg !10482
  store i32 %12, i32* %2, align 4, !dbg !10483
  ret i32 0, !dbg !10484
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_rawdisk_error_code(i32 noundef %0) local_unnamed_addr #0 !dbg !10485 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10489, metadata !DIExpression()), !dbg !10490
  %2 = add i32 %0, 2, !dbg !10491
  %3 = icmp ult i32 %2, 9, !dbg !10491
  br i1 %3, label %5, label %4, !dbg !10491

4:                                                ; preds = %5, %1
  tail call void @Flash_ReturnReady() #20, !dbg !10492
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.144, i32 0, i32 0), i32 noundef 558, i8* noundef getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.get_rawdisk_error_code, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.145, i32 0, i32 0)) #23, !dbg !10492
  unreachable, !dbg !10492

5:                                                ; preds = %1
  %6 = trunc i32 %2 to i16, !dbg !10491
  %7 = lshr i16 433, %6, !dbg !10491
  %8 = and i16 %7, 1, !dbg !10491
  %9 = icmp eq i16 %8, 0, !dbg !10491
  br i1 %9, label %4, label %10, !dbg !10491

10:                                               ; preds = %5
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* @switch.table.get_rawdisk_error_code, i32 0, i32 %2, !dbg !10491
  %12 = load i32, i32* %11, align 4, !dbg !10491
  ret i32 %12, !dbg !10502
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @get_block_size_from_address(i32 noundef %0) local_unnamed_addr #0 !dbg !10503 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10508, metadata !DIExpression()), !dbg !10511
  %2 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !10512
  call void @llvm.dbg.value(metadata i32 %2, metadata !10510, metadata !DIExpression()), !dbg !10511
  %3 = icmp eq i32 %2, -1, !dbg !10513
  br i1 %3, label %4, label %5, !dbg !10515

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !10516
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.144, i32 0, i32 0), i32 noundef 568, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.145, i32 0, i32 0)) #23, !dbg !10516
  unreachable, !dbg !10516

5:                                                ; preds = %1
  %6 = tail call i32 @NOR_BlockSize(i32 noundef %2) #21, !dbg !10521
  call void @llvm.dbg.value(metadata i32 %6, metadata !10509, metadata !DIExpression()), !dbg !10511
  switch i32 %6, label %9 [
    i32 4096, label %10
    i32 32768, label %7
    i32 65536, label %8
  ], !dbg !10522

7:                                                ; preds = %5
  br label %10, !dbg !10523

8:                                                ; preds = %5
  br label %10, !dbg !10527

9:                                                ; preds = %5
  tail call void @Flash_ReturnReady() #20, !dbg !10530
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([55 x i8], [55 x i8]* @.str.144, i32 0, i32 0), i32 noundef 578, i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.get_block_size_from_address, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.145, i32 0, i32 0)) #23, !dbg !10530
  unreachable, !dbg !10530

10:                                               ; preds = %5, %8, %7
  %11 = phi i32 [ 1, %7 ], [ 2, %8 ], [ 0, %5 ], !dbg !10535
  ret i32 %11, !dbg !10536
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_init() local_unnamed_addr #0 !dbg !10537 {
  %1 = tail call i32 @NOR_init() #21, !dbg !10538
  ret i32 0, !dbg !10539
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @hal_flash_deinit() local_unnamed_addr #10 !dbg !10540 {
  ret i32 0, !dbg !10541
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_erase(i32 noundef %0, i32 noundef %1) local_unnamed_addr #0 !dbg !10542 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10546, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i32 %1, metadata !10547, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i32 0, metadata !10550, metadata !DIExpression()), !dbg !10551
  switch i32 %1, label %22 [
    i32 0, label %3
    i32 1, label %6
    i32 2, label %9
  ], !dbg !10552

3:                                                ; preds = %2
  %4 = and i32 %0, 4095, !dbg !10553
  %5 = icmp eq i32 %4, 0, !dbg !10557
  br i1 %5, label %12, label %22, !dbg !10558

6:                                                ; preds = %2
  %7 = and i32 %0, 32767, !dbg !10559
  %8 = icmp eq i32 %7, 0, !dbg !10563
  br i1 %8, label %12, label %22, !dbg !10564

9:                                                ; preds = %2
  %10 = and i32 %0, 65535, !dbg !10565
  %11 = icmp eq i32 %10, 0, !dbg !10569
  br i1 %11, label %12, label %22, !dbg !10570

12:                                               ; preds = %9, %6, %3
  %13 = phi i32 [ -100663296, %3 ], [ -83886080, %6 ], [ -67108864, %9 ], !dbg !10571
  call void @llvm.dbg.value(metadata i32 %13, metadata !10550, metadata !DIExpression()), !dbg !10551
  %14 = tail call i32 @NOR_BlockIndex(i32 noundef %0) #21, !dbg !10572
  call void @llvm.dbg.value(metadata i32 %14, metadata !10549, metadata !DIExpression()), !dbg !10551
  %15 = icmp eq i32 %14, -1, !dbg !10573
  br i1 %15, label %22, label %16, !dbg !10575

16:                                               ; preds = %12
  %17 = or i32 %14, %13, !dbg !10576
  call void @llvm.dbg.value(metadata i32 %17, metadata !10549, metadata !DIExpression()), !dbg !10551
  %18 = tail call i32 @eraseRawDiskBlock(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %17) #21, !dbg !10577
  call void @llvm.dbg.value(metadata i32 %18, metadata !10548, metadata !DIExpression()), !dbg !10551
  %19 = icmp eq i32 %18, 0, !dbg !10578
  br i1 %19, label %22, label %20, !dbg !10580

20:                                               ; preds = %16
  %21 = tail call i32 @get_rawdisk_error_code(i32 noundef %18) #21, !dbg !10581
  br label %22, !dbg !10583

22:                                               ; preds = %16, %12, %2, %9, %6, %3, %20
  %23 = phi i32 [ %21, %20 ], [ -3, %3 ], [ -3, %6 ], [ -3, %9 ], [ -3, %2 ], [ -3, %12 ], [ 0, %16 ], !dbg !10551
  ret i32 %23, !dbg !10584
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_read(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10585 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10589, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i8* %1, metadata !10590, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata i32 %2, metadata !10591, metadata !DIExpression()), !dbg !10594
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10592, metadata !DIExpression()), !dbg !10594
  %4 = tail call i32 @readRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !10595
  call void @llvm.dbg.value(metadata i32 %4, metadata !10593, metadata !DIExpression()), !dbg !10594
  %5 = icmp eq i32 %4, 0, !dbg !10596
  br i1 %5, label %8, label %6, !dbg !10598

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !10599
  br label %8, !dbg !10601

8:                                                ; preds = %3, %6
  %9 = phi i32 [ %7, %6 ], [ 0, %3 ], !dbg !10594
  ret i32 %9, !dbg !10602
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @hal_flash_write(i32 noundef %0, i8* noundef %1, i32 noundef %2) local_unnamed_addr #0 !dbg !10603 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10607, metadata !DIExpression()), !dbg !10615
  call void @llvm.dbg.value(metadata i8* %1, metadata !10608, metadata !DIExpression()), !dbg !10615
  call void @llvm.dbg.value(metadata i32 %2, metadata !10609, metadata !DIExpression()), !dbg !10615
  call void @llvm.dbg.value(metadata %struct.NOR_FLASH_DISK_Data* @EntireDiskDriveData, metadata !10610, metadata !DIExpression()), !dbg !10615
  %4 = tail call i32 @writeRawDiskData(%struct.NOR_FLASH_DISK_Data* noundef nonnull @EntireDiskDriveData, i32 noundef %0, i8* noundef %1, i32 noundef %2) #21, !dbg !10616
  call void @llvm.dbg.value(metadata i32 %4, metadata !10611, metadata !DIExpression()), !dbg !10615
  %5 = icmp eq i32 %4, 0, !dbg !10617
  br i1 %5, label %8, label %6, !dbg !10619

6:                                                ; preds = %3
  %7 = tail call i32 @get_rawdisk_error_code(i32 noundef %4) #21, !dbg !10620
  br label %21, !dbg !10622

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @hal_cache_is_cacheable(i32 noundef %0) #20, !dbg !10623
  br i1 %9, label %10, label %21, !dbg !10624

10:                                               ; preds = %8
  %11 = and i32 %0, -32, !dbg !10625
  call void @llvm.dbg.value(metadata i32 %11, metadata !10612, metadata !DIExpression()), !dbg !10627
  %12 = add i32 %0, 32
  %13 = add i32 %12, %2
  %14 = and i32 %13, -32
  call void @llvm.dbg.value(metadata i32 %11, metadata !10612, metadata !DIExpression()), !dbg !10627
  %15 = icmp ugt i32 %11, %14, !dbg !10628
  br i1 %15, label %21, label %16, !dbg !10630

16:                                               ; preds = %10, %16
  %17 = phi i32 [ %19, %16 ], [ %11, %10 ]
  call void @llvm.dbg.value(metadata i32 %17, metadata !10612, metadata !DIExpression()), !dbg !10627
  %18 = tail call i32 @hal_cache_invalidate_one_cache_line(i32 noundef %17) #20, !dbg !10631
  %19 = add i32 %17, 32, !dbg !10633
  call void @llvm.dbg.value(metadata i32 %19, metadata !10612, metadata !DIExpression()), !dbg !10627
  %20 = icmp ugt i32 %19, %14, !dbg !10628
  br i1 %20, label %21, label %16, !dbg !10630, !llvm.loop !10634

21:                                               ; preds = %16, %10, %8, %6
  %22 = phi i32 [ %7, %6 ], [ 0, %8 ], [ 0, %10 ], [ 0, %16 ], !dbg !10615
  ret i32 %22, !dbg !10636
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i8* @BlockAddress(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10637 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10641, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 %1, metadata !10642, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i8* %0, metadata !10643, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 0, metadata !10644, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 0, metadata !10645, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 0, metadata !10646, metadata !DIExpression()), !dbg !10647
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10648
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10648
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10648
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10649
  %7 = load i32, i32* %6, align 4, !dbg !10649
  call void @llvm.dbg.value(metadata i32 %7, metadata !10646, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 0, metadata !10645, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 0, metadata !10644, metadata !DIExpression()), !dbg !10647
  %8 = icmp ugt i32 %7, %1, !dbg !10650
  br i1 %8, label %23, label %9, !dbg !10651

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %20, %9 ], [ %7, %2 ], !dbg !10652
  %11 = phi i32 [ %21, %9 ], [ %7, %2 ]
  %12 = phi i32 [ %18, %9 ], [ 0, %2 ]
  %13 = phi i32 [ %17, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !10646, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 %12, metadata !10645, metadata !DIExpression()), !dbg !10647
  call void @llvm.dbg.value(metadata i32 %13, metadata !10644, metadata !DIExpression()), !dbg !10647
  %14 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 0, !dbg !10654
  %15 = load i32, i32* %14, align 4, !dbg !10654
  %16 = mul i32 %15, %10, !dbg !10655
  %17 = add i32 %16, %13, !dbg !10656
  call void @llvm.dbg.value(metadata i32 %17, metadata !10644, metadata !DIExpression()), !dbg !10647
  %18 = add i32 %12, 1, !dbg !10657
  call void @llvm.dbg.value(metadata i32 %18, metadata !10645, metadata !DIExpression()), !dbg !10647
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 1, !dbg !10658
  %20 = load i32, i32* %19, align 4, !dbg !10658
  %21 = add i32 %20, %11, !dbg !10659
  call void @llvm.dbg.value(metadata i32 %21, metadata !10646, metadata !DIExpression()), !dbg !10647
  %22 = icmp ugt i32 %21, %1, !dbg !10650
  br i1 %22, label %23, label %9, !dbg !10651, !llvm.loop !10660

23:                                               ; preds = %9, %2
  %24 = phi i32 [ %7, %2 ], [ %20, %9 ], !dbg !10662
  %25 = phi i32 [ 0, %2 ], [ %17, %9 ], !dbg !10647
  %26 = phi i32 [ 0, %2 ], [ %18, %9 ], !dbg !10647
  %27 = phi i32 [ %7, %2 ], [ %21, %9 ], !dbg !10647
  call void @llvm.dbg.value(metadata i8* %0, metadata !10643, metadata !DIExpression()), !dbg !10647
  %28 = sub i32 %1, %27, !dbg !10663
  %29 = add i32 %28, %24, !dbg !10664
  %30 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %26, i32 0, !dbg !10665
  %31 = load i32, i32* %30, align 4, !dbg !10665
  %32 = mul i32 %29, %31, !dbg !10666
  %33 = add i32 %32, %25, !dbg !10667
  call void @llvm.dbg.value(metadata i32 %33, metadata !10644, metadata !DIExpression()), !dbg !10647
  %34 = getelementptr inbounds i8, i8* %0, i32 4, !dbg !10668
  %35 = bitcast i8* %34 to i8**, !dbg !10668
  %36 = load i8*, i8** %35, align 4, !dbg !10668
  %37 = getelementptr inbounds i8, i8* %36, i32 %33, !dbg !10669
  ret i8* %37, !dbg !10670
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @MapWindow(i8* nocapture noundef %0, i32 noundef %1, i32 noundef %2) #0 section ".ram_code" !dbg !10671 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10673, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.value(metadata i32 %1, metadata !10674, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.value(metadata i32 %2, metadata !10675, metadata !DIExpression()), !dbg !10677
  call void @llvm.dbg.value(metadata i8* %0, metadata !10676, metadata !DIExpression()), !dbg !10677
  %4 = icmp eq i32 %2, 0, !dbg !10678
  br i1 %4, label %6, label %5, !dbg !10681

5:                                                ; preds = %3
  tail call void @Flash_ReturnReady() #20, !dbg !10682
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.160, i32 0, i32 0), i32 noundef 185, i8* noundef getelementptr inbounds ([10 x i8], [10 x i8]* @__func__.MapWindow, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.161, i32 0, i32 0)) #23, !dbg !10682
  unreachable, !dbg !10682

6:                                                ; preds = %3
  call void @llvm.dbg.value(metadata i8* %0, metadata !10676, metadata !DIExpression()), !dbg !10677
  %7 = tail call fastcc i32 @LookupAddress(i8* noundef %0, i32 noundef %1) #21, !dbg !10684
  %8 = inttoptr i32 %7 to i8*, !dbg !10685
  %9 = getelementptr inbounds i8, i8* %0, i32 24, !dbg !10686
  %10 = bitcast i8* %9 to i8**, !dbg !10686
  store i8* %8, i8** %10, align 4, !dbg !10687
  ret i8* %8, !dbg !10688
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize
define internal fastcc i32 @LookupAddress(i8* nocapture noundef %0, i32 noundef %1) unnamed_addr #13 section ".ram_code" !dbg !2076 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !2080, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata i32 %1, metadata !2081, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata i8* %0, metadata !2082, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata i32 0, metadata !2127, metadata !DIExpression()), !dbg !10689
  %3 = getelementptr inbounds i8, i8* %0, i32 44, !dbg !10690
  %4 = bitcast i8* %3 to [8 x [2 x %struct.hal_cache_region_config_t]]*, !dbg !10690
  %5 = and i32 %1, 7, !dbg !10692
  %6 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 0, !dbg !10693
  %7 = load i32, i32* %6, align 4, !dbg !10693
  %8 = icmp eq i32 %7, -1, !dbg !10694
  br i1 %8, label %62, label %9, !dbg !10695

9:                                                ; preds = %2
  %10 = icmp eq i32 %7, %1, !dbg !10696
  br i1 %10, label %54, label %11, !dbg !10699

11:                                               ; preds = %9
  %12 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 0, !dbg !10700
  %13 = load i32, i32* %12, align 4, !dbg !10700
  %14 = icmp eq i32 %13, -1, !dbg !10703
  br i1 %14, label %44, label %15, !dbg !10704

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, %1, !dbg !10705
  br i1 %16, label %35, label %17, !dbg !10708

17:                                               ; preds = %15
  %18 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10709
  %19 = add i32 %18, 1, !dbg !10709
  store i32 %19, i32* @LookupAddress.look_up_miss, align 4, !dbg !10709
  %20 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10711
  %21 = shl nuw nsw i32 1, %5, !dbg !10713
  %22 = and i32 %20, %21, !dbg !10714
  %23 = icmp eq i32 %22, 0, !dbg !10714
  br i1 %23, label %30, label %24, !dbg !10715

24:                                               ; preds = %17
  store i32 %1, i32* %12, align 4, !dbg !10716
  %25 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10718
  %26 = ptrtoint i8* %25 to i32, !dbg !10719
  %27 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10720
  store i32 %26, i32* %27, align 4, !dbg !10721
  call void @llvm.dbg.value(metadata i32 %26, metadata !2127, metadata !DIExpression()), !dbg !10689
  %28 = xor i32 %21, -1, !dbg !10722
  %29 = and i32 %20, %28, !dbg !10723
  br label %71, !dbg !10724

30:                                               ; preds = %17
  store i32 %1, i32* %6, align 4, !dbg !10725
  %31 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10727
  %32 = ptrtoint i8* %31 to i32, !dbg !10728
  %33 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10729
  store i32 %32, i32* %33, align 4, !dbg !10730
  call void @llvm.dbg.value(metadata i32 %32, metadata !2127, metadata !DIExpression()), !dbg !10689
  %34 = or i32 %20, %21, !dbg !10731
  br label %71

35:                                               ; preds = %15
  %36 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10732
  %37 = add i32 %36, 1, !dbg !10732
  store i32 %37, i32* @LookupAddress.look_up_hit, align 4, !dbg !10732
  %38 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10734
  %39 = load i32, i32* %38, align 4, !dbg !10734
  call void @llvm.dbg.value(metadata i32 %39, metadata !2127, metadata !DIExpression()), !dbg !10689
  %40 = shl nuw nsw i32 1, %5, !dbg !10735
  %41 = xor i32 %40, -1, !dbg !10736
  %42 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10737
  %43 = and i32 %42, %41, !dbg !10737
  br label %71

44:                                               ; preds = %11
  %45 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10738
  %46 = add i32 %45, 1, !dbg !10738
  store i32 %46, i32* @LookupAddress.look_up_miss, align 4, !dbg !10738
  store i32 %1, i32* %12, align 4, !dbg !10740
  %47 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10741
  %48 = ptrtoint i8* %47 to i32, !dbg !10742
  %49 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 1, i32 1, !dbg !10743
  store i32 %48, i32* %49, align 4, !dbg !10744
  call void @llvm.dbg.value(metadata i32 %48, metadata !2127, metadata !DIExpression()), !dbg !10689
  %50 = shl nuw nsw i32 1, %5, !dbg !10745
  %51 = xor i32 %50, -1, !dbg !10746
  %52 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10747
  %53 = and i32 %52, %51, !dbg !10747
  br label %71

54:                                               ; preds = %9
  %55 = load i32, i32* @LookupAddress.look_up_hit, align 4, !dbg !10748
  %56 = add i32 %55, 1, !dbg !10748
  store i32 %56, i32* @LookupAddress.look_up_hit, align 4, !dbg !10748
  %57 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10750
  %58 = load i32, i32* %57, align 4, !dbg !10750
  call void @llvm.dbg.value(metadata i32 %58, metadata !2127, metadata !DIExpression()), !dbg !10689
  %59 = shl nuw nsw i32 1, %5, !dbg !10751
  %60 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10752
  %61 = or i32 %60, %59, !dbg !10752
  br label %71

62:                                               ; preds = %2
  %63 = load i32, i32* @LookupAddress.look_up_miss, align 4, !dbg !10753
  %64 = add i32 %63, 1, !dbg !10753
  store i32 %64, i32* @LookupAddress.look_up_miss, align 4, !dbg !10753
  store i32 %1, i32* %6, align 4, !dbg !10755
  %65 = tail call i8* @BlockAddress(i8* noundef nonnull %0, i32 noundef %1) #21, !dbg !10756
  %66 = ptrtoint i8* %65 to i32, !dbg !10757
  %67 = getelementptr inbounds [8 x [2 x %struct.hal_cache_region_config_t]], [8 x [2 x %struct.hal_cache_region_config_t]]* %4, i32 0, i32 %5, i32 0, i32 1, !dbg !10758
  store i32 %66, i32* %67, align 4, !dbg !10759
  call void @llvm.dbg.value(metadata i32 %66, metadata !2127, metadata !DIExpression()), !dbg !10689
  %68 = shl nuw nsw i32 1, %5, !dbg !10760
  %69 = load i32, i32* @LookupAddress.replaced, align 4, !dbg !10761
  %70 = or i32 %69, %68, !dbg !10761
  br label %71

71:                                               ; preds = %54, %35, %30, %24, %44, %62
  %72 = phi i32 [ %61, %54 ], [ %43, %35 ], [ %34, %30 ], [ %29, %24 ], [ %53, %44 ], [ %70, %62 ]
  %73 = phi i32 [ %58, %54 ], [ %39, %35 ], [ %32, %30 ], [ %26, %24 ], [ %48, %44 ], [ %66, %62 ], !dbg !10762
  store i32 %72, i32* @LookupAddress.replaced, align 4, !dbg !10762
  call void @llvm.dbg.value(metadata i32 %73, metadata !2127, metadata !DIExpression()), !dbg !10689
  ret i32 %73, !dbg !10763
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockSize(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10764 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10766, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.value(metadata i32 %1, metadata !10767, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.value(metadata i8* %0, metadata !10768, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.value(metadata i32 0, metadata !10769, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.value(metadata i32 0, metadata !10770, metadata !DIExpression()), !dbg !10771
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10772
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10772
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10772
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10773
  %7 = load i32, i32* %6, align 4, !dbg !10773
  call void @llvm.dbg.value(metadata i32 %7, metadata !10770, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.value(metadata i32 0, metadata !10769, metadata !DIExpression()), !dbg !10771
  %8 = icmp ugt i32 %7, %1, !dbg !10774
  br i1 %8, label %17, label %9, !dbg !10775

9:                                                ; preds = %2, %9
  %10 = phi i32 [ %15, %9 ], [ %7, %2 ]
  %11 = phi i32 [ %12, %9 ], [ 0, %2 ]
  call void @llvm.dbg.value(metadata i32 %10, metadata !10770, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.value(metadata i32 %11, metadata !10769, metadata !DIExpression()), !dbg !10771
  %12 = add i32 %11, 1, !dbg !10776
  call void @llvm.dbg.value(metadata i32 %12, metadata !10769, metadata !DIExpression()), !dbg !10771
  %13 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %12, i32 1, !dbg !10778
  %14 = load i32, i32* %13, align 4, !dbg !10778
  %15 = add i32 %14, %10, !dbg !10779
  call void @llvm.dbg.value(metadata i32 %15, metadata !10770, metadata !DIExpression()), !dbg !10771
  %16 = icmp ugt i32 %15, %1, !dbg !10774
  br i1 %16, label %17, label %9, !dbg !10775, !llvm.loop !10780

17:                                               ; preds = %9, %2
  %18 = phi i32 [ 0, %2 ], [ %12, %9 ], !dbg !10771
  %19 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %18, i32 0, !dbg !10782
  %20 = load i32, i32* %19, align 4, !dbg !10782
  ret i32 %20, !dbg !10783
}

; Function Attrs: nofree noinline norecurse nosync nounwind optsize readonly
define dso_local i32 @BlockIndex(i8* nocapture noundef readonly %0, i32 noundef %1) local_unnamed_addr #12 section ".ram_code" !dbg !10784 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10786, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 %1, metadata !10787, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i8* %0, metadata !10788, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 0, metadata !10789, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 0, metadata !10790, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 0, metadata !10791, metadata !DIExpression()), !dbg !10792
  %3 = getelementptr inbounds i8, i8* %0, i32 20, !dbg !10793
  %4 = bitcast i8* %3 to %struct.hal_cache_region_config_t**, !dbg !10793
  %5 = load %struct.hal_cache_region_config_t*, %struct.hal_cache_region_config_t** %4, align 4, !dbg !10793
  %6 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 1, !dbg !10794
  %7 = load i32, i32* %6, align 4, !dbg !10794
  %8 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 0, i32 0, !dbg !10795
  %9 = load i32, i32* %8, align 4, !dbg !10795
  %10 = mul i32 %9, %7, !dbg !10796
  call void @llvm.dbg.value(metadata i32 %10, metadata !10790, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 0, metadata !10791, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 0, metadata !10789, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 %1, metadata !10787, metadata !DIExpression()), !dbg !10792
  %11 = icmp ult i32 %10, %1, !dbg !10797
  br i1 %11, label %12, label %30, !dbg !10798

12:                                               ; preds = %2, %20
  %13 = phi i32 [ %25, %20 ], [ %7, %2 ]
  %14 = phi i32 [ %27, %20 ], [ %9, %2 ], !dbg !10799
  %15 = phi i32 [ %21, %20 ], [ 0, %2 ]
  %16 = phi i32 [ %28, %20 ], [ %10, %2 ]
  %17 = phi i32 [ %23, %20 ], [ 0, %2 ]
  %18 = phi i32 [ %22, %20 ], [ %1, %2 ]
  call void @llvm.dbg.value(metadata i32 %15, metadata !10791, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 %16, metadata !10790, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 %17, metadata !10789, metadata !DIExpression()), !dbg !10792
  call void @llvm.dbg.value(metadata i32 %18, metadata !10787, metadata !DIExpression()), !dbg !10792
  %19 = icmp eq i32 %14, 0, !dbg !10798
  br i1 %19, label %36, label %20, !dbg !10800

20:                                               ; preds = %12
  %21 = add i32 %13, %15, !dbg !10801
  call void @llvm.dbg.value(metadata i32 %21, metadata !10791, metadata !DIExpression()), !dbg !10792
  %22 = sub i32 %18, %16, !dbg !10803
  call void @llvm.dbg.value(metadata i32 %22, metadata !10787, metadata !DIExpression()), !dbg !10792
  %23 = add i32 %17, 1, !dbg !10804
  call void @llvm.dbg.value(metadata i32 %23, metadata !10789, metadata !DIExpression()), !dbg !10792
  %24 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 1, !dbg !10805
  %25 = load i32, i32* %24, align 4, !dbg !10805
  %26 = getelementptr inbounds %struct.hal_cache_region_config_t, %struct.hal_cache_region_config_t* %5, i32 %23, i32 0, !dbg !10806
  %27 = load i32, i32* %26, align 4, !dbg !10806
  %28 = mul i32 %27, %25, !dbg !10807
  call void @llvm.dbg.value(metadata i32 %28, metadata !10790, metadata !DIExpression()), !dbg !10792
  %29 = icmp ugt i32 %22, %28, !dbg !10797
  br i1 %29, label %12, label %30, !dbg !10798, !llvm.loop !10808

30:                                               ; preds = %20, %2
  %31 = phi i32 [ %9, %2 ], [ %27, %20 ], !dbg !10810
  %32 = phi i32 [ %1, %2 ], [ %22, %20 ]
  %33 = phi i32 [ 0, %2 ], [ %21, %20 ], !dbg !10792
  %34 = udiv i32 %32, %31, !dbg !10813
  %35 = add i32 %34, %33, !dbg !10814
  call void @llvm.dbg.value(metadata i32 %35, metadata !10791, metadata !DIExpression()), !dbg !10792
  br label %36, !dbg !10815

36:                                               ; preds = %12, %30
  %37 = phi i32 [ %35, %30 ], [ -1, %12 ], !dbg !10816
  call void @llvm.dbg.value(metadata i32 %37, metadata !10791, metadata !DIExpression()), !dbg !10792
  ret i32 %37, !dbg !10817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_ROM_BASE() local_unnamed_addr #10 !dbg !10818 {
  ret i32 134217728, !dbg !10819
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_FLASH_BASE_ADDRESS() local_unnamed_addr #10 !dbg !10820 {
  ret i32 3932160, !dbg !10821
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_Dual_NOR_FLASH_SIZE() local_unnamed_addr #10 !dbg !10822 {
  ret i32 0, !dbg !10823
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @get_NOR_ALLOCATED_FAT_SPACE() local_unnamed_addr #10 !dbg !10824 {
  ret i32 262144, !dbg !10825
}

; Function Attrs: noinline nounwind optsize
define dso_local void @DelayAWhile_UST(i32 noundef %0) local_unnamed_addr #0 section ".ram_code" !dbg !10826 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10828, metadata !DIExpression()), !dbg !10830
  %2 = tail call i32 @hal_gpt_delay_us(i32 noundef %0) #20, !dbg !10831
  call void @llvm.dbg.value(metadata i32 %2, metadata !10829, metadata !DIExpression()), !dbg !10830
  %3 = icmp eq i32 %2, 0, !dbg !10832
  br i1 %3, label %5, label %4, !dbg !10834

4:                                                ; preds = %1
  tail call void @Flash_ReturnReady() #20, !dbg !10835
  tail call void @__assert_func(i8* noundef getelementptr inbounds ([54 x i8], [54 x i8]* @.str.160, i32 0, i32 0), i32 noundef 279, i8* noundef getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.DelayAWhile_UST, i32 0, i32 0), i8* noundef getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1.161, i32 0, i32 0)) #23, !dbg !10835
  unreachable, !dbg !10835

5:                                                ; preds = %1
  ret void, !dbg !10840
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_error_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10841 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10845, metadata !DIExpression()), !dbg !10858
  call void @llvm.dbg.value(metadata i32 %1, metadata !10846, metadata !DIExpression()), !dbg !10858
  call void @llvm.dbg.value(metadata i8* %2, metadata !10847, metadata !DIExpression()), !dbg !10858
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10859
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10859
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10848, metadata !DIExpression()), !dbg !10860
  %7 = bitcast i32* %5 to i8*, !dbg !10861
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10861
  call void @llvm.dbg.value(metadata i32* %5, metadata !10857, metadata !DIExpression(DW_OP_deref)), !dbg !10858
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10862
  call void @llvm.va_start(i8* nonnull %6), !dbg !10863
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10864
  %10 = load i32, i32* %9, align 4, !dbg !10864
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10864
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10864
  call void @llvm.va_end(i8* nonnull %6), !dbg !10865
  %13 = load i32, i32* %5, align 4, !dbg !10866
  call void @llvm.dbg.value(metadata i32 %13, metadata !10857, metadata !DIExpression()), !dbg !10858
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10867
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10868
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10868
  ret void, !dbg !10868
}

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_start(i8*) #18

; Function Attrs: optsize
declare dso_local i32 @vprintf(i8* noundef, [1 x i32]) local_unnamed_addr #5

; Function Attrs: nofree nosync nounwind willreturn
declare void @llvm.va_end(i8*) #18

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_warning_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10869 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10871, metadata !DIExpression()), !dbg !10876
  call void @llvm.dbg.value(metadata i32 %1, metadata !10872, metadata !DIExpression()), !dbg !10876
  call void @llvm.dbg.value(metadata i8* %2, metadata !10873, metadata !DIExpression()), !dbg !10876
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10877
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10877
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10874, metadata !DIExpression()), !dbg !10878
  %7 = bitcast i32* %5 to i8*, !dbg !10879
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10879
  call void @llvm.dbg.value(metadata i32* %5, metadata !10875, metadata !DIExpression(DW_OP_deref)), !dbg !10876
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10880
  call void @llvm.va_start(i8* nonnull %6), !dbg !10881
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10882
  %10 = load i32, i32* %9, align 4, !dbg !10882
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10882
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10882
  call void @llvm.va_end(i8* nonnull %6), !dbg !10883
  %13 = load i32, i32* %5, align 4, !dbg !10884
  call void @llvm.dbg.value(metadata i32 %13, metadata !10875, metadata !DIExpression()), !dbg !10876
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10885
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10886
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10886
  ret void, !dbg !10886
}

; Function Attrs: noinline nounwind optsize
define dso_local void @log_hal_info_internal(i8* nocapture noundef readnone %0, i32 noundef %1, i8* noundef %2, ...) local_unnamed_addr #0 !dbg !10887 {
  %4 = alloca %struct.__va_list, align 4
  %5 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %0, metadata !10889, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i32 %1, metadata !10890, metadata !DIExpression()), !dbg !10894
  call void @llvm.dbg.value(metadata i8* %2, metadata !10891, metadata !DIExpression()), !dbg !10894
  %6 = bitcast %struct.__va_list* %4 to i8*, !dbg !10895
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10895
  call void @llvm.dbg.declare(metadata %struct.__va_list* %4, metadata !10892, metadata !DIExpression()), !dbg !10896
  %7 = bitcast i32* %5 to i8*, !dbg !10897
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10897
  call void @llvm.dbg.value(metadata i32* %5, metadata !10893, metadata !DIExpression(DW_OP_deref)), !dbg !10894
  %8 = call i32 @hal_nvic_save_and_set_interrupt_mask(i32* noundef nonnull %5) #20, !dbg !10898
  call void @llvm.va_start(i8* nonnull %6), !dbg !10899
  %9 = bitcast %struct.__va_list* %4 to i32*, !dbg !10900
  %10 = load i32, i32* %9, align 4, !dbg !10900
  %11 = insertvalue [1 x i32] poison, i32 %10, 0, !dbg !10900
  %12 = call i32 @vprintf(i8* noundef %2, [1 x i32] %11) #20, !dbg !10900
  call void @llvm.va_end(i8* nonnull %6), !dbg !10901
  %13 = load i32, i32* %5, align 4, !dbg !10902
  call void @llvm.dbg.value(metadata i32 %13, metadata !10893, metadata !DIExpression()), !dbg !10894
  %14 = call i32 @hal_nvic_restore_interrupt_mask(i32 noundef %13) #20, !dbg !10903
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !10904
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !10904
  ret void, !dbg !10904
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local void @log_hal_dump_internal(i8* nocapture noundef %0, i32 noundef %1, i8* nocapture noundef %2, i8* nocapture noundef %3, i32 noundef %4, ...) local_unnamed_addr #10 !dbg !10905 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !10911, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %1, metadata !10912, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i8* %2, metadata !10913, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i8* %3, metadata !10914, metadata !DIExpression()), !dbg !10916
  call void @llvm.dbg.value(metadata i32 %4, metadata !10915, metadata !DIExpression()), !dbg !10916
  ret void, !dbg !10917
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_GetSR(i32 noundef %0) local_unnamed_addr #2 section ".tcm_code" !dbg !10918 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10920, metadata !DIExpression()), !dbg !10922
  %2 = shl i32 %0, 20, !dbg !10923
  %3 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10924
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %3, i32 0, i32 33, !dbg !10925
  store volatile i32 %2, i32* %4, align 4, !dbg !10926
  %5 = load volatile i32, i32* %4, align 4, !dbg !10927
  %6 = or i32 %5, 65536, !dbg !10928
  store volatile i32 %6, i32* %4, align 4, !dbg !10929
  br label %7, !dbg !10930

7:                                                ; preds = %7, %1
  %8 = load volatile i32, i32* %4, align 4, !dbg !10931
  %9 = and i32 %8, 1, !dbg !10932
  %10 = icmp eq i32 %9, 0, !dbg !10933
  br i1 %10, label %7, label %11, !dbg !10930, !llvm.loop !10934

11:                                               ; preds = %7
  %12 = load volatile i32, i32* %4, align 4, !dbg !10936
  %13 = lshr i32 %12, 8, !dbg !10937
  %14 = and i32 %13, 255, !dbg !10937
  call void @llvm.dbg.value(metadata i32 %14, metadata !10921, metadata !DIExpression()), !dbg !10922
  ret i32 %14, !dbg !10938
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_SetSR(i32 noundef %0, i32 noundef %1) local_unnamed_addr #2 section ".tcm_code" !dbg !10939 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !10943, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.value(metadata i32 %1, metadata !10944, metadata !DIExpression()), !dbg !10945
  call void @llvm.dbg.value(metadata i32 %1, metadata !10944, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10945
  %3 = shl i32 %1, 24, !dbg !10946
  %4 = shl i32 %0, 20, !dbg !10947
  %5 = or i32 %4, %3, !dbg !10948
  %6 = or i32 %5, 131072, !dbg !10948
  %7 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10949
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %7, i32 0, i32 33, !dbg !10950
  store volatile i32 %6, i32* %8, align 4, !dbg !10951
  %9 = load volatile i32, i32* %8, align 4, !dbg !10952
  %10 = or i32 %9, 65536, !dbg !10953
  store volatile i32 %10, i32* %8, align 4, !dbg !10954
  br label %11, !dbg !10955

11:                                               ; preds = %11, %2
  %12 = load volatile i32, i32* %8, align 4, !dbg !10956
  %13 = and i32 %12, 1, !dbg !10957
  %14 = icmp eq i32 %13, 0, !dbg !10958
  br i1 %14, label %11, label %15, !dbg !10955, !llvm.loop !10959

15:                                               ; preds = %11
  ret void, !dbg !10961
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize willreturn
define dso_local void @__EMI_SetRegValfromCMCP() local_unnamed_addr #7 section ".tcm_code" !dbg !10962 {
  %1 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 0), align 4, !dbg !10963
  store i32 %1, i32* @EMI_GENA_VAL, align 4, !dbg !10964
  %2 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 1), align 4, !dbg !10965
  store i32 %2, i32* @EMI_RDCT_VAL, align 4, !dbg !10966
  %3 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 2), align 4, !dbg !10967
  store i32 %3, i32* @EMI_DSRAM_VAL, align 4, !dbg !10968
  %4 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 3), align 4, !dbg !10969
  store i32 %4, i32* @EMI_MSRAM_VAL, align 4, !dbg !10970
  %5 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 4), align 4, !dbg !10971
  store i32 %5, i32* @EMI_IDL_C_VAL, align 4, !dbg !10972
  %6 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 5), align 4, !dbg !10973
  store i32 %6, i32* @EMI_IDL_D_VAL, align 4, !dbg !10974
  %7 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 6), align 4, !dbg !10975
  store i32 %7, i32* @EMI_IDL_E_VAL, align 4, !dbg !10976
  %8 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 7), align 4, !dbg !10977
  store i32 %8, i32* @EMI_ODL_C_VAL, align 4, !dbg !10978
  %9 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 8), align 4, !dbg !10979
  store i32 %9, i32* @EMI_ODL_D_VAL, align 4, !dbg !10980
  %10 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 9), align 4, !dbg !10981
  store i32 %10, i32* @EMI_ODL_E_VAL, align 4, !dbg !10982
  %11 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 10), align 4, !dbg !10983
  store i32 %11, i32* @EMI_ODL_F_VAL, align 4, !dbg !10984
  %12 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 11), align 4, !dbg !10985
  store i32 %12, i32* @EMI_IO_A_VAL, align 4, !dbg !10986
  %13 = load i32, i32* getelementptr inbounds ([1 x %struct.EMI_SETTINGS], [1 x %struct.EMI_SETTINGS]* @emi_settings, i32 0, i32 0, i32 12), align 4, !dbg !10987
  store i32 %13, i32* @EMI_IO_B_VAL, align 4, !dbg !10988
  ret void, !dbg !10989
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_EnableBandwidthLimiter() local_unnamed_addr #2 section ".tcm_code" !dbg !10990 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !10993
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !10994
  store volatile i32 21553, i32* %2, align 4, !dbg !10995
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !10996
  store volatile i32 20489, i32* %3, align 4, !dbg !10997
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !10998
  store volatile i32 20550, i32* %4, align 4, !dbg !10999
  ret i32 0, !dbg !11000
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @TestCase_MBIST() local_unnamed_addr #2 section ".tcm_code" !dbg !11001 {
  call void @llvm.dbg.declare(metadata [2 x i32]* @__const.TestCase_MBIST.mbist_data, metadata !11005, metadata !DIExpression()), !dbg !11009
  call void @llvm.dbg.value(metadata i32 0, metadata !11003, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata i32 16384, metadata !11004, metadata !DIExpression()), !dbg !11010
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11011
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 65, !dbg !11012
  store volatile i32 0, i32* %2, align 4, !dbg !11013
  call void @llvm.dbg.value(metadata i32 0, metadata !11007, metadata !DIExpression()), !dbg !11010
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 67
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 71
  call void @llvm.dbg.value(metadata i32 0, metadata !11007, metadata !DIExpression()), !dbg !11010
  br label %5, !dbg !11014

5:                                                ; preds = %0, %34
  %6 = phi i32 [ 0, %0 ], [ %35, %34 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11007, metadata !DIExpression()), !dbg !11010
  %7 = shl i32 %6, 12
  call void @llvm.dbg.value(metadata i32 0, metadata !11006, metadata !DIExpression()), !dbg !11010
  br label %8, !dbg !11016

8:                                                ; preds = %5, %31
  %9 = phi i32 [ 0, %5 ], [ %32, %31 ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !11006, metadata !DIExpression()), !dbg !11010
  call void @llvm.dbg.value(metadata i32 0, metadata !11008, metadata !DIExpression()), !dbg !11010
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* @__const.TestCase_MBIST.mbist_data, i32 0, i32 %9
  br label %13, !dbg !11020

11:                                               ; preds = %26
  call void @llvm.dbg.value(metadata i32 undef, metadata !11008, metadata !DIExpression()), !dbg !11010
  %12 = icmp eq i32 %30, 2, !dbg !11024
  br i1 %12, label %31, label %13, !dbg !11020, !llvm.loop !11026

13:                                               ; preds = %8, %11
  %14 = phi i32 [ 0, %8 ], [ %30, %11 ]
  call void @llvm.dbg.value(metadata i32 %14, metadata !11008, metadata !DIExpression()), !dbg !11010
  store volatile i32 0, i32* %2, align 4, !dbg !11028
  store volatile i32 63, i32* %3, align 4, !dbg !11030
  %15 = load i32, i32* %10, align 4, !dbg !11031
  %16 = shl i32 %15, 16, !dbg !11032
  %17 = shl nuw nsw i32 %14, 13, !dbg !11033
  %18 = or i32 %17, %7, !dbg !11034
  %19 = or i32 %18, %16, !dbg !11035
  store volatile i32 %19, i32* %2, align 4, !dbg !11036
  %20 = load volatile i32, i32* %2, align 4, !dbg !11037
  %21 = or i32 %20, 805, !dbg !11037
  store volatile i32 %21, i32* %2, align 4, !dbg !11037
  br label %22, !dbg !11038

22:                                               ; preds = %22, %13
  %23 = load volatile i32, i32* %4, align 4, !dbg !11039
  %24 = and i32 %23, 2, !dbg !11040
  %25 = icmp eq i32 %24, 0, !dbg !11041
  br i1 %25, label %22, label %26, !dbg !11038, !llvm.loop !11042

26:                                               ; preds = %22
  %27 = load volatile i32, i32* %4, align 4, !dbg !11044
  %28 = and i32 %27, 1, !dbg !11046
  %29 = icmp eq i32 %28, 0, !dbg !11047
  %30 = add nuw nsw i32 %14, 1, !dbg !11048
  call void @llvm.dbg.value(metadata i32 %30, metadata !11008, metadata !DIExpression()), !dbg !11010
  br i1 %29, label %11, label %37, !dbg !11049

31:                                               ; preds = %11
  %32 = add nuw nsw i32 %9, 1, !dbg !11050
  call void @llvm.dbg.value(metadata i32 %32, metadata !11006, metadata !DIExpression()), !dbg !11010
  %33 = icmp eq i32 %32, 2, !dbg !11051
  br i1 %33, label %34, label %8, !dbg !11016, !llvm.loop !11052

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %6, 1, !dbg !11054
  call void @llvm.dbg.value(metadata i32 %35, metadata !11007, metadata !DIExpression()), !dbg !11010
  %36 = icmp eq i32 %35, 2, !dbg !11055
  br i1 %36, label %37, label %5, !dbg !11014, !llvm.loop !11056

37:                                               ; preds = %34, %26
  %38 = phi i32 [ -1, %26 ], [ 0, %34 ], !dbg !11010
  store volatile i32 0, i32* %2, align 4, !dbg !11010
  ret i32 %38, !dbg !11058
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @__EMI_DataAutoTrackingMbistTest() local_unnamed_addr #2 section ".tcm_code" !dbg !11059 {
  %1 = tail call i32 @TestCase_MBIST() #21, !dbg !11060
  %2 = icmp ne i32 %1, 0, !dbg !11062
  %3 = sext i1 %2 to i32, !dbg !11063
  ret i32 %3, !dbg !11064
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @__EMI_EnableDataAutoTracking() local_unnamed_addr #2 section ".tcm_code" !dbg !11065 {
  call void @llvm.dbg.value(metadata i32 31, metadata !11067, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.value(metadata i32 0, metadata !11068, metadata !DIExpression()), !dbg !11069
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11070
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !11071
  store volatile i32 0, i32* %2, align 4, !dbg !11072
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !11073
  store volatile i32 0, i32* %3, align 4, !dbg !11074
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !11075
  store volatile i32 0, i32* %4, align 4, !dbg !11076
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !11077
  store volatile i32 0, i32* %5, align 4, !dbg !11078
  call void @llvm.dbg.value(metadata i32 31, metadata !11067, metadata !DIExpression()), !dbg !11069
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !11079
  store volatile i32 522133279, i32* %6, align 4, !dbg !11083
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !11084
  store volatile i32 522133279, i32* %7, align 4, !dbg !11085
  %8 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !11086
  %9 = icmp eq i32 %8, 0, !dbg !11088
  call void @llvm.dbg.value(metadata i32 31, metadata !11067, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11069
  br i1 %9, label %36, label %10, !dbg !11089

10:                                               ; preds = %0, %13
  %11 = phi i32 [ %14, %13 ], [ 31, %0 ]
  call void @llvm.dbg.value(metadata i32 %11, metadata !11067, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.value(metadata i32 %11, metadata !11067, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11069
  call void @llvm.dbg.value(metadata i32 %11, metadata !11067, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11069
  %12 = icmp eq i32 %11, 0, !dbg !11090
  br i1 %12, label %26, label %13, !dbg !11091, !llvm.loop !11092

13:                                               ; preds = %10
  %14 = add nsw i32 %11, -1, !dbg !11094
  call void @llvm.dbg.value(metadata i32 %14, metadata !11067, metadata !DIExpression()), !dbg !11069
  %15 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11095
  %16 = shl i32 %14, 24, !dbg !11096
  %17 = shl i32 %14, 16, !dbg !11097
  %18 = shl i32 %14, 8, !dbg !11098
  %19 = or i32 %17, %14, !dbg !11099
  %20 = or i32 %19, %16, !dbg !11100
  %21 = or i32 %20, %18, !dbg !11101
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 9, !dbg !11079
  store volatile i32 %21, i32* %22, align 4, !dbg !11083
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %15, i32 0, i32 11, !dbg !11084
  store volatile i32 %21, i32* %23, align 4, !dbg !11085
  %24 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !11086
  %25 = icmp eq i32 %24, 0, !dbg !11088
  call void @llvm.dbg.value(metadata i32 %14, metadata !11067, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !11069
  br i1 %25, label %36, label %10, !dbg !11089

26:                                               ; preds = %10, %26
  %27 = phi i32 [ %33, %26 ], [ 1, %10 ]
  call void @llvm.dbg.value(metadata i32 %27, metadata !11068, metadata !DIExpression()), !dbg !11069
  %28 = shl nuw nsw i32 %27, 16, !dbg !11102
  %29 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11108
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %29, i32 0, i32 13, !dbg !11109
  store volatile i32 %28, i32* %30, align 4, !dbg !11110
  %31 = tail call i32 @__EMI_DataAutoTrackingMbistTest() #21, !dbg !11111
  %32 = icmp eq i32 %31, 0, !dbg !11113
  call void @llvm.dbg.value(metadata i32 %27, metadata !11068, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11069
  %33 = add nuw nsw i32 %27, 1
  %34 = icmp eq i32 %33, 32
  %35 = select i1 %32, i1 true, i1 %34, !dbg !11114
  call void @llvm.dbg.value(metadata i32 %33, metadata !11068, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.value(metadata i32 %27, metadata !11068, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !11069
  br i1 %35, label %36, label %26, !dbg !11114, !llvm.loop !11115

36:                                               ; preds = %13, %26, %0
  ret void, !dbg !11118
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_PowerOn_Init() local_unnamed_addr #2 section ".tcm_code" !dbg !11119 {
  store volatile i32 0, i32* inttoptr (i32 -1575944184 to i32*), align 8, !dbg !11120
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11121
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !11122
  store volatile i32 1, i32* %2, align 4, !dbg !11123
  br label %3, !dbg !11124

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !11125
  %5 = and i32 %4, 2, !dbg !11126
  %6 = icmp eq i32 %5, 0, !dbg !11126
  br i1 %6, label %3, label %7, !dbg !11124, !llvm.loop !11127

7:                                                ; preds = %3
  store volatile i32 0, i32* %2, align 4, !dbg !11129
  br label %8, !dbg !11130

8:                                                ; preds = %8, %7
  %9 = load volatile i32, i32* %2, align 4, !dbg !11131
  %10 = and i32 %9, 2, !dbg !11132
  %11 = icmp eq i32 %10, 0, !dbg !11132
  br i1 %11, label %12, label %8, !dbg !11130, !llvm.loop !11133

12:                                               ; preds = %8
  store volatile i32 1515870810, i32* null, align 2147483648, !dbg !11135
  store volatile i32 1515870810, i32* inttoptr (i32 4 to i32*), align 4, !dbg !11136
  %13 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %13, i32 0, i32 33
  br label %15, !dbg !11137

15:                                               ; preds = %15, %12
  %16 = load volatile i32, i32* %14, align 4, !dbg !11138
  %17 = and i32 %16, 1, !dbg !11139
  %18 = icmp eq i32 %17, 0, !dbg !11140
  br i1 %18, label %15, label %19, !dbg !11137, !llvm.loop !11141

19:                                               ; preds = %15
  tail call void @__EMI_SetSR(i32 noundef 0, i32 noundef 15) #21, !dbg !11143
  tail call void @__EMI_SetSR(i32 noundef 4, i32 noundef 8) #21, !dbg !11144
  %20 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %20, i32 0, i32 33
  br label %22, !dbg !11145

22:                                               ; preds = %22, %19
  %23 = load volatile i32, i32* %21, align 4, !dbg !11146
  %24 = and i32 %23, 1, !dbg !11147
  %25 = icmp eq i32 %24, 0, !dbg !11148
  br i1 %25, label %22, label %26, !dbg !11145, !llvm.loop !11149

26:                                               ; preds = %22
  %27 = load volatile i32, i32* inttoptr (i32 -1577058296 to i32*), align 8, !dbg !11151
  %28 = icmp eq i32 %27, 9507, !dbg !11153
  br i1 %28, label %29, label %37, !dbg !11154

29:                                               ; preds = %26
  %30 = load volatile i32, i32* inttoptr (i32 -1576664700 to i32*), align 4, !dbg !11155
  %31 = and i32 %30, 15, !dbg !11158
  %32 = icmp eq i32 %31, 2, !dbg !11159
  %33 = load volatile i32, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !11160
  %34 = and i32 %33, -128, !dbg !11160
  %35 = select i1 %32, i32 1, i32 7
  %36 = or i32 %34, %35, !dbg !11160
  store volatile i32 %36, i32* inttoptr (i32 -1602224060 to i32*), align 4, !dbg !11160
  br label %37, !dbg !11161

37:                                               ; preds = %29, %26
  ret void, !dbg !11161
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !11162 {
  tail call void @EMI_PowerOn_Init() #21, !dbg !11165
  tail call void @__EMI_SetRegValfromCMCP() #21, !dbg !11166
  %1 = tail call i32 @__EMI_GetSR(i32 noundef 0) #21, !dbg !11167
  store i32 %1, i32* @__EMI_CurSR0, align 4, !dbg !11168
  %2 = tail call i32 @__EMI_GetSR(i32 noundef 1) #21, !dbg !11169
  store i32 %2, i32* @__EMI_CurSR1, align 4, !dbg !11170
  %3 = tail call i32 @__EMI_GetSR(i32 noundef 2) #21, !dbg !11171
  store i32 %3, i32* @__EMI_CurSR2, align 4, !dbg !11172
  ret i8 0, !dbg !11173
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local signext i8 @custom_setAdvEMI() local_unnamed_addr #2 section ".tcm_code" !dbg !11174 {
  %1 = load i32, i32* @EMI_IO_A_VAL, align 4, !dbg !11175
  %2 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11176
  %3 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 23, !dbg !11177
  store volatile i32 %1, i32* %3, align 4, !dbg !11178
  %4 = load i32, i32* @EMI_IO_B_VAL, align 4, !dbg !11179
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 25, !dbg !11180
  store volatile i32 %4, i32* %5, align 4, !dbg !11181
  %6 = load i32, i32* @EMI_GENA_VAL, align 4, !dbg !11182
  %7 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 3, !dbg !11183
  store volatile i32 %6, i32* %7, align 4, !dbg !11184
  %8 = load i32, i32* @EMI_RDCT_VAL, align 4, !dbg !11185
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 5, !dbg !11186
  store volatile i32 %8, i32* %9, align 4, !dbg !11187
  %10 = load i32, i32* @EMI_DSRAM_VAL, align 4, !dbg !11188
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 29, !dbg !11189
  store volatile i32 %10, i32* %11, align 4, !dbg !11190
  %12 = load i32, i32* @EMI_MSRAM_VAL, align 4, !dbg !11191
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 31, !dbg !11192
  store volatile i32 %12, i32* %13, align 4, !dbg !11193
  %14 = load i32, i32* @EMI_IDL_C_VAL, align 4, !dbg !11194
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 9, !dbg !11195
  store volatile i32 %14, i32* %15, align 4, !dbg !11196
  %16 = load i32, i32* @EMI_IDL_D_VAL, align 4, !dbg !11197
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 11, !dbg !11198
  store volatile i32 %16, i32* %17, align 4, !dbg !11199
  %18 = load i32, i32* @EMI_IDL_E_VAL, align 4, !dbg !11200
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 13, !dbg !11201
  store volatile i32 %18, i32* %19, align 4, !dbg !11202
  %20 = load i32, i32* @EMI_ODL_C_VAL, align 4, !dbg !11203
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 15, !dbg !11204
  store volatile i32 %20, i32* %21, align 4, !dbg !11205
  %22 = load i32, i32* @EMI_ODL_D_VAL, align 4, !dbg !11206
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 17, !dbg !11207
  store volatile i32 %22, i32* %23, align 4, !dbg !11208
  %24 = load i32, i32* @EMI_ODL_E_VAL, align 4, !dbg !11209
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 19, !dbg !11210
  store volatile i32 %24, i32* %25, align 4, !dbg !11211
  %26 = load i32, i32* @EMI_ODL_F_VAL, align 4, !dbg !11212
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %2, i32 0, i32 21, !dbg !11213
  store volatile i32 %26, i32* %27, align 4, !dbg !11214
  tail call void @__EMI_EnableDataAutoTracking() #21, !dbg !11215
  %28 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11216
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %28, i32 0, i32 7, !dbg !11217
  store volatile i32 806289408, i32* %29, align 4, !dbg !11218
  br label %30, !dbg !11219

30:                                               ; preds = %30, %0
  %31 = load volatile i32, i32* %29, align 4, !dbg !11220
  %32 = and i32 %31, 128, !dbg !11221
  %33 = icmp eq i32 %32, 0, !dbg !11221
  br i1 %33, label %30, label %34, !dbg !11219, !llvm.loop !11222

34:                                               ; preds = %30
  store volatile i32 1880031232, i32* %29, align 4, !dbg !11224
  br label %35, !dbg !11225

35:                                               ; preds = %35, %34
  %36 = load volatile i32, i32* %29, align 4, !dbg !11226
  %37 = and i32 %36, 128, !dbg !11227
  %38 = icmp eq i32 %37, 0, !dbg !11227
  br i1 %38, label %39, label %35, !dbg !11225, !llvm.loop !11228

39:                                               ; preds = %35
  store volatile i32 269418496, i32* %29, align 4, !dbg !11230
  %40 = tail call i32 @__EMI_EnableBandwidthLimiter() #21, !dbg !11231
  ret i8 0, !dbg !11232
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_Save() local_unnamed_addr #2 section ".tcm_code" !dbg !11233 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11234
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11235
  %3 = load volatile i32, i32* %2, align 4, !dbg !11235
  store volatile i32 %3, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !11236
  %4 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !11237
  %5 = load volatile i32, i32* %4, align 4, !dbg !11237
  store volatile i32 %5, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !11238
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !11239
  %7 = load volatile i32, i32* %6, align 4, !dbg !11239
  store volatile i32 %7, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !11240
  %8 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !11241
  %9 = load volatile i32, i32* %8, align 4, !dbg !11241
  store volatile i32 %9, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !11242
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !11243
  %11 = load volatile i32, i32* %10, align 4, !dbg !11243
  store volatile i32 %11, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !11244
  %12 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !11245
  %13 = load volatile i32, i32* %12, align 4, !dbg !11245
  store volatile i32 %13, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !11246
  %14 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !11247
  %15 = load volatile i32, i32* %14, align 4, !dbg !11247
  store volatile i32 %15, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !11248
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !11249
  %17 = load volatile i32, i32* %16, align 4, !dbg !11249
  store volatile i32 %17, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !11250
  %18 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !11251
  %19 = load volatile i32, i32* %18, align 4, !dbg !11251
  store volatile i32 %19, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !11252
  %20 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !11253
  %21 = load volatile i32, i32* %20, align 4, !dbg !11253
  store volatile i32 %21, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !11254
  %22 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !11255
  %23 = load volatile i32, i32* %22, align 4, !dbg !11255
  store volatile i32 %23, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !11256
  %24 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11257
  %25 = load volatile i32, i32* %24, align 4, !dbg !11257
  store volatile i32 %25, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !11258
  %26 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !11259
  %27 = load volatile i32, i32* %26, align 4, !dbg !11259
  store volatile i32 %27, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !11260
  %28 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !11261
  %29 = load volatile i32, i32* %28, align 4, !dbg !11261
  store volatile i32 %29, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !11262
  %30 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !11263
  %31 = load volatile i32, i32* %30, align 4, !dbg !11263
  store volatile i32 %31, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !11264
  %32 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !11265
  %33 = load volatile i32, i32* %32, align 4, !dbg !11265
  store volatile i32 %33, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !11266
  %34 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !11267
  %35 = load volatile i32, i32* %34, align 4, !dbg !11267
  store volatile i32 %35, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !11268
  %36 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !11269
  %37 = load volatile i32, i32* %36, align 4, !dbg !11269
  store volatile i32 %37, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !11270
  %38 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !11271
  %39 = load volatile i32, i32* %38, align 4, !dbg !11271
  store volatile i32 %39, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !11272
  %40 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !11273
  %41 = load volatile i32, i32* %40, align 4, !dbg !11273
  store volatile i32 %41, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !11274
  ret void, !dbg !11275
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @EMI_Setting_restore() local_unnamed_addr #2 section ".tcm_code" !dbg !11276 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !11277

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !11278
  %5 = and i32 %4, 17, !dbg !11279
  %6 = icmp eq i32 %5, 17, !dbg !11280
  br i1 %6, label %7, label %3, !dbg !11277, !llvm.loop !11281

7:                                                ; preds = %3
  %8 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 45), align 4, !dbg !11283
  %9 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 45, !dbg !11284
  store volatile i32 %8, i32* %9, align 4, !dbg !11285
  %10 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 43), align 4, !dbg !11286
  %11 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 43, !dbg !11287
  store volatile i32 %10, i32* %11, align 4, !dbg !11288
  %12 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 41), align 4, !dbg !11289
  %13 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 41, !dbg !11290
  store volatile i32 %12, i32* %13, align 4, !dbg !11291
  %14 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 39), align 4, !dbg !11292
  %15 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 39, !dbg !11293
  store volatile i32 %14, i32* %15, align 4, !dbg !11294
  %16 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 37), align 4, !dbg !11295
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 37, !dbg !11296
  store volatile i32 %16, i32* %17, align 4, !dbg !11297
  %18 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 35), align 4, !dbg !11298
  %19 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 35, !dbg !11299
  store volatile i32 %18, i32* %19, align 4, !dbg !11300
  %20 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 31), align 4, !dbg !11301
  %21 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 31, !dbg !11302
  store volatile i32 %20, i32* %21, align 4, !dbg !11303
  %22 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 29), align 4, !dbg !11304
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 29, !dbg !11305
  store volatile i32 %22, i32* %23, align 4, !dbg !11306
  %24 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 25), align 4, !dbg !11307
  %25 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11308
  store volatile i32 %24, i32* %25, align 4, !dbg !11309
  %26 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 23), align 4, !dbg !11310
  %27 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 23, !dbg !11311
  store volatile i32 %26, i32* %27, align 4, !dbg !11312
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 21), align 4, !dbg !11313
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 21, !dbg !11314
  store volatile i32 %28, i32* %29, align 4, !dbg !11315
  %30 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 19), align 4, !dbg !11316
  %31 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 19, !dbg !11317
  store volatile i32 %30, i32* %31, align 4, !dbg !11318
  %32 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 17), align 4, !dbg !11319
  %33 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 17, !dbg !11320
  store volatile i32 %32, i32* %33, align 4, !dbg !11321
  %34 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 15), align 4, !dbg !11322
  %35 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 15, !dbg !11323
  store volatile i32 %34, i32* %35, align 4, !dbg !11324
  %36 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 13), align 4, !dbg !11325
  %37 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 13, !dbg !11326
  store volatile i32 %36, i32* %37, align 4, !dbg !11327
  %38 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 11), align 4, !dbg !11328
  %39 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 11, !dbg !11329
  store volatile i32 %38, i32* %39, align 4, !dbg !11330
  %40 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 9), align 4, !dbg !11331
  %41 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 9, !dbg !11332
  store volatile i32 %40, i32* %41, align 4, !dbg !11333
  %42 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 5), align 4, !dbg !11334
  %43 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 5, !dbg !11335
  store volatile i32 %42, i32* %43, align 4, !dbg !11336
  %44 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 3), align 4, !dbg !11337
  %45 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 3, !dbg !11338
  store volatile i32 %44, i32* %45, align 4, !dbg !11339
  ret void, !dbg !11340
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_exit() local_unnamed_addr #2 section ".tcm_code" !dbg !11341 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11342
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11343
  %3 = load volatile i32, i32* %2, align 4, !dbg !11343
  %4 = and i32 %3, -2097185, !dbg !11344
  store volatile i32 %4, i32* %2, align 4, !dbg !11345
  %5 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27, !dbg !11346
  store volatile i32 1, i32* %5, align 4, !dbg !11347
  br label %6, !dbg !11348

6:                                                ; preds = %6, %0
  %7 = load volatile i32, i32* %5, align 4, !dbg !11349
  %8 = and i32 %7, 2, !dbg !11350
  %9 = icmp eq i32 %8, 0, !dbg !11350
  br i1 %9, label %6, label %10, !dbg !11348, !llvm.loop !11351

10:                                               ; preds = %6
  store volatile i32 0, i32* %5, align 4, !dbg !11353
  br label %11, !dbg !11354

11:                                               ; preds = %11, %10
  %12 = load volatile i32, i32* %5, align 4, !dbg !11355
  %13 = and i32 %12, 2, !dbg !11356
  %14 = icmp eq i32 %13, 0, !dbg !11356
  br i1 %14, label %15, label %11, !dbg !11354, !llvm.loop !11357

15:                                               ; preds = %11
  tail call void @EMI_Setting_restore() #21, !dbg !11359
  %16 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11360
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 7, !dbg !11361
  store volatile i32 806289408, i32* %17, align 4, !dbg !11362
  br label %18, !dbg !11363

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !11364
  %20 = and i32 %19, 128, !dbg !11365
  %21 = icmp eq i32 %20, 0, !dbg !11365
  br i1 %21, label %18, label %22, !dbg !11363, !llvm.loop !11366

22:                                               ; preds = %18
  store volatile i32 1880031232, i32* %17, align 4, !dbg !11368
  br label %23, !dbg !11369

23:                                               ; preds = %23, %22
  %24 = load volatile i32, i32* %17, align 4, !dbg !11370
  %25 = and i32 %24, 128, !dbg !11371
  %26 = icmp eq i32 %25, 0, !dbg !11371
  br i1 %26, label %27, label %23, !dbg !11369, !llvm.loop !11372

27:                                               ; preds = %23
  store volatile i32 269418496, i32* %17, align 4, !dbg !11374
  %28 = load volatile i32, i32* getelementptr inbounds (%struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* @emi_register_backup, i32 0, i32 1), align 4, !dbg !11375
  %29 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %16, i32 0, i32 1, !dbg !11376
  store volatile i32 %28, i32* %29, align 4, !dbg !11377
  ret void, !dbg !11378
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @mtk_psram_half_sleep_enter() local_unnamed_addr #2 section ".tcm_code" !dbg !11379 {
  tail call void @EMI_Setting_Save() #21, !dbg !11380
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1
  br label %3, !dbg !11381

3:                                                ; preds = %3, %0
  %4 = load volatile i32, i32* %2, align 4, !dbg !11382
  %5 = and i32 %4, 17, !dbg !11383
  %6 = icmp eq i32 %5, 17, !dbg !11384
  br i1 %6, label %7, label %3, !dbg !11381, !llvm.loop !11385

7:                                                ; preds = %3
  %8 = load volatile i32, i32* %2, align 4, !dbg !11387
  %9 = or i32 %8, 1792, !dbg !11388
  store volatile i32 %9, i32* %2, align 4, !dbg !11389
  %10 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 33, !dbg !11390
  store volatile i32 -261685248, i32* %10, align 4, !dbg !11391
  br label %11, !dbg !11392

11:                                               ; preds = %11, %7
  %12 = load volatile i32, i32* %10, align 4, !dbg !11393
  %13 = and i32 %12, 1, !dbg !11394
  %14 = icmp eq i32 %13, 0, !dbg !11395
  br i1 %14, label %11, label %15, !dbg !11392, !llvm.loop !11396

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 7, !dbg !11398
  store volatile i32 0, i32* %16, align 4, !dbg !11399
  %17 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 27
  br label %18, !dbg !11400

18:                                               ; preds = %18, %15
  %19 = load volatile i32, i32* %17, align 4, !dbg !11401
  %20 = and i32 %19, 16, !dbg !11402
  %21 = icmp eq i32 %20, 0, !dbg !11402
  br i1 %21, label %18, label %22, !dbg !11400, !llvm.loop !11403

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 25, !dbg !11405
  %24 = load volatile i32, i32* %23, align 4, !dbg !11405
  %25 = or i32 %24, 2097184, !dbg !11406
  store volatile i32 %25, i32* %23, align 4, !dbg !11407
  ret void, !dbg !11408
}

; Function Attrs: nofree noinline nounwind optsize
define dso_local i32 @EMI_DynamicClockSwitch(i32 noundef %0) local_unnamed_addr #9 section ".tcm_code" !dbg !11409 {
  %2 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %0, metadata !11414, metadata !DIExpression()), !dbg !11416
  %3 = bitcast i32* %2 to i8*, !dbg !11417
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3), !dbg !11417
  call void @llvm.dbg.declare(metadata i32* %2, metadata !11415, metadata !DIExpression()), !dbg !11418
  switch i32 %0, label %24 [
    i32 0, label %4
    i32 1, label %25
  ], !dbg !11419

4:                                                ; preds = %1
  %5 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11420
  %6 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %5, i32 0, i32 7, !dbg !11423
  store volatile i32 0, i32* %6, align 4, !dbg !11424
  store volatile i32 806289408, i32* %6, align 4, !dbg !11425
  br label %7, !dbg !11426

7:                                                ; preds = %7, %4
  %8 = load volatile i32, i32* %6, align 4, !dbg !11427
  %9 = and i32 %8, 128, !dbg !11428
  %10 = icmp eq i32 %9, 0, !dbg !11428
  br i1 %10, label %7, label %11, !dbg !11426, !llvm.loop !11429

11:                                               ; preds = %7
  store volatile i32 1880031232, i32* %6, align 4, !dbg !11431
  br label %12, !dbg !11432

12:                                               ; preds = %12, %11
  %13 = load volatile i32, i32* %6, align 4, !dbg !11433
  %14 = and i32 %13, 128, !dbg !11434
  %15 = icmp eq i32 %14, 0, !dbg !11434
  br i1 %15, label %16, label %12, !dbg !11432, !llvm.loop !11435

16:                                               ; preds = %12
  store volatile i32 269418496, i32* %6, align 4, !dbg !11437
  store volatile i32 0, i32* %2, align 4, !dbg !11438
  %17 = load volatile i32, i32* %2, align 4, !dbg !11440
  %18 = icmp ult i32 %17, 255, !dbg !11442
  br i1 %18, label %19, label %25, !dbg !11443

19:                                               ; preds = %16, %19
  %20 = load volatile i32, i32* %2, align 4, !dbg !11444
  %21 = add i32 %20, 1, !dbg !11444
  store volatile i32 %21, i32* %2, align 4, !dbg !11444
  %22 = load volatile i32, i32* %2, align 4, !dbg !11440
  %23 = icmp ult i32 %22, 255, !dbg !11442
  br i1 %23, label %19, label %25, !dbg !11443, !llvm.loop !11445

24:                                               ; preds = %1
  br label %25, !dbg !11447

25:                                               ; preds = %19, %16, %1, %24
  %26 = phi i32 [ -1, %24 ], [ 0, %1 ], [ 0, %16 ], [ 0, %19 ], !dbg !11416
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3), !dbg !11450
  ret i32 %26, !dbg !11450
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_mask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !11451 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11452
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11453
  %3 = load volatile i32, i32* %2, align 4, !dbg !11453
  %4 = or i32 %3, 1792, !dbg !11454
  store volatile i32 %4, i32* %2, align 4, !dbg !11455
  ret void, !dbg !11456
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @emi_unmask_master() local_unnamed_addr #2 section ".tcm_code" !dbg !11457 {
  %1 = load %struct.EMI_REGISTER_T*, %struct.EMI_REGISTER_T** @emi_register, align 4, !dbg !11458
  %2 = getelementptr inbounds %struct.EMI_REGISTER_T, %struct.EMI_REGISTER_T* %1, i32 0, i32 1, !dbg !11459
  %3 = load volatile i32, i32* %2, align 4, !dbg !11459
  %4 = and i32 %3, -1793, !dbg !11460
  store volatile i32 %4, i32* %2, align 4, !dbg !11461
  ret void, !dbg !11462
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_lfosc() local_unnamed_addr #10 section ".tcm_code" !dbg !11463 {
  ret i1 false, !dbg !11464
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local zeroext i1 @is_clk_use_mpll() local_unnamed_addr #10 section ".tcm_code" !dbg !11465 {
  ret i1 false, !dbg !11466
}

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_208m() local_unnamed_addr #0 section ".tcm_code" !dbg !11467 {
  tail call void @cm_bus_clk_208m_mpll_hfosc() #20, !dbg !11468
  ret void, !dbg !11471
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_208m_mpll_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_104m() local_unnamed_addr #0 section ".tcm_code" !dbg !11472 {
  tail call void @cm_bus_clk_104m_hfosc_hfosc() #20, !dbg !11473
  ret void, !dbg !11476
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_104m_hfosc_hfosc() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @cm_bus_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !11477 {
  tail call void @cm_bus_clk_26m_dcxo_dcxo() #20, !dbg !11478
  ret void, !dbg !11481
}

; Function Attrs: optsize
declare dso_local void @cm_bus_clk_26m_dcxo_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local void @peri_clk_26m() local_unnamed_addr #0 section ".tcm_code" !dbg !11482 {
  tail call void @peri_26m_dcxo() #20, !dbg !11483
  ret void, !dbg !11486
}

; Function Attrs: optsize
declare dso_local void @peri_26m_dcxo() local_unnamed_addr #5 section ".tcm_code"

; Function Attrs: noinline nounwind optsize
define dso_local i32 @__io_putchar(i32 noundef returned %0) local_unnamed_addr #0 !dbg !11487 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11491, metadata !DIExpression()), !dbg !11492
  %2 = trunc i32 %0 to i8, !dbg !11493
  tail call void @hal_uart_put_char(i32 noundef 2, i8 noundef zeroext %2) #20, !dbg !11494
  ret i32 %0, !dbg !11495
}

; Function Attrs: noinline noreturn nounwind optsize
define dso_local i32 @main() local_unnamed_addr #19 !dbg !11496 {
  tail call fastcc void @SystemClock_Config() #21, !dbg !11497
  tail call void @SystemCoreClockUpdate() #20, !dbg !11498
  tail call fastcc void @prvSetupHardware() #21, !dbg !11499
  tail call void asm sideeffect "cpsie i", "~{memory}"() #22, !dbg !11500, !srcloc !11503
  tail call void asm sideeffect "cpsie f", "~{memory}"() #22, !dbg !11504, !srcloc !11507
  %1 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.172, i32 0, i32 0)) #20, !dbg !11508
  %2 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.173, i32 0, i32 0)) #20, !dbg !11509
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([5 x i8], [5 x i8]* @.str.172, i32 0, i32 0)) #20, !dbg !11510
  tail call fastcc void @spi_slave_transfer_data_two_boards_example() #21, !dbg !11511
  br label %4, !dbg !11512

4:                                                ; preds = %0, %4
  br label %4, !dbg !11512, !llvm.loop !11513
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @SystemClock_Config() unnamed_addr #0 !dbg !11515 {
  %1 = tail call i32 @hal_clock_init() #20, !dbg !11516
  ret void, !dbg !11517
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @prvSetupHardware() unnamed_addr #0 !dbg !11518 {
  tail call fastcc void @plain_log_uart_init() #21, !dbg !11519
  %1 = tail call i32 @hal_flash_init() #20, !dbg !11520
  %2 = tail call i32 @hal_nvic_init() #20, !dbg !11521
  ret void, !dbg !11522
}

; Function Attrs: optsize
declare dso_local i32 @printf(i8* noundef, ...) local_unnamed_addr #5

; Function Attrs: noinline nounwind optsize
define internal fastcc void @spi_slave_transfer_data_two_boards_example() unnamed_addr #0 !dbg !11523 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  call void @llvm.dbg.value(metadata i32 0, metadata !11525, metadata !DIExpression()), !dbg !11534
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !11535
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11535
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !11526, metadata !DIExpression()), !dbg !11536
  %3 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i32 0, i32 0)) #20, !dbg !11537
  store volatile i8 0, i8* @spi_slave_poweron_flag, align 1, !dbg !11538
  store volatile i8 0, i8* @spi_slave_cfg_write_flag, align 1, !dbg !11539
  store volatile i8 0, i8* @spi_slave_write_data_flag, align 1, !dbg !11540
  store volatile i8 0, i8* @spi_slave_write_error_flag, align 1, !dbg !11541
  store volatile i8 0, i8* @spi_slave_cfg_read_flag, align 1, !dbg !11542
  store volatile i8 0, i8* @spi_slave_read_data_flag, align 1, !dbg !11543
  store volatile i8 0, i8* @spi_slave_read_error_flag, align 1, !dbg !11544
  store volatile i8 0, i8* @spi_slave_timeout_flag, align 1, !dbg !11545
  %4 = tail call i8* @memset(i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @g_tansfer_buffer, i32 0, i32 0), i32 noundef 0, i32 noundef 1024) #20, !dbg !11546
  %5 = tail call i32 @hal_gpio_init(i32 noundef 25) #20, !dbg !11547
  %6 = tail call i32 @hal_gpio_init(i32 noundef 26) #20, !dbg !11548
  %7 = tail call i32 @hal_gpio_init(i32 noundef 27) #20, !dbg !11549
  %8 = tail call i32 @hal_gpio_init(i32 noundef 28) #20, !dbg !11550
  %9 = tail call i32 @hal_pinmux_set_function(i32 noundef 25, i8 noundef zeroext 9) #20, !dbg !11551
  %10 = tail call i32 @hal_pinmux_set_function(i32 noundef 26, i8 noundef zeroext 9) #20, !dbg !11552
  %11 = tail call i32 @hal_pinmux_set_function(i32 noundef 27, i8 noundef zeroext 9) #20, !dbg !11553
  %12 = tail call i32 @hal_pinmux_set_function(i32 noundef 28, i8 noundef zeroext 9) #20, !dbg !11554
  %13 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !11555
  store i32 0, i32* %13, align 4, !dbg !11556
  %14 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !11557
  store i32 0, i32* %14, align 4, !dbg !11558
  %15 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !11559
  store i32 0, i32* %15, align 4, !dbg !11560
  %16 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !11561
  store i32 -1, i32* %16, align 4, !dbg !11562
  %17 = call i32 @hal_spi_slave_init(i32 noundef 0, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !11563
  %18 = icmp eq i32 %17, 0, !dbg !11565
  br i1 %18, label %21, label %19, !dbg !11566

19:                                               ; preds = %0
  %20 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0)) #20, !dbg !11567
  br label %21, !dbg !11569

21:                                               ; preds = %19, %0
  %22 = call i32 @hal_spi_slave_register_callback(i32 noundef 0, void ([2 x i32], i8*)* noundef nonnull @spi_slave_callback, i8* noundef null) #20, !dbg !11570
  %23 = icmp eq i32 %22, 0, !dbg !11572
  br i1 %23, label %26, label %24, !dbg !11573

24:                                               ; preds = %21
  %25 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i32 0, i32 0)) #20, !dbg !11574
  br label %26, !dbg !11576

26:                                               ; preds = %24, %21
  %27 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i32 0, i32 0)) #20, !dbg !11577
  br label %28, !dbg !11578

28:                                               ; preds = %31, %26
  %29 = load volatile i8, i8* @spi_slave_poweron_flag, align 1, !dbg !11579, !range !2765
  %30 = icmp eq i8 %29, 0, !dbg !11580
  br i1 %30, label %31, label %34, !dbg !11578

31:                                               ; preds = %28
  %32 = load volatile i8, i8* @spi_slave_timeout_flag, align 1, !dbg !11581, !range !2765
  %33 = icmp eq i8 %32, 0, !dbg !11581
  br i1 %33, label %28, label %88, !dbg !11584, !llvm.loop !11585

34:                                               ; preds = %28
  %35 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i32 0, i32 0)) #20, !dbg !11587
  br label %36, !dbg !11588

36:                                               ; preds = %36, %34
  %37 = load volatile i8, i8* @spi_slave_cfg_write_flag, align 1, !dbg !11589, !range !2765
  %38 = icmp eq i8 %37, 0, !dbg !11590
  br i1 %38, label %36, label %39, !dbg !11588, !llvm.loop !11591

39:                                               ; preds = %36
  %40 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i32 0, i32 0)) #20, !dbg !11593
  br label %41, !dbg !11594

41:                                               ; preds = %44, %39
  %42 = load volatile i8, i8* @spi_slave_write_data_flag, align 1, !dbg !11595, !range !2765
  %43 = icmp eq i8 %42, 0, !dbg !11596
  br i1 %43, label %44, label %47, !dbg !11594

44:                                               ; preds = %41
  %45 = load volatile i8, i8* @spi_slave_write_error_flag, align 1, !dbg !11597, !range !2765
  %46 = icmp eq i8 %45, 0, !dbg !11597
  br i1 %46, label %41, label %88, !dbg !11600, !llvm.loop !11601

47:                                               ; preds = %41
  %48 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i32 0, i32 0)) #20, !dbg !11603
  call void @llvm.dbg.value(metadata i32 0, metadata !11525, metadata !DIExpression()), !dbg !11534
  br label %49, !dbg !11604

49:                                               ; preds = %52, %47
  %50 = phi i32 [ 0, %47 ], [ %55, %52 ], !dbg !11606
  call void @llvm.dbg.value(metadata i32 %50, metadata !11525, metadata !DIExpression()), !dbg !11534
  %51 = icmp eq i32 %50, 1024, !dbg !11607
  br i1 %51, label %60, label %52, !dbg !11609

52:                                               ; preds = %49
  %53 = getelementptr inbounds [1024 x i8], [1024 x i8]* @g_tansfer_buffer, i32 0, i32 %50, !dbg !11610
  %54 = load i8, i8* %53, align 1, !dbg !11610
  %55 = add nuw nsw i32 %50, 1, !dbg !11613
  %56 = trunc i32 %55 to i16, !dbg !11614
  %57 = urem i16 %56, 115, !dbg !11614
  %58 = zext i8 %54 to i16, !dbg !11615
  %59 = icmp eq i16 %57, %58, !dbg !11615
  br i1 %59, label %49, label %88, !dbg !11616, !llvm.loop !11617

60:                                               ; preds = %49
  %61 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i32 0, i32 0)) #20, !dbg !11619
  %62 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i32 0, i32 0)) #20, !dbg !11620
  br label %63, !dbg !11621

63:                                               ; preds = %63, %60
  %64 = load volatile i8, i8* @spi_slave_cfg_read_flag, align 1, !dbg !11622, !range !2765
  %65 = icmp eq i8 %64, 0, !dbg !11623
  br i1 %65, label %63, label %66, !dbg !11621, !llvm.loop !11624

66:                                               ; preds = %63
  %67 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i32 0, i32 0)) #20, !dbg !11626
  br label %68, !dbg !11627

68:                                               ; preds = %71, %66
  %69 = load volatile i8, i8* @spi_slave_read_data_flag, align 1, !dbg !11628, !range !2765
  %70 = icmp eq i8 %69, 0, !dbg !11629
  br i1 %70, label %71, label %74, !dbg !11627

71:                                               ; preds = %68
  %72 = load volatile i8, i8* @spi_slave_read_error_flag, align 1, !dbg !11630, !range !2765
  %73 = icmp eq i8 %72, 0, !dbg !11630
  br i1 %73, label %68, label %88, !dbg !11633, !llvm.loop !11634

74:                                               ; preds = %68
  %75 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i32 0, i32 0)) #20, !dbg !11636
  br label %76, !dbg !11637

76:                                               ; preds = %76, %74
  %77 = load volatile i8, i8* @spi_slave_poweron_flag, align 1, !dbg !11638, !range !2765
  %78 = icmp eq i8 %77, 0, !dbg !11638
  br i1 %78, label %79, label %76, !dbg !11637, !llvm.loop !11639

79:                                               ; preds = %76
  %80 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i32 0, i32 0)) #20, !dbg !11641
  %81 = call i32 @hal_spi_slave_deinit(i32 noundef 0) #20, !dbg !11642
  %82 = icmp eq i32 %81, 0, !dbg !11644
  br i1 %82, label %83, label %88, !dbg !11645

83:                                               ; preds = %79
  %84 = call i32 @hal_gpio_deinit(i32 noundef 25) #20, !dbg !11646
  %85 = call i32 @hal_gpio_deinit(i32 noundef 26) #20, !dbg !11647
  %86 = call i32 @hal_gpio_deinit(i32 noundef 27) #20, !dbg !11648
  %87 = call i32 @hal_gpio_deinit(i32 noundef 28) #20, !dbg !11649
  br label %88, !dbg !11650

88:                                               ; preds = %31, %44, %52, %71, %79, %83
  %89 = phi i8* [ getelementptr inbounds ([56 x i8], [56 x i8]* @.str.19, i32 0, i32 0), %83 ], [ getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i32 0, i32 0), %79 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i32 0, i32 0), %71 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i32 0, i32 0), %52 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i32 0, i32 0), %44 ], [ getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i32 0, i32 0), %31 ]
  %90 = call i32 (i8*, ...) @printf(i8* noundef %89) #20, !dbg !11534
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11650
  ret void, !dbg !11650
}

; Function Attrs: noinline nounwind optsize
define internal void @spi_slave_callback([2 x i32] %0, i8* nocapture noundef readnone %1) #0 !dbg !11651 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = extractvalue [2 x i32] %0, 0
  call void @llvm.dbg.value(metadata i32 %5, metadata !11660, metadata !DIExpression(DW_OP_LLVM_fragment, 0, 32)), !dbg !11665
  call void @llvm.dbg.value(metadata i32 undef, metadata !11660, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !11665
  call void @llvm.dbg.value(metadata i8* %1, metadata !11661, metadata !DIExpression()), !dbg !11665
  %6 = bitcast i32* %3 to i8*, !dbg !11666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11666
  %7 = bitcast i32* %4 to i8*, !dbg !11666
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11666
  switch i32 %5, label %53 [
    i32 0, label %8
    i32 1, label %51
    i32 2, label %35
    i32 3, label %37
    i32 4, label %39
    i32 5, label %41
    i32 6, label %43
    i32 7, label %45
    i32 8, label %47
    i32 9, label %49
  ], !dbg !11667

8:                                                ; preds = %2
  %9 = extractvalue [2 x i32] %0, 1
  call void @llvm.dbg.value(metadata i32 %9, metadata !11660, metadata !DIExpression(DW_OP_LLVM_fragment, 32, 32)), !dbg !11665
  call void @llvm.dbg.value(metadata i32 undef, metadata !11662, metadata !DIExpression()), !dbg !11665
  switch i32 %9, label %53 [
    i32 32, label %10
    i32 16, label %12
    i32 1, label %15
    i32 2, label %20
    i32 4, label %25
    i32 8, label %27
    i32 64, label %29
    i32 128, label %31
    i32 256, label %33
  ], !dbg !11668

10:                                               ; preds = %8
  store volatile i8 1, i8* @spi_slave_poweron_flag, align 1, !dbg !11671
  %11 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.20, i32 0, i32 0)) #20, !dbg !11673
  br label %53, !dbg !11674

12:                                               ; preds = %8
  %13 = tail call i32 @hal_spi_slave_deinit(i32 noundef 0) #20, !dbg !11675
  store volatile i8 0, i8* @spi_slave_poweron_flag, align 1, !dbg !11676
  %14 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i32 0, i32 0)) #20, !dbg !11677
  br label %53, !dbg !11678

15:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32* %3, metadata !11663, metadata !DIExpression(DW_OP_deref)), !dbg !11665
  call void @llvm.dbg.value(metadata i32* %4, metadata !11664, metadata !DIExpression(DW_OP_deref)), !dbg !11665
  %16 = call i32 @hal_spi_slave_get_master_read_config(i32 noundef 0, i32* noundef nonnull %3, i32* noundef nonnull %4) #20, !dbg !11679
  %17 = load i32, i32* %4, align 4, !dbg !11680
  call void @llvm.dbg.value(metadata i32 %17, metadata !11664, metadata !DIExpression()), !dbg !11665
  %18 = call i32 @hal_spi_slave_send(i32 noundef 0, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @g_tansfer_buffer, i32 0, i32 0), i32 noundef %17) #20, !dbg !11681
  store volatile i8 1, i8* @spi_slave_cfg_read_flag, align 1, !dbg !11682
  %19 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i32 0, i32 0)) #20, !dbg !11683
  br label %53, !dbg !11684

20:                                               ; preds = %8
  call void @llvm.dbg.value(metadata i32* %3, metadata !11663, metadata !DIExpression(DW_OP_deref)), !dbg !11665
  call void @llvm.dbg.value(metadata i32* %4, metadata !11664, metadata !DIExpression(DW_OP_deref)), !dbg !11665
  %21 = call i32 @hal_spi_slave_get_master_write_config(i32 noundef 0, i32* noundef nonnull %3, i32* noundef nonnull %4) #20, !dbg !11685
  %22 = load i32, i32* %4, align 4, !dbg !11686
  call void @llvm.dbg.value(metadata i32 %22, metadata !11664, metadata !DIExpression()), !dbg !11665
  %23 = call i32 @hal_spi_slave_receive(i32 noundef 0, i8* noundef getelementptr inbounds ([1024 x i8], [1024 x i8]* @g_tansfer_buffer, i32 0, i32 0), i32 noundef %22) #20, !dbg !11687
  store volatile i8 1, i8* @spi_slave_cfg_write_flag, align 1, !dbg !11688
  %24 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23, i32 0, i32 0)) #20, !dbg !11689
  br label %53, !dbg !11690

25:                                               ; preds = %8
  store volatile i8 1, i8* @spi_slave_read_data_flag, align 1, !dbg !11691
  %26 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.24, i32 0, i32 0)) #20, !dbg !11692
  br label %53, !dbg !11693

27:                                               ; preds = %8
  store volatile i8 1, i8* @spi_slave_write_data_flag, align 1, !dbg !11694
  %28 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25, i32 0, i32 0)) #20, !dbg !11695
  br label %53, !dbg !11696

29:                                               ; preds = %8
  store volatile i8 1, i8* @spi_slave_read_error_flag, align 1, !dbg !11697
  %30 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i32 0, i32 0)) #20, !dbg !11698
  br label %53, !dbg !11699

31:                                               ; preds = %8
  store volatile i8 1, i8* @spi_slave_write_error_flag, align 1, !dbg !11700
  %32 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i32 0, i32 0)) #20, !dbg !11701
  br label %53, !dbg !11702

33:                                               ; preds = %8
  store volatile i8 1, i8* @spi_slave_timeout_flag, align 1, !dbg !11703
  %34 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28, i32 0, i32 0)) #20, !dbg !11704
  br label %53, !dbg !11705

35:                                               ; preds = %2
  %36 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.29, i32 0, i32 0)) #20, !dbg !11706
  br label %53, !dbg !11710

37:                                               ; preds = %2
  %38 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([61 x i8], [61 x i8]* @.str.30, i32 0, i32 0)) #20, !dbg !11711
  br label %53, !dbg !11712

39:                                               ; preds = %2
  %40 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.31, i32 0, i32 0)) #20, !dbg !11713
  br label %53, !dbg !11714

41:                                               ; preds = %2
  %42 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.32, i32 0, i32 0)) #20, !dbg !11715
  br label %53, !dbg !11716

43:                                               ; preds = %2
  %44 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([52 x i8], [52 x i8]* @.str.33, i32 0, i32 0)) #20, !dbg !11717
  br label %53, !dbg !11718

45:                                               ; preds = %2
  %46 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([51 x i8], [51 x i8]* @.str.34, i32 0, i32 0)) #20, !dbg !11719
  br label %53, !dbg !11720

47:                                               ; preds = %2
  %48 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([59 x i8], [59 x i8]* @.str.35.174, i32 0, i32 0)) #20, !dbg !11721
  br label %53, !dbg !11722

49:                                               ; preds = %2
  %50 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([58 x i8], [58 x i8]* @.str.36, i32 0, i32 0)) #20, !dbg !11723
  br label %53, !dbg !11724

51:                                               ; preds = %2
  %52 = tail call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([56 x i8], [56 x i8]* @.str.37, i32 0, i32 0)) #20, !dbg !11725
  br label %53

53:                                               ; preds = %2, %51, %49, %47, %45, %43, %41, %39, %37, %35, %10, %12, %15, %20, %25, %27, %29, %31, %33, %8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #22, !dbg !11727
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #22, !dbg !11727
  ret void, !dbg !11727
}

; Function Attrs: noinline nounwind optsize
define internal fastcc void @plain_log_uart_init() unnamed_addr #0 !dbg !11728 {
  %1 = alloca %struct.hal_uart_config_t, align 4
  %2 = bitcast %struct.hal_uart_config_t* %1 to i8*, !dbg !11738
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11738
  call void @llvm.dbg.declare(metadata %struct.hal_uart_config_t* %1, metadata !11730, metadata !DIExpression()), !dbg !11739
  %3 = tail call i32 @hal_gpio_init(i32 noundef 0) #20, !dbg !11740
  %4 = tail call i32 @hal_gpio_init(i32 noundef 1) #20, !dbg !11741
  %5 = tail call i32 @hal_pinmux_set_function(i32 noundef 0, i8 noundef zeroext 3) #20, !dbg !11742
  %6 = tail call i32 @hal_pinmux_set_function(i32 noundef 1, i8 noundef zeroext 3) #20, !dbg !11743
  %7 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 0, !dbg !11744
  store i32 9, i32* %7, align 4, !dbg !11745
  %8 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 1, !dbg !11746
  store i32 3, i32* %8, align 4, !dbg !11747
  %9 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 2, !dbg !11748
  store i32 0, i32* %9, align 4, !dbg !11749
  %10 = getelementptr inbounds %struct.hal_uart_config_t, %struct.hal_uart_config_t* %1, i32 0, i32 3, !dbg !11750
  store i32 0, i32* %10, align 4, !dbg !11751
  %11 = call i32 @hal_uart_init(i32 noundef 2, %struct.hal_uart_config_t* noundef nonnull %1) #20, !dbg !11752
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #22, !dbg !11753
  ret void, !dbg !11753
}

; Function Attrs: optsize
declare dso_local i32 @hal_clock_init() local_unnamed_addr #5

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_close(i32 noundef %0) local_unnamed_addr #10 !dbg !11754 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11756, metadata !DIExpression()), !dbg !11757
  ret i32 0, !dbg !11758
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_fstat(i32 noundef %0, %struct.stat* nocapture noundef readnone %1) local_unnamed_addr #10 !dbg !11759 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11809, metadata !DIExpression()), !dbg !11811
  call void @llvm.dbg.value(metadata %struct.stat* %1, metadata !11810, metadata !DIExpression()), !dbg !11811
  ret i32 0, !dbg !11812
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_isatty(i32 noundef %0) local_unnamed_addr #10 !dbg !11813 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11815, metadata !DIExpression()), !dbg !11816
  ret i32 1, !dbg !11817
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_lseek(i32 noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11818 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11822, metadata !DIExpression()), !dbg !11825
  call void @llvm.dbg.value(metadata i32 %1, metadata !11823, metadata !DIExpression()), !dbg !11825
  call void @llvm.dbg.value(metadata i32 %2, metadata !11824, metadata !DIExpression()), !dbg !11825
  ret i32 0, !dbg !11826
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_open(i8* nocapture noundef readnone %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11827 {
  call void @llvm.dbg.value(metadata i8* %0, metadata !11831, metadata !DIExpression()), !dbg !11834
  call void @llvm.dbg.value(metadata i32 %1, metadata !11832, metadata !DIExpression()), !dbg !11834
  call void @llvm.dbg.value(metadata i32 %2, metadata !11833, metadata !DIExpression()), !dbg !11834
  ret i32 -1, !dbg !11835
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_read(i32 noundef %0, i8* nocapture noundef readnone %1, i32 noundef %2) local_unnamed_addr #10 !dbg !11836 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11840, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata i8* %1, metadata !11841, metadata !DIExpression()), !dbg !11843
  call void @llvm.dbg.value(metadata i32 %2, metadata !11842, metadata !DIExpression()), !dbg !11843
  ret i32 0, !dbg !11844
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_getpid() local_unnamed_addr #10 !dbg !11845 {
  ret i32 1, !dbg !11846
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_kill(i32 noundef %0, i32 noundef %1) local_unnamed_addr #10 !dbg !11847 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11851, metadata !DIExpression()), !dbg !11853
  call void @llvm.dbg.value(metadata i32 %1, metadata !11852, metadata !DIExpression()), !dbg !11853
  ret i32 -1, !dbg !11854
}

; Function Attrs: mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn
define dso_local i32 @_exit(i32 noundef %0) local_unnamed_addr #10 !dbg !11855 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11857, metadata !DIExpression()), !dbg !11858
  ret i32 -1, !dbg !11859
}

; Function Attrs: noinline nounwind optsize
define dso_local i8* @_sbrk_r(%struct._reent* nocapture noundef readnone %0, i32 noundef %1) local_unnamed_addr #0 !dbg !2337 {
  call void @llvm.dbg.value(metadata %struct._reent* %0, metadata !2535, metadata !DIExpression()), !dbg !11860
  call void @llvm.dbg.value(metadata i32 %1, metadata !2536, metadata !DIExpression()), !dbg !11860
  %3 = tail call i8* asm sideeffect "MRS $0, msp\0A", "=r"() #22, !dbg !11861, !srcloc !11862
  call void @llvm.dbg.value(metadata i8* %3, metadata !2538, metadata !DIExpression()), !dbg !11860
  %4 = load i8*, i8** @_sbrk_r.heap_end, align 4, !dbg !11863
  %5 = icmp eq i8* %4, null, !dbg !11865
  %6 = select i1 %5, i8* @end, i8* %4, !dbg !11866
  call void @llvm.dbg.value(metadata i8* %6, metadata !2537, metadata !DIExpression()), !dbg !11860
  %7 = getelementptr inbounds i8, i8* %6, i32 %1, !dbg !11867
  %8 = icmp ult i8* %3, %7, !dbg !11869
  %9 = xor i1 %8, true, !dbg !11870
  %10 = or i1 %5, %9, !dbg !11870
  br i1 %10, label %11, label %13, !dbg !11870

11:                                               ; preds = %2
  %12 = select i1 %8, i8* %6, i8* %7, !dbg !11871
  store i8* %12, i8** @_sbrk_r.heap_end, align 4, !dbg !11870
  br label %13, !dbg !11870

13:                                               ; preds = %2, %11
  %14 = select i1 %8, i8* inttoptr (i32 -1 to i8*), i8* %6, !dbg !11871
  ret i8* %14, !dbg !11870
}

; Function Attrs: noinline nounwind optsize
define dso_local i32 @_write(i32 noundef %0, i8* nocapture noundef readonly %1, i32 noundef returned %2) local_unnamed_addr #0 !dbg !11872 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11874, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.value(metadata i8* %1, metadata !11875, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.value(metadata i32 %2, metadata !11876, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.value(metadata i32 0, metadata !11877, metadata !DIExpression()), !dbg !11878
  %4 = icmp sgt i32 %2, 0, !dbg !11879
  br i1 %4, label %5, label %14, !dbg !11882

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %7 = phi i8* [ %8, %5 ], [ %1, %3 ]
  call void @llvm.dbg.value(metadata i32 %6, metadata !11877, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.value(metadata i8* %7, metadata !11875, metadata !DIExpression()), !dbg !11878
  %8 = getelementptr inbounds i8, i8* %7, i32 1, !dbg !11883
  call void @llvm.dbg.value(metadata i8* %8, metadata !11875, metadata !DIExpression()), !dbg !11878
  %9 = load i8, i8* %7, align 1, !dbg !11885
  %10 = zext i8 %9 to i32, !dbg !11885
  %11 = tail call i32 @__io_putchar(i32 noundef %10) #20, !dbg !11886
  %12 = add nuw nsw i32 %6, 1, !dbg !11887
  call void @llvm.dbg.value(metadata i32 %12, metadata !11877, metadata !DIExpression()), !dbg !11878
  %13 = icmp eq i32 %12, %2, !dbg !11879
  br i1 %13, label %14, label %5, !dbg !11882, !llvm.loop !11888

14:                                               ; preds = %5, %3
  ret i32 %2, !dbg !11890
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local i32 @SysTick_Set(i32 noundef %0) local_unnamed_addr #2 !dbg !11891 {
  call void @llvm.dbg.value(metadata i32 %0, metadata !11893, metadata !DIExpression()), !dbg !11895
  %2 = add i32 %0, -1, !dbg !11896
  %3 = icmp ugt i32 %2, 16777215, !dbg !11898
  br i1 %3, label %8, label %4, !dbg !11899

4:                                                ; preds = %1
  %5 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11900
  call void @llvm.dbg.value(metadata i32 %5, metadata !11894, metadata !DIExpression()), !dbg !11895
  %6 = load volatile i32, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11901
  %7 = and i32 %6, -4, !dbg !11901
  store volatile i32 %7, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11901
  store volatile i32 %2, i32* inttoptr (i32 -536813548 to i32*), align 4, !dbg !11902
  store volatile i32 0, i32* inttoptr (i32 -536813544 to i32*), align 8, !dbg !11903
  store volatile i32 %5, i32* inttoptr (i32 -536813552 to i32*), align 16, !dbg !11904
  br label %8, !dbg !11905

8:                                                ; preds = %1, %4
  %9 = phi i32 [ 0, %4 ], [ 1, %1 ], !dbg !11895
  ret i32 %9, !dbg !11906
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SysInitStatus_Set() local_unnamed_addr #2 !dbg !11907 {
  store volatile i32 1, i32* @System_Initialize_Done, align 4, !dbg !11908
  ret void, !dbg !11909
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local i32 @SysInitStatus_Query() local_unnamed_addr #11 !dbg !11910 {
  %1 = load volatile i32, i32* @System_Initialize_Done, align 4, !dbg !11911
  ret i32 %1, !dbg !11912
}

; Function Attrs: mustprogress nofree noinline norecurse nounwind optsize willreturn
define dso_local void @SystemCoreClockUpdate() local_unnamed_addr #11 !dbg !11913 {
  %1 = load volatile i32, i32* inttoptr (i32 -1576992508 to i32*), align 4, !dbg !11916
  %2 = lshr i32 %1, 3, !dbg !11917
  %3 = and i32 %2, 15, !dbg !11917
  call void @llvm.dbg.value(metadata i32 %3, metadata !11915, metadata !DIExpression()), !dbg !11918
  switch i32 %3, label %6 [
    i32 8, label %5
    i32 6, label %5
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %9
    i32 7, label %9
  ], !dbg !11919

4:                                                ; preds = %0, %0, %0
  br label %6, !dbg !11920

5:                                                ; preds = %0, %0
  br label %9, !dbg !11922

6:                                                ; preds = %0, %4
  %7 = phi i32 [ 104000000, %4 ], [ 26000000, %0 ]
  store i32 %7, i32* @SystemCoreClock, align 4, !dbg !11923
  %8 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11924
  br label %15, !dbg !11926

9:                                                ; preds = %0, %0, %5
  %10 = phi i32 [ 156000000, %5 ], [ 208000000, %0 ], [ 208000000, %0 ]
  store i32 %10, i32* @SystemCoreClock, align 4, !dbg !11923
  %11 = load volatile i32, i32* inttoptr (i32 -1576665024 to i32*), align 64, !dbg !11924
  %12 = and i32 %11, 1024, !dbg !11927
  %13 = icmp eq i32 %12, 0, !dbg !11927
  br i1 %13, label %15, label %14, !dbg !11926

14:                                               ; preds = %9
  store i32 104000000, i32* @SystemCoreClock, align 4, !dbg !11928
  br label %15, !dbg !11930

15:                                               ; preds = %6, %14, %9
  ret void, !dbg !11931
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @SystemInit() local_unnamed_addr #2 !dbg !11932 {
  %1 = load volatile i32, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11933
  %2 = or i32 %1, 15728640, !dbg !11933
  store volatile i32 %2, i32* inttoptr (i32 -536810104 to i32*), align 8, !dbg !11933
  store volatile i32 0, i32* inttoptr (i32 -536810232 to i32*), align 8, !dbg !11934
  %3 = load volatile i32, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11935
  %4 = or i32 %3, 458752, !dbg !11935
  store volatile i32 %4, i32* inttoptr (i32 -536810204 to i32*), align 4, !dbg !11935
  ret void, !dbg !11936
}

; Function Attrs: nofree noinline norecurse nounwind optsize
define dso_local void @CachePreInit() local_unnamed_addr #2 !dbg !11937 {
  store volatile i32 0, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11938
  store volatile i32 19, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11939
  store volatile i32 3, i32* inttoptr (i32 -1601699836 to i32*), align 4, !dbg !11940
  store volatile i32 134283520, i32* inttoptr (i32 -1601634304 to i32*), align 65536, !dbg !11941
  store volatile i32 138280960, i32* inttoptr (i32 -1601634240 to i32*), align 64, !dbg !11942
  store volatile i32 1, i32* inttoptr (i32 -1601699796 to i32*), align 4, !dbg !11943
  store volatile i32 781, i32* inttoptr (i32 -1601699840 to i32*), align 524288, !dbg !11944
  ret void, !dbg !11945
}

attributes #0 = { noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nofree noinline norecurse nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #3 = { noreturn optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #4 = { mustprogress nofree noinline norecurse nosync nounwind optsize readonly willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #5 = { optsize "frame-pointer"="all" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #6 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #7 = { mustprogress nofree noinline norecurse nosync nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #8 = { argmemonly nofree nosync nounwind willreturn }
attributes #9 = { nofree noinline nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #10 = { mustprogress nofree noinline norecurse nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #11 = { mustprogress nofree noinline norecurse nounwind optsize willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #12 = { nofree noinline norecurse nosync nounwind optsize readonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #13 = { nofree noinline norecurse nosync nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #14 = { nofree noinline norecurse nosync nounwind optsize readnone "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #15 = { argmemonly nofree nounwind willreturn writeonly }
attributes #16 = { mustprogress nofree noinline nosync nounwind optsize readnone willreturn "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #17 = { nofree noinline norecurse nosync nounwind optsize writeonly "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #18 = { nofree nosync nounwind willreturn }
attributes #19 = { noinline noreturn nounwind optsize "frame-pointer"="all" "min-legal-vector-width"="0" "no-builtins" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+fp16,+hwdiv,+strict-align,+thumb-mode,+vfp2sp,+vfp3d16sp,+vfp4d16sp,-aes,-bf16,-cdecp0,-cdecp1,-cdecp2,-cdecp3,-cdecp4,-cdecp5,-cdecp6,-cdecp7,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16fml,-fp64,-fullfp16,-hwdiv-arm,-i8mm,-lob,-mve,-mve.fp,-neon,-pacbti,-ras,-sb,-sha2,-vfp2,-vfp3,-vfp3d16,-vfp3sp,-vfp4,-vfp4d16,-vfp4sp" }
attributes #20 = { nobuiltin nounwind optsize "no-builtins" }
attributes #21 = { nobuiltin optsize "no-builtins" }
attributes #22 = { nounwind }
attributes #23 = { nobuiltin noreturn nounwind optsize "no-builtins" }

!llvm.dbg.cu = !{!2, !2663, !94, !345, !628, !2689, !783, !868, !975, !1025, !2693, !1115, !1211, !1536, !2739, !1624, !1635, !1993, !2054, !2741, !2134, !2300, !2312, !2530, !2541, !2651}
!llvm.ident = !{!2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743, !2743}
!llvm.module.flags = !{!2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "g_cache_status", scope: !2, file: !3, line: 51, type: !90, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !53, globals: !89, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_cache.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!4 = !{!5, !17, !37, !44}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 163, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "../../../../../driver/chip/inc/hal_cache.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!7 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16}
!9 = !DIEnumerator(name: "HAL_CACHE_STATUS_INVALID_PARAMETER", value: -7)
!10 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_BUSY", value: -6)
!11 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_CACHE_SIZE", value: -5)
!12 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION", value: -4)
!13 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_ADDRESS", value: -3)
!14 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR_REGION_SIZE", value: -2)
!15 = !DIEnumerator(name: "HAL_CACHE_STATUS_ERROR", value: -1)
!16 = !DIEnumerator(name: "HAL_CACHE_STATUS_OK", value: 0)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 186, baseType: !18, size: 32, elements: !19)
!18 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!19 = !{!20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36}
!20 = !DIEnumerator(name: "HAL_CACHE_REGION_0", value: 0)
!21 = !DIEnumerator(name: "HAL_CACHE_REGION_1", value: 1)
!22 = !DIEnumerator(name: "HAL_CACHE_REGION_2", value: 2)
!23 = !DIEnumerator(name: "HAL_CACHE_REGION_3", value: 3)
!24 = !DIEnumerator(name: "HAL_CACHE_REGION_4", value: 4)
!25 = !DIEnumerator(name: "HAL_CACHE_REGION_5", value: 5)
!26 = !DIEnumerator(name: "HAL_CACHE_REGION_6", value: 6)
!27 = !DIEnumerator(name: "HAL_CACHE_REGION_7", value: 7)
!28 = !DIEnumerator(name: "HAL_CACHE_REGION_8", value: 8)
!29 = !DIEnumerator(name: "HAL_CACHE_REGION_9", value: 9)
!30 = !DIEnumerator(name: "HAL_CACHE_REGION_10", value: 10)
!31 = !DIEnumerator(name: "HAL_CACHE_REGION_11", value: 11)
!32 = !DIEnumerator(name: "HAL_CACHE_REGION_12", value: 12)
!33 = !DIEnumerator(name: "HAL_CACHE_REGION_13", value: 13)
!34 = !DIEnumerator(name: "HAL_CACHE_REGION_14", value: 14)
!35 = !DIEnumerator(name: "HAL_CACHE_REGION_15", value: 15)
!36 = !DIEnumerator(name: "HAL_CACHE_REGION_MAX", value: 16)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 176, baseType: !18, size: 32, elements: !38)
!38 = !{!39, !40, !41, !42, !43}
!39 = !DIEnumerator(name: "HAL_CACHE_SIZE_0KB", value: 0)
!40 = !DIEnumerator(name: "HAL_CACHE_SIZE_8KB", value: 1)
!41 = !DIEnumerator(name: "HAL_CACHE_SIZE_16KB", value: 2)
!42 = !DIEnumerator(name: "HAL_CACHE_SIZE_32KB", value: 3)
!43 = !DIEnumerator(name: "HAL_CACHE_SIZE_MAX", value: 4)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !45, line: 98, baseType: !18, size: 32, elements: !46)
!45 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_cache_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!46 = !{!47, !48, !49, !50, !51, !52}
!47 = !DIEnumerator(name: "CACHE_INVALIDATE_ALL_LINES", value: 1)
!48 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_ADDRESS", value: 2)
!49 = !DIEnumerator(name: "CACHE_INVALIDATE_ONE_LINE_BY_SET_WAY", value: 4)
!50 = !DIEnumerator(name: "CACHE_FLUSH_ALL_LINES", value: 9)
!51 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_ADDRESS", value: 10)
!52 = !DIEnumerator(name: "CACHE_FLUSH_ONE_LINE_BY_SET_WAY", value: 12)
!53 = !{!54, !88}
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !57)
!56 = !DIFile(filename: "../../../../../driver/CMSIS/Device/MTK/mt2523/Include/mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !58)
!58 = !{!59, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !78, !79, !83, !87}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !57, file: !56, line: 261, baseType: !60, size: 32)
!60 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !61)
!61 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !62, line: 48, baseType: !63)
!62 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_stdint.h", directory: "/home/mjshen/RTOSExploration")
!63 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !64, line: 79, baseType: !18)
!64 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/machine/_default_types.h", directory: "/home/mjshen/RTOSExploration")
!65 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !57, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !57, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !57, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !57, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !57, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !57, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !57, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !57, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!73 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !57, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !57, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 32, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !57, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !57, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 523904, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 16372)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !57, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 512, elements: !85)
!85 = !{!86}
!86 = !DISubrange(count: 16)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !57, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!89 = !{!0}
!90 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !91)
!91 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!92 = !DIGlobalVariableExpression(var: !93, expr: !DIExpression())
!93 = distinct !DIGlobalVariable(name: "gp_gpt", scope: !94, file: !95, line: 48, type: !341, isLocal: false, isDefinition: true)
!94 = distinct !DICompileUnit(language: DW_LANG_C99, file: !95, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !96, retainedTypes: !263, globals: !278, splitDebugInlining: false, nameTableKind: None)
!95 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!96 = !{!97, !157, !162, !168, !245, !254, !259}
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 1170, baseType: !18, size: 32, elements: !99)
!98 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_platform.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!99 = !{!100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!100 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_26M", value: 9)
!101 = !DIEnumerator(name: "HAL_CLOCK_CG_CAMINF48M", value: 10)
!102 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_BUSCK", value: 13)
!103 = !DIEnumerator(name: "HAL_CLOCK_CG_BT_N9", value: 15)
!104 = !DIEnumerator(name: "HAL_CLOCK_CG_BUS", value: 20)
!105 = !DIEnumerator(name: "HAL_CLOCK_CG_CM", value: 21)
!106 = !DIEnumerator(name: "HAL_CLOCK_CG_BSI", value: 23)
!107 = !DIEnumerator(name: "HAL_CLOCK_CG_SEJ", value: 32)
!108 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA", value: 33)
!109 = !DIEnumerator(name: "HAL_CLOCK_CG_USB48M", value: 34)
!110 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC0", value: 35)
!111 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C_D2D", value: 38)
!112 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C2", value: 39)
!113 = !DIEnumerator(name: "HAL_CLOCK_CG_CM4_OSTIMER", value: 42)
!114 = !DIEnumerator(name: "HAL_CLOCK_CG_DMA_AO", value: 44)
!115 = !DIEnumerator(name: "HAL_CLOCK_CG_UART0", value: 45)
!116 = !DIEnumerator(name: "HAL_CLOCK_CG_UART1", value: 46)
!117 = !DIEnumerator(name: "HAL_CLOCK_CG_UART2", value: 47)
!118 = !DIEnumerator(name: "HAL_CLOCK_CG_UART3", value: 48)
!119 = !DIEnumerator(name: "HAL_CLOCK_CG_SPISLV", value: 51)
!120 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI0", value: 52)
!121 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI1", value: 53)
!122 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI2", value: 54)
!123 = !DIEnumerator(name: "HAL_CLOCK_CG_SPI3", value: 55)
!124 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM0", value: 64)
!125 = !DIEnumerator(name: "HAL_CLOCK_CG_BTIF", value: 65)
!126 = !DIEnumerator(name: "HAL_CLOCK_CG_GPTIMER", value: 66)
!127 = !DIEnumerator(name: "HAL_CLOCK_CG_GPCOUNTER", value: 67)
!128 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM1", value: 68)
!129 = !DIEnumerator(name: "HAL_CLOCK_CG_EFUSE", value: 70)
!130 = !DIEnumerator(name: "HAL_CLOCK_CG_LPM", value: 71)
!131 = !DIEnumerator(name: "HAL_CLOCK_CG_CM_SYSROM", value: 72)
!132 = !DIEnumerator(name: "HAL_CLOCK_CG_SFC", value: 73)
!133 = !DIEnumerator(name: "HAL_CLOCK_CG_MSDC1", value: 74)
!134 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_DMA", value: 76)
!135 = !DIEnumerator(name: "HAL_CLOCK_CG_USB_BUS", value: 77)
!136 = !DIEnumerator(name: "HAL_CLOCK_CG_DISP_PWM", value: 78)
!137 = !DIEnumerator(name: "HAL_CLOCK_CG_TRNG", value: 80)
!138 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM2", value: 83)
!139 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM3", value: 84)
!140 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM4", value: 85)
!141 = !DIEnumerator(name: "HAL_CLOCK_CG_PWM5", value: 86)
!142 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD", value: 96)
!143 = !DIEnumerator(name: "HAL_CLOCK_CG_RESEIZER", value: 97)
!144 = !DIEnumerator(name: "HAL_CLOCK_CG_ROTDMA", value: 98)
!145 = !DIEnumerator(name: "HAL_CLOCK_CG_CAM_BCLK", value: 99)
!146 = !DIEnumerator(name: "HAL_CLOCK_CG_PAD2CAM", value: 100)
!147 = !DIEnumerator(name: "HAL_CLOCK_CG_G2D", value: 101)
!148 = !DIEnumerator(name: "HAL_CLOCK_CG_MM_COLOR", value: 102)
!149 = !DIEnumerator(name: "HAL_CLOCK_CG_AAL", value: 103)
!150 = !DIEnumerator(name: "HAL_CLOCK_CG_DSI0", value: 104)
!151 = !DIEnumerator(name: "HAL_CLOCK_CG_LCD_APB", value: 105)
!152 = !DIEnumerator(name: "HAL_CLOCK_CG_AUXADC", value: 130)
!153 = !DIEnumerator(name: "HAL_CLOCK_CG_GPDAC", value: 134)
!154 = !DIEnumerator(name: "HAL_CLOCK_CG_SENSOR_DMA", value: 136)
!155 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C1", value: 137)
!156 = !DIEnumerator(name: "HAL_CLOCK_CG_I2C0", value: 138)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 82, baseType: !18, size: 32, elements: !159)
!158 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_gpt_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!159 = !{!160, !161}
!160 = !DIEnumerator(name: "GPT_CLOCK_UNGATE", value: 0)
!161 = !DIEnumerator(name: "GPT_CLOCK_GATE", value: 64)
!162 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 75, baseType: !18, size: 32, elements: !163)
!163 = !{!164, !165, !166, !167}
!164 = !DIEnumerator(name: "GPT_MODE_ONE_SHOT", value: 0)
!165 = !DIEnumerator(name: "GPT_MODE_REPEAT", value: 16)
!166 = !DIEnumerator(name: "GPT_MODE_KEEP_GO", value: 32)
!167 = !DIEnumerator(name: "GPT_MODE_FREE_RUN", value: 48)
!168 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "IRQn", file: !56, line: 44, baseType: !7, size: 32, elements: !169)
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244}
!170 = !DIEnumerator(name: "Reset_IRQn", value: -15)
!171 = !DIEnumerator(name: "NonMaskableInt_IRQn", value: -14)
!172 = !DIEnumerator(name: "HardFault_IRQn", value: -13)
!173 = !DIEnumerator(name: "MemoryManagement_IRQn", value: -12)
!174 = !DIEnumerator(name: "BusFault_IRQn", value: -11)
!175 = !DIEnumerator(name: "UsageFault_IRQn", value: -10)
!176 = !DIEnumerator(name: "SVC_IRQn", value: -5)
!177 = !DIEnumerator(name: "DebugMonitor_IRQn", value: -4)
!178 = !DIEnumerator(name: "PendSV_IRQn", value: -2)
!179 = !DIEnumerator(name: "SysTick_IRQn", value: -1)
!180 = !DIEnumerator(name: "OSTimer_IRQn", value: 0)
!181 = !DIEnumerator(name: "Reserved1_IRQn", value: 1)
!182 = !DIEnumerator(name: "MD_TOPSM_IRQn", value: 2)
!183 = !DIEnumerator(name: "CM4_TOPSM_IRQn", value: 3)
!184 = !DIEnumerator(name: "Reserved2_IRQn", value: 4)
!185 = !DIEnumerator(name: "Reserved3_IRQn", value: 5)
!186 = !DIEnumerator(name: "Reserved4_IRQn", value: 6)
!187 = !DIEnumerator(name: "Reserved5_IRQn", value: 7)
!188 = !DIEnumerator(name: "ACCDET_IRQn", value: 8)
!189 = !DIEnumerator(name: "RTC_IRQn", value: 9)
!190 = !DIEnumerator(name: "KP_IRQn", value: 10)
!191 = !DIEnumerator(name: "GPTimer_IRQn", value: 11)
!192 = !DIEnumerator(name: "EINT_IRQn", value: 12)
!193 = !DIEnumerator(name: "LCD_IRQn", value: 13)
!194 = !DIEnumerator(name: "LCD_AAL_IRQn", value: 14)
!195 = !DIEnumerator(name: "DSI_IRQn", value: 15)
!196 = !DIEnumerator(name: "RESIZE_IRQn", value: 16)
!197 = !DIEnumerator(name: "G2D_IRQn", value: 17)
!198 = !DIEnumerator(name: "CAM_IRQn", value: 18)
!199 = !DIEnumerator(name: "ROT_DMA_IRQn", value: 19)
!200 = !DIEnumerator(name: "SCAM_IRQn", value: 20)
!201 = !DIEnumerator(name: "DMA_IRQn", value: 21)
!202 = !DIEnumerator(name: "DMA_AO_IRQn", value: 22)
!203 = !DIEnumerator(name: "I2C_DUAL_IRQn", value: 23)
!204 = !DIEnumerator(name: "I2C0_IRQn", value: 24)
!205 = !DIEnumerator(name: "I2C1_IRQn", value: 25)
!206 = !DIEnumerator(name: "I2C2_IRQn", value: 26)
!207 = !DIEnumerator(name: "Reserved6_IRQn", value: 27)
!208 = !DIEnumerator(name: "GPCounter_IRQn", value: 28)
!209 = !DIEnumerator(name: "UART0_IRQn", value: 29)
!210 = !DIEnumerator(name: "UART1_IRQn", value: 30)
!211 = !DIEnumerator(name: "UART2_IRQn", value: 31)
!212 = !DIEnumerator(name: "UART3_IRQn", value: 32)
!213 = !DIEnumerator(name: "USB20_IRQn", value: 33)
!214 = !DIEnumerator(name: "MSDC0_IRQn", value: 34)
!215 = !DIEnumerator(name: "MSDC1_IRQn", value: 35)
!216 = !DIEnumerator(name: "Reserved7_IRQn", value: 36)
!217 = !DIEnumerator(name: "Reserved8_IRQn", value: 37)
!218 = !DIEnumerator(name: "SF_IRQn", value: 38)
!219 = !DIEnumerator(name: "DSP22CPU_IRQn", value: 39)
!220 = !DIEnumerator(name: "SensorDMA_IRQn", value: 40)
!221 = !DIEnumerator(name: "RGU_IRQn", value: 41)
!222 = !DIEnumerator(name: "SPI_SLV_IRQn", value: 42)
!223 = !DIEnumerator(name: "SPI_MST0_IRQn", value: 43)
!224 = !DIEnumerator(name: "SPI_MST1_IRQn", value: 44)
!225 = !DIEnumerator(name: "SPI_MST2_IRQn", value: 45)
!226 = !DIEnumerator(name: "SPI_MST3_IRQn", value: 46)
!227 = !DIEnumerator(name: "TRNG_IRQn", value: 47)
!228 = !DIEnumerator(name: "BT_TIMCON_IRQn", value: 48)
!229 = !DIEnumerator(name: "BTIF_IRQn", value: 49)
!230 = !DIEnumerator(name: "Reserved9_IRQn", value: 50)
!231 = !DIEnumerator(name: "Reserved10_IRQn", value: 51)
!232 = !DIEnumerator(name: "LISR0_IRQn", value: 52)
!233 = !DIEnumerator(name: "LISR1_IRQn", value: 53)
!234 = !DIEnumerator(name: "LISR2_IRQn", value: 54)
!235 = !DIEnumerator(name: "LISR3_IRQn", value: 55)
!236 = !DIEnumerator(name: "PSI_RISE_IRQn", value: 56)
!237 = !DIEnumerator(name: "PSI_FALL_IRQn", value: 57)
!238 = !DIEnumerator(name: "Reserved11_IRQn", value: 58)
!239 = !DIEnumerator(name: "Reserved12_IRQn", value: 59)
!240 = !DIEnumerator(name: "Reserved13_IRQn", value: 60)
!241 = !DIEnumerator(name: "Reserved14_IRQn", value: 61)
!242 = !DIEnumerator(name: "Reserved15_IRQn", value: 62)
!243 = !DIEnumerator(name: "Reserved16_IRQn", value: 63)
!244 = !DIEnumerator(name: "IRQ_NUMBER_MAX", value: 64)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 846, baseType: !18, size: 32, elements: !246)
!246 = !{!247, !248, !249, !250, !251, !252, !253}
!247 = !DIEnumerator(name: "HAL_GPT_0", value: 0)
!248 = !DIEnumerator(name: "HAL_GPT_1", value: 1)
!249 = !DIEnumerator(name: "HAL_GPT_2", value: 2)
!250 = !DIEnumerator(name: "HAL_GPT_3", value: 3)
!251 = !DIEnumerator(name: "HAL_GPT_4", value: 4)
!252 = !DIEnumerator(name: "HAL_GPT_5", value: 5)
!253 = !DIEnumerator(name: "HAL_GPT_MAX_PORT", value: 6)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 380, baseType: !18, size: 32, elements: !256)
!255 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpt.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!256 = !{!257, !258}
!257 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_ONE_SHOT", value: 0)
!258 = !DIEnumerator(name: "HAL_GPT_TIMER_TYPE_REPEAT", value: 1)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 397, baseType: !18, size: 32, elements: !260)
!260 = !{!261, !262}
!261 = !DIEnumerator(name: "HAL_GPT_STOPPED", value: 0)
!262 = !DIEnumerator(name: "HAL_GPT_RUNNING", value: 1)
!263 = !{!61, !264, !88}
!264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_T", file: !56, line: 1272, baseType: !266)
!266 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1262, size: 288, elements: !267)
!267 = !{!268, !269, !270, !271, !273, !274, !275, !276, !277}
!268 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CON", scope: !266, file: !56, line: 1263, baseType: !60, size: 32)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_CLK", scope: !266, file: !56, line: 1264, baseType: !60, size: 32, offset: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_EN", scope: !266, file: !56, line: 1265, baseType: !60, size: 32, offset: 64)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_STA", scope: !266, file: !56, line: 1266, baseType: !272, size: 32, offset: 96)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !60)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQ_ACK", scope: !266, file: !56, line: 1267, baseType: !60, size: 32, offset: 128)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNT", scope: !266, file: !56, line: 1268, baseType: !60, size: 32, offset: 160)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPARE", scope: !266, file: !56, line: 1269, baseType: !60, size: 32, offset: 192)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COUNTH", scope: !266, file: !56, line: 1270, baseType: !60, size: 32, offset: 224)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_COMPAREH", scope: !266, file: !56, line: 1271, baseType: !60, size: 32, offset: 256)
!278 = !{!92, !279, !288, !294, !316, !339}
!279 = !DIGlobalVariableExpression(var: !280, expr: !DIExpression())
!280 = distinct !DIGlobalVariable(name: "gp_gpt_glb", scope: !94, file: !95, line: 49, type: !281, isLocal: false, isDefinition: true)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 32)
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPT_REGISTER_GLOABL_T", file: !56, line: 1260, baseType: !283)
!283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1256, size: 96, elements: !284)
!284 = !{!285, !286, !287}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQSTA", scope: !283, file: !56, line: 1257, baseType: !272, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK0", scope: !283, file: !56, line: 1258, baseType: !60, size: 32, offset: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "GPT_IRQMSK1", scope: !283, file: !56, line: 1259, baseType: !60, size: 32, offset: 64)
!288 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression())
!289 = distinct !DIGlobalVariable(name: "flag", scope: !290, file: !95, line: 88, type: !91, isLocal: true, isDefinition: true)
!290 = distinct !DISubprogram(name: "gpt_get_lfosc_clock", scope: !95, file: !95, line: 86, type: !291, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!291 = !DISubroutineType(types: !292)
!292 = !{null}
!293 = !{}
!294 = !DIGlobalVariableExpression(var: !295, expr: !DIExpression())
!295 = distinct !DIGlobalVariable(name: "g_gpt_context", scope: !94, file: !95, line: 51, type: !296, isLocal: false, isDefinition: true)
!296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !297, size: 768, elements: !314)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_context_t", file: !158, line: 116, baseType: !298)
!298 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 111, size: 128, elements: !299)
!299 = !{!300, !302, !312, !313}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "running_status", scope: !298, file: !158, line: 112, baseType: !301, size: 32)
!301 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_running_status_t", file: !255, line: 400, baseType: !259)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !298, file: !158, line: 113, baseType: !303, size: 64, offset: 32)
!303 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_callback_context_t", file: !158, line: 109, baseType: !304)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 106, size: 64, elements: !305)
!305 = !{!306, !311}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !304, file: !158, line: 107, baseType: !307, size: 32)
!307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_callback_t", file: !255, line: 371, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 32)
!309 = !DISubroutineType(types: !310)
!310 = !{null, !88}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !304, file: !158, line: 108, baseType: !88, size: 32, offset: 32)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "has_initilized", scope: !298, file: !158, line: 114, baseType: !91, size: 8, offset: 96)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "is_gpt_locked_sleep", scope: !298, file: !158, line: 115, baseType: !91, size: 8, offset: 104)
!314 = !{!315}
!315 = !DISubrange(count: 6)
!316 = !DIGlobalVariableExpression(var: !317, expr: !DIExpression())
!317 = distinct !DIGlobalVariable(name: "gpt_sw_context", scope: !94, file: !95, line: 52, type: !318, isLocal: false, isDefinition: true)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_context_t", file: !158, line: 134, baseType: !319)
!319 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 125, size: 4256, elements: !320)
!320 = !{!321, !332, !333, !334, !335, !336, !337, !338}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !319, file: !158, line: 126, baseType: !322, size: 4096)
!322 = !DICompositeType(tag: DW_TAG_array_type, baseType: !323, size: 4096, elements: !330)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gpt_sw_timer_t", file: !158, line: 123, baseType: !324)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !158, line: 118, size: 128, elements: !325)
!325 = !{!326, !327, !328, !329}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "callback_context", scope: !324, file: !158, line: 119, baseType: !303, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "time_out_ms", scope: !324, file: !158, line: 120, baseType: !61, size: 32, offset: 64)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "is_used", scope: !324, file: !158, line: 121, baseType: !91, size: 8, offset: 96)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "is_running", scope: !324, file: !158, line: 122, baseType: !91, size: 8, offset: 104)
!330 = !{!331}
!331 = !DISubrange(count: 32)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "absolute_time", scope: !319, file: !158, line: 127, baseType: !61, size: 32, offset: 4096)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "last_absolute_time", scope: !319, file: !158, line: 128, baseType: !61, size: 32, offset: 4128)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "used_timer_count", scope: !319, file: !158, line: 129, baseType: !61, size: 32, offset: 4160)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "running_timer_count", scope: !319, file: !158, line: 130, baseType: !61, size: 32, offset: 4192)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "is_first_init", scope: !319, file: !158, line: 131, baseType: !91, size: 8, offset: 4224)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "is_start_from_isr", scope: !319, file: !158, line: 132, baseType: !91, size: 8, offset: 4232)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "is_sw_gpt", scope: !319, file: !158, line: 133, baseType: !91, size: 8, offset: 4240)
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "gpt_clock_source", scope: !94, file: !95, line: 53, type: !61, isLocal: false, isDefinition: true)
!341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !264, size: 192, elements: !314)
!342 = !DIGlobalVariableExpression(var: !289, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!343 = !DIGlobalVariableExpression(var: !344, expr: !DIExpression())
!344 = distinct !DIGlobalVariable(name: "gpio_register_base", scope: !345, file: !346, line: 64, type: !446, isLocal: false, isDefinition: true)
!345 = distinct !DICompileUnit(language: DW_LANG_C99, file: !346, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !347, retainedTypes: !441, globals: !445, splitDebugInlining: false, nameTableKind: None)
!346 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpio.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!347 = !{!348, !400, !407, !411, !417, !421, !430, !435}
!348 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 339, baseType: !18, size: 32, elements: !349)
!349 = !{!350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399}
!350 = !DIEnumerator(name: "HAL_GPIO_0", value: 0)
!351 = !DIEnumerator(name: "HAL_GPIO_1", value: 1)
!352 = !DIEnumerator(name: "HAL_GPIO_2", value: 2)
!353 = !DIEnumerator(name: "HAL_GPIO_3", value: 3)
!354 = !DIEnumerator(name: "HAL_GPIO_4", value: 4)
!355 = !DIEnumerator(name: "HAL_GPIO_5", value: 5)
!356 = !DIEnumerator(name: "HAL_GPIO_6", value: 6)
!357 = !DIEnumerator(name: "HAL_GPIO_7", value: 7)
!358 = !DIEnumerator(name: "HAL_GPIO_8", value: 8)
!359 = !DIEnumerator(name: "HAL_GPIO_9", value: 9)
!360 = !DIEnumerator(name: "HAL_GPIO_10", value: 10)
!361 = !DIEnumerator(name: "HAL_GPIO_11", value: 11)
!362 = !DIEnumerator(name: "HAL_GPIO_12", value: 12)
!363 = !DIEnumerator(name: "HAL_GPIO_13", value: 13)
!364 = !DIEnumerator(name: "HAL_GPIO_14", value: 14)
!365 = !DIEnumerator(name: "HAL_GPIO_15", value: 15)
!366 = !DIEnumerator(name: "HAL_GPIO_16", value: 16)
!367 = !DIEnumerator(name: "HAL_GPIO_17", value: 17)
!368 = !DIEnumerator(name: "HAL_GPIO_18", value: 18)
!369 = !DIEnumerator(name: "HAL_GPIO_19", value: 19)
!370 = !DIEnumerator(name: "HAL_GPIO_20", value: 20)
!371 = !DIEnumerator(name: "HAL_GPIO_21", value: 21)
!372 = !DIEnumerator(name: "HAL_GPIO_22", value: 22)
!373 = !DIEnumerator(name: "HAL_GPIO_23", value: 23)
!374 = !DIEnumerator(name: "HAL_GPIO_24", value: 24)
!375 = !DIEnumerator(name: "HAL_GPIO_25", value: 25)
!376 = !DIEnumerator(name: "HAL_GPIO_26", value: 26)
!377 = !DIEnumerator(name: "HAL_GPIO_27", value: 27)
!378 = !DIEnumerator(name: "HAL_GPIO_28", value: 28)
!379 = !DIEnumerator(name: "HAL_GPIO_29", value: 29)
!380 = !DIEnumerator(name: "HAL_GPIO_30", value: 30)
!381 = !DIEnumerator(name: "HAL_GPIO_31", value: 31)
!382 = !DIEnumerator(name: "HAL_GPIO_32", value: 32)
!383 = !DIEnumerator(name: "HAL_GPIO_33", value: 33)
!384 = !DIEnumerator(name: "HAL_GPIO_34", value: 34)
!385 = !DIEnumerator(name: "HAL_GPIO_35", value: 35)
!386 = !DIEnumerator(name: "HAL_GPIO_36", value: 36)
!387 = !DIEnumerator(name: "HAL_GPIO_37", value: 37)
!388 = !DIEnumerator(name: "HAL_GPIO_38", value: 38)
!389 = !DIEnumerator(name: "HAL_GPIO_39", value: 39)
!390 = !DIEnumerator(name: "HAL_GPIO_40", value: 40)
!391 = !DIEnumerator(name: "HAL_GPIO_41", value: 41)
!392 = !DIEnumerator(name: "HAL_GPIO_42", value: 42)
!393 = !DIEnumerator(name: "HAL_GPIO_43", value: 43)
!394 = !DIEnumerator(name: "HAL_GPIO_44", value: 44)
!395 = !DIEnumerator(name: "HAL_GPIO_45", value: 45)
!396 = !DIEnumerator(name: "HAL_GPIO_46", value: 46)
!397 = !DIEnumerator(name: "HAL_GPIO_47", value: 47)
!398 = !DIEnumerator(name: "HAL_GPIO_48", value: 48)
!399 = !DIEnumerator(name: "HAL_GPIO_MAX", value: 49)
!400 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 224, baseType: !7, size: 32, elements: !402)
!401 = !DIFile(filename: "../../../../../driver/chip/inc/hal_gpio.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!402 = !{!403, !404, !405, !406}
!403 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR", value: -3)
!404 = !DIEnumerator(name: "HAL_GPIO_STATUS_ERROR_PIN", value: -2)
!405 = !DIEnumerator(name: "HAL_GPIO_STATUS_INVALID_PARAMETER", value: -1)
!406 = !DIEnumerator(name: "HAL_GPIO_STATUS_OK", value: 0)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 210, baseType: !18, size: 32, elements: !408)
!408 = !{!409, !410}
!409 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_INPUT", value: 0)
!410 = !DIEnumerator(name: "HAL_GPIO_DIRECTION_OUTPUT", value: 1)
!411 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 233, baseType: !7, size: 32, elements: !412)
!412 = !{!413, !414, !415, !416}
!413 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR", value: -3)
!414 = !DIEnumerator(name: "HAL_PINMUX_STATUS_ERROR_PORT", value: -2)
!415 = !DIEnumerator(name: "HAL_PINMUX_STATUS_INVALID_FUNCTION", value: -1)
!416 = !DIEnumerator(name: "HAL_PINMUX_STATUS_OK", value: 0)
!417 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 217, baseType: !18, size: 32, elements: !418)
!418 = !{!419, !420}
!419 = !DIEnumerator(name: "HAL_GPIO_DATA_LOW", value: 0)
!420 = !DIEnumerator(name: "HAL_GPIO_DATA_HIGH", value: 1)
!421 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 415, baseType: !18, size: 32, elements: !422)
!422 = !{!423, !424, !425, !426, !427, !428, !429}
!423 = !DIEnumerator(name: "HAL_GPIO_CLOCK_0", value: 0)
!424 = !DIEnumerator(name: "HAL_GPIO_CLOCK_1", value: 1)
!425 = !DIEnumerator(name: "HAL_GPIO_CLOCK_2", value: 2)
!426 = !DIEnumerator(name: "HAL_GPIO_CLOCK_3", value: 3)
!427 = !DIEnumerator(name: "HAL_GPIO_CLOCK_4", value: 4)
!428 = !DIEnumerator(name: "HAL_GPIO_CLOCK_5", value: 5)
!429 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MAX", value: 6)
!430 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 427, baseType: !18, size: 32, elements: !431)
!431 = !{!432, !433, !434}
!432 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_26M", value: 1)
!433 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_32K", value: 4)
!434 = !DIEnumerator(name: "HAL_GPIO_CLOCK_MODE_MAX", value: 5)
!435 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !401, line: 242, baseType: !18, size: 32, elements: !436)
!436 = !{!437, !438, !439, !440}
!437 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_4MA", value: 0)
!438 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_8MA", value: 1)
!439 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_12MA", value: 2)
!440 = !DIEnumerator(name: "HAL_GPIO_DRIVING_CURRENT_16MA", value: 3)
!441 = !{!88, !442, !443, !444}
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_direction_t", file: !401, line: 213, baseType: !407)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_data_t", file: !401, line: 220, baseType: !417)
!444 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_driving_current_t", file: !401, line: 247, baseType: !435)
!445 = !{!343}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_REGISTER_T", file: !56, line: 1554, baseType: !448)
!448 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1522, size: 29440, elements: !449)
!449 = !{!450, !467, !471, !480, !481, !490, !491, !500, !501, !511, !512, !521, !522, !531, !532, !541, !542, !551, !555, !564, !565, !574, !575, !584, !593, !594, !605, !609, !618, !619}
!450 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_REGISTER", scope: !448, file: !56, line: 1523, baseType: !451, size: 256)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !452, size: 256, elements: !465)
!452 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIR_REGISTER_T", file: !56, line: 1400, baseType: !453)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1395, size: 128, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR", scope: !453, file: !56, line: 1396, baseType: !60, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_SET", scope: !453, file: !56, line: 1397, baseType: !60, size: 32, offset: 32)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIR_CLR", scope: !453, file: !56, line: 1398, baseType: !60, size: 32, offset: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !453, file: !56, line: 1399, baseType: !459, size: 32, offset: 96)
!459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 32, elements: !463)
!460 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !62, line: 24, baseType: !461)
!461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint8_t", file: !64, line: 43, baseType: !462)
!462 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!463 = !{!464}
!464 = !DISubrange(count: 4)
!465 = !{!466}
!466 = !DISubrange(count: 2)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET1", scope: !448, file: !56, line: 1524, baseType: !468, size: 1792, offset: 256)
!468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1792, elements: !469)
!469 = !{!470}
!470 = !DISubrange(count: 224)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_REGISTER", scope: !448, file: !56, line: 1525, baseType: !472, size: 256, offset: 2048)
!472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, size: 256, elements: !465)
!473 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLEN_REGISTER_T", file: !56, line: 1409, baseType: !474)
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1404, size: 128, elements: !475)
!475 = !{!476, !477, !478, !479}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN", scope: !474, file: !56, line: 1405, baseType: !60, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_SET", scope: !474, file: !56, line: 1406, baseType: !60, size: 32, offset: 32)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLEN_CLR", scope: !474, file: !56, line: 1407, baseType: !60, size: 32, offset: 64)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !474, file: !56, line: 1408, baseType: !459, size: 32, offset: 96)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET2", scope: !448, file: !56, line: 1526, baseType: !468, size: 1792, offset: 2304)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_REGISTER", scope: !448, file: !56, line: 1527, baseType: !482, size: 256, offset: 4096)
!482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !483, size: 256, elements: !465)
!483 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DINV_REGISTER_T", file: !56, line: 1417, baseType: !484)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1412, size: 128, elements: !485)
!485 = !{!486, !487, !488, !489}
!486 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV", scope: !484, file: !56, line: 1413, baseType: !60, size: 32)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_SET", scope: !484, file: !56, line: 1414, baseType: !60, size: 32, offset: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DINV_CLR", scope: !484, file: !56, line: 1415, baseType: !60, size: 32, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !484, file: !56, line: 1416, baseType: !459, size: 32, offset: 96)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET3", scope: !448, file: !56, line: 1528, baseType: !468, size: 1792, offset: 4352)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_REGISTER", scope: !448, file: !56, line: 1529, baseType: !492, size: 256, offset: 6144)
!492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 256, elements: !465)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DOUT_REGISTER_T", file: !56, line: 1426, baseType: !494)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1421, size: 128, elements: !495)
!495 = !{!496, !497, !498, !499}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT", scope: !494, file: !56, line: 1422, baseType: !60, size: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_SET", scope: !494, file: !56, line: 1423, baseType: !60, size: 32, offset: 32)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DOUT_CLR", scope: !494, file: !56, line: 1424, baseType: !60, size: 32, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !494, file: !56, line: 1425, baseType: !459, size: 32, offset: 96)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET4", scope: !448, file: !56, line: 1530, baseType: !468, size: 1792, offset: 6400)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN_REGISTER", scope: !448, file: !56, line: 1531, baseType: !502, size: 256, offset: 8192)
!502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !503, size: 256, elements: !465)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DIN_REGISTER_T", file: !56, line: 1432, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1429, size: 128, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DIN", scope: !504, file: !56, line: 1430, baseType: !60, size: 32)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !504, file: !56, line: 1431, baseType: !508, size: 96, offset: 32)
!508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 96, elements: !509)
!509 = !{!510}
!510 = !DISubrange(count: 12)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET5", scope: !448, file: !56, line: 1532, baseType: !468, size: 1792, offset: 8448)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_REGISTER", scope: !448, file: !56, line: 1533, baseType: !513, size: 256, offset: 10240)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !514, size: 256, elements: !465)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PULLSEL_REGISTER_T", file: !56, line: 1440, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1435, size: 128, elements: !516)
!516 = !{!517, !518, !519, !520}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL", scope: !515, file: !56, line: 1436, baseType: !60, size: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_SET", scope: !515, file: !56, line: 1437, baseType: !60, size: 32, offset: 32)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PULLSEL_CLR", scope: !515, file: !56, line: 1438, baseType: !60, size: 32, offset: 64)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !515, file: !56, line: 1439, baseType: !459, size: 32, offset: 96)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET6", scope: !448, file: !56, line: 1534, baseType: !468, size: 1792, offset: 10496)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_REGISTER", scope: !448, file: !56, line: 1535, baseType: !523, size: 256, offset: 12288)
!523 = !DICompositeType(tag: DW_TAG_array_type, baseType: !524, size: 256, elements: !465)
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SMT_REGISTER_T", file: !56, line: 1448, baseType: !525)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1443, size: 128, elements: !526)
!526 = !{!527, !528, !529, !530}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT", scope: !525, file: !56, line: 1444, baseType: !60, size: 32)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_SET", scope: !525, file: !56, line: 1445, baseType: !60, size: 32, offset: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SMT_CLR", scope: !525, file: !56, line: 1446, baseType: !60, size: 32, offset: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !525, file: !56, line: 1447, baseType: !459, size: 32, offset: 96)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET7", scope: !448, file: !56, line: 1536, baseType: !468, size: 1792, offset: 12544)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_REGISTER", scope: !448, file: !56, line: 1537, baseType: !533, size: 256, offset: 14336)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !534, size: 256, elements: !465)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_SR_REGISTER_T", file: !56, line: 1455, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1450, size: 128, elements: !536)
!536 = !{!537, !538, !539, !540}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR", scope: !535, file: !56, line: 1451, baseType: !60, size: 32)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_SET", scope: !535, file: !56, line: 1452, baseType: !60, size: 32, offset: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_SR_CLR", scope: !535, file: !56, line: 1453, baseType: !60, size: 32, offset: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !535, file: !56, line: 1454, baseType: !459, size: 32, offset: 96)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET8", scope: !448, file: !56, line: 1538, baseType: !468, size: 1792, offset: 14592)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_REGISTER", scope: !448, file: !56, line: 1539, baseType: !543, size: 512, offset: 16384)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 512, elements: !463)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_DRV_REGISTER_T", file: !56, line: 1463, baseType: !545)
!545 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1458, size: 128, elements: !546)
!546 = !{!547, !548, !549, !550}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV", scope: !545, file: !56, line: 1459, baseType: !60, size: 32)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_SET", scope: !545, file: !56, line: 1460, baseType: !60, size: 32, offset: 32)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_DRV_CLR", scope: !545, file: !56, line: 1461, baseType: !60, size: 32, offset: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !545, file: !56, line: 1462, baseType: !459, size: 32, offset: 96)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET9", scope: !448, file: !56, line: 1540, baseType: !552, size: 1536, offset: 16896)
!552 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1536, elements: !553)
!553 = !{!554}
!554 = !DISubrange(count: 192)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_REGISTER", scope: !448, file: !56, line: 1541, baseType: !556, size: 256, offset: 18432)
!556 = !DICompositeType(tag: DW_TAG_array_type, baseType: !557, size: 256, elements: !465)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_IES_REGISTER_T", file: !56, line: 1471, baseType: !558)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1466, size: 128, elements: !559)
!559 = !{!560, !561, !562, !563}
!560 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES", scope: !558, file: !56, line: 1467, baseType: !60, size: 32)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_SET", scope: !558, file: !56, line: 1468, baseType: !60, size: 32, offset: 32)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_IES_CLR", scope: !558, file: !56, line: 1469, baseType: !60, size: 32, offset: 64)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !558, file: !56, line: 1470, baseType: !459, size: 32, offset: 96)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET10", scope: !448, file: !56, line: 1542, baseType: !468, size: 1792, offset: 18688)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_REGISTER", scope: !448, file: !56, line: 1543, baseType: !566, size: 256, offset: 20480)
!566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !567, size: 256, elements: !465)
!567 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_PUPD_REGISTER_T", file: !56, line: 1480, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1475, size: 128, elements: !569)
!569 = !{!570, !571, !572, !573}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD", scope: !568, file: !56, line: 1476, baseType: !60, size: 32)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_SET", scope: !568, file: !56, line: 1477, baseType: !60, size: 32, offset: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_PUPD_CLR", scope: !568, file: !56, line: 1478, baseType: !60, size: 32, offset: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !568, file: !56, line: 1479, baseType: !459, size: 32, offset: 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET11", scope: !448, file: !56, line: 1544, baseType: !468, size: 1792, offset: 20736)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_REGISTER", scope: !448, file: !56, line: 1545, baseType: !576, size: 256, offset: 22528)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 256, elements: !465)
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN0_REGISTER_T", file: !56, line: 1489, baseType: !578)
!578 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1484, size: 128, elements: !579)
!579 = !{!580, !581, !582, !583}
!580 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0", scope: !578, file: !56, line: 1485, baseType: !60, size: 32)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_SET", scope: !578, file: !56, line: 1486, baseType: !60, size: 32, offset: 32)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN0_CLR", scope: !578, file: !56, line: 1487, baseType: !60, size: 32, offset: 64)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !578, file: !56, line: 1488, baseType: !459, size: 32, offset: 96)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_REGISTER", scope: !448, file: !56, line: 1546, baseType: !585, size: 256, offset: 22784)
!585 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 256, elements: !465)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_RESEN1_REGISTER_T", file: !56, line: 1497, baseType: !587)
!587 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1492, size: 128, elements: !588)
!588 = !{!589, !590, !591, !592}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1", scope: !587, file: !56, line: 1493, baseType: !60, size: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_SET", scope: !587, file: !56, line: 1494, baseType: !60, size: 32, offset: 32)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_RESEN1_CLR", scope: !587, file: !56, line: 1495, baseType: !60, size: 32, offset: 64)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !587, file: !56, line: 1496, baseType: !459, size: 32, offset: 96)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET12", scope: !448, file: !56, line: 1547, baseType: !552, size: 1536, offset: 23040)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_REGISTER", scope: !448, file: !56, line: 1548, baseType: !595, size: 896, offset: 24576)
!595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !596, size: 896, elements: !603)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_MODE_REGISTER_T", file: !56, line: 1505, baseType: !597)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1500, size: 128, elements: !598)
!598 = !{!599, !600, !601, !602}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE", scope: !597, file: !56, line: 1501, baseType: !60, size: 32)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_SET", scope: !597, file: !56, line: 1502, baseType: !60, size: 32, offset: 32)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_MODE_CLR", scope: !597, file: !56, line: 1503, baseType: !60, size: 32, offset: 64)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !597, file: !56, line: 1504, baseType: !459, size: 32, offset: 96)
!603 = !{!604}
!604 = !DISubrange(count: 7)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET13", scope: !448, file: !56, line: 1549, baseType: !606, size: 1152, offset: 25472)
!606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1152, elements: !607)
!607 = !{!608}
!608 = !DISubrange(count: 144)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_REGISTER", scope: !448, file: !56, line: 1550, baseType: !610, size: 512, offset: 26624)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !611, size: 512, elements: !463)
!611 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_TDSEL_REGISTER_T", file: !56, line: 1513, baseType: !612)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1508, size: 128, elements: !613)
!613 = !{!614, !615, !616, !617}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL", scope: !612, file: !56, line: 1509, baseType: !60, size: 32)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_SET", scope: !612, file: !56, line: 1510, baseType: !60, size: 32, offset: 32)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_TDSEL_CLR", scope: !612, file: !56, line: 1511, baseType: !60, size: 32, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !612, file: !56, line: 1512, baseType: !459, size: 32, offset: 96)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET14", scope: !448, file: !56, line: 1551, baseType: !552, size: 1536, offset: 27136)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT_REGISTER", scope: !448, file: !56, line: 1552, baseType: !620, size: 768, offset: 28672)
!620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !621, size: 768, elements: !314)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPIO_CLKOUT_REGISTER_T", file: !56, line: 1519, baseType: !622)
!622 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1516, size: 128, elements: !623)
!623 = !{!624, !625}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_CLKOUT", scope: !622, file: !56, line: 1517, baseType: !60, size: 32)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "GPIO_OFFSET", scope: !622, file: !56, line: 1518, baseType: !508, size: 96, offset: 32)
!626 = !DIGlobalVariableExpression(var: !627, expr: !DIExpression())
!627 = distinct !DIGlobalVariable(name: "g_uart_hwstatus", scope: !628, file: !629, line: 101, type: !777, isLocal: true, isDefinition: true)
!628 = distinct !DICompileUnit(language: DW_LANG_C99, file: !629, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !630, retainedTypes: !727, globals: !736, splitDebugInlining: false, nameTableKind: None)
!629 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!630 = !{!631, !638, !653, !659, !665, !670, !677, !693, !699, !703, !708, !715, !723}
!631 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 180, baseType: !18, size: 32, elements: !632)
!632 = !{!633, !634, !635, !636, !637}
!633 = !DIEnumerator(name: "HAL_UART_0", value: 0)
!634 = !DIEnumerator(name: "HAL_UART_1", value: 1)
!635 = !DIEnumerator(name: "HAL_UART_2", value: 2)
!636 = !DIEnumerator(name: "HAL_UART_3", value: 3)
!637 = !DIEnumerator(name: "HAL_UART_MAX", value: 4)
!638 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 189, baseType: !18, size: 32, elements: !640)
!639 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_pdma_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!640 = !{!641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652}
!641 = !DIEnumerator(name: "VDMA_START_CHANNEL", value: 8)
!642 = !DIEnumerator(name: "VDMA_UART1TX", value: 8)
!643 = !DIEnumerator(name: "VDMA_UART1RX", value: 9)
!644 = !DIEnumerator(name: "VDMA_UART2TX", value: 10)
!645 = !DIEnumerator(name: "VDMA_UART2RX", value: 11)
!646 = !DIEnumerator(name: "VDMA_UART3TX", value: 12)
!647 = !DIEnumerator(name: "VDMA_UART3RX", value: 13)
!648 = !DIEnumerator(name: "VDMA_UART0TX", value: 14)
!649 = !DIEnumerator(name: "VDMA_UART0RX", value: 15)
!650 = !DIEnumerator(name: "VDMA_BTIFTX", value: 16)
!651 = !DIEnumerator(name: "VDMA_BTIFRX", value: 17)
!652 = !DIEnumerator(name: "VDMA_END_CHANNEL", value: 18)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 355, baseType: !7, size: 32, elements: !655)
!654 = !DIFile(filename: "../../../../../driver/chip/inc/hal_uart.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!655 = !{!656, !657, !658}
!656 = !DIEnumerator(name: "HAL_UART_EVENT_TRANSACTION_ERROR", value: -1)
!657 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_READ", value: 1)
!658 = !DIEnumerator(name: "HAL_UART_EVENT_READY_TO_WRITE", value: 2)
!659 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 206, baseType: !7, size: 32, elements: !660)
!660 = !{!661, !662, !663, !664}
!661 = !DIEnumerator(name: "VDMA_ERROR", value: -3)
!662 = !DIEnumerator(name: "VDMA_ERROR_CHANNEL", value: -2)
!663 = !DIEnumerator(name: "VDMA_INVALID_PARAMETER", value: -1)
!664 = !DIEnumerator(name: "VDMA_OK", value: 0)
!665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !629, line: 65, baseType: !18, size: 32, elements: !666)
!666 = !{!667, !668, !669}
!667 = !DIEnumerator(name: "UART_HWSTATUS_UNINITIALIZED", value: 0)
!668 = !DIEnumerator(name: "UART_HWSTATUS_POLL_INITIALIZED", value: 1)
!669 = !DIEnumerator(name: "UART_HWSTATUS_DMA_INITIALIZED", value: 2)
!670 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 345, baseType: !7, size: 32, elements: !671)
!671 = !{!672, !673, !674, !675, !676}
!672 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_PARAMETER", value: -4)
!673 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_BUSY", value: -3)
!674 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR_UNINITIALIZED", value: -2)
!675 = !DIEnumerator(name: "HAL_UART_STATUS_ERROR", value: -1)
!676 = !DIEnumerator(name: "HAL_UART_STATUS_OK", value: 0)
!677 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 302, baseType: !18, size: 32, elements: !678)
!678 = !{!679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!679 = !DIEnumerator(name: "HAL_UART_BAUDRATE_110", value: 0)
!680 = !DIEnumerator(name: "HAL_UART_BAUDRATE_300", value: 1)
!681 = !DIEnumerator(name: "HAL_UART_BAUDRATE_1200", value: 2)
!682 = !DIEnumerator(name: "HAL_UART_BAUDRATE_2400", value: 3)
!683 = !DIEnumerator(name: "HAL_UART_BAUDRATE_4800", value: 4)
!684 = !DIEnumerator(name: "HAL_UART_BAUDRATE_9600", value: 5)
!685 = !DIEnumerator(name: "HAL_UART_BAUDRATE_19200", value: 6)
!686 = !DIEnumerator(name: "HAL_UART_BAUDRATE_38400", value: 7)
!687 = !DIEnumerator(name: "HAL_UART_BAUDRATE_57600", value: 8)
!688 = !DIEnumerator(name: "HAL_UART_BAUDRATE_115200", value: 9)
!689 = !DIEnumerator(name: "HAL_UART_BAUDRATE_230400", value: 10)
!690 = !DIEnumerator(name: "HAL_UART_BAUDRATE_460800", value: 11)
!691 = !DIEnumerator(name: "HAL_UART_BAUDRATE_921600", value: 12)
!692 = !DIEnumerator(name: "HAL_UART_BAUDRATE_MAX", value: 13)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 321, baseType: !18, size: 32, elements: !694)
!694 = !{!695, !696, !697, !698}
!695 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_5", value: 0)
!696 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_6", value: 1)
!697 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_7", value: 2)
!698 = !DIEnumerator(name: "HAL_UART_WORD_LENGTH_8", value: 3)
!699 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 330, baseType: !18, size: 32, elements: !700)
!700 = !{!701, !702}
!701 = !DIEnumerator(name: "HAL_UART_STOP_BIT_1", value: 0)
!702 = !DIEnumerator(name: "HAL_UART_STOP_BIT_2", value: 1)
!703 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !654, line: 337, baseType: !18, size: 32, elements: !704)
!704 = !{!705, !706, !707}
!705 = !DIEnumerator(name: "HAL_UART_PARITY_NONE", value: 0)
!706 = !DIEnumerator(name: "HAL_UART_PARITY_ODD", value: 1)
!707 = !DIEnumerator(name: "HAL_UART_PARITY_EVEN", value: 2)
!708 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !709, line: 101, baseType: !7, size: 32, elements: !710)
!709 = !DIFile(filename: "../../../../../driver/chip/inc/hal_clock.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!710 = !{!711, !712, !713, !714}
!711 = !DIEnumerator(name: "HAL_CLOCK_STATUS_UNINITIALIZED", value: -3)
!712 = !DIEnumerator(name: "HAL_CLOCK_STATUS_INVALID_PARAMETER", value: -2)
!713 = !DIEnumerator(name: "HAL_CLOCK_STATUS_ERROR", value: -1)
!714 = !DIEnumerator(name: "HAL_CLOCK_STATUS_OK", value: 0)
!715 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !716, line: 152, baseType: !7, size: 32, elements: !717)
!716 = !DIFile(filename: "../../../../../driver/chip/inc/hal_nvic.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!717 = !{!718, !719, !720, !721, !722}
!718 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_NO_ISR", value: -4)
!719 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR_IRQ_NUMBER", value: -3)
!720 = !DIEnumerator(name: "HAL_NVIC_STATUS_INVALID_PARAMETER", value: -2)
!721 = !DIEnumerator(name: "HAL_NVIC_STATUS_ERROR", value: -1)
!722 = !DIEnumerator(name: "HAL_NVIC_STATUS_OK", value: 0)
!723 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !639, line: 222, baseType: !7, size: 32, elements: !724)
!724 = !{!725, !726}
!725 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_ERROR", value: -1)
!726 = !DIEnumerator(name: "VDMA_EVENT_TRANSACTION_SUCCESS", value: 0)
!727 = !{!88, !61, !728}
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 32)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !731)
!730 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_uart_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!731 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !732)
!732 = !{!733, !734}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !731, file: !730, line: 94, baseType: !91, size: 8)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !731, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_port_t", file: !98, line: 186, baseType: !631)
!736 = !{!626, !737, !750, !755, !769, !775}
!737 = !DIGlobalVariableExpression(var: !738, expr: !DIExpression())
!738 = distinct !DIGlobalVariable(name: "g_uart_callback", scope: !628, file: !629, line: 102, type: !739, isLocal: true, isDefinition: true)
!739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !740, size: 256, elements: !463)
!740 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_callback_t", file: !629, line: 74, baseType: !741)
!741 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !629, line: 71, size: 64, elements: !742)
!742 = !{!743, !749}
!743 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !741, file: !629, line: 72, baseType: !744, size: 32)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_t", file: !654, line: 410, baseType: !745)
!745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !746, size: 32)
!746 = !DISubroutineType(types: !747)
!747 = !{null, !748, !88}
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_callback_event_t", file: !654, line: 359, baseType: !653)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !741, file: !629, line: 73, baseType: !88, size: 32, offset: 32)
!750 = !DIGlobalVariableExpression(var: !751, expr: !DIExpression())
!751 = distinct !DIGlobalVariable(name: "g_uart_dma_callback_data", scope: !628, file: !629, line: 103, type: !752, isLocal: true, isDefinition: true)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !729, size: 512, elements: !753)
!753 = !{!754}
!754 = !DISubrange(count: 8)
!755 = !DIGlobalVariableExpression(var: !756, expr: !DIExpression())
!756 = distinct !DIGlobalVariable(name: "g_uart_dma_config", scope: !628, file: !629, line: 104, type: !757, isLocal: true, isDefinition: true)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 896, elements: !463)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_dma_config_t", file: !654, line: 390, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 382, size: 224, elements: !760)
!760 = !{!761, !763, !764, !765, !766, !767, !768}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer", scope: !759, file: !654, line: 383, baseType: !762, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_buffer_size", scope: !759, file: !654, line: 384, baseType: !61, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "send_vfifo_threshold_size", scope: !759, file: !654, line: 385, baseType: !61, size: 32, offset: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer", scope: !759, file: !654, line: 386, baseType: !762, size: 32, offset: 96)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_buffer_size", scope: !759, file: !654, line: 387, baseType: !61, size: 32, offset: 128)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_threshold_size", scope: !759, file: !654, line: 388, baseType: !61, size: 32, offset: 160)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "receive_vfifo_alert_size", scope: !759, file: !654, line: 389, baseType: !61, size: 32, offset: 192)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "g_uart_baudrate_map", scope: !628, file: !629, line: 105, type: !771, isLocal: true, isDefinition: true)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 416, elements: !773)
!772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !61)
!773 = !{!774}
!774 = !DISubrange(count: 13)
!775 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression())
!776 = distinct !DIGlobalVariable(name: "g_uart_global_data_initialized", scope: !628, file: !629, line: 90, type: !91, isLocal: true, isDefinition: true)
!777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !778, size: 128, elements: !463)
!778 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !779)
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_hwstatus_t", file: !629, line: 69, baseType: !665)
!780 = !DIGlobalVariableExpression(var: !776, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!781 = !DIGlobalVariableExpression(var: !782, expr: !DIExpression())
!782 = distinct !DIGlobalVariable(name: "g_uart_regbase", scope: !783, file: !784, line: 53, type: !864, isLocal: false, isDefinition: true)
!783 = distinct !DICompileUnit(language: DW_LANG_C99, file: !784, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !785, retainedTypes: !796, globals: !852, splitDebugInlining: false, nameTableKind: None)
!784 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal_platform.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!785 = !{!97, !168, !638, !631, !786}
!786 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !730, line: 46, baseType: !18, size: 32, elements: !787)
!787 = !{!788, !789, !790, !791, !792, !793, !794, !795}
!788 = !DIEnumerator(name: "UART_INTERRUPT_NONE", value: 0)
!789 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_ERROR", value: 1)
!790 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_TIMEOUT", value: 2)
!791 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_BREAK", value: 3)
!792 = !DIEnumerator(name: "UART_INTERRUPT_RECEIVE_AVAILABLE", value: 4)
!793 = !DIEnumerator(name: "UART_INTERRUPT_SEND_AVAILABLE", value: 5)
!794 = !DIEnumerator(name: "UART_INTERRUPT_SOFTWARE_FLOWCONTROL", value: 6)
!795 = !DIEnumerator(name: "UART_INTERRUPT_HARDWARE_FLOWCONTROL", value: 7)
!796 = !{!797}
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 32)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !800)
!800 = !{!801, !807, !812, !818, !819, !824, !829, !830, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851}
!801 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !799, file: !56, line: 547, baseType: !802, size: 32)
!802 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 543, size: 32, elements: !803)
!803 = !{!804, !805, !806}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !802, file: !56, line: 544, baseType: !272, size: 32)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !802, file: !56, line: 545, baseType: !60, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !802, file: !56, line: 546, baseType: !60, size: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !799, file: !56, line: 551, baseType: !808, size: 32, offset: 32)
!808 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 548, size: 32, elements: !809)
!809 = !{!810, !811}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !808, file: !56, line: 549, baseType: !60, size: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !808, file: !56, line: 550, baseType: !60, size: 32)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !799, file: !56, line: 556, baseType: !813, size: 32, offset: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 552, size: 32, elements: !814)
!814 = !{!815, !816, !817}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !813, file: !56, line: 553, baseType: !272, size: 32)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !813, file: !56, line: 554, baseType: !60, size: 32)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !813, file: !56, line: 555, baseType: !60, size: 32)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !799, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !799, file: !56, line: 561, baseType: !820, size: 32, offset: 128)
!820 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 558, size: 32, elements: !821)
!821 = !{!822, !823}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !820, file: !56, line: 559, baseType: !60, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !820, file: !56, line: 560, baseType: !60, size: 32)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !799, file: !56, line: 565, baseType: !825, size: 32, offset: 160)
!825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 562, size: 32, elements: !826)
!826 = !{!827, !828}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !825, file: !56, line: 563, baseType: !272, size: 32)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !825, file: !56, line: 564, baseType: !60, size: 32)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !799, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !799, file: !56, line: 570, baseType: !831, size: 32, offset: 224)
!831 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !799, file: !56, line: 567, size: 32, elements: !832)
!832 = !{!833, !834}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !831, file: !56, line: 568, baseType: !60, size: 32)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !831, file: !56, line: 569, baseType: !60, size: 32)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !799, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !799, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !799, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !799, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !799, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !799, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !799, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !799, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !799, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !799, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !799, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !799, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !799, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !799, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !799, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !799, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !799, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!852 = !{!781, !853, !858}
!853 = !DIGlobalVariableExpression(var: !854, expr: !DIExpression())
!854 = distinct !DIGlobalVariable(name: "g_uart_port_to_pdn", scope: !783, file: !784, line: 54, type: !855, isLocal: false, isDefinition: true)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 128, elements: !463)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_cg_id", file: !98, line: 1237, baseType: !97)
!858 = !DIGlobalVariableExpression(var: !859, expr: !DIExpression())
!859 = distinct !DIGlobalVariable(name: "g_uart_port_to_irq_num", scope: !783, file: !784, line: 55, type: !860, isLocal: false, isDefinition: true)
!860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !861, size: 128, elements: !463)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_irq_t", file: !56, line: 125, baseType: !863)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "IRQn_Type", file: !56, line: 123, baseType: !168)
!864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 128, elements: !463)
!865 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !797)
!866 = !DIGlobalVariableExpression(var: !867, expr: !DIExpression())
!867 = distinct !DIGlobalVariable(name: "g_spi_slave_status", scope: !868, file: !869, line: 55, type: !971, isLocal: true, isDefinition: true)
!868 = distinct !DICompileUnit(language: DW_LANG_C99, file: !869, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !870, retainedTypes: !940, globals: !942, splitDebugInlining: false, nameTableKind: None)
!869 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_spi_slave.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!870 = !{!871, !879, !883, !887, !891, !895, !903, !915, !926, !930, !168}
!871 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 528, baseType: !7, size: 32, elements: !873)
!872 = !DIFile(filename: "../../../../../driver/chip/inc/hal_spi_slave.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!873 = !{!874, !875, !876, !877, !878}
!874 = !DIEnumerator(name: "HAL_SPI_SLAVE_STATUS_ERROR", value: -4)
!875 = !DIEnumerator(name: "HAL_SPI_SLAVE_STATUS_ERROR_BUSY", value: -3)
!876 = !DIEnumerator(name: "HAL_SPI_SLAVE_STATUS_ERROR_PORT", value: -2)
!877 = !DIEnumerator(name: "HAL_SPI_SLAVE_STATUS_INVALID_PARAMETER", value: -1)
!878 = !DIEnumerator(name: "HAL_SPI_SLAVE_STATUS_OK", value: 0)
!879 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 642, baseType: !18, size: 32, elements: !880)
!880 = !{!881, !882}
!881 = !DIEnumerator(name: "HAL_SPI_SLAVE_0", value: 0)
!882 = !DIEnumerator(name: "HAL_SPI_SLAVE_MAX", value: 1)
!883 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 648, baseType: !18, size: 32, elements: !884)
!884 = !{!885, !886}
!885 = !DIEnumerator(name: "HAL_SPI_SLAVE_LSB_FIRST", value: 0)
!886 = !DIEnumerator(name: "HAL_SPI_SLAVE_MSB_FIRST", value: 1)
!887 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 654, baseType: !18, size: 32, elements: !888)
!888 = !{!889, !890}
!889 = !DIEnumerator(name: "HAL_SPI_SLAVE_CLOCK_POLARITY0", value: 0)
!890 = !DIEnumerator(name: "HAL_SPI_SLAVE_CLOCK_POLARITY1", value: 1)
!891 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 661, baseType: !18, size: 32, elements: !892)
!892 = !{!893, !894}
!893 = !DIEnumerator(name: "HAL_SPI_SLAVE_CLOCK_PHASE0", value: 0)
!894 = !DIEnumerator(name: "HAL_SPI_SLAVE_CLOCK_PHASE1", value: 1)
!895 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !896, line: 74, baseType: !18, size: 32, elements: !897)
!896 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_spi_slave_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!897 = !{!898, !899, !900, !901, !902}
!898 = !DIEnumerator(name: "PWROFF_STA", value: 0)
!899 = !DIEnumerator(name: "PWRON_STA", value: 1)
!900 = !DIEnumerator(name: "CR_STA", value: 2)
!901 = !DIEnumerator(name: "CW_STA", value: 3)
!902 = !DIEnumerator(name: "MAX_STATUS", value: 4)
!903 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 511, baseType: !18, size: 32, elements: !904)
!904 = !{!905, !906, !907, !908, !909, !910, !911, !912, !913, !914}
!905 = !DIEnumerator(name: "HAL_SPI_SLAVE_FSM_SUCCESS_OPERATION", value: 0)
!906 = !DIEnumerator(name: "HAL_SPI_SLAVE_FSM_INVALID_OPERATION", value: 1)
!907 = !DIEnumerator(name: "HAL_SPI_SLAVE_FSM_ERROR_PWROFF_AFTER_CR", value: 2)
!908 = !DIEnumerator(name: "HAL_SPI_SLAVE_FSM_ERROR_PWROFF_AFTER_CW", value: 3)
!909 = !DIEnumerator(name: "HAL_SPI_SLAVE_FSM_ERROR_CONTINOUS_CR", value: 4)
!910 = !DIEnumerator(name: "HAL_SPI_SLAVE_FSM_ERROR_CR_AFTER_CW", value: 5)
!911 = !DIEnumerator(name: "HAL_SPI_SLAVE_FSM_ERROR_CONTINOUS_CW", value: 6)
!912 = !DIEnumerator(name: "HAL_SPI_SLAVE_FSM_ERROR_CW_AFTER_CR", value: 7)
!913 = !DIEnumerator(name: "HAL_SPI_SLAVE_FSM_ERROR_WRITE_AFTER_CR", value: 8)
!914 = !DIEnumerator(name: "HAL_SPI_SLAVE_FSM_ERROR_READ_AFTER_CW", value: 9)
!915 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 667, baseType: !18, size: 32, elements: !916)
!916 = !{!917, !918, !919, !920, !921, !922, !923, !924, !925}
!917 = !DIEnumerator(name: "HAL_SPI_SLAVE_EVENT_POWER_ON", value: 32)
!918 = !DIEnumerator(name: "HAL_SPI_SLAVE_EVENT_POWER_OFF", value: 16)
!919 = !DIEnumerator(name: "HAL_SPI_SLAVE_EVENT_CRD_FINISH", value: 1)
!920 = !DIEnumerator(name: "HAL_SPI_SLAVE_EVENT_RD_FINISH", value: 4)
!921 = !DIEnumerator(name: "HAL_SPI_SLAVE_EVENT_CWR_FINISH", value: 2)
!922 = !DIEnumerator(name: "HAL_SPI_SLAVE_EVENT_WR_FINISH", value: 8)
!923 = !DIEnumerator(name: "HAL_SPI_SLAVE_EVENT_RD_ERR", value: 64)
!924 = !DIEnumerator(name: "HAL_SPI_SLAVE_EVENT_WR_ERR", value: 128)
!925 = !DIEnumerator(name: "HAL_SPI_SLAVE_EVENT_TIMEOUT_ERR", value: 256)
!926 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !872, line: 484, baseType: !18, size: 32, elements: !927)
!927 = !{!928, !929}
!928 = !DIEnumerator(name: "HAL_SPI_SLAVE_EARLY_MISO_DISABLE", value: 0)
!929 = !DIEnumerator(name: "HAL_SPI_SLAVE_EARLY_MISO_ENABLE", value: 1)
!930 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 680, baseType: !18, size: 32, elements: !931)
!931 = !{!932, !933, !934, !935, !936, !937, !938, !939}
!932 = !DIEnumerator(name: "HAL_SPI_SLAVE_CMD_WS", value: 0)
!933 = !DIEnumerator(name: "HAL_SPI_SLAVE_CMD_RS", value: 1)
!934 = !DIEnumerator(name: "HAL_SPI_SLAVE_CMD_WR", value: 2)
!935 = !DIEnumerator(name: "HAL_SPI_SLAVE_CMD_RD", value: 3)
!936 = !DIEnumerator(name: "HAL_SPI_SLAVE_CMD_POWEROFF", value: 4)
!937 = !DIEnumerator(name: "HAL_SPI_SLAVE_CMD_POWERON", value: 5)
!938 = !DIEnumerator(name: "HAL_SPI_SLAVE_CMD_CW", value: 6)
!939 = !DIEnumerator(name: "HAL_SPI_SLAVE_CMD_CR", value: 7)
!940 = !{!88, !61, !941}
!941 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_port_t", file: !98, line: 645, baseType: !879)
!942 = !{!866, !943, !947, !961, !964}
!943 = !DIGlobalVariableExpression(var: !944, expr: !DIExpression())
!944 = distinct !DIGlobalVariable(name: "g_slvx_irq_code", scope: !868, file: !869, line: 48, type: !945, isLocal: true, isDefinition: true)
!945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !946, size: 32, elements: !76)
!946 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !863)
!947 = !DIGlobalVariableExpression(var: !948, expr: !DIExpression())
!948 = distinct !DIGlobalVariable(name: "g_slvx_callback", scope: !868, file: !869, line: 50, type: !949, isLocal: true, isDefinition: true)
!949 = !DICompositeType(tag: DW_TAG_array_type, baseType: !950, size: 32, elements: !76)
!950 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_callback_t", file: !872, line: 583, baseType: !951)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 32)
!952 = !DISubroutineType(types: !953)
!953 = !{null, !954, !88}
!954 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_transaction_status_t", file: !872, line: 557, baseType: !955)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 554, size: 64, elements: !956)
!956 = !{!957, !959}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_status", scope: !955, file: !872, line: 555, baseType: !958, size: 32)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_fsm_status_t", file: !872, line: 522, baseType: !903)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_status", scope: !955, file: !872, line: 556, baseType: !960, size: 32, offset: 32)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_callback_event_t", file: !98, line: 677, baseType: !915)
!961 = !DIGlobalVariableExpression(var: !962, expr: !DIExpression())
!962 = distinct !DIGlobalVariable(name: "g_slvx_user_data", scope: !868, file: !869, line: 51, type: !963, isLocal: true, isDefinition: true)
!963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 32, elements: !76)
!964 = !DIGlobalVariableExpression(var: !965, expr: !DIExpression())
!965 = distinct !DIGlobalVariable(name: "g_slvx_pri_code", scope: !868, file: !869, line: 49, type: !966, isLocal: true, isDefinition: true)
!966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !967, size: 16, elements: !76)
!967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !968)
!968 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !62, line: 36, baseType: !969)
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint16_t", file: !64, line: 57, baseType: !970)
!970 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 8, elements: !76)
!972 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !460)
!973 = !DIGlobalVariableExpression(var: !974, expr: !DIExpression())
!974 = distinct !DIGlobalVariable(name: "g_last2now_status", scope: !975, file: !976, line: 61, type: !1017, isLocal: false, isDefinition: true)
!975 = distinct !DICompileUnit(language: DW_LANG_C99, file: !976, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !977, retainedTypes: !987, globals: !988, splitDebugInlining: false, nameTableKind: None)
!976 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_spi_slave_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!977 = !{!879, !903, !915, !895, !978, !883, !887, !891, !871, !926, !930, !97}
!978 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !896, line: 83, baseType: !18, size: 32, elements: !979)
!979 = !{!980, !981, !982, !983, !984, !985, !986}
!980 = !DIEnumerator(name: "POWER_OFF_CMD", value: 0)
!981 = !DIEnumerator(name: "POWER_ON_CMD", value: 1)
!982 = !DIEnumerator(name: "CONFIG_READ_CMD", value: 2)
!983 = !DIEnumerator(name: "READ_CMD", value: 3)
!984 = !DIEnumerator(name: "CONFIG_WRITE_CMD", value: 4)
!985 = !DIEnumerator(name: "WRITE_CMD", value: 5)
!986 = !DIEnumerator(name: "MAX_OPERATION_CMD", value: 6)
!987 = !{!61}
!988 = !{!973, !989, !1010, !1013}
!989 = !DIGlobalVariableExpression(var: !990, expr: !DIExpression())
!990 = distinct !DIGlobalVariable(name: "spi_slave_register", scope: !975, file: !976, line: 44, type: !991, isLocal: true, isDefinition: true)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !992, size: 32, elements: !76)
!992 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !993)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 32)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "SPI_SLAVE_REGISTER_T", file: !56, line: 1702, baseType: !995)
!995 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1688, size: 416, elements: !996)
!996 = !{!997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_TRANS_TYPE", scope: !995, file: !56, line: 1689, baseType: !272, size: 32)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_TRANS_LENGTH", scope: !995, file: !56, line: 1690, baseType: !272, size: 32, offset: 32)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_TRANS_ADDR", scope: !995, file: !56, line: 1691, baseType: !272, size: 32, offset: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_CTRL", scope: !995, file: !56, line: 1692, baseType: !60, size: 32, offset: 96)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_STATUS", scope: !995, file: !56, line: 1693, baseType: !60, size: 32, offset: 128)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_TIMOUT_THR", scope: !995, file: !56, line: 1694, baseType: !60, size: 32, offset: 160)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_SW_RST", scope: !995, file: !56, line: 1695, baseType: !60, size: 32, offset: 192)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_BUFFER_BASE_ADDR", scope: !995, file: !56, line: 1696, baseType: !60, size: 32, offset: 224)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_BUFFER_SIZE", scope: !995, file: !56, line: 1697, baseType: !60, size: 32, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_IRQ", scope: !995, file: !56, line: 1698, baseType: !272, size: 32, offset: 288)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_MISO_EARLY_HALF_SCK", scope: !995, file: !56, line: 1699, baseType: !60, size: 32, offset: 320)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_CMD_DEFINE0", scope: !995, file: !56, line: 1700, baseType: !60, size: 32, offset: 352)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "SPISLV_CMD_DEFINE1", scope: !995, file: !56, line: 1701, baseType: !60, size: 32, offset: 384)
!1010 = !DIGlobalVariableExpression(var: !1011, expr: !DIExpression())
!1011 = distinct !DIGlobalVariable(name: "g_slvx_cg_code", scope: !975, file: !976, line: 45, type: !1012, isLocal: true, isDefinition: true)
!1012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 32, elements: !76)
!1013 = !DIGlobalVariableExpression(var: !1014, expr: !DIExpression())
!1014 = distinct !DIGlobalVariable(name: "g_spi_slave_fsm", scope: !975, file: !976, line: 46, type: !1015, isLocal: true, isDefinition: true)
!1015 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 768, elements: !1016)
!1016 = !{!464, !315}
!1017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 16, elements: !465)
!1018 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!1019 = distinct !DIGlobalVariable(name: "priority_set", scope: !1020, file: !1021, line: 128, type: !61, isLocal: true, isDefinition: true)
!1020 = distinct !DISubprogram(name: "hal_nvic_init", scope: !1021, file: !1021, line: 126, type: !1022, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !1111)
!1021 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1022 = !DISubroutineType(types: !1023)
!1023 = !{!1024}
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_status_t", file: !716, line: 158, baseType: !715)
!1025 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1021, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1026, retainedTypes: !1027, globals: !1093, splitDebugInlining: false, nameTableKind: None)
!1026 = !{!715, !168}
!1027 = !{!862, !1028, !61, !1061, !1091}
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 32)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1030, line: 418, baseType: !1031)
!1030 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cm4.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1030, line: 395, size: 1120, elements: !1032)
!1032 = !{!1033, !1034, !1035, !1036, !1037, !1038, !1039, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1050, !1051, !1052, !1054, !1058, !1060}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !1031, file: !1030, line: 397, baseType: !272, size: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !1031, file: !1030, line: 398, baseType: !60, size: 32, offset: 32)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !1031, file: !1030, line: 399, baseType: !60, size: 32, offset: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !1031, file: !1030, line: 400, baseType: !60, size: 32, offset: 96)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !1031, file: !1030, line: 401, baseType: !60, size: 32, offset: 128)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !1031, file: !1030, line: 402, baseType: !60, size: 32, offset: 160)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !1031, file: !1030, line: 403, baseType: !1040, size: 96, offset: 192)
!1040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 96, elements: !509)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !1031, file: !1030, line: 404, baseType: !60, size: 32, offset: 288)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !1031, file: !1030, line: 405, baseType: !60, size: 32, offset: 320)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !1031, file: !1030, line: 406, baseType: !60, size: 32, offset: 352)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !1031, file: !1030, line: 407, baseType: !60, size: 32, offset: 384)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !1031, file: !1030, line: 408, baseType: !60, size: 32, offset: 416)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !1031, file: !1030, line: 409, baseType: !60, size: 32, offset: 448)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !1031, file: !1030, line: 410, baseType: !60, size: 32, offset: 480)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !1031, file: !1030, line: 411, baseType: !1049, size: 64, offset: 512)
!1049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 64, elements: !465)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !1031, file: !1030, line: 412, baseType: !272, size: 32, offset: 576)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !1031, file: !1030, line: 413, baseType: !272, size: 32, offset: 608)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !1031, file: !1030, line: 414, baseType: !1053, size: 128, offset: 640)
!1053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 128, elements: !463)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !1031, file: !1030, line: 415, baseType: !1055, size: 160, offset: 768)
!1055 = !DICompositeType(tag: DW_TAG_array_type, baseType: !272, size: 160, elements: !1056)
!1056 = !{!1057}
!1057 = !DISubrange(count: 5)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1031, file: !1030, line: 416, baseType: !1059, size: 160, offset: 928)
!1059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 160, elements: !1056)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !1031, file: !1030, line: 417, baseType: !60, size: 32, offset: 1088)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 32)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1030, line: 378, baseType: !1063)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1030, line: 363, size: 28704, elements: !1064)
!1064 = !{!1065, !1067, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1082, !1086, !1090}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !1063, file: !1030, line: 365, baseType: !1066, size: 256)
!1066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 256, elements: !753)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !1063, file: !1030, line: 366, baseType: !1068, size: 768, offset: 256)
!1068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 768, elements: !1069)
!1069 = !{!1070}
!1070 = !DISubrange(count: 24)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !1063, file: !1030, line: 367, baseType: !1066, size: 256, offset: 1024)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !1063, file: !1030, line: 368, baseType: !1068, size: 768, offset: 1280)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !1063, file: !1030, line: 369, baseType: !1066, size: 256, offset: 2048)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !1063, file: !1030, line: 370, baseType: !1068, size: 768, offset: 2304)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !1063, file: !1030, line: 371, baseType: !1066, size: 256, offset: 3072)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !1063, file: !1030, line: 372, baseType: !1068, size: 768, offset: 3328)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !1063, file: !1030, line: 373, baseType: !1066, size: 256, offset: 4096)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !1063, file: !1030, line: 374, baseType: !1079, size: 1792, offset: 4352)
!1079 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 1792, elements: !1080)
!1080 = !{!1081}
!1081 = !DISubrange(count: 56)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !1063, file: !1030, line: 375, baseType: !1083, size: 1920, offset: 6144)
!1083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 1920, elements: !1084)
!1084 = !{!1085}
!1085 = !DISubrange(count: 240)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !1063, file: !1030, line: 376, baseType: !1087, size: 20608, offset: 8064)
!1087 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 20608, elements: !1088)
!1088 = !{!1089}
!1089 = !DISubrange(count: 644)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !1063, file: !1030, line: 377, baseType: !60, size: 32, offset: 28672)
!1091 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !62, line: 44, baseType: !1092)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !64, line: 77, baseType: !7)
!1093 = !{!1094, !1095, !1108}
!1094 = !DIGlobalVariableExpression(var: !1019, expr: !DIExpression())
!1095 = !DIGlobalVariableExpression(var: !1096, expr: !DIExpression())
!1096 = distinct !DIGlobalVariable(name: "nvic_function_table", scope: !1025, file: !1021, line: 119, type: !1097, isLocal: false, isDefinition: true)
!1097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1098, size: 4096, elements: !1106)
!1098 = !DIDerivedType(tag: DW_TAG_typedef, name: "nvic_function_t", file: !1021, line: 50, baseType: !1099)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1021, line: 47, size: 64, elements: !1100)
!1100 = !{!1101, !1105}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "nvic_callback", scope: !1099, file: !1021, line: 48, baseType: !1102, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1103, size: 32)
!1103 = !DISubroutineType(types: !1104)
!1104 = !{null, !862}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pending", scope: !1099, file: !1021, line: 49, baseType: !61, size: 32, offset: 32)
!1106 = !{!1107}
!1107 = !DISubrange(count: 64)
!1108 = !DIGlobalVariableExpression(var: !1109, expr: !DIExpression())
!1109 = distinct !DIGlobalVariable(name: "defualt_irq_priority", scope: !1025, file: !1021, line: 52, type: !1110, isLocal: true, isDefinition: true)
!1110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 2048, elements: !1106)
!1111 = !{!1112}
!1112 = !DILocalVariable(name: "i", scope: !1020, file: !1021, line: 129, type: !61)
!1113 = !DIGlobalVariableExpression(var: !1114, expr: !DIExpression())
!1114 = distinct !DIGlobalVariable(name: "DelayResume", scope: !1115, file: !1116, line: 55, type: !91, isLocal: false, isDefinition: true)
!1115 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1116, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1117, retainedTypes: !1152, globals: !1188, splitDebugInlining: false, nameTableKind: None)
!1116 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_common.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1117 = !{!1118, !1126, !1131}
!1118 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_clock_enum_t", file: !1119, line: 51, baseType: !18, size: 32, elements: !1120)
!1119 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sfi_release.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1120 = !{!1121, !1122, !1123, !1124, !1125}
!1121 = !DIEnumerator(name: "SFI_CLK_UNKNOWN", value: 0)
!1122 = !DIEnumerator(name: "SFI_CLK_78MHZ", value: 78)
!1123 = !DIEnumerator(name: "SFI_CLK_104MHZ", value: 104)
!1124 = !DIEnumerator(name: "SFI_CLK_130MHZ", value: 130)
!1125 = !DIEnumerator(name: "SFI_CLK_166MHZ", value: 166)
!1126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sfi_voltage_enum_t", file: !1119, line: 62, baseType: !18, size: 32, elements: !1127)
!1127 = !{!1128, !1129, !1130}
!1128 = !DIEnumerator(name: "SFI_Voltage_UNKNOWN", value: 0)
!1129 = !DIEnumerator(name: "SFI_Voltage_18", value: 18)
!1130 = !DIEnumerator(name: "SFI_Voltage_30", value: 30)
!1131 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1132, line: 228, baseType: !18, size: 32, elements: !1133)
!1132 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_clock_platform_mt2523.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1133 = !{!1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151}
!1134 = !DIEnumerator(name: "BUS_MUX_SEL", value: 0)
!1135 = !DIEnumerator(name: "CM_MUX_SEL", value: 1)
!1136 = !DIEnumerator(name: "SFC_MUX_SEL", value: 2)
!1137 = !DIEnumerator(name: "SLCD_MUX_SEL", value: 3)
!1138 = !DIEnumerator(name: "BSI_MUX_SEL", value: 4)
!1139 = !DIEnumerator(name: "DSP_MUX_SEL", value: 5)
!1140 = !DIEnumerator(name: "CAM_MUX_SEL", value: 6)
!1141 = !DIEnumerator(name: "USB_MUX_SEL", value: 7)
!1142 = !DIEnumerator(name: "DISP_PWM_MUX_SEL", value: 8)
!1143 = !DIEnumerator(name: "MSDC0_MUX_SEL", value: 9)
!1144 = !DIEnumerator(name: "MSDC1_MUX_SEL", value: 10)
!1145 = !DIEnumerator(name: "LP_CLKSQ_MUX_SEL", value: 11)
!1146 = !DIEnumerator(name: "LP_LFOSC_MUX_SEL", value: 12)
!1147 = !DIEnumerator(name: "RG_SLCD_CK_SEL", value: 13)
!1148 = !DIEnumerator(name: "GP_F26M_GFMUX_SEL", value: 14)
!1149 = !DIEnumerator(name: "LP_F26M_GFMUX_SEL", value: 15)
!1150 = !DIEnumerator(name: "NR_MUXS", value: 16)
!1151 = !DIEnumerator(name: "CLK_MUX_SEL_NONE", value: 17)
!1152 = !{!1153, !1154, !1176, !762, !61, !18, !1182, !1184, !1185, !1187}
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 32)
!1155 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1156)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1157)
!1157 = !{!1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1156, file: !56, line: 2759, baseType: !60, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1156, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1156, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1156, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1156, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1156, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1156, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1156, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1156, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1156, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1156, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1156, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1156, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1156, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1156, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1156, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1156, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1156, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1178)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1179)
!1179 = !{!1180, !1181}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1178, file: !56, line: 2799, baseType: !60, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1178, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1183, size: 32)
!1183 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1186, size: 32)
!1186 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !462)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 32)
!1188 = !{!1113, !1189, !1191, !1193, !1195, !1197, !1199, !1201, !1203, !1205, !1207}
!1189 = !DIGlobalVariableExpression(var: !1190, expr: !DIExpression())
!1190 = distinct !DIGlobalVariable(name: "NOR_FLASH_LeaveDPDCmd", scope: !1115, file: !1116, line: 604, type: !460, isLocal: false, isDefinition: true)
!1191 = !DIGlobalVariableExpression(var: !1192, expr: !DIExpression())
!1192 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartAddr", scope: !1115, file: !1116, line: 605, type: !61, isLocal: false, isDefinition: true)
!1193 = !DIGlobalVariableExpression(var: !1194, expr: !DIExpression())
!1194 = distinct !DIGlobalVariable(name: "NOR_FLASH_FATStartValue", scope: !1115, file: !1116, line: 606, type: !61, isLocal: false, isDefinition: true)
!1195 = !DIGlobalVariableExpression(var: !1196, expr: !DIExpression())
!1196 = distinct !DIGlobalVariable(name: "SFI_MAC_CTL_BACKUP", scope: !1115, file: !1116, line: 607, type: !61, isLocal: false, isDefinition: true)
!1197 = !DIGlobalVariableExpression(var: !1198, expr: !DIExpression())
!1198 = distinct !DIGlobalVariable(name: "SFI_DIRECT_CTL_BACKUP", scope: !1115, file: !1116, line: 608, type: !61, isLocal: false, isDefinition: true)
!1199 = !DIGlobalVariableExpression(var: !1200, expr: !DIExpression())
!1200 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL_BACKUP", scope: !1115, file: !1116, line: 609, type: !61, isLocal: false, isDefinition: true)
!1201 = !DIGlobalVariableExpression(var: !1202, expr: !DIExpression())
!1202 = distinct !DIGlobalVariable(name: "SFI_MISC_CTL2_BACKUP", scope: !1115, file: !1116, line: 610, type: !61, isLocal: false, isDefinition: true)
!1203 = !DIGlobalVariableExpression(var: !1204, expr: !DIExpression())
!1204 = distinct !DIGlobalVariable(name: "SFI_DLY_CTL_3_BACKUP", scope: !1115, file: !1116, line: 611, type: !61, isLocal: false, isDefinition: true)
!1205 = !DIGlobalVariableExpression(var: !1206, expr: !DIExpression())
!1206 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_MISC_CTL_BACKUP", scope: !1115, file: !1116, line: 665, type: !61, isLocal: false, isDefinition: true)
!1207 = !DIGlobalVariableExpression(var: !1208, expr: !DIExpression())
!1208 = distinct !DIGlobalVariable(name: "SFI_CLK_SWITCH_DLY_CTL_3_BACKUP", scope: !1115, file: !1116, line: 666, type: !61, isLocal: false, isDefinition: true)
!1209 = !DIGlobalVariableExpression(var: !1210, expr: !DIExpression())
!1210 = distinct !DIGlobalVariable(name: "sf_dal_brbusy_wait", scope: !1211, file: !1212, line: 334, type: !91, isLocal: false, isDefinition: true)
!1211 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1212, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1213, retainedTypes: !1381, globals: !1521, splitDebugInlining: false, nameTableKind: None)
!1212 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd_dal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1213 = !{!1214, !1305, !1311, !1318, !1330, !1341, !1350, !1359, !1363, !1367}
!1214 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1215, line: 58, baseType: !7, size: 32, elements: !1216)
!1215 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_fs_type.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1216 = !{!1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304}
!1217 = !DIEnumerator(name: "FS_NO_ERROR", value: 0)
!1218 = !DIEnumerator(name: "FS_ERROR_RESERVED", value: -1)
!1219 = !DIEnumerator(name: "FS_PARAM_ERROR", value: -2)
!1220 = !DIEnumerator(name: "FS_INVALID_FILENAME", value: -3)
!1221 = !DIEnumerator(name: "FS_DRIVE_NOT_FOUND", value: -4)
!1222 = !DIEnumerator(name: "FS_TOO_MANY_FILES", value: -5)
!1223 = !DIEnumerator(name: "FS_NO_MORE_FILES", value: -6)
!1224 = !DIEnumerator(name: "FS_WRONG_MEDIA", value: -7)
!1225 = !DIEnumerator(name: "FS_INVALID_FILE_SYSTEM", value: -8)
!1226 = !DIEnumerator(name: "FS_FILE_NOT_FOUND", value: -9)
!1227 = !DIEnumerator(name: "FS_INVALID_FILE_HANDLE", value: -10)
!1228 = !DIEnumerator(name: "FS_UNSUPPORTED_DEVICE", value: -11)
!1229 = !DIEnumerator(name: "FS_UNSUPPORTED_DRIVER_FUNCTION", value: -12)
!1230 = !DIEnumerator(name: "FS_CORRUPTED_PARTITION_TABLE", value: -13)
!1231 = !DIEnumerator(name: "FS_TOO_MANY_DRIVES", value: -14)
!1232 = !DIEnumerator(name: "FS_INVALID_FILE_POS", value: -15)
!1233 = !DIEnumerator(name: "FS_ACCESS_DENIED", value: -16)
!1234 = !DIEnumerator(name: "FS_STRING_BUFFER_TOO_SMALL", value: -17)
!1235 = !DIEnumerator(name: "FS_GENERAL_FAILURE", value: -18)
!1236 = !DIEnumerator(name: "FS_PATH_NOT_FOUND", value: -19)
!1237 = !DIEnumerator(name: "FS_FAT_ALLOC_ERROR", value: -20)
!1238 = !DIEnumerator(name: "FS_ROOT_DIR_FULL", value: -21)
!1239 = !DIEnumerator(name: "FS_DISK_FULL", value: -22)
!1240 = !DIEnumerator(name: "FS_TIMEOUT", value: -23)
!1241 = !DIEnumerator(name: "FS_BAD_SECTOR", value: -24)
!1242 = !DIEnumerator(name: "FS_DATA_ERROR", value: -25)
!1243 = !DIEnumerator(name: "FS_MEDIA_CHANGED", value: -26)
!1244 = !DIEnumerator(name: "FS_SECTOR_NOT_FOUND", value: -27)
!1245 = !DIEnumerator(name: "FS_ADDRESS_MARK_NOT_FOUND", value: -28)
!1246 = !DIEnumerator(name: "FS_DRIVE_NOT_READY", value: -29)
!1247 = !DIEnumerator(name: "FS_WRITE_PROTECTION", value: -30)
!1248 = !DIEnumerator(name: "FS_DMA_OVERRUN", value: -31)
!1249 = !DIEnumerator(name: "FS_CRC_ERROR", value: -32)
!1250 = !DIEnumerator(name: "FS_DEVICE_RESOURCE_ERROR", value: -33)
!1251 = !DIEnumerator(name: "FS_INVALID_SECTOR_SIZE", value: -34)
!1252 = !DIEnumerator(name: "FS_OUT_OF_BUFFERS", value: -35)
!1253 = !DIEnumerator(name: "FS_FILE_EXISTS", value: -36)
!1254 = !DIEnumerator(name: "FS_LONG_FILE_POS", value: -37)
!1255 = !DIEnumerator(name: "FS_FILE_TOO_LARGE", value: -38)
!1256 = !DIEnumerator(name: "FS_BAD_DIR_ENTRY", value: -39)
!1257 = !DIEnumerator(name: "FS_ATTR_CONFLICT", value: -40)
!1258 = !DIEnumerator(name: "FS_CHECKDISK_RETRY", value: -41)
!1259 = !DIEnumerator(name: "FS_LACK_OF_PROTECTION_SPACE", value: -42)
!1260 = !DIEnumerator(name: "FS_SYSTEM_CRASH", value: -43)
!1261 = !DIEnumerator(name: "FS_FAIL_GET_MEM", value: -44)
!1262 = !DIEnumerator(name: "FS_READ_ONLY_ERROR", value: -45)
!1263 = !DIEnumerator(name: "FS_DEVICE_BUSY", value: -46)
!1264 = !DIEnumerator(name: "FS_ABORTED_ERROR", value: -47)
!1265 = !DIEnumerator(name: "FS_QUOTA_OVER_DISK_SPACE", value: -48)
!1266 = !DIEnumerator(name: "FS_PATH_OVER_LEN_ERROR", value: -49)
!1267 = !DIEnumerator(name: "FS_APP_QUOTA_FULL", value: -50)
!1268 = !DIEnumerator(name: "FS_VF_MAP_ERROR", value: -51)
!1269 = !DIEnumerator(name: "FS_DEVICE_EXPORTED_ERROR", value: -52)
!1270 = !DIEnumerator(name: "FS_DISK_FRAGMENT", value: -53)
!1271 = !DIEnumerator(name: "FS_DIRCACHE_EXPIRED", value: -54)
!1272 = !DIEnumerator(name: "FS_QUOTA_USAGE_WARNING", value: -55)
!1273 = !DIEnumerator(name: "FS_ERR_DIRDATA_LOCKED", value: -56)
!1274 = !DIEnumerator(name: "FS_INVALID_OPERATION", value: -57)
!1275 = !DIEnumerator(name: "FS_ERR_VF_PARENT_CLOSED", value: -58)
!1276 = !DIEnumerator(name: "FS_ERR_UNSUPPORTED_SERVICE", value: -59)
!1277 = !DIEnumerator(name: "FS_ERR_INVALID_JOB_ID", value: -81)
!1278 = !DIEnumerator(name: "FS_ERR_ASYNC_JOB_NOT_FOUND", value: -82)
!1279 = !DIEnumerator(name: "FS_MSDC_MOUNT_ERROR", value: -100)
!1280 = !DIEnumerator(name: "FS_MSDC_READ_SECTOR_ERROR", value: -101)
!1281 = !DIEnumerator(name: "FS_MSDC_WRITE_SECTOR_ERROR", value: -102)
!1282 = !DIEnumerator(name: "FS_MSDC_DISCARD_SECTOR_ERROR", value: -103)
!1283 = !DIEnumerator(name: "FS_MSDC_PRESNET_NOT_READY", value: -104)
!1284 = !DIEnumerator(name: "FS_MSDC_NOT_PRESENT", value: -105)
!1285 = !DIEnumerator(name: "FS_EXTERNAL_DEVICE_NOT_PRESENT", value: -106)
!1286 = !DIEnumerator(name: "FS_HIGH_LEVEL_FORMAT_ERROR", value: -107)
!1287 = !DIEnumerator(name: "FS_CARD_BATCHCOUNT_NOT_PRESENT", value: -110)
!1288 = !DIEnumerator(name: "FS_FLASH_MOUNT_ERROR", value: -120)
!1289 = !DIEnumerator(name: "FS_FLASH_ERASE_BUSY", value: -121)
!1290 = !DIEnumerator(name: "FS_NAND_DEVICE_NOT_SUPPORTED", value: -122)
!1291 = !DIEnumerator(name: "FS_FLASH_OTP_UNKNOWERR", value: -123)
!1292 = !DIEnumerator(name: "FS_FLASH_OTP_OVERSCOPE", value: -124)
!1293 = !DIEnumerator(name: "FS_FLASH_OTP_WRITEFAIL", value: -125)
!1294 = !DIEnumerator(name: "FS_FDM_VERSION_MISMATCH", value: -126)
!1295 = !DIEnumerator(name: "FS_FLASH_OTP_LOCK_ALREADY", value: -127)
!1296 = !DIEnumerator(name: "FS_FDM_FORMAT_ERROR", value: -128)
!1297 = !DIEnumerator(name: "FS_FDM_USER_DRIVE_BROKEN", value: -129)
!1298 = !DIEnumerator(name: "FS_FDM_SYS_DRIVE_BROKEN", value: -130)
!1299 = !DIEnumerator(name: "FS_FDM_MULTIPLE_BROKEN", value: -131)
!1300 = !DIEnumerator(name: "FS_LOCK_MUTEX_FAIL", value: -141)
!1301 = !DIEnumerator(name: "FS_NO_NONBLOCKMODE", value: -142)
!1302 = !DIEnumerator(name: "FS_NO_PROTECTIONMODE", value: -143)
!1303 = !DIEnumerator(name: "FS_DISK_SIZE_TOO_LARGE", value: -100)
!1304 = !DIEnumerator(name: "FS_MINIMUM_ERROR_CODE", value: -65536)
!1305 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1306, line: 81, baseType: !18, size: 32, elements: !1307)
!1306 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_sf_dal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1307 = !{!1308, !1309, !1310}
!1308 = !DIEnumerator(name: "SFDRV_READY", value: 0)
!1309 = !DIEnumerator(name: "SFDRV_PROGRAMMING", value: 1)
!1310 = !DIEnumerator(name: "SFDRV_ERASING", value: 2)
!1311 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1212, line: 298, baseType: !18, size: 32, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316, !1317}
!1313 = !DIEnumerator(name: "sf_fix_winbond_cv", value: 1)
!1314 = !DIEnumerator(name: "sf_fix_winbond_dw", value: 2)
!1315 = !DIEnumerator(name: "sf_fix_mxic_35e", value: 4)
!1316 = !DIEnumerator(name: "sf_fix_fidelix_q32a", value: 8)
!1317 = !DIEnumerator(name: "sf_fix_gigadevice_b", value: 16)
!1318 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 51, baseType: !18, size: 32, elements: !1320)
!1319 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_sf.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1320 = !{!1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329}
!1321 = !DIEnumerator(name: "SF_SR_BUSY", value: 0)
!1322 = !DIEnumerator(name: "SF_SR_WEL", value: 1)
!1323 = !DIEnumerator(name: "SF_SR_WSE", value: 2)
!1324 = !DIEnumerator(name: "SF_SR_WSP", value: 3)
!1325 = !DIEnumerator(name: "SF_SR_BP", value: 4)
!1326 = !DIEnumerator(name: "SF_SR_SRWD", value: 5)
!1327 = !DIEnumerator(name: "SF_SR_OTPLOCK", value: 6)
!1328 = !DIEnumerator(name: "SF_SR_FAIL", value: 7)
!1329 = !DIEnumerator(name: "SF_SR_COUNT", value: 8)
!1330 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1331, line: 110, baseType: !7, size: 32, elements: !1332)
!1331 = !DIFile(filename: "../../../../../driver/chip/inc/hal_flash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1332 = !{!1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340}
!1333 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_ERASE_FAIL", value: -7)
!1334 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_PROG_FAIL", value: -6)
!1335 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_INIT", value: -5)
!1336 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_NO_SPACE", value: -4)
!1337 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_WRONG_ADDRESS", value: -3)
!1338 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR_LOCKED", value: -2)
!1339 = !DIEnumerator(name: "HAL_FLASH_STATUS_ERROR", value: -1)
!1340 = !DIEnumerator(name: "HAL_FLASH_STATUS_OK", value: 0)
!1341 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 73, baseType: !18, size: 32, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346, !1347, !1348, !1349}
!1343 = !DIEnumerator(name: "SF_MXIC_SR_BUSY", value: 1)
!1344 = !DIEnumerator(name: "SF_MXIC_SR_WEL", value: 2)
!1345 = !DIEnumerator(name: "SF_MXIC_SR_WSE", value: 8)
!1346 = !DIEnumerator(name: "SF_MXIC_SR_WSP", value: 4)
!1347 = !DIEnumerator(name: "SF_MXIC_SR_BP", value: 60)
!1348 = !DIEnumerator(name: "SF_MXIC_SR_SRWD", value: 128)
!1349 = !DIEnumerator(name: "SF_MXIC_SR_ALL", value: 255)
!1350 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 83, baseType: !18, size: 32, elements: !1351)
!1351 = !{!1352, !1353, !1354, !1355, !1356, !1357, !1358}
!1352 = !DIEnumerator(name: "SF_MXIC_SSR_OTP", value: 1)
!1353 = !DIEnumerator(name: "SF_MXIC_SSR_LDSO", value: 2)
!1354 = !DIEnumerator(name: "SF_MXIC_SSR_WSP", value: 4)
!1355 = !DIEnumerator(name: "SF_MXIC_SSR_WSE", value: 8)
!1356 = !DIEnumerator(name: "SF_MXIC_SSR_PFAIL", value: 32)
!1357 = !DIEnumerator(name: "SF_MXIC_SSR_EFAIL", value: 64)
!1358 = !DIEnumerator(name: "SF_MXIC_SSR_WPSEL", value: 128)
!1359 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1319, line: 98, baseType: !18, size: 32, elements: !1360)
!1360 = !{!1361, !1362}
!1361 = !DIEnumerator(name: "SF_WINBOND_SSR_SUS", value: 128)
!1362 = !DIEnumerator(name: "SF_WINBOND_SSR_OTP", value: 60)
!1363 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1306, line: 76, baseType: !18, size: 32, elements: !1364)
!1364 = !{!1365, !1366}
!1365 = !DIEnumerator(name: "SF_IOCTRL_UNLOCK_BLOCK", value: 0)
!1366 = !DIEnumerator(name: "SF_IOCTRL_GET_PROGRAM_FAIL_HANDLE_TYPE", value: 1)
!1367 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1306, line: 208, baseType: !18, size: 32, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380}
!1369 = !DIEnumerator(name: "SF_DAL_TYPE_NONE", value: 0)
!1370 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX", value: 32)
!1371 = !DIEnumerator(name: "SF_DAL_TYPE_NUMONYX_W", value: 44)
!1372 = !DIEnumerator(name: "SF_DAL_TYPE_EON", value: 28)
!1373 = !DIEnumerator(name: "SF_DAL_TYPE_SST", value: 191)
!1374 = !DIEnumerator(name: "SF_DAL_TYPE_MXIC", value: 194)
!1375 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE", value: 200)
!1376 = !DIEnumerator(name: "SF_DAL_TYPE_GIGADEVICE_MD", value: 81)
!1377 = !DIEnumerator(name: "SF_DAL_TYPE_WINBOND", value: 239)
!1378 = !DIEnumerator(name: "SF_DAL_TYPE_FIDELIX", value: 248)
!1379 = !DIEnumerator(name: "SF_DAL_TYPE_ESMT", value: 140)
!1380 = !DIEnumerator(name: "SF_DAL_TYPE_COUNT", value: 141)
!1381 = !{!61, !1153, !1184, !762, !1382, !1492, !1514, !88, !1520, !462}
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 32)
!1383 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1306, line: 193, baseType: !1384)
!1384 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 134, size: 1824, elements: !1385)
!1385 = !{!1386, !1387, !1388, !1395, !1401, !1405, !1413, !1414, !1421, !1422, !1423, !1424, !1432, !1435, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1486, !1487, !1491}
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1384, file: !1306, line: 136, baseType: !61, size: 32)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1384, file: !1306, line: 137, baseType: !762, size: 32, offset: 32)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1384, file: !1306, line: 138, baseType: !1389, size: 32, offset: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !1391)
!1390 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_kal_public_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 32)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !1393)
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1392, file: !1390, line: 55, baseType: !460, size: 8)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1384, file: !1306, line: 139, baseType: !1396, size: 32, offset: 96)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !1397)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 32)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !1399)
!1399 = !{!1400}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1398, file: !1390, line: 45, baseType: !460, size: 8)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1384, file: !1306, line: 140, baseType: !1402, size: 8, offset: 128)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !62, line: 20, baseType: !1403)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int8_t", file: !64, line: 41, baseType: !1404)
!1404 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1384, file: !1306, line: 143, baseType: !1406, size: 32, offset: 160)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 32)
!1407 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !1409)
!1408 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_drvflash.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !1410)
!1410 = !{!1411, !1412}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1409, file: !1408, line: 144, baseType: !61, size: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1409, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1384, file: !1306, line: 144, baseType: !762, size: 32, offset: 192)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1384, file: !1306, line: 145, baseType: !1415, size: 32, offset: 224)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !1418)
!1418 = !{!1419, !1420}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1417, file: !1408, line: 150, baseType: !61, size: 32)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1417, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1384, file: !1306, line: 146, baseType: !762, size: 32, offset: 256)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1384, file: !1306, line: 147, baseType: !61, size: 32, offset: 288)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1384, file: !1306, line: 148, baseType: !762, size: 32, offset: 320)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1384, file: !1306, line: 151, baseType: !1425, size: 1024, offset: 352)
!1425 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1426, size: 1024, elements: !1431)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !1427)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !1428)
!1428 = !{!1429, !1430}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1427, file: !1408, line: 168, baseType: !61, size: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1427, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!1431 = !{!754, !466}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1384, file: !1306, line: 155, baseType: !1433, size: 32, offset: 1376)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_Status", file: !1319, line: 120, baseType: !460)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1384, file: !1306, line: 156, baseType: !1436, size: 32, offset: 1408)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 32)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1306, line: 124, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 90, size: 200, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1438, file: !1306, line: 91, baseType: !460, size: 8)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1438, file: !1306, line: 92, baseType: !460, size: 8, offset: 8)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1438, file: !1306, line: 94, baseType: !460, size: 8, offset: 16)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1438, file: !1306, line: 95, baseType: !460, size: 8, offset: 24)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1438, file: !1306, line: 96, baseType: !460, size: 8, offset: 32)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1438, file: !1306, line: 98, baseType: !460, size: 8, offset: 40)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1438, file: !1306, line: 99, baseType: !460, size: 8, offset: 48)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1438, file: !1306, line: 100, baseType: !460, size: 8, offset: 56)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1438, file: !1306, line: 101, baseType: !460, size: 8, offset: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1438, file: !1306, line: 103, baseType: !460, size: 8, offset: 72)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1438, file: !1306, line: 104, baseType: !460, size: 8, offset: 80)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1438, file: !1306, line: 106, baseType: !460, size: 8, offset: 88)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1438, file: !1306, line: 107, baseType: !460, size: 8, offset: 96)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1438, file: !1306, line: 108, baseType: !460, size: 8, offset: 104)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1438, file: !1306, line: 109, baseType: !460, size: 8, offset: 112)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1438, file: !1306, line: 110, baseType: !460, size: 8, offset: 120)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1438, file: !1306, line: 111, baseType: !460, size: 8, offset: 128)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1438, file: !1306, line: 112, baseType: !460, size: 8, offset: 136)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1438, file: !1306, line: 114, baseType: !460, size: 8, offset: 144)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1438, file: !1306, line: 115, baseType: !460, size: 8, offset: 152)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1438, file: !1306, line: 118, baseType: !460, size: 8, offset: 160)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1438, file: !1306, line: 119, baseType: !460, size: 8, offset: 168)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1438, file: !1306, line: 120, baseType: !460, size: 8, offset: 176)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1438, file: !1306, line: 121, baseType: !460, size: 8, offset: 184)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1438, file: !1306, line: 122, baseType: !460, size: 8, offset: 192)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1384, file: !1306, line: 157, baseType: !61, size: 32, offset: 1440)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1384, file: !1306, line: 158, baseType: !968, size: 16, offset: 1472)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1384, file: !1306, line: 159, baseType: !968, size: 16, offset: 1488)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1384, file: !1306, line: 163, baseType: !968, size: 16, offset: 1504)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1384, file: !1306, line: 164, baseType: !968, size: 16, offset: 1520)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1384, file: !1306, line: 167, baseType: !460, size: 8, offset: 1536)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1384, file: !1306, line: 168, baseType: !1472, size: 24, offset: 1544)
!1472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 24, elements: !1473)
!1473 = !{!1474}
!1474 = !DISubrange(count: 3)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1384, file: !1306, line: 169, baseType: !460, size: 8, offset: 1568)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1384, file: !1306, line: 170, baseType: !460, size: 8, offset: 1576)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1384, file: !1306, line: 173, baseType: !968, size: 16, offset: 1584)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1384, file: !1306, line: 174, baseType: !61, size: 32, offset: 1600)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1384, file: !1306, line: 175, baseType: !61, size: 32, offset: 1632)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1384, file: !1306, line: 178, baseType: !91, size: 8, offset: 1664)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1384, file: !1306, line: 179, baseType: !91, size: 8, offset: 1672)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1384, file: !1306, line: 182, baseType: !1483, size: 32, offset: 1696)
!1483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1484, size: 32)
!1484 = !DISubroutineType(types: !1485)
!1485 = !{!7, !88}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1384, file: !1306, line: 186, baseType: !1483, size: 32, offset: 1728)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1384, file: !1306, line: 187, baseType: !1488, size: 32, offset: 1760)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 32)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!7, !88, !61, !88, !61}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1384, file: !1306, line: 188, baseType: !1488, size: 32, offset: 1792)
!1492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 32)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_REGISTER_T", file: !56, line: 2777, baseType: !1494)
!1494 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2758, size: 576, elements: !1495)
!1495 = !{!1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513}
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_CTL", scope: !1494, file: !56, line: 2759, baseType: !60, size: 32)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL", scope: !1494, file: !56, line: 2760, baseType: !60, size: 32, offset: 32)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL", scope: !1494, file: !56, line: 2761, baseType: !60, size: 32, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL2", scope: !1494, file: !56, line: 2762, baseType: !60, size: 32, offset: 96)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_OUTL", scope: !1494, file: !56, line: 2763, baseType: !60, size: 32, offset: 128)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MAC_INL", scope: !1494, file: !56, line: 2764, baseType: !60, size: 32, offset: 160)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_RESET_CTL", scope: !1494, file: !56, line: 2765, baseType: !60, size: 32, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_STA2_CTL", scope: !1494, file: !56, line: 2766, baseType: !60, size: 32, offset: 224)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL1", scope: !1494, file: !56, line: 2767, baseType: !60, size: 32, offset: 256)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL2", scope: !1494, file: !56, line: 2768, baseType: !60, size: 32, offset: 288)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL3", scope: !1494, file: !56, line: 2769, baseType: !60, size: 32, offset: 320)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY1", scope: !1494, file: !56, line: 2770, baseType: !60, size: 32, offset: 352)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL4", scope: !1494, file: !56, line: 2771, baseType: !60, size: 32, offset: 384)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL5", scope: !1494, file: !56, line: 2772, baseType: !60, size: 32, offset: 416)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DLY_CTL6", scope: !1494, file: !56, line: 2773, baseType: !60, size: 32, offset: 448)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DUMMY2", scope: !1494, file: !56, line: 2774, baseType: !60, size: 32, offset: 480)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_DIRECT_CTL2", scope: !1494, file: !56, line: 2775, baseType: !60, size: 32, offset: 512)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_MISC_CTL3", scope: !1494, file: !56, line: 2776, baseType: !60, size: 32, offset: 544)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = !DIDerivedType(tag: DW_TAG_typedef, name: "SFC_GPRAM_REGISTER_T", file: !56, line: 2801, baseType: !1516)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2798, size: 64, elements: !1517)
!1517 = !{!1518, !1519}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA", scope: !1516, file: !56, line: 2799, baseType: !60, size: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "RW_SF_GPRAM_DATA_OF_4", scope: !1516, file: !56, line: 2800, baseType: !60, size: 32, offset: 32)
!1520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 32)
!1521 = !{!1209, !1522, !1524, !1526, !1531}
!1522 = !DIGlobalVariableExpression(var: !1523, expr: !DIExpression())
!1523 = distinct !DIGlobalVariable(name: "sf_dal_resume_time", scope: !1211, file: !1212, line: 382, type: !61, isLocal: false, isDefinition: true)
!1524 = !DIGlobalVariableExpression(var: !1525, expr: !DIExpression())
!1525 = distinct !DIGlobalVariable(name: "sf_dal_flash_return_ready_max", scope: !1211, file: !1212, line: 383, type: !61, isLocal: false, isDefinition: true)
!1526 = !DIGlobalVariableExpression(var: !1527, expr: !DIExpression())
!1527 = distinct !DIGlobalVariable(name: "tmp_data_buffer", scope: !1211, file: !1212, line: 369, type: !1528, isLocal: true, isDefinition: true)
!1528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1024, elements: !1529)
!1529 = !{!1530}
!1530 = !DISubrange(count: 128)
!1531 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression())
!1532 = distinct !DIGlobalVariable(name: "MTDMutex", scope: !1211, file: !1212, line: 1409, type: !7, isLocal: true, isDefinition: true)
!1533 = !DIGlobalVariableExpression(var: !1532, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1534 = !DIGlobalVariableExpression(var: !1535, expr: !DIExpression())
!1535 = distinct !DIGlobalVariable(name: "combo_mem_id_list", scope: !1536, file: !1591, line: 35, type: !1592, isLocal: false, isDefinition: true)
!1536 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1537, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1538, retainedTypes: !1584, globals: !1585, splitDebugInlining: false, nameTableKind: None)
!1537 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_init.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1538 = !{!1539}
!1539 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1540, line: 77, baseType: !18, size: 32, elements: !1541)
!1540 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_general_types.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1541 = !{!1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583}
!1542 = !DIEnumerator(name: "GFH_FILE_INFO", value: 0)
!1543 = !DIEnumerator(name: "GFH_BL_INFO", value: 1)
!1544 = !DIEnumerator(name: "GFH_ANTI_CLONE", value: 2)
!1545 = !DIEnumerator(name: "GFH_BL_SEC_KEY", value: 3)
!1546 = !DIEnumerator(name: "GFH_SCTRL_CERT", value: 4)
!1547 = !DIEnumerator(name: "GFH_TOOL_AUTH", value: 5)
!1548 = !DIEnumerator(name: "GFH_MTK_RESERVED1", value: 6)
!1549 = !DIEnumerator(name: "GFH_BROM_CFG", value: 7)
!1550 = !DIEnumerator(name: "GFH_BROM_SEC_CFG", value: 8)
!1551 = !DIEnumerator(name: "GFH_MTK_RESERVED2", value: 9)
!1552 = !DIEnumerator(name: "GFH_MTK_RESERVED3", value: 10)
!1553 = !DIEnumerator(name: "GFH_ROOT_CERT", value: 11)
!1554 = !DIEnumerator(name: "GFH_EXP_CHK", value: 12)
!1555 = !DIEnumerator(name: "GFH_EPP_PARAM", value: 13)
!1556 = !DIEnumerator(name: "GFH_CHIP_VER", value: 14)
!1557 = !DIEnumerator(name: "GFH_MTK_RESERVED4", value: 15)
!1558 = !DIEnumerator(name: "GFH_MD_SEC_CFG", value: 16)
!1559 = !DIEnumerator(name: "GFH_EPP_INFO", value: 256)
!1560 = !DIEnumerator(name: "GFH_EMI_LIST", value: 257)
!1561 = !DIEnumerator(name: "GFH_CMEM_ID_INFO", value: 258)
!1562 = !DIEnumerator(name: "GFH_CMEM_NOR_INFO", value: 259)
!1563 = !DIEnumerator(name: "GFH_DSP_INFO", value: 260)
!1564 = !DIEnumerator(name: "GFH_MAUI_INFO", value: 512)
!1565 = !DIEnumerator(name: "GFH_MAUI_SEC", value: 513)
!1566 = !DIEnumerator(name: "GFH_MAUI_CODE_KEY", value: 514)
!1567 = !DIEnumerator(name: "GFH_MAUI_SECURE_RO_KEY", value: 515)
!1568 = !DIEnumerator(name: "GFH_MAUI_RESOURCE_KEY", value: 516)
!1569 = !DIEnumerator(name: "GFH_SECURE_RO_INFO", value: 517)
!1570 = !DIEnumerator(name: "GFH_DL_PACKAGE_INFO", value: 518)
!1571 = !DIEnumerator(name: "GFH_FLASH_INFO", value: 519)
!1572 = !DIEnumerator(name: "GFH_MACR_INFO", value: 520)
!1573 = !DIEnumerator(name: "GFH_ARM_BL_INFO", value: 521)
!1574 = !DIEnumerator(name: "GFH_EMMC_BOOTING_INFO", value: 522)
!1575 = !DIEnumerator(name: "GFH_FOTA_INFO", value: 523)
!1576 = !DIEnumerator(name: "GFH_CBR_RECORD_INFO", value: 524)
!1577 = !DIEnumerator(name: "GFH_CONFIDENTIAL_BIN_INFO", value: 525)
!1578 = !DIEnumerator(name: "GFH_CBR_INFO", value: 526)
!1579 = !DIEnumerator(name: "GFH_MBA_INFO", value: 527)
!1580 = !DIEnumerator(name: "GFH_BINARY_LOCATION", value: 528)
!1581 = !DIEnumerator(name: "GFH_BOOT_CERT_CTRL_CONTENT", value: 768)
!1582 = !DIEnumerator(name: "GFH_TYPE_NUM", value: 769)
!1583 = !DIEnumerator(name: "GFH_TYPE_END", value: 65535)
!1584 = !{!88}
!1585 = !{!1534, !1586, !1589}
!1586 = !DIGlobalVariableExpression(var: !1587, expr: !DIExpression())
!1587 = distinct !DIGlobalVariable(name: "cmem_index", scope: !1536, file: !1537, line: 96, type: !1588, isLocal: true, isDefinition: true)
!1588 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1589 = !DIGlobalVariableExpression(var: !1590, expr: !DIExpression())
!1590 = distinct !DIGlobalVariable(name: "cmem_emiinit_index", scope: !1536, file: !1537, line: 94, type: !1588, isLocal: true, isDefinition: true)
!1591 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_id.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1592 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1593)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_ID_INFO_v1", file: !1537, line: 54, baseType: !1594)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1537, line: 51, size: 576, elements: !1595)
!1595 = !{!1596, !1606}
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1594, file: !1537, line: 52, baseType: !1597, size: 96)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1540, line: 152, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1540, line: 144, size: 96, elements: !1599)
!1599 = !{!1600, !1602, !1604}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1598, file: !1540, line: 145, baseType: !1601, size: 32)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "U32", file: !1540, line: 61, baseType: !18)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1598, file: !1540, line: 146, baseType: !1603, size: 16, offset: 32)
!1603 = !DIDerivedType(tag: DW_TAG_typedef, name: "U16", file: !1540, line: 62, baseType: !970)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1598, file: !1540, line: 150, baseType: !1605, size: 32, offset: 64)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_TYPE", file: !1540, line: 127, baseType: !1539)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1594, file: !1537, line: 53, baseType: !1607, size: 480, offset: 96)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryIDList", file: !1608, line: 107, baseType: !1609)
!1608 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_defs.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 103, size: 480, elements: !1610)
!1610 = !{!1611, !1612, !1613}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1609, file: !1608, line: 104, baseType: !18, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1609, file: !1608, line: 105, baseType: !18, size: 32, offset: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1609, file: !1608, line: 106, baseType: !1614, size: 400, offset: 64)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 400, elements: !1056)
!1615 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1608, line: 100, baseType: !1616)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 92, size: 80, elements: !1617)
!1617 = !{!1618, !1619, !1620}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1616, file: !1608, line: 93, baseType: !460, size: 8)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1616, file: !1608, line: 94, baseType: !460, size: 8, offset: 8)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1616, file: !1608, line: 96, baseType: !1621, size: 64, offset: 16)
!1621 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 64, elements: !753)
!1622 = !DIGlobalVariableExpression(var: !1623, expr: !DIExpression())
!1623 = distinct !DIGlobalVariable(name: "FLASH_ID", scope: !1624, file: !1627, line: 96, type: !1628, isLocal: false, isDefinition: true)
!1624 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1625, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !1626, splitDebugInlining: false, nameTableKind: None)
!1625 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_custom.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1626 = !{!1622}
!1627 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_custom.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1628 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1629, size: 152, elements: !1631)
!1629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1630)
!1630 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1631 = !{!1632}
!1632 = !DISubrange(count: 19)
!1633 = !DIGlobalVariableExpression(var: !1634, expr: !DIExpression())
!1634 = distinct !DIGlobalVariable(name: "nor_egid", scope: !1635, file: !1636, line: 168, type: !1986, isLocal: false, isDefinition: true)
!1635 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1636, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1637, retainedTypes: !1648, globals: !1657, splitDebugInlining: false, nameTableKind: None)
!1636 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_combo_nor.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1637 = !{!1638, !1214, !1539}
!1638 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1639, line: 49, baseType: !18, size: 32, elements: !1640)
!1639 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_init.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1640 = !{!1641, !1642, !1643, !1644, !1645, !1646, !1647}
!1641 = !DIEnumerator(name: "CMEM_NO_ERROR", value: 0)
!1642 = !DIEnumerator(name: "CMEM_ERR_ID_NOT_FOUND", value: 1)
!1643 = !DIEnumerator(name: "CMEM_ERR_FDM_MISMATCH", value: 2)
!1644 = !DIEnumerator(name: "CMEM_ERR_MTD_MISMATCH", value: 3)
!1645 = !DIEnumerator(name: "CMEM_ERR_FDM_INIT_FAIL", value: 4)
!1646 = !DIEnumerator(name: "CMEM_ERR_MTD_INIT_FAIL", value: 5)
!1647 = !DIEnumerator(name: "CMEM_ERR_FDM_REGION_INFO_OVERFLOW", value: 6)
!1648 = !{!1649, !61, !1651}
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 32)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "BYTE", file: !1215, line: 47, baseType: !462)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !1653)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !1654)
!1654 = !{!1655, !1656}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1653, file: !1408, line: 144, baseType: !61, size: 32)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1653, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!1657 = !{!1633, !1658, !1660, !1670, !1807, !1809, !1811, !1813, !1815, !1820, !1823, !1832, !1834, !1836, !1844, !1846, !1848, !1931, !1934, !1936, !1938, !1949, !1951, !1964}
!1658 = !DIGlobalVariableExpression(var: !1659, expr: !DIExpression())
!1659 = distinct !DIGlobalVariable(name: "cmem_nor_index", scope: !1635, file: !1636, line: 94, type: !1091, isLocal: true, isDefinition: true)
!1660 = !DIGlobalVariableExpression(var: !1661, expr: !DIExpression())
!1661 = distinct !DIGlobalVariable(name: "cmem_id", scope: !1635, file: !1636, line: 95, type: !1662, isLocal: false, isDefinition: true)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1664)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryID", file: !1608, line: 100, baseType: !1665)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 92, size: 80, elements: !1666)
!1666 = !{!1667, !1668, !1669}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceType", scope: !1665, file: !1608, line: 93, baseType: !460, size: 8)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "IDLength", scope: !1665, file: !1608, line: 94, baseType: !460, size: 8, offset: 8)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ID", scope: !1665, file: !1608, line: 96, baseType: !1621, size: 64, offset: 16)
!1670 = !DIGlobalVariableExpression(var: !1671, expr: !DIExpression())
!1671 = distinct !DIGlobalVariable(name: "FlashDriveData", scope: !1635, file: !1636, line: 127, type: !1672, isLocal: false, isDefinition: true)
!1672 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DRV_Data", file: !1408, line: 317, baseType: !1673)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NOR_FLASH_DRV_Data", file: !1408, line: 237, size: 2720, elements: !1674)
!1674 = !{!1675, !1676, !1728, !1729, !1732, !1733, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1774, !1775, !1776, !1781, !1782, !1783, !1784, !1785, !1789, !1793, !1800, !1801, !1802, !1803, !1804, !1805, !1806}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "TotalFATSectors", scope: !1673, file: !1408, line: 238, baseType: !61, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1673, file: !1408, line: 239, baseType: !1677, size: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1408, line: 121, baseType: !1679)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 105, size: 480, elements: !1680)
!1680 = !{!1681, !1685, !1686, !1690, !1694, !1698, !1699, !1703, !1704, !1705, !1706, !1711, !1716, !1720, !1724}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !1679, file: !1408, line: 106, baseType: !1682, size: 32)
!1682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1683, size: 32)
!1683 = !DISubroutineType(types: !1684)
!1684 = !{!7, !88, !88}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !1679, file: !1408, line: 107, baseType: !1483, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !1679, file: !1408, line: 108, baseType: !1687, size: 32, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 32)
!1688 = !DISubroutineType(types: !1689)
!1689 = !{!88, !88, !61, !61}
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !1679, file: !1408, line: 109, baseType: !1691, size: 32, offset: 96)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 32)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{!7, !88, !61}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !1679, file: !1408, line: 110, baseType: !1695, size: 32, offset: 128)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 32)
!1696 = !DISubroutineType(types: !1697)
!1697 = !{!7, !88, !88, !88, !61}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !1679, file: !1408, line: 111, baseType: !1691, size: 32, offset: 160)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !1679, file: !1408, line: 112, baseType: !1700, size: 32, offset: 192)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 32)
!1701 = !DISubroutineType(types: !1702)
!1702 = !{!1091, !88, !61}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !1679, file: !1408, line: 113, baseType: !1691, size: 32, offset: 224)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !1679, file: !1408, line: 114, baseType: !1691, size: 32, offset: 256)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !1679, file: !1408, line: 115, baseType: !1691, size: 32, offset: 288)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !1679, file: !1408, line: 116, baseType: !1707, size: 32, offset: 320)
!1707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1708, size: 32)
!1708 = !DISubroutineType(types: !1709)
!1709 = !{!7, !88, !7, !1710, !88, !1710}
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "UINT", file: !1215, line: 50, baseType: !18)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !1679, file: !1408, line: 117, baseType: !1712, size: 32, offset: 352)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 32)
!1713 = !DISubroutineType(types: !1714)
!1714 = !{!7, !88, !1715}
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !1679, file: !1408, line: 118, baseType: !1717, size: 32, offset: 384)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 32)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!7, !88, !88, !61}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1679, file: !1408, line: 119, baseType: !1721, size: 32, offset: 416)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 32)
!1722 = !DISubroutineType(types: !1723)
!1723 = !{!91, !88, !61}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !1679, file: !1408, line: 120, baseType: !1725, size: 32, offset: 448)
!1725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1726, size: 32)
!1726 = !DISubroutineType(types: !1727)
!1727 = !{!7, !88, !61, !88}
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1673, file: !1408, line: 240, baseType: !88, size: 32, offset: 64)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectorsInBlock", scope: !1673, file: !1408, line: 241, baseType: !1730, size: 32, offset: 96)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 32)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "WORD", file: !1215, line: 46, baseType: !970)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ValidSectorsInBlock", scope: !1673, file: !1408, line: 242, baseType: !1730, size: 32, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1673, file: !1408, line: 243, baseType: !1734, size: 928, offset: 160)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1408, line: 99, baseType: !1735)
!1735 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 90, size: 928, elements: !1736)
!1736 = !{!1737, !1738, !1740, !1741, !1742, !1743, !1744, !1745}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !1735, file: !1408, line: 91, baseType: !61, size: 32)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !1735, file: !1408, line: 92, baseType: !1739, size: 256, offset: 32)
!1739 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 256, elements: !753)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !1735, file: !1408, line: 93, baseType: !1739, size: 256, offset: 288)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !1735, file: !1408, line: 94, baseType: !1739, size: 256, offset: 544)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !1735, file: !1408, line: 95, baseType: !61, size: 32, offset: 800)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !1735, file: !1408, line: 96, baseType: !1731, size: 16, offset: 832)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !1735, file: !1408, line: 97, baseType: !61, size: 32, offset: 864)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !1735, file: !1408, line: 98, baseType: !61, size: 32, offset: 896)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "HeaderSize", scope: !1673, file: !1408, line: 244, baseType: !1739, size: 256, offset: 1088)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsPerBlock", scope: !1673, file: !1408, line: 245, baseType: !1739, size: 256, offset: 1344)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "ActiveBlock", scope: !1673, file: !1408, line: 246, baseType: !61, size: 32, offset: 1600)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimEraseCount", scope: !1673, file: !1408, line: 247, baseType: !61, size: 32, offset: 1632)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlockID", scope: !1673, file: !1408, line: 248, baseType: !61, size: 32, offset: 1664)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "TotalPhysicalSectors", scope: !1673, file: !1408, line: 249, baseType: !61, size: 32, offset: 1696)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "PartitionSectors", scope: !1673, file: !1408, line: 250, baseType: !61, size: 32, offset: 1728)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "GCBlockSectors", scope: !1673, file: !1408, line: 252, baseType: !61, size: 32, offset: 1760)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "GCHighThreshold", scope: !1673, file: !1408, line: 255, baseType: !61, size: 32, offset: 1792)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "GCMiddleThreshold", scope: !1673, file: !1408, line: 256, baseType: !61, size: 32, offset: 1824)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "GCLowThreshold", scope: !1673, file: !1408, line: 257, baseType: !61, size: 32, offset: 1856)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "AvailSectors", scope: !1673, file: !1408, line: 261, baseType: !61, size: 32, offset: 1888)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "DeletedSectors", scope: !1673, file: !1408, line: 262, baseType: !61, size: 32, offset: 1920)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "StartSector", scope: !1673, file: !1408, line: 263, baseType: !61, size: 32, offset: 1952)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "Sectors", scope: !1673, file: !1408, line: 264, baseType: !61, size: 32, offset: 1984)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "SectorsLeft", scope: !1673, file: !1408, line: 265, baseType: !61, size: 32, offset: 2016)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "BLOCKID_OFFSET", scope: !1673, file: !1408, line: 266, baseType: !61, size: 32, offset: 2048)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "SECTORIDX_MASK", scope: !1673, file: !1408, line: 267, baseType: !61, size: 32, offset: 2080)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "PHY_SECTOR_OFFSET", scope: !1673, file: !1408, line: 268, baseType: !61, size: 32, offset: 2112)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "MSTABLE_ENTRY_NUM", scope: !1673, file: !1408, line: 270, baseType: !61, size: 32, offset: 2144)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "MS_count", scope: !1673, file: !1408, line: 271, baseType: !61, size: 32, offset: 2176)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "MSEntryTable", scope: !1673, file: !1408, line: 272, baseType: !1768, size: 32, offset: 2208)
!1768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1769, size: 32)
!1769 = !DIDerivedType(tag: DW_TAG_typedef, name: "MS_ENTRY", file: !1408, line: 229, baseType: !1770)
!1770 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 226, size: 64, elements: !1771)
!1771 = !{!1772, !1773}
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "LogicalSectorID", scope: !1770, file: !1408, line: 227, baseType: !61, size: 32)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "PysicalSectorID_new", scope: !1770, file: !1408, line: 228, baseType: !61, size: 32, offset: 32)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "SectorMap", scope: !1673, file: !1408, line: 273, baseType: !1649, size: 32, offset: 2240)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "Buffer", scope: !1673, file: !1408, line: 274, baseType: !1649, size: 32, offset: 2272)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "CompleteErase", scope: !1673, file: !1408, line: 276, baseType: !1777, size: 32, offset: 2304)
!1777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1778, size: 32)
!1778 = !DISubroutineType(types: !1779)
!1779 = !{null, !1780}
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 32)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "RegionMaxBlock", scope: !1673, file: !1408, line: 278, baseType: !61, size: 32, offset: 2336)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailHandle", scope: !1673, file: !1408, line: 280, baseType: !1777, size: 32, offset: 2368)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimBlock_post", scope: !1673, file: !1408, line: 281, baseType: !1777, size: 32, offset: 2400)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "IdleReclaimBlockID", scope: !1673, file: !1408, line: 283, baseType: !61, size: 32, offset: 2432)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "SelectReclaimTarget", scope: !1673, file: !1408, line: 284, baseType: !1786, size: 32, offset: 2464)
!1786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1787, size: 32)
!1787 = !DISubroutineType(types: !1788)
!1788 = !{!61, !1780}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ReclaimOneSector", scope: !1673, file: !1408, line: 285, baseType: !1790, size: 32, offset: 2496)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 32)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!61, !1780, !61, !61}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "EraseQueue", scope: !1673, file: !1408, line: 293, baseType: !1794, size: 32, offset: 2528)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 32)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_EraseInfo", file: !1408, line: 162, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 159, size: 64, elements: !1797)
!1797 = !{!1798, !1799}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1796, file: !1408, line: 160, baseType: !61, size: 32)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "EraseCount", scope: !1796, file: !1408, line: 161, baseType: !61, size: 32, offset: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "processedBankAddr", scope: !1673, file: !1408, line: 295, baseType: !61, size: 32, offset: 2560)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "processedBlock", scope: !1673, file: !1408, line: 296, baseType: !61, size: 32, offset: 2592)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "processedEraseCount", scope: !1673, file: !1408, line: 297, baseType: !61, size: 32, offset: 2624)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "eraseItems", scope: !1673, file: !1408, line: 298, baseType: !1731, size: 16, offset: 2656)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "queueSize", scope: !1673, file: !1408, line: 302, baseType: !1731, size: 16, offset: 2672)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramFailRetry", scope: !1673, file: !1408, line: 310, baseType: !91, size: 8, offset: 2688)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !1673, file: !1408, line: 313, baseType: !91, size: 8, offset: 2696)
!1807 = !DIGlobalVariableExpression(var: !1808, expr: !DIExpression())
!1808 = distinct !DIGlobalVariable(name: "TOTAL_BLOCKS", scope: !1635, file: !1636, line: 129, type: !61, isLocal: false, isDefinition: true)
!1809 = !DIGlobalVariableExpression(var: !1810, expr: !DIExpression())
!1810 = distinct !DIGlobalVariable(name: "TOTAL_SECTORS", scope: !1635, file: !1636, line: 130, type: !61, isLocal: false, isDefinition: true)
!1811 = !DIGlobalVariableExpression(var: !1812, expr: !DIExpression())
!1812 = distinct !DIGlobalVariable(name: "NOR_LARGEST_BLOCK_SIZE", scope: !1635, file: !1636, line: 131, type: !61, isLocal: false, isDefinition: true)
!1813 = !DIGlobalVariableExpression(var: !1814, expr: !DIExpression())
!1814 = distinct !DIGlobalVariable(name: "PAGE_SIZE", scope: !1635, file: !1636, line: 132, type: !968, isLocal: true, isDefinition: true)
!1815 = !DIGlobalVariableExpression(var: !1816, expr: !DIExpression())
!1816 = distinct !DIGlobalVariable(name: "FDMBuffer", scope: !1635, file: !1636, line: 136, type: !1817, isLocal: false, isDefinition: true)
!1817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 4096, elements: !1818)
!1818 = !{!1819}
!1819 = !DISubrange(count: 512)
!1820 = !DIGlobalVariableExpression(var: !1821, expr: !DIExpression())
!1821 = distinct !DIGlobalVariable(name: "RegionInfo", scope: !1635, file: !1636, line: 146, type: !1822, isLocal: true, isDefinition: true)
!1822 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1652, size: 512, elements: !753)
!1823 = !DIGlobalVariableExpression(var: !1824, expr: !DIExpression())
!1824 = distinct !DIGlobalVariable(name: "BlockLayout", scope: !1635, file: !1636, line: 152, type: !1825, isLocal: true, isDefinition: true)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1827)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBlockLayout", file: !1608, line: 116, baseType: !1828)
!1828 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 113, size: 64, elements: !1829)
!1829 = !{!1830, !1831}
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "Offset", scope: !1828, file: !1608, line: 114, baseType: !61, size: 32)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "Size", scope: !1828, file: !1608, line: 115, baseType: !61, size: 32, offset: 32)
!1832 = !DIGlobalVariableExpression(var: !1833, expr: !DIExpression())
!1833 = distinct !DIGlobalVariable(name: "CS0_SIZE", scope: !1635, file: !1636, line: 156, type: !61, isLocal: false, isDefinition: true)
!1834 = !DIGlobalVariableExpression(var: !1835, expr: !DIExpression())
!1835 = distinct !DIGlobalVariable(name: "CS1_SIZE", scope: !1635, file: !1636, line: 157, type: !61, isLocal: false, isDefinition: true)
!1836 = !DIGlobalVariableExpression(var: !1837, expr: !DIExpression())
!1837 = distinct !DIGlobalVariable(name: "BankInfo", scope: !1635, file: !1636, line: 160, type: !1838, isLocal: true, isDefinition: true)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1839, size: 512, elements: !753)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !1840)
!1840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !1841)
!1841 = !{!1842, !1843}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !1840, file: !1408, line: 150, baseType: !61, size: 32)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !1840, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!1844 = !DIGlobalVariableExpression(var: !1845, expr: !DIExpression())
!1845 = distinct !DIGlobalVariable(name: "PAGE_BUFFER_SIZE", scope: !1635, file: !1636, line: 173, type: !61, isLocal: false, isDefinition: true)
!1846 = !DIGlobalVariableExpression(var: !1847, expr: !DIExpression())
!1847 = distinct !DIGlobalVariable(name: "NORFlashMtd", scope: !1635, file: !1636, line: 176, type: !1678, isLocal: false, isDefinition: true)
!1848 = !DIGlobalVariableExpression(var: !1849, expr: !DIExpression())
!1849 = distinct !DIGlobalVariable(name: "mtdflash", scope: !1635, file: !1636, line: 177, type: !1850, isLocal: false, isDefinition: true)
!1850 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1306, line: 193, baseType: !1851)
!1851 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 134, size: 1824, elements: !1852)
!1852 = !{!1853, !1854, !1855, !1861, !1867, !1868, !1869, !1870, !1872, !1873, !1874, !1875, !1882, !1883, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930}
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !1851, file: !1306, line: 136, baseType: !61, size: 32)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !1851, file: !1306, line: 137, baseType: !762, size: 32, offset: 32)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !1851, file: !1306, line: 138, baseType: !1856, size: 32, offset: 64)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !1857)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 32)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !1859)
!1859 = !{!1860}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1858, file: !1390, line: 55, baseType: !460, size: 8)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !1851, file: !1306, line: 139, baseType: !1862, size: 32, offset: 96)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !1863)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 32)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !1865)
!1865 = !{!1866}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1864, file: !1390, line: 45, baseType: !460, size: 8)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !1851, file: !1306, line: 140, baseType: !1402, size: 8, offset: 128)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !1851, file: !1306, line: 143, baseType: !1651, size: 32, offset: 160)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !1851, file: !1306, line: 144, baseType: !762, size: 32, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1851, file: !1306, line: 145, baseType: !1871, size: 32, offset: 224)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !1851, file: !1306, line: 146, baseType: !762, size: 32, offset: 256)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !1851, file: !1306, line: 147, baseType: !61, size: 32, offset: 288)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !1851, file: !1306, line: 148, baseType: !762, size: 32, offset: 320)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !1851, file: !1306, line: 151, baseType: !1876, size: 1024, offset: 352)
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1877, size: 1024, elements: !1431)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !1879)
!1879 = !{!1880, !1881}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !1878, file: !1408, line: 168, baseType: !61, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !1878, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !1851, file: !1306, line: 155, baseType: !1433, size: 32, offset: 1376)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !1851, file: !1306, line: 156, baseType: !1884, size: 32, offset: 1408)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 32)
!1885 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1306, line: 124, baseType: !1886)
!1886 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 90, size: 200, elements: !1887)
!1887 = !{!1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912}
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !1886, file: !1306, line: 91, baseType: !460, size: 8)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !1886, file: !1306, line: 92, baseType: !460, size: 8, offset: 8)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !1886, file: !1306, line: 94, baseType: !460, size: 8, offset: 16)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !1886, file: !1306, line: 95, baseType: !460, size: 8, offset: 24)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !1886, file: !1306, line: 96, baseType: !460, size: 8, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !1886, file: !1306, line: 98, baseType: !460, size: 8, offset: 40)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !1886, file: !1306, line: 99, baseType: !460, size: 8, offset: 48)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !1886, file: !1306, line: 100, baseType: !460, size: 8, offset: 56)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !1886, file: !1306, line: 101, baseType: !460, size: 8, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !1886, file: !1306, line: 103, baseType: !460, size: 8, offset: 72)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !1886, file: !1306, line: 104, baseType: !460, size: 8, offset: 80)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !1886, file: !1306, line: 106, baseType: !460, size: 8, offset: 88)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !1886, file: !1306, line: 107, baseType: !460, size: 8, offset: 96)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !1886, file: !1306, line: 108, baseType: !460, size: 8, offset: 104)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !1886, file: !1306, line: 109, baseType: !460, size: 8, offset: 112)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !1886, file: !1306, line: 110, baseType: !460, size: 8, offset: 120)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !1886, file: !1306, line: 111, baseType: !460, size: 8, offset: 128)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !1886, file: !1306, line: 112, baseType: !460, size: 8, offset: 136)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !1886, file: !1306, line: 114, baseType: !460, size: 8, offset: 144)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !1886, file: !1306, line: 115, baseType: !460, size: 8, offset: 152)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !1886, file: !1306, line: 118, baseType: !460, size: 8, offset: 160)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1886, file: !1306, line: 119, baseType: !460, size: 8, offset: 168)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !1886, file: !1306, line: 120, baseType: !460, size: 8, offset: 176)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !1886, file: !1306, line: 121, baseType: !460, size: 8, offset: 184)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1886, file: !1306, line: 122, baseType: !460, size: 8, offset: 192)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !1851, file: !1306, line: 157, baseType: !61, size: 32, offset: 1440)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !1851, file: !1306, line: 158, baseType: !968, size: 16, offset: 1472)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !1851, file: !1306, line: 159, baseType: !968, size: 16, offset: 1488)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !1851, file: !1306, line: 163, baseType: !968, size: 16, offset: 1504)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !1851, file: !1306, line: 164, baseType: !968, size: 16, offset: 1520)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !1851, file: !1306, line: 167, baseType: !460, size: 8, offset: 1536)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !1851, file: !1306, line: 168, baseType: !1472, size: 24, offset: 1544)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !1851, file: !1306, line: 169, baseType: !460, size: 8, offset: 1568)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !1851, file: !1306, line: 170, baseType: !460, size: 8, offset: 1576)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !1851, file: !1306, line: 173, baseType: !968, size: 16, offset: 1584)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !1851, file: !1306, line: 174, baseType: !61, size: 32, offset: 1600)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !1851, file: !1306, line: 175, baseType: !61, size: 32, offset: 1632)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !1851, file: !1306, line: 178, baseType: !91, size: 8, offset: 1664)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !1851, file: !1306, line: 179, baseType: !91, size: 8, offset: 1672)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !1851, file: !1306, line: 182, baseType: !1483, size: 32, offset: 1696)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !1851, file: !1306, line: 186, baseType: !1483, size: 32, offset: 1728)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !1851, file: !1306, line: 187, baseType: !1488, size: 32, offset: 1760)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !1851, file: !1306, line: 188, baseType: !1488, size: 32, offset: 1792)
!1931 = !DIGlobalVariableExpression(var: !1932, expr: !DIExpression())
!1932 = distinct !DIGlobalVariable(name: "StatusMap", scope: !1635, file: !1636, line: 178, type: !1933, isLocal: false, isDefinition: true)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1434, size: 64, elements: !753)
!1934 = !DIGlobalVariableExpression(var: !1935, expr: !DIExpression())
!1935 = distinct !DIGlobalVariable(name: "sf_dal_data_cmd", scope: !1635, file: !1636, line: 179, type: !1885, isLocal: false, isDefinition: true)
!1936 = !DIGlobalVariableExpression(var: !1937, expr: !DIExpression())
!1937 = distinct !DIGlobalVariable(name: "EntireDiskRegionInfo", scope: !1635, file: !1636, line: 204, type: !1822, isLocal: true, isDefinition: true)
!1938 = !DIGlobalVariableExpression(var: !1939, expr: !DIExpression())
!1939 = distinct !DIGlobalVariable(name: "EntireDiskDriveData", scope: !1635, file: !1636, line: 205, type: !1940, isLocal: false, isDefinition: true)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1941, line: 93, baseType: !1942)
!1941 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_disk_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1941, line: 83, size: 1056, elements: !1943)
!1943 = !{!1944, !1945, !1946, !1947, !1948}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !1942, file: !1941, line: 84, baseType: !61, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !1942, file: !1941, line: 85, baseType: !1677, size: 32, offset: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !1942, file: !1941, line: 86, baseType: !88, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !1942, file: !1941, line: 87, baseType: !1734, size: 928, offset: 96)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !1942, file: !1941, line: 92, baseType: !91, size: 8, offset: 1024)
!1949 = !DIGlobalVariableExpression(var: !1950, expr: !DIExpression())
!1950 = distinct !DIGlobalVariable(name: "EntireDiskMtdData", scope: !1635, file: !1636, line: 208, type: !1850, isLocal: false, isDefinition: true)
!1951 = !DIGlobalVariableExpression(var: !1952, expr: !DIExpression())
!1952 = distinct !DIGlobalVariable(name: "nor_list", scope: !1635, file: !1636, line: 114, type: !1953, isLocal: true, isDefinition: true)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1955)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNOR", file: !1608, line: 125, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 119, size: 1088, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1961, !1963}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "FDMType", scope: !1956, file: !1608, line: 120, baseType: !968, size: 16)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "PageBufferSize", scope: !1956, file: !1608, line: 121, baseType: !968, size: 16, offset: 16)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlocks", scope: !1956, file: !1608, line: 122, baseType: !61, size: 32, offset: 32)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "BlockLayout", scope: !1956, file: !1608, line: 123, baseType: !1962, size: 512, offset: 64)
!1962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 512, elements: !753)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !1956, file: !1608, line: 124, baseType: !1838, size: 512, offset: 576)
!1964 = !DIGlobalVariableExpression(var: !1965, expr: !DIExpression())
!1965 = distinct !DIGlobalVariable(name: "combo_mem_sw_list", scope: !1635, file: !1966, line: 42, type: !1967, isLocal: true, isDefinition: true)
!1966 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_combo_config.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1968)
!1968 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_CMEM_NOR_INFO_v1", file: !1636, line: 66, baseType: !1969)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1636, line: 63, size: 5600, elements: !1970)
!1970 = !{!1971, !1978}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "m_gfh_hdr", scope: !1969, file: !1636, line: 64, baseType: !1972, size: 96)
!1972 = !DIDerivedType(tag: DW_TAG_typedef, name: "GFH_Header", file: !1540, line: 152, baseType: !1973)
!1973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GFH_Header", file: !1540, line: 144, size: 96, elements: !1974)
!1974 = !{!1975, !1976, !1977}
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "m_magic_ver", scope: !1973, file: !1540, line: 145, baseType: !1601, size: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "m_size", scope: !1973, file: !1540, line: 146, baseType: !1603, size: 16, offset: 32)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "m_type", scope: !1973, file: !1540, line: 150, baseType: !1605, size: 32, offset: 64)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "m_data", scope: !1969, file: !1636, line: 65, baseType: !1979, size: 5504, offset: 96)
!1979 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMEntryNORList", file: !1608, line: 132, baseType: !1980)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1608, line: 128, size: 5504, elements: !1981)
!1981 = !{!1982, !1983, !1984}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "m_ver", scope: !1980, file: !1608, line: 129, baseType: !18, size: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "Count", scope: !1980, file: !1608, line: 130, baseType: !18, size: 32, offset: 32)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "List", scope: !1980, file: !1608, line: 131, baseType: !1985, size: 5440, offset: 64)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1955, size: 5440, elements: !1056)
!1986 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_eventgrpid", file: !1390, line: 79, baseType: !1987)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 32)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 77, size: 8, elements: !1989)
!1989 = !{!1990}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !1988, file: !1390, line: 78, baseType: !460, size: 8)
!1991 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744073709551615, DW_OP_mul, DW_OP_constu, 1, DW_OP_plus, DW_OP_stack_value))
!1992 = distinct !DIGlobalVariable(name: "FDMMutex", scope: !1993, file: !1994, line: 82, type: !7, isLocal: true, isDefinition: true)
!1993 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1994, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !1995, retainedTypes: !2001, globals: !2046, splitDebugInlining: false, nameTableKind: None)
!1994 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_disk.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!1995 = !{!1330, !1214, !1996}
!1996 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1331, line: 123, baseType: !18, size: 32, elements: !1997)
!1997 = !{!1998, !1999, !2000}
!1998 = !DIEnumerator(name: "HAL_FLASH_BLOCK_4K", value: 0)
!1999 = !DIEnumerator(name: "HAL_FLASH_BLOCK_32K", value: 1)
!2000 = !DIEnumerator(name: "HAL_FLASH_BLOCK_64K", value: 2)
!2001 = !{!61, !2002, !88, !762}
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 32)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1408, line: 190, baseType: !2004)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 173, size: 1376, elements: !2005)
!2005 = !{!2006, !2007, !2008, !2014, !2020, !2021, !2028, !2029, !2036, !2037, !2038, !2039}
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2004, file: !1408, line: 174, baseType: !61, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2004, file: !1408, line: 175, baseType: !1649, size: 32, offset: 32)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2004, file: !1408, line: 176, baseType: !2009, size: 32, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !2010)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 32)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !2012)
!2012 = !{!2013}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2011, file: !1390, line: 55, baseType: !460, size: 8)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2004, file: !1408, line: 177, baseType: !2015, size: 32, offset: 96)
!2015 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !2016)
!2016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2017, size: 32)
!2017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !2018)
!2018 = !{!2019}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2017, file: !1390, line: 45, baseType: !460, size: 8)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2004, file: !1408, line: 178, baseType: !1402, size: 8, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2004, file: !1408, line: 180, baseType: !2022, size: 32, offset: 160)
!2022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2023, size: 32)
!2023 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !2024)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !2025)
!2025 = !{!2026, !2027}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2024, file: !1408, line: 144, baseType: !61, size: 32)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2024, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2004, file: !1408, line: 181, baseType: !1649, size: 32, offset: 192)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2004, file: !1408, line: 182, baseType: !2030, size: 32, offset: 224)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !2032)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !2033)
!2033 = !{!2034, !2035}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2032, file: !1408, line: 150, baseType: !61, size: 32)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2032, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2004, file: !1408, line: 183, baseType: !1649, size: 32, offset: 256)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2004, file: !1408, line: 184, baseType: !61, size: 32, offset: 288)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2004, file: !1408, line: 185, baseType: !1649, size: 32, offset: 320)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2004, file: !1408, line: 188, baseType: !2040, size: 1024, offset: 352)
!2040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2041, size: 1024, elements: !1431)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !2043)
!2043 = !{!2044, !2045}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2042, file: !1408, line: 168, baseType: !61, size: 32)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2042, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!2046 = !{!2047, !2048}
!2047 = !DIGlobalVariableExpression(var: !1992, expr: !DIExpression())
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "flash_init_status", scope: !1993, file: !1994, line: 432, type: !2050, isLocal: true, isDefinition: true)
!2050 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_status_t", file: !1331, line: 119, baseType: !1330)
!2051 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 18446744069414584325, DW_OP_mul, DW_OP_constu, 4294967291, DW_OP_plus, DW_OP_stack_value))
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyBegin", scope: !2054, file: !2055, line: 60, type: !61, isLocal: false, isDefinition: true)
!2054 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2055, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2056, retainedTypes: !2064, globals: !2065, splitDebugInlining: false, nameTableKind: None)
!2055 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_mtd.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2056 = !{!2057}
!2057 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !255, line: 387, baseType: !7, size: 32, elements: !2058)
!2058 = !{!2059, !2060, !2061, !2062, !2063}
!2059 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT_USED", value: -4)
!2060 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR", value: -3)
!2061 = !DIEnumerator(name: "HAL_GPT_STATUS_ERROR_PORT", value: -2)
!2062 = !DIEnumerator(name: "HAL_GPT_STATUS_INVALID_PARAMETER", value: -1)
!2063 = !DIEnumerator(name: "HAL_GPT_STATUS_OK", value: 0)
!2064 = !{!88, !61}
!2065 = !{!2052, !2066, !2068, !2070, !2072, !2074, !2128, !2130}
!2066 = !DIGlobalVariableExpression(var: !2067, expr: !DIExpression())
!2067 = distinct !DIGlobalVariable(name: "gNOR_ReturnReadyEnd", scope: !2054, file: !2055, line: 61, type: !61, isLocal: false, isDefinition: true)
!2068 = !DIGlobalVariableExpression(var: !2069, expr: !DIExpression())
!2069 = distinct !DIGlobalVariable(name: "NOR_Flash_Base_Address", scope: !2054, file: !2055, line: 107, type: !61, isLocal: false, isDefinition: true)
!2070 = !DIGlobalVariableExpression(var: !2071, expr: !DIExpression())
!2071 = distinct !DIGlobalVariable(name: "NOR_FLASH_BUSY", scope: !2054, file: !2055, line: 132, type: !91, isLocal: false, isDefinition: true)
!2072 = !DIGlobalVariableExpression(var: !2073, expr: !DIExpression())
!2073 = distinct !DIGlobalVariable(name: "NOR_FLASH_SUSPENDED", scope: !2054, file: !2055, line: 133, type: !91, isLocal: false, isDefinition: true)
!2074 = !DIGlobalVariableExpression(var: !2075, expr: !DIExpression())
!2075 = distinct !DIGlobalVariable(name: "replaced", scope: !2076, file: !2055, line: 139, type: !61, isLocal: true, isDefinition: true)
!2076 = distinct !DISubprogram(name: "LookupAddress", scope: !2055, file: !2055, line: 135, type: !2077, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !2079)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!61, !88, !61}
!2079 = !{!2080, !2081, !2082, !2127}
!2080 = !DILocalVariable(name: "DriveData", arg: 1, scope: !2076, file: !2055, line: 135, type: !88)
!2081 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !2076, file: !2055, line: 135, type: !61)
!2082 = !DILocalVariable(name: "D", scope: !2076, file: !2055, line: 137, type: !2083)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_Flash_MTD_Data", file: !1408, line: 190, baseType: !2085)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 173, size: 1376, elements: !2086)
!2086 = !{!2087, !2088, !2089, !2095, !2101, !2102, !2109, !2110, !2117, !2118, !2119, !2120}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !2085, file: !1408, line: 174, baseType: !61, size: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !2085, file: !1408, line: 175, baseType: !1649, size: 32, offset: 32)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !2085, file: !1408, line: 176, baseType: !2090, size: 32, offset: 64)
!2090 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !2091)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 32)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !2093)
!2093 = !{!2094}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2092, file: !1390, line: 55, baseType: !460, size: 8)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !2085, file: !1408, line: 177, baseType: !2096, size: 32, offset: 96)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !2097)
!2097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2098, size: 32)
!2098 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !2099)
!2099 = !{!2100}
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !2098, file: !1390, line: 45, baseType: !460, size: 8)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !2085, file: !1408, line: 178, baseType: !1402, size: 8, offset: 128)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !2085, file: !1408, line: 180, baseType: !2103, size: 32, offset: 160)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 32)
!2104 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !2105)
!2105 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !2106)
!2106 = !{!2107, !2108}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !2105, file: !1408, line: 144, baseType: !61, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !2105, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !2085, file: !1408, line: 181, baseType: !1649, size: 32, offset: 192)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !2085, file: !1408, line: 182, baseType: !2111, size: 32, offset: 224)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 32)
!2112 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !2113)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !2114)
!2114 = !{!2115, !2116}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !2113, file: !1408, line: 150, baseType: !61, size: 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !2113, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !2085, file: !1408, line: 183, baseType: !1649, size: 32, offset: 256)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !2085, file: !1408, line: 184, baseType: !61, size: 32, offset: 288)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !2085, file: !1408, line: 185, baseType: !1649, size: 32, offset: 320)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !2085, file: !1408, line: 188, baseType: !2121, size: 1024, offset: 352)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2122, size: 1024, elements: !1431)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !2123)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !2124)
!2124 = !{!2125, !2126}
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !2123, file: !1408, line: 168, baseType: !61, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !2123, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!2127 = !DILocalVariable(name: "addr", scope: !2076, file: !2055, line: 138, type: !61)
!2128 = !DIGlobalVariableExpression(var: !2129, expr: !DIExpression())
!2129 = distinct !DIGlobalVariable(name: "look_up_hit", scope: !2076, file: !2055, line: 140, type: !61, isLocal: true, isDefinition: true)
!2130 = !DIGlobalVariableExpression(var: !2131, expr: !DIExpression())
!2131 = distinct !DIGlobalVariable(name: "look_up_miss", scope: !2076, file: !2055, line: 141, type: !61, isLocal: true, isDefinition: true)
!2132 = !DIGlobalVariableExpression(var: !2133, expr: !DIExpression())
!2133 = distinct !DIGlobalVariable(name: "emi_settings", scope: !2134, file: !2135, line: 44, type: !2281, isLocal: false, isDefinition: true)
!2134 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2135, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2136, retainedTypes: !2142, globals: !2143, splitDebugInlining: false, nameTableKind: None)
!2135 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_emi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2136 = !{!2137}
!2137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emi_clock_enum_t", file: !2138, line: 40, baseType: !18, size: 32, elements: !2139)
!2138 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_emi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2139 = !{!2140, !2141}
!2140 = !DIEnumerator(name: "EMI_CLK_LOW_TO_HIGH", value: 0)
!2141 = !DIEnumerator(name: "EMI_CLK_HIGH_TO_LOW", value: 1)
!2142 = !{!1187}
!2143 = !{!2132, !2144, !2146, !2148, !2150, !2251, !2253, !2255, !2257, !2259, !2261, !2263, !2265, !2267, !2269, !2271, !2273, !2275, !2277, !2279}
!2144 = !DIGlobalVariableExpression(var: !2145, expr: !DIExpression())
!2145 = distinct !DIGlobalVariable(name: "__EMI_CurSR0", scope: !2134, file: !2135, line: 65, type: !61, isLocal: false, isDefinition: true)
!2146 = !DIGlobalVariableExpression(var: !2147, expr: !DIExpression())
!2147 = distinct !DIGlobalVariable(name: "__EMI_CurSR1", scope: !2134, file: !2135, line: 66, type: !61, isLocal: false, isDefinition: true)
!2148 = !DIGlobalVariableExpression(var: !2149, expr: !DIExpression())
!2149 = distinct !DIGlobalVariable(name: "__EMI_CurSR2", scope: !2134, file: !2135, line: 67, type: !61, isLocal: false, isDefinition: true)
!2150 = !DIGlobalVariableExpression(var: !2151, expr: !DIExpression())
!2151 = distinct !DIGlobalVariable(name: "emi_register", scope: !2134, file: !2135, line: 83, type: !2152, isLocal: false, isDefinition: true)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 32)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_REGISTER_T", file: !56, line: 2524, baseType: !2154)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2447, size: 6752, elements: !2155)
!2155 = !{!2156, !2160, !2161, !2162, !2163, !2167, !2168, !2170, !2171, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2154, file: !56, line: 2448, baseType: !2157, size: 768)
!2157 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 768, elements: !2158)
!2158 = !{!2159}
!2159 = !DISubrange(count: 96)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_CONM", scope: !2154, file: !56, line: 2449, baseType: !60, size: 32, offset: 768)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2154, file: !56, line: 2450, baseType: !1040, size: 96, offset: 800)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA", scope: !2154, file: !56, line: 2451, baseType: !60, size: 32, offset: 896)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2154, file: !56, line: 2452, baseType: !2164, size: 160, offset: 928)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 160, elements: !2165)
!2165 = !{!2166}
!2166 = !DISubrange(count: 20)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT", scope: !2154, file: !56, line: 2453, baseType: !60, size: 32, offset: 1088)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2154, file: !56, line: 2454, baseType: !2169, size: 32, offset: 1120)
!2169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 32, elements: !463)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DLLV", scope: !2154, file: !56, line: 2455, baseType: !60, size: 32, offset: 1152)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2154, file: !56, line: 2456, baseType: !2172, size: 480, offset: 1184)
!2172 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 480, elements: !2173)
!2173 = !{!2174}
!2174 = !DISubrange(count: 60)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLC", scope: !2154, file: !56, line: 2457, baseType: !60, size: 32, offset: 1664)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED6", scope: !2154, file: !56, line: 2458, baseType: !2169, size: 32, offset: 1696)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLD", scope: !2154, file: !56, line: 2459, baseType: !60, size: 32, offset: 1728)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED7", scope: !2154, file: !56, line: 2460, baseType: !2169, size: 32, offset: 1760)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDLE", scope: !2154, file: !56, line: 2461, baseType: !60, size: 32, offset: 1792)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED8", scope: !2154, file: !56, line: 2462, baseType: !2164, size: 160, offset: 1824)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLC", scope: !2154, file: !56, line: 2463, baseType: !60, size: 32, offset: 1984)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED9", scope: !2154, file: !56, line: 2464, baseType: !2169, size: 32, offset: 2016)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLD", scope: !2154, file: !56, line: 2465, baseType: !60, size: 32, offset: 2048)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED10", scope: !2154, file: !56, line: 2466, baseType: !2169, size: 32, offset: 2080)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLE", scope: !2154, file: !56, line: 2467, baseType: !60, size: 32, offset: 2112)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED11", scope: !2154, file: !56, line: 2468, baseType: !2169, size: 32, offset: 2144)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODLF", scope: !2154, file: !56, line: 2469, baseType: !60, size: 32, offset: 2176)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED12", scope: !2154, file: !56, line: 2470, baseType: !2189, size: 224, offset: 2208)
!2189 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 224, elements: !2190)
!2190 = !{!2191}
!2191 = !DISubrange(count: 28)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOA", scope: !2154, file: !56, line: 2471, baseType: !60, size: 32, offset: 2432)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED13", scope: !2154, file: !56, line: 2472, baseType: !2169, size: 32, offset: 2464)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IOB", scope: !2154, file: !56, line: 2473, baseType: !60, size: 32, offset: 2496)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED14", scope: !2154, file: !56, line: 2474, baseType: !1040, size: 96, offset: 2528)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_HFSLP", scope: !2154, file: !56, line: 2475, baseType: !60, size: 32, offset: 2624)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED15", scope: !2154, file: !56, line: 2476, baseType: !2169, size: 32, offset: 2656)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM", scope: !2154, file: !56, line: 2477, baseType: !60, size: 32, offset: 2688)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED16", scope: !2154, file: !56, line: 2478, baseType: !2169, size: 32, offset: 2720)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM", scope: !2154, file: !56, line: 2479, baseType: !60, size: 32, offset: 2752)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED17", scope: !2154, file: !56, line: 2480, baseType: !2169, size: 32, offset: 2784)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MREG_RW", scope: !2154, file: !56, line: 2481, baseType: !60, size: 32, offset: 2816)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED18", scope: !2154, file: !56, line: 2482, baseType: !1040, size: 96, offset: 2848)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBA", scope: !2154, file: !56, line: 2483, baseType: !60, size: 32, offset: 2944)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED19", scope: !2154, file: !56, line: 2484, baseType: !2169, size: 32, offset: 2976)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBB", scope: !2154, file: !56, line: 2485, baseType: !60, size: 32, offset: 3008)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED20", scope: !2154, file: !56, line: 2486, baseType: !2169, size: 32, offset: 3040)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ARBC", scope: !2154, file: !56, line: 2487, baseType: !60, size: 32, offset: 3072)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED21", scope: !2154, file: !56, line: 2488, baseType: !2164, size: 160, offset: 3104)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_SLCT", scope: !2154, file: !56, line: 2489, baseType: !60, size: 32, offset: 3264)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED22", scope: !2154, file: !56, line: 2490, baseType: !2169, size: 32, offset: 3296)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ABCT", scope: !2154, file: !56, line: 2491, baseType: !60, size: 32, offset: 3328)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED23", scope: !2154, file: !56, line: 2492, baseType: !2214, size: 736, offset: 3360)
!2214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 736, elements: !2215)
!2215 = !{!2216}
!2216 = !DISubrange(count: 92)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BMEN", scope: !2154, file: !56, line: 2493, baseType: !60, size: 32, offset: 4096)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED24", scope: !2154, file: !56, line: 2494, baseType: !2169, size: 32, offset: 4128)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BCNT", scope: !2154, file: !56, line: 2495, baseType: !60, size: 32, offset: 4160)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED25", scope: !2154, file: !56, line: 2496, baseType: !2169, size: 32, offset: 4192)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TACT", scope: !2154, file: !56, line: 2497, baseType: !60, size: 32, offset: 4224)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED26", scope: !2154, file: !56, line: 2498, baseType: !2169, size: 32, offset: 4256)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TSCT", scope: !2154, file: !56, line: 2499, baseType: !60, size: 32, offset: 4288)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED27", scope: !2154, file: !56, line: 2500, baseType: !2169, size: 32, offset: 4320)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WACT", scope: !2154, file: !56, line: 2501, baseType: !60, size: 32, offset: 4352)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED28", scope: !2154, file: !56, line: 2502, baseType: !2169, size: 32, offset: 4384)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_WSCT", scope: !2154, file: !56, line: 2503, baseType: !60, size: 32, offset: 4416)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED29", scope: !2154, file: !56, line: 2504, baseType: !2169, size: 32, offset: 4448)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BACT", scope: !2154, file: !56, line: 2505, baseType: !60, size: 32, offset: 4480)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED30", scope: !2154, file: !56, line: 2506, baseType: !2169, size: 32, offset: 4512)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT0", scope: !2154, file: !56, line: 2507, baseType: !60, size: 32, offset: 4544)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED31", scope: !2154, file: !56, line: 2508, baseType: !2169, size: 32, offset: 4576)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_BSCT1", scope: !2154, file: !56, line: 2509, baseType: !60, size: 32, offset: 4608)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED32", scope: !2154, file: !56, line: 2510, baseType: !2172, size: 480, offset: 4640)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TTYPE1", scope: !2154, file: !56, line: 2511, baseType: !60, size: 32, offset: 5120)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED33", scope: !2154, file: !56, line: 2512, baseType: !2237, size: 992, offset: 5152)
!2237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !972, size: 992, elements: !2238)
!2238 = !{!2239}
!2239 = !DISubrange(count: 124)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTA", scope: !2154, file: !56, line: 2513, baseType: !60, size: 32, offset: 6144)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED34", scope: !2154, file: !56, line: 2514, baseType: !2169, size: 32, offset: 6176)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTB", scope: !2154, file: !56, line: 2515, baseType: !60, size: 32, offset: 6208)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED35", scope: !2154, file: !56, line: 2516, baseType: !2169, size: 32, offset: 6240)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTC", scope: !2154, file: !56, line: 2517, baseType: !60, size: 32, offset: 6272)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED36", scope: !2154, file: !56, line: 2518, baseType: !2169, size: 32, offset: 6304)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MBISTD", scope: !2154, file: !56, line: 2519, baseType: !60, size: 32, offset: 6336)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED37", scope: !2154, file: !56, line: 2520, baseType: !2164, size: 160, offset: 6368)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_TEST", scope: !2154, file: !56, line: 2521, baseType: !60, size: 32, offset: 6528)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED38", scope: !2154, file: !56, line: 2522, baseType: !2164, size: 160, offset: 6560)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_VENDER_INFO", scope: !2154, file: !56, line: 2523, baseType: !60, size: 32, offset: 6720)
!2251 = !DIGlobalVariableExpression(var: !2252, expr: !DIExpression())
!2252 = distinct !DIGlobalVariable(name: "dvfs_dma_runing_status", scope: !2134, file: !2135, line: 485, type: !60, isLocal: false, isDefinition: true)
!2253 = !DIGlobalVariableExpression(var: !2254, expr: !DIExpression())
!2254 = distinct !DIGlobalVariable(name: "EMI_GENA_VAL", scope: !2134, file: !2135, line: 68, type: !61, isLocal: false, isDefinition: true)
!2255 = !DIGlobalVariableExpression(var: !2256, expr: !DIExpression())
!2256 = distinct !DIGlobalVariable(name: "EMI_RDCT_VAL", scope: !2134, file: !2135, line: 69, type: !61, isLocal: false, isDefinition: true)
!2257 = !DIGlobalVariableExpression(var: !2258, expr: !DIExpression())
!2258 = distinct !DIGlobalVariable(name: "EMI_DSRAM_VAL", scope: !2134, file: !2135, line: 70, type: !61, isLocal: false, isDefinition: true)
!2259 = !DIGlobalVariableExpression(var: !2260, expr: !DIExpression())
!2260 = distinct !DIGlobalVariable(name: "EMI_MSRAM_VAL", scope: !2134, file: !2135, line: 71, type: !61, isLocal: false, isDefinition: true)
!2261 = !DIGlobalVariableExpression(var: !2262, expr: !DIExpression())
!2262 = distinct !DIGlobalVariable(name: "EMI_IDL_C_VAL", scope: !2134, file: !2135, line: 72, type: !61, isLocal: false, isDefinition: true)
!2263 = !DIGlobalVariableExpression(var: !2264, expr: !DIExpression())
!2264 = distinct !DIGlobalVariable(name: "EMI_IDL_D_VAL", scope: !2134, file: !2135, line: 73, type: !61, isLocal: false, isDefinition: true)
!2265 = !DIGlobalVariableExpression(var: !2266, expr: !DIExpression())
!2266 = distinct !DIGlobalVariable(name: "EMI_IDL_E_VAL", scope: !2134, file: !2135, line: 74, type: !61, isLocal: false, isDefinition: true)
!2267 = !DIGlobalVariableExpression(var: !2268, expr: !DIExpression())
!2268 = distinct !DIGlobalVariable(name: "EMI_ODL_C_VAL", scope: !2134, file: !2135, line: 75, type: !61, isLocal: false, isDefinition: true)
!2269 = !DIGlobalVariableExpression(var: !2270, expr: !DIExpression())
!2270 = distinct !DIGlobalVariable(name: "EMI_ODL_D_VAL", scope: !2134, file: !2135, line: 76, type: !61, isLocal: false, isDefinition: true)
!2271 = !DIGlobalVariableExpression(var: !2272, expr: !DIExpression())
!2272 = distinct !DIGlobalVariable(name: "EMI_ODL_E_VAL", scope: !2134, file: !2135, line: 77, type: !61, isLocal: false, isDefinition: true)
!2273 = !DIGlobalVariableExpression(var: !2274, expr: !DIExpression())
!2274 = distinct !DIGlobalVariable(name: "EMI_ODL_F_VAL", scope: !2134, file: !2135, line: 78, type: !61, isLocal: false, isDefinition: true)
!2275 = !DIGlobalVariableExpression(var: !2276, expr: !DIExpression())
!2276 = distinct !DIGlobalVariable(name: "EMI_IO_A_VAL", scope: !2134, file: !2135, line: 79, type: !61, isLocal: false, isDefinition: true)
!2277 = !DIGlobalVariableExpression(var: !2278, expr: !DIExpression())
!2278 = distinct !DIGlobalVariable(name: "EMI_IO_B_VAL", scope: !2134, file: !2135, line: 80, type: !61, isLocal: false, isDefinition: true)
!2279 = !DIGlobalVariableExpression(var: !2280, expr: !DIExpression())
!2280 = distinct !DIGlobalVariable(name: "emi_register_backup", scope: !2134, file: !2135, line: 84, type: !2153, isLocal: false, isDefinition: true)
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2282, size: 416, elements: !76)
!2282 = !DIDerivedType(tag: DW_TAG_typedef, name: "EMI_SETTINGS", file: !2138, line: 60, baseType: !2283)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2138, line: 45, size: 416, elements: !2284)
!2284 = !{!2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_GENA_VAL", scope: !2283, file: !2138, line: 46, baseType: !61, size: 32)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_RDCT_VAL", scope: !2283, file: !2138, line: 47, baseType: !61, size: 32, offset: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_DSRAM_VAL", scope: !2283, file: !2138, line: 48, baseType: !61, size: 32, offset: 64)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_MSRAM_VAL", scope: !2283, file: !2138, line: 49, baseType: !61, size: 32, offset: 96)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_C_VAL", scope: !2283, file: !2138, line: 50, baseType: !61, size: 32, offset: 128)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_D_VAL", scope: !2283, file: !2138, line: 51, baseType: !61, size: 32, offset: 160)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IDL_E_VAL", scope: !2283, file: !2138, line: 52, baseType: !61, size: 32, offset: 192)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_C_VAL", scope: !2283, file: !2138, line: 53, baseType: !61, size: 32, offset: 224)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_D_VAL", scope: !2283, file: !2138, line: 54, baseType: !61, size: 32, offset: 256)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_E_VAL", scope: !2283, file: !2138, line: 55, baseType: !61, size: 32, offset: 288)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_ODL_F_VAL", scope: !2283, file: !2138, line: 56, baseType: !61, size: 32, offset: 320)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_A_VAL", scope: !2283, file: !2138, line: 57, baseType: !61, size: 32, offset: 352)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "EMI_IO_B_VAL", scope: !2283, file: !2138, line: 58, baseType: !61, size: 32, offset: 384)
!2298 = !DIGlobalVariableExpression(var: !2299, expr: !DIExpression())
!2299 = distinct !DIGlobalVariable(name: "cm_freq_state", scope: !2300, file: !2301, line: 48, type: !2309, isLocal: false, isDefinition: true)
!2300 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2301, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2302, globals: !2308, splitDebugInlining: false, nameTableKind: None)
!2301 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_clock_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2302 = !{!2303}
!2303 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1132, line: 100, baseType: !18, size: 32, elements: !2304)
!2304 = !{!2305, !2306, !2307}
!2305 = !DIEnumerator(name: "CM_208M_STA", value: 0)
!2306 = !DIEnumerator(name: "CM_104M_STA", value: 1)
!2307 = !DIEnumerator(name: "CM_26M_STA", value: 2)
!2308 = !{!2298}
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "clock_cm_freq_state_id", file: !1132, line: 104, baseType: !2303)
!2310 = !DIGlobalVariableExpression(var: !2311, expr: !DIExpression())
!2311 = distinct !DIGlobalVariable(name: "spi_slave_poweron_flag", scope: !2312, file: !2313, line: 60, type: !90, isLocal: true, isDefinition: true)
!2312 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2313, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2314, retainedTypes: !1584, globals: !2315, splitDebugInlining: false, nameTableKind: None)
!2313 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/spi_slave_from_master/src/main.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2314 = !{!631, !677, !693, !699, !703, !348, !883, !887, !891, !871, !879, !903, !915}
!2315 = !{!2310, !2316, !2318, !2320, !2322, !2324, !2326, !2328, !2330}
!2316 = !DIGlobalVariableExpression(var: !2317, expr: !DIExpression())
!2317 = distinct !DIGlobalVariable(name: "spi_slave_cfg_write_flag", scope: !2312, file: !2313, line: 61, type: !90, isLocal: true, isDefinition: true)
!2318 = !DIGlobalVariableExpression(var: !2319, expr: !DIExpression())
!2319 = distinct !DIGlobalVariable(name: "spi_slave_write_data_flag", scope: !2312, file: !2313, line: 62, type: !90, isLocal: true, isDefinition: true)
!2320 = !DIGlobalVariableExpression(var: !2321, expr: !DIExpression())
!2321 = distinct !DIGlobalVariable(name: "spi_slave_write_error_flag", scope: !2312, file: !2313, line: 67, type: !90, isLocal: true, isDefinition: true)
!2322 = !DIGlobalVariableExpression(var: !2323, expr: !DIExpression())
!2323 = distinct !DIGlobalVariable(name: "spi_slave_cfg_read_flag", scope: !2312, file: !2313, line: 63, type: !90, isLocal: true, isDefinition: true)
!2324 = !DIGlobalVariableExpression(var: !2325, expr: !DIExpression())
!2325 = distinct !DIGlobalVariable(name: "spi_slave_read_data_flag", scope: !2312, file: !2313, line: 64, type: !90, isLocal: true, isDefinition: true)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "spi_slave_read_error_flag", scope: !2312, file: !2313, line: 66, type: !90, isLocal: true, isDefinition: true)
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "spi_slave_timeout_flag", scope: !2312, file: !2313, line: 65, type: !90, isLocal: true, isDefinition: true)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "g_tansfer_buffer", scope: !2312, file: !2313, line: 68, type: !2332, isLocal: true, isDefinition: true, align: 32)
!2332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 8192, elements: !2333)
!2333 = !{!2334}
!2334 = !DISubrange(count: 1024)
!2335 = !DIGlobalVariableExpression(var: !2336, expr: !DIExpression())
!2336 = distinct !DIGlobalVariable(name: "heap_end", scope: !2337, file: !2338, line: 69, type: !2343, isLocal: true, isDefinition: true)
!2337 = distinct !DISubprogram(name: "_sbrk_r", scope: !2338, file: !2338, line: 66, type: !2339, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !2534)
!2338 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC/syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2339 = !DISubroutineType(types: !2340)
!2340 = !{!2341, !2344, !2529}
!2341 = !DIDerivedType(tag: DW_TAG_typedef, name: "caddr_t", file: !2342, line: 123, baseType: !2343)
!2342 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/types.h", directory: "/home/mjshen/RTOSExploration")
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 32)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_reent", file: !2346, line: 377, size: 1920, elements: !2347)
!2346 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/reent.h", directory: "/home/mjshen/RTOSExploration")
!2347 = !{!2348, !2349, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2428, !2449, !2453, !2454, !2455, !2456, !2466, !2479, !2480, !2485, !2503, !2504, !2511, !2512, !2528}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "_errno", scope: !2345, file: !2346, line: 381, baseType: !7, size: 32)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "_stdin", scope: !2345, file: !2346, line: 386, baseType: !2350, size: 32, offset: 32)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 32)
!2351 = !DIDerivedType(tag: DW_TAG_typedef, name: "__FILE", file: !2346, line: 292, baseType: !2352)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sFILE", file: !2346, line: 186, size: 832, elements: !2353)
!2353 = !{!2354, !2356, !2357, !2358, !2359, !2360, !2365, !2366, !2367, !2368, !2372, !2377, !2384, !2388, !2389, !2390, !2391, !2393, !2395, !2396, !2397, !2399, !2405, !2418}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "_p", scope: !2352, file: !2346, line: 187, baseType: !2355, size: 32)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "_r", scope: !2352, file: !2346, line: 188, baseType: !7, size: 32, offset: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "_w", scope: !2352, file: !2346, line: 189, baseType: !7, size: 32, offset: 64)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2352, file: !2346, line: 190, baseType: !1588, size: 16, offset: 96)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "_file", scope: !2352, file: !2346, line: 191, baseType: !1588, size: 16, offset: 112)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "_bf", scope: !2352, file: !2346, line: 192, baseType: !2361, size: 64, offset: 128)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__sbuf", file: !2346, line: 122, size: 64, elements: !2362)
!2362 = !{!2363, !2364}
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "_base", scope: !2361, file: !2346, line: 123, baseType: !2355, size: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "_size", scope: !2361, file: !2346, line: 124, baseType: !7, size: 32, offset: 32)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "_lbfsize", scope: !2352, file: !2346, line: 193, baseType: !7, size: 32, offset: 192)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "_data", scope: !2352, file: !2346, line: 196, baseType: !2344, size: 32, offset: 224)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "_cookie", scope: !2352, file: !2346, line: 200, baseType: !88, size: 32, offset: 256)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_read", scope: !2352, file: !2346, line: 202, baseType: !2369, size: 32, offset: 288)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 32)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!7, !2344, !88, !2343, !7}
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "_write", scope: !2352, file: !2346, line: 204, baseType: !2373, size: 32, offset: 320)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 32)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!7, !2344, !88, !2376, !7}
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1629, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "_seek", scope: !2352, file: !2346, line: 207, baseType: !2378, size: 32, offset: 352)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 32)
!2379 = !DISubroutineType(types: !2380)
!2380 = !{!2381, !2344, !88, !2381, !7}
!2381 = !DIDerivedType(tag: DW_TAG_typedef, name: "_fpos_t", file: !2382, line: 116, baseType: !2383)
!2382 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_types.h", directory: "/home/mjshen/RTOSExploration")
!2383 = !DIBasicType(name: "long", size: 32, encoding: DW_ATE_signed)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "_close", scope: !2352, file: !2346, line: 208, baseType: !2385, size: 32, offset: 384)
!2385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 32)
!2386 = !DISubroutineType(types: !2387)
!2387 = !{!7, !2344, !88}
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "_ub", scope: !2352, file: !2346, line: 211, baseType: !2361, size: 64, offset: 416)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "_up", scope: !2352, file: !2346, line: 212, baseType: !2355, size: 32, offset: 480)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "_ur", scope: !2352, file: !2346, line: 213, baseType: !7, size: 32, offset: 512)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "_ubuf", scope: !2352, file: !2346, line: 216, baseType: !2392, size: 24, offset: 544)
!2392 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 24, elements: !1473)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "_nbuf", scope: !2352, file: !2346, line: 217, baseType: !2394, size: 8, offset: 568)
!2394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 8, elements: !76)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "_lb", scope: !2352, file: !2346, line: 220, baseType: !2361, size: 64, offset: 576)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "_blksize", scope: !2352, file: !2346, line: 223, baseType: !7, size: 32, offset: 640)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2352, file: !2346, line: 224, baseType: !2398, size: 32, offset: 672)
!2398 = !DIDerivedType(tag: DW_TAG_typedef, name: "_off_t", file: !2382, line: 46, baseType: !2383)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2352, file: !2346, line: 231, baseType: !2400, size: 32, offset: 704)
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "_flock_t", file: !2346, line: 35, baseType: !2401)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "_LOCK_T", file: !2402, line: 34, baseType: !2403)
!2402 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/lock.h", directory: "/home/mjshen/RTOSExploration")
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 32)
!2404 = !DICompositeType(tag: DW_TAG_structure_type, name: "__lock", file: !2402, line: 33, flags: DIFlagFwdDecl)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "_mbstate", scope: !2352, file: !2346, line: 233, baseType: !2406, size: 64, offset: 736)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "_mbstate_t", file: !2382, line: 170, baseType: !2407)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2382, line: 162, size: 64, elements: !2408)
!2408 = !{!2409, !2410}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2407, file: !2382, line: 164, baseType: !7, size: 32)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "__value", scope: !2407, file: !2382, line: 169, baseType: !2411, size: 32, offset: 32)
!2411 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2407, file: !2382, line: 165, size: 32, elements: !2412)
!2412 = !{!2413, !2416}
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "__wch", scope: !2411, file: !2382, line: 167, baseType: !2414, size: 32)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "wint_t", file: !2415, line: 116, baseType: !7)
!2415 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stddef.h", directory: "")
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "__wchb", scope: !2411, file: !2382, line: 168, baseType: !2417, size: 32)
!2417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !462, size: 32, elements: !463)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2352, file: !2346, line: 234, baseType: !7, size: 32, offset: 800)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "_stdout", scope: !2345, file: !2346, line: 386, baseType: !2350, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "_stderr", scope: !2345, file: !2346, line: 386, baseType: !2350, size: 32, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "_inc", scope: !2345, file: !2346, line: 388, baseType: !7, size: 32, offset: 128)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "_emergency", scope: !2345, file: !2346, line: 390, baseType: !2343, size: 32, offset: 160)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "__sdidinit", scope: !2345, file: !2346, line: 392, baseType: !7, size: 32, offset: 192)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "_unspecified_locale_info", scope: !2345, file: !2346, line: 394, baseType: !7, size: 32, offset: 224)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "_locale", scope: !2345, file: !2346, line: 395, baseType: !2426, size: 32, offset: 256)
!2426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2427, size: 32)
!2427 = !DICompositeType(tag: DW_TAG_structure_type, name: "__locale_t", file: !2346, line: 45, flags: DIFlagFwdDecl)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "_mp", scope: !2345, file: !2346, line: 397, baseType: !2429, size: 32, offset: 288)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 32)
!2430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_mprec", file: !2346, line: 349, size: 128, elements: !2431)
!2431 = !{!2432, !2445, !2446, !2447}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "_result", scope: !2430, file: !2346, line: 352, baseType: !2433, size: 32)
!2433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2434, size: 32)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Bigint", file: !2346, line: 52, size: 192, elements: !2435)
!2435 = !{!2436, !2437, !2438, !2439, !2440, !2441}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2434, file: !2346, line: 54, baseType: !2433, size: 32)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_k", scope: !2434, file: !2346, line: 55, baseType: !7, size: 32, offset: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "_maxwds", scope: !2434, file: !2346, line: 55, baseType: !7, size: 32, offset: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "_sign", scope: !2434, file: !2346, line: 55, baseType: !7, size: 32, offset: 96)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "_wds", scope: !2434, file: !2346, line: 55, baseType: !7, size: 32, offset: 128)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "_x", scope: !2434, file: !2346, line: 56, baseType: !2442, size: 32, offset: 160)
!2442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2443, size: 32, elements: !76)
!2443 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ULong", file: !2346, line: 22, baseType: !2444)
!2444 = !DIBasicType(name: "unsigned long", size: 32, encoding: DW_ATE_unsigned)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "_result_k", scope: !2430, file: !2346, line: 353, baseType: !7, size: 32, offset: 32)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "_p5s", scope: !2430, file: !2346, line: 354, baseType: !2433, size: 32, offset: 64)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "_freelist", scope: !2430, file: !2346, line: 355, baseType: !2448, size: 32, offset: 96)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 32)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "__cleanup", scope: !2345, file: !2346, line: 399, baseType: !2450, size: 32, offset: 320)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 32)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{null, !2344}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "_gamma_signgam", scope: !2345, file: !2346, line: 401, baseType: !7, size: 32, offset: 352)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtlen", scope: !2345, file: !2346, line: 404, baseType: !7, size: 32, offset: 384)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "_cvtbuf", scope: !2345, file: !2346, line: 405, baseType: !2343, size: 32, offset: 416)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "_r48", scope: !2345, file: !2346, line: 407, baseType: !2457, size: 32, offset: 448)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 32)
!2458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_rand48", file: !2346, line: 324, size: 192, elements: !2459)
!2459 = !{!2460, !2462, !2463, !2464}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "_seed", scope: !2458, file: !2346, line: 325, baseType: !2461, size: 48)
!2461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !970, size: 48, elements: !1473)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "_mult", scope: !2458, file: !2346, line: 326, baseType: !2461, size: 48, offset: 48)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "_add", scope: !2458, file: !2346, line: 327, baseType: !970, size: 16, offset: 96)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "_rand_next", scope: !2458, file: !2346, line: 330, baseType: !2465, size: 64, offset: 128)
!2465 = !DIBasicType(name: "unsigned long long", size: 64, encoding: DW_ATE_unsigned)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "_localtime_buf", scope: !2345, file: !2346, line: 408, baseType: !2467, size: 32, offset: 480)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 32)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__tm", file: !2346, line: 60, size: 288, elements: !2469)
!2469 = !{!2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_sec", scope: !2468, file: !2346, line: 62, baseType: !7, size: 32)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_min", scope: !2468, file: !2346, line: 63, baseType: !7, size: 32, offset: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_hour", scope: !2468, file: !2346, line: 64, baseType: !7, size: 32, offset: 64)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mday", scope: !2468, file: !2346, line: 65, baseType: !7, size: 32, offset: 96)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_mon", scope: !2468, file: !2346, line: 66, baseType: !7, size: 32, offset: 128)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_year", scope: !2468, file: !2346, line: 67, baseType: !7, size: 32, offset: 160)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_wday", scope: !2468, file: !2346, line: 68, baseType: !7, size: 32, offset: 192)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_yday", scope: !2468, file: !2346, line: 69, baseType: !7, size: 32, offset: 224)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "__tm_isdst", scope: !2468, file: !2346, line: 70, baseType: !7, size: 32, offset: 256)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "_asctime_buf", scope: !2345, file: !2346, line: 409, baseType: !2343, size: 32, offset: 512)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "_sig_func", scope: !2345, file: !2346, line: 412, baseType: !2481, size: 32, offset: 544)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 32)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 32)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{null, !7}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit", scope: !2345, file: !2346, line: 416, baseType: !2486, size: 32, offset: 576)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 32)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_atexit", file: !2346, line: 90, size: 1120, elements: !2488)
!2488 = !{!2489, !2490, !2491, !2494}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2487, file: !2346, line: 91, baseType: !2486, size: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "_ind", scope: !2487, file: !2346, line: 92, baseType: !7, size: 32, offset: 32)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "_fns", scope: !2487, file: !2346, line: 93, baseType: !2492, size: 1024, offset: 64)
!2492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2493, size: 1024, elements: !330)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "_on_exit_args_ptr", scope: !2487, file: !2346, line: 94, baseType: !2495, size: 32, offset: 1088)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 32)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_on_exit_args", file: !2346, line: 79, size: 2112, elements: !2497)
!2497 = !{!2498, !2500, !2501, !2502}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "_fnargs", scope: !2496, file: !2346, line: 80, baseType: !2499, size: 1024)
!2499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !88, size: 1024, elements: !330)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "_dso_handle", scope: !2496, file: !2346, line: 81, baseType: !2499, size: 1024, offset: 1024)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "_fntypes", scope: !2496, file: !2346, line: 83, baseType: !2443, size: 32, offset: 2048)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "_is_cxa", scope: !2496, file: !2346, line: 86, baseType: !2443, size: 32, offset: 2080)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "_atexit0", scope: !2345, file: !2346, line: 417, baseType: !2487, size: 1120, offset: 608)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "__sglue", scope: !2345, file: !2346, line: 420, baseType: !2505, size: 96, offset: 1728)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_glue", file: !2346, line: 296, size: 96, elements: !2506)
!2506 = !{!2507, !2509, !2510}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !2505, file: !2346, line: 298, baseType: !2508, size: 32)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "_niobs", scope: !2505, file: !2346, line: 299, baseType: !7, size: 32, offset: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "_iobs", scope: !2505, file: !2346, line: 300, baseType: !2350, size: 32, offset: 64)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "__sf", scope: !2345, file: !2346, line: 421, baseType: !2350, size: 32, offset: 1824)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "_misc", scope: !2345, file: !2346, line: 422, baseType: !2513, size: 32, offset: 1856)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 32)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_misc_reent", file: !2346, line: 359, size: 640, elements: !2515)
!2515 = !{!2516, !2517, !2518, !2519, !2520, !2522, !2523, !2524, !2525, !2526, !2527}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "_strtok_last", scope: !2514, file: !2346, line: 362, baseType: !2343, size: 32)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "_mblen_state", scope: !2514, file: !2346, line: 363, baseType: !2406, size: 64, offset: 32)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "_wctomb_state", scope: !2514, file: !2346, line: 364, baseType: !2406, size: 64, offset: 96)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "_mbtowc_state", scope: !2514, file: !2346, line: 365, baseType: !2406, size: 64, offset: 160)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "_l64a_buf", scope: !2514, file: !2346, line: 366, baseType: !2521, size: 64, offset: 224)
!2521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 64, elements: !753)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "_getdate_err", scope: !2514, file: !2346, line: 367, baseType: !7, size: 32, offset: 288)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrlen_state", scope: !2514, file: !2346, line: 368, baseType: !2406, size: 64, offset: 320)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "_mbrtowc_state", scope: !2514, file: !2346, line: 369, baseType: !2406, size: 64, offset: 384)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "_mbsrtowcs_state", scope: !2514, file: !2346, line: 370, baseType: !2406, size: 64, offset: 448)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "_wcrtomb_state", scope: !2514, file: !2346, line: 371, baseType: !2406, size: 64, offset: 512)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "_wcsrtombs_state", scope: !2514, file: !2346, line: 372, baseType: !2406, size: 64, offset: 576)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "_signal_buf", scope: !2345, file: !2346, line: 423, baseType: !2343, size: 32, offset: 1888)
!2529 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2415, line: 46, baseType: !18)
!2530 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2531, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2532, globals: !2533, splitDebugInlining: false, nameTableKind: None)
!2531 = !DIFile(filename: "syscalls.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2532 = !{!2343, !2341}
!2533 = !{!2335}
!2534 = !{!2535, !2536, !2537, !2538}
!2535 = !DILocalVariable(name: "r", arg: 1, scope: !2337, file: !2338, line: 66, type: !2344)
!2536 = !DILocalVariable(name: "nbytes", arg: 2, scope: !2337, file: !2338, line: 66, type: !2529)
!2537 = !DILocalVariable(name: "prev_heap_end", scope: !2337, file: !2338, line: 70, type: !2343)
!2538 = !DILocalVariable(name: "stack", scope: !2337, file: !2338, line: 71, type: !2343)
!2539 = !DIGlobalVariableExpression(var: !2540, expr: !DIExpression())
!2540 = distinct !DIGlobalVariable(name: "System_Initialize_Done", scope: !2541, file: !2542, line: 52, type: !60, isLocal: true, isDefinition: true)
!2541 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2542, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !2543, globals: !2646, splitDebugInlining: false, nameTableKind: None)
!2542 = !DIFile(filename: "../../../../../project/mt2523_hdk/hal_examples/spi_slave_from_master/src/system_mt2523.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2543 = !{!2544, !2552, !61, !2597, !2602, !2627}
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 32)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "SysTick_Type", file: !1030, line: 656, baseType: !2546)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1030, line: 650, size: 128, elements: !2547)
!2547 = !{!2548, !2549, !2550, !2551}
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "CTRL", scope: !2546, file: !1030, line: 652, baseType: !60, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "LOAD", scope: !2546, file: !1030, line: 653, baseType: !60, size: 32, offset: 32)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "VAL", scope: !2546, file: !1030, line: 654, baseType: !60, size: 32, offset: 64)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "CALIB", scope: !2546, file: !1030, line: 655, baseType: !272, size: 32, offset: 96)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 32)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "CONFIGSYS_REGISTER_T", file: !56, line: 1952, baseType: !2554)
!2554 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 1921, size: 8288, elements: !2555)
!2555 = !{!2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2566, !2567, !2571, !2572, !2574, !2575, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2594, !2595, !2596}
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDA", scope: !2554, file: !56, line: 1922, baseType: !60, size: 32)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDB", scope: !2554, file: !56, line: 1923, baseType: !60, size: 32, offset: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDC", scope: !2554, file: !56, line: 1924, baseType: !60, size: 32, offset: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDD", scope: !2554, file: !56, line: 1925, baseType: !60, size: 32, offset: 96)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "reserver1", scope: !2554, file: !56, line: 1926, baseType: !60, size: 32, offset: 128)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDF", scope: !2554, file: !56, line: 1927, baseType: !60, size: 32, offset: 160)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDG", scope: !2554, file: !56, line: 1928, baseType: !60, size: 32, offset: 192)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_CONDH", scope: !2554, file: !56, line: 1929, baseType: !60, size: 32, offset: 224)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "reserver2", scope: !2554, file: !56, line: 1930, baseType: !2565, size: 768, offset: 256)
!2565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 768, elements: !1069)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "CLK_SOURCE_SEL", scope: !2554, file: !56, line: 1931, baseType: !60, size: 32, offset: 1024)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "reserver3", scope: !2554, file: !56, line: 1932, baseType: !2568, size: 992, offset: 1056)
!2568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 992, elements: !2569)
!2569 = !{!2570}
!2570 = !DISubrange(count: 31)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_COND", scope: !2554, file: !56, line: 1933, baseType: !60, size: 32, offset: 2048)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "reserver4", scope: !2554, file: !56, line: 1934, baseType: !2573, size: 416, offset: 2080)
!2573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 416, elements: !773)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "TOP_DEBUG", scope: !2554, file: !56, line: 1935, baseType: !60, size: 32, offset: 2496)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "reserver5", scope: !2554, file: !56, line: 1936, baseType: !2576, size: 1568, offset: 2528)
!2576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 1568, elements: !2577)
!2577 = !{!2578}
!2578 = !DISubrange(count: 49)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND0", scope: !2554, file: !56, line: 1937, baseType: !272, size: 32, offset: 4096)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND1", scope: !2554, file: !56, line: 1938, baseType: !272, size: 32, offset: 4128)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_COND2", scope: !2554, file: !56, line: 1939, baseType: !272, size: 32, offset: 4160)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "reserver6", scope: !2554, file: !56, line: 1940, baseType: !60, size: 32, offset: 4192)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD0", scope: !2554, file: !56, line: 1941, baseType: !60, size: 32, offset: 4224)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD1", scope: !2554, file: !56, line: 1942, baseType: !60, size: 32, offset: 4256)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_SETD2", scope: !2554, file: !56, line: 1943, baseType: !60, size: 32, offset: 4288)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "reserver7", scope: !2554, file: !56, line: 1944, baseType: !60, size: 32, offset: 4320)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD0", scope: !2554, file: !56, line: 1945, baseType: !60, size: 32, offset: 4352)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD1", scope: !2554, file: !56, line: 1946, baseType: !60, size: 32, offset: 4384)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "PDN_CLRD2", scope: !2554, file: !56, line: 1947, baseType: !60, size: 32, offset: 4416)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "reserver8", scope: !2554, file: !56, line: 1948, baseType: !2591, size: 3744, offset: 4448)
!2591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !60, size: 3744, elements: !2592)
!2592 = !{!2593}
!2593 = !DISubrange(count: 117)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_CON", scope: !2554, file: !56, line: 1949, baseType: !60, size: 32, offset: 8192)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "reserver9", scope: !2554, file: !56, line: 1950, baseType: !60, size: 32, offset: 8224)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "LPM_L2H_CNT", scope: !2554, file: !56, line: 1951, baseType: !272, size: 32, offset: 8256)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 32)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "EFUSE_REGISTER_T", file: !56, line: 2158, baseType: !2599)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 2156, size: 32, elements: !2600)
!2600 = !{!2601}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "EFUSE_CPU_104M", scope: !2599, file: !56, line: 2157, baseType: !60, size: 32)
!2602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2603, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1030, line: 418, baseType: !2604)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1030, line: 395, size: 1120, elements: !2605)
!2605 = !{!2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2604, file: !1030, line: 397, baseType: !272, size: 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2604, file: !1030, line: 398, baseType: !60, size: 32, offset: 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2604, file: !1030, line: 399, baseType: !60, size: 32, offset: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2604, file: !1030, line: 400, baseType: !60, size: 32, offset: 96)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2604, file: !1030, line: 401, baseType: !60, size: 32, offset: 128)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2604, file: !1030, line: 402, baseType: !60, size: 32, offset: 160)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2604, file: !1030, line: 403, baseType: !1040, size: 96, offset: 192)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2604, file: !1030, line: 404, baseType: !60, size: 32, offset: 288)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2604, file: !1030, line: 405, baseType: !60, size: 32, offset: 320)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2604, file: !1030, line: 406, baseType: !60, size: 32, offset: 352)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2604, file: !1030, line: 407, baseType: !60, size: 32, offset: 384)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2604, file: !1030, line: 408, baseType: !60, size: 32, offset: 416)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2604, file: !1030, line: 409, baseType: !60, size: 32, offset: 448)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2604, file: !1030, line: 410, baseType: !60, size: 32, offset: 480)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2604, file: !1030, line: 411, baseType: !1049, size: 64, offset: 512)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2604, file: !1030, line: 412, baseType: !272, size: 32, offset: 576)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2604, file: !1030, line: 413, baseType: !272, size: 32, offset: 608)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2604, file: !1030, line: 414, baseType: !1053, size: 128, offset: 640)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2604, file: !1030, line: 415, baseType: !1055, size: 160, offset: 768)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2604, file: !1030, line: 416, baseType: !1059, size: 160, offset: 928)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2604, file: !1030, line: 417, baseType: !60, size: 32, offset: 1088)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 32)
!2628 = !DIDerivedType(tag: DW_TAG_typedef, name: "CACHE_REGISTER_T", file: !56, line: 276, baseType: !2629)
!2629 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 260, size: 525312, elements: !2630)
!2630 = !{!2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645}
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CON", scope: !2629, file: !56, line: 261, baseType: !60, size: 32)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_OP", scope: !2629, file: !56, line: 262, baseType: !60, size: 32, offset: 32)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0L", scope: !2629, file: !56, line: 263, baseType: !60, size: 32, offset: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT0U", scope: !2629, file: !56, line: 264, baseType: !60, size: 32, offset: 96)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0L", scope: !2629, file: !56, line: 265, baseType: !60, size: 32, offset: 128)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT0U", scope: !2629, file: !56, line: 266, baseType: !60, size: 32, offset: 160)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1L", scope: !2629, file: !56, line: 267, baseType: !60, size: 32, offset: 192)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_HCNT1U", scope: !2629, file: !56, line: 268, baseType: !60, size: 32, offset: 224)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1L", scope: !2629, file: !56, line: 269, baseType: !60, size: 32, offset: 256)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_CCNT1U", scope: !2629, file: !56, line: 270, baseType: !60, size: 32, offset: 288)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2629, file: !56, line: 271, baseType: !75, size: 32, offset: 320)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_REGION_EN", scope: !2629, file: !56, line: 272, baseType: !60, size: 32, offset: 352)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED1", scope: !2629, file: !56, line: 273, baseType: !80, size: 523904, offset: 384)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_ENTRY_N", scope: !2629, file: !56, line: 274, baseType: !84, size: 512, offset: 524288)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "CACHE_END_ENTRY_N", scope: !2629, file: !56, line: 275, baseType: !84, size: 512, offset: 524800)
!2646 = !{!2647, !2539}
!2647 = !DIGlobalVariableExpression(var: !2648, expr: !DIExpression())
!2648 = distinct !DIGlobalVariable(name: "SystemCoreClock", scope: !2541, file: !2542, line: 50, type: !61, isLocal: false, isDefinition: true)
!2649 = !DIGlobalVariableExpression(var: !2650, expr: !DIExpression())
!2650 = distinct !DIGlobalVariable(name: "build_date_time_str", scope: !2651, file: !2656, line: 4, type: !2662, isLocal: false, isDefinition: true)
!2651 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2652, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, globals: !2653, splitDebugInlining: false, nameTableKind: None)
!2652 = !DIFile(filename: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC/build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2653 = !{!2649, !2654, !2660}
!2654 = !DIGlobalVariableExpression(var: !2655, expr: !DIExpression())
!2655 = distinct !DIGlobalVariable(name: "sw_verno_str", scope: !2651, file: !2656, line: 5, type: !2657, isLocal: false, isDefinition: true)
!2656 = !DIFile(filename: "build/middleware/MTK/verno/verno.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2657 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 88, elements: !2658)
!2658 = !{!2659}
!2659 = !DISubrange(count: 11)
!2660 = !DIGlobalVariableExpression(var: !2661, expr: !DIExpression())
!2661 = distinct !DIGlobalVariable(name: "hw_verno_str", scope: !2651, file: !2656, line: 6, type: !2657, isLocal: false, isDefinition: true)
!2662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1630, size: 248, elements: !2569)
!2663 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2664, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2665, retainedTypes: !2688, splitDebugInlining: false, nameTableKind: None)
!2664 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_gpt.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2665 = !{!2057, !245, !259, !2666, !2670, !254, !157}
!2666 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !98, line: 857, baseType: !18, size: 32, elements: !2667)
!2667 = !{!2668, !2669}
!2668 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_32K", value: 0)
!2669 = !DIEnumerator(name: "HAL_GPT_CLOCK_SOURCE_1M", value: 1)
!2670 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !158, line: 87, baseType: !18, size: 32, elements: !2671)
!2671 = !{!2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687}
!2672 = !DIEnumerator(name: "GPT_DIVIDE_1", value: 0)
!2673 = !DIEnumerator(name: "GPT_DIVIDE_2", value: 1)
!2674 = !DIEnumerator(name: "GPT_DIVIDE_3", value: 2)
!2675 = !DIEnumerator(name: "GPT_DIVIDE_4", value: 3)
!2676 = !DIEnumerator(name: "GPT_DIVIDE_5", value: 4)
!2677 = !DIEnumerator(name: "GPT_DIVIDE_6", value: 5)
!2678 = !DIEnumerator(name: "GPT_DIVIDE_7", value: 6)
!2679 = !DIEnumerator(name: "GPT_DIVIDE_8", value: 7)
!2680 = !DIEnumerator(name: "GPT_DIVIDE_9", value: 8)
!2681 = !DIEnumerator(name: "GPT_DIVIDE_10", value: 9)
!2682 = !DIEnumerator(name: "GPT_DIVIDE_11", value: 10)
!2683 = !DIEnumerator(name: "GPT_DIVIDE_12", value: 11)
!2684 = !DIEnumerator(name: "GPT_DIVIDE_13", value: 12)
!2685 = !DIEnumerator(name: "GPT_DIVIDE_16", value: 13)
!2686 = !DIEnumerator(name: "GPT_DIVIDE_32", value: 14)
!2687 = !DIEnumerator(name: "GPT_DIVIDE_64", value: 15)
!2688 = !{!61, !88, !307}
!2689 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2690, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2691, retainedTypes: !2692, splitDebugInlining: false, nameTableKind: None)
!2690 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_uart_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2691 = !{!693, !699, !703, !786}
!2692 = !{!460}
!2693 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2694, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !2695, retainedTypes: !2696, splitDebugInlining: false, nameTableKind: None)
!2694 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_nvic_internal.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2695 = !{!168, !715}
!2696 = !{!862, !2697, !61, !2722, !1091}
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_typedef, name: "SCB_Type", file: !1030, line: 418, baseType: !2699)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1030, line: 395, size: 1120, elements: !2700)
!2700 = !{!2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "CPUID", scope: !2699, file: !1030, line: 397, baseType: !272, size: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "ICSR", scope: !2699, file: !1030, line: 398, baseType: !60, size: 32, offset: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "VTOR", scope: !2699, file: !1030, line: 399, baseType: !60, size: 32, offset: 64)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "AIRCR", scope: !2699, file: !1030, line: 400, baseType: !60, size: 32, offset: 96)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !2699, file: !1030, line: 401, baseType: !60, size: 32, offset: 128)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "CCR", scope: !2699, file: !1030, line: 402, baseType: !60, size: 32, offset: 160)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "SHP", scope: !2699, file: !1030, line: 403, baseType: !1040, size: 96, offset: 192)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "SHCSR", scope: !2699, file: !1030, line: 404, baseType: !60, size: 32, offset: 288)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "CFSR", scope: !2699, file: !1030, line: 405, baseType: !60, size: 32, offset: 320)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "HFSR", scope: !2699, file: !1030, line: 406, baseType: !60, size: 32, offset: 352)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "DFSR", scope: !2699, file: !1030, line: 407, baseType: !60, size: 32, offset: 384)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "MMFAR", scope: !2699, file: !1030, line: 408, baseType: !60, size: 32, offset: 416)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "BFAR", scope: !2699, file: !1030, line: 409, baseType: !60, size: 32, offset: 448)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "AFSR", scope: !2699, file: !1030, line: 410, baseType: !60, size: 32, offset: 480)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "PFR", scope: !2699, file: !1030, line: 411, baseType: !1049, size: 64, offset: 512)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "DFR", scope: !2699, file: !1030, line: 412, baseType: !272, size: 32, offset: 576)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "ADR", scope: !2699, file: !1030, line: 413, baseType: !272, size: 32, offset: 608)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "MMFR", scope: !2699, file: !1030, line: 414, baseType: !1053, size: 128, offset: 640)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "ISAR", scope: !2699, file: !1030, line: 415, baseType: !1055, size: 160, offset: 768)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2699, file: !1030, line: 416, baseType: !1059, size: 160, offset: 928)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "CPACR", scope: !2699, file: !1030, line: 417, baseType: !60, size: 32, offset: 1088)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 32)
!2723 = !DIDerivedType(tag: DW_TAG_typedef, name: "NVIC_Type", file: !1030, line: 378, baseType: !2724)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1030, line: 363, size: 28704, elements: !2725)
!2725 = !{!2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ISER", scope: !2724, file: !1030, line: 365, baseType: !1066, size: 256)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED0", scope: !2724, file: !1030, line: 366, baseType: !1068, size: 768, offset: 256)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "ICER", scope: !2724, file: !1030, line: 367, baseType: !1066, size: 256, offset: 1024)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "RSERVED1", scope: !2724, file: !1030, line: 368, baseType: !1068, size: 768, offset: 1280)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "ISPR", scope: !2724, file: !1030, line: 369, baseType: !1066, size: 256, offset: 2048)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED2", scope: !2724, file: !1030, line: 370, baseType: !1068, size: 768, offset: 2304)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ICPR", scope: !2724, file: !1030, line: 371, baseType: !1066, size: 256, offset: 3072)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED3", scope: !2724, file: !1030, line: 372, baseType: !1068, size: 768, offset: 3328)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "IABR", scope: !2724, file: !1030, line: 373, baseType: !1066, size: 256, offset: 4096)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED4", scope: !2724, file: !1030, line: 374, baseType: !1079, size: 1792, offset: 4352)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "IP", scope: !2724, file: !1030, line: 375, baseType: !1083, size: 1920, offset: 6144)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "RESERVED5", scope: !2724, file: !1030, line: 376, baseType: !1087, size: 20608, offset: 8064)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "STIR", scope: !2724, file: !1030, line: 377, baseType: !60, size: 32, offset: 28672)
!2739 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2740, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2740 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_flash_cfi.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2741 = distinct !DICompileUnit(language: DW_LANG_C99, file: !2742, producer: "Ubuntu clang version 14.0.6", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, splitDebugInlining: false, nameTableKind: None)
!2742 = !DIFile(filename: "../../../../../driver/chip/mt2523/src/hal_log.c", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2743 = !{!"Ubuntu clang version 14.0.6"}
!2744 = !{i32 7, !"Dwarf Version", i32 2}
!2745 = !{i32 2, !"Debug Info Version", i32 3}
!2746 = !{i32 1, !"wchar_size", i32 4}
!2747 = !{i32 1, !"min_enum_size", i32 4}
!2748 = !{i32 1, !"branch-target-enforcement", i32 0}
!2749 = !{i32 1, !"sign-return-address", i32 0}
!2750 = !{i32 1, !"sign-return-address-all", i32 0}
!2751 = !{i32 1, !"sign-return-address-with-bkey", i32 0}
!2752 = !{i32 7, !"frame-pointer", i32 2}
!2753 = distinct !DISubprogram(name: "hal_cache_init", scope: !3, file: !3, line: 53, type: !2754, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2757)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{!2756}
!2756 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_status_t", file: !6, line: 172, baseType: !5)
!2757 = !{!2758, !2760}
!2758 = !DILocalVariable(name: "region", scope: !2753, file: !3, line: 55, type: !2759)
!2759 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_t", file: !6, line: 204, baseType: !17)
!2760 = !DILocalVariable(name: "irq_flag", scope: !2753, file: !3, line: 56, type: !61)
!2761 = !DILocation(line: 59, column: 16, scope: !2753)
!2762 = !DILocation(line: 0, scope: !2753)
!2763 = !DILocation(line: 62, column: 9, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 62, column: 9)
!2765 = !{i8 0, i8 2}
!2766 = !DILocation(line: 62, column: 9, scope: !2753)
!2767 = !DILocation(line: 64, column: 9, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2764, file: !3, line: 62, column: 39)
!2769 = !DILocation(line: 66, column: 9, scope: !2768)
!2770 = !DILocation(line: 69, column: 24, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2764, file: !3, line: 67, column: 12)
!2772 = !DILocation(line: 72, column: 9, scope: !2771)
!2773 = !DILocation(line: 77, column: 5, scope: !2753)
!2774 = !DILocation(line: 80, column: 22, scope: !2753)
!2775 = !DILocation(line: 81, column: 28, scope: !2753)
!2776 = !DILocation(line: 84, column: 19, scope: !2753)
!2777 = !DILocation(line: 85, column: 23, scope: !2753)
!2778 = !DILocation(line: 88, column: 5, scope: !2779)
!2779 = distinct !DILexicalBlock(scope: !2753, file: !3, line: 88, column: 5)
!2780 = !DILocation(line: 90, column: 9, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2782, file: !3, line: 88, column: 81)
!2782 = distinct !DILexicalBlock(scope: !2779, file: !3, line: 88, column: 5)
!2783 = !DILocation(line: 90, column: 38, scope: !2781)
!2784 = !DILocation(line: 91, column: 9, scope: !2781)
!2785 = !DILocation(line: 91, column: 42, scope: !2781)
!2786 = !DILocation(line: 94, column: 45, scope: !2781)
!2787 = !DILocation(line: 94, column: 47, scope: !2781)
!2788 = !DILocation(line: 95, column: 49, scope: !2781)
!2789 = !DILocation(line: 95, column: 51, scope: !2781)
!2790 = !DILocation(line: 88, column: 77, scope: !2782)
!2791 = !DILocation(line: 88, column: 46, scope: !2782)
!2792 = distinct !{!2792, !2778, !2793}
!2793 = !DILocation(line: 96, column: 5, scope: !2779)
!2794 = !DILocation(line: 99, column: 1, scope: !2753)
!2795 = distinct !DISubprogram(name: "hal_cache_invalidate_all_cache_lines", scope: !3, file: !3, line: 327, type: !2754, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2796)
!2796 = !{!2797}
!2797 = !DILocalVariable(name: "irq_flag", scope: !2795, file: !3, line: 329, type: !61)
!2798 = !DILocation(line: 332, column: 16, scope: !2795)
!2799 = !DILocation(line: 0, scope: !2795)
!2800 = !DILocation(line: 335, column: 21, scope: !2795)
!2801 = !DILocation(line: 336, column: 21, scope: !2795)
!2802 = !DILocation(line: 339, column: 21, scope: !2795)
!2803 = !DILocation(line: 340, column: 21, scope: !2795)
!2804 = !DILocation(line: 434, column: 3, scope: !2805, inlinedAt: !2807)
!2805 = distinct !DISubprogram(name: "__ISB", scope: !2806, file: !2806, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2806 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmInstr.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!2807 = distinct !DILocation(line: 343, column: 5, scope: !2795)
!2808 = !{i64 442812}
!2809 = !DILocation(line: 346, column: 5, scope: !2795)
!2810 = !DILocation(line: 348, column: 5, scope: !2795)
!2811 = distinct !DISubprogram(name: "hal_cache_deinit", scope: !3, file: !3, line: 101, type: !2754, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2812)
!2812 = !{!2813}
!2813 = !DILocalVariable(name: "region", scope: !2811, file: !3, line: 103, type: !2759)
!2814 = !DILocation(line: 107, column: 5, scope: !2811)
!2815 = !DILocation(line: 110, column: 22, scope: !2811)
!2816 = !DILocation(line: 111, column: 28, scope: !2811)
!2817 = !DILocation(line: 114, column: 19, scope: !2811)
!2818 = !DILocation(line: 115, column: 23, scope: !2811)
!2819 = !DILocation(line: 0, scope: !2811)
!2820 = !DILocation(line: 118, column: 5, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2811, file: !3, line: 118, column: 5)
!2822 = !DILocation(line: 120, column: 9, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2824, file: !3, line: 118, column: 81)
!2824 = distinct !DILexicalBlock(scope: !2821, file: !3, line: 118, column: 5)
!2825 = !DILocation(line: 120, column: 38, scope: !2823)
!2826 = !DILocation(line: 121, column: 9, scope: !2823)
!2827 = !DILocation(line: 121, column: 42, scope: !2823)
!2828 = !DILocation(line: 124, column: 45, scope: !2823)
!2829 = !DILocation(line: 124, column: 47, scope: !2823)
!2830 = !DILocation(line: 125, column: 49, scope: !2823)
!2831 = !DILocation(line: 125, column: 51, scope: !2823)
!2832 = !DILocation(line: 118, column: 77, scope: !2824)
!2833 = !DILocation(line: 118, column: 46, scope: !2824)
!2834 = distinct !{!2834, !2820, !2835}
!2835 = !DILocation(line: 126, column: 5, scope: !2821)
!2836 = !DILocation(line: 129, column: 20, scope: !2811)
!2837 = !DILocation(line: 131, column: 5, scope: !2811)
!2838 = distinct !DISubprogram(name: "hal_cache_enable", scope: !3, file: !3, line: 134, type: !2754, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !293)
!2839 = !DILocation(line: 137, column: 45, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2838, file: !3, line: 137, column: 9)
!2841 = !DILocation(line: 137, column: 28, scope: !2840)
!2842 = !DILocation(line: 137, column: 9, scope: !2838)
!2843 = !DILocation(line: 142, column: 22, scope: !2838)
!2844 = !DILocation(line: 145, column: 28, scope: !2838)
!2845 = !DILocation(line: 145, column: 19, scope: !2838)
!2846 = !DILocation(line: 147, column: 5, scope: !2838)
!2847 = !DILocation(line: 0, scope: !2838)
!2848 = !DILocation(line: 148, column: 1, scope: !2838)
!2849 = distinct !DISubprogram(name: "hal_cache_disable", scope: !3, file: !3, line: 150, type: !2754, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2850)
!2850 = !{!2851}
!2851 = !DILocalVariable(name: "irq_flag", scope: !2849, file: !3, line: 152, type: !61)
!2852 = !DILocation(line: 155, column: 16, scope: !2849)
!2853 = !DILocation(line: 0, scope: !2849)
!2854 = !DILocation(line: 158, column: 16, scope: !2855)
!2855 = distinct !DILexicalBlock(scope: !2849, file: !3, line: 158, column: 9)
!2856 = !DILocation(line: 158, column: 26, scope: !2855)
!2857 = !DILocation(line: 158, column: 9, scope: !2849)
!2858 = !DILocation(line: 160, column: 9, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2855, file: !3, line: 158, column: 49)
!2860 = !DILocation(line: 161, column: 5, scope: !2859)
!2861 = !DILocation(line: 164, column: 22, scope: !2849)
!2862 = !DILocation(line: 167, column: 28, scope: !2849)
!2863 = !DILocation(line: 167, column: 19, scope: !2849)
!2864 = !DILocation(line: 170, column: 5, scope: !2849)
!2865 = !DILocation(line: 172, column: 5, scope: !2849)
!2866 = distinct !DISubprogram(name: "hal_cache_region_enable", scope: !3, file: !3, line: 175, type: !2867, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2869)
!2867 = !DISubroutineType(types: !2868)
!2868 = !{!2756, !2759}
!2869 = !{!2870}
!2870 = !DILocalVariable(name: "region", arg: 1, scope: !2866, file: !3, line: 175, type: !2759)
!2871 = !DILocation(line: 0, scope: !2866)
!2872 = !DILocation(line: 178, column: 16, scope: !2873)
!2873 = distinct !DILexicalBlock(scope: !2866, file: !3, line: 178, column: 9)
!2874 = !DILocation(line: 178, column: 9, scope: !2866)
!2875 = !DILocation(line: 183, column: 9, scope: !2876)
!2876 = distinct !DILexicalBlock(scope: !2866, file: !3, line: 183, column: 9)
!2877 = !DILocation(line: 183, column: 38, scope: !2876)
!2878 = !DILocation(line: 183, column: 9, scope: !2866)
!2879 = !DILocation(line: 184, column: 38, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2876, file: !3, line: 183, column: 62)
!2881 = !DILocation(line: 184, column: 32, scope: !2880)
!2882 = !DILocation(line: 190, column: 32, scope: !2866)
!2883 = !DILocation(line: 190, column: 23, scope: !2866)
!2884 = !DILocation(line: 192, column: 5, scope: !2866)
!2885 = !DILocation(line: 193, column: 1, scope: !2866)
!2886 = distinct !DISubprogram(name: "hal_cache_region_disable", scope: !3, file: !3, line: 195, type: !2867, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2887)
!2887 = !{!2888}
!2888 = !DILocalVariable(name: "region", arg: 1, scope: !2886, file: !3, line: 195, type: !2759)
!2889 = !DILocation(line: 0, scope: !2886)
!2890 = !DILocation(line: 198, column: 16, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2886, file: !3, line: 198, column: 9)
!2892 = !DILocation(line: 198, column: 9, scope: !2886)
!2893 = !DILocation(line: 203, column: 35, scope: !2886)
!2894 = !DILocation(line: 203, column: 31, scope: !2886)
!2895 = !DILocation(line: 203, column: 28, scope: !2886)
!2896 = !DILocation(line: 206, column: 32, scope: !2886)
!2897 = !DILocation(line: 206, column: 23, scope: !2886)
!2898 = !DILocation(line: 209, column: 41, scope: !2886)
!2899 = !DILocation(line: 209, column: 43, scope: !2886)
!2900 = !DILocation(line: 210, column: 45, scope: !2886)
!2901 = !DILocation(line: 210, column: 47, scope: !2886)
!2902 = !DILocation(line: 212, column: 5, scope: !2886)
!2903 = !DILocation(line: 213, column: 1, scope: !2886)
!2904 = distinct !DISubprogram(name: "hal_cache_set_size", scope: !3, file: !3, line: 215, type: !2905, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2908)
!2905 = !DISubroutineType(types: !2906)
!2906 = !{!2756, !2907}
!2907 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_size_t", file: !6, line: 182, baseType: !37)
!2908 = !{!2909}
!2909 = !DILocalVariable(name: "cache_size", arg: 1, scope: !2904, file: !3, line: 215, type: !2907)
!2910 = !DILocation(line: 0, scope: !2904)
!2911 = !DILocation(line: 218, column: 20, scope: !2912)
!2912 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 218, column: 9)
!2913 = !DILocation(line: 218, column: 9, scope: !2904)
!2914 = !DILocation(line: 223, column: 22, scope: !2904)
!2915 = !DILocation(line: 224, column: 37, scope: !2904)
!2916 = !DILocation(line: 224, column: 22, scope: !2904)
!2917 = !DILocation(line: 227, column: 20, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2904, file: !3, line: 227, column: 9)
!2919 = !DILocation(line: 227, column: 9, scope: !2904)
!2920 = !DILocation(line: 228, column: 26, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 227, column: 43)
!2922 = !DILocation(line: 229, column: 5, scope: !2921)
!2923 = !DILocation(line: 232, column: 28, scope: !2904)
!2924 = !DILocation(line: 232, column: 19, scope: !2904)
!2925 = !DILocation(line: 234, column: 5, scope: !2904)
!2926 = !DILocation(line: 235, column: 1, scope: !2904)
!2927 = distinct !DISubprogram(name: "hal_cache_region_config", scope: !3, file: !3, line: 237, type: !2928, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2937)
!2928 = !DISubroutineType(types: !2929)
!2929 = !{!2756, !2759, !2930}
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 32)
!2931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2932)
!2932 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_cache_region_config_t", file: !6, line: 222, baseType: !2933)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6, line: 219, size: 64, elements: !2934)
!2934 = !{!2935, !2936}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_address", scope: !2933, file: !6, line: 220, baseType: !61, size: 32)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "cache_region_size", scope: !2933, file: !6, line: 221, baseType: !61, size: 32, offset: 32)
!2937 = !{!2938, !2939}
!2938 = !DILocalVariable(name: "region", arg: 1, scope: !2927, file: !3, line: 237, type: !2759)
!2939 = !DILocalVariable(name: "region_config", arg: 2, scope: !2927, file: !3, line: 237, type: !2930)
!2940 = !DILocation(line: 0, scope: !2927)
!2941 = !DILocation(line: 240, column: 16, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2927, file: !3, line: 240, column: 9)
!2943 = !DILocation(line: 240, column: 9, scope: !2927)
!2944 = !DILocation(line: 245, column: 23, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2927, file: !3, line: 245, column: 9)
!2946 = !DILocation(line: 245, column: 9, scope: !2927)
!2947 = !DILocation(line: 250, column: 24, scope: !2948)
!2948 = distinct !DILexicalBlock(scope: !2927, file: !3, line: 250, column: 9)
!2949 = !DILocation(line: 250, column: 45, scope: !2948)
!2950 = !DILocation(line: 250, column: 9, scope: !2927)
!2951 = !DILocation(line: 251, column: 9, scope: !2952)
!2952 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 250, column: 81)
!2953 = !DILocation(line: 256, column: 24, scope: !2954)
!2954 = distinct !DILexicalBlock(scope: !2927, file: !3, line: 256, column: 9)
!2955 = !DILocation(line: 256, column: 42, scope: !2954)
!2956 = !DILocation(line: 256, column: 9, scope: !2927)
!2957 = !DILocation(line: 257, column: 9, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2954, file: !3, line: 256, column: 78)
!2959 = !DILocation(line: 262, column: 5, scope: !2927)
!2960 = !DILocation(line: 262, column: 34, scope: !2927)
!2961 = !DILocation(line: 263, column: 55, scope: !2927)
!2962 = !DILocation(line: 263, column: 93, scope: !2927)
!2963 = !DILocation(line: 263, column: 76, scope: !2927)
!2964 = !DILocation(line: 263, column: 5, scope: !2927)
!2965 = !DILocation(line: 263, column: 38, scope: !2927)
!2966 = !DILocation(line: 266, column: 34, scope: !2927)
!2967 = !DILocation(line: 269, column: 45, scope: !2927)
!2968 = !DILocation(line: 269, column: 41, scope: !2927)
!2969 = !DILocation(line: 269, column: 43, scope: !2927)
!2970 = !DILocation(line: 270, column: 49, scope: !2927)
!2971 = !DILocation(line: 270, column: 45, scope: !2927)
!2972 = !DILocation(line: 270, column: 47, scope: !2927)
!2973 = !DILocation(line: 272, column: 5, scope: !2927)
!2974 = !DILocation(line: 273, column: 1, scope: !2927)
!2975 = distinct !DISubprogram(name: "hal_cache_invalidate_one_cache_line", scope: !3, file: !3, line: 275, type: !2976, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2978)
!2976 = !DISubroutineType(types: !2977)
!2977 = !{!2756, !61}
!2978 = !{!2979, !2980}
!2979 = !DILocalVariable(name: "address", arg: 1, scope: !2975, file: !3, line: 275, type: !61)
!2980 = !DILocalVariable(name: "irq_flag", scope: !2975, file: !3, line: 277, type: !61)
!2981 = !DILocation(line: 0, scope: !2975)
!2982 = !DILocation(line: 280, column: 17, scope: !2983)
!2983 = distinct !DILexicalBlock(scope: !2975, file: !3, line: 280, column: 9)
!2984 = !DILocation(line: 280, column: 9, scope: !2975)
!2985 = !DILocation(line: 284, column: 16, scope: !2975)
!2986 = !DILocation(line: 287, column: 32, scope: !2975)
!2987 = !DILocation(line: 287, column: 21, scope: !2975)
!2988 = !DILocation(line: 288, column: 21, scope: !2975)
!2989 = !DILocation(line: 434, column: 3, scope: !2805, inlinedAt: !2990)
!2990 = distinct !DILocation(line: 291, column: 5, scope: !2975)
!2991 = !DILocation(line: 294, column: 5, scope: !2975)
!2992 = !DILocation(line: 296, column: 5, scope: !2975)
!2993 = !DILocation(line: 297, column: 1, scope: !2975)
!2994 = distinct !DISubprogram(name: "hal_cache_invalidate_multiple_cache_lines", scope: !3, file: !3, line: 299, type: !2995, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2997)
!2995 = !DISubroutineType(types: !2996)
!2996 = !{!2756, !61, !61}
!2997 = !{!2998, !2999, !3000, !3001}
!2998 = !DILocalVariable(name: "address", arg: 1, scope: !2994, file: !3, line: 299, type: !61)
!2999 = !DILocalVariable(name: "length", arg: 2, scope: !2994, file: !3, line: 299, type: !61)
!3000 = !DILocalVariable(name: "irq_flag", scope: !2994, file: !3, line: 301, type: !61)
!3001 = !DILocalVariable(name: "end_address", scope: !2994, file: !3, line: 302, type: !61)
!3002 = !DILocation(line: 0, scope: !2994)
!3003 = !DILocation(line: 302, column: 36, scope: !2994)
!3004 = !DILocation(line: 305, column: 47, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2994, file: !3, line: 305, column: 9)
!3006 = !DILocation(line: 310, column: 16, scope: !2994)
!3007 = !DILocation(line: 313, column: 20, scope: !2994)
!3008 = !DILocation(line: 313, column: 5, scope: !2994)
!3009 = !DILocation(line: 314, column: 9, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !2994, file: !3, line: 313, column: 35)
!3011 = !DILocation(line: 315, column: 17, scope: !3010)
!3012 = distinct !{!3012, !3008, !3013}
!3013 = !DILocation(line: 316, column: 5, scope: !2994)
!3014 = !DILocation(line: 434, column: 3, scope: !2805, inlinedAt: !3015)
!3015 = distinct !DILocation(line: 319, column: 5, scope: !2994)
!3016 = !DILocation(line: 322, column: 5, scope: !2994)
!3017 = !DILocation(line: 324, column: 5, scope: !2994)
!3018 = !DILocation(line: 325, column: 1, scope: !2994)
!3019 = distinct !DISubprogram(name: "hal_cache_flush_one_cache_line", scope: !3, file: !3, line: 351, type: !2976, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3020)
!3020 = !{!3021, !3022}
!3021 = !DILocalVariable(name: "address", arg: 1, scope: !3019, file: !3, line: 351, type: !61)
!3022 = !DILocalVariable(name: "irq_flag", scope: !3019, file: !3, line: 353, type: !61)
!3023 = !DILocation(line: 0, scope: !3019)
!3024 = !DILocation(line: 356, column: 17, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3019, file: !3, line: 356, column: 9)
!3026 = !DILocation(line: 356, column: 9, scope: !3019)
!3027 = !DILocation(line: 361, column: 16, scope: !3019)
!3028 = !DILocation(line: 364, column: 32, scope: !3019)
!3029 = !DILocation(line: 364, column: 21, scope: !3019)
!3030 = !DILocation(line: 365, column: 21, scope: !3019)
!3031 = !DILocation(line: 434, column: 3, scope: !2805, inlinedAt: !3032)
!3032 = distinct !DILocation(line: 368, column: 5, scope: !3019)
!3033 = !DILocation(line: 371, column: 5, scope: !3019)
!3034 = !DILocation(line: 373, column: 5, scope: !3019)
!3035 = !DILocation(line: 374, column: 1, scope: !3019)
!3036 = distinct !DISubprogram(name: "hal_cache_flush_multiple_cache_lines", scope: !3, file: !3, line: 376, type: !2995, scopeLine: 377, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3037)
!3037 = !{!3038, !3039, !3040, !3041}
!3038 = !DILocalVariable(name: "address", arg: 1, scope: !3036, file: !3, line: 376, type: !61)
!3039 = !DILocalVariable(name: "length", arg: 2, scope: !3036, file: !3, line: 376, type: !61)
!3040 = !DILocalVariable(name: "irq_flag", scope: !3036, file: !3, line: 378, type: !61)
!3041 = !DILocalVariable(name: "end_address", scope: !3036, file: !3, line: 379, type: !61)
!3042 = !DILocation(line: 0, scope: !3036)
!3043 = !DILocation(line: 379, column: 36, scope: !3036)
!3044 = !DILocation(line: 382, column: 47, scope: !3045)
!3045 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 382, column: 9)
!3046 = !DILocation(line: 387, column: 16, scope: !3036)
!3047 = !DILocation(line: 390, column: 20, scope: !3036)
!3048 = !DILocation(line: 390, column: 5, scope: !3036)
!3049 = !DILocation(line: 391, column: 9, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 390, column: 35)
!3051 = !DILocation(line: 392, column: 17, scope: !3050)
!3052 = distinct !{!3052, !3048, !3053}
!3053 = !DILocation(line: 393, column: 5, scope: !3036)
!3054 = !DILocation(line: 434, column: 3, scope: !2805, inlinedAt: !3055)
!3055 = distinct !DILocation(line: 396, column: 5, scope: !3036)
!3056 = !DILocation(line: 399, column: 5, scope: !3036)
!3057 = !DILocation(line: 401, column: 5, scope: !3036)
!3058 = !DILocation(line: 402, column: 1, scope: !3036)
!3059 = distinct !DISubprogram(name: "hal_cache_flush_all_cache_lines", scope: !3, file: !3, line: 404, type: !2754, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3060)
!3060 = !{!3061}
!3061 = !DILocalVariable(name: "irq_flag", scope: !3059, file: !3, line: 406, type: !61)
!3062 = !DILocation(line: 409, column: 16, scope: !3059)
!3063 = !DILocation(line: 0, scope: !3059)
!3064 = !DILocation(line: 412, column: 21, scope: !3059)
!3065 = !DILocation(line: 413, column: 21, scope: !3059)
!3066 = !DILocation(line: 434, column: 3, scope: !2805, inlinedAt: !3067)
!3067 = distinct !DILocation(line: 416, column: 5, scope: !3059)
!3068 = !DILocation(line: 419, column: 5, scope: !3059)
!3069 = !DILocation(line: 421, column: 5, scope: !3059)
!3070 = distinct !DISubprogram(name: "hal_cache_is_cacheable", scope: !3, file: !3, line: 424, type: !3071, scopeLine: 425, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3073)
!3071 = !DISubroutineType(types: !3072)
!3072 = !{!91, !61}
!3073 = !{!3074, !3075}
!3074 = !DILocalVariable(name: "address", arg: 1, scope: !3070, file: !3, line: 424, type: !61)
!3075 = !DILocalVariable(name: "region", scope: !3070, file: !3, line: 426, type: !2759)
!3076 = !DILocation(line: 0, scope: !3070)
!3077 = !DILocation(line: 429, column: 18, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 429, column: 9)
!3079 = !DILocation(line: 429, column: 28, scope: !3078)
!3080 = !DILocation(line: 429, column: 9, scope: !3070)
!3081 = !DILocation(line: 435, column: 20, scope: !3082)
!3082 = distinct !DILexicalBlock(scope: !3083, file: !3, line: 435, column: 13)
!3083 = distinct !DILexicalBlock(scope: !3084, file: !3, line: 433, column: 81)
!3084 = distinct !DILexicalBlock(scope: !3085, file: !3, line: 433, column: 5)
!3085 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 433, column: 5)
!3086 = !DILocation(line: 435, column: 41, scope: !3082)
!3087 = !DILocation(line: 435, column: 36, scope: !3082)
!3088 = !DILocation(line: 435, column: 13, scope: !3083)
!3089 = !DILocation(line: 436, column: 30, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 436, column: 17)
!3091 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 435, column: 53)
!3092 = !DILocation(line: 436, column: 59, scope: !3090)
!3093 = !DILocation(line: 436, column: 26, scope: !3090)
!3094 = !DILocation(line: 436, column: 85, scope: !3090)
!3095 = !DILocation(line: 436, column: 99, scope: !3090)
!3096 = !DILocation(line: 436, column: 97, scope: !3090)
!3097 = !DILocation(line: 436, column: 17, scope: !3091)
!3098 = !DILocation(line: 433, column: 77, scope: !3084)
!3099 = !DILocation(line: 433, column: 46, scope: !3084)
!3100 = !DILocation(line: 433, column: 5, scope: !3085)
!3101 = distinct !{!3101, !3100, !3102}
!3102 = !DILocation(line: 440, column: 5, scope: !3085)
!3103 = !DILocation(line: 442, column: 1, scope: !3070)
!3104 = distinct !DISubprogram(name: "hal_gpt_init", scope: !2664, file: !2664, line: 95, type: !3105, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3109)
!3105 = !DISubroutineType(types: !3106)
!3106 = !{!3107, !3108}
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_status_t", file: !255, line: 393, baseType: !2057)
!3108 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_port_t", file: !98, line: 854, baseType: !245)
!3109 = !{!3110}
!3110 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3104, file: !2664, line: 95, type: !3108)
!3111 = !DILocation(line: 0, scope: !3104)
!3112 = !DILocation(line: 98, column: 9, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3104, file: !2664, line: 98, column: 9)
!3114 = !DILocation(line: 98, column: 9, scope: !3104)
!3115 = !DILocation(line: 102, column: 10, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3104, file: !2664, line: 102, column: 9)
!3117 = !DILocation(line: 102, column: 34, scope: !3116)
!3118 = !DILocation(line: 102, column: 49, scope: !3116)
!3119 = !DILocation(line: 102, column: 69, scope: !3116)
!3120 = !DILocation(line: 103, column: 38, scope: !3116)
!3121 = !DILocation(line: 102, column: 9, scope: !3104)
!3122 = !DILocation(line: 109, column: 12, scope: !3104)
!3123 = !DILocation(line: 109, column: 5, scope: !3104)
!3124 = !DILocation(line: 112, column: 5, scope: !3104)
!3125 = !DILocation(line: 115, column: 44, scope: !3104)
!3126 = !DILocation(line: 118, column: 5, scope: !3104)
!3127 = !DILocation(line: 118, column: 23, scope: !3104)
!3128 = !DILocation(line: 118, column: 35, scope: !3104)
!3129 = !DILocation(line: 121, column: 42, scope: !3104)
!3130 = !DILocation(line: 121, column: 38, scope: !3104)
!3131 = !DILocation(line: 121, column: 5, scope: !3104)
!3132 = !DILocation(line: 121, column: 17, scope: !3104)
!3133 = !DILocation(line: 121, column: 35, scope: !3104)
!3134 = !DILocation(line: 129, column: 5, scope: !3104)
!3135 = !DILocation(line: 131, column: 1, scope: !3104)
!3136 = distinct !DISubprogram(name: "hal_gpt_is_port_valid", scope: !2664, file: !2664, line: 81, type: !3137, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3139)
!3137 = !DISubroutineType(types: !3138)
!3138 = !{!91, !3108}
!3139 = !{!3140}
!3140 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3136, file: !2664, line: 81, type: !3108)
!3141 = !DILocation(line: 0, scope: !3136)
!3142 = !DILocation(line: 84, column: 25, scope: !3143)
!3143 = distinct !DILexicalBlock(scope: !3136, file: !2664, line: 84, column: 9)
!3144 = !DILocation(line: 84, column: 35, scope: !3143)
!3145 = !DILocation(line: 84, column: 45, scope: !3143)
!3146 = !DILocation(line: 93, column: 1, scope: !3136)
!3147 = distinct !DISubprogram(name: "hal_gpt_deinit", scope: !2664, file: !2664, line: 133, type: !3105, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3148)
!3148 = !{!3149}
!3149 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3147, file: !2664, line: 133, type: !3108)
!3150 = !DILocation(line: 0, scope: !3147)
!3151 = !DILocation(line: 136, column: 9, scope: !3152)
!3152 = distinct !DILexicalBlock(scope: !3147, file: !2664, line: 136, column: 9)
!3153 = !DILocation(line: 136, column: 9, scope: !3147)
!3154 = !DILocation(line: 140, column: 9, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3147, file: !2664, line: 140, column: 9)
!3156 = !DILocation(line: 140, column: 33, scope: !3155)
!3157 = !DILocation(line: 140, column: 48, scope: !3155)
!3158 = !DILocation(line: 140, column: 9, scope: !3147)
!3159 = !DILocation(line: 146, column: 12, scope: !3147)
!3160 = !DILocation(line: 146, column: 5, scope: !3147)
!3161 = !DILocation(line: 149, column: 29, scope: !3147)
!3162 = !DILocation(line: 149, column: 44, scope: !3147)
!3163 = !DILocation(line: 151, column: 29, scope: !3147)
!3164 = !DILocation(line: 151, column: 5, scope: !3147)
!3165 = !DILocation(line: 159, column: 5, scope: !3147)
!3166 = !DILocation(line: 160, column: 1, scope: !3147)
!3167 = distinct !DISubprogram(name: "hal_gpt_get_free_run_count", scope: !2664, file: !2664, line: 163, type: !3168, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3171)
!3168 = !DISubroutineType(types: !3169)
!3169 = !{!3107, !3170, !1153}
!3170 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_clock_source_t", file: !98, line: 860, baseType: !2666)
!3171 = !{!3172, !3173}
!3172 = !DILocalVariable(name: "clock_source", arg: 1, scope: !3167, file: !2664, line: 163, type: !3170)
!3173 = !DILocalVariable(name: "count", arg: 2, scope: !3167, file: !2664, line: 163, type: !1153)
!3174 = !DILocation(line: 0, scope: !3167)
!3175 = !DILocation(line: 166, column: 9, scope: !3167)
!3176 = !DILocation(line: 167, column: 44, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !3178, file: !2664, line: 167, column: 13)
!3178 = distinct !DILexicalBlock(scope: !3179, file: !2664, line: 166, column: 51)
!3179 = distinct !DILexicalBlock(scope: !3167, file: !2664, line: 166, column: 9)
!3180 = !DILocation(line: 167, column: 59, scope: !3177)
!3181 = !DILocation(line: 167, column: 13, scope: !3178)
!3182 = !DILocation(line: 170, column: 38, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3177, file: !2664, line: 167, column: 79)
!3184 = !DILocation(line: 170, column: 13, scope: !3183)
!3185 = !DILocation(line: 172, column: 59, scope: !3183)
!3186 = !DILocation(line: 173, column: 9, scope: !3183)
!3187 = !DILocation(line: 175, column: 36, scope: !3178)
!3188 = !DILocation(line: 175, column: 18, scope: !3178)
!3189 = !DILocation(line: 177, column: 5, scope: !3178)
!3190 = !DILocation(line: 179, column: 44, scope: !3191)
!3191 = distinct !DILexicalBlock(scope: !3192, file: !2664, line: 179, column: 13)
!3192 = distinct !DILexicalBlock(scope: !3193, file: !2664, line: 178, column: 55)
!3193 = distinct !DILexicalBlock(scope: !3179, file: !2664, line: 178, column: 14)
!3194 = !DILocation(line: 179, column: 59, scope: !3191)
!3195 = !DILocation(line: 179, column: 13, scope: !3192)
!3196 = !DILocation(line: 182, column: 38, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3191, file: !2664, line: 179, column: 79)
!3198 = !DILocation(line: 182, column: 13, scope: !3197)
!3199 = !DILocation(line: 184, column: 59, scope: !3197)
!3200 = !DILocation(line: 186, column: 9, scope: !3197)
!3201 = !DILocation(line: 188, column: 68, scope: !3192)
!3202 = !DILocation(line: 188, column: 50, scope: !3192)
!3203 = !DILocation(line: 188, column: 18, scope: !3192)
!3204 = !DILocation(line: 0, scope: !3179)
!3205 = !DILocation(line: 193, column: 5, scope: !3167)
!3206 = !DILocation(line: 194, column: 1, scope: !3167)
!3207 = distinct !DISubprogram(name: "hal_gpt_get_duration_count", scope: !2664, file: !2664, line: 196, type: !3208, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3210)
!3208 = !DISubroutineType(types: !3209)
!3209 = !{!3107, !61, !61, !1153}
!3210 = !{!3211, !3212, !3213}
!3211 = !DILocalVariable(name: "start_count", arg: 1, scope: !3207, file: !2664, line: 196, type: !61)
!3212 = !DILocalVariable(name: "end_count", arg: 2, scope: !3207, file: !2664, line: 196, type: !61)
!3213 = !DILocalVariable(name: "duration_count", arg: 3, scope: !3207, file: !2664, line: 196, type: !1153)
!3214 = !DILocation(line: 0, scope: !3207)
!3215 = !DILocation(line: 198, column: 24, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3207, file: !2664, line: 198, column: 9)
!3217 = !DILocation(line: 198, column: 9, scope: !3207)
!3218 = !DILocation(line: 0, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3207, file: !2664, line: 202, column: 9)
!3220 = !DILocation(line: 208, column: 5, scope: !3207)
!3221 = !DILocation(line: 209, column: 1, scope: !3207)
!3222 = distinct !DISubprogram(name: "hal_gpt_get_running_status", scope: !2664, file: !2664, line: 211, type: !3223, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3226)
!3223 = !DISubroutineType(types: !3224)
!3224 = !{!3107, !3108, !3225}
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 32)
!3226 = !{!3227, !3228}
!3227 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3222, file: !2664, line: 211, type: !3108)
!3228 = !DILocalVariable(name: "running_status", arg: 2, scope: !3222, file: !2664, line: 211, type: !3225)
!3229 = !DILocation(line: 0, scope: !3222)
!3230 = !DILocation(line: 213, column: 18, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3222, file: !2664, line: 213, column: 9)
!3232 = !DILocation(line: 213, column: 9, scope: !3222)
!3233 = !DILocation(line: 217, column: 47, scope: !3222)
!3234 = !DILocation(line: 217, column: 21, scope: !3222)
!3235 = !DILocation(line: 219, column: 5, scope: !3222)
!3236 = !DILocation(line: 220, column: 1, scope: !3222)
!3237 = distinct !DISubprogram(name: "hal_gpt_register_callback", scope: !2664, file: !2664, line: 222, type: !3238, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3240)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{!3107, !3108, !307, !88}
!3240 = !{!3241, !3242, !3243}
!3241 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3237, file: !2664, line: 222, type: !3108)
!3242 = !DILocalVariable(name: "callback", arg: 2, scope: !3237, file: !2664, line: 223, type: !307)
!3243 = !DILocalVariable(name: "user_data", arg: 3, scope: !3237, file: !2664, line: 224, type: !88)
!3244 = !DILocation(line: 0, scope: !3237)
!3245 = !DILocation(line: 227, column: 9, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3237, file: !2664, line: 227, column: 9)
!3247 = !DILocation(line: 227, column: 9, scope: !3237)
!3248 = !DILocation(line: 231, column: 34, scope: !3249)
!3249 = distinct !DILexicalBlock(scope: !3237, file: !2664, line: 231, column: 9)
!3250 = !DILocation(line: 231, column: 49, scope: !3249)
!3251 = !DILocation(line: 231, column: 69, scope: !3249)
!3252 = !DILocation(line: 232, column: 38, scope: !3249)
!3253 = !DILocation(line: 232, column: 53, scope: !3249)
!3254 = !DILocation(line: 231, column: 9, scope: !3237)
!3255 = !DILocation(line: 237, column: 18, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3237, file: !2664, line: 237, column: 9)
!3257 = !DILocation(line: 237, column: 9, scope: !3237)
!3258 = !DILocation(line: 245, column: 46, scope: !3237)
!3259 = !DILocation(line: 245, column: 56, scope: !3237)
!3260 = !DILocation(line: 246, column: 46, scope: !3237)
!3261 = !DILocation(line: 246, column: 56, scope: !3237)
!3262 = !DILocation(line: 248, column: 5, scope: !3237)
!3263 = !DILocation(line: 250, column: 5, scope: !3237)
!3264 = !DILocation(line: 252, column: 1, scope: !3237)
!3265 = distinct !DISubprogram(name: "hal_gpt_start_timer_ms", scope: !2664, file: !2664, line: 256, type: !3266, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3269)
!3266 = !DISubroutineType(types: !3267)
!3267 = !{!3107, !3108, !61, !3268}
!3268 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpt_timer_type_t", file: !255, line: 383, baseType: !254)
!3269 = !{!3270, !3271, !3272, !3273}
!3270 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3265, file: !2664, line: 256, type: !3108)
!3271 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3265, file: !2664, line: 256, type: !61)
!3272 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3265, file: !2664, line: 256, type: !3268)
!3273 = !DILocalVariable(name: "mask", scope: !3265, file: !2664, line: 259, type: !60)
!3274 = !DILocation(line: 0, scope: !3265)
!3275 = !DILocation(line: 259, column: 5, scope: !3265)
!3276 = !DILocation(line: 259, column: 23, scope: !3265)
!3277 = !DILocation(line: 261, column: 9, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3265, file: !2664, line: 261, column: 9)
!3279 = !DILocation(line: 261, column: 9, scope: !3265)
!3280 = !DILocation(line: 265, column: 34, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3265, file: !2664, line: 265, column: 9)
!3282 = !DILocation(line: 265, column: 49, scope: !3281)
!3283 = !DILocation(line: 266, column: 13, scope: !3281)
!3284 = !DILocation(line: 266, column: 41, scope: !3281)
!3285 = !DILocation(line: 266, column: 56, scope: !3281)
!3286 = !DILocation(line: 265, column: 9, scope: !3265)
!3287 = !DILocation(line: 271, column: 25, scope: !3288)
!3288 = distinct !DILexicalBlock(scope: !3265, file: !2664, line: 271, column: 9)
!3289 = !DILocation(line: 271, column: 9, scope: !3265)
!3290 = !DILocation(line: 282, column: 12, scope: !3265)
!3291 = !DILocation(line: 282, column: 10, scope: !3265)
!3292 = !DILocation(line: 284, column: 5, scope: !3265)
!3293 = !DILocation(line: 286, column: 5, scope: !3265)
!3294 = !DILocation(line: 286, column: 23, scope: !3265)
!3295 = !DILocation(line: 286, column: 34, scope: !3265)
!3296 = !DILocation(line: 287, column: 5, scope: !3265)
!3297 = !DILocation(line: 287, column: 23, scope: !3265)
!3298 = !DILocation(line: 287, column: 34, scope: !3265)
!3299 = !DILocation(line: 290, column: 5, scope: !3265)
!3300 = !DILocation(line: 290, column: 23, scope: !3265)
!3301 = !DILocation(line: 290, column: 37, scope: !3265)
!3302 = !DILocation(line: 291, column: 39, scope: !3265)
!3303 = !DILocation(line: 291, column: 5, scope: !3265)
!3304 = !DILocation(line: 291, column: 23, scope: !3265)
!3305 = !DILocation(line: 291, column: 37, scope: !3265)
!3306 = !DILocation(line: 292, column: 5, scope: !3265)
!3307 = !DILocation(line: 292, column: 23, scope: !3265)
!3308 = !DILocation(line: 292, column: 37, scope: !3265)
!3309 = !DILocation(line: 297, column: 47, scope: !3265)
!3310 = !DILocation(line: 298, column: 33, scope: !3265)
!3311 = !DILocation(line: 296, column: 5, scope: !3265)
!3312 = !DILocation(line: 296, column: 23, scope: !3265)
!3313 = !DILocation(line: 296, column: 31, scope: !3265)
!3314 = !DILocation(line: 300, column: 5, scope: !3265)
!3315 = !DILocation(line: 300, column: 29, scope: !3265)
!3316 = distinct !{!3316, !3314, !3317}
!3317 = !DILocation(line: 300, column: 39, scope: !3265)
!3318 = !DILocation(line: 301, column: 23, scope: !3265)
!3319 = !DILocation(line: 301, column: 33, scope: !3265)
!3320 = !DILocation(line: 302, column: 5, scope: !3265)
!3321 = !DILocation(line: 302, column: 23, scope: !3265)
!3322 = !DILocation(line: 302, column: 34, scope: !3265)
!3323 = !DILocation(line: 303, column: 44, scope: !3265)
!3324 = !DILocation(line: 305, column: 28, scope: !3265)
!3325 = !DILocation(line: 305, column: 5, scope: !3265)
!3326 = !DILocation(line: 306, column: 5, scope: !3265)
!3327 = !DILocation(line: 307, column: 1, scope: !3265)
!3328 = distinct !DISubprogram(name: "hal_gpt_delay_ms", scope: !2664, file: !2664, line: 310, type: !3329, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3331)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!3107, !61}
!3331 = !{!3332}
!3332 = !DILocalVariable(name: "ms", arg: 1, scope: !3328, file: !2664, line: 310, type: !61)
!3333 = !DILocation(line: 0, scope: !3328)
!3334 = !DILocation(line: 313, column: 40, scope: !3335)
!3335 = distinct !DILexicalBlock(scope: !3328, file: !2664, line: 313, column: 9)
!3336 = !DILocation(line: 313, column: 55, scope: !3335)
!3337 = !DILocation(line: 313, column: 9, scope: !3328)
!3338 = !DILocation(line: 316, column: 34, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3335, file: !2664, line: 313, column: 75)
!3340 = !DILocation(line: 316, column: 9, scope: !3339)
!3341 = !DILocation(line: 317, column: 55, scope: !3339)
!3342 = !DILocation(line: 318, column: 5, scope: !3339)
!3343 = !DILocation(line: 320, column: 20, scope: !3328)
!3344 = !DILocation(line: 320, column: 45, scope: !3328)
!3345 = !DILocation(line: 320, column: 5, scope: !3328)
!3346 = !DILocation(line: 322, column: 5, scope: !3328)
!3347 = distinct !DISubprogram(name: "hal_gpt_start_timer_us", scope: !2664, file: !2664, line: 327, type: !3266, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3348)
!3348 = !{!3349, !3350, !3351, !3352}
!3349 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3347, file: !2664, line: 327, type: !3108)
!3350 = !DILocalVariable(name: "timeout_time_us", arg: 2, scope: !3347, file: !2664, line: 327, type: !61)
!3351 = !DILocalVariable(name: "timer_type", arg: 3, scope: !3347, file: !2664, line: 327, type: !3268)
!3352 = !DILocalVariable(name: "mask", scope: !3347, file: !2664, line: 329, type: !60)
!3353 = !DILocation(line: 0, scope: !3347)
!3354 = !DILocation(line: 329, column: 5, scope: !3347)
!3355 = !DILocation(line: 329, column: 23, scope: !3347)
!3356 = !DILocation(line: 331, column: 9, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3347, file: !2664, line: 331, column: 9)
!3358 = !DILocation(line: 331, column: 9, scope: !3347)
!3359 = !DILocation(line: 336, column: 34, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3347, file: !2664, line: 336, column: 9)
!3361 = !DILocation(line: 336, column: 49, scope: !3360)
!3362 = !DILocation(line: 337, column: 13, scope: !3360)
!3363 = !DILocation(line: 337, column: 41, scope: !3360)
!3364 = !DILocation(line: 337, column: 56, scope: !3360)
!3365 = !DILocation(line: 336, column: 9, scope: !3347)
!3366 = !DILocation(line: 349, column: 29, scope: !3347)
!3367 = !DILocation(line: 349, column: 49, scope: !3347)
!3368 = !DILocation(line: 351, column: 12, scope: !3347)
!3369 = !DILocation(line: 351, column: 10, scope: !3347)
!3370 = !DILocation(line: 353, column: 5, scope: !3347)
!3371 = !DILocation(line: 355, column: 5, scope: !3347)
!3372 = !DILocation(line: 355, column: 23, scope: !3347)
!3373 = !DILocation(line: 355, column: 34, scope: !3347)
!3374 = !DILocation(line: 356, column: 5, scope: !3347)
!3375 = !DILocation(line: 356, column: 23, scope: !3347)
!3376 = !DILocation(line: 356, column: 34, scope: !3347)
!3377 = !DILocation(line: 359, column: 5, scope: !3347)
!3378 = !DILocation(line: 359, column: 23, scope: !3347)
!3379 = !DILocation(line: 359, column: 37, scope: !3347)
!3380 = !DILocation(line: 360, column: 39, scope: !3347)
!3381 = !DILocation(line: 360, column: 5, scope: !3347)
!3382 = !DILocation(line: 360, column: 23, scope: !3347)
!3383 = !DILocation(line: 360, column: 37, scope: !3347)
!3384 = !DILocation(line: 361, column: 5, scope: !3347)
!3385 = !DILocation(line: 361, column: 23, scope: !3347)
!3386 = !DILocation(line: 361, column: 37, scope: !3347)
!3387 = !DILocation(line: 366, column: 47, scope: !3347)
!3388 = !DILocation(line: 367, column: 33, scope: !3347)
!3389 = !DILocation(line: 365, column: 5, scope: !3347)
!3390 = !DILocation(line: 365, column: 23, scope: !3347)
!3391 = !DILocation(line: 365, column: 31, scope: !3347)
!3392 = !DILocation(line: 369, column: 5, scope: !3347)
!3393 = !DILocation(line: 369, column: 29, scope: !3347)
!3394 = distinct !{!3394, !3392, !3395}
!3395 = !DILocation(line: 369, column: 39, scope: !3347)
!3396 = !DILocation(line: 370, column: 23, scope: !3347)
!3397 = !DILocation(line: 370, column: 33, scope: !3347)
!3398 = !DILocation(line: 371, column: 5, scope: !3347)
!3399 = !DILocation(line: 371, column: 23, scope: !3347)
!3400 = !DILocation(line: 371, column: 34, scope: !3347)
!3401 = !DILocation(line: 373, column: 28, scope: !3347)
!3402 = !DILocation(line: 373, column: 5, scope: !3347)
!3403 = !DILocation(line: 375, column: 44, scope: !3347)
!3404 = !DILocation(line: 377, column: 5, scope: !3347)
!3405 = !DILocation(line: 378, column: 1, scope: !3347)
!3406 = distinct !DISubprogram(name: "hal_gpt_delay_us", scope: !2664, file: !2664, line: 382, type: !3329, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3407)
!3407 = !{!3408}
!3408 = !DILocalVariable(name: "us", arg: 1, scope: !3406, file: !2664, line: 382, type: !61)
!3409 = !DILocation(line: 0, scope: !3406)
!3410 = !DILocation(line: 385, column: 40, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3406, file: !2664, line: 385, column: 9)
!3412 = !DILocation(line: 385, column: 55, scope: !3411)
!3413 = !DILocation(line: 385, column: 9, scope: !3406)
!3414 = !DILocation(line: 388, column: 34, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3411, file: !2664, line: 385, column: 75)
!3416 = !DILocation(line: 388, column: 9, scope: !3415)
!3417 = !DILocation(line: 390, column: 55, scope: !3415)
!3418 = !DILocation(line: 391, column: 5, scope: !3415)
!3419 = !DILocation(line: 392, column: 20, scope: !3406)
!3420 = !DILocation(line: 392, column: 45, scope: !3406)
!3421 = !DILocation(line: 392, column: 5, scope: !3406)
!3422 = !DILocation(line: 394, column: 5, scope: !3406)
!3423 = distinct !DISubprogram(name: "hal_gpt_stop_timer", scope: !2664, file: !2664, line: 398, type: !3105, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3424)
!3424 = !{!3425, !3426}
!3425 = !DILocalVariable(name: "gpt_port", arg: 1, scope: !3423, file: !2664, line: 398, type: !3108)
!3426 = !DILocalVariable(name: "mask", scope: !3423, file: !2664, line: 400, type: !60)
!3427 = !DILocation(line: 0, scope: !3423)
!3428 = !DILocation(line: 400, column: 5, scope: !3423)
!3429 = !DILocation(line: 400, column: 23, scope: !3423)
!3430 = !DILocation(line: 402, column: 9, scope: !3431)
!3431 = distinct !DILexicalBlock(scope: !3423, file: !2664, line: 402, column: 9)
!3432 = !DILocation(line: 402, column: 9, scope: !3423)
!3433 = !DILocation(line: 413, column: 12, scope: !3423)
!3434 = !DILocation(line: 413, column: 10, scope: !3423)
!3435 = !DILocation(line: 415, column: 5, scope: !3423)
!3436 = !DILocation(line: 415, column: 23, scope: !3423)
!3437 = !DILocation(line: 415, column: 34, scope: !3423)
!3438 = !DILocation(line: 418, column: 5, scope: !3423)
!3439 = !DILocation(line: 418, column: 23, scope: !3423)
!3440 = !DILocation(line: 418, column: 34, scope: !3423)
!3441 = !DILocation(line: 420, column: 5, scope: !3423)
!3442 = !DILocation(line: 420, column: 23, scope: !3423)
!3443 = !DILocation(line: 420, column: 35, scope: !3423)
!3444 = !DILocation(line: 422, column: 29, scope: !3423)
!3445 = !DILocation(line: 422, column: 44, scope: !3423)
!3446 = !DILocation(line: 423, column: 28, scope: !3423)
!3447 = !DILocation(line: 423, column: 5, scope: !3423)
!3448 = !DILocation(line: 425, column: 33, scope: !3449)
!3449 = distinct !DILexicalBlock(scope: !3423, file: !2664, line: 425, column: 9)
!3450 = !DILocation(line: 425, column: 9, scope: !3423)
!3451 = !DILocation(line: 427, column: 53, scope: !3452)
!3452 = distinct !DILexicalBlock(scope: !3449, file: !2664, line: 425, column: 62)
!3453 = !DILocation(line: 428, column: 5, scope: !3452)
!3454 = !DILocation(line: 430, column: 1, scope: !3423)
!3455 = distinct !DISubprogram(name: "hal_gpt_sw_get_timer", scope: !2664, file: !2664, line: 434, type: !3456, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3458)
!3456 = !DISubroutineType(types: !3457)
!3457 = !{!3107, !1153}
!3458 = !{!3459, !3460, !3461}
!3459 = !DILocalVariable(name: "handle", arg: 1, scope: !3455, file: !2664, line: 434, type: !1153)
!3460 = !DILocalVariable(name: "timer", scope: !3455, file: !2664, line: 436, type: !61)
!3461 = !DILocalVariable(name: "mask", scope: !3455, file: !2664, line: 437, type: !61)
!3462 = !DILocation(line: 0, scope: !3455)
!3463 = !DILocation(line: 439, column: 24, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3455, file: !2664, line: 439, column: 9)
!3465 = !DILocation(line: 439, column: 41, scope: !3464)
!3466 = !DILocation(line: 439, column: 9, scope: !3455)
!3467 = !DILocation(line: 443, column: 16, scope: !3468)
!3468 = distinct !DILexicalBlock(scope: !3455, file: !2664, line: 443, column: 9)
!3469 = !DILocation(line: 443, column: 9, scope: !3455)
!3470 = !DILocation(line: 448, column: 12, scope: !3455)
!3471 = !DILocation(line: 450, column: 15, scope: !3455)
!3472 = !DILocation(line: 451, column: 21, scope: !3455)
!3473 = !DILocation(line: 451, column: 13, scope: !3455)
!3474 = !DILocation(line: 452, column: 33, scope: !3455)
!3475 = !DILocation(line: 452, column: 41, scope: !3455)
!3476 = !DILocation(line: 453, column: 36, scope: !3455)
!3477 = !DILocation(line: 455, column: 5, scope: !3455)
!3478 = !DILocation(line: 456, column: 5, scope: !3455)
!3479 = !DILocation(line: 457, column: 1, scope: !3455)
!3480 = distinct !DISubprogram(name: "hal_gpt_sw_free_timer", scope: !2664, file: !2664, line: 459, type: !3329, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3481)
!3481 = !{!3482, !3483}
!3482 = !DILocalVariable(name: "handle", arg: 1, scope: !3480, file: !2664, line: 459, type: !61)
!3483 = !DILocalVariable(name: "timer", scope: !3480, file: !2664, line: 461, type: !60)
!3484 = !DILocation(line: 0, scope: !3480)
!3485 = !DILocation(line: 461, column: 5, scope: !3480)
!3486 = !DILocation(line: 461, column: 23, scope: !3480)
!3487 = !DILocation(line: 463, column: 17, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3480, file: !2664, line: 463, column: 9)
!3489 = !DILocation(line: 463, column: 37, scope: !3488)
!3490 = !DILocation(line: 463, column: 9, scope: !3480)
!3491 = !DILocation(line: 467, column: 20, scope: !3480)
!3492 = !DILocation(line: 467, column: 11, scope: !3480)
!3493 = !DILocation(line: 469, column: 24, scope: !3494)
!3494 = distinct !DILexicalBlock(scope: !3480, file: !2664, line: 469, column: 9)
!3495 = !DILocation(line: 469, column: 41, scope: !3494)
!3496 = !DILocation(line: 469, column: 9, scope: !3480)
!3497 = !DILocation(line: 473, column: 30, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3480, file: !2664, line: 473, column: 9)
!3499 = !DILocation(line: 473, column: 37, scope: !3498)
!3500 = !DILocation(line: 473, column: 9, scope: !3480)
!3501 = !DILocation(line: 477, column: 30, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3480, file: !2664, line: 477, column: 9)
!3503 = !DILocation(line: 477, column: 37, scope: !3502)
!3504 = !DILocation(line: 477, column: 45, scope: !3502)
!3505 = !DILocation(line: 477, column: 9, scope: !3480)
!3506 = !DILocation(line: 481, column: 26, scope: !3480)
!3507 = !DILocation(line: 481, column: 33, scope: !3480)
!3508 = !DILocation(line: 481, column: 41, scope: !3480)
!3509 = !DILocation(line: 482, column: 36, scope: !3480)
!3510 = !DILocation(line: 484, column: 5, scope: !3480)
!3511 = !DILocation(line: 485, column: 1, scope: !3480)
!3512 = distinct !DISubprogram(name: "hal_gpt_sw_start_timer_ms", scope: !2664, file: !2664, line: 487, type: !3513, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3515)
!3513 = !DISubroutineType(types: !3514)
!3514 = !{!3107, !61, !61, !307, !88}
!3515 = !{!3516, !3517, !3518, !3519, !3520, !3521, !3522}
!3516 = !DILocalVariable(name: "handle", arg: 1, scope: !3512, file: !2664, line: 487, type: !61)
!3517 = !DILocalVariable(name: "timeout_time_ms", arg: 2, scope: !3512, file: !2664, line: 487, type: !61)
!3518 = !DILocalVariable(name: "callback", arg: 3, scope: !3512, file: !2664, line: 487, type: !307)
!3519 = !DILocalVariable(name: "user_data", arg: 4, scope: !3512, file: !2664, line: 487, type: !88)
!3520 = !DILocalVariable(name: "current_time", scope: !3512, file: !2664, line: 489, type: !61)
!3521 = !DILocalVariable(name: "mask", scope: !3512, file: !2664, line: 490, type: !61)
!3522 = !DILocalVariable(name: "timer", scope: !3512, file: !2664, line: 491, type: !61)
!3523 = !DILocation(line: 0, scope: !3512)
!3524 = !DILocation(line: 493, column: 17, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3512, file: !2664, line: 493, column: 9)
!3526 = !DILocation(line: 493, column: 37, scope: !3525)
!3527 = !DILocation(line: 493, column: 9, scope: !3512)
!3528 = !DILocation(line: 497, column: 20, scope: !3512)
!3529 = !DILocation(line: 503, column: 37, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3512, file: !2664, line: 503, column: 9)
!3531 = !DILocation(line: 503, column: 9, scope: !3512)
!3532 = !DILocation(line: 507, column: 37, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3512, file: !2664, line: 507, column: 9)
!3534 = !DILocation(line: 507, column: 45, scope: !3533)
!3535 = !DILocation(line: 507, column: 9, scope: !3512)
!3536 = !DILocation(line: 511, column: 25, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3512, file: !2664, line: 511, column: 9)
!3538 = !DILocation(line: 511, column: 9, scope: !3512)
!3539 = !DILocation(line: 516, column: 12, scope: !3512)
!3540 = !DILocation(line: 519, column: 30, scope: !3512)
!3541 = !DILocation(line: 521, column: 24, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3512, file: !2664, line: 521, column: 9)
!3543 = !DILocation(line: 521, column: 38, scope: !3542)
!3544 = !DILocation(line: 521, column: 9, scope: !3512)
!3545 = !DILocation(line: 522, column: 9, scope: !3546)
!3546 = distinct !DILexicalBlock(scope: !3542, file: !2664, line: 521, column: 48)
!3547 = !DILocation(line: 523, column: 9, scope: !3546)
!3548 = !DILocation(line: 524, column: 38, scope: !3546)
!3549 = !DILocation(line: 525, column: 5, scope: !3546)
!3550 = !DILocation(line: 526, column: 5, scope: !3512)
!3551 = !DILocation(line: 528, column: 23, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3512, file: !2664, line: 528, column: 8)
!3553 = !DILocation(line: 528, column: 41, scope: !3552)
!3554 = !DILocation(line: 528, column: 8, scope: !3512)
!3555 = !DILocation(line: 529, column: 51, scope: !3556)
!3556 = distinct !DILexicalBlock(scope: !3552, file: !2664, line: 528, column: 51)
!3557 = !DILocation(line: 529, column: 24, scope: !3556)
!3558 = !DILocation(line: 530, column: 5, scope: !3556)
!3559 = !DILocation(line: 0, scope: !3552)
!3560 = !DILocation(line: 534, column: 34, scope: !3512)
!3561 = !DILocation(line: 535, column: 39, scope: !3512)
!3562 = !DILocation(line: 537, column: 49, scope: !3512)
!3563 = !DILocation(line: 538, column: 80, scope: !3512)
!3564 = !DILocation(line: 538, column: 33, scope: !3512)
!3565 = !DILocation(line: 538, column: 49, scope: !3512)
!3566 = !DILocation(line: 539, column: 50, scope: !3512)
!3567 = !DILocation(line: 539, column: 61, scope: !3512)
!3568 = !DILocation(line: 540, column: 50, scope: !3512)
!3569 = !DILocation(line: 540, column: 61, scope: !3512)
!3570 = !DILocation(line: 542, column: 5, scope: !3512)
!3571 = !DILocation(line: 546, column: 30, scope: !3512)
!3572 = !DILocation(line: 548, column: 5, scope: !3512)
!3573 = !DILocation(line: 550, column: 5, scope: !3512)
!3574 = !DILocation(line: 551, column: 1, scope: !3512)
!3575 = distinct !DISubprogram(name: "hal_gpt_sw_stop_timer_ms", scope: !2664, file: !2664, line: 553, type: !3329, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3576)
!3576 = !{!3577, !3578, !3579, !3580}
!3577 = !DILocalVariable(name: "handle", arg: 1, scope: !3575, file: !2664, line: 553, type: !61)
!3578 = !DILocalVariable(name: "current_time", scope: !3575, file: !2664, line: 555, type: !61)
!3579 = !DILocalVariable(name: "mask", scope: !3575, file: !2664, line: 556, type: !61)
!3580 = !DILocalVariable(name: "timer", scope: !3575, file: !2664, line: 557, type: !61)
!3581 = !DILocation(line: 0, scope: !3575)
!3582 = !DILocation(line: 559, column: 17, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3575, file: !2664, line: 559, column: 9)
!3584 = !DILocation(line: 559, column: 37, scope: !3583)
!3585 = !DILocation(line: 559, column: 9, scope: !3575)
!3586 = !DILocation(line: 563, column: 20, scope: !3575)
!3587 = !DILocation(line: 565, column: 37, scope: !3588)
!3588 = distinct !DILexicalBlock(scope: !3575, file: !2664, line: 565, column: 9)
!3589 = !DILocation(line: 565, column: 48, scope: !3588)
!3590 = !DILocation(line: 565, column: 9, scope: !3575)
!3591 = !DILocation(line: 569, column: 37, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3575, file: !2664, line: 569, column: 9)
!3593 = !DILocation(line: 569, column: 45, scope: !3592)
!3594 = !DILocation(line: 569, column: 9, scope: !3575)
!3595 = !DILocation(line: 574, column: 12, scope: !3575)
!3596 = !DILocation(line: 577, column: 30, scope: !3575)
!3597 = !DILocation(line: 578, column: 5, scope: !3575)
!3598 = !DILocation(line: 579, column: 30, scope: !3575)
!3599 = !DILocation(line: 581, column: 23, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3575, file: !2664, line: 581, column: 8)
!3601 = !DILocation(line: 581, column: 41, scope: !3600)
!3602 = !DILocation(line: 581, column: 8, scope: !3575)
!3603 = !DILocation(line: 582, column: 51, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3600, file: !2664, line: 581, column: 51)
!3605 = !DILocation(line: 582, column: 24, scope: !3604)
!3606 = !DILocation(line: 583, column: 5, scope: !3604)
!3607 = !DILocation(line: 0, scope: !3600)
!3608 = !DILocation(line: 587, column: 34, scope: !3575)
!3609 = !DILocation(line: 588, column: 39, scope: !3575)
!3610 = !DILocation(line: 590, column: 44, scope: !3575)
!3611 = !DILocation(line: 592, column: 24, scope: !3612)
!3612 = distinct !DILexicalBlock(scope: !3575, file: !2664, line: 592, column: 9)
!3613 = !DILocation(line: 592, column: 44, scope: !3612)
!3614 = !DILocation(line: 592, column: 9, scope: !3575)
!3615 = !DILocation(line: 593, column: 9, scope: !3616)
!3616 = distinct !DILexicalBlock(scope: !3612, file: !2664, line: 592, column: 50)
!3617 = !DILocation(line: 594, column: 5, scope: !3616)
!3618 = !DILocation(line: 598, column: 30, scope: !3575)
!3619 = !DILocation(line: 599, column: 5, scope: !3575)
!3620 = !DILocation(line: 601, column: 5, scope: !3575)
!3621 = !DILocation(line: 603, column: 1, scope: !3575)
!3622 = distinct !DISubprogram(name: "hal_gpt_sw_get_remaining_time_ms", scope: !2664, file: !2664, line: 605, type: !3623, scopeLine: 606, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2663, retainedNodes: !3625)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{!3107, !61, !1153}
!3625 = !{!3626, !3627, !3628, !3629, !3630}
!3626 = !DILocalVariable(name: "handle", arg: 1, scope: !3622, file: !2664, line: 605, type: !61)
!3627 = !DILocalVariable(name: "remaing_time", arg: 2, scope: !3622, file: !2664, line: 605, type: !1153)
!3628 = !DILocalVariable(name: "current_time", scope: !3622, file: !2664, line: 607, type: !61)
!3629 = !DILocalVariable(name: "mask", scope: !3622, file: !2664, line: 608, type: !61)
!3630 = !DILocalVariable(name: "timer", scope: !3622, file: !2664, line: 609, type: !61)
!3631 = !DILocation(line: 0, scope: !3622)
!3632 = !DILocation(line: 611, column: 17, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3622, file: !2664, line: 611, column: 9)
!3634 = !DILocation(line: 611, column: 37, scope: !3633)
!3635 = !DILocation(line: 611, column: 9, scope: !3622)
!3636 = !DILocation(line: 615, column: 20, scope: !3622)
!3637 = !DILocation(line: 617, column: 37, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3622, file: !2664, line: 617, column: 9)
!3639 = !DILocation(line: 617, column: 45, scope: !3638)
!3640 = !DILocation(line: 617, column: 9, scope: !3622)
!3641 = !DILocation(line: 622, column: 12, scope: !3622)
!3642 = !DILocation(line: 624, column: 35, scope: !3622)
!3643 = !DILocation(line: 624, column: 51, scope: !3622)
!3644 = !DILocation(line: 624, column: 76, scope: !3622)
!3645 = !DILocation(line: 624, column: 49, scope: !3622)
!3646 = !DILocation(line: 626, column: 37, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3622, file: !2664, line: 626, column: 9)
!3648 = !DILocation(line: 626, column: 9, scope: !3622)
!3649 = !DILocation(line: 0, scope: !3647)
!3650 = !DILocation(line: 632, column: 5, scope: !3622)
!3651 = !DILocation(line: 634, column: 5, scope: !3622)
!3652 = !DILocation(line: 636, column: 1, scope: !3622)
!3653 = distinct !DISubprogram(name: "gpt_calibrate_algorithm", scope: !95, file: !95, line: 56, type: !3654, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3656)
!3654 = !DISubroutineType(types: !3655)
!3655 = !{!61, !61, !61, !61}
!3656 = !{!3657, !3658, !3659, !3660, !3662, !3663}
!3657 = !DILocalVariable(name: "mul1", arg: 1, scope: !3653, file: !95, line: 56, type: !61)
!3658 = !DILocalVariable(name: "mul2", arg: 2, scope: !3653, file: !95, line: 56, type: !61)
!3659 = !DILocalVariable(name: "div", arg: 3, scope: !3653, file: !95, line: 56, type: !61)
!3660 = !DILocalVariable(name: "data1", scope: !3653, file: !95, line: 58, type: !3661)
!3661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 64, elements: !465)
!3662 = !DILocalVariable(name: "data2", scope: !3653, file: !95, line: 59, type: !3661)
!3663 = !DILocalVariable(name: "result", scope: !3653, file: !95, line: 60, type: !3661)
!3664 = !DILocation(line: 0, scope: !3653)
!3665 = !DILocation(line: 63, column: 22, scope: !3653)
!3666 = !DILocation(line: 63, column: 32, scope: !3653)
!3667 = !DILocation(line: 64, column: 23, scope: !3653)
!3668 = !DILocation(line: 64, column: 40, scope: !3653)
!3669 = !DILocation(line: 66, column: 27, scope: !3653)
!3670 = !DILocation(line: 67, column: 27, scope: !3653)
!3671 = !DILocation(line: 67, column: 44, scope: !3653)
!3672 = !DILocation(line: 69, column: 26, scope: !3653)
!3673 = !DILocation(line: 70, column: 36, scope: !3653)
!3674 = !DILocation(line: 70, column: 43, scope: !3653)
!3675 = !DILocation(line: 70, column: 55, scope: !3653)
!3676 = !DILocation(line: 72, column: 34, scope: !3653)
!3677 = !DILocation(line: 72, column: 41, scope: !3653)
!3678 = !DILocation(line: 72, column: 5, scope: !3653)
!3679 = distinct !DISubprogram(name: "gpt_current_count", scope: !95, file: !95, line: 75, type: !3680, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3682)
!3680 = !DISubroutineType(types: !3681)
!3681 = !{!61, !264}
!3682 = !{!3683}
!3683 = !DILocalVariable(name: "gpt", arg: 1, scope: !3679, file: !95, line: 75, type: !264)
!3684 = !DILocation(line: 0, scope: !3679)
!3685 = !DILocation(line: 77, column: 17, scope: !3679)
!3686 = !DILocation(line: 77, column: 5, scope: !3679)
!3687 = distinct !DISubprogram(name: "gpt_convert_ms_to_32k_count", scope: !95, file: !95, line: 81, type: !3688, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3690)
!3688 = !DISubroutineType(types: !3689)
!3689 = !{!61, !61}
!3690 = !{!3691}
!3691 = !DILocalVariable(name: "ms", arg: 1, scope: !3687, file: !95, line: 81, type: !61)
!3692 = !DILocation(line: 0, scope: !3687)
!3693 = !DILocation(line: 83, column: 27, scope: !3687)
!3694 = !DILocation(line: 83, column: 37, scope: !3687)
!3695 = !DILocation(line: 83, column: 43, scope: !3687)
!3696 = !DILocation(line: 83, column: 32, scope: !3687)
!3697 = !DILocation(line: 83, column: 53, scope: !3687)
!3698 = !DILocation(line: 83, column: 59, scope: !3687)
!3699 = !DILocation(line: 83, column: 48, scope: !3687)
!3700 = !DILocation(line: 83, column: 70, scope: !3687)
!3701 = !DILocation(line: 83, column: 76, scope: !3687)
!3702 = !DILocation(line: 83, column: 65, scope: !3687)
!3703 = !DILocation(line: 83, column: 5, scope: !3687)
!3704 = !DILocation(line: 90, column: 9, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !290, file: !95, line: 90, column: 9)
!3706 = !DILocation(line: 90, column: 9, scope: !290)
!3707 = !DILocation(line: 91, column: 13, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3709, file: !95, line: 91, column: 13)
!3709 = distinct !DILexicalBlock(scope: !3705, file: !95, line: 90, column: 24)
!3710 = !DILocation(line: 91, column: 13, scope: !3709)
!3711 = !DILocation(line: 92, column: 32, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3708, file: !95, line: 91, column: 41)
!3713 = !DILocation(line: 92, column: 30, scope: !3712)
!3714 = !DILocation(line: 93, column: 41, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3712, file: !95, line: 93, column: 17)
!3716 = !DILocation(line: 0, scope: !3708)
!3717 = !DILocation(line: 105, column: 1, scope: !290)
!3718 = distinct !DISubprogram(name: "gpt_open_clock_source", scope: !95, file: !95, line: 107, type: !291, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3719 = !DILocation(line: 109, column: 9, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3718, file: !95, line: 109, column: 9)
!3721 = !DILocation(line: 109, column: 9, scope: !3718)
!3722 = !DILocation(line: 110, column: 9, scope: !3723)
!3723 = distinct !DILexicalBlock(scope: !3720, file: !95, line: 109, column: 61)
!3724 = !DILocation(line: 111, column: 5, scope: !3723)
!3725 = !DILocation(line: 112, column: 1, scope: !3718)
!3726 = distinct !DISubprogram(name: "gpt_clock_calibrate_us_to_count", scope: !95, file: !95, line: 114, type: !3688, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3727)
!3727 = !{!3728}
!3728 = !DILocalVariable(name: "time_us", arg: 1, scope: !3726, file: !95, line: 114, type: !61)
!3729 = !DILocation(line: 0, scope: !3726)
!3730 = !DILocation(line: 116, column: 5, scope: !3726)
!3731 = !DILocation(line: 118, column: 9, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3726, file: !95, line: 118, column: 9)
!3733 = !DILocation(line: 118, column: 9, scope: !3726)
!3734 = !DILocation(line: 120, column: 49, scope: !3735)
!3735 = distinct !DILexicalBlock(scope: !3732, file: !95, line: 118, column: 37)
!3736 = !DILocation(line: 120, column: 16, scope: !3735)
!3737 = !DILocation(line: 120, column: 9, scope: !3735)
!3738 = !DILocation(line: 0, scope: !3732)
!3739 = !DILocation(line: 125, column: 1, scope: !3726)
!3740 = distinct !DISubprogram(name: "gpt_clock_calibrate_count_to_us", scope: !95, file: !95, line: 127, type: !3688, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3741)
!3741 = !{!3742}
!3742 = !DILocalVariable(name: "count", arg: 1, scope: !3740, file: !95, line: 127, type: !61)
!3743 = !DILocation(line: 0, scope: !3740)
!3744 = !DILocation(line: 129, column: 5, scope: !3740)
!3745 = !DILocation(line: 131, column: 9, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3740, file: !95, line: 131, column: 9)
!3747 = !DILocation(line: 131, column: 9, scope: !3740)
!3748 = !DILocation(line: 133, column: 69, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3746, file: !95, line: 131, column: 37)
!3750 = !DILocation(line: 133, column: 16, scope: !3749)
!3751 = !DILocation(line: 133, column: 9, scope: !3749)
!3752 = !DILocation(line: 0, scope: !3746)
!3753 = !DILocation(line: 138, column: 1, scope: !3740)
!3754 = distinct !DISubprogram(name: "gpt_start_free_run_timer", scope: !95, file: !95, line: 141, type: !3755, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3757)
!3755 = !DISubroutineType(types: !3756)
!3756 = !{null, !264, !61, !61}
!3757 = !{!3758, !3759, !3760}
!3758 = !DILocalVariable(name: "gpt", arg: 1, scope: !3754, file: !95, line: 141, type: !264)
!3759 = !DILocalVariable(name: "clock_source", arg: 2, scope: !3754, file: !95, line: 141, type: !61)
!3760 = !DILocalVariable(name: "divide", arg: 3, scope: !3754, file: !95, line: 141, type: !61)
!3761 = !DILocation(line: 0, scope: !3754)
!3762 = !DILocation(line: 143, column: 5, scope: !3754)
!3763 = !DILocation(line: 145, column: 33, scope: !3754)
!3764 = !DILocation(line: 145, column: 10, scope: !3754)
!3765 = !DILocation(line: 145, column: 18, scope: !3754)
!3766 = !DILocation(line: 148, column: 10, scope: !3754)
!3767 = !DILocation(line: 148, column: 18, scope: !3754)
!3768 = !DILocation(line: 149, column: 1, scope: !3754)
!3769 = distinct !DISubprogram(name: "gpt_delay_time", scope: !95, file: !95, line: 151, type: !3770, scopeLine: 152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3772)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{null, !264, !772}
!3772 = !{!3773, !3774, !3775, !3776}
!3773 = !DILocalVariable(name: "gpt", arg: 1, scope: !3769, file: !95, line: 151, type: !264)
!3774 = !DILocalVariable(name: "count", arg: 2, scope: !3769, file: !95, line: 151, type: !772)
!3775 = !DILocalVariable(name: "end_count", scope: !3769, file: !95, line: 153, type: !61)
!3776 = !DILocalVariable(name: "current", scope: !3769, file: !95, line: 153, type: !61)
!3777 = !DILocation(line: 0, scope: !3769)
!3778 = !DILocation(line: 155, column: 17, scope: !3769)
!3779 = !DILocation(line: 156, column: 25, scope: !3769)
!3780 = !DILocation(line: 156, column: 33, scope: !3769)
!3781 = !DILocation(line: 159, column: 19, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3769, file: !95, line: 159, column: 9)
!3783 = !DILocation(line: 159, column: 9, scope: !3769)
!3784 = !DILocation(line: 160, column: 16, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3782, file: !95, line: 159, column: 30)
!3786 = !DILocation(line: 160, column: 39, scope: !3785)
!3787 = !DILocation(line: 160, column: 9, scope: !3785)
!3788 = distinct !{!3788, !3787, !3789}
!3789 = !DILocation(line: 160, column: 51, scope: !3785)
!3790 = !DILocation(line: 162, column: 16, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3782, file: !95, line: 161, column: 12)
!3792 = !DILocation(line: 162, column: 39, scope: !3791)
!3793 = !DILocation(line: 162, column: 9, scope: !3791)
!3794 = distinct !{!3794, !3793, !3795}
!3795 = !DILocation(line: 162, column: 50, scope: !3791)
!3796 = !DILocation(line: 163, column: 16, scope: !3791)
!3797 = !DILocation(line: 163, column: 39, scope: !3791)
!3798 = !DILocation(line: 163, column: 9, scope: !3791)
!3799 = distinct !{!3799, !3798, !3800}
!3800 = !DILocation(line: 163, column: 51, scope: !3791)
!3801 = !DILocation(line: 165, column: 1, scope: !3769)
!3802 = distinct !DISubprogram(name: "gpt_reset_default_timer", scope: !95, file: !95, line: 166, type: !3803, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3805)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{null, !264}
!3805 = !{!3806}
!3806 = !DILocalVariable(name: "gpt", arg: 1, scope: !3802, file: !95, line: 166, type: !264)
!3807 = !DILocation(line: 0, scope: !3802)
!3808 = !DILocation(line: 168, column: 10, scope: !3802)
!3809 = !DILocation(line: 168, column: 22, scope: !3802)
!3810 = !DILocation(line: 169, column: 10, scope: !3802)
!3811 = !DILocation(line: 169, column: 22, scope: !3802)
!3812 = !DILocation(line: 170, column: 21, scope: !3802)
!3813 = !DILocation(line: 171, column: 5, scope: !3802)
!3814 = !DILocation(line: 171, column: 16, scope: !3802)
!3815 = distinct !{!3815, !3813, !3816}
!3816 = !DILocation(line: 171, column: 26, scope: !3802)
!3817 = !DILocation(line: 172, column: 10, scope: !3802)
!3818 = !DILocation(line: 172, column: 22, scope: !3802)
!3819 = !DILocation(line: 173, column: 10, scope: !3802)
!3820 = !DILocation(line: 173, column: 22, scope: !3802)
!3821 = !DILocation(line: 174, column: 10, scope: !3802)
!3822 = !DILocation(line: 174, column: 22, scope: !3802)
!3823 = !DILocation(line: 176, column: 13, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3802, file: !95, line: 176, column: 9)
!3825 = !DILocation(line: 176, column: 9, scope: !3802)
!3826 = !DILocation(line: 177, column: 27, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3824, file: !95, line: 176, column: 22)
!3828 = !DILocation(line: 178, column: 5, scope: !3827)
!3829 = !DILocation(line: 179, column: 1, scope: !3802)
!3830 = distinct !DISubprogram(name: "gpt_save_and_mask_interrupt", scope: !95, file: !95, line: 181, type: !3680, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3831)
!3831 = !{!3832, !3833}
!3832 = !DILocalVariable(name: "gpt", arg: 1, scope: !3830, file: !95, line: 181, type: !264)
!3833 = !DILocalVariable(name: "mask", scope: !3830, file: !95, line: 183, type: !60)
!3834 = !DILocation(line: 0, scope: !3830)
!3835 = !DILocation(line: 183, column: 5, scope: !3830)
!3836 = !DILocation(line: 183, column: 23, scope: !3830)
!3837 = !DILocation(line: 185, column: 17, scope: !3830)
!3838 = !DILocation(line: 185, column: 10, scope: !3830)
!3839 = !DILocation(line: 187, column: 22, scope: !3830)
!3840 = !DILocation(line: 189, column: 12, scope: !3830)
!3841 = !DILocation(line: 190, column: 1, scope: !3830)
!3842 = !DILocation(line: 189, column: 5, scope: !3830)
!3843 = distinct !DISubprogram(name: "gpt_restore_interrupt", scope: !95, file: !95, line: 192, type: !3844, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3846)
!3844 = !DISubroutineType(types: !3845)
!3845 = !{null, !264, !61}
!3846 = !{!3847, !3848}
!3847 = !DILocalVariable(name: "gpt", arg: 1, scope: !3843, file: !95, line: 192, type: !264)
!3848 = !DILocalVariable(name: "mask", arg: 2, scope: !3843, file: !95, line: 192, type: !61)
!3849 = !DILocation(line: 0, scope: !3843)
!3850 = !DILocation(line: 194, column: 10, scope: !3843)
!3851 = !DILocation(line: 194, column: 21, scope: !3843)
!3852 = !DILocation(line: 195, column: 1, scope: !3843)
!3853 = distinct !DISubprogram(name: "gpt_interrupt_handler", scope: !95, file: !95, line: 197, type: !1103, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3854)
!3854 = !{!3855, !3856, !3857, !3858, !3859}
!3855 = !DILocalVariable(name: "irq_number", arg: 1, scope: !3853, file: !95, line: 197, type: !862)
!3856 = !DILocalVariable(name: "i", scope: !3853, file: !95, line: 199, type: !61)
!3857 = !DILocalVariable(name: "mask", scope: !3853, file: !95, line: 200, type: !60)
!3858 = !DILocalVariable(name: "state", scope: !3853, file: !95, line: 201, type: !60)
!3859 = !DILocalVariable(name: "enable", scope: !3853, file: !95, line: 202, type: !60)
!3860 = !DILocation(line: 0, scope: !3853)
!3861 = !DILocation(line: 200, column: 5, scope: !3853)
!3862 = !DILocation(line: 200, column: 23, scope: !3853)
!3863 = !DILocation(line: 201, column: 5, scope: !3853)
!3864 = !DILocation(line: 201, column: 23, scope: !3853)
!3865 = !DILocation(line: 202, column: 5, scope: !3853)
!3866 = !DILocation(line: 202, column: 23, scope: !3853)
!3867 = !DILocation(line: 207, column: 5, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3853, file: !95, line: 207, column: 5)
!3869 = !DILocation(line: 209, column: 18, scope: !3870)
!3870 = distinct !DILexicalBlock(scope: !3871, file: !95, line: 207, column: 44)
!3871 = distinct !DILexicalBlock(scope: !3868, file: !95, line: 207, column: 5)
!3872 = !DILocation(line: 209, column: 29, scope: !3870)
!3873 = !DILocation(line: 209, column: 16, scope: !3870)
!3874 = !DILocation(line: 210, column: 29, scope: !3870)
!3875 = !DILocation(line: 210, column: 16, scope: !3870)
!3876 = !DILocation(line: 212, column: 16, scope: !3870)
!3877 = !DILocation(line: 212, column: 14, scope: !3870)
!3878 = !DILocation(line: 214, column: 9, scope: !3870)
!3879 = !DILocation(line: 214, column: 20, scope: !3870)
!3880 = !DILocation(line: 214, column: 32, scope: !3870)
!3881 = !DILocation(line: 216, column: 14, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3870, file: !95, line: 216, column: 13)
!3883 = !DILocation(line: 216, column: 20, scope: !3882)
!3884 = !DILocation(line: 216, column: 40, scope: !3882)
!3885 = !DILocation(line: 216, column: 44, scope: !3882)
!3886 = !DILocation(line: 216, column: 51, scope: !3882)
!3887 = !DILocation(line: 216, column: 13, scope: !3870)
!3888 = !DILocation(line: 224, column: 51, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3890, file: !95, line: 224, column: 17)
!3890 = distinct !DILexicalBlock(scope: !3882, file: !95, line: 216, column: 70)
!3891 = !DILocation(line: 224, column: 60, scope: !3889)
!3892 = !DILocation(line: 224, column: 17, scope: !3890)
!3893 = !DILocation(line: 225, column: 94, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3889, file: !95, line: 224, column: 69)
!3895 = !DILocation(line: 225, column: 17, scope: !3894)
!3896 = !DILocation(line: 226, column: 13, scope: !3894)
!3897 = !DILocation(line: 229, column: 31, scope: !3870)
!3898 = !DILocation(line: 229, column: 42, scope: !3870)
!3899 = !DILocation(line: 229, column: 9, scope: !3870)
!3900 = !DILocation(line: 207, column: 40, scope: !3871)
!3901 = !DILocation(line: 207, column: 19, scope: !3871)
!3902 = distinct !{!3902, !3867, !3903}
!3903 = !DILocation(line: 231, column: 5, scope: !3868)
!3904 = !DILocation(line: 233, column: 1, scope: !3853)
!3905 = distinct !DISubprogram(name: "gpt_nvic_register", scope: !95, file: !95, line: 236, type: !291, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !293)
!3906 = !DILocation(line: 238, column: 5, scope: !3905)
!3907 = !DILocation(line: 239, column: 5, scope: !3905)
!3908 = !DILocation(line: 240, column: 5, scope: !3905)
!3909 = !DILocation(line: 241, column: 1, scope: !3905)
!3910 = distinct !DISubprogram(name: "gpt_sw_get_current_time_ms", scope: !95, file: !95, line: 242, type: !3680, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3911)
!3911 = !{!3912, !3913, !3914, !3915, !3916}
!3912 = !DILocalVariable(name: "gpt", arg: 1, scope: !3910, file: !95, line: 242, type: !264)
!3913 = !DILocalVariable(name: "time", scope: !3910, file: !95, line: 244, type: !60)
!3914 = !DILocalVariable(name: "count", scope: !3910, file: !95, line: 245, type: !61)
!3915 = !DILocalVariable(name: "time_s", scope: !3910, file: !95, line: 245, type: !61)
!3916 = !DILocalVariable(name: "time_ms", scope: !3910, file: !95, line: 245, type: !61)
!3917 = !DILocation(line: 0, scope: !3910)
!3918 = !DILocation(line: 244, column: 5, scope: !3910)
!3919 = !DILocation(line: 244, column: 23, scope: !3910)
!3920 = !DILocation(line: 247, column: 13, scope: !3910)
!3921 = !DILocation(line: 248, column: 20, scope: !3910)
!3922 = !DILocation(line: 249, column: 23, scope: !3910)
!3923 = !DILocation(line: 249, column: 32, scope: !3910)
!3924 = !DILocation(line: 249, column: 39, scope: !3910)
!3925 = !DILocation(line: 249, column: 48, scope: !3910)
!3926 = !DILocation(line: 250, column: 19, scope: !3910)
!3927 = !DILocation(line: 250, column: 26, scope: !3910)
!3928 = !DILocation(line: 250, column: 10, scope: !3910)
!3929 = !DILocation(line: 253, column: 5, scope: !3910)
!3930 = !DILocation(line: 253, column: 30, scope: !3910)
!3931 = !DILocation(line: 253, column: 38, scope: !3910)
!3932 = !DILocation(line: 254, column: 5, scope: !3910)
!3933 = !DILocation(line: 254, column: 36, scope: !3910)
!3934 = distinct !{!3934, !3932, !3935}
!3935 = !DILocation(line: 254, column: 46, scope: !3910)
!3936 = !DILocation(line: 255, column: 12, scope: !3910)
!3937 = !DILocation(line: 256, column: 1, scope: !3910)
!3938 = !DILocation(line: 255, column: 5, scope: !3910)
!3939 = distinct !DISubprogram(name: "gpt_sw_get_free_timer", scope: !95, file: !95, line: 258, type: !3940, scopeLine: 259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3941)
!3940 = !DISubroutineType(types: !987)
!3941 = !{!3942}
!3942 = !DILocalVariable(name: "i", scope: !3939, file: !95, line: 260, type: !61)
!3943 = !DILocation(line: 0, scope: !3939)
!3944 = !DILocation(line: 262, column: 5, scope: !3945)
!3945 = distinct !DILexicalBlock(scope: !3939, file: !95, line: 262, column: 5)
!3946 = !DILocation(line: 263, column: 37, scope: !3947)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !95, line: 263, column: 13)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !95, line: 262, column: 45)
!3949 = distinct !DILexicalBlock(scope: !3945, file: !95, line: 262, column: 5)
!3950 = !DILocation(line: 263, column: 45, scope: !3947)
!3951 = !DILocation(line: 263, column: 13, scope: !3948)
!3952 = !DILocation(line: 262, column: 41, scope: !3949)
!3953 = !DILocation(line: 262, column: 19, scope: !3949)
!3954 = distinct !{!3954, !3944, !3955}
!3955 = !DILocation(line: 266, column: 5, scope: !3945)
!3956 = !DILocation(line: 269, column: 1, scope: !3939)
!3957 = distinct !DISubprogram(name: "gpt_sw_start_timer", scope: !95, file: !95, line: 271, type: !291, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3958)
!3958 = !{!3959, !3960}
!3959 = !DILocalVariable(name: "minimum_time", scope: !3957, file: !95, line: 273, type: !61)
!3960 = !DILocalVariable(name: "current_timer", scope: !3957, file: !95, line: 273, type: !61)
!3961 = !DILocation(line: 273, column: 5, scope: !3957)
!3962 = !DILocation(line: 275, column: 24, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3957, file: !95, line: 275, column: 9)
!3964 = !DILocation(line: 275, column: 9, scope: !3957)
!3965 = !DILocation(line: 0, scope: !3957)
!3966 = !DILocation(line: 279, column: 5, scope: !3957)
!3967 = !DILocation(line: 282, column: 56, scope: !3957)
!3968 = !DILocation(line: 282, column: 39, scope: !3957)
!3969 = !DILocation(line: 284, column: 30, scope: !3957)
!3970 = !DILocation(line: 285, column: 45, scope: !3957)
!3971 = !DILocation(line: 285, column: 5, scope: !3957)
!3972 = !DILocation(line: 286, column: 30, scope: !3957)
!3973 = !DILocation(line: 287, column: 1, scope: !3957)
!3974 = distinct !DISubprogram(name: "gpt_sw_get_minimum_left_time_ms", scope: !95, file: !95, line: 308, type: !3975, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !3977)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{null, !1153, !1153}
!3977 = !{!3978, !3979, !3980, !3981, !3982}
!3978 = !DILocalVariable(name: "minimum_time", arg: 1, scope: !3974, file: !95, line: 308, type: !1153)
!3979 = !DILocalVariable(name: "number", arg: 2, scope: !3974, file: !95, line: 308, type: !1153)
!3980 = !DILocalVariable(name: "i", scope: !3974, file: !95, line: 310, type: !61)
!3981 = !DILocalVariable(name: "minimum", scope: !3974, file: !95, line: 311, type: !61)
!3982 = !DILocalVariable(name: "data", scope: !3974, file: !95, line: 312, type: !61)
!3983 = !DILocation(line: 0, scope: !3974)
!3984 = !DILocation(line: 314, column: 5, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3974, file: !95, line: 314, column: 5)
!3986 = !DILocation(line: 315, column: 37, scope: !3987)
!3987 = distinct !DILexicalBlock(scope: !3988, file: !95, line: 315, column: 13)
!3988 = distinct !DILexicalBlock(scope: !3989, file: !95, line: 314, column: 45)
!3989 = distinct !DILexicalBlock(scope: !3985, file: !95, line: 314, column: 5)
!3990 = !DILocation(line: 315, column: 13, scope: !3988)
!3991 = !DILocation(line: 316, column: 20, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3987, file: !95, line: 315, column: 57)
!3993 = !DILocation(line: 318, column: 22, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3992, file: !95, line: 318, column: 17)
!3995 = !DILocation(line: 318, column: 17, scope: !3992)
!3996 = !DILocation(line: 320, column: 25, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3994, file: !95, line: 318, column: 33)
!3998 = !DILocation(line: 321, column: 13, scope: !3997)
!3999 = !DILocation(line: 314, column: 41, scope: !3989)
!4000 = !DILocation(line: 314, column: 19, scope: !3989)
!4001 = distinct !{!4001, !3984, !4002}
!4002 = !DILocation(line: 323, column: 5, scope: !3985)
!4003 = !DILocation(line: 325, column: 19, scope: !3974)
!4004 = !DILocation(line: 326, column: 1, scope: !3974)
!4005 = distinct !DISubprogram(name: "gpt_sw_absolute_value", scope: !95, file: !95, line: 289, type: !3688, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4006)
!4006 = !{!4007, !4008, !4009, !4010}
!4007 = !DILocalVariable(name: "timer_number", arg: 1, scope: !4005, file: !95, line: 289, type: !61)
!4008 = !DILocalVariable(name: "time_out_delta", scope: !4005, file: !95, line: 291, type: !61)
!4009 = !DILocalVariable(name: "current_delta", scope: !4005, file: !95, line: 292, type: !61)
!4010 = !DILocalVariable(name: "ret_value", scope: !4005, file: !95, line: 293, type: !61)
!4011 = !DILocation(line: 0, scope: !4005)
!4012 = !DILocation(line: 295, column: 22, scope: !4005)
!4013 = !DILocation(line: 296, column: 22, scope: !4005)
!4014 = !DILocation(line: 298, column: 24, scope: !4015)
!4015 = distinct !DILexicalBlock(scope: !4005, file: !95, line: 298, column: 9)
!4016 = !DILocation(line: 298, column: 9, scope: !4005)
!4017 = !DILocation(line: 306, column: 5, scope: !4005)
!4018 = distinct !DISubprogram(name: "gpt_sw_handler", scope: !95, file: !95, line: 329, type: !309, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !94, retainedNodes: !4019)
!4019 = !{!4020, !4021, !4022, !4023}
!4020 = !DILocalVariable(name: "parameter", arg: 1, scope: !4018, file: !95, line: 329, type: !88)
!4021 = !DILocalVariable(name: "i", scope: !4018, file: !95, line: 331, type: !61)
!4022 = !DILocalVariable(name: "time_ms", scope: !4018, file: !95, line: 332, type: !60)
!4023 = !DILocalVariable(name: "data", scope: !4018, file: !95, line: 333, type: !60)
!4024 = !DILocation(line: 0, scope: !4018)
!4025 = !DILocation(line: 332, column: 5, scope: !4018)
!4026 = !DILocation(line: 332, column: 23, scope: !4018)
!4027 = !DILocation(line: 333, column: 5, scope: !4018)
!4028 = !DILocation(line: 333, column: 23, scope: !4018)
!4029 = !DILocation(line: 336, column: 24, scope: !4030)
!4030 = distinct !DILexicalBlock(scope: !4018, file: !95, line: 336, column: 9)
!4031 = !DILocation(line: 336, column: 41, scope: !4030)
!4032 = !DILocation(line: 336, column: 9, scope: !4018)
!4033 = !DILocation(line: 338, column: 34, scope: !4034)
!4034 = distinct !DILexicalBlock(scope: !4030, file: !95, line: 336, column: 47)
!4035 = !DILocation(line: 339, column: 9, scope: !4034)
!4036 = !DILocation(line: 340, column: 34, scope: !4034)
!4037 = !DILocation(line: 342, column: 46, scope: !4034)
!4038 = !DILocation(line: 342, column: 19, scope: !4034)
!4039 = !DILocation(line: 342, column: 17, scope: !4034)
!4040 = !DILocation(line: 344, column: 41, scope: !4034)
!4041 = !DILocation(line: 344, column: 38, scope: !4034)
!4042 = !DILocation(line: 345, column: 42, scope: !4034)
!4043 = !DILocation(line: 347, column: 9, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4034, file: !95, line: 347, column: 9)
!4045 = !DILocation(line: 348, column: 41, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !95, line: 348, column: 17)
!4047 = distinct !DILexicalBlock(scope: !4048, file: !95, line: 347, column: 49)
!4048 = distinct !DILexicalBlock(scope: !4044, file: !95, line: 347, column: 9)
!4049 = !DILocation(line: 348, column: 17, scope: !4047)
!4050 = !DILocation(line: 350, column: 24, scope: !4051)
!4051 = distinct !DILexicalBlock(scope: !4046, file: !95, line: 348, column: 61)
!4052 = !DILocation(line: 350, column: 22, scope: !4051)
!4053 = !DILocation(line: 352, column: 21, scope: !4054)
!4054 = distinct !DILexicalBlock(scope: !4051, file: !95, line: 352, column: 21)
!4055 = !DILocation(line: 352, column: 26, scope: !4054)
!4056 = !DILocation(line: 352, column: 21, scope: !4051)
!4057 = !DILocation(line: 353, column: 56, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !4054, file: !95, line: 352, column: 32)
!4059 = !DILocation(line: 354, column: 55, scope: !4058)
!4060 = !DILocation(line: 356, column: 62, scope: !4058)
!4061 = !DILocation(line: 356, column: 112, scope: !4058)
!4062 = !DILocation(line: 356, column: 21, scope: !4058)
!4063 = !DILocation(line: 357, column: 17, scope: !4058)
!4064 = !DILocation(line: 347, column: 45, scope: !4048)
!4065 = !DILocation(line: 347, column: 23, scope: !4048)
!4066 = distinct !{!4066, !4043, !4067}
!4067 = !DILocation(line: 360, column: 9, scope: !4044)
!4068 = !DILocation(line: 362, column: 42, scope: !4034)
!4069 = !DILocation(line: 364, column: 28, scope: !4070)
!4070 = distinct !DILexicalBlock(scope: !4034, file: !95, line: 364, column: 13)
!4071 = !DILocation(line: 364, column: 48, scope: !4070)
!4072 = !DILocation(line: 364, column: 13, scope: !4034)
!4073 = !DILocation(line: 365, column: 13, scope: !4074)
!4074 = distinct !DILexicalBlock(scope: !4070, file: !95, line: 364, column: 54)
!4075 = !DILocation(line: 366, column: 9, scope: !4074)
!4076 = !DILocation(line: 369, column: 1, scope: !4018)
!4077 = distinct !DISubprogram(name: "is_pin_with_pullsel", scope: !346, file: !346, line: 50, type: !4078, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4081)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{!61, !4080}
!4080 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_pin_t", file: !98, line: 390, baseType: !348)
!4081 = !{!4082, !4083, !4084}
!4082 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4077, file: !346, line: 50, type: !4080)
!4083 = !DILocalVariable(name: "i", scope: !4077, file: !346, line: 52, type: !61)
!4084 = !DILocalVariable(name: "pin_number_with_pullsel", scope: !4077, file: !346, line: 53, type: !1059)
!4085 = !DILocation(line: 0, scope: !4077)
!4086 = !DILocation(line: 53, column: 14, scope: !4077)
!4087 = !DILocation(line: 55, column: 5, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4077, file: !346, line: 55, column: 5)
!4089 = !DILocation(line: 55, column: 25, scope: !4090)
!4090 = distinct !DILexicalBlock(scope: !4088, file: !346, line: 55, column: 5)
!4091 = !DILocation(line: 55, column: 19, scope: !4090)
!4092 = distinct !{!4092, !4087, !4093}
!4093 = !DILocation(line: 59, column: 5, scope: !4088)
!4094 = !DILocation(line: 56, column: 13, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !346, line: 56, column: 13)
!4096 = distinct !DILexicalBlock(scope: !4090, file: !346, line: 55, column: 29)
!4097 = !DILocation(line: 56, column: 40, scope: !4095)
!4098 = !DILocation(line: 56, column: 13, scope: !4096)
!4099 = !DILocation(line: 61, column: 1, scope: !4077)
!4100 = distinct !DISubprogram(name: "hal_gpio_init", scope: !346, file: !346, line: 66, type: !4101, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4104)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{!4103, !4080}
!4103 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_status_t", file: !401, line: 229, baseType: !400)
!4104 = !{!4105}
!4105 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4100, file: !346, line: 66, type: !4080)
!4106 = !DILocation(line: 0, scope: !4100)
!4107 = !DILocation(line: 68, column: 5, scope: !4100)
!4108 = distinct !DISubprogram(name: "hal_gpio_deinit", scope: !346, file: !346, line: 72, type: !4101, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4109)
!4109 = !{!4110}
!4110 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4108, file: !346, line: 72, type: !4080)
!4111 = !DILocation(line: 0, scope: !4108)
!4112 = !DILocation(line: 74, column: 5, scope: !4108)
!4113 = distinct !DISubprogram(name: "hal_gpio_set_direction", scope: !346, file: !346, line: 79, type: !4114, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4116)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!4103, !4080, !442}
!4116 = !{!4117, !4118, !4119, !4120}
!4117 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4113, file: !346, line: 79, type: !4080)
!4118 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4113, file: !346, line: 79, type: !442)
!4119 = !DILocalVariable(name: "no", scope: !4113, file: !346, line: 81, type: !61)
!4120 = !DILocalVariable(name: "remainder", scope: !4113, file: !346, line: 82, type: !61)
!4121 = !DILocation(line: 0, scope: !4113)
!4122 = !DILocation(line: 84, column: 18, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4113, file: !346, line: 84, column: 9)
!4124 = !DILocation(line: 84, column: 9, scope: !4113)
!4125 = !DILocation(line: 89, column: 19, scope: !4113)
!4126 = !DILocation(line: 92, column: 26, scope: !4113)
!4127 = !DILocation(line: 94, column: 24, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4113, file: !346, line: 94, column: 9)
!4129 = !DILocation(line: 0, scope: !4128)
!4130 = !DILocation(line: 94, column: 9, scope: !4113)
!4131 = !DILocation(line: 101, column: 1, scope: !4113)
!4132 = distinct !DISubprogram(name: "hal_gpio_get_direction", scope: !346, file: !346, line: 105, type: !4133, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4136)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!4103, !4080, !4135}
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 32)
!4136 = !{!4137, !4138, !4139, !4140, !4141}
!4137 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4132, file: !346, line: 105, type: !4080)
!4138 = !DILocalVariable(name: "gpio_direction", arg: 2, scope: !4132, file: !346, line: 105, type: !4135)
!4139 = !DILocalVariable(name: "no", scope: !4132, file: !346, line: 107, type: !61)
!4140 = !DILocalVariable(name: "remainder", scope: !4132, file: !346, line: 108, type: !61)
!4141 = !DILocalVariable(name: "temp", scope: !4132, file: !346, line: 109, type: !61)
!4142 = !DILocation(line: 0, scope: !4132)
!4143 = !DILocation(line: 111, column: 18, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4132, file: !346, line: 111, column: 9)
!4145 = !DILocation(line: 111, column: 9, scope: !4132)
!4146 = !DILocation(line: 115, column: 14, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4132, file: !346, line: 115, column: 9)
!4148 = !DILocation(line: 115, column: 9, scope: !4132)
!4149 = !DILocation(line: 120, column: 19, scope: !4132)
!4150 = !DILocation(line: 123, column: 26, scope: !4132)
!4151 = !DILocation(line: 125, column: 12, scope: !4132)
!4152 = !DILocation(line: 125, column: 54, scope: !4132)
!4153 = !DILocation(line: 126, column: 45, scope: !4132)
!4154 = !DILocation(line: 126, column: 17, scope: !4132)
!4155 = !DILocation(line: 127, column: 51, scope: !4132)
!4156 = !DILocation(line: 127, column: 21, scope: !4132)
!4157 = !DILocation(line: 128, column: 5, scope: !4132)
!4158 = !DILocation(line: 130, column: 1, scope: !4132)
!4159 = distinct !DISubprogram(name: "hal_pinmux_set_function", scope: !346, file: !346, line: 134, type: !4160, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4163)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{!4162, !4080, !460}
!4162 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_pinmux_status_t", file: !401, line: 238, baseType: !411)
!4163 = !{!4164, !4165, !4166, !4167, !4168}
!4164 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4159, file: !346, line: 134, type: !4080)
!4165 = !DILocalVariable(name: "function_index", arg: 2, scope: !4159, file: !346, line: 134, type: !460)
!4166 = !DILocalVariable(name: "no", scope: !4159, file: !346, line: 136, type: !61)
!4167 = !DILocalVariable(name: "remainder", scope: !4159, file: !346, line: 137, type: !61)
!4168 = !DILocalVariable(name: "irq_status", scope: !4159, file: !346, line: 138, type: !61)
!4169 = !DILocation(line: 0, scope: !4159)
!4170 = !DILocation(line: 140, column: 18, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4159, file: !346, line: 140, column: 9)
!4172 = !DILocation(line: 140, column: 9, scope: !4159)
!4173 = !DILocation(line: 145, column: 24, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4159, file: !346, line: 145, column: 9)
!4175 = !DILocation(line: 145, column: 9, scope: !4159)
!4176 = !DILocation(line: 145, column: 9, scope: !4174)
!4177 = !DILocation(line: 150, column: 19, scope: !4159)
!4178 = !DILocation(line: 156, column: 18, scope: !4159)
!4179 = !DILocation(line: 157, column: 105, scope: !4159)
!4180 = !DILocation(line: 157, column: 91, scope: !4159)
!4181 = !DILocation(line: 157, column: 5, scope: !4159)
!4182 = !DILocation(line: 157, column: 48, scope: !4159)
!4183 = !DILocation(line: 157, column: 62, scope: !4159)
!4184 = !DILocation(line: 158, column: 80, scope: !4159)
!4185 = !DILocation(line: 158, column: 5, scope: !4159)
!4186 = !DILocation(line: 158, column: 48, scope: !4159)
!4187 = !DILocation(line: 158, column: 62, scope: !4159)
!4188 = !DILocation(line: 159, column: 5, scope: !4159)
!4189 = !DILocation(line: 160, column: 5, scope: !4159)
!4190 = !DILocation(line: 162, column: 1, scope: !4159)
!4191 = distinct !DISubprogram(name: "hal_gpio_get_input", scope: !346, file: !346, line: 166, type: !4192, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4195)
!4192 = !DISubroutineType(types: !4193)
!4193 = !{!4103, !4080, !4194}
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 32)
!4195 = !{!4196, !4197, !4198, !4199, !4200}
!4196 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4191, file: !346, line: 166, type: !4080)
!4197 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4191, file: !346, line: 166, type: !4194)
!4198 = !DILocalVariable(name: "no", scope: !4191, file: !346, line: 168, type: !61)
!4199 = !DILocalVariable(name: "remainder", scope: !4191, file: !346, line: 169, type: !61)
!4200 = !DILocalVariable(name: "temp", scope: !4191, file: !346, line: 170, type: !61)
!4201 = !DILocation(line: 0, scope: !4191)
!4202 = !DILocation(line: 172, column: 18, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4191, file: !346, line: 172, column: 9)
!4204 = !DILocation(line: 172, column: 9, scope: !4191)
!4205 = !DILocation(line: 176, column: 14, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4191, file: !346, line: 176, column: 9)
!4207 = !DILocation(line: 176, column: 9, scope: !4191)
!4208 = !DILocation(line: 181, column: 19, scope: !4191)
!4209 = !DILocation(line: 184, column: 26, scope: !4191)
!4210 = !DILocation(line: 186, column: 12, scope: !4191)
!4211 = !DILocation(line: 186, column: 54, scope: !4191)
!4212 = !DILocation(line: 187, column: 45, scope: !4191)
!4213 = !DILocation(line: 187, column: 17, scope: !4191)
!4214 = !DILocation(line: 188, column: 41, scope: !4191)
!4215 = !DILocation(line: 188, column: 16, scope: !4191)
!4216 = !DILocation(line: 189, column: 5, scope: !4191)
!4217 = !DILocation(line: 191, column: 1, scope: !4191)
!4218 = distinct !DISubprogram(name: "hal_gpio_set_output", scope: !346, file: !346, line: 195, type: !4219, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4221)
!4219 = !DISubroutineType(types: !4220)
!4220 = !{!4103, !4080, !443}
!4221 = !{!4222, !4223, !4224, !4225}
!4222 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4218, file: !346, line: 195, type: !4080)
!4223 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4218, file: !346, line: 195, type: !443)
!4224 = !DILocalVariable(name: "no", scope: !4218, file: !346, line: 197, type: !61)
!4225 = !DILocalVariable(name: "remainder", scope: !4218, file: !346, line: 198, type: !61)
!4226 = !DILocation(line: 0, scope: !4218)
!4227 = !DILocation(line: 200, column: 18, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4218, file: !346, line: 200, column: 9)
!4229 = !DILocation(line: 200, column: 9, scope: !4218)
!4230 = !DILocation(line: 205, column: 19, scope: !4218)
!4231 = !DILocation(line: 208, column: 26, scope: !4218)
!4232 = !DILocation(line: 210, column: 9, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4218, file: !346, line: 210, column: 9)
!4234 = !DILocation(line: 0, scope: !4233)
!4235 = !DILocation(line: 210, column: 9, scope: !4218)
!4236 = !DILocation(line: 216, column: 1, scope: !4218)
!4237 = distinct !DISubprogram(name: "hal_gpio_get_output", scope: !346, file: !346, line: 220, type: !4192, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4238)
!4238 = !{!4239, !4240, !4241, !4242, !4243}
!4239 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4237, file: !346, line: 220, type: !4080)
!4240 = !DILocalVariable(name: "gpio_data", arg: 2, scope: !4237, file: !346, line: 220, type: !4194)
!4241 = !DILocalVariable(name: "no", scope: !4237, file: !346, line: 222, type: !61)
!4242 = !DILocalVariable(name: "remainder", scope: !4237, file: !346, line: 223, type: !61)
!4243 = !DILocalVariable(name: "temp", scope: !4237, file: !346, line: 224, type: !61)
!4244 = !DILocation(line: 0, scope: !4237)
!4245 = !DILocation(line: 226, column: 18, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4237, file: !346, line: 226, column: 9)
!4247 = !DILocation(line: 226, column: 9, scope: !4237)
!4248 = !DILocation(line: 230, column: 14, scope: !4249)
!4249 = distinct !DILexicalBlock(scope: !4237, file: !346, line: 230, column: 9)
!4250 = !DILocation(line: 230, column: 9, scope: !4237)
!4251 = !DILocation(line: 235, column: 19, scope: !4237)
!4252 = !DILocation(line: 238, column: 26, scope: !4237)
!4253 = !DILocation(line: 240, column: 12, scope: !4237)
!4254 = !DILocation(line: 240, column: 55, scope: !4237)
!4255 = !DILocation(line: 241, column: 45, scope: !4237)
!4256 = !DILocation(line: 241, column: 17, scope: !4237)
!4257 = !DILocation(line: 242, column: 41, scope: !4237)
!4258 = !DILocation(line: 242, column: 16, scope: !4237)
!4259 = !DILocation(line: 243, column: 5, scope: !4237)
!4260 = !DILocation(line: 245, column: 1, scope: !4237)
!4261 = distinct !DISubprogram(name: "hal_gpio_toggle_pin", scope: !346, file: !346, line: 249, type: !4101, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4262)
!4262 = !{!4263, !4264, !4265, !4266}
!4263 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4261, file: !346, line: 249, type: !4080)
!4264 = !DILocalVariable(name: "no", scope: !4261, file: !346, line: 251, type: !61)
!4265 = !DILocalVariable(name: "remainder", scope: !4261, file: !346, line: 252, type: !61)
!4266 = !DILocalVariable(name: "temp", scope: !4261, file: !346, line: 253, type: !61)
!4267 = !DILocation(line: 0, scope: !4261)
!4268 = !DILocation(line: 255, column: 18, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4261, file: !346, line: 255, column: 9)
!4270 = !DILocation(line: 255, column: 9, scope: !4261)
!4271 = !DILocation(line: 260, column: 19, scope: !4261)
!4272 = !DILocation(line: 263, column: 26, scope: !4261)
!4273 = !DILocation(line: 265, column: 12, scope: !4261)
!4274 = !DILocation(line: 265, column: 55, scope: !4261)
!4275 = !DILocation(line: 266, column: 45, scope: !4261)
!4276 = !DILocation(line: 266, column: 17, scope: !4261)
!4277 = !DILocation(line: 267, column: 15, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4261, file: !346, line: 267, column: 9)
!4279 = !DILocation(line: 267, column: 9, scope: !4261)
!4280 = !DILocation(line: 0, scope: !4278)
!4281 = !DILocation(line: 273, column: 1, scope: !4261)
!4282 = distinct !DISubprogram(name: "hal_gpio_enable_inversion", scope: !346, file: !346, line: 278, type: !4101, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4283)
!4283 = !{!4284, !4285, !4286}
!4284 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4282, file: !346, line: 278, type: !4080)
!4285 = !DILocalVariable(name: "no", scope: !4282, file: !346, line: 280, type: !61)
!4286 = !DILocalVariable(name: "remainder", scope: !4282, file: !346, line: 281, type: !61)
!4287 = !DILocation(line: 0, scope: !4282)
!4288 = !DILocation(line: 283, column: 18, scope: !4289)
!4289 = distinct !DILexicalBlock(scope: !4282, file: !346, line: 283, column: 9)
!4290 = !DILocation(line: 283, column: 9, scope: !4282)
!4291 = !DILocation(line: 288, column: 19, scope: !4282)
!4292 = !DILocation(line: 291, column: 26, scope: !4282)
!4293 = !DILocation(line: 293, column: 90, scope: !4282)
!4294 = !DILocation(line: 293, column: 5, scope: !4282)
!4295 = !DILocation(line: 293, column: 48, scope: !4282)
!4296 = !DILocation(line: 293, column: 62, scope: !4282)
!4297 = !DILocation(line: 294, column: 5, scope: !4282)
!4298 = !DILocation(line: 295, column: 1, scope: !4282)
!4299 = distinct !DISubprogram(name: "hal_gpio_disable_inversion", scope: !346, file: !346, line: 299, type: !4101, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4300)
!4300 = !{!4301, !4302, !4303}
!4301 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4299, file: !346, line: 299, type: !4080)
!4302 = !DILocalVariable(name: "no", scope: !4299, file: !346, line: 301, type: !61)
!4303 = !DILocalVariable(name: "remainder", scope: !4299, file: !346, line: 302, type: !61)
!4304 = !DILocation(line: 0, scope: !4299)
!4305 = !DILocation(line: 304, column: 18, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4299, file: !346, line: 304, column: 9)
!4307 = !DILocation(line: 304, column: 9, scope: !4299)
!4308 = !DILocation(line: 309, column: 19, scope: !4299)
!4309 = !DILocation(line: 312, column: 26, scope: !4299)
!4310 = !DILocation(line: 314, column: 90, scope: !4299)
!4311 = !DILocation(line: 314, column: 5, scope: !4299)
!4312 = !DILocation(line: 314, column: 48, scope: !4299)
!4313 = !DILocation(line: 314, column: 62, scope: !4299)
!4314 = !DILocation(line: 315, column: 5, scope: !4299)
!4315 = !DILocation(line: 316, column: 1, scope: !4299)
!4316 = distinct !DISubprogram(name: "hal_gpio_pull_up", scope: !346, file: !346, line: 321, type: !4101, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4317)
!4317 = !{!4318, !4319, !4320}
!4318 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4316, file: !346, line: 321, type: !4080)
!4319 = !DILocalVariable(name: "no", scope: !4316, file: !346, line: 323, type: !61)
!4320 = !DILocalVariable(name: "remainder", scope: !4316, file: !346, line: 324, type: !61)
!4321 = !DILocation(line: 0, scope: !4316)
!4322 = !DILocation(line: 326, column: 19, scope: !4323)
!4323 = distinct !DILexicalBlock(scope: !4316, file: !346, line: 326, column: 9)
!4324 = !DILocation(line: 326, column: 36, scope: !4323)
!4325 = !DILocation(line: 326, column: 41, scope: !4323)
!4326 = !DILocation(line: 326, column: 9, scope: !4316)
!4327 = !DILocation(line: 331, column: 19, scope: !4316)
!4328 = !DILocation(line: 334, column: 26, scope: !4316)
!4329 = !DILocation(line: 336, column: 94, scope: !4316)
!4330 = !DILocation(line: 336, column: 5, scope: !4316)
!4331 = !DILocation(line: 336, column: 50, scope: !4316)
!4332 = !DILocation(line: 336, column: 66, scope: !4316)
!4333 = !DILocation(line: 337, column: 5, scope: !4316)
!4334 = !DILocation(line: 337, column: 51, scope: !4316)
!4335 = !DILocation(line: 337, column: 68, scope: !4316)
!4336 = !DILocation(line: 338, column: 5, scope: !4316)
!4337 = !DILocation(line: 339, column: 1, scope: !4316)
!4338 = distinct !DISubprogram(name: "hal_gpio_pull_down", scope: !346, file: !346, line: 343, type: !4101, scopeLine: 344, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4339)
!4339 = !{!4340, !4341, !4342}
!4340 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4338, file: !346, line: 343, type: !4080)
!4341 = !DILocalVariable(name: "no", scope: !4338, file: !346, line: 345, type: !61)
!4342 = !DILocalVariable(name: "remainder", scope: !4338, file: !346, line: 346, type: !61)
!4343 = !DILocation(line: 0, scope: !4338)
!4344 = !DILocation(line: 348, column: 19, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4338, file: !346, line: 348, column: 9)
!4346 = !DILocation(line: 348, column: 36, scope: !4345)
!4347 = !DILocation(line: 348, column: 41, scope: !4345)
!4348 = !DILocation(line: 348, column: 9, scope: !4338)
!4349 = !DILocation(line: 353, column: 19, scope: !4338)
!4350 = !DILocation(line: 356, column: 26, scope: !4338)
!4351 = !DILocation(line: 358, column: 94, scope: !4338)
!4352 = !DILocation(line: 358, column: 5, scope: !4338)
!4353 = !DILocation(line: 358, column: 50, scope: !4338)
!4354 = !DILocation(line: 358, column: 66, scope: !4338)
!4355 = !DILocation(line: 359, column: 5, scope: !4338)
!4356 = !DILocation(line: 359, column: 51, scope: !4338)
!4357 = !DILocation(line: 359, column: 68, scope: !4338)
!4358 = !DILocation(line: 360, column: 5, scope: !4338)
!4359 = !DILocation(line: 361, column: 1, scope: !4338)
!4360 = distinct !DISubprogram(name: "hal_gpio_disable_pull", scope: !346, file: !346, line: 365, type: !4101, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4361)
!4361 = !{!4362, !4363, !4364}
!4362 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4360, file: !346, line: 365, type: !4080)
!4363 = !DILocalVariable(name: "no", scope: !4360, file: !346, line: 367, type: !61)
!4364 = !DILocalVariable(name: "remainder", scope: !4360, file: !346, line: 368, type: !61)
!4365 = !DILocation(line: 0, scope: !4360)
!4366 = !DILocation(line: 370, column: 19, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4360, file: !346, line: 370, column: 9)
!4368 = !DILocation(line: 370, column: 36, scope: !4367)
!4369 = !DILocation(line: 370, column: 41, scope: !4367)
!4370 = !DILocation(line: 370, column: 9, scope: !4360)
!4371 = !DILocation(line: 375, column: 19, scope: !4360)
!4372 = !DILocation(line: 378, column: 26, scope: !4360)
!4373 = !DILocation(line: 380, column: 94, scope: !4360)
!4374 = !DILocation(line: 380, column: 5, scope: !4360)
!4375 = !DILocation(line: 380, column: 50, scope: !4360)
!4376 = !DILocation(line: 380, column: 66, scope: !4360)
!4377 = !DILocation(line: 381, column: 5, scope: !4360)
!4378 = !DILocation(line: 382, column: 1, scope: !4360)
!4379 = distinct !DISubprogram(name: "hal_gpio_set_clockout", scope: !346, file: !346, line: 387, type: !4380, scopeLine: 388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4384)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{!4103, !4382, !4383}
!4382 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_t", file: !98, line: 423, baseType: !421)
!4383 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_gpio_clock_mode_t", file: !98, line: 431, baseType: !430)
!4384 = !{!4385, !4386}
!4385 = !DILocalVariable(name: "gpio_clock_num", arg: 1, scope: !4379, file: !346, line: 387, type: !4382)
!4386 = !DILocalVariable(name: "clock_mode", arg: 2, scope: !4379, file: !346, line: 387, type: !4383)
!4387 = !DILocation(line: 0, scope: !4379)
!4388 = !DILocation(line: 390, column: 24, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4379, file: !346, line: 390, column: 9)
!4390 = !DILocation(line: 390, column: 9, scope: !4379)
!4391 = !DILocation(line: 394, column: 5, scope: !4379)
!4392 = !DILocation(line: 394, column: 62, scope: !4379)
!4393 = !DILocation(line: 394, column: 74, scope: !4379)
!4394 = !DILocation(line: 395, column: 5, scope: !4379)
!4395 = !DILocation(line: 396, column: 1, scope: !4379)
!4396 = distinct !DISubprogram(name: "hal_gpio_set_pupd_register", scope: !346, file: !346, line: 403, type: !4397, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4399)
!4397 = !DISubroutineType(types: !4398)
!4398 = !{!4103, !4080, !460, !460, !460}
!4399 = !{!4400, !4401, !4402, !4403, !4404, !4405}
!4400 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4396, file: !346, line: 403, type: !4080)
!4401 = !DILocalVariable(name: "gpio_pupd", arg: 2, scope: !4396, file: !346, line: 403, type: !460)
!4402 = !DILocalVariable(name: "gpio_r0", arg: 3, scope: !4396, file: !346, line: 403, type: !460)
!4403 = !DILocalVariable(name: "gpio_r1", arg: 4, scope: !4396, file: !346, line: 403, type: !460)
!4404 = !DILocalVariable(name: "no", scope: !4396, file: !346, line: 405, type: !61)
!4405 = !DILocalVariable(name: "remainder", scope: !4396, file: !346, line: 406, type: !61)
!4406 = !DILocation(line: 0, scope: !4396)
!4407 = !DILocation(line: 408, column: 19, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4396, file: !346, line: 408, column: 9)
!4409 = !DILocation(line: 408, column: 36, scope: !4408)
!4410 = !DILocation(line: 408, column: 40, scope: !4408)
!4411 = !DILocation(line: 408, column: 9, scope: !4396)
!4412 = !DILocation(line: 413, column: 19, scope: !4396)
!4413 = !DILocation(line: 416, column: 26, scope: !4396)
!4414 = !DILocation(line: 418, column: 9, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4396, file: !346, line: 418, column: 9)
!4416 = !DILocation(line: 0, scope: !4415)
!4417 = !DILocation(line: 418, column: 9, scope: !4396)
!4418 = !DILocation(line: 424, column: 9, scope: !4419)
!4419 = distinct !DILexicalBlock(scope: !4396, file: !346, line: 424, column: 9)
!4420 = !DILocation(line: 0, scope: !4419)
!4421 = !DILocation(line: 424, column: 9, scope: !4396)
!4422 = !DILocation(line: 430, column: 9, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4396, file: !346, line: 430, column: 9)
!4424 = !DILocation(line: 0, scope: !4423)
!4425 = !DILocation(line: 430, column: 9, scope: !4396)
!4426 = !DILocation(line: 436, column: 1, scope: !4396)
!4427 = distinct !DISubprogram(name: "hal_gpio_set_high_impedance", scope: !346, file: !346, line: 441, type: !4101, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4428)
!4428 = !{!4429, !4430, !4431, !4432, !4433, !4434, !4435}
!4429 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4427, file: !346, line: 441, type: !4080)
!4430 = !DILocalVariable(name: "no1", scope: !4427, file: !346, line: 443, type: !61)
!4431 = !DILocalVariable(name: "no2", scope: !4427, file: !346, line: 443, type: !61)
!4432 = !DILocalVariable(name: "no3", scope: !4427, file: !346, line: 443, type: !61)
!4433 = !DILocalVariable(name: "remainder1", scope: !4427, file: !346, line: 444, type: !61)
!4434 = !DILocalVariable(name: "remainder2", scope: !4427, file: !346, line: 444, type: !61)
!4435 = !DILocalVariable(name: "remainder3", scope: !4427, file: !346, line: 444, type: !61)
!4436 = !DILocation(line: 0, scope: !4427)
!4437 = !DILocation(line: 446, column: 18, scope: !4438)
!4438 = distinct !DILexicalBlock(scope: !4427, file: !346, line: 446, column: 9)
!4439 = !DILocation(line: 446, column: 9, scope: !4427)
!4440 = !DILocation(line: 451, column: 20, scope: !4427)
!4441 = !DILocation(line: 454, column: 27, scope: !4427)
!4442 = !DILocation(line: 457, column: 20, scope: !4427)
!4443 = !DILocation(line: 463, column: 20, scope: !4427)
!4444 = !DILocation(line: 469, column: 107, scope: !4427)
!4445 = !DILocation(line: 469, column: 92, scope: !4427)
!4446 = !DILocation(line: 469, column: 5, scope: !4427)
!4447 = !DILocation(line: 469, column: 49, scope: !4427)
!4448 = !DILocation(line: 469, column: 63, scope: !4427)
!4449 = !DILocation(line: 472, column: 89, scope: !4427)
!4450 = !DILocation(line: 472, column: 5, scope: !4427)
!4451 = !DILocation(line: 472, column: 48, scope: !4427)
!4452 = !DILocation(line: 472, column: 61, scope: !4427)
!4453 = !DILocation(line: 475, column: 5, scope: !4427)
!4454 = !DILocation(line: 475, column: 48, scope: !4427)
!4455 = !DILocation(line: 475, column: 61, scope: !4427)
!4456 = !DILocation(line: 478, column: 9, scope: !4457)
!4457 = distinct !DILexicalBlock(scope: !4427, file: !346, line: 478, column: 9)
!4458 = !DILocation(line: 0, scope: !4457)
!4459 = !DILocation(line: 478, column: 9, scope: !4427)
!4460 = !DILocation(line: 479, column: 55, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4457, file: !346, line: 478, column: 40)
!4462 = !DILocation(line: 480, column: 5, scope: !4461)
!4463 = !DILocation(line: 483, column: 53, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4457, file: !346, line: 482, column: 10)
!4465 = !DILocation(line: 483, column: 67, scope: !4464)
!4466 = !DILocation(line: 484, column: 9, scope: !4464)
!4467 = !DILocation(line: 484, column: 55, scope: !4464)
!4468 = !DILocation(line: 484, column: 71, scope: !4464)
!4469 = !DILocation(line: 485, column: 9, scope: !4464)
!4470 = !DILocation(line: 485, column: 55, scope: !4464)
!4471 = !DILocation(line: 490, column: 5, scope: !4427)
!4472 = !DILocation(line: 490, column: 48, scope: !4427)
!4473 = !DILocation(line: 490, column: 61, scope: !4427)
!4474 = !DILocation(line: 493, column: 5, scope: !4427)
!4475 = !DILocation(line: 493, column: 47, scope: !4427)
!4476 = !DILocation(line: 493, column: 59, scope: !4427)
!4477 = !DILocation(line: 496, column: 108, scope: !4427)
!4478 = !DILocation(line: 496, column: 93, scope: !4427)
!4479 = !DILocation(line: 496, column: 5, scope: !4427)
!4480 = !DILocation(line: 496, column: 50, scope: !4427)
!4481 = !DILocation(line: 496, column: 65, scope: !4427)
!4482 = !DILocation(line: 498, column: 5, scope: !4427)
!4483 = !DILocation(line: 499, column: 1, scope: !4427)
!4484 = distinct !DISubprogram(name: "hal_gpio_clear_high_impedance", scope: !346, file: !346, line: 502, type: !4101, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4485)
!4485 = !{!4486, !4487, !4488, !4489, !4490}
!4486 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4484, file: !346, line: 502, type: !4080)
!4487 = !DILocalVariable(name: "no1", scope: !4484, file: !346, line: 504, type: !61)
!4488 = !DILocalVariable(name: "no2", scope: !4484, file: !346, line: 504, type: !61)
!4489 = !DILocalVariable(name: "remainder1", scope: !4484, file: !346, line: 505, type: !61)
!4490 = !DILocalVariable(name: "remainder2", scope: !4484, file: !346, line: 505, type: !61)
!4491 = !DILocation(line: 0, scope: !4484)
!4492 = !DILocation(line: 507, column: 18, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4484, file: !346, line: 507, column: 9)
!4494 = !DILocation(line: 507, column: 9, scope: !4484)
!4495 = !DILocation(line: 512, column: 20, scope: !4484)
!4496 = !DILocation(line: 515, column: 27, scope: !4484)
!4497 = !DILocation(line: 518, column: 20, scope: !4484)
!4498 = !DILocation(line: 524, column: 107, scope: !4484)
!4499 = !DILocation(line: 524, column: 92, scope: !4484)
!4500 = !DILocation(line: 524, column: 5, scope: !4484)
!4501 = !DILocation(line: 524, column: 49, scope: !4484)
!4502 = !DILocation(line: 524, column: 63, scope: !4484)
!4503 = !DILocation(line: 527, column: 89, scope: !4484)
!4504 = !DILocation(line: 527, column: 5, scope: !4484)
!4505 = !DILocation(line: 527, column: 48, scope: !4484)
!4506 = !DILocation(line: 527, column: 61, scope: !4484)
!4507 = !DILocation(line: 530, column: 9, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4484, file: !346, line: 530, column: 9)
!4509 = !DILocation(line: 0, scope: !4508)
!4510 = !DILocation(line: 530, column: 9, scope: !4484)
!4511 = !DILocation(line: 531, column: 55, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4508, file: !346, line: 530, column: 40)
!4513 = !DILocation(line: 531, column: 71, scope: !4512)
!4514 = !DILocation(line: 532, column: 9, scope: !4512)
!4515 = !DILocation(line: 532, column: 56, scope: !4512)
!4516 = !DILocation(line: 533, column: 5, scope: !4512)
!4517 = !DILocation(line: 536, column: 53, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4508, file: !346, line: 535, column: 10)
!4519 = !DILocation(line: 536, column: 67, scope: !4518)
!4520 = !DILocation(line: 537, column: 9, scope: !4518)
!4521 = !DILocation(line: 537, column: 55, scope: !4518)
!4522 = !DILocation(line: 537, column: 71, scope: !4518)
!4523 = !DILocation(line: 538, column: 9, scope: !4518)
!4524 = !DILocation(line: 538, column: 55, scope: !4518)
!4525 = !DILocation(line: 543, column: 5, scope: !4484)
!4526 = !DILocation(line: 543, column: 48, scope: !4484)
!4527 = !DILocation(line: 543, column: 61, scope: !4484)
!4528 = !DILocation(line: 546, column: 5, scope: !4484)
!4529 = !DILocation(line: 546, column: 47, scope: !4484)
!4530 = !DILocation(line: 546, column: 59, scope: !4484)
!4531 = !DILocation(line: 549, column: 5, scope: !4484)
!4532 = !DILocation(line: 550, column: 1, scope: !4484)
!4533 = distinct !DISubprogram(name: "hal_gpio_set_driving_current", scope: !346, file: !346, line: 554, type: !4534, scopeLine: 555, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4536)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{!4103, !4080, !444}
!4536 = !{!4537, !4538, !4539, !4540}
!4537 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4533, file: !346, line: 554, type: !4080)
!4538 = !DILocalVariable(name: "driving", arg: 2, scope: !4533, file: !346, line: 554, type: !444)
!4539 = !DILocalVariable(name: "no", scope: !4533, file: !346, line: 556, type: !61)
!4540 = !DILocalVariable(name: "remainder", scope: !4533, file: !346, line: 557, type: !61)
!4541 = !DILocation(line: 0, scope: !4533)
!4542 = !DILocation(line: 559, column: 19, scope: !4543)
!4543 = distinct !DILexicalBlock(scope: !4533, file: !346, line: 559, column: 9)
!4544 = !DILocation(line: 559, column: 9, scope: !4533)
!4545 = !DILocation(line: 564, column: 19, scope: !4533)
!4546 = !DILocation(line: 569, column: 102, scope: !4533)
!4547 = !DILocation(line: 569, column: 88, scope: !4533)
!4548 = !DILocation(line: 569, column: 5, scope: !4533)
!4549 = !DILocation(line: 569, column: 47, scope: !4533)
!4550 = !DILocation(line: 569, column: 60, scope: !4533)
!4551 = !DILocation(line: 570, column: 71, scope: !4533)
!4552 = !DILocation(line: 570, column: 5, scope: !4533)
!4553 = !DILocation(line: 570, column: 47, scope: !4533)
!4554 = !DILocation(line: 570, column: 60, scope: !4533)
!4555 = !DILocation(line: 571, column: 5, scope: !4533)
!4556 = !DILocation(line: 572, column: 1, scope: !4533)
!4557 = distinct !DISubprogram(name: "hal_gpio_get_driving_current", scope: !346, file: !346, line: 575, type: !4558, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !345, retainedNodes: !4561)
!4558 = !DISubroutineType(types: !4559)
!4559 = !{!4103, !4080, !4560}
!4560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 32)
!4561 = !{!4562, !4563, !4564, !4565, !4566}
!4562 = !DILocalVariable(name: "gpio_pin", arg: 1, scope: !4557, file: !346, line: 575, type: !4080)
!4563 = !DILocalVariable(name: "driving", arg: 2, scope: !4557, file: !346, line: 575, type: !4560)
!4564 = !DILocalVariable(name: "no", scope: !4557, file: !346, line: 577, type: !61)
!4565 = !DILocalVariable(name: "remainder", scope: !4557, file: !346, line: 578, type: !61)
!4566 = !DILocalVariable(name: "temp", scope: !4557, file: !346, line: 579, type: !61)
!4567 = !DILocation(line: 0, scope: !4557)
!4568 = !DILocation(line: 581, column: 19, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4557, file: !346, line: 581, column: 9)
!4570 = !DILocation(line: 581, column: 9, scope: !4557)
!4571 = !DILocation(line: 585, column: 14, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4557, file: !346, line: 585, column: 9)
!4573 = !DILocation(line: 585, column: 9, scope: !4557)
!4574 = !DILocation(line: 590, column: 19, scope: !4557)
!4575 = !DILocation(line: 595, column: 12, scope: !4557)
!4576 = !DILocation(line: 595, column: 54, scope: !4557)
!4577 = !DILocation(line: 596, column: 59, scope: !4557)
!4578 = !DILocation(line: 596, column: 45, scope: !4557)
!4579 = !DILocation(line: 596, column: 17, scope: !4557)
!4580 = !DILocation(line: 597, column: 18, scope: !4557)
!4581 = !DILocation(line: 600, column: 56, scope: !4557)
!4582 = !DILocation(line: 600, column: 14, scope: !4557)
!4583 = !DILocation(line: 602, column: 5, scope: !4557)
!4584 = !DILocation(line: 603, column: 1, scope: !4557)
!4585 = distinct !DISubprogram(name: "uart_receive_handler", scope: !629, file: !629, line: 146, type: !4586, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4588)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{null, !735, !91}
!4588 = !{!4589, !4590, !4591, !4593, !4594, !4595, !4596, !4652}
!4589 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4585, file: !629, line: 146, type: !735)
!4590 = !DILocalVariable(name: "is_timeout", arg: 2, scope: !4585, file: !629, line: 146, type: !91)
!4591 = !DILocalVariable(name: "channel", scope: !4585, file: !629, line: 148, type: !4592)
!4592 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_channel_t", file: !639, line: 203, baseType: !638)
!4593 = !DILocalVariable(name: "avail_bytes", scope: !4585, file: !629, line: 149, type: !61)
!4594 = !DILocalVariable(name: "callback", scope: !4585, file: !629, line: 150, type: !744)
!4595 = !DILocalVariable(name: "arg", scope: !4585, file: !629, line: 151, type: !88)
!4596 = !DILocalVariable(name: "uartx", scope: !4585, file: !629, line: 152, type: !4597)
!4597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4598, size: 32)
!4598 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !4599)
!4599 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !4600)
!4600 = !{!4601, !4607, !4612, !4618, !4619, !4624, !4629, !4630, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !4599, file: !56, line: 547, baseType: !4602, size: 32)
!4602 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4599, file: !56, line: 543, size: 32, elements: !4603)
!4603 = !{!4604, !4605, !4606}
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !4602, file: !56, line: 544, baseType: !272, size: 32)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !4602, file: !56, line: 545, baseType: !60, size: 32)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !4602, file: !56, line: 546, baseType: !60, size: 32)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !4599, file: !56, line: 551, baseType: !4608, size: 32, offset: 32)
!4608 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4599, file: !56, line: 548, size: 32, elements: !4609)
!4609 = !{!4610, !4611}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !4608, file: !56, line: 549, baseType: !60, size: 32)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !4608, file: !56, line: 550, baseType: !60, size: 32)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !4599, file: !56, line: 556, baseType: !4613, size: 32, offset: 64)
!4613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4599, file: !56, line: 552, size: 32, elements: !4614)
!4614 = !{!4615, !4616, !4617}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !4613, file: !56, line: 553, baseType: !272, size: 32)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !4613, file: !56, line: 554, baseType: !60, size: 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !4613, file: !56, line: 555, baseType: !60, size: 32)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !4599, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !4599, file: !56, line: 561, baseType: !4620, size: 32, offset: 128)
!4620 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4599, file: !56, line: 558, size: 32, elements: !4621)
!4621 = !{!4622, !4623}
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !4620, file: !56, line: 559, baseType: !60, size: 32)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !4620, file: !56, line: 560, baseType: !60, size: 32)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !4599, file: !56, line: 565, baseType: !4625, size: 32, offset: 160)
!4625 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4599, file: !56, line: 562, size: 32, elements: !4626)
!4626 = !{!4627, !4628}
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !4625, file: !56, line: 563, baseType: !272, size: 32)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !4625, file: !56, line: 564, baseType: !60, size: 32)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !4599, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !4599, file: !56, line: 570, baseType: !4631, size: 32, offset: 224)
!4631 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4599, file: !56, line: 567, size: 32, elements: !4632)
!4632 = !{!4633, !4634}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !4631, file: !56, line: 568, baseType: !60, size: 32)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !4631, file: !56, line: 569, baseType: !60, size: 32)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !4599, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !4599, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !4599, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !4599, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !4599, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !4599, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !4599, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !4599, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !4599, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !4599, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !4599, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !4599, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !4599, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !4599, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !4599, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !4599, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !4599, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!4652 = !DILocalVariable(name: "status", scope: !4585, file: !629, line: 153, type: !4653)
!4653 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_status_t", file: !639, line: 211, baseType: !659)
!4654 = !DILocation(line: 0, scope: !4585)
!4655 = !DILocation(line: 149, column: 5, scope: !4585)
!4656 = !DILocation(line: 155, column: 9, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4585, file: !629, line: 155, column: 9)
!4658 = !DILocation(line: 155, column: 36, scope: !4657)
!4659 = !DILocation(line: 155, column: 9, scope: !4585)
!4660 = !DILocation(line: 156, column: 9, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4657, file: !629, line: 155, column: 70)
!4662 = !DILocation(line: 160, column: 13, scope: !4585)
!4663 = !DILocation(line: 161, column: 15, scope: !4585)
!4664 = !DILocation(line: 163, column: 9, scope: !4585)
!4665 = !DILocation(line: 164, column: 9, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4667, file: !629, line: 163, column: 29)
!4667 = distinct !DILexicalBlock(scope: !4585, file: !629, line: 163, column: 9)
!4668 = !DILocation(line: 165, column: 5, scope: !4666)
!4669 = !DILocation(line: 167, column: 14, scope: !4585)
!4670 = !DILocation(line: 168, column: 16, scope: !4671)
!4671 = distinct !DILexicalBlock(scope: !4585, file: !629, line: 168, column: 9)
!4672 = !DILocation(line: 168, column: 9, scope: !4585)
!4673 = !DILocation(line: 169, column: 9, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4671, file: !629, line: 168, column: 28)
!4675 = !DILocation(line: 172, column: 9, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4585, file: !629, line: 172, column: 9)
!4677 = !DILocation(line: 172, column: 21, scope: !4676)
!4678 = !DILocation(line: 172, column: 9, scope: !4585)
!4679 = !DILocation(line: 176, column: 43, scope: !4585)
!4680 = !DILocation(line: 178, column: 18, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4585, file: !629, line: 178, column: 9)
!4682 = !DILocation(line: 178, column: 9, scope: !4585)
!4683 = !DILocation(line: 179, column: 9, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !629, line: 178, column: 27)
!4685 = !DILocation(line: 177, column: 38, scope: !4585)
!4686 = !DILocation(line: 183, column: 5, scope: !4585)
!4687 = !DILocation(line: 184, column: 5, scope: !4585)
!4688 = !DILocation(line: 185, column: 5, scope: !4585)
!4689 = !DILocation(line: 187, column: 14, scope: !4585)
!4690 = !DILocation(line: 188, column: 16, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4585, file: !629, line: 188, column: 9)
!4692 = !DILocation(line: 188, column: 9, scope: !4585)
!4693 = !DILocation(line: 189, column: 9, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4691, file: !629, line: 188, column: 28)
!4695 = !DILocation(line: 192, column: 9, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4585, file: !629, line: 192, column: 9)
!4697 = !DILocation(line: 192, column: 53, scope: !4696)
!4698 = !DILocation(line: 192, column: 21, scope: !4696)
!4699 = !DILocation(line: 192, column: 9, scope: !4585)
!4700 = !DILocation(line: 193, column: 18, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4696, file: !629, line: 192, column: 83)
!4702 = !DILocation(line: 194, column: 20, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4701, file: !629, line: 194, column: 13)
!4704 = !DILocation(line: 194, column: 13, scope: !4701)
!4705 = !DILocation(line: 195, column: 13, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4703, file: !629, line: 194, column: 32)
!4707 = !DILocation(line: 199, column: 1, scope: !4585)
!4708 = distinct !DISubprogram(name: "uart_send_handler", scope: !629, file: !629, line: 210, type: !4586, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4709)
!4709 = !{!4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717}
!4710 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4708, file: !629, line: 210, type: !735)
!4711 = !DILocalVariable(name: "is_send_complete_trigger", arg: 2, scope: !4708, file: !629, line: 210, type: !91)
!4712 = !DILocalVariable(name: "channel", scope: !4708, file: !629, line: 212, type: !4592)
!4713 = !DILocalVariable(name: "status", scope: !4708, file: !629, line: 213, type: !4653)
!4714 = !DILocalVariable(name: "compare_space", scope: !4708, file: !629, line: 214, type: !61)
!4715 = !DILocalVariable(name: "avail_space", scope: !4708, file: !629, line: 214, type: !61)
!4716 = !DILocalVariable(name: "callback", scope: !4708, file: !629, line: 215, type: !744)
!4717 = !DILocalVariable(name: "arg", scope: !4708, file: !629, line: 216, type: !88)
!4718 = !DILocation(line: 0, scope: !4708)
!4719 = !DILocation(line: 214, column: 5, scope: !4708)
!4720 = !DILocation(line: 221, column: 9, scope: !4721)
!4721 = distinct !DILexicalBlock(scope: !4708, file: !629, line: 221, column: 9)
!4722 = !DILocation(line: 221, column: 36, scope: !4721)
!4723 = !DILocation(line: 221, column: 9, scope: !4708)
!4724 = !DILocation(line: 222, column: 9, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4721, file: !629, line: 221, column: 70)
!4726 = !DILocation(line: 226, column: 15, scope: !4708)
!4727 = !DILocation(line: 228, column: 9, scope: !4708)
!4728 = !DILocation(line: 253, column: 47, scope: !4729)
!4729 = distinct !DILexicalBlock(scope: !4730, file: !629, line: 252, column: 12)
!4730 = distinct !DILexicalBlock(scope: !4708, file: !629, line: 228, column: 9)
!4731 = !DILocation(line: 255, column: 22, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4729, file: !629, line: 255, column: 13)
!4733 = !DILocation(line: 255, column: 13, scope: !4729)
!4734 = !DILocation(line: 256, column: 13, scope: !4735)
!4735 = distinct !DILexicalBlock(scope: !4732, file: !629, line: 255, column: 31)
!4736 = !DILocation(line: 254, column: 42, scope: !4729)
!4737 = !DILocation(line: 260, column: 9, scope: !4729)
!4738 = !DILocation(line: 261, column: 9, scope: !4729)
!4739 = !DILocation(line: 262, column: 9, scope: !4729)
!4740 = !DILocation(line: 264, column: 18, scope: !4729)
!4741 = !DILocation(line: 265, column: 20, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4729, file: !629, line: 265, column: 13)
!4743 = !DILocation(line: 265, column: 13, scope: !4729)
!4744 = !DILocation(line: 266, column: 13, scope: !4745)
!4745 = distinct !DILexicalBlock(scope: !4742, file: !629, line: 265, column: 32)
!4746 = !DILocation(line: 269, column: 54, scope: !4729)
!4747 = !DILocation(line: 270, column: 56, scope: !4729)
!4748 = !DILocation(line: 270, column: 25, scope: !4729)
!4749 = !DILocation(line: 271, column: 13, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4729, file: !629, line: 271, column: 13)
!4751 = !DILocation(line: 271, column: 25, scope: !4750)
!4752 = !DILocation(line: 271, column: 13, scope: !4729)
!4753 = !DILocation(line: 272, column: 22, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4750, file: !629, line: 271, column: 43)
!4755 = !DILocation(line: 273, column: 24, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4754, file: !629, line: 273, column: 17)
!4757 = !DILocation(line: 273, column: 17, scope: !4754)
!4758 = !DILocation(line: 274, column: 17, scope: !4759)
!4759 = distinct !DILexicalBlock(scope: !4756, file: !629, line: 273, column: 36)
!4760 = !DILocation(line: 279, column: 1, scope: !4708)
!4761 = distinct !DISubprogram(name: "uart_error_handler", scope: !629, file: !629, line: 282, type: !4762, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4764)
!4762 = !DISubroutineType(types: !4763)
!4763 = !{null, !735}
!4764 = !{!4765, !4766, !4767, !4768}
!4765 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4761, file: !629, line: 282, type: !735)
!4766 = !DILocalVariable(name: "uartx", scope: !4761, file: !629, line: 284, type: !4597)
!4767 = !DILocalVariable(name: "callback", scope: !4761, file: !629, line: 285, type: !744)
!4768 = !DILocalVariable(name: "arg", scope: !4761, file: !629, line: 286, type: !88)
!4769 = !DILocation(line: 0, scope: !4761)
!4770 = !DILocation(line: 288, column: 13, scope: !4761)
!4771 = !DILocation(line: 290, column: 10, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4761, file: !629, line: 290, column: 9)
!4773 = !DILocation(line: 290, column: 9, scope: !4761)
!4774 = !DILocation(line: 291, column: 9, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4772, file: !629, line: 290, column: 36)
!4776 = !DILocation(line: 292, column: 9, scope: !4775)
!4777 = !DILocation(line: 293, column: 47, scope: !4775)
!4778 = !DILocation(line: 295, column: 22, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4775, file: !629, line: 295, column: 13)
!4780 = !DILocation(line: 295, column: 13, scope: !4775)
!4781 = !DILocation(line: 296, column: 13, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4779, file: !629, line: 295, column: 31)
!4783 = !DILocation(line: 294, column: 42, scope: !4775)
!4784 = !DILocation(line: 299, column: 9, scope: !4775)
!4785 = !DILocation(line: 300, column: 5, scope: !4775)
!4786 = !DILocation(line: 301, column: 1, scope: !4761)
!4787 = distinct !DISubprogram(name: "hal_uart_set_baudrate", scope: !629, file: !629, line: 416, type: !4788, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4792)
!4788 = !DISubroutineType(types: !4789)
!4789 = !{!4790, !735, !4791}
!4790 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_status_t", file: !654, line: 351, baseType: !670)
!4791 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_baudrate_t", file: !654, line: 317, baseType: !677)
!4792 = !{!4793, !4794, !4795, !4796, !4797}
!4793 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4787, file: !629, line: 416, type: !735)
!4794 = !DILocalVariable(name: "baudrate", arg: 2, scope: !4787, file: !629, line: 416, type: !4791)
!4795 = !DILocalVariable(name: "actual_baudrate", scope: !4787, file: !629, line: 418, type: !61)
!4796 = !DILocalVariable(name: "irq_status", scope: !4787, file: !629, line: 418, type: !61)
!4797 = !DILocalVariable(name: "uartx", scope: !4787, file: !629, line: 419, type: !4597)
!4798 = !DILocation(line: 0, scope: !4787)
!4799 = !DILocation(line: 421, column: 11, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4787, file: !629, line: 421, column: 9)
!4801 = !DILocation(line: 421, column: 42, scope: !4800)
!4802 = !DILocation(line: 422, column: 11, scope: !4800)
!4803 = !DILocation(line: 421, column: 9, scope: !4787)
!4804 = !DILocation(line: 426, column: 9, scope: !4805)
!4805 = distinct !DILexicalBlock(scope: !4787, file: !629, line: 426, column: 9)
!4806 = !DILocation(line: 426, column: 36, scope: !4805)
!4807 = !DILocation(line: 426, column: 9, scope: !4787)
!4808 = !DILocation(line: 430, column: 18, scope: !4787)
!4809 = !DILocation(line: 434, column: 5, scope: !4787)
!4810 = !DILocation(line: 436, column: 13, scope: !4787)
!4811 = !DILocation(line: 437, column: 23, scope: !4787)
!4812 = !DILocation(line: 439, column: 5, scope: !4787)
!4813 = !DILocation(line: 441, column: 5, scope: !4787)
!4814 = !DILocation(line: 442, column: 1, scope: !4787)
!4815 = distinct !DISubprogram(name: "uart_port_is_valid", scope: !629, file: !629, line: 120, type: !4816, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4818)
!4816 = !DISubroutineType(types: !4817)
!4817 = !{!91, !735}
!4818 = !{!4819}
!4819 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4815, file: !629, line: 120, type: !735)
!4820 = !DILocation(line: 0, scope: !4815)
!4821 = !DILocation(line: 122, column: 23, scope: !4815)
!4822 = !DILocation(line: 122, column: 5, scope: !4815)
!4823 = distinct !DISubprogram(name: "uart_baudrate_is_valid", scope: !629, file: !629, line: 125, type: !4824, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4826)
!4824 = !DISubroutineType(types: !4825)
!4825 = !{!91, !4791}
!4826 = !{!4827}
!4827 = !DILocalVariable(name: "baudrate", arg: 1, scope: !4823, file: !629, line: 125, type: !4791)
!4828 = !DILocation(line: 0, scope: !4823)
!4829 = !DILocation(line: 127, column: 22, scope: !4823)
!4830 = !DILocation(line: 127, column: 5, scope: !4823)
!4831 = distinct !DISubprogram(name: "hal_uart_set_format", scope: !629, file: !629, line: 444, type: !4832, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4846)
!4832 = !DISubroutineType(types: !4833)
!4833 = !{!4790, !735, !4834}
!4834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4835, size: 32)
!4835 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4836)
!4836 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !4837)
!4837 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !4838)
!4838 = !{!4839, !4840, !4842, !4844}
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !4837, file: !654, line: 374, baseType: !4791, size: 32)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !4837, file: !654, line: 375, baseType: !4841, size: 32, offset: 32)
!4841 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_word_length_t", file: !654, line: 326, baseType: !693)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !4837, file: !654, line: 376, baseType: !4843, size: 32, offset: 64)
!4843 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_stop_bit_t", file: !654, line: 333, baseType: !699)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !4837, file: !654, line: 377, baseType: !4845, size: 32, offset: 96)
!4845 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_parity_t", file: !654, line: 341, baseType: !703)
!4846 = !{!4847, !4848, !4849, !4850}
!4847 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4831, file: !629, line: 444, type: !735)
!4848 = !DILocalVariable(name: "config", arg: 2, scope: !4831, file: !629, line: 445, type: !4834)
!4849 = !DILocalVariable(name: "irq_status", scope: !4831, file: !629, line: 447, type: !61)
!4850 = !DILocalVariable(name: "uartx", scope: !4831, file: !629, line: 448, type: !4597)
!4851 = !DILocation(line: 0, scope: !4831)
!4852 = !DILocation(line: 450, column: 11, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4831, file: !629, line: 450, column: 9)
!4854 = !DILocation(line: 450, column: 42, scope: !4853)
!4855 = !DILocation(line: 451, column: 11, scope: !4853)
!4856 = !DILocation(line: 450, column: 9, scope: !4831)
!4857 = !DILocation(line: 455, column: 9, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4831, file: !629, line: 455, column: 9)
!4859 = !DILocation(line: 455, column: 36, scope: !4858)
!4860 = !DILocation(line: 455, column: 9, scope: !4831)
!4861 = !DILocation(line: 459, column: 18, scope: !4831)
!4862 = !DILocation(line: 466, column: 5, scope: !4831)
!4863 = !DILocation(line: 468, column: 13, scope: !4831)
!4864 = !DILocation(line: 470, column: 46, scope: !4831)
!4865 = !DILocation(line: 470, column: 5, scope: !4831)
!4866 = !DILocation(line: 471, column: 36, scope: !4831)
!4867 = !DILocation(line: 471, column: 57, scope: !4831)
!4868 = !DILocation(line: 471, column: 75, scope: !4831)
!4869 = !DILocation(line: 471, column: 5, scope: !4831)
!4870 = !DILocation(line: 473, column: 5, scope: !4831)
!4871 = !DILocation(line: 474, column: 1, scope: !4831)
!4872 = distinct !DISubprogram(name: "uart_config_is_valid", scope: !629, file: !629, line: 130, type: !4873, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4875)
!4873 = !DISubroutineType(types: !4874)
!4874 = !{!91, !4834}
!4875 = !{!4876}
!4876 = !DILocalVariable(name: "config", arg: 1, scope: !4872, file: !629, line: 130, type: !4834)
!4877 = !DILocation(line: 0, scope: !4872)
!4878 = !DILocation(line: 132, column: 22, scope: !4872)
!4879 = !DILocation(line: 132, column: 31, scope: !4872)
!4880 = !DILocation(line: 132, column: 56, scope: !4872)
!4881 = !DILocation(line: 133, column: 22, scope: !4872)
!4882 = !DILocation(line: 133, column: 34, scope: !4872)
!4883 = !DILocation(line: 133, column: 61, scope: !4872)
!4884 = !DILocation(line: 134, column: 22, scope: !4872)
!4885 = !DILocation(line: 134, column: 31, scope: !4872)
!4886 = !DILocation(line: 134, column: 55, scope: !4872)
!4887 = !DILocation(line: 135, column: 22, scope: !4872)
!4888 = !DILocation(line: 135, column: 29, scope: !4872)
!4889 = !DILocation(line: 132, column: 5, scope: !4872)
!4890 = distinct !DISubprogram(name: "hal_uart_init", scope: !629, file: !629, line: 476, type: !4891, scopeLine: 477, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4894)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{!4790, !735, !4893}
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 32)
!4894 = !{!4895, !4896, !4897, !4898, !4899, !4900, !4901}
!4895 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4890, file: !629, line: 476, type: !735)
!4896 = !DILocalVariable(name: "uart_config", arg: 2, scope: !4890, file: !629, line: 476, type: !4893)
!4897 = !DILocalVariable(name: "uartx", scope: !4890, file: !629, line: 478, type: !4597)
!4898 = !DILocalVariable(name: "i", scope: !4890, file: !629, line: 479, type: !61)
!4899 = !DILocalVariable(name: "actual_baudrate", scope: !4890, file: !629, line: 479, type: !61)
!4900 = !DILocalVariable(name: "irq_status", scope: !4890, file: !629, line: 479, type: !61)
!4901 = !DILocalVariable(name: "status", scope: !4890, file: !629, line: 480, type: !4902)
!4902 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_clock_status_t", file: !709, line: 106, baseType: !708)
!4903 = !DILocation(line: 0, scope: !4890)
!4904 = !DILocation(line: 482, column: 11, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4890, file: !629, line: 482, column: 9)
!4906 = !DILocation(line: 482, column: 42, scope: !4905)
!4907 = !DILocation(line: 483, column: 11, scope: !4905)
!4908 = !DILocation(line: 482, column: 9, scope: !4890)
!4909 = !DILocation(line: 487, column: 18, scope: !4890)
!4910 = !DILocation(line: 488, column: 9, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4890, file: !629, line: 488, column: 9)
!4912 = !DILocation(line: 488, column: 36, scope: !4911)
!4913 = !DILocation(line: 488, column: 9, scope: !4890)
!4914 = !DILocation(line: 489, column: 9, scope: !4915)
!4915 = distinct !DILexicalBlock(scope: !4911, file: !629, line: 488, column: 68)
!4916 = !DILocation(line: 490, column: 9, scope: !4915)
!4917 = !DILocation(line: 502, column: 9, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4890, file: !629, line: 502, column: 9)
!4919 = !DILocation(line: 502, column: 9, scope: !4890)
!4920 = !DILocation(line: 504, column: 13, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4922, file: !629, line: 503, column: 44)
!4922 = distinct !DILexicalBlock(scope: !4923, file: !629, line: 503, column: 9)
!4923 = distinct !DILexicalBlock(scope: !4924, file: !629, line: 503, column: 9)
!4924 = distinct !DILexicalBlock(scope: !4918, file: !629, line: 502, column: 50)
!4925 = !DILocation(line: 504, column: 32, scope: !4921)
!4926 = !DILocation(line: 510, column: 32, scope: !4921)
!4927 = !DILocation(line: 510, column: 36, scope: !4921)
!4928 = !DILocation(line: 511, column: 32, scope: !4921)
!4929 = !DILocation(line: 511, column: 37, scope: !4921)
!4930 = !DILocation(line: 503, column: 40, scope: !4922)
!4931 = !DILocation(line: 503, column: 23, scope: !4922)
!4932 = !DILocation(line: 503, column: 9, scope: !4923)
!4933 = distinct !{!4933, !4932, !4934}
!4934 = !DILocation(line: 512, column: 9, scope: !4923)
!4935 = !DILocation(line: 513, column: 40, scope: !4924)
!4936 = !DILocation(line: 514, column: 5, scope: !4924)
!4937 = !DILocation(line: 521, column: 32, scope: !4890)
!4938 = !DILocation(line: 522, column: 5, scope: !4890)
!4939 = !DILocation(line: 524, column: 31, scope: !4890)
!4940 = !DILocation(line: 524, column: 14, scope: !4890)
!4941 = !DILocation(line: 525, column: 16, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4890, file: !629, line: 525, column: 9)
!4943 = !DILocation(line: 525, column: 9, scope: !4890)
!4944 = !DILocation(line: 526, column: 9, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4942, file: !629, line: 525, column: 40)
!4946 = !DILocation(line: 530, column: 13, scope: !4890)
!4947 = !DILocation(line: 532, column: 5, scope: !4890)
!4948 = !DILocation(line: 533, column: 56, scope: !4890)
!4949 = !DILocation(line: 533, column: 23, scope: !4890)
!4950 = !DILocation(line: 534, column: 5, scope: !4890)
!4951 = !DILocation(line: 535, column: 41, scope: !4890)
!4952 = !DILocation(line: 535, column: 67, scope: !4890)
!4953 = !DILocation(line: 535, column: 90, scope: !4890)
!4954 = !DILocation(line: 535, column: 5, scope: !4890)
!4955 = !DILocation(line: 536, column: 5, scope: !4890)
!4956 = !DILocation(line: 541, column: 5, scope: !4890)
!4957 = !DILocation(line: 542, column: 1, scope: !4890)
!4958 = distinct !DISubprogram(name: "hal_uart_deinit", scope: !629, file: !629, line: 544, type: !4959, scopeLine: 545, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !4961)
!4959 = !DISubroutineType(types: !4960)
!4960 = !{!4790, !735}
!4961 = !{!4962, !4963, !4964, !4965, !4966, !4967, !4968}
!4962 = !DILocalVariable(name: "uart_port", arg: 1, scope: !4958, file: !629, line: 544, type: !735)
!4963 = !DILocalVariable(name: "uartx", scope: !4958, file: !629, line: 546, type: !4597)
!4964 = !DILocalVariable(name: "tx_dma_channel", scope: !4958, file: !629, line: 547, type: !4592)
!4965 = !DILocalVariable(name: "rx_dma_channel", scope: !4958, file: !629, line: 547, type: !4592)
!4966 = !DILocalVariable(name: "irq_status", scope: !4958, file: !629, line: 548, type: !61)
!4967 = !DILocalVariable(name: "status", scope: !4958, file: !629, line: 549, type: !4653)
!4968 = !DILocalVariable(name: "clock_status", scope: !4958, file: !629, line: 550, type: !4902)
!4969 = !DILocation(line: 0, scope: !4958)
!4970 = !DILocation(line: 552, column: 10, scope: !4971)
!4971 = distinct !DILexicalBlock(scope: !4958, file: !629, line: 552, column: 9)
!4972 = !DILocation(line: 552, column: 9, scope: !4958)
!4973 = !DILocation(line: 556, column: 18, scope: !4958)
!4974 = !DILocation(line: 557, column: 9, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4958, file: !629, line: 557, column: 9)
!4976 = !DILocation(line: 557, column: 36, scope: !4975)
!4977 = !DILocation(line: 557, column: 9, scope: !4958)
!4978 = !DILocation(line: 562, column: 13, scope: !4958)
!4979 = !DILocation(line: 565, column: 5, scope: !4958)
!4980 = !DILocation(line: 568, column: 9, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4958, file: !629, line: 568, column: 9)
!4982 = !DILocation(line: 568, column: 36, scope: !4981)
!4983 = !DILocation(line: 568, column: 9, scope: !4958)
!4984 = !DILocation(line: 569, column: 26, scope: !4985)
!4985 = distinct !DILexicalBlock(scope: !4981, file: !629, line: 568, column: 70)
!4986 = !DILocation(line: 570, column: 26, scope: !4985)
!4987 = !DILocation(line: 572, column: 18, scope: !4985)
!4988 = !DILocation(line: 573, column: 20, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4985, file: !629, line: 573, column: 13)
!4990 = !DILocation(line: 573, column: 13, scope: !4985)
!4991 = !DILocation(line: 574, column: 13, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4989, file: !629, line: 573, column: 32)
!4993 = !DILocation(line: 575, column: 13, scope: !4992)
!4994 = !DILocation(line: 578, column: 18, scope: !4985)
!4995 = !DILocation(line: 579, column: 20, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4985, file: !629, line: 579, column: 13)
!4997 = !DILocation(line: 579, column: 13, scope: !4985)
!4998 = !DILocation(line: 580, column: 13, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4996, file: !629, line: 579, column: 32)
!5000 = !DILocation(line: 581, column: 13, scope: !4999)
!5001 = !DILocation(line: 584, column: 18, scope: !4985)
!5002 = !DILocation(line: 585, column: 20, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4985, file: !629, line: 585, column: 13)
!5004 = !DILocation(line: 585, column: 13, scope: !4985)
!5005 = !DILocation(line: 586, column: 13, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5003, file: !629, line: 585, column: 32)
!5007 = !DILocation(line: 587, column: 13, scope: !5006)
!5008 = !DILocation(line: 590, column: 18, scope: !4985)
!5009 = !DILocation(line: 591, column: 20, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4985, file: !629, line: 591, column: 13)
!5011 = !DILocation(line: 591, column: 13, scope: !4985)
!5012 = !DILocation(line: 592, column: 13, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5010, file: !629, line: 591, column: 32)
!5014 = !DILocation(line: 593, column: 13, scope: !5013)
!5015 = !DILocation(line: 596, column: 18, scope: !4985)
!5016 = !DILocation(line: 597, column: 20, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4985, file: !629, line: 597, column: 13)
!5018 = !DILocation(line: 597, column: 13, scope: !4985)
!5019 = !DILocation(line: 598, column: 13, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !629, line: 597, column: 32)
!5021 = !DILocation(line: 599, column: 13, scope: !5020)
!5022 = !DILocation(line: 602, column: 18, scope: !4985)
!5023 = !DILocation(line: 603, column: 20, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4985, file: !629, line: 603, column: 13)
!5025 = !DILocation(line: 603, column: 13, scope: !4985)
!5026 = !DILocation(line: 604, column: 13, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5024, file: !629, line: 603, column: 32)
!5028 = !DILocation(line: 605, column: 13, scope: !5027)
!5029 = !DILocation(line: 608, column: 30, scope: !4985)
!5030 = !DILocation(line: 608, column: 9, scope: !4985)
!5031 = !DILocation(line: 609, column: 5, scope: !4985)
!5032 = !DILocation(line: 610, column: 5, scope: !4958)
!5033 = !DILocation(line: 611, column: 38, scope: !4958)
!5034 = !DILocation(line: 611, column: 20, scope: !4958)
!5035 = !DILocation(line: 612, column: 22, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !4958, file: !629, line: 612, column: 9)
!5037 = !DILocation(line: 612, column: 9, scope: !4958)
!5038 = !DILocation(line: 613, column: 9, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !5036, file: !629, line: 612, column: 46)
!5040 = !DILocation(line: 614, column: 9, scope: !5039)
!5041 = !DILocation(line: 618, column: 32, scope: !4958)
!5042 = !DILocation(line: 618, column: 37, scope: !4958)
!5043 = !DILocation(line: 619, column: 32, scope: !4958)
!5044 = !DILocation(line: 619, column: 36, scope: !4958)
!5045 = !DILocation(line: 635, column: 32, scope: !4958)
!5046 = !DILocation(line: 639, column: 5, scope: !4958)
!5047 = !DILocation(line: 640, column: 1, scope: !4958)
!5048 = distinct !DISubprogram(name: "hal_uart_put_char", scope: !629, file: !629, line: 642, type: !5049, scopeLine: 643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5051)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{null, !735, !1630}
!5051 = !{!5052, !5053, !5054}
!5052 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5048, file: !629, line: 642, type: !735)
!5053 = !DILocalVariable(name: "byte", arg: 2, scope: !5048, file: !629, line: 642, type: !1630)
!5054 = !DILocalVariable(name: "uartx", scope: !5048, file: !629, line: 644, type: !4597)
!5055 = !DILocation(line: 0, scope: !5048)
!5056 = !DILocation(line: 646, column: 10, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5048, file: !629, line: 646, column: 9)
!5058 = !DILocation(line: 646, column: 9, scope: !5048)
!5059 = !DILocation(line: 650, column: 9, scope: !5060)
!5060 = distinct !DILexicalBlock(scope: !5048, file: !629, line: 650, column: 9)
!5061 = !DILocation(line: 650, column: 36, scope: !5060)
!5062 = !DILocation(line: 650, column: 9, scope: !5048)
!5063 = !DILocation(line: 654, column: 13, scope: !5048)
!5064 = !DILocation(line: 655, column: 5, scope: !5048)
!5065 = !DILocation(line: 656, column: 1, scope: !5048)
!5066 = distinct !DISubprogram(name: "hal_uart_send_polling", scope: !629, file: !629, line: 658, type: !5067, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5071)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{!61, !735, !5069, !61}
!5069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5070, size: 32)
!5070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!5071 = !{!5072, !5073, !5074, !5075}
!5072 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5066, file: !629, line: 658, type: !735)
!5073 = !DILocalVariable(name: "data", arg: 2, scope: !5066, file: !629, line: 658, type: !5069)
!5074 = !DILocalVariable(name: "size", arg: 3, scope: !5066, file: !629, line: 658, type: !61)
!5075 = !DILocalVariable(name: "i", scope: !5066, file: !629, line: 660, type: !61)
!5076 = !DILocation(line: 0, scope: !5066)
!5077 = !DILocation(line: 662, column: 11, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5066, file: !629, line: 662, column: 9)
!5079 = !DILocation(line: 662, column: 42, scope: !5078)
!5080 = !DILocation(line: 666, column: 9, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5066, file: !629, line: 666, column: 9)
!5082 = !DILocation(line: 666, column: 36, scope: !5081)
!5083 = !DILocation(line: 666, column: 9, scope: !5066)
!5084 = !DILocation(line: 671, column: 38, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5086, file: !629, line: 670, column: 32)
!5086 = distinct !DILexicalBlock(scope: !5087, file: !629, line: 670, column: 5)
!5087 = distinct !DILexicalBlock(scope: !5066, file: !629, line: 670, column: 5)
!5088 = !DILocation(line: 671, column: 9, scope: !5085)
!5089 = !DILocation(line: 672, column: 13, scope: !5085)
!5090 = !DILocation(line: 670, column: 28, scope: !5086)
!5091 = !DILocation(line: 670, column: 19, scope: !5086)
!5092 = !DILocation(line: 670, column: 5, scope: !5087)
!5093 = distinct !{!5093, !5092, !5094}
!5094 = !DILocation(line: 673, column: 5, scope: !5087)
!5095 = !DILocation(line: 676, column: 1, scope: !5066)
!5096 = distinct !DISubprogram(name: "hal_uart_send_dma", scope: !629, file: !629, line: 678, type: !5067, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5097)
!5097 = !{!5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105}
!5098 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5096, file: !629, line: 678, type: !735)
!5099 = !DILocalVariable(name: "data", arg: 2, scope: !5096, file: !629, line: 678, type: !5069)
!5100 = !DILocalVariable(name: "size", arg: 3, scope: !5096, file: !629, line: 678, type: !61)
!5101 = !DILocalVariable(name: "channel", scope: !5096, file: !629, line: 680, type: !4592)
!5102 = !DILocalVariable(name: "i", scope: !5096, file: !629, line: 681, type: !61)
!5103 = !DILocalVariable(name: "real_count", scope: !5096, file: !629, line: 681, type: !61)
!5104 = !DILocalVariable(name: "avail_space", scope: !5096, file: !629, line: 681, type: !61)
!5105 = !DILocalVariable(name: "status", scope: !5096, file: !629, line: 682, type: !4653)
!5106 = !DILocation(line: 0, scope: !5096)
!5107 = !DILocation(line: 681, column: 5, scope: !5096)
!5108 = !DILocation(line: 687, column: 11, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5096, file: !629, line: 687, column: 9)
!5110 = !DILocation(line: 687, column: 42, scope: !5109)
!5111 = !DILocation(line: 691, column: 9, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5096, file: !629, line: 691, column: 9)
!5113 = !DILocation(line: 691, column: 36, scope: !5112)
!5114 = !DILocation(line: 691, column: 9, scope: !5096)
!5115 = !DILocation(line: 704, column: 15, scope: !5096)
!5116 = !DILocation(line: 706, column: 14, scope: !5096)
!5117 = !DILocation(line: 707, column: 16, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5096, file: !629, line: 707, column: 9)
!5119 = !DILocation(line: 707, column: 9, scope: !5096)
!5120 = !DILocation(line: 708, column: 9, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5118, file: !629, line: 707, column: 28)
!5122 = !DILocation(line: 712, column: 9, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5096, file: !629, line: 712, column: 9)
!5124 = !DILocation(line: 712, column: 21, scope: !5123)
!5125 = !DILocation(line: 717, column: 19, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5127, file: !629, line: 717, column: 5)
!5127 = distinct !DILexicalBlock(scope: !5096, file: !629, line: 717, column: 5)
!5128 = !DILocation(line: 717, column: 5, scope: !5127)
!5129 = distinct !{!5129, !5128, !5130}
!5130 = !DILocation(line: 723, column: 5, scope: !5127)
!5131 = !DILocation(line: 718, column: 42, scope: !5132)
!5132 = distinct !DILexicalBlock(scope: !5126, file: !629, line: 717, column: 38)
!5133 = !DILocation(line: 718, column: 18, scope: !5132)
!5134 = !DILocation(line: 719, column: 20, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5132, file: !629, line: 719, column: 13)
!5136 = !DILocation(line: 717, column: 34, scope: !5126)
!5137 = !DILocation(line: 719, column: 13, scope: !5132)
!5138 = !DILocation(line: 720, column: 13, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5135, file: !629, line: 719, column: 32)
!5140 = !DILocation(line: 728, column: 23, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5096, file: !629, line: 728, column: 9)
!5142 = !DILocation(line: 728, column: 20, scope: !5141)
!5143 = !DILocation(line: 728, column: 9, scope: !5096)
!5144 = !DILocation(line: 729, column: 18, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5141, file: !629, line: 728, column: 36)
!5146 = !DILocation(line: 730, column: 20, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5145, file: !629, line: 730, column: 13)
!5148 = !DILocation(line: 730, column: 13, scope: !5145)
!5149 = !DILocation(line: 731, column: 13, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5147, file: !629, line: 730, column: 32)
!5151 = !DILocation(line: 737, column: 1, scope: !5096)
!5152 = distinct !DISubprogram(name: "hal_uart_get_char", scope: !629, file: !629, line: 739, type: !5153, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5155)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{!1630, !735}
!5155 = !{!5156, !5157, !5158}
!5156 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5152, file: !629, line: 739, type: !735)
!5157 = !DILocalVariable(name: "data", scope: !5152, file: !629, line: 741, type: !1630)
!5158 = !DILocalVariable(name: "uartx", scope: !5152, file: !629, line: 742, type: !4597)
!5159 = !DILocation(line: 0, scope: !5152)
!5160 = !DILocation(line: 744, column: 10, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5152, file: !629, line: 744, column: 9)
!5162 = !DILocation(line: 744, column: 9, scope: !5152)
!5163 = !DILocation(line: 748, column: 9, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5152, file: !629, line: 748, column: 9)
!5165 = !DILocation(line: 748, column: 36, scope: !5164)
!5166 = !DILocation(line: 748, column: 9, scope: !5152)
!5167 = !DILocation(line: 752, column: 13, scope: !5152)
!5168 = !DILocation(line: 754, column: 12, scope: !5152)
!5169 = !DILocation(line: 756, column: 5, scope: !5152)
!5170 = !DILocation(line: 757, column: 1, scope: !5152)
!5171 = distinct !DISubprogram(name: "hal_uart_get_char_unblocking", scope: !629, file: !629, line: 759, type: !5172, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5174)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{!61, !735}
!5174 = !{!5175, !5176, !5177}
!5175 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5171, file: !629, line: 759, type: !735)
!5176 = !DILocalVariable(name: "data", scope: !5171, file: !629, line: 761, type: !61)
!5177 = !DILocalVariable(name: "uartx", scope: !5171, file: !629, line: 762, type: !4597)
!5178 = !DILocation(line: 0, scope: !5171)
!5179 = !DILocation(line: 764, column: 10, scope: !5180)
!5180 = distinct !DILexicalBlock(scope: !5171, file: !629, line: 764, column: 9)
!5181 = !DILocation(line: 764, column: 9, scope: !5171)
!5182 = !DILocation(line: 768, column: 9, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !5171, file: !629, line: 768, column: 9)
!5184 = !DILocation(line: 768, column: 36, scope: !5183)
!5185 = !DILocation(line: 768, column: 9, scope: !5171)
!5186 = !DILocation(line: 772, column: 13, scope: !5171)
!5187 = !DILocation(line: 774, column: 12, scope: !5171)
!5188 = !DILocation(line: 776, column: 5, scope: !5171)
!5189 = !DILocation(line: 777, column: 1, scope: !5171)
!5190 = distinct !DISubprogram(name: "hal_uart_receive_polling", scope: !629, file: !629, line: 779, type: !5191, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5193)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!61, !735, !762, !61}
!5193 = !{!5194, !5195, !5196, !5197, !5198}
!5194 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5190, file: !629, line: 779, type: !735)
!5195 = !DILocalVariable(name: "buffer", arg: 2, scope: !5190, file: !629, line: 779, type: !762)
!5196 = !DILocalVariable(name: "size", arg: 3, scope: !5190, file: !629, line: 779, type: !61)
!5197 = !DILocalVariable(name: "i", scope: !5190, file: !629, line: 781, type: !61)
!5198 = !DILocalVariable(name: "pbuf", scope: !5190, file: !629, line: 782, type: !762)
!5199 = !DILocation(line: 0, scope: !5190)
!5200 = !DILocation(line: 784, column: 11, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5190, file: !629, line: 784, column: 9)
!5202 = !DILocation(line: 784, column: 42, scope: !5201)
!5203 = !DILocation(line: 789, column: 9, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5190, file: !629, line: 789, column: 9)
!5205 = !DILocation(line: 789, column: 36, scope: !5204)
!5206 = !DILocation(line: 789, column: 9, scope: !5190)
!5207 = !DILocation(line: 794, column: 19, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !5209, file: !629, line: 793, column: 32)
!5209 = distinct !DILexicalBlock(scope: !5210, file: !629, line: 793, column: 5)
!5210 = distinct !DILexicalBlock(scope: !5190, file: !629, line: 793, column: 5)
!5211 = !DILocation(line: 794, column: 9, scope: !5208)
!5212 = !DILocation(line: 794, column: 17, scope: !5208)
!5213 = !DILocation(line: 793, column: 28, scope: !5209)
!5214 = !DILocation(line: 793, column: 19, scope: !5209)
!5215 = !DILocation(line: 793, column: 5, scope: !5210)
!5216 = distinct !{!5216, !5215, !5217}
!5217 = !DILocation(line: 795, column: 5, scope: !5210)
!5218 = !DILocation(line: 798, column: 1, scope: !5190)
!5219 = distinct !DISubprogram(name: "hal_uart_receive_dma", scope: !629, file: !629, line: 800, type: !5191, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5220)
!5220 = !{!5221, !5222, !5223, !5224, !5225, !5226, !5227, !5228}
!5221 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5219, file: !629, line: 800, type: !735)
!5222 = !DILocalVariable(name: "buffer", arg: 2, scope: !5219, file: !629, line: 800, type: !762)
!5223 = !DILocalVariable(name: "size", arg: 3, scope: !5219, file: !629, line: 800, type: !61)
!5224 = !DILocalVariable(name: "channel", scope: !5219, file: !629, line: 802, type: !4592)
!5225 = !DILocalVariable(name: "receive_count", scope: !5219, file: !629, line: 803, type: !61)
!5226 = !DILocalVariable(name: "avail_count", scope: !5219, file: !629, line: 803, type: !61)
!5227 = !DILocalVariable(name: "index", scope: !5219, file: !629, line: 804, type: !61)
!5228 = !DILocalVariable(name: "status", scope: !5219, file: !629, line: 805, type: !4653)
!5229 = !DILocation(line: 0, scope: !5219)
!5230 = !DILocation(line: 803, column: 5, scope: !5219)
!5231 = !DILocation(line: 807, column: 11, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5219, file: !629, line: 807, column: 9)
!5233 = !DILocation(line: 807, column: 42, scope: !5232)
!5234 = !DILocation(line: 813, column: 9, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5219, file: !629, line: 813, column: 9)
!5236 = !DILocation(line: 813, column: 36, scope: !5235)
!5237 = !DILocation(line: 813, column: 9, scope: !5219)
!5238 = !DILocation(line: 817, column: 15, scope: !5219)
!5239 = !DILocation(line: 819, column: 14, scope: !5219)
!5240 = !DILocation(line: 820, column: 16, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5219, file: !629, line: 820, column: 9)
!5242 = !DILocation(line: 820, column: 9, scope: !5219)
!5243 = !DILocation(line: 821, column: 9, scope: !5244)
!5244 = distinct !DILexicalBlock(scope: !5241, file: !629, line: 820, column: 28)
!5245 = !DILocation(line: 825, column: 9, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5219, file: !629, line: 825, column: 9)
!5247 = !DILocation(line: 825, column: 21, scope: !5246)
!5248 = !DILocation(line: 830, column: 27, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5250, file: !629, line: 830, column: 5)
!5250 = distinct !DILexicalBlock(scope: !5219, file: !629, line: 830, column: 5)
!5251 = !DILocation(line: 830, column: 5, scope: !5250)
!5252 = distinct !{!5252, !5251, !5253}
!5253 = !DILocation(line: 836, column: 5, scope: !5250)
!5254 = !DILocation(line: 831, column: 42, scope: !5255)
!5255 = distinct !DILexicalBlock(scope: !5249, file: !629, line: 830, column: 53)
!5256 = !DILocation(line: 831, column: 18, scope: !5255)
!5257 = !DILocation(line: 832, column: 20, scope: !5258)
!5258 = distinct !DILexicalBlock(scope: !5255, file: !629, line: 832, column: 13)
!5259 = !DILocation(line: 830, column: 49, scope: !5249)
!5260 = !DILocation(line: 832, column: 13, scope: !5255)
!5261 = !DILocation(line: 833, column: 13, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !5258, file: !629, line: 832, column: 32)
!5263 = !DILocation(line: 841, column: 26, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5219, file: !629, line: 841, column: 9)
!5265 = !DILocation(line: 841, column: 23, scope: !5264)
!5266 = !DILocation(line: 841, column: 9, scope: !5219)
!5267 = !DILocation(line: 842, column: 18, scope: !5268)
!5268 = distinct !DILexicalBlock(scope: !5264, file: !629, line: 841, column: 39)
!5269 = !DILocation(line: 843, column: 20, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5268, file: !629, line: 843, column: 13)
!5271 = !DILocation(line: 843, column: 13, scope: !5268)
!5272 = !DILocation(line: 844, column: 13, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5270, file: !629, line: 843, column: 32)
!5274 = !DILocation(line: 850, column: 1, scope: !5219)
!5275 = distinct !DISubprogram(name: "hal_uart_register_callback", scope: !629, file: !629, line: 891, type: !5276, scopeLine: 894, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5278)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{!4790, !735, !744, !88}
!5278 = !{!5279, !5280, !5281, !5282, !5283, !5284, !5285, !5286}
!5279 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5275, file: !629, line: 891, type: !735)
!5280 = !DILocalVariable(name: "user_callback", arg: 2, scope: !5275, file: !629, line: 892, type: !744)
!5281 = !DILocalVariable(name: "user_data", arg: 3, scope: !5275, file: !629, line: 893, type: !88)
!5282 = !DILocalVariable(name: "tx_dma_channel", scope: !5275, file: !629, line: 895, type: !4592)
!5283 = !DILocalVariable(name: "rx_dma_channel", scope: !5275, file: !629, line: 895, type: !4592)
!5284 = !DILocalVariable(name: "irq_status", scope: !5275, file: !629, line: 896, type: !61)
!5285 = !DILocalVariable(name: "status", scope: !5275, file: !629, line: 897, type: !4653)
!5286 = !DILocalVariable(name: "nvic_status", scope: !5275, file: !629, line: 898, type: !1024)
!5287 = !DILocation(line: 0, scope: !5275)
!5288 = !DILocation(line: 900, column: 11, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5275, file: !629, line: 900, column: 9)
!5290 = !DILocation(line: 900, column: 42, scope: !5289)
!5291 = !DILocation(line: 905, column: 18, scope: !5275)
!5292 = !DILocation(line: 906, column: 9, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5275, file: !629, line: 906, column: 9)
!5294 = !DILocation(line: 906, column: 36, scope: !5293)
!5295 = !DILocation(line: 906, column: 9, scope: !5275)
!5296 = !DILocation(line: 911, column: 22, scope: !5275)
!5297 = !DILocation(line: 912, column: 22, scope: !5275)
!5298 = !DILocation(line: 914, column: 32, scope: !5275)
!5299 = !DILocation(line: 914, column: 37, scope: !5275)
!5300 = !DILocation(line: 915, column: 32, scope: !5275)
!5301 = !DILocation(line: 915, column: 36, scope: !5275)
!5302 = !DILocation(line: 917, column: 91, scope: !5275)
!5303 = !DILocation(line: 917, column: 56, scope: !5275)
!5304 = !DILocation(line: 917, column: 5, scope: !5275)
!5305 = !DILocation(line: 918, column: 80, scope: !5275)
!5306 = !DILocation(line: 918, column: 14, scope: !5275)
!5307 = !DILocation(line: 919, column: 16, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5275, file: !629, line: 919, column: 9)
!5309 = !DILocation(line: 919, column: 9, scope: !5275)
!5310 = !DILocation(line: 920, column: 9, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5308, file: !629, line: 919, column: 28)
!5312 = !DILocation(line: 921, column: 9, scope: !5311)
!5313 = !DILocation(line: 924, column: 97, scope: !5275)
!5314 = !DILocation(line: 924, column: 56, scope: !5275)
!5315 = !DILocation(line: 924, column: 5, scope: !5275)
!5316 = !DILocation(line: 925, column: 80, scope: !5275)
!5317 = !DILocation(line: 925, column: 14, scope: !5275)
!5318 = !DILocation(line: 926, column: 16, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !5275, file: !629, line: 926, column: 9)
!5320 = !DILocation(line: 926, column: 9, scope: !5275)
!5321 = !DILocation(line: 927, column: 9, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5319, file: !629, line: 926, column: 28)
!5323 = !DILocation(line: 928, column: 9, scope: !5322)
!5324 = !DILocation(line: 931, column: 49, scope: !5275)
!5325 = !DILocation(line: 931, column: 19, scope: !5275)
!5326 = !DILocation(line: 932, column: 21, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5275, file: !629, line: 932, column: 9)
!5328 = !DILocation(line: 932, column: 9, scope: !5275)
!5329 = !DILocation(line: 933, column: 9, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5327, file: !629, line: 932, column: 44)
!5331 = !DILocation(line: 934, column: 9, scope: !5330)
!5332 = !DILocation(line: 938, column: 5, scope: !5275)
!5333 = !DILocation(line: 940, column: 32, scope: !5275)
!5334 = !DILocation(line: 944, column: 5, scope: !5275)
!5335 = !DILocation(line: 945, column: 1, scope: !5275)
!5336 = distinct !DISubprogram(name: "uart_dma_callback_handler", scope: !629, file: !629, line: 303, type: !5337, scopeLine: 304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5340)
!5337 = !DISubroutineType(types: !5338)
!5338 = !{null, !5339, !88}
!5339 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_event_t", file: !639, line: 225, baseType: !723)
!5340 = !{!5341, !5342, !5343}
!5341 = !DILocalVariable(name: "event", arg: 1, scope: !5336, file: !629, line: 303, type: !5339)
!5342 = !DILocalVariable(name: "user_data", arg: 2, scope: !5336, file: !629, line: 303, type: !88)
!5343 = !DILocalVariable(name: "callback_data", scope: !5336, file: !629, line: 305, type: !728)
!5344 = !DILocation(line: 0, scope: !5336)
!5345 = !DILocation(line: 307, column: 24, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5336, file: !629, line: 307, column: 9)
!5347 = !DILocation(line: 0, scope: !5346)
!5348 = !DILocation(line: 307, column: 9, scope: !5336)
!5349 = !DILocation(line: 308, column: 9, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5346, file: !629, line: 307, column: 39)
!5351 = !DILocation(line: 309, column: 5, scope: !5350)
!5352 = !DILocation(line: 310, column: 9, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5346, file: !629, line: 309, column: 12)
!5354 = !DILocation(line: 312, column: 1, scope: !5336)
!5355 = distinct !DISubprogram(name: "uart_start_dma_transmission", scope: !629, file: !629, line: 852, type: !4762, scopeLine: 853, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5356)
!5356 = !{!5357, !5358, !5359, !5360, !5361}
!5357 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5355, file: !629, line: 852, type: !735)
!5358 = !DILocalVariable(name: "uartx", scope: !5355, file: !629, line: 854, type: !4597)
!5359 = !DILocalVariable(name: "tx_dma_channel", scope: !5355, file: !629, line: 855, type: !4592)
!5360 = !DILocalVariable(name: "rx_dma_channel", scope: !5355, file: !629, line: 855, type: !4592)
!5361 = !DILocalVariable(name: "status", scope: !5355, file: !629, line: 856, type: !4653)
!5362 = !DILocation(line: 0, scope: !5355)
!5363 = !DILocation(line: 858, column: 13, scope: !5355)
!5364 = !DILocation(line: 859, column: 22, scope: !5355)
!5365 = !DILocation(line: 860, column: 22, scope: !5355)
!5366 = !DILocation(line: 866, column: 5, scope: !5355)
!5367 = !DILocation(line: 867, column: 25, scope: !5355)
!5368 = !DILocation(line: 867, column: 5, scope: !5355)
!5369 = !DILocation(line: 868, column: 14, scope: !5355)
!5370 = !DILocation(line: 869, column: 16, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5355, file: !629, line: 869, column: 9)
!5372 = !DILocation(line: 869, column: 9, scope: !5355)
!5373 = !DILocation(line: 870, column: 9, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5371, file: !629, line: 869, column: 28)
!5375 = !DILocation(line: 873, column: 14, scope: !5355)
!5376 = !DILocation(line: 874, column: 16, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5355, file: !629, line: 874, column: 9)
!5378 = !DILocation(line: 874, column: 9, scope: !5355)
!5379 = !DILocation(line: 875, column: 9, scope: !5380)
!5380 = distinct !DILexicalBlock(scope: !5377, file: !629, line: 874, column: 28)
!5381 = !DILocation(line: 878, column: 14, scope: !5355)
!5382 = !DILocation(line: 879, column: 16, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5355, file: !629, line: 879, column: 9)
!5384 = !DILocation(line: 879, column: 9, scope: !5355)
!5385 = !DILocation(line: 880, column: 9, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5383, file: !629, line: 879, column: 28)
!5387 = !DILocation(line: 883, column: 14, scope: !5355)
!5388 = !DILocation(line: 884, column: 16, scope: !5389)
!5389 = distinct !DILexicalBlock(scope: !5355, file: !629, line: 884, column: 9)
!5390 = !DILocation(line: 884, column: 9, scope: !5355)
!5391 = !DILocation(line: 885, column: 9, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5389, file: !629, line: 884, column: 28)
!5393 = !DILocation(line: 888, column: 5, scope: !5355)
!5394 = !DILocation(line: 889, column: 1, scope: !5355)
!5395 = distinct !DISubprogram(name: "hal_uart_get_available_send_space", scope: !629, file: !629, line: 947, type: !5172, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5396)
!5396 = !{!5397, !5398, !5399, !5400}
!5397 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5395, file: !629, line: 947, type: !735)
!5398 = !DILocalVariable(name: "channel", scope: !5395, file: !629, line: 949, type: !4592)
!5399 = !DILocalVariable(name: "roomleft", scope: !5395, file: !629, line: 950, type: !61)
!5400 = !DILocalVariable(name: "status", scope: !5395, file: !629, line: 951, type: !4653)
!5401 = !DILocation(line: 0, scope: !5395)
!5402 = !DILocation(line: 950, column: 5, scope: !5395)
!5403 = !DILocation(line: 953, column: 10, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5395, file: !629, line: 953, column: 9)
!5405 = !DILocation(line: 953, column: 9, scope: !5395)
!5406 = !DILocation(line: 957, column: 9, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5395, file: !629, line: 957, column: 9)
!5408 = !DILocation(line: 957, column: 36, scope: !5407)
!5409 = !DILocation(line: 957, column: 9, scope: !5395)
!5410 = !DILocation(line: 961, column: 15, scope: !5395)
!5411 = !DILocation(line: 962, column: 14, scope: !5395)
!5412 = !DILocation(line: 963, column: 16, scope: !5413)
!5413 = distinct !DILexicalBlock(scope: !5395, file: !629, line: 963, column: 9)
!5414 = !DILocation(line: 963, column: 9, scope: !5395)
!5415 = !DILocation(line: 964, column: 9, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5413, file: !629, line: 963, column: 28)
!5417 = !DILocation(line: 968, column: 12, scope: !5395)
!5418 = !DILocation(line: 968, column: 5, scope: !5395)
!5419 = !DILocation(line: 969, column: 1, scope: !5395)
!5420 = distinct !DISubprogram(name: "hal_uart_get_available_receive_bytes", scope: !629, file: !629, line: 971, type: !5172, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5421)
!5421 = !{!5422, !5423, !5424, !5425}
!5422 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5420, file: !629, line: 971, type: !735)
!5423 = !DILocalVariable(name: "channel", scope: !5420, file: !629, line: 973, type: !4592)
!5424 = !DILocalVariable(name: "avail", scope: !5420, file: !629, line: 974, type: !61)
!5425 = !DILocalVariable(name: "status", scope: !5420, file: !629, line: 975, type: !4653)
!5426 = !DILocation(line: 0, scope: !5420)
!5427 = !DILocation(line: 974, column: 5, scope: !5420)
!5428 = !DILocation(line: 977, column: 10, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5420, file: !629, line: 977, column: 9)
!5430 = !DILocation(line: 977, column: 9, scope: !5420)
!5431 = !DILocation(line: 981, column: 9, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5420, file: !629, line: 981, column: 9)
!5433 = !DILocation(line: 981, column: 36, scope: !5432)
!5434 = !DILocation(line: 981, column: 9, scope: !5420)
!5435 = !DILocation(line: 985, column: 15, scope: !5420)
!5436 = !DILocation(line: 986, column: 14, scope: !5420)
!5437 = !DILocation(line: 987, column: 16, scope: !5438)
!5438 = distinct !DILexicalBlock(scope: !5420, file: !629, line: 987, column: 9)
!5439 = !DILocation(line: 987, column: 9, scope: !5420)
!5440 = !DILocation(line: 988, column: 9, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5438, file: !629, line: 987, column: 28)
!5442 = !DILocation(line: 992, column: 12, scope: !5420)
!5443 = !DILocation(line: 992, column: 5, scope: !5420)
!5444 = !DILocation(line: 993, column: 1, scope: !5420)
!5445 = distinct !DISubprogram(name: "hal_uart_set_hardware_flowcontrol", scope: !629, file: !629, line: 995, type: !4959, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5446)
!5446 = !{!5447, !5448}
!5447 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5445, file: !629, line: 995, type: !735)
!5448 = !DILocalVariable(name: "uartx", scope: !5445, file: !629, line: 997, type: !4597)
!5449 = !DILocation(line: 0, scope: !5445)
!5450 = !DILocation(line: 999, column: 10, scope: !5451)
!5451 = distinct !DILexicalBlock(scope: !5445, file: !629, line: 999, column: 9)
!5452 = !DILocation(line: 999, column: 9, scope: !5445)
!5453 = !DILocation(line: 1003, column: 9, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5445, file: !629, line: 1003, column: 9)
!5455 = !DILocation(line: 1003, column: 36, scope: !5454)
!5456 = !DILocation(line: 1003, column: 9, scope: !5445)
!5457 = !DILocation(line: 1007, column: 13, scope: !5445)
!5458 = !DILocation(line: 1009, column: 5, scope: !5445)
!5459 = !DILocation(line: 1015, column: 5, scope: !5445)
!5460 = !DILocation(line: 1016, column: 1, scope: !5445)
!5461 = distinct !DISubprogram(name: "hal_uart_set_software_flowcontrol", scope: !629, file: !629, line: 1018, type: !5462, scopeLine: 1022, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5464)
!5462 = !DISubroutineType(types: !5463)
!5463 = !{!4790, !735, !460, !460, !460}
!5464 = !{!5465, !5466, !5467, !5468, !5469}
!5465 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5461, file: !629, line: 1018, type: !735)
!5466 = !DILocalVariable(name: "xon", arg: 2, scope: !5461, file: !629, line: 1019, type: !460)
!5467 = !DILocalVariable(name: "xoff", arg: 3, scope: !5461, file: !629, line: 1020, type: !460)
!5468 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5461, file: !629, line: 1021, type: !460)
!5469 = !DILocalVariable(name: "uartx", scope: !5461, file: !629, line: 1023, type: !4597)
!5470 = !DILocation(line: 0, scope: !5461)
!5471 = !DILocation(line: 1025, column: 10, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5461, file: !629, line: 1025, column: 9)
!5473 = !DILocation(line: 1025, column: 9, scope: !5461)
!5474 = !DILocation(line: 1029, column: 9, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5461, file: !629, line: 1029, column: 9)
!5476 = !DILocation(line: 1029, column: 36, scope: !5475)
!5477 = !DILocation(line: 1029, column: 9, scope: !5461)
!5478 = !DILocation(line: 1033, column: 13, scope: !5461)
!5479 = !DILocation(line: 1035, column: 5, scope: !5461)
!5480 = !DILocation(line: 1044, column: 5, scope: !5461)
!5481 = !DILocation(line: 1045, column: 1, scope: !5461)
!5482 = distinct !DISubprogram(name: "hal_uart_disable_flowcontrol", scope: !629, file: !629, line: 1047, type: !4959, scopeLine: 1048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5483)
!5483 = !{!5484, !5485}
!5484 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5482, file: !629, line: 1047, type: !735)
!5485 = !DILocalVariable(name: "uartx", scope: !5482, file: !629, line: 1049, type: !4597)
!5486 = !DILocation(line: 0, scope: !5482)
!5487 = !DILocation(line: 1051, column: 10, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5482, file: !629, line: 1051, column: 9)
!5489 = !DILocation(line: 1051, column: 9, scope: !5482)
!5490 = !DILocation(line: 1055, column: 9, scope: !5491)
!5491 = distinct !DILexicalBlock(scope: !5482, file: !629, line: 1055, column: 9)
!5492 = !DILocation(line: 1055, column: 36, scope: !5491)
!5493 = !DILocation(line: 1055, column: 9, scope: !5482)
!5494 = !DILocation(line: 1059, column: 13, scope: !5482)
!5495 = !DILocation(line: 1061, column: 5, scope: !5482)
!5496 = !DILocation(line: 1067, column: 5, scope: !5482)
!5497 = !DILocation(line: 1068, column: 1, scope: !5482)
!5498 = distinct !DISubprogram(name: "hal_uart_set_dma", scope: !629, file: !629, line: 1071, type: !5499, scopeLine: 1072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !628, retainedNodes: !5503)
!5499 = !DISubroutineType(types: !5500)
!5500 = !{!4790, !735, !5501}
!5501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5502, size: 32)
!5502 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !758)
!5503 = !{!5504, !5505, !5506, !5507, !5513, !5514, !5515}
!5504 = !DILocalVariable(name: "uart_port", arg: 1, scope: !5498, file: !629, line: 1071, type: !735)
!5505 = !DILocalVariable(name: "dma_config", arg: 2, scope: !5498, file: !629, line: 1071, type: !5501)
!5506 = !DILocalVariable(name: "irq_status", scope: !5498, file: !629, line: 1073, type: !61)
!5507 = !DILocalVariable(name: "internal_dma_config", scope: !5498, file: !629, line: 1074, type: !5508)
!5508 = !DIDerivedType(tag: DW_TAG_typedef, name: "vdma_config_t", file: !639, line: 283, baseType: !5509)
!5509 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !639, line: 280, size: 64, elements: !5510)
!5510 = !{!5511, !5512}
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !5509, file: !639, line: 281, baseType: !61, size: 32)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5509, file: !639, line: 282, baseType: !61, size: 32, offset: 32)
!5513 = !DILocalVariable(name: "tx_dma_channel", scope: !5498, file: !629, line: 1075, type: !4592)
!5514 = !DILocalVariable(name: "rx_dma_channel", scope: !5498, file: !629, line: 1075, type: !4592)
!5515 = !DILocalVariable(name: "status", scope: !5498, file: !629, line: 1076, type: !4653)
!5516 = !DILocation(line: 0, scope: !5498)
!5517 = !DILocation(line: 1074, column: 5, scope: !5498)
!5518 = !DILocation(line: 1074, column: 19, scope: !5498)
!5519 = !DILocation(line: 1078, column: 10, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1078, column: 9)
!5521 = !DILocation(line: 1078, column: 9, scope: !5498)
!5522 = !DILocation(line: 1081, column: 22, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1081, column: 9)
!5524 = !DILocation(line: 1081, column: 40, scope: !5523)
!5525 = !DILocation(line: 1081, column: 49, scope: !5523)
!5526 = !DILocation(line: 1082, column: 22, scope: !5523)
!5527 = !DILocation(line: 1082, column: 43, scope: !5523)
!5528 = !DILocation(line: 1081, column: 9, scope: !5498)
!5529 = !DILocation(line: 1085, column: 22, scope: !5530)
!5530 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1085, column: 9)
!5531 = !DILocation(line: 1085, column: 45, scope: !5530)
!5532 = !DILocation(line: 1085, column: 76, scope: !5530)
!5533 = !DILocation(line: 1086, column: 22, scope: !5530)
!5534 = !DILocation(line: 1086, column: 48, scope: !5530)
!5535 = !DILocation(line: 1086, column: 79, scope: !5530)
!5536 = !DILocation(line: 1090, column: 22, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1090, column: 9)
!5538 = !DILocation(line: 1090, column: 48, scope: !5537)
!5539 = !DILocation(line: 1090, column: 79, scope: !5537)
!5540 = !DILocation(line: 1091, column: 22, scope: !5537)
!5541 = !DILocation(line: 1091, column: 51, scope: !5537)
!5542 = !DILocation(line: 1091, column: 82, scope: !5537)
!5543 = !DILocation(line: 1092, column: 22, scope: !5537)
!5544 = !DILocation(line: 1092, column: 47, scope: !5537)
!5545 = !DILocation(line: 1092, column: 78, scope: !5537)
!5546 = !DILocation(line: 1098, column: 9, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1098, column: 9)
!5548 = !DILocation(line: 1098, column: 36, scope: !5547)
!5549 = !DILocation(line: 1098, column: 9, scope: !5498)
!5550 = !DILocation(line: 1102, column: 22, scope: !5498)
!5551 = !DILocation(line: 1103, column: 22, scope: !5498)
!5552 = !DILocation(line: 1105, column: 14, scope: !5498)
!5553 = !DILocation(line: 1106, column: 16, scope: !5554)
!5554 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1106, column: 9)
!5555 = !DILocation(line: 1106, column: 9, scope: !5498)
!5556 = !DILocation(line: 1107, column: 9, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5554, file: !629, line: 1106, column: 28)
!5558 = !DILocation(line: 1110, column: 62, scope: !5498)
!5559 = !DILocation(line: 1110, column: 40, scope: !5498)
!5560 = !DILocation(line: 1110, column: 25, scope: !5498)
!5561 = !DILocation(line: 1110, column: 38, scope: !5498)
!5562 = !DILocation(line: 1111, column: 44, scope: !5498)
!5563 = !DILocation(line: 1111, column: 25, scope: !5498)
!5564 = !DILocation(line: 1111, column: 30, scope: !5498)
!5565 = !DILocation(line: 1112, column: 14, scope: !5498)
!5566 = !DILocation(line: 1113, column: 16, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1113, column: 9)
!5568 = !DILocation(line: 1113, column: 9, scope: !5498)
!5569 = !DILocation(line: 1114, column: 9, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5567, file: !629, line: 1113, column: 28)
!5571 = !DILocation(line: 1117, column: 61, scope: !5498)
!5572 = !DILocation(line: 1117, column: 14, scope: !5498)
!5573 = !DILocation(line: 1118, column: 16, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1118, column: 9)
!5575 = !DILocation(line: 1118, column: 9, scope: !5498)
!5576 = !DILocation(line: 1119, column: 9, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5574, file: !629, line: 1118, column: 28)
!5578 = !DILocation(line: 1123, column: 14, scope: !5498)
!5579 = !DILocation(line: 1124, column: 16, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1124, column: 9)
!5581 = !DILocation(line: 1124, column: 9, scope: !5498)
!5582 = !DILocation(line: 1125, column: 9, scope: !5583)
!5583 = distinct !DILexicalBlock(scope: !5580, file: !629, line: 1124, column: 28)
!5584 = !DILocation(line: 1128, column: 62, scope: !5498)
!5585 = !DILocation(line: 1128, column: 40, scope: !5498)
!5586 = !DILocation(line: 1128, column: 38, scope: !5498)
!5587 = !DILocation(line: 1129, column: 44, scope: !5498)
!5588 = !DILocation(line: 1129, column: 30, scope: !5498)
!5589 = !DILocation(line: 1130, column: 14, scope: !5498)
!5590 = !DILocation(line: 1131, column: 16, scope: !5591)
!5591 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1131, column: 9)
!5592 = !DILocation(line: 1131, column: 9, scope: !5498)
!5593 = !DILocation(line: 1132, column: 9, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5591, file: !629, line: 1131, column: 28)
!5595 = !DILocation(line: 1135, column: 61, scope: !5498)
!5596 = !DILocation(line: 1135, column: 14, scope: !5498)
!5597 = !DILocation(line: 1136, column: 16, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1136, column: 9)
!5599 = !DILocation(line: 1136, column: 9, scope: !5498)
!5600 = !DILocation(line: 1137, column: 9, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5598, file: !629, line: 1136, column: 28)
!5602 = !DILocation(line: 1140, column: 64, scope: !5498)
!5603 = !DILocation(line: 1140, column: 14, scope: !5498)
!5604 = !DILocation(line: 1141, column: 16, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5498, file: !629, line: 1141, column: 9)
!5606 = !DILocation(line: 1141, column: 9, scope: !5498)
!5607 = !DILocation(line: 1142, column: 9, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5605, file: !629, line: 1141, column: 28)
!5609 = !DILocation(line: 1146, column: 18, scope: !5498)
!5610 = !DILocation(line: 1147, column: 66, scope: !5498)
!5611 = !DILocation(line: 1147, column: 34, scope: !5498)
!5612 = !DILocation(line: 1147, column: 52, scope: !5498)
!5613 = !DILocation(line: 1148, column: 71, scope: !5498)
!5614 = !DILocation(line: 1148, column: 34, scope: !5498)
!5615 = !DILocation(line: 1148, column: 57, scope: !5498)
!5616 = !DILocation(line: 1149, column: 74, scope: !5498)
!5617 = !DILocation(line: 1149, column: 34, scope: !5498)
!5618 = !DILocation(line: 1149, column: 60, scope: !5498)
!5619 = !DILocation(line: 1150, column: 73, scope: !5498)
!5620 = !DILocation(line: 1150, column: 34, scope: !5498)
!5621 = !DILocation(line: 1150, column: 59, scope: !5498)
!5622 = !DILocation(line: 1151, column: 69, scope: !5498)
!5623 = !DILocation(line: 1151, column: 34, scope: !5498)
!5624 = !DILocation(line: 1151, column: 55, scope: !5498)
!5625 = !DILocation(line: 1152, column: 74, scope: !5498)
!5626 = !DILocation(line: 1152, column: 34, scope: !5498)
!5627 = !DILocation(line: 1152, column: 60, scope: !5498)
!5628 = !DILocation(line: 1153, column: 77, scope: !5498)
!5629 = !DILocation(line: 1153, column: 34, scope: !5498)
!5630 = !DILocation(line: 1153, column: 63, scope: !5498)
!5631 = !DILocation(line: 1154, column: 5, scope: !5498)
!5632 = !DILocation(line: 1156, column: 5, scope: !5498)
!5633 = !DILocation(line: 1157, column: 1, scope: !5498)
!5634 = distinct !DISubprogram(name: "uart_set_baudrate", scope: !2690, file: !2690, line: 52, type: !5635, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5692)
!5635 = !DISubroutineType(types: !5636)
!5636 = !{null, !5637, !61}
!5637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5638, size: 32)
!5638 = !DIDerivedType(tag: DW_TAG_typedef, name: "UART_REGISTER_T", file: !56, line: 588, baseType: !5639)
!5639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 542, size: 800, elements: !5640)
!5640 = !{!5641, !5647, !5652, !5658, !5659, !5664, !5669, !5670, !5675, !5676, !5677, !5678, !5679, !5680, !5681, !5682, !5683, !5684, !5685, !5686, !5687, !5688, !5689, !5690, !5691}
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "RBR_THR_DLL", scope: !5639, file: !56, line: 547, baseType: !5642, size: 32)
!5642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5639, file: !56, line: 543, size: 32, elements: !5643)
!5643 = !{!5644, !5645, !5646}
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "RBR", scope: !5642, file: !56, line: 544, baseType: !272, size: 32)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "THR", scope: !5642, file: !56, line: 545, baseType: !60, size: 32)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "DLL", scope: !5642, file: !56, line: 546, baseType: !60, size: 32)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "IER_DLM", scope: !5639, file: !56, line: 551, baseType: !5648, size: 32, offset: 32)
!5648 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5639, file: !56, line: 548, size: 32, elements: !5649)
!5649 = !{!5650, !5651}
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "IER", scope: !5648, file: !56, line: 549, baseType: !60, size: 32)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "DLM", scope: !5648, file: !56, line: 550, baseType: !60, size: 32)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "IIR_FCR_EFR", scope: !5639, file: !56, line: 556, baseType: !5653, size: 32, offset: 64)
!5653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5639, file: !56, line: 552, size: 32, elements: !5654)
!5654 = !{!5655, !5656, !5657}
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "IIR", scope: !5653, file: !56, line: 553, baseType: !272, size: 32)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "FCR", scope: !5653, file: !56, line: 554, baseType: !60, size: 32)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "EFR", scope: !5653, file: !56, line: 555, baseType: !60, size: 32)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "LCR", scope: !5639, file: !56, line: 557, baseType: !60, size: 32, offset: 96)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "MCR_XON1", scope: !5639, file: !56, line: 561, baseType: !5660, size: 32, offset: 128)
!5660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5639, file: !56, line: 558, size: 32, elements: !5661)
!5661 = !{!5662, !5663}
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "MCR", scope: !5660, file: !56, line: 559, baseType: !60, size: 32)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "XON1", scope: !5660, file: !56, line: 560, baseType: !60, size: 32)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "LSR_XON2", scope: !5639, file: !56, line: 565, baseType: !5665, size: 32, offset: 160)
!5665 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5639, file: !56, line: 562, size: 32, elements: !5666)
!5666 = !{!5667, !5668}
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "LSR", scope: !5665, file: !56, line: 563, baseType: !272, size: 32)
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "XON2", scope: !5665, file: !56, line: 564, baseType: !60, size: 32)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF1", scope: !5639, file: !56, line: 566, baseType: !60, size: 32, offset: 192)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "SCR_XOFF2", scope: !5639, file: !56, line: 570, baseType: !5671, size: 32, offset: 224)
!5671 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5639, file: !56, line: 567, size: 32, elements: !5672)
!5672 = !{!5673, !5674}
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "SCR", scope: !5671, file: !56, line: 568, baseType: !60, size: 32)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "XOFF2", scope: !5671, file: !56, line: 569, baseType: !60, size: 32)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_EN", scope: !5639, file: !56, line: 571, baseType: !60, size: 32, offset: 256)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "HIGHSPEED", scope: !5639, file: !56, line: 572, baseType: !60, size: 32, offset: 288)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_COUNT", scope: !5639, file: !56, line: 573, baseType: !60, size: 32, offset: 320)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "SAMPLE_POINT", scope: !5639, file: !56, line: 574, baseType: !60, size: 32, offset: 352)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUD_REG", scope: !5639, file: !56, line: 575, baseType: !272, size: 32, offset: 384)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "RATEFIX_AD", scope: !5639, file: !56, line: 576, baseType: !60, size: 32, offset: 416)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "AUTOBAUDSAMPLE", scope: !5639, file: !56, line: 577, baseType: !60, size: 32, offset: 448)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "GUARD", scope: !5639, file: !56, line: 578, baseType: !60, size: 32, offset: 480)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_DAT", scope: !5639, file: !56, line: 579, baseType: !60, size: 32, offset: 512)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "ESCAPE_EN", scope: !5639, file: !56, line: 580, baseType: !60, size: 32, offset: 544)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "SLEEP_EN", scope: !5639, file: !56, line: 581, baseType: !60, size: 32, offset: 576)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "DMA_EN", scope: !5639, file: !56, line: 582, baseType: !60, size: 32, offset: 608)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "RXTRI_AD", scope: !5639, file: !56, line: 583, baseType: !60, size: 32, offset: 640)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_L", scope: !5639, file: !56, line: 584, baseType: !60, size: 32, offset: 672)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "FRACDIV_M", scope: !5639, file: !56, line: 585, baseType: !60, size: 32, offset: 704)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "FCR_RD", scope: !5639, file: !56, line: 586, baseType: !272, size: 32, offset: 736)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "TX_ACTIVE_EN", scope: !5639, file: !56, line: 587, baseType: !60, size: 32, offset: 768)
!5692 = !{!5693, !5694, !5695, !5696, !5697, !5698, !5699, !5700, !5701, !5702, !5703, !5707}
!5693 = !DILocalVariable(name: "uartx", arg: 1, scope: !5634, file: !2690, line: 52, type: !5637)
!5694 = !DILocalVariable(name: "actual_baudrate", arg: 2, scope: !5634, file: !2690, line: 52, type: !61)
!5695 = !DILocalVariable(name: "uart_clock", scope: !5634, file: !2690, line: 54, type: !61)
!5696 = !DILocalVariable(name: "integer", scope: !5634, file: !2690, line: 54, type: !61)
!5697 = !DILocalVariable(name: "remainder", scope: !5634, file: !2690, line: 54, type: !61)
!5698 = !DILocalVariable(name: "fraction", scope: !5634, file: !2690, line: 54, type: !61)
!5699 = !DILocalVariable(name: "dll_dlm", scope: !5634, file: !2690, line: 55, type: !61)
!5700 = !DILocalVariable(name: "sample_count", scope: !5634, file: !2690, line: 55, type: !61)
!5701 = !DILocalVariable(name: "sample_point", scope: !5634, file: !2690, line: 55, type: !61)
!5702 = !DILocalVariable(name: "temp_lcr", scope: !5634, file: !2690, line: 55, type: !61)
!5703 = !DILocalVariable(name: "fraction_L_mapping", scope: !5634, file: !2690, line: 56, type: !5704)
!5704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !61, size: 320, elements: !5705)
!5705 = !{!5706}
!5706 = !DISubrange(count: 10)
!5707 = !DILocalVariable(name: "fraction_M_mapping", scope: !5634, file: !2690, line: 57, type: !5704)
!5708 = !DILocation(line: 0, scope: !5634)
!5709 = !DILocation(line: 56, column: 14, scope: !5634)
!5710 = !DILocation(line: 57, column: 5, scope: !5634)
!5711 = !DILocation(line: 57, column: 14, scope: !5634)
!5712 = !DILocation(line: 59, column: 12, scope: !5634)
!5713 = !DILocation(line: 59, column: 23, scope: !5634)
!5714 = !DILocation(line: 60, column: 12, scope: !5634)
!5715 = !DILocation(line: 60, column: 22, scope: !5634)
!5716 = !DILocation(line: 61, column: 12, scope: !5634)
!5717 = !DILocation(line: 61, column: 22, scope: !5634)
!5718 = !DILocation(line: 63, column: 9, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5634, file: !2690, line: 63, column: 9)
!5720 = !DILocation(line: 63, column: 9, scope: !5634)
!5721 = !DILocation(line: 64, column: 22, scope: !5722)
!5722 = distinct !DILexicalBlock(scope: !5719, file: !2690, line: 63, column: 37)
!5723 = !DILocation(line: 64, column: 45, scope: !5722)
!5724 = !DILocation(line: 65, column: 5, scope: !5722)
!5725 = !DILocation(line: 0, scope: !5719)
!5726 = !DILocation(line: 69, column: 45, scope: !5634)
!5727 = !DILocation(line: 69, column: 26, scope: !5634)
!5728 = !DILocation(line: 70, column: 30, scope: !5634)
!5729 = !DILocation(line: 70, column: 36, scope: !5634)
!5730 = !DILocation(line: 70, column: 63, scope: !5634)
!5731 = !DILocation(line: 71, column: 20, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5634, file: !2690, line: 71, column: 9)
!5733 = !DILocation(line: 71, column: 26, scope: !5732)
!5734 = !DILocation(line: 77, column: 5, scope: !5634)
!5735 = !DILocation(line: 77, column: 25, scope: !5634)
!5736 = !DILocation(line: 78, column: 16, scope: !5737)
!5737 = distinct !DILexicalBlock(scope: !5634, file: !2690, line: 77, column: 32)
!5738 = distinct !{!5738, !5734, !5739}
!5739 = !DILocation(line: 80, column: 5, scope: !5634)
!5740 = !DILocation(line: 82, column: 35, scope: !5634)
!5741 = !DILocation(line: 82, column: 66, scope: !5634)
!5742 = !DILocation(line: 84, column: 18, scope: !5634)
!5743 = !DILocation(line: 85, column: 34, scope: !5634)
!5744 = !DILocation(line: 85, column: 39, scope: !5634)
!5745 = !DILocation(line: 87, column: 12, scope: !5634)
!5746 = !DILocation(line: 87, column: 22, scope: !5634)
!5747 = !DILocation(line: 89, column: 23, scope: !5634)
!5748 = !DILocation(line: 90, column: 27, scope: !5634)
!5749 = !DILocation(line: 90, column: 16, scope: !5634)
!5750 = !DILocation(line: 91, column: 38, scope: !5634)
!5751 = !DILocation(line: 91, column: 24, scope: !5634)
!5752 = !DILocation(line: 91, column: 28, scope: !5634)
!5753 = !DILocation(line: 92, column: 35, scope: !5634)
!5754 = !DILocation(line: 92, column: 41, scope: !5634)
!5755 = !DILocation(line: 92, column: 20, scope: !5634)
!5756 = !DILocation(line: 92, column: 24, scope: !5634)
!5757 = !DILocation(line: 93, column: 16, scope: !5634)
!5758 = !DILocation(line: 95, column: 12, scope: !5634)
!5759 = !DILocation(line: 95, column: 25, scope: !5634)
!5760 = !DILocation(line: 96, column: 12, scope: !5634)
!5761 = !DILocation(line: 96, column: 25, scope: !5634)
!5762 = !DILocation(line: 98, column: 24, scope: !5634)
!5763 = !DILocation(line: 98, column: 22, scope: !5634)
!5764 = !DILocation(line: 99, column: 24, scope: !5634)
!5765 = !DILocation(line: 99, column: 22, scope: !5634)
!5766 = !DILocation(line: 101, column: 25, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5634, file: !2690, line: 101, column: 9)
!5768 = !DILocation(line: 101, column: 9, scope: !5634)
!5769 = !DILocation(line: 102, column: 16, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5767, file: !2690, line: 101, column: 37)
!5771 = !DILocation(line: 102, column: 22, scope: !5770)
!5772 = !DILocation(line: 103, column: 5, scope: !5770)
!5773 = !DILocation(line: 104, column: 1, scope: !5634)
!5774 = distinct !DISubprogram(name: "uart_set_format", scope: !2690, file: !2690, line: 106, type: !5775, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5777)
!5775 = !DISubroutineType(types: !5776)
!5776 = !{null, !5637, !4841, !4843, !4845}
!5777 = !{!5778, !5779, !5780, !5781, !5782}
!5778 = !DILocalVariable(name: "uartx", arg: 1, scope: !5774, file: !2690, line: 106, type: !5637)
!5779 = !DILocalVariable(name: "word_length", arg: 2, scope: !5774, file: !2690, line: 107, type: !4841)
!5780 = !DILocalVariable(name: "stop_bit", arg: 3, scope: !5774, file: !2690, line: 108, type: !4843)
!5781 = !DILocalVariable(name: "parity", arg: 4, scope: !5774, file: !2690, line: 109, type: !4845)
!5782 = !DILocalVariable(name: "byte", scope: !5774, file: !2690, line: 111, type: !968)
!5783 = !DILocation(line: 0, scope: !5774)
!5784 = !DILocation(line: 114, column: 19, scope: !5774)
!5785 = !DILocation(line: 115, column: 16, scope: !5774)
!5786 = !DILocation(line: 118, column: 10, scope: !5774)
!5787 = !DILocation(line: 119, column: 5, scope: !5774)
!5788 = !DILocation(line: 124, column: 18, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5774, file: !2690, line: 119, column: 26)
!5790 = !DILocation(line: 125, column: 13, scope: !5789)
!5791 = !DILocation(line: 127, column: 18, scope: !5789)
!5792 = !DILocation(line: 128, column: 13, scope: !5789)
!5793 = !DILocation(line: 130, column: 18, scope: !5789)
!5794 = !DILocation(line: 131, column: 13, scope: !5789)
!5795 = !DILocation(line: 137, column: 10, scope: !5774)
!5796 = !DILocation(line: 138, column: 5, scope: !5774)
!5797 = !DILocation(line: 151, column: 5, scope: !5774)
!5798 = !DILocation(line: 166, column: 18, scope: !5774)
!5799 = !DILocation(line: 166, column: 16, scope: !5774)
!5800 = !DILocation(line: 167, column: 1, scope: !5774)
!5801 = distinct !DISubprogram(name: "uart_put_char_block", scope: !2690, file: !2690, line: 169, type: !5802, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5804)
!5802 = !DISubroutineType(types: !5803)
!5803 = !{null, !5637, !460}
!5804 = !{!5805, !5806, !5807}
!5805 = !DILocalVariable(name: "uartx", arg: 1, scope: !5801, file: !2690, line: 169, type: !5637)
!5806 = !DILocalVariable(name: "byte", arg: 2, scope: !5801, file: !2690, line: 169, type: !460)
!5807 = !DILocalVariable(name: "LSR", scope: !5801, file: !2690, line: 171, type: !968)
!5808 = !DILocation(line: 0, scope: !5801)
!5809 = !DILocation(line: 173, column: 5, scope: !5801)
!5810 = !DILocation(line: 174, column: 31, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5801, file: !2690, line: 173, column: 15)
!5812 = !DILocation(line: 175, column: 17, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5811, file: !2690, line: 175, column: 13)
!5814 = !DILocation(line: 175, column: 13, scope: !5811)
!5815 = distinct !{!5815, !5809, !5816}
!5816 = !DILocation(line: 179, column: 5, scope: !5801)
!5817 = !DILocation(line: 176, column: 38, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5813, file: !2690, line: 175, column: 39)
!5819 = !DILocation(line: 176, column: 32, scope: !5818)
!5820 = !DILocation(line: 176, column: 36, scope: !5818)
!5821 = !DILocation(line: 180, column: 1, scope: !5801)
!5822 = distinct !DISubprogram(name: "uart_get_char_block", scope: !2690, file: !2690, line: 182, type: !5823, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5825)
!5823 = !DISubroutineType(types: !5824)
!5824 = !{!460, !5637}
!5825 = !{!5826, !5827, !5828}
!5826 = !DILocalVariable(name: "uartx", arg: 1, scope: !5822, file: !2690, line: 182, type: !5637)
!5827 = !DILocalVariable(name: "LSR", scope: !5822, file: !2690, line: 184, type: !968)
!5828 = !DILocalVariable(name: "byte", scope: !5822, file: !2690, line: 185, type: !460)
!5829 = !DILocation(line: 0, scope: !5822)
!5830 = !DILocation(line: 187, column: 5, scope: !5822)
!5831 = !DILocation(line: 188, column: 31, scope: !5832)
!5832 = distinct !DILexicalBlock(scope: !5822, file: !2690, line: 187, column: 15)
!5833 = !DILocation(line: 189, column: 17, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5832, file: !2690, line: 189, column: 13)
!5835 = !DILocation(line: 189, column: 13, scope: !5832)
!5836 = distinct !{!5836, !5830, !5837}
!5837 = !DILocation(line: 193, column: 5, scope: !5822)
!5838 = !DILocation(line: 190, column: 48, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5834, file: !2690, line: 189, column: 37)
!5840 = !DILocation(line: 190, column: 20, scope: !5839)
!5841 = !DILocation(line: 195, column: 5, scope: !5822)
!5842 = distinct !DISubprogram(name: "uart_get_char_unblocking", scope: !2690, file: !2690, line: 198, type: !5843, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5845)
!5843 = !DISubroutineType(types: !5844)
!5844 = !{!61, !5637}
!5845 = !{!5846, !5847, !5848}
!5846 = !DILocalVariable(name: "uartx", arg: 1, scope: !5842, file: !2690, line: 198, type: !5637)
!5847 = !DILocalVariable(name: "LSR", scope: !5842, file: !2690, line: 200, type: !968)
!5848 = !DILocalVariable(name: "value", scope: !5842, file: !2690, line: 201, type: !61)
!5849 = !DILocation(line: 0, scope: !5842)
!5850 = !DILocation(line: 203, column: 27, scope: !5842)
!5851 = !DILocation(line: 204, column: 13, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5842, file: !2690, line: 204, column: 9)
!5853 = !DILocation(line: 204, column: 9, scope: !5842)
!5854 = !DILocation(line: 205, column: 36, scope: !5855)
!5855 = distinct !DILexicalBlock(scope: !5852, file: !2690, line: 204, column: 33)
!5856 = !DILocation(line: 206, column: 5, scope: !5855)
!5857 = !DILocation(line: 0, scope: !5852)
!5858 = !DILocation(line: 210, column: 5, scope: !5842)
!5859 = distinct !DISubprogram(name: "uart_set_hardware_flowcontrol", scope: !2690, file: !2690, line: 213, type: !5860, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5862)
!5860 = !DISubroutineType(types: !5861)
!5861 = !{null, !5637}
!5862 = !{!5863, !5864, !5865}
!5863 = !DILocalVariable(name: "uartx", arg: 1, scope: !5859, file: !2690, line: 213, type: !5637)
!5864 = !DILocalVariable(name: "EFR", scope: !5859, file: !2690, line: 215, type: !968)
!5865 = !DILocalVariable(name: "LCR", scope: !5859, file: !2690, line: 215, type: !968)
!5866 = !DILocation(line: 0, scope: !5859)
!5867 = !DILocation(line: 217, column: 18, scope: !5859)
!5868 = !DILocation(line: 219, column: 16, scope: !5859)
!5869 = !DILocation(line: 220, column: 30, scope: !5859)
!5870 = !DILocation(line: 222, column: 30, scope: !5859)
!5871 = !DILocation(line: 222, column: 28, scope: !5859)
!5872 = !DILocation(line: 223, column: 12, scope: !5859)
!5873 = !DILocation(line: 223, column: 22, scope: !5859)
!5874 = !DILocation(line: 225, column: 16, scope: !5859)
!5875 = !DILocation(line: 226, column: 21, scope: !5859)
!5876 = !DILocation(line: 226, column: 25, scope: !5859)
!5877 = !DILocation(line: 228, column: 18, scope: !5859)
!5878 = !DILocation(line: 228, column: 16, scope: !5859)
!5879 = !DILocation(line: 229, column: 1, scope: !5859)
!5880 = distinct !DISubprogram(name: "uart_set_software_flowcontrol", scope: !2690, file: !2690, line: 231, type: !5881, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5883)
!5881 = !DISubroutineType(types: !5882)
!5882 = !{null, !5637, !460, !460, !460}
!5883 = !{!5884, !5885, !5886, !5887, !5888, !5889}
!5884 = !DILocalVariable(name: "uartx", arg: 1, scope: !5880, file: !2690, line: 231, type: !5637)
!5885 = !DILocalVariable(name: "xon", arg: 2, scope: !5880, file: !2690, line: 232, type: !460)
!5886 = !DILocalVariable(name: "xoff", arg: 3, scope: !5880, file: !2690, line: 233, type: !460)
!5887 = !DILocalVariable(name: "escape_character", arg: 4, scope: !5880, file: !2690, line: 234, type: !460)
!5888 = !DILocalVariable(name: "EFR", scope: !5880, file: !2690, line: 236, type: !968)
!5889 = !DILocalVariable(name: "LCR", scope: !5880, file: !2690, line: 236, type: !968)
!5890 = !DILocation(line: 0, scope: !5880)
!5891 = !DILocation(line: 238, column: 18, scope: !5880)
!5892 = !DILocation(line: 240, column: 16, scope: !5880)
!5893 = !DILocation(line: 241, column: 28, scope: !5880)
!5894 = !DILocation(line: 241, column: 21, scope: !5880)
!5895 = !DILocation(line: 241, column: 26, scope: !5880)
!5896 = !DILocation(line: 242, column: 20, scope: !5880)
!5897 = !DILocation(line: 242, column: 12, scope: !5880)
!5898 = !DILocation(line: 242, column: 18, scope: !5880)
!5899 = !DILocation(line: 243, column: 30, scope: !5880)
!5900 = !DILocation(line: 245, column: 30, scope: !5880)
!5901 = !DILocation(line: 245, column: 28, scope: !5880)
!5902 = !DILocation(line: 246, column: 25, scope: !5880)
!5903 = !DILocation(line: 246, column: 12, scope: !5880)
!5904 = !DILocation(line: 246, column: 23, scope: !5880)
!5905 = !DILocation(line: 247, column: 12, scope: !5880)
!5906 = !DILocation(line: 247, column: 22, scope: !5880)
!5907 = !DILocation(line: 249, column: 18, scope: !5880)
!5908 = !DILocation(line: 249, column: 16, scope: !5880)
!5909 = !DILocation(line: 250, column: 1, scope: !5880)
!5910 = distinct !DISubprogram(name: "uart_disable_flowcontrol", scope: !2690, file: !2690, line: 252, type: !5860, scopeLine: 253, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5911)
!5911 = !{!5912, !5913}
!5912 = !DILocalVariable(name: "uartx", arg: 1, scope: !5910, file: !2690, line: 252, type: !5637)
!5913 = !DILocalVariable(name: "LCR", scope: !5910, file: !2690, line: 254, type: !968)
!5914 = !DILocation(line: 0, scope: !5910)
!5915 = !DILocation(line: 256, column: 18, scope: !5910)
!5916 = !DILocation(line: 258, column: 16, scope: !5910)
!5917 = !DILocation(line: 259, column: 24, scope: !5910)
!5918 = !DILocation(line: 259, column: 28, scope: !5910)
!5919 = !DILocation(line: 261, column: 16, scope: !5910)
!5920 = !DILocation(line: 262, column: 18, scope: !5910)
!5921 = !DILocation(line: 262, column: 16, scope: !5910)
!5922 = !DILocation(line: 263, column: 1, scope: !5910)
!5923 = distinct !DISubprogram(name: "uart_set_fifo", scope: !2690, file: !2690, line: 265, type: !5860, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5924)
!5924 = !{!5925, !5926, !5927}
!5925 = !DILocalVariable(name: "uartx", arg: 1, scope: !5923, file: !2690, line: 265, type: !5637)
!5926 = !DILocalVariable(name: "EFR", scope: !5923, file: !2690, line: 267, type: !968)
!5927 = !DILocalVariable(name: "LCR", scope: !5923, file: !2690, line: 267, type: !968)
!5928 = !DILocation(line: 0, scope: !5923)
!5929 = !DILocation(line: 269, column: 18, scope: !5923)
!5930 = !DILocation(line: 271, column: 16, scope: !5923)
!5931 = !DILocation(line: 272, column: 30, scope: !5923)
!5932 = !DILocation(line: 274, column: 30, scope: !5923)
!5933 = !DILocation(line: 274, column: 28, scope: !5923)
!5934 = !DILocation(line: 276, column: 16, scope: !5923)
!5935 = !DILocation(line: 277, column: 28, scope: !5923)
!5936 = !DILocation(line: 283, column: 18, scope: !5923)
!5937 = !DILocation(line: 283, column: 16, scope: !5923)
!5938 = !DILocation(line: 284, column: 1, scope: !5923)
!5939 = distinct !DISubprogram(name: "uart_unmask_receive_interrupt", scope: !2690, file: !2690, line: 307, type: !5860, scopeLine: 308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5940)
!5940 = !{!5941, !5942, !5943}
!5941 = !DILocalVariable(name: "uartx", arg: 1, scope: !5939, file: !2690, line: 307, type: !5637)
!5942 = !DILocalVariable(name: "IER", scope: !5939, file: !2690, line: 309, type: !968)
!5943 = !DILocalVariable(name: "LCR", scope: !5939, file: !2690, line: 309, type: !968)
!5944 = !DILocation(line: 0, scope: !5939)
!5945 = !DILocation(line: 311, column: 18, scope: !5939)
!5946 = !DILocation(line: 313, column: 16, scope: !5939)
!5947 = !DILocation(line: 314, column: 26, scope: !5939)
!5948 = !DILocation(line: 316, column: 26, scope: !5939)
!5949 = !DILocation(line: 316, column: 24, scope: !5939)
!5950 = !DILocation(line: 318, column: 19, scope: !5939)
!5951 = !DILocation(line: 318, column: 16, scope: !5939)
!5952 = !DILocation(line: 319, column: 1, scope: !5939)
!5953 = distinct !DISubprogram(name: "uart_purge_fifo", scope: !2690, file: !2690, line: 321, type: !5954, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5956)
!5954 = !DISubroutineType(types: !5955)
!5955 = !{null, !5637, !1091}
!5956 = !{!5957, !5958, !5959}
!5957 = !DILocalVariable(name: "uartx", arg: 1, scope: !5953, file: !2690, line: 321, type: !5637)
!5958 = !DILocalVariable(name: "is_rx", arg: 2, scope: !5953, file: !2690, line: 321, type: !1091)
!5959 = !DILocalVariable(name: "FCR", scope: !5953, file: !2690, line: 323, type: !968)
!5960 = !DILocation(line: 0, scope: !5953)
!5961 = !DILocation(line: 327, column: 9, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5953, file: !2690, line: 327, column: 9)
!5963 = !DILocation(line: 333, column: 24, scope: !5953)
!5964 = !DILocation(line: 333, column: 28, scope: !5953)
!5965 = !DILocation(line: 334, column: 1, scope: !5953)
!5966 = distinct !DISubprogram(name: "uart_query_interrupt_type", scope: !2690, file: !2690, line: 336, type: !5967, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5970)
!5967 = !DISubroutineType(types: !5968)
!5968 = !{!5969, !5637}
!5969 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_interrupt_type_t", file: !730, line: 55, baseType: !786)
!5970 = !{!5971, !5972, !5973, !5974}
!5971 = !DILocalVariable(name: "uartx", arg: 1, scope: !5966, file: !2690, line: 336, type: !5637)
!5972 = !DILocalVariable(name: "IIR", scope: !5966, file: !2690, line: 338, type: !968)
!5973 = !DILocalVariable(name: "LSR", scope: !5966, file: !2690, line: 338, type: !968)
!5974 = !DILocalVariable(name: "type", scope: !5966, file: !2690, line: 339, type: !5969)
!5975 = !DILocation(line: 0, scope: !5966)
!5976 = !DILocation(line: 341, column: 30, scope: !5966)
!5977 = !DILocation(line: 342, column: 13, scope: !5978)
!5978 = distinct !DILexicalBlock(scope: !5966, file: !2690, line: 342, column: 9)
!5979 = !DILocation(line: 342, column: 9, scope: !5966)
!5980 = !DILocation(line: 346, column: 17, scope: !5966)
!5981 = !DILocation(line: 346, column: 5, scope: !5966)
!5982 = !DILocation(line: 350, column: 13, scope: !5983)
!5983 = distinct !DILexicalBlock(scope: !5966, file: !2690, line: 346, column: 37)
!5984 = !DILocation(line: 353, column: 35, scope: !5983)
!5985 = !DILocation(line: 354, column: 21, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5983, file: !2690, line: 354, column: 17)
!5987 = !DILocation(line: 363, column: 13, scope: !5983)
!5988 = !DILocation(line: 369, column: 1, scope: !5966)
!5989 = distinct !DISubprogram(name: "uart_verify_error", scope: !2690, file: !2690, line: 371, type: !5990, scopeLine: 372, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !5992)
!5990 = !DISubroutineType(types: !5991)
!5991 = !{!1091, !5637}
!5992 = !{!5993, !5994, !5995}
!5993 = !DILocalVariable(name: "uartx", arg: 1, scope: !5989, file: !2690, line: 371, type: !5637)
!5994 = !DILocalVariable(name: "LSR", scope: !5989, file: !2690, line: 373, type: !968)
!5995 = !DILocalVariable(name: "ret", scope: !5989, file: !2690, line: 374, type: !1091)
!5996 = !DILocation(line: 0, scope: !5989)
!5997 = !DILocation(line: 376, column: 27, scope: !5989)
!5998 = !DILocation(line: 377, column: 15, scope: !5999)
!5999 = distinct !DILexicalBlock(scope: !5989, file: !2690, line: 377, column: 9)
!6000 = !DILocation(line: 377, column: 9, scope: !5989)
!6001 = !DILocation(line: 381, column: 5, scope: !5989)
!6002 = distinct !DISubprogram(name: "uart_clear_timeout_interrupt", scope: !2690, file: !2690, line: 384, type: !5860, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !6003)
!6003 = !{!6004, !6005}
!6004 = !DILocalVariable(name: "uartx", arg: 1, scope: !6002, file: !2690, line: 384, type: !5637)
!6005 = !DILocalVariable(name: "DMA_EN", scope: !6002, file: !2690, line: 386, type: !968)
!6006 = !DILocation(line: 0, scope: !6002)
!6007 = !DILocation(line: 388, column: 21, scope: !6002)
!6008 = !DILocation(line: 390, column: 1, scope: !6002)
!6009 = distinct !DISubprogram(name: "uart_reset_default_value", scope: !2690, file: !2690, line: 392, type: !5860, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !6010)
!6010 = !{!6011}
!6011 = !DILocalVariable(name: "uartx", arg: 1, scope: !6009, file: !2690, line: 392, type: !5637)
!6012 = !DILocation(line: 0, scope: !6009)
!6013 = !DILocation(line: 394, column: 12, scope: !6009)
!6014 = !DILocation(line: 394, column: 16, scope: !6009)
!6015 = !DILocation(line: 395, column: 24, scope: !6009)
!6016 = !DILocation(line: 395, column: 28, scope: !6009)
!6017 = !DILocation(line: 396, column: 21, scope: !6009)
!6018 = !DILocation(line: 396, column: 26, scope: !6009)
!6019 = !DILocation(line: 397, column: 12, scope: !6009)
!6020 = !DILocation(line: 397, column: 18, scope: !6009)
!6021 = !DILocation(line: 399, column: 16, scope: !6009)
!6022 = !DILocation(line: 400, column: 24, scope: !6009)
!6023 = !DILocation(line: 400, column: 28, scope: !6009)
!6024 = !DILocation(line: 401, column: 20, scope: !6009)
!6025 = !DILocation(line: 401, column: 24, scope: !6009)
!6026 = !DILocation(line: 403, column: 16, scope: !6009)
!6027 = !DILocation(line: 404, column: 24, scope: !6009)
!6028 = !DILocation(line: 405, column: 28, scope: !6009)
!6029 = !DILocation(line: 407, column: 16, scope: !6009)
!6030 = !DILocation(line: 408, column: 28, scope: !6009)
!6031 = !DILocation(line: 409, column: 16, scope: !6009)
!6032 = !DILocation(line: 411, column: 25, scope: !6009)
!6033 = !DILocation(line: 412, column: 22, scope: !6009)
!6034 = !DILocation(line: 412, column: 26, scope: !6009)
!6035 = !DILocation(line: 413, column: 12, scope: !6009)
!6036 = !DILocation(line: 413, column: 24, scope: !6009)
!6037 = !DILocation(line: 414, column: 12, scope: !6009)
!6038 = !DILocation(line: 414, column: 22, scope: !6009)
!6039 = !DILocation(line: 415, column: 12, scope: !6009)
!6040 = !DILocation(line: 415, column: 25, scope: !6009)
!6041 = !DILocation(line: 416, column: 12, scope: !6009)
!6042 = !DILocation(line: 416, column: 25, scope: !6009)
!6043 = !DILocation(line: 417, column: 12, scope: !6009)
!6044 = !DILocation(line: 417, column: 23, scope: !6009)
!6045 = !DILocation(line: 418, column: 12, scope: !6009)
!6046 = !DILocation(line: 418, column: 27, scope: !6009)
!6047 = !DILocation(line: 419, column: 12, scope: !6009)
!6048 = !DILocation(line: 419, column: 18, scope: !6009)
!6049 = !DILocation(line: 420, column: 12, scope: !6009)
!6050 = !DILocation(line: 420, column: 23, scope: !6009)
!6051 = !DILocation(line: 421, column: 12, scope: !6009)
!6052 = !DILocation(line: 421, column: 22, scope: !6009)
!6053 = !DILocation(line: 422, column: 12, scope: !6009)
!6054 = !DILocation(line: 422, column: 21, scope: !6009)
!6055 = !DILocation(line: 423, column: 12, scope: !6009)
!6056 = !DILocation(line: 423, column: 19, scope: !6009)
!6057 = !DILocation(line: 424, column: 23, scope: !6009)
!6058 = !DILocation(line: 425, column: 12, scope: !6009)
!6059 = !DILocation(line: 425, column: 22, scope: !6009)
!6060 = !DILocation(line: 426, column: 12, scope: !6009)
!6061 = !DILocation(line: 426, column: 22, scope: !6009)
!6062 = !DILocation(line: 427, column: 1, scope: !6009)
!6063 = distinct !DISubprogram(name: "uart_query_empty", scope: !2690, file: !2690, line: 429, type: !5860, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2689, retainedNodes: !6064)
!6064 = !{!6065}
!6065 = !DILocalVariable(name: "uartx", arg: 1, scope: !6063, file: !2690, line: 429, type: !5637)
!6066 = !DILocation(line: 0, scope: !6063)
!6067 = !DILocation(line: 431, column: 5, scope: !6063)
!6068 = !DILocation(line: 431, column: 31, scope: !6063)
!6069 = !DILocation(line: 431, column: 36, scope: !6063)
!6070 = !DILocation(line: 431, column: 12, scope: !6063)
!6071 = distinct !{!6071, !6067, !6072}
!6072 = !DILocation(line: 431, column: 44, scope: !6063)
!6073 = !DILocation(line: 432, column: 1, scope: !6063)
!6074 = distinct !DISubprogram(name: "uart_port_to_dma_channel", scope: !784, file: !784, line: 134, type: !6075, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6077)
!6075 = !DISubroutineType(types: !6076)
!6076 = !{!4592, !735, !1091}
!6077 = !{!6078, !6079, !6080}
!6078 = !DILocalVariable(name: "uart_port", arg: 1, scope: !6074, file: !784, line: 134, type: !735)
!6079 = !DILocalVariable(name: "is_rx", arg: 2, scope: !6074, file: !784, line: 134, type: !1091)
!6080 = !DILocalVariable(name: "dma_channel", scope: !6074, file: !784, line: 136, type: !4592)
!6081 = !DILocation(line: 0, scope: !6074)
!6082 = !DILocation(line: 138, column: 5, scope: !6074)
!6083 = !DILocation(line: 140, column: 17, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6085, file: !784, line: 140, column: 17)
!6085 = distinct !DILexicalBlock(scope: !6074, file: !784, line: 138, column: 24)
!6086 = !DILocation(line: 147, column: 17, scope: !6087)
!6087 = distinct !DILexicalBlock(scope: !6085, file: !784, line: 147, column: 17)
!6088 = !DILocation(line: 154, column: 17, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6085, file: !784, line: 154, column: 17)
!6090 = !DILocation(line: 161, column: 17, scope: !6091)
!6091 = distinct !DILexicalBlock(scope: !6085, file: !784, line: 161, column: 17)
!6092 = !DILocation(line: 171, column: 5, scope: !6074)
!6093 = distinct !DISubprogram(name: "uart_dma_channel_to_callback_data", scope: !784, file: !784, line: 174, type: !6094, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6102)
!6094 = !DISubroutineType(types: !6095)
!6095 = !{null, !4592, !6096}
!6096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6097, size: 32)
!6097 = !DIDerivedType(tag: DW_TAG_typedef, name: "uart_dma_callback_data_t", file: !730, line: 96, baseType: !6098)
!6098 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !730, line: 93, size: 64, elements: !6099)
!6099 = !{!6100, !6101}
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "is_rx", scope: !6098, file: !730, line: 94, baseType: !91, size: 8)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "uart_port", scope: !6098, file: !730, line: 95, baseType: !735, size: 32, offset: 32)
!6102 = !{!6103, !6104}
!6103 = !DILocalVariable(name: "dma_channel", arg: 1, scope: !6093, file: !784, line: 174, type: !4592)
!6104 = !DILocalVariable(name: "user_data", arg: 2, scope: !6093, file: !784, line: 174, type: !6096)
!6105 = !DILocation(line: 0, scope: !6093)
!6106 = !DILocation(line: 176, column: 5, scope: !6093)
!6107 = !DILocation(line: 0, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6093, file: !784, line: 176, column: 26)
!6109 = !DILocation(line: 212, column: 1, scope: !6093)
!6110 = distinct !DISubprogram(name: "uart_enable_dma", scope: !784, file: !784, line: 214, type: !6111, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6113)
!6111 = !DISubroutineType(types: !6112)
!6112 = !{null, !797}
!6113 = !{!6114}
!6114 = !DILocalVariable(name: "uartx", arg: 1, scope: !6110, file: !784, line: 214, type: !797)
!6115 = !DILocation(line: 0, scope: !6110)
!6116 = !DILocation(line: 216, column: 12, scope: !6110)
!6117 = !DILocation(line: 216, column: 19, scope: !6110)
!6118 = !DILocation(line: 217, column: 1, scope: !6110)
!6119 = distinct !DISubprogram(name: "uart_interrupt_handler", scope: !784, file: !784, line: 219, type: !1103, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !783, retainedNodes: !6120)
!6120 = !{!6121, !6122, !6123, !6124}
!6121 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6119, file: !784, line: 219, type: !862)
!6122 = !DILocalVariable(name: "uart_port", scope: !6119, file: !784, line: 221, type: !735)
!6123 = !DILocalVariable(name: "type", scope: !6119, file: !784, line: 222, type: !5969)
!6124 = !DILocalVariable(name: "uartx", scope: !6119, file: !784, line: 223, type: !797)
!6125 = !DILocation(line: 0, scope: !6119)
!6126 = !DILocation(line: 225, column: 5, scope: !6119)
!6127 = !DILocation(line: 242, column: 13, scope: !6119)
!6128 = !DILocation(line: 243, column: 12, scope: !6119)
!6129 = !DILocation(line: 245, column: 5, scope: !6119)
!6130 = !DILocation(line: 248, column: 13, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6119, file: !784, line: 245, column: 19)
!6132 = !DILocation(line: 249, column: 13, scope: !6131)
!6133 = !DILocation(line: 252, column: 13, scope: !6131)
!6134 = !DILocation(line: 253, column: 13, scope: !6131)
!6135 = !DILocation(line: 263, column: 13, scope: !6131)
!6136 = !DILocation(line: 264, column: 13, scope: !6131)
!6137 = !DILocation(line: 276, column: 13, scope: !6131)
!6138 = !DILocation(line: 278, column: 1, scope: !6119)
!6139 = distinct !DISubprogram(name: "hal_spi_slave_init", scope: !869, file: !869, line: 103, type: !6140, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6154)
!6140 = !DISubroutineType(types: !6141)
!6141 = !{!6142, !941, !6143}
!6142 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_status_t", file: !872, line: 534, baseType: !871)
!6143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6144, size: 32)
!6144 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_config_t", file: !872, line: 550, baseType: !6145)
!6145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 545, size: 128, elements: !6146)
!6146 = !{!6147, !6148, !6150, !6152}
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_threshold", scope: !6145, file: !872, line: 546, baseType: !61, size: 32)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "bit_order", scope: !6145, file: !872, line: 547, baseType: !6149, size: 32, offset: 32)
!6149 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_bit_order_t", file: !98, line: 651, baseType: !883)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !6145, file: !872, line: 548, baseType: !6151, size: 32, offset: 64)
!6151 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_clock_polarity_t", file: !98, line: 657, baseType: !887)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !6145, file: !872, line: 549, baseType: !6153, size: 32, offset: 96)
!6153 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_clock_phase_t", file: !98, line: 664, baseType: !891)
!6154 = !{!6155, !6156, !6157, !6158}
!6155 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6139, file: !869, line: 103, type: !941)
!6156 = !DILocalVariable(name: "spi_configure", arg: 2, scope: !6139, file: !869, line: 103, type: !6143)
!6157 = !DILocalVariable(name: "busy_status", scope: !6139, file: !869, line: 105, type: !6142)
!6158 = !DILocalVariable(name: "saved_mask", scope: !6159, file: !869, line: 115, type: !61)
!6159 = distinct !DILexicalBlock(scope: !6139, file: !869, line: 115, column: 5)
!6160 = !DILocation(line: 0, scope: !6139)
!6161 = !DILocation(line: 107, column: 10, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6139, file: !869, line: 107, column: 9)
!6163 = !DILocation(line: 107, column: 9, scope: !6139)
!6164 = !DILocation(line: 110, column: 10, scope: !6165)
!6165 = distinct !DILexicalBlock(scope: !6139, file: !869, line: 110, column: 9)
!6166 = !DILocation(line: 110, column: 9, scope: !6139)
!6167 = !DILocation(line: 115, column: 5, scope: !6159)
!6168 = !DILocation(line: 0, scope: !6159)
!6169 = !DILocation(line: 115, column: 5, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !6159, file: !869, line: 115, column: 5)
!6171 = !DILocation(line: 115, column: 5, scope: !6172)
!6172 = distinct !DILexicalBlock(scope: !6170, file: !869, line: 115, column: 5)
!6173 = !DILocation(line: 121, column: 5, scope: !6139)
!6174 = !DILocation(line: 131, column: 5, scope: !6139)
!6175 = !DILocation(line: 117, column: 9, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !869, line: 116, column: 57)
!6177 = distinct !DILexicalBlock(scope: !6139, file: !869, line: 116, column: 9)
!6178 = !DILocation(line: 118, column: 9, scope: !6176)
!6179 = !DILocation(line: 132, column: 1, scope: !6139)
!6180 = distinct !DISubprogram(name: "is_slave_port", scope: !869, file: !869, line: 68, type: !6181, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6183)
!6181 = !DISubroutineType(types: !6182)
!6182 = !{!91, !941}
!6183 = !{!6184}
!6184 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6180, file: !869, line: 68, type: !941)
!6185 = !DILocation(line: 0, scope: !6180)
!6186 = !DILocation(line: 70, column: 22, scope: !6180)
!6187 = !DILocation(line: 70, column: 5, scope: !6180)
!6188 = distinct !DISubprogram(name: "is_slave_config", scope: !869, file: !869, line: 73, type: !6189, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6193)
!6189 = !DISubroutineType(types: !6190)
!6190 = !{!91, !6191}
!6191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6192, size: 32)
!6192 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6144)
!6193 = !{!6194, !6195}
!6194 = !DILocalVariable(name: "spi_configure", arg: 1, scope: !6188, file: !869, line: 73, type: !6191)
!6195 = !DILocalVariable(name: "ret", scope: !6188, file: !869, line: 75, type: !91)
!6196 = !DILocation(line: 0, scope: !6188)
!6197 = !DILocation(line: 77, column: 30, scope: !6188)
!6198 = !DILocation(line: 80, column: 30, scope: !6188)
!6199 = !DILocation(line: 83, column: 30, scope: !6188)
!6200 = !DILocation(line: 80, column: 9, scope: !6188)
!6201 = !DILocation(line: 83, column: 9, scope: !6188)
!6202 = !DILocation(line: 86, column: 5, scope: !6188)
!6203 = distinct !DISubprogram(name: "hal_spi_slave_deinit", scope: !869, file: !869, line: 134, type: !6204, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6206)
!6204 = !DISubroutineType(types: !6205)
!6205 = !{!6142, !941}
!6206 = !{!6207}
!6207 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6203, file: !869, line: 134, type: !941)
!6208 = !DILocation(line: 0, scope: !6203)
!6209 = !DILocation(line: 136, column: 10, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6203, file: !869, line: 136, column: 9)
!6211 = !DILocation(line: 136, column: 9, scope: !6203)
!6212 = !DILocation(line: 140, column: 5, scope: !6203)
!6213 = !DILocation(line: 143, column: 5, scope: !6214)
!6214 = distinct !DILexicalBlock(scope: !6203, file: !869, line: 143, column: 5)
!6215 = !DILocation(line: 146, column: 26, scope: !6203)
!6216 = !DILocation(line: 147, column: 26, scope: !6203)
!6217 = !DILocation(line: 156, column: 5, scope: !6203)
!6218 = !DILocation(line: 157, column: 1, scope: !6203)
!6219 = distinct !DISubprogram(name: "hal_spi_slave_register_callback", scope: !869, file: !869, line: 159, type: !6220, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6222)
!6220 = !DISubroutineType(types: !6221)
!6221 = !{!6142, !941, !950, !88}
!6222 = !{!6223, !6224, !6225}
!6223 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6219, file: !869, line: 159, type: !941)
!6224 = !DILocalVariable(name: "callback", arg: 2, scope: !6219, file: !869, line: 160, type: !950)
!6225 = !DILocalVariable(name: "user_data", arg: 3, scope: !6219, file: !869, line: 161, type: !88)
!6226 = !DILocation(line: 0, scope: !6219)
!6227 = !DILocation(line: 163, column: 10, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6219, file: !869, line: 163, column: 9)
!6229 = !DILocation(line: 163, column: 9, scope: !6219)
!6230 = !DILocation(line: 166, column: 14, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6219, file: !869, line: 166, column: 9)
!6232 = !DILocation(line: 166, column: 9, scope: !6219)
!6233 = !DILocation(line: 171, column: 5, scope: !6219)
!6234 = !DILocation(line: 171, column: 31, scope: !6219)
!6235 = !DILocation(line: 172, column: 5, scope: !6219)
!6236 = !DILocation(line: 172, column: 32, scope: !6219)
!6237 = !DILocation(line: 175, column: 5, scope: !6219)
!6238 = !DILocation(line: 176, column: 5, scope: !6219)
!6239 = !DILocation(line: 177, column: 5, scope: !6219)
!6240 = !DILocation(line: 179, column: 5, scope: !6219)
!6241 = !DILocation(line: 180, column: 1, scope: !6219)
!6242 = distinct !DISubprogram(name: "hal_spi_slave_isr", scope: !869, file: !869, line: 89, type: !1103, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6243)
!6243 = !{!6244, !6245, !6246}
!6244 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6242, file: !869, line: 89, type: !862)
!6245 = !DILocalVariable(name: "spi_port", scope: !6242, file: !869, line: 91, type: !941)
!6246 = !DILocalVariable(name: "i", scope: !6242, file: !869, line: 92, type: !61)
!6247 = !DILocation(line: 0, scope: !6242)
!6248 = !DILocation(line: 100, column: 30, scope: !6242)
!6249 = !DILocation(line: 100, column: 57, scope: !6242)
!6250 = !DILocation(line: 100, column: 5, scope: !6242)
!6251 = !DILocation(line: 101, column: 1, scope: !6242)
!6252 = distinct !DISubprogram(name: "hal_spi_slave_send", scope: !869, file: !869, line: 182, type: !6253, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6255)
!6253 = !DISubroutineType(types: !6254)
!6254 = !{!6142, !941, !5069, !61}
!6255 = !{!6256, !6257, !6258, !6259}
!6256 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6252, file: !869, line: 182, type: !941)
!6257 = !DILocalVariable(name: "data", arg: 2, scope: !6252, file: !869, line: 182, type: !5069)
!6258 = !DILocalVariable(name: "size", arg: 3, scope: !6252, file: !869, line: 182, type: !61)
!6259 = !DILocalVariable(name: "status", scope: !6252, file: !869, line: 186, type: !6142)
!6260 = !DILocation(line: 0, scope: !6252)
!6261 = !DILocation(line: 188, column: 10, scope: !6262)
!6262 = distinct !DILexicalBlock(scope: !6252, file: !869, line: 188, column: 9)
!6263 = !DILocation(line: 188, column: 9, scope: !6252)
!6264 = !DILocation(line: 191, column: 14, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6252, file: !869, line: 191, column: 9)
!6266 = !DILocation(line: 191, column: 9, scope: !6252)
!6267 = !DILocation(line: 198, column: 40, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6252, file: !869, line: 198, column: 9)
!6269 = !DILocation(line: 198, column: 17, scope: !6268)
!6270 = !DILocation(line: 198, column: 9, scope: !6252)
!6271 = !DILocation(line: 203, column: 14, scope: !6252)
!6272 = !DILocation(line: 204, column: 5, scope: !6252)
!6273 = !DILocation(line: 205, column: 1, scope: !6252)
!6274 = distinct !DISubprogram(name: "hal_spi_slave_get_master_read_config", scope: !869, file: !869, line: 207, type: !6275, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6277)
!6275 = !DISubroutineType(types: !6276)
!6276 = !{!6142, !941, !1153, !1153}
!6277 = !{!6278, !6279, !6280}
!6278 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6274, file: !869, line: 207, type: !941)
!6279 = !DILocalVariable(name: "address", arg: 2, scope: !6274, file: !869, line: 207, type: !1153)
!6280 = !DILocalVariable(name: "length", arg: 3, scope: !6274, file: !869, line: 207, type: !1153)
!6281 = !DILocation(line: 0, scope: !6274)
!6282 = !DILocation(line: 209, column: 10, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6274, file: !869, line: 209, column: 9)
!6284 = !DILocation(line: 209, column: 9, scope: !6274)
!6285 = !DILocation(line: 212, column: 18, scope: !6286)
!6286 = distinct !DILexicalBlock(scope: !6274, file: !869, line: 212, column: 9)
!6287 = !DILocation(line: 212, column: 27, scope: !6286)
!6288 = !DILocation(line: 216, column: 9, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6274, file: !869, line: 216, column: 9)
!6290 = !DILocation(line: 216, column: 64, scope: !6289)
!6291 = !DILocation(line: 221, column: 1, scope: !6274)
!6292 = distinct !DISubprogram(name: "hal_spi_slave_receive", scope: !869, file: !869, line: 223, type: !6293, scopeLine: 224, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6295)
!6293 = !DISubroutineType(types: !6294)
!6294 = !{!6142, !941, !762, !61}
!6295 = !{!6296, !6297, !6298, !6299}
!6296 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6292, file: !869, line: 223, type: !941)
!6297 = !DILocalVariable(name: "buffer", arg: 2, scope: !6292, file: !869, line: 223, type: !762)
!6298 = !DILocalVariable(name: "size", arg: 3, scope: !6292, file: !869, line: 223, type: !61)
!6299 = !DILocalVariable(name: "status", scope: !6292, file: !869, line: 227, type: !6142)
!6300 = !DILocation(line: 0, scope: !6292)
!6301 = !DILocation(line: 229, column: 10, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6292, file: !869, line: 229, column: 9)
!6303 = !DILocation(line: 229, column: 9, scope: !6292)
!6304 = !DILocation(line: 232, column: 14, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6292, file: !869, line: 232, column: 9)
!6306 = !DILocation(line: 232, column: 9, scope: !6292)
!6307 = !DILocation(line: 239, column: 40, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6292, file: !869, line: 239, column: 9)
!6309 = !DILocation(line: 239, column: 17, scope: !6308)
!6310 = !DILocation(line: 239, column: 9, scope: !6292)
!6311 = !DILocation(line: 244, column: 14, scope: !6292)
!6312 = !DILocation(line: 245, column: 5, scope: !6292)
!6313 = !DILocation(line: 246, column: 1, scope: !6292)
!6314 = distinct !DISubprogram(name: "hal_spi_slave_get_master_write_config", scope: !869, file: !869, line: 248, type: !6275, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6315)
!6315 = !{!6316, !6317, !6318}
!6316 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6314, file: !869, line: 248, type: !941)
!6317 = !DILocalVariable(name: "address", arg: 2, scope: !6314, file: !869, line: 248, type: !1153)
!6318 = !DILocalVariable(name: "length", arg: 3, scope: !6314, file: !869, line: 248, type: !1153)
!6319 = !DILocation(line: 0, scope: !6314)
!6320 = !DILocation(line: 250, column: 10, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6314, file: !869, line: 250, column: 9)
!6322 = !DILocation(line: 250, column: 9, scope: !6314)
!6323 = !DILocation(line: 253, column: 18, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6314, file: !869, line: 253, column: 9)
!6325 = !DILocation(line: 253, column: 27, scope: !6324)
!6326 = !DILocation(line: 257, column: 9, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6314, file: !869, line: 257, column: 9)
!6328 = !DILocation(line: 257, column: 64, scope: !6327)
!6329 = !DILocation(line: 262, column: 1, scope: !6314)
!6330 = distinct !DISubprogram(name: "hal_spi_slave_set_early_miso", scope: !869, file: !869, line: 264, type: !6331, scopeLine: 265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6334)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!6142, !941, !6333}
!6333 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_early_miso_t", file: !872, line: 487, baseType: !926)
!6334 = !{!6335, !6336}
!6335 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6330, file: !869, line: 264, type: !941)
!6336 = !DILocalVariable(name: "early_miso", arg: 2, scope: !6330, file: !869, line: 264, type: !6333)
!6337 = !DILocation(line: 0, scope: !6330)
!6338 = !DILocation(line: 266, column: 10, scope: !6339)
!6339 = distinct !DILexicalBlock(scope: !6330, file: !869, line: 266, column: 9)
!6340 = !DILocation(line: 266, column: 9, scope: !6330)
!6341 = !DILocation(line: 269, column: 62, scope: !6342)
!6342 = distinct !DILexicalBlock(scope: !6330, file: !869, line: 269, column: 9)
!6343 = !DILocation(line: 274, column: 5, scope: !6330)
!6344 = !DILocation(line: 275, column: 5, scope: !6330)
!6345 = !DILocation(line: 276, column: 1, scope: !6330)
!6346 = distinct !DISubprogram(name: "hal_spi_slave_set_command", scope: !869, file: !869, line: 278, type: !6347, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !868, retainedNodes: !6350)
!6347 = !DISubroutineType(types: !6348)
!6348 = !{!6142, !941, !6349, !460}
!6349 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_command_type_t", file: !98, line: 689, baseType: !930)
!6350 = !{!6351, !6352, !6353}
!6351 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6346, file: !869, line: 278, type: !941)
!6352 = !DILocalVariable(name: "command", arg: 2, scope: !6346, file: !869, line: 278, type: !6349)
!6353 = !DILocalVariable(name: "value", arg: 3, scope: !6346, file: !869, line: 278, type: !460)
!6354 = !DILocation(line: 0, scope: !6346)
!6355 = !DILocation(line: 280, column: 10, scope: !6356)
!6356 = distinct !DILexicalBlock(scope: !6346, file: !869, line: 280, column: 9)
!6357 = !DILocation(line: 280, column: 9, scope: !6346)
!6358 = !DILocation(line: 284, column: 21, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6346, file: !869, line: 284, column: 9)
!6360 = !DILocation(line: 284, column: 9, scope: !6346)
!6361 = !DILocation(line: 292, column: 5, scope: !6346)
!6362 = !DILocation(line: 294, column: 5, scope: !6346)
!6363 = !DILocation(line: 295, column: 1, scope: !6346)
!6364 = distinct !DISubprogram(name: "spi_slave_lisr", scope: !976, file: !976, line: 63, type: !6365, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !975, retainedNodes: !6376)
!6365 = !DISubroutineType(types: !6366)
!6366 = !{null, !941, !6367, !88}
!6367 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_callback_t", file: !872, line: 583, baseType: !6368)
!6368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6369, size: 32)
!6369 = !DISubroutineType(types: !6370)
!6370 = !{null, !6371, !88}
!6371 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_transaction_status_t", file: !872, line: 557, baseType: !6372)
!6372 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 554, size: 64, elements: !6373)
!6373 = !{!6374, !6375}
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_status", scope: !6372, file: !872, line: 555, baseType: !958, size: 32)
!6375 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_status", scope: !6372, file: !872, line: 556, baseType: !960, size: 32, offset: 32)
!6376 = !{!6377, !6378, !6379, !6380, !6381, !6382, !6383}
!6377 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6364, file: !976, line: 63, type: !941)
!6378 = !DILocalVariable(name: "user_callback", arg: 2, scope: !6364, file: !976, line: 63, type: !6367)
!6379 = !DILocalVariable(name: "user_data", arg: 3, scope: !6364, file: !976, line: 63, type: !88)
!6380 = !DILocalVariable(name: "last_fsm_status", scope: !6364, file: !976, line: 65, type: !460)
!6381 = !DILocalVariable(name: "irq_status", scope: !6364, file: !976, line: 66, type: !61)
!6382 = !DILocalVariable(name: "status", scope: !6364, file: !976, line: 67, type: !6371)
!6383 = !DILocalVariable(name: "fsm_state", scope: !6364, file: !976, line: 68, type: !958)
!6384 = !DILocation(line: 0, scope: !6364)
!6385 = !DILocation(line: 70, column: 50, scope: !6364)
!6386 = !DILocation(line: 70, column: 62, scope: !6364)
!6387 = !DILocation(line: 72, column: 5, scope: !6364)
!6388 = !DILocation(line: 79, column: 13, scope: !6389)
!6389 = distinct !DILexicalBlock(scope: !6364, file: !976, line: 72, column: 25)
!6390 = !DILocation(line: 80, column: 13, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6389, file: !976, line: 80, column: 13)
!6392 = !DILocation(line: 82, column: 25, scope: !6389)
!6393 = !DILocation(line: 84, column: 57, scope: !6389)
!6394 = !DILocation(line: 85, column: 13, scope: !6389)
!6395 = !DILocation(line: 88, column: 13, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6389, file: !976, line: 88, column: 13)
!6397 = !DILocation(line: 90, column: 25, scope: !6389)
!6398 = !DILocation(line: 92, column: 57, scope: !6389)
!6399 = !DILocation(line: 94, column: 13, scope: !6389)
!6400 = !DILocation(line: 98, column: 13, scope: !6389)
!6401 = !DILocation(line: 101, column: 13, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6389, file: !976, line: 101, column: 13)
!6403 = !DILocation(line: 103, column: 25, scope: !6389)
!6404 = !DILocation(line: 104, column: 13, scope: !6389)
!6405 = !DILocation(line: 107, column: 13, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6389, file: !976, line: 107, column: 13)
!6407 = !DILocation(line: 109, column: 25, scope: !6389)
!6408 = !DILocation(line: 110, column: 13, scope: !6389)
!6409 = !DILocation(line: 113, column: 13, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6389, file: !976, line: 113, column: 13)
!6411 = !DILocation(line: 115, column: 25, scope: !6389)
!6412 = !DILocation(line: 117, column: 55, scope: !6389)
!6413 = !DILocation(line: 118, column: 13, scope: !6389)
!6414 = !DILocation(line: 121, column: 13, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6389, file: !976, line: 121, column: 13)
!6416 = !DILocation(line: 123, column: 25, scope: !6389)
!6417 = !DILocation(line: 125, column: 55, scope: !6389)
!6418 = !DILocation(line: 126, column: 13, scope: !6389)
!6419 = !DILocation(line: 137, column: 13, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6389, file: !976, line: 137, column: 13)
!6421 = !DILocation(line: 139, column: 55, scope: !6389)
!6422 = !DILocation(line: 140, column: 13, scope: !6389)
!6423 = !DILocation(line: 145, column: 5, scope: !6364)
!6424 = !DILocation(line: 146, column: 1, scope: !6364)
!6425 = distinct !DISubprogram(name: "spi_slave_init", scope: !976, file: !976, line: 148, type: !6426, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !975, retainedNodes: !6437)
!6426 = !DISubroutineType(types: !6427)
!6427 = !{null, !941, !6428}
!6428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6429, size: 32)
!6429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6430)
!6430 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_config_t", file: !872, line: 550, baseType: !6431)
!6431 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 545, size: 128, elements: !6432)
!6432 = !{!6433, !6434, !6435, !6436}
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_threshold", scope: !6431, file: !872, line: 546, baseType: !61, size: 32)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "bit_order", scope: !6431, file: !872, line: 547, baseType: !6149, size: 32, offset: 32)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !6431, file: !872, line: 548, baseType: !6151, size: 32, offset: 64)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !6431, file: !872, line: 549, baseType: !6153, size: 32, offset: 96)
!6437 = !{!6438, !6439}
!6438 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6425, file: !976, line: 148, type: !941)
!6439 = !DILocalVariable(name: "spi_config", arg: 2, scope: !6425, file: !976, line: 148, type: !6428)
!6440 = !DILocation(line: 0, scope: !6425)
!6441 = !DILocation(line: 151, column: 49, scope: !6425)
!6442 = !DILocation(line: 152, column: 49, scope: !6425)
!6443 = !DILocation(line: 153, column: 47, scope: !6425)
!6444 = !DILocation(line: 154, column: 62, scope: !6425)
!6445 = !DILocation(line: 155, column: 54, scope: !6425)
!6446 = !DILocation(line: 156, column: 54, scope: !6425)
!6447 = !DILocation(line: 158, column: 25, scope: !6425)
!6448 = !DILocation(line: 158, column: 5, scope: !6425)
!6449 = !DILocation(line: 160, column: 55, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6425, file: !976, line: 158, column: 36)
!6451 = !DILocation(line: 161, column: 13, scope: !6450)
!6452 = !DILocation(line: 163, column: 55, scope: !6450)
!6453 = !DILocation(line: 164, column: 13, scope: !6450)
!6454 = !DILocation(line: 0, scope: !6450)
!6455 = !DILocation(line: 167, column: 25, scope: !6425)
!6456 = !DILocation(line: 167, column: 5, scope: !6425)
!6457 = !DILocation(line: 169, column: 55, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6425, file: !976, line: 167, column: 32)
!6459 = !DILocation(line: 170, column: 13, scope: !6458)
!6460 = !DILocation(line: 172, column: 55, scope: !6458)
!6461 = !DILocation(line: 173, column: 13, scope: !6458)
!6462 = !DILocation(line: 0, scope: !6458)
!6463 = !DILocation(line: 176, column: 25, scope: !6425)
!6464 = !DILocation(line: 176, column: 5, scope: !6425)
!6465 = !DILocation(line: 178, column: 55, scope: !6466)
!6466 = distinct !DILexicalBlock(scope: !6425, file: !976, line: 176, column: 35)
!6467 = !DILocation(line: 179, column: 13, scope: !6466)
!6468 = !DILocation(line: 181, column: 55, scope: !6466)
!6469 = !DILocation(line: 182, column: 13, scope: !6466)
!6470 = !DILocation(line: 0, scope: !6466)
!6471 = !DILocation(line: 185, column: 67, scope: !6425)
!6472 = !DILocation(line: 185, column: 53, scope: !6425)
!6473 = !DILocation(line: 191, column: 47, scope: !6425)
!6474 = !DILocation(line: 192, column: 47, scope: !6425)
!6475 = !DILocation(line: 193, column: 47, scope: !6425)
!6476 = !DILocation(line: 195, column: 1, scope: !6425)
!6477 = distinct !DISubprogram(name: "spi_slave_send", scope: !976, file: !976, line: 197, type: !6253, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !975, retainedNodes: !6478)
!6478 = !{!6479, !6480, !6481, !6482}
!6479 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6477, file: !976, line: 197, type: !941)
!6480 = !DILocalVariable(name: "data", arg: 2, scope: !6477, file: !976, line: 197, type: !5069)
!6481 = !DILocalVariable(name: "size", arg: 3, scope: !6477, file: !976, line: 197, type: !61)
!6482 = !DILocalVariable(name: "config_size", scope: !6477, file: !976, line: 199, type: !61)
!6483 = !DILocation(line: 0, scope: !6477)
!6484 = !DILocation(line: 202, column: 49, scope: !6477)
!6485 = !DILocation(line: 203, column: 21, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6477, file: !976, line: 203, column: 9)
!6487 = !DILocation(line: 203, column: 9, scope: !6477)
!6488 = !DILocation(line: 204, column: 9, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6486, file: !976, line: 203, column: 30)
!6490 = !DILocation(line: 205, column: 9, scope: !6489)
!6491 = !DILocation(line: 211, column: 65, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6486, file: !976, line: 206, column: 12)
!6493 = !DILocation(line: 211, column: 63, scope: !6492)
!6494 = !DILocation(line: 212, column: 58, scope: !6492)
!6495 = !DILocation(line: 213, column: 51, scope: !6492)
!6496 = !DILocation(line: 215, column: 5, scope: !6477)
!6497 = !DILocation(line: 216, column: 1, scope: !6477)
!6498 = distinct !DISubprogram(name: "spi_slave_query_config_info", scope: !976, file: !976, line: 218, type: !6275, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !975, retainedNodes: !6499)
!6499 = !{!6500, !6501, !6502}
!6500 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6498, file: !976, line: 218, type: !941)
!6501 = !DILocalVariable(name: "address", arg: 2, scope: !6498, file: !976, line: 218, type: !1153)
!6502 = !DILocalVariable(name: "length", arg: 3, scope: !6498, file: !976, line: 218, type: !1153)
!6503 = !DILocation(line: 0, scope: !6498)
!6504 = !DILocation(line: 220, column: 40, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6498, file: !976, line: 220, column: 9)
!6506 = !DILocation(line: 220, column: 54, scope: !6505)
!6507 = !DILocation(line: 220, column: 62, scope: !6505)
!6508 = !DILocation(line: 220, column: 9, scope: !6498)
!6509 = !DILocation(line: 224, column: 46, scope: !6498)
!6510 = !DILocation(line: 224, column: 14, scope: !6498)
!6511 = !DILocation(line: 225, column: 45, scope: !6498)
!6512 = !DILocation(line: 225, column: 13, scope: !6498)
!6513 = !DILocation(line: 227, column: 5, scope: !6498)
!6514 = !DILocation(line: 228, column: 1, scope: !6498)
!6515 = distinct !DISubprogram(name: "spi_slave_receive", scope: !976, file: !976, line: 230, type: !6293, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !975, retainedNodes: !6516)
!6516 = !{!6517, !6518, !6519, !6520}
!6517 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6515, file: !976, line: 230, type: !941)
!6518 = !DILocalVariable(name: "buffer", arg: 2, scope: !6515, file: !976, line: 230, type: !762)
!6519 = !DILocalVariable(name: "size", arg: 3, scope: !6515, file: !976, line: 230, type: !61)
!6520 = !DILocalVariable(name: "config_size", scope: !6515, file: !976, line: 232, type: !61)
!6521 = !DILocation(line: 0, scope: !6515)
!6522 = !DILocation(line: 235, column: 49, scope: !6515)
!6523 = !DILocation(line: 236, column: 21, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6515, file: !976, line: 236, column: 9)
!6525 = !DILocation(line: 236, column: 9, scope: !6515)
!6526 = !DILocation(line: 237, column: 9, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6524, file: !976, line: 236, column: 30)
!6528 = !DILocation(line: 238, column: 9, scope: !6527)
!6529 = !DILocation(line: 244, column: 65, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6524, file: !976, line: 239, column: 12)
!6531 = !DILocation(line: 244, column: 63, scope: !6530)
!6532 = !DILocation(line: 245, column: 58, scope: !6530)
!6533 = !DILocation(line: 246, column: 51, scope: !6530)
!6534 = !DILocation(line: 248, column: 5, scope: !6515)
!6535 = !DILocation(line: 249, column: 1, scope: !6515)
!6536 = distinct !DISubprogram(name: "spi_slave_set_early_miso", scope: !976, file: !976, line: 251, type: !6537, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !975, retainedNodes: !6539)
!6537 = !DISubroutineType(types: !6538)
!6538 = !{null, !941, !6333}
!6539 = !{!6540, !6541}
!6540 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6536, file: !976, line: 251, type: !941)
!6541 = !DILocalVariable(name: "early_miso", arg: 2, scope: !6536, file: !976, line: 251, type: !6333)
!6542 = !DILocation(line: 0, scope: !6536)
!6543 = !DILocation(line: 253, column: 5, scope: !6536)
!6544 = !DILocation(line: 255, column: 70, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6536, file: !976, line: 253, column: 25)
!6546 = !DILocation(line: 256, column: 13, scope: !6545)
!6547 = !DILocation(line: 258, column: 70, scope: !6545)
!6548 = !DILocation(line: 259, column: 13, scope: !6545)
!6549 = !DILocation(line: 0, scope: !6545)
!6550 = !DILocation(line: 261, column: 1, scope: !6536)
!6551 = distinct !DISubprogram(name: "spi_slave_set_command", scope: !976, file: !976, line: 263, type: !6552, scopeLine: 264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !975, retainedNodes: !6554)
!6552 = !DISubroutineType(types: !6553)
!6553 = !{null, !941, !6349, !460}
!6554 = !{!6555, !6556, !6557}
!6555 = !DILocalVariable(name: "spi_port", arg: 1, scope: !6551, file: !976, line: 263, type: !941)
!6556 = !DILocalVariable(name: "command", arg: 2, scope: !6551, file: !976, line: 263, type: !6349)
!6557 = !DILocalVariable(name: "value", arg: 3, scope: !6551, file: !976, line: 263, type: !460)
!6558 = !DILocation(line: 0, scope: !6551)
!6559 = !DILocation(line: 265, column: 5, scope: !6551)
!6560 = !DILocation(line: 267, column: 62, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6551, file: !976, line: 265, column: 22)
!6562 = !DILocation(line: 268, column: 66, scope: !6561)
!6563 = !DILocation(line: 268, column: 72, scope: !6561)
!6564 = !DILocation(line: 268, column: 62, scope: !6561)
!6565 = !DILocation(line: 269, column: 13, scope: !6561)
!6566 = !DILocation(line: 271, column: 62, scope: !6561)
!6567 = !DILocation(line: 272, column: 66, scope: !6561)
!6568 = !DILocation(line: 272, column: 72, scope: !6561)
!6569 = !DILocation(line: 272, column: 62, scope: !6561)
!6570 = !DILocation(line: 273, column: 13, scope: !6561)
!6571 = !DILocation(line: 275, column: 62, scope: !6561)
!6572 = !DILocation(line: 276, column: 66, scope: !6561)
!6573 = !DILocation(line: 276, column: 72, scope: !6561)
!6574 = !DILocation(line: 276, column: 62, scope: !6561)
!6575 = !DILocation(line: 277, column: 13, scope: !6561)
!6576 = !DILocation(line: 279, column: 62, scope: !6561)
!6577 = !DILocation(line: 280, column: 66, scope: !6561)
!6578 = !DILocation(line: 280, column: 62, scope: !6561)
!6579 = !DILocation(line: 281, column: 13, scope: !6561)
!6580 = !DILocation(line: 283, column: 62, scope: !6561)
!6581 = !DILocation(line: 284, column: 66, scope: !6561)
!6582 = !DILocation(line: 284, column: 72, scope: !6561)
!6583 = !DILocation(line: 284, column: 62, scope: !6561)
!6584 = !DILocation(line: 285, column: 13, scope: !6561)
!6585 = !DILocation(line: 287, column: 62, scope: !6561)
!6586 = !DILocation(line: 288, column: 66, scope: !6561)
!6587 = !DILocation(line: 288, column: 72, scope: !6561)
!6588 = !DILocation(line: 288, column: 62, scope: !6561)
!6589 = !DILocation(line: 289, column: 13, scope: !6561)
!6590 = !DILocation(line: 291, column: 62, scope: !6561)
!6591 = !DILocation(line: 292, column: 66, scope: !6561)
!6592 = !DILocation(line: 292, column: 72, scope: !6561)
!6593 = !DILocation(line: 292, column: 62, scope: !6561)
!6594 = !DILocation(line: 293, column: 13, scope: !6561)
!6595 = !DILocation(line: 295, column: 62, scope: !6561)
!6596 = !DILocation(line: 296, column: 66, scope: !6561)
!6597 = !DILocation(line: 296, column: 62, scope: !6561)
!6598 = !DILocation(line: 297, column: 13, scope: !6561)
!6599 = !DILocation(line: 299, column: 1, scope: !6551)
!6600 = !DILocation(line: 131, column: 9, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !1020, file: !1021, line: 131, column: 9)
!6602 = !DILocation(line: 131, column: 9, scope: !1020)
!6603 = !DILocation(line: 0, scope: !1020)
!6604 = !DILocation(line: 134, column: 49, scope: !6605)
!6605 = distinct !DILexicalBlock(scope: !6606, file: !1021, line: 133, column: 46)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !1021, line: 133, column: 9)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !1021, line: 133, column: 9)
!6608 = distinct !DILexicalBlock(scope: !6601, file: !1021, line: 131, column: 28)
!6609 = !DILocation(line: 134, column: 13, scope: !6605)
!6610 = !DILocation(line: 133, column: 42, scope: !6606)
!6611 = !DILocation(line: 133, column: 23, scope: !6606)
!6612 = !DILocation(line: 133, column: 9, scope: !6607)
!6613 = distinct !{!6613, !6612, !6614}
!6614 = !DILocation(line: 135, column: 9, scope: !6607)
!6615 = !DILocation(line: 136, column: 22, scope: !6608)
!6616 = !DILocation(line: 137, column: 5, scope: !6608)
!6617 = !DILocation(line: 138, column: 5, scope: !1020)
!6618 = distinct !DISubprogram(name: "NVIC_SetPriority", scope: !1030, file: !1030, line: 1577, type: !6619, scopeLine: 1578, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6621)
!6619 = !DISubroutineType(types: !6620)
!6620 = !{null, !863, !61}
!6621 = !{!6622, !6623}
!6622 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6618, file: !1030, line: 1577, type: !863)
!6623 = !DILocalVariable(name: "priority", arg: 2, scope: !6618, file: !1030, line: 1577, type: !61)
!6624 = !DILocation(line: 0, scope: !6618)
!6625 = !DILocation(line: 1582, column: 34, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !1030, line: 1581, column: 8)
!6627 = distinct !DILexicalBlock(scope: !6618, file: !1030, line: 1579, column: 6)
!6628 = !DILocation(line: 1582, column: 5, scope: !6626)
!6629 = !DILocation(line: 1582, column: 32, scope: !6626)
!6630 = !DILocation(line: 1583, column: 1, scope: !6618)
!6631 = distinct !DISubprogram(name: "hal_nvic_enable_irq", scope: !1021, file: !1021, line: 141, type: !6632, scopeLine: 142, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6634)
!6632 = !DISubroutineType(types: !6633)
!6633 = !{!1024, !862}
!6634 = !{!6635, !6636}
!6635 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6631, file: !1021, line: 141, type: !862)
!6636 = !DILocalVariable(name: "status", scope: !6631, file: !1021, line: 143, type: !1024)
!6637 = !DILocation(line: 0, scope: !6631)
!6638 = !DILocation(line: 145, column: 40, scope: !6639)
!6639 = distinct !DILexicalBlock(scope: !6631, file: !1021, line: 145, column: 9)
!6640 = !DILocation(line: 149, column: 9, scope: !6641)
!6641 = distinct !DILexicalBlock(scope: !6639, file: !1021, line: 148, column: 12)
!6642 = !DILocation(line: 153, column: 5, scope: !6631)
!6643 = !DILocation(line: 154, column: 1, scope: !6631)
!6644 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1030, file: !1030, line: 1494, type: !6645, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6647)
!6645 = !DISubroutineType(types: !6646)
!6646 = !{null, !863}
!6647 = !{!6648}
!6648 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6644, file: !1030, line: 1494, type: !863)
!6649 = !DILocation(line: 0, scope: !6644)
!6650 = !DILocation(line: 1497, column: 91, scope: !6644)
!6651 = !DILocation(line: 1497, column: 61, scope: !6644)
!6652 = !DILocation(line: 1497, column: 40, scope: !6644)
!6653 = !DILocation(line: 1497, column: 3, scope: !6644)
!6654 = !DILocation(line: 1497, column: 46, scope: !6644)
!6655 = !DILocation(line: 1498, column: 1, scope: !6644)
!6656 = distinct !DISubprogram(name: "hal_nvic_disable_irq", scope: !1021, file: !1021, line: 156, type: !6632, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6657)
!6657 = !{!6658, !6659}
!6658 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6656, file: !1021, line: 156, type: !862)
!6659 = !DILocalVariable(name: "status", scope: !6656, file: !1021, line: 158, type: !1024)
!6660 = !DILocation(line: 0, scope: !6656)
!6661 = !DILocation(line: 160, column: 40, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6656, file: !1021, line: 160, column: 9)
!6663 = !DILocation(line: 164, column: 9, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6662, file: !1021, line: 163, column: 12)
!6665 = !DILocation(line: 168, column: 5, scope: !6656)
!6666 = !DILocation(line: 169, column: 1, scope: !6656)
!6667 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1030, file: !1030, line: 1507, type: !6645, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6668)
!6668 = !{!6669}
!6669 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6667, file: !1030, line: 1507, type: !863)
!6670 = !DILocation(line: 0, scope: !6667)
!6671 = !DILocation(line: 1509, column: 65, scope: !6667)
!6672 = !DILocation(line: 1509, column: 44, scope: !6667)
!6673 = !DILocation(line: 1509, column: 32, scope: !6667)
!6674 = !DILocation(line: 1509, column: 3, scope: !6667)
!6675 = !DILocation(line: 1509, column: 39, scope: !6667)
!6676 = !DILocation(line: 1510, column: 1, scope: !6667)
!6677 = distinct !DISubprogram(name: "hal_nvic_get_pending_irq", scope: !1021, file: !1021, line: 171, type: !6678, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6680)
!6678 = !DISubroutineType(types: !6679)
!6679 = !{!61, !862}
!6680 = !{!6681, !6682}
!6681 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6677, file: !1021, line: 171, type: !862)
!6682 = !DILocalVariable(name: "ret", scope: !6677, file: !1021, line: 173, type: !61)
!6683 = !DILocation(line: 0, scope: !6677)
!6684 = !DILocation(line: 175, column: 40, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6677, file: !1021, line: 175, column: 9)
!6686 = !DILocation(line: 178, column: 15, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6685, file: !1021, line: 177, column: 12)
!6688 = !DILocation(line: 181, column: 5, scope: !6677)
!6689 = !DILocation(line: 182, column: 1, scope: !6677)
!6690 = distinct !DISubprogram(name: "NVIC_GetPendingIRQ", scope: !1030, file: !1030, line: 1523, type: !6691, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6693)
!6691 = !DISubroutineType(types: !6692)
!6692 = !{!61, !863}
!6693 = !{!6694}
!6694 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6690, file: !1030, line: 1523, type: !863)
!6695 = !DILocation(line: 0, scope: !6690)
!6696 = !DILocation(line: 1525, column: 51, scope: !6690)
!6697 = !DILocation(line: 1525, column: 23, scope: !6690)
!6698 = !DILocation(line: 1525, column: 83, scope: !6690)
!6699 = !DILocation(line: 1525, column: 22, scope: !6690)
!6700 = !DILocation(line: 1525, column: 3, scope: !6690)
!6701 = distinct !DISubprogram(name: "hal_nvic_set_pending_irq", scope: !1021, file: !1021, line: 184, type: !6632, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6702)
!6702 = !{!6703, !6704}
!6703 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6701, file: !1021, line: 184, type: !862)
!6704 = !DILocalVariable(name: "status", scope: !6701, file: !1021, line: 186, type: !1024)
!6705 = !DILocation(line: 0, scope: !6701)
!6706 = !DILocation(line: 188, column: 40, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6701, file: !1021, line: 188, column: 9)
!6708 = !DILocation(line: 192, column: 9, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6707, file: !1021, line: 191, column: 12)
!6710 = !DILocation(line: 196, column: 5, scope: !6701)
!6711 = !DILocation(line: 197, column: 1, scope: !6701)
!6712 = distinct !DISubprogram(name: "NVIC_SetPendingIRQ", scope: !1030, file: !1030, line: 1535, type: !6645, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6713)
!6713 = !{!6714}
!6714 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6712, file: !1030, line: 1535, type: !863)
!6715 = !DILocation(line: 0, scope: !6712)
!6716 = !DILocation(line: 1537, column: 65, scope: !6712)
!6717 = !DILocation(line: 1537, column: 44, scope: !6712)
!6718 = !DILocation(line: 1537, column: 32, scope: !6712)
!6719 = !DILocation(line: 1537, column: 3, scope: !6712)
!6720 = !DILocation(line: 1537, column: 39, scope: !6712)
!6721 = !DILocation(line: 1538, column: 1, scope: !6712)
!6722 = distinct !DISubprogram(name: "hal_nvic_clear_pending_irq", scope: !1021, file: !1021, line: 199, type: !6632, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6723)
!6723 = !{!6724, !6725}
!6724 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6722, file: !1021, line: 199, type: !862)
!6725 = !DILocalVariable(name: "status", scope: !6722, file: !1021, line: 201, type: !1024)
!6726 = !DILocation(line: 0, scope: !6722)
!6727 = !DILocation(line: 203, column: 40, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6722, file: !1021, line: 203, column: 9)
!6729 = !DILocation(line: 207, column: 9, scope: !6730)
!6730 = distinct !DILexicalBlock(scope: !6728, file: !1021, line: 206, column: 12)
!6731 = !DILocation(line: 211, column: 5, scope: !6722)
!6732 = !DILocation(line: 212, column: 1, scope: !6722)
!6733 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1030, file: !1030, line: 1547, type: !6645, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6734)
!6734 = !{!6735}
!6735 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6733, file: !1030, line: 1547, type: !863)
!6736 = !DILocation(line: 0, scope: !6733)
!6737 = !DILocation(line: 1549, column: 65, scope: !6733)
!6738 = !DILocation(line: 1549, column: 44, scope: !6733)
!6739 = !DILocation(line: 1549, column: 32, scope: !6733)
!6740 = !DILocation(line: 1549, column: 3, scope: !6733)
!6741 = !DILocation(line: 1549, column: 39, scope: !6733)
!6742 = !DILocation(line: 1550, column: 1, scope: !6733)
!6743 = distinct !DISubprogram(name: "hal_nvic_set_priority", scope: !1021, file: !1021, line: 214, type: !6744, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6746)
!6744 = !DISubroutineType(types: !6745)
!6745 = !{!1024, !862, !61}
!6746 = !{!6747, !6748, !6749}
!6747 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6743, file: !1021, line: 214, type: !862)
!6748 = !DILocalVariable(name: "priority", arg: 2, scope: !6743, file: !1021, line: 214, type: !61)
!6749 = !DILocalVariable(name: "status", scope: !6743, file: !1021, line: 216, type: !1024)
!6750 = !DILocation(line: 0, scope: !6743)
!6751 = !DILocation(line: 218, column: 40, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6743, file: !1021, line: 218, column: 9)
!6753 = !DILocation(line: 222, column: 9, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6752, file: !1021, line: 221, column: 12)
!6755 = !DILocation(line: 226, column: 5, scope: !6743)
!6756 = !DILocation(line: 227, column: 1, scope: !6743)
!6757 = distinct !DISubprogram(name: "hal_nvic_get_priority", scope: !1021, file: !1021, line: 229, type: !6678, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6758)
!6758 = !{!6759, !6760}
!6759 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6757, file: !1021, line: 229, type: !862)
!6760 = !DILocalVariable(name: "ret", scope: !6757, file: !1021, line: 231, type: !61)
!6761 = !DILocation(line: 0, scope: !6757)
!6762 = !DILocation(line: 233, column: 40, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6757, file: !1021, line: 233, column: 9)
!6764 = !DILocation(line: 236, column: 15, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6763, file: !1021, line: 235, column: 12)
!6766 = !DILocation(line: 239, column: 5, scope: !6757)
!6767 = !DILocation(line: 240, column: 1, scope: !6757)
!6768 = distinct !DISubprogram(name: "NVIC_GetPriority", scope: !1030, file: !1030, line: 1597, type: !6691, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6769)
!6769 = !{!6770}
!6770 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6768, file: !1030, line: 1597, type: !863)
!6771 = !DILocation(line: 0, scope: !6768)
!6772 = !DILocation(line: 1603, column: 23, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !1030, line: 1602, column: 8)
!6774 = distinct !DILexicalBlock(scope: !6768, file: !1030, line: 1600, column: 6)
!6775 = !DILocation(line: 1603, column: 60, scope: !6773)
!6776 = !DILocation(line: 1604, column: 1, scope: !6768)
!6777 = distinct !DISubprogram(name: "isrC_main", scope: !1021, file: !1021, line: 248, type: !1022, scopeLine: 249, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6778)
!6778 = !{!6779, !6780}
!6779 = !DILocalVariable(name: "status", scope: !6777, file: !1021, line: 250, type: !1024)
!6780 = !DILocalVariable(name: "irq_number", scope: !6777, file: !1021, line: 251, type: !862)
!6781 = !DILocation(line: 0, scope: !6777)
!6782 = !DILocation(line: 253, column: 5, scope: !6777)
!6783 = !DILocation(line: 255, column: 35, scope: !6777)
!6784 = !DILocation(line: 256, column: 40, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6777, file: !1021, line: 256, column: 9)
!6786 = !DILocation(line: 259, column: 48, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6785, file: !1021, line: 259, column: 16)
!6788 = !DILocation(line: 259, column: 62, scope: !6787)
!6789 = !DILocation(line: 259, column: 16, scope: !6785)
!6790 = !DILocation(line: 261, column: 9, scope: !6791)
!6791 = distinct !DILexicalBlock(scope: !6787, file: !1021, line: 259, column: 71)
!6792 = !DILocation(line: 262, column: 9, scope: !6791)
!6793 = !DILocation(line: 264, column: 55, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6787, file: !1021, line: 263, column: 12)
!6795 = !DILocation(line: 264, column: 41, scope: !6794)
!6796 = !DILocation(line: 264, column: 53, scope: !6794)
!6797 = !DILocation(line: 265, column: 41, scope: !6794)
!6798 = !DILocation(line: 265, column: 9, scope: !6794)
!6799 = !DILocation(line: 269, column: 5, scope: !6777)
!6800 = !DILocation(line: 270, column: 1, scope: !6777)
!6801 = distinct !DISubprogram(name: "get_current_irq", scope: !1021, file: !1021, line: 242, type: !3940, scopeLine: 243, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6802)
!6802 = !{!6803}
!6803 = !DILocalVariable(name: "irq_num", scope: !6801, file: !1021, line: 244, type: !61)
!6804 = !DILocation(line: 244, column: 31, scope: !6801)
!6805 = !DILocation(line: 244, column: 36, scope: !6801)
!6806 = !DILocation(line: 0, scope: !6801)
!6807 = !DILocation(line: 245, column: 21, scope: !6801)
!6808 = !DILocation(line: 245, column: 5, scope: !6801)
!6809 = distinct !DISubprogram(name: "get_pending_irq", scope: !1021, file: !1021, line: 121, type: !3940, scopeLine: 122, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !293)
!6810 = !DILocation(line: 123, column: 19, scope: !6809)
!6811 = !DILocation(line: 123, column: 51, scope: !6809)
!6812 = !DILocation(line: 123, column: 5, scope: !6809)
!6813 = distinct !DISubprogram(name: "hal_nvic_register_isr_handler", scope: !1021, file: !1021, line: 272, type: !6814, scopeLine: 273, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6817)
!6814 = !DISubroutineType(types: !6815)
!6815 = !{!1024, !862, !6816}
!6816 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_nvic_isr_t", file: !716, line: 175, baseType: !1102)
!6817 = !{!6818, !6819, !6820}
!6818 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6813, file: !1021, line: 272, type: !862)
!6819 = !DILocalVariable(name: "callback", arg: 2, scope: !6813, file: !1021, line: 272, type: !6816)
!6820 = !DILocalVariable(name: "mask", scope: !6813, file: !1021, line: 274, type: !61)
!6821 = !DILocation(line: 0, scope: !6813)
!6822 = !DILocation(line: 276, column: 40, scope: !6823)
!6823 = distinct !DILexicalBlock(scope: !6813, file: !1021, line: 276, column: 9)
!6824 = !DILocation(line: 280, column: 12, scope: !6813)
!6825 = !DILocation(line: 281, column: 5, scope: !6813)
!6826 = !DILocation(line: 282, column: 37, scope: !6813)
!6827 = !DILocation(line: 282, column: 51, scope: !6813)
!6828 = !DILocation(line: 283, column: 37, scope: !6813)
!6829 = !DILocation(line: 283, column: 49, scope: !6813)
!6830 = !DILocation(line: 284, column: 5, scope: !6813)
!6831 = !DILocation(line: 286, column: 5, scope: !6813)
!6832 = !DILocation(line: 287, column: 1, scope: !6813)
!6833 = distinct !DISubprogram(name: "hal_nvic_save_and_set_interrupt_mask", scope: !1021, file: !1021, line: 289, type: !6834, scopeLine: 290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6836)
!6834 = !DISubroutineType(types: !6835)
!6835 = !{!1024, !1153}
!6836 = !{!6837}
!6837 = !DILocalVariable(name: "mask", arg: 1, scope: !6833, file: !1021, line: 289, type: !1153)
!6838 = !DILocation(line: 0, scope: !6833)
!6839 = !DILocation(line: 291, column: 13, scope: !6833)
!6840 = !DILocation(line: 291, column: 11, scope: !6833)
!6841 = !DILocation(line: 292, column: 5, scope: !6833)
!6842 = distinct !DISubprogram(name: "hal_nvic_restore_interrupt_mask", scope: !1021, file: !1021, line: 295, type: !6843, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1025, retainedNodes: !6845)
!6843 = !DISubroutineType(types: !6844)
!6844 = !{!1024, !61}
!6845 = !{!6846}
!6846 = !DILocalVariable(name: "mask", arg: 1, scope: !6842, file: !1021, line: 295, type: !61)
!6847 = !DILocation(line: 0, scope: !6842)
!6848 = !DILocation(line: 297, column: 5, scope: !6842)
!6849 = !DILocation(line: 298, column: 5, scope: !6842)
!6850 = distinct !DISubprogram(name: "save_and_set_interrupt_mask", scope: !2694, file: !2694, line: 51, type: !3940, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6851)
!6851 = !{!6852, !6853}
!6852 = !DILocalVariable(name: "mask", scope: !6850, file: !2694, line: 53, type: !61)
!6853 = !DILocalVariable(name: "priority", scope: !6850, file: !2694, line: 55, type: !61)
!6854 = !DILocation(line: 521, column: 3, scope: !6855, inlinedAt: !6859)
!6855 = distinct !DISubprogram(name: "__get_BASEPRI", scope: !6856, file: !6856, line: 517, type: !3940, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6857)
!6856 = !DIFile(filename: "../../../../../driver/CMSIS/Include/core_cmFunc.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!6857 = !{!6858}
!6858 = !DILocalVariable(name: "result", scope: !6855, file: !6856, line: 519, type: !61)
!6859 = distinct !DILocation(line: 53, column: 21, scope: !6850)
!6860 = !{i64 457576}
!6861 = !DILocation(line: 0, scope: !6855, inlinedAt: !6859)
!6862 = !DILocation(line: 0, scope: !6850)
!6863 = !DILocalVariable(name: "value", arg: 1, scope: !6864, file: !6856, line: 532, type: !61)
!6864 = distinct !DISubprogram(name: "__set_BASEPRI", scope: !6856, file: !6856, line: 532, type: !6865, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6867)
!6865 = !DISubroutineType(types: !6866)
!6866 = !{null, !61}
!6867 = !{!6863}
!6868 = !DILocation(line: 0, scope: !6864, inlinedAt: !6869)
!6869 = distinct !DILocation(line: 56, column: 5, scope: !6850)
!6870 = !DILocation(line: 534, column: 3, scope: !6864, inlinedAt: !6869)
!6871 = !{i64 457909}
!6872 = !DILocation(line: 456, column: 3, scope: !6873, inlinedAt: !6874)
!6873 = distinct !DISubprogram(name: "__DMB", scope: !2806, file: !2806, line: 454, type: !291, scopeLine: 455, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !293)
!6874 = distinct !DILocation(line: 57, column: 5, scope: !6850)
!6875 = !{i64 430665}
!6876 = !DILocation(line: 434, column: 3, scope: !6877, inlinedAt: !6878)
!6877 = distinct !DISubprogram(name: "__ISB", scope: !2806, file: !2806, line: 432, type: !291, scopeLine: 433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !293)
!6878 = distinct !DILocation(line: 58, column: 5, scope: !6850)
!6879 = !{i64 430080}
!6880 = !DILocation(line: 59, column: 5, scope: !6850)
!6881 = distinct !DISubprogram(name: "restore_interrupt_mask", scope: !2694, file: !2694, line: 62, type: !6865, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6882)
!6882 = !{!6883}
!6883 = !DILocalVariable(name: "mask", arg: 1, scope: !6881, file: !2694, line: 62, type: !61)
!6884 = !DILocation(line: 0, scope: !6881)
!6885 = !DILocation(line: 0, scope: !6864, inlinedAt: !6886)
!6886 = distinct !DILocation(line: 64, column: 5, scope: !6881)
!6887 = !DILocation(line: 534, column: 3, scope: !6864, inlinedAt: !6886)
!6888 = !DILocation(line: 456, column: 3, scope: !6873, inlinedAt: !6889)
!6889 = distinct !DILocation(line: 65, column: 5, scope: !6881)
!6890 = !DILocation(line: 434, column: 3, scope: !6877, inlinedAt: !6891)
!6891 = distinct !DILocation(line: 66, column: 5, scope: !6881)
!6892 = !DILocation(line: 67, column: 1, scope: !6881)
!6893 = distinct !DISubprogram(name: "nvic_mask_all_interrupt", scope: !2694, file: !2694, line: 69, type: !291, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6894)
!6894 = !{!6895, !6896}
!6895 = !DILocalVariable(name: "irq_number", scope: !6893, file: !2694, line: 71, type: !862)
!6896 = !DILocalVariable(name: "mask", scope: !6893, file: !2694, line: 72, type: !61)
!6897 = !DILocation(line: 72, column: 21, scope: !6893)
!6898 = !DILocation(line: 0, scope: !6893)
!6899 = !DILocation(line: 73, column: 5, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6893, file: !2694, line: 73, column: 5)
!6901 = !DILocation(line: 74, column: 9, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !2694, line: 73, column: 85)
!6903 = distinct !DILexicalBlock(scope: !6900, file: !2694, line: 73, column: 5)
!6904 = !DILocation(line: 73, column: 81, scope: !6903)
!6905 = !DILocation(line: 73, column: 53, scope: !6903)
!6906 = distinct !{!6906, !6899, !6907}
!6907 = !DILocation(line: 75, column: 5, scope: !6900)
!6908 = !DILocation(line: 76, column: 5, scope: !6893)
!6909 = !DILocation(line: 77, column: 1, scope: !6893)
!6910 = distinct !DISubprogram(name: "NVIC_DisableIRQ", scope: !1030, file: !1030, line: 1507, type: !6645, scopeLine: 1508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6911)
!6911 = !{!6912}
!6912 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6910, file: !1030, line: 1507, type: !863)
!6913 = !DILocation(line: 0, scope: !6910)
!6914 = !DILocation(line: 1509, column: 65, scope: !6910)
!6915 = !DILocation(line: 1509, column: 44, scope: !6910)
!6916 = !DILocation(line: 1509, column: 32, scope: !6910)
!6917 = !DILocation(line: 1509, column: 3, scope: !6910)
!6918 = !DILocation(line: 1509, column: 39, scope: !6910)
!6919 = !DILocation(line: 1510, column: 1, scope: !6910)
!6920 = distinct !DISubprogram(name: "nvic_unmask_all_interrupt", scope: !2694, file: !2694, line: 79, type: !291, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6921)
!6921 = !{!6922, !6923}
!6922 = !DILocalVariable(name: "irq_number", scope: !6920, file: !2694, line: 81, type: !862)
!6923 = !DILocalVariable(name: "mask", scope: !6920, file: !2694, line: 82, type: !61)
!6924 = !DILocation(line: 82, column: 21, scope: !6920)
!6925 = !DILocation(line: 0, scope: !6920)
!6926 = !DILocation(line: 84, column: 5, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6920, file: !2694, line: 84, column: 5)
!6928 = !DILocation(line: 85, column: 9, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !2694, line: 84, column: 85)
!6930 = distinct !DILexicalBlock(scope: !6927, file: !2694, line: 84, column: 5)
!6931 = !DILocation(line: 84, column: 81, scope: !6930)
!6932 = !DILocation(line: 84, column: 53, scope: !6930)
!6933 = distinct !{!6933, !6926, !6934}
!6934 = !DILocation(line: 86, column: 5, scope: !6927)
!6935 = !DILocation(line: 87, column: 5, scope: !6920)
!6936 = !DILocation(line: 88, column: 1, scope: !6920)
!6937 = distinct !DISubprogram(name: "NVIC_EnableIRQ", scope: !1030, file: !1030, line: 1494, type: !6645, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6938)
!6938 = !{!6939}
!6939 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6937, file: !1030, line: 1494, type: !863)
!6940 = !DILocation(line: 0, scope: !6937)
!6941 = !DILocation(line: 1497, column: 91, scope: !6937)
!6942 = !DILocation(line: 1497, column: 61, scope: !6937)
!6943 = !DILocation(line: 1497, column: 40, scope: !6937)
!6944 = !DILocation(line: 1497, column: 3, scope: !6937)
!6945 = !DILocation(line: 1497, column: 46, scope: !6937)
!6946 = !DILocation(line: 1498, column: 1, scope: !6937)
!6947 = distinct !DISubprogram(name: "nvic_clear_all_pending_interrupt", scope: !2694, file: !2694, line: 90, type: !291, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6948)
!6948 = !{!6949}
!6949 = !DILocalVariable(name: "irq_number", scope: !6947, file: !2694, line: 92, type: !862)
!6950 = !DILocation(line: 0, scope: !6947)
!6951 = !DILocation(line: 93, column: 5, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6947, file: !2694, line: 93, column: 5)
!6953 = !DILocation(line: 94, column: 9, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6955, file: !2694, line: 93, column: 85)
!6955 = distinct !DILexicalBlock(scope: !6952, file: !2694, line: 93, column: 5)
!6956 = !DILocation(line: 93, column: 81, scope: !6955)
!6957 = !DILocation(line: 93, column: 53, scope: !6955)
!6958 = distinct !{!6958, !6951, !6959}
!6959 = !DILocation(line: 95, column: 5, scope: !6952)
!6960 = !DILocation(line: 96, column: 1, scope: !6947)
!6961 = distinct !DISubprogram(name: "NVIC_ClearPendingIRQ", scope: !1030, file: !1030, line: 1547, type: !6645, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6962)
!6962 = !{!6963}
!6963 = !DILocalVariable(name: "IRQn", arg: 1, scope: !6961, file: !1030, line: 1547, type: !863)
!6964 = !DILocation(line: 0, scope: !6961)
!6965 = !DILocation(line: 1549, column: 65, scope: !6961)
!6966 = !DILocation(line: 1549, column: 44, scope: !6961)
!6967 = !DILocation(line: 1549, column: 32, scope: !6961)
!6968 = !DILocation(line: 1549, column: 3, scope: !6961)
!6969 = !DILocation(line: 1549, column: 39, scope: !6961)
!6970 = !DILocation(line: 1550, column: 1, scope: !6961)
!6971 = distinct !DISubprogram(name: "nvic_irq_software_trigger", scope: !2694, file: !2694, line: 98, type: !6632, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6972)
!6972 = !{!6973}
!6973 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6971, file: !2694, line: 98, type: !862)
!6974 = !DILocation(line: 0, scope: !6971)
!6975 = !DILocation(line: 100, column: 24, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6971, file: !2694, line: 100, column: 9)
!6977 = !DILocation(line: 104, column: 5, scope: !6971)
!6978 = !DILocation(line: 105, column: 5, scope: !6971)
!6979 = !DILocation(line: 106, column: 1, scope: !6971)
!6980 = distinct !DISubprogram(name: "software_trigger_irq", scope: !2694, file: !2694, line: 45, type: !1103, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !6981)
!6981 = !{!6982}
!6982 = !DILocalVariable(name: "irq_number", arg: 1, scope: !6980, file: !2694, line: 45, type: !862)
!6983 = !DILocation(line: 0, scope: !6980)
!6984 = !DILocation(line: 47, column: 54, scope: !6980)
!6985 = !DILocation(line: 47, column: 16, scope: !6980)
!6986 = !DILocation(line: 445, column: 3, scope: !6987, inlinedAt: !6988)
!6987 = distinct !DISubprogram(name: "__DSB", scope: !2806, file: !2806, line: 443, type: !291, scopeLine: 444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !293)
!6988 = distinct !DILocation(line: 48, column: 5, scope: !6980)
!6989 = !{i64 430376}
!6990 = !DILocation(line: 49, column: 1, scope: !6980)
!6991 = distinct !DISubprogram(name: "hal_nvic_query_exception_number", scope: !2694, file: !2694, line: 114, type: !3940, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2693, retainedNodes: !293)
!6992 = !DILocation(line: 116, column: 19, scope: !6991)
!6993 = !DILocation(line: 116, column: 24, scope: !6991)
!6994 = !DILocation(line: 116, column: 5, scope: !6991)
!6995 = distinct !DISubprogram(name: "SFI_BlankCheck", scope: !1116, file: !1116, line: 71, type: !6996, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !6998)
!6996 = !DISubroutineType(types: !6997)
!6997 = !{null, !88, !61}
!6998 = !{!6999, !7000, !7001, !7095, !7096, !7097}
!6999 = !DILocalVariable(name: "MTDData", arg: 1, scope: !6995, file: !1116, line: 71, type: !88)
!7000 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !6995, file: !1116, line: 71, type: !61)
!7001 = !DILocalVariable(name: "D", scope: !6995, file: !1116, line: 73, type: !7002)
!7002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7003, size: 32)
!7003 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_Data", file: !1306, line: 193, baseType: !7004)
!7004 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 134, size: 1824, elements: !7005)
!7005 = !{!7006, !7007, !7008, !7014, !7020, !7021, !7028, !7029, !7036, !7037, !7038, !7039, !7046, !7047, !7077, !7078, !7079, !7080, !7081, !7082, !7083, !7084, !7085, !7086, !7087, !7088, !7089, !7090, !7091, !7092, !7093, !7094}
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "Signature", scope: !7004, file: !1306, line: 136, baseType: !61, size: 32)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddr", scope: !7004, file: !1306, line: 137, baseType: !762, size: 32, offset: 32)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLock", scope: !7004, file: !1306, line: 138, baseType: !7009, size: 32, offset: 64)
!7009 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_semid", file: !1390, line: 56, baseType: !7010)
!7010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7011, size: 32)
!7011 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 54, size: 8, elements: !7012)
!7012 = !{!7013}
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7011, file: !1390, line: 55, baseType: !460, size: 8)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockOwner", scope: !7004, file: !1306, line: 139, baseType: !7015, size: 32, offset: 96)
!7015 = !DIDerivedType(tag: DW_TAG_typedef, name: "kal_taskid", file: !1390, line: 46, baseType: !7016)
!7016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7017, size: 32)
!7017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1390, line: 44, size: 8, elements: !7018)
!7018 = !{!7019}
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !7017, file: !1390, line: 45, baseType: !460, size: 8)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "DeviceLockDepth", scope: !7004, file: !1306, line: 140, baseType: !1402, size: 8, offset: 128)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "RegionInfo", scope: !7004, file: !1306, line: 143, baseType: !7022, size: 32, offset: 160)
!7022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7023, size: 32)
!7023 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashRegionInfo", file: !1408, line: 146, baseType: !7024)
!7024 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 143, size: 64, elements: !7025)
!7025 = !{!7026, !7027}
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !7024, file: !1408, line: 144, baseType: !61, size: 32)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !7024, file: !1408, line: 145, baseType: !61, size: 32, offset: 32)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "CurrAddr", scope: !7004, file: !1306, line: 144, baseType: !762, size: 32, offset: 192)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "BankInfo", scope: !7004, file: !1306, line: 145, baseType: !7030, size: 32, offset: 224)
!7030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7031, size: 32)
!7031 = !DIDerivedType(tag: DW_TAG_typedef, name: "FlashBankInfo", file: !1408, line: 152, baseType: !7032)
!7032 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 149, size: 64, elements: !7033)
!7033 = !{!7034, !7035}
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "BankSize", scope: !7032, file: !1408, line: 150, baseType: !61, size: 32)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "Banks", scope: !7032, file: !1408, line: 151, baseType: !61, size: 32, offset: 32)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankAddr", scope: !7004, file: !1306, line: 146, baseType: !762, size: 32, offset: 256)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "CurrBankSize", scope: !7004, file: !1306, line: 147, baseType: !61, size: 32, offset: 288)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "CurrPollAddr", scope: !7004, file: !1306, line: 148, baseType: !762, size: 32, offset: 320)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_tbl", scope: !7004, file: !1306, line: 151, baseType: !7040, size: 1024, offset: 352)
!7040 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7041, size: 1024, elements: !1431)
!7041 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_AddrLookup", file: !1408, line: 170, baseType: !7042)
!7042 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 167, size: 64, elements: !7043)
!7043 = !{!7044, !7045}
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "BlockIndex", scope: !7042, file: !1408, line: 168, baseType: !61, size: 32)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "BaseAddress", scope: !7042, file: !1408, line: 169, baseType: !61, size: 32, offset: 32)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "StatusMap", scope: !7004, file: !1306, line: 155, baseType: !1433, size: 32, offset: 1376)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "CMD", scope: !7004, file: !1306, line: 156, baseType: !7048, size: 32, offset: 1408)
!7048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7049, size: 32)
!7049 = !DIDerivedType(tag: DW_TAG_typedef, name: "SF_MTD_CMD", file: !1306, line: 124, baseType: !7050)
!7050 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1306, line: 90, size: 200, elements: !7051)
!7051 = !{!7052, !7053, !7054, !7055, !7056, !7057, !7058, !7059, !7060, !7061, !7062, !7063, !7064, !7065, !7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073, !7074, !7075, !7076}
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "PageProg", scope: !7050, file: !1306, line: 91, baseType: !460, size: 8)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "WriteEnable", scope: !7050, file: !1306, line: 92, baseType: !460, size: 8, offset: 8)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "Suspend", scope: !7050, file: !1306, line: 94, baseType: !460, size: 8, offset: 16)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "Resume", scope: !7050, file: !1306, line: 95, baseType: !460, size: 8, offset: 24)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "Read", scope: !7050, file: !1306, line: 96, baseType: !460, size: 8, offset: 32)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "Erase", scope: !7050, file: !1306, line: 98, baseType: !460, size: 8, offset: 40)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "Erase4K", scope: !7050, file: !1306, line: 99, baseType: !460, size: 8, offset: 48)
!7059 = !DIDerivedType(tag: DW_TAG_member, name: "Erase32K", scope: !7050, file: !1306, line: 100, baseType: !460, size: 8, offset: 56)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "Erase64K", scope: !7050, file: !1306, line: 101, baseType: !460, size: 8, offset: 64)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_SPI", scope: !7050, file: !1306, line: 103, baseType: !460, size: 8, offset: 72)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "ReadID_QPI", scope: !7050, file: !1306, line: 104, baseType: !460, size: 8, offset: 80)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "ReadBPReg", scope: !7050, file: !1306, line: 106, baseType: !460, size: 8, offset: 88)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "WriteBPReg", scope: !7050, file: !1306, line: 107, baseType: !460, size: 8, offset: 96)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSecurityReg", scope: !7050, file: !1306, line: 108, baseType: !460, size: 8, offset: 104)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "WriteSecurityReg", scope: !7050, file: !1306, line: 109, baseType: !460, size: 8, offset: 112)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "ReadSuspendReg", scope: !7050, file: !1306, line: 110, baseType: !460, size: 8, offset: 120)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "ReadReadyReg", scope: !7050, file: !1306, line: 111, baseType: !460, size: 8, offset: 128)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "ReadFailReg", scope: !7050, file: !1306, line: 112, baseType: !460, size: 8, offset: 136)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "EnterDPD", scope: !7050, file: !1306, line: 114, baseType: !460, size: 8, offset: 144)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "LeaveDPD", scope: !7050, file: !1306, line: 115, baseType: !460, size: 8, offset: 152)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "OTPProg", scope: !7050, file: !1306, line: 118, baseType: !460, size: 8, offset: 160)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7050, file: !1306, line: 119, baseType: !460, size: 8, offset: 168)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "OTPEnter", scope: !7050, file: !1306, line: 120, baseType: !460, size: 8, offset: 176)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "OTPExit", scope: !7050, file: !1306, line: 121, baseType: !460, size: 8, offset: 184)
!7076 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7050, file: !1306, line: 122, baseType: !460, size: 8, offset: 192)
!7077 = !DIDerivedType(tag: DW_TAG_member, name: "Flag", scope: !7004, file: !1306, line: 157, baseType: !61, size: 32, offset: 1440)
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "BPRBitCount", scope: !7004, file: !1306, line: 158, baseType: !968, size: 16, offset: 1472)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "UniformBlock", scope: !7004, file: !1306, line: 159, baseType: !968, size: 16, offset: 1488)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLength", scope: !7004, file: !1306, line: 163, baseType: !968, size: 16, offset: 1504)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "OTPBase", scope: !7004, file: !1306, line: 164, baseType: !968, size: 16, offset: 1520)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendLatency", scope: !7004, file: !1306, line: 167, baseType: !460, size: 8, offset: 1536)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "FlashID", scope: !7004, file: !1306, line: 168, baseType: !1472, size: 24, offset: 1544)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "DriverStatus", scope: !7004, file: !1306, line: 169, baseType: !460, size: 8, offset: 1568)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "AddressCycle", scope: !7004, file: !1306, line: 170, baseType: !460, size: 8, offset: 1576)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "CS", scope: !7004, file: !1306, line: 173, baseType: !968, size: 16, offset: 1584)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "sf_dal_fix", scope: !7004, file: !1306, line: 174, baseType: !61, size: 32, offset: 1600)
!7088 = !DIDerivedType(tag: DW_TAG_member, name: "CS_Size", scope: !7004, file: !1306, line: 175, baseType: !61, size: 32, offset: 1632)
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_BUSY", scope: !7004, file: !1306, line: 178, baseType: !91, size: 8, offset: 1664)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "NOR_FLASH_SUSPENDED", scope: !7004, file: !1306, line: 179, baseType: !91, size: 8, offset: 1672)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "UnlockBlock", scope: !7004, file: !1306, line: 182, baseType: !1483, size: 32, offset: 1696)
!7092 = !DIDerivedType(tag: DW_TAG_member, name: "OTPLock", scope: !7004, file: !1306, line: 186, baseType: !1483, size: 32, offset: 1728)
!7093 = !DIDerivedType(tag: DW_TAG_member, name: "OTPRead", scope: !7004, file: !1306, line: 187, baseType: !1488, size: 32, offset: 1760)
!7094 = !DIDerivedType(tag: DW_TAG_member, name: "OTPWrite", scope: !7004, file: !1306, line: 188, baseType: !1488, size: 32, offset: 1792)
!7095 = !DILocalVariable(name: "i", scope: !6995, file: !1116, line: 74, type: !61)
!7096 = !DILocalVariable(name: "data_cnt", scope: !6995, file: !1116, line: 74, type: !61)
!7097 = !DILocalVariable(name: "p_data", scope: !6995, file: !1116, line: 75, type: !1153)
!7098 = !DILocation(line: 0, scope: !6995)
!7099 = !DILocation(line: 77, column: 16, scope: !6995)
!7100 = !DILocation(line: 79, column: 53, scope: !7101)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !1116, line: 79, column: 5)
!7102 = distinct !DILexicalBlock(scope: !6995, file: !1116, line: 79, column: 5)
!7103 = !DILocation(line: 79, column: 5, scope: !7102)
!7104 = !DILocation(line: 79, column: 41, scope: !7102)
!7105 = !DILocation(line: 77, column: 47, scope: !6995)
!7106 = !DILocation(line: 80, column: 13, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7108, file: !1116, line: 80, column: 13)
!7108 = distinct !DILexicalBlock(scope: !7101, file: !1116, line: 79, column: 80)
!7109 = !DILocation(line: 80, column: 21, scope: !7107)
!7110 = !DILocation(line: 80, column: 13, scope: !7108)
!7111 = !DILocation(line: 81, column: 13, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !1116, line: 81, column: 13)
!7113 = distinct !DILexicalBlock(scope: !7114, file: !1116, line: 81, column: 13)
!7114 = distinct !DILexicalBlock(scope: !7115, file: !1116, line: 81, column: 13)
!7115 = distinct !DILexicalBlock(scope: !7107, file: !1116, line: 80, column: 36)
!7116 = !DILocation(line: 79, column: 65, scope: !7101)
!7117 = !DILocation(line: 79, column: 70, scope: !7101)
!7118 = distinct !{!7118, !7103, !7119}
!7119 = !DILocation(line: 84, column: 5, scope: !7102)
!7120 = !DILocation(line: 85, column: 1, scope: !6995)
!7121 = distinct !DISubprogram(name: "SFI_ReverseByteOrder", scope: !1116, file: !1116, line: 93, type: !3688, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7122)
!7122 = !{!7123, !7124}
!7123 = !DILocalVariable(name: "num", arg: 1, scope: !7121, file: !1116, line: 93, type: !61)
!7124 = !DILocalVariable(name: "ret", scope: !7121, file: !1116, line: 95, type: !18)
!7125 = !DILocation(line: 0, scope: !7121)
!7126 = !DILocation(line: 100, column: 9, scope: !7121)
!7127 = !DILocation(line: 102, column: 5, scope: !7121)
!7128 = distinct !DISubprogram(name: "SFI_MacEnable", scope: !1116, file: !1116, line: 110, type: !7129, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7131)
!7129 = !DISubroutineType(types: !7130)
!7130 = !{null, !967}
!7131 = !{!7132, !7133}
!7132 = !DILocalVariable(name: "CS", arg: 1, scope: !7128, file: !1116, line: 110, type: !967)
!7133 = !DILocalVariable(name: "val", scope: !7128, file: !1116, line: 112, type: !61)
!7134 = !DILocation(line: 0, scope: !7128)
!7135 = !DILocation(line: 114, column: 5, scope: !7136)
!7136 = distinct !DILexicalBlock(scope: !7137, file: !1116, line: 114, column: 5)
!7137 = distinct !DILexicalBlock(scope: !7128, file: !1116, line: 114, column: 5)
!7138 = !DILocation(line: 116, column: 16, scope: !7128)
!7139 = !DILocation(line: 117, column: 9, scope: !7128)
!7140 = !DILocation(line: 122, column: 13, scope: !7141)
!7141 = distinct !DILexicalBlock(scope: !7142, file: !1116, line: 121, column: 27)
!7142 = distinct !DILexicalBlock(scope: !7143, file: !1116, line: 121, column: 16)
!7143 = distinct !DILexicalBlock(scope: !7128, file: !1116, line: 117, column: 9)
!7144 = !DILocation(line: 127, column: 9, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !1116, line: 127, column: 9)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !1116, line: 127, column: 9)
!7147 = distinct !DILexicalBlock(scope: !7148, file: !1116, line: 127, column: 9)
!7148 = distinct !DILexicalBlock(scope: !7142, file: !1116, line: 125, column: 12)
!7149 = !DILocation(line: 0, scope: !7143)
!7150 = !DILocation(line: 134, column: 5, scope: !7128)
!7151 = !DILocation(line: 134, column: 19, scope: !7128)
!7152 = !DILocation(line: 134, column: 35, scope: !7128)
!7153 = !DILocation(line: 134, column: 12, scope: !7128)
!7154 = distinct !{!7154, !7150, !7155}
!7155 = !DILocation(line: 134, column: 57, scope: !7128)
!7156 = !DILocation(line: 135, column: 19, scope: !7128)
!7157 = !DILocation(line: 135, column: 34, scope: !7128)
!7158 = !DILocation(line: 135, column: 12, scope: !7128)
!7159 = !DILocation(line: 135, column: 5, scope: !7128)
!7160 = distinct !{!7160, !7159, !7161}
!7161 = !DILocation(line: 135, column: 50, scope: !7128)
!7162 = !DILocation(line: 130, column: 9, scope: !7128)
!7163 = !DILocation(line: 138, column: 24, scope: !7128)
!7164 = !DILocation(line: 139, column: 1, scope: !7128)
!7165 = distinct !DISubprogram(name: "SFI_MacLeave", scope: !1116, file: !1116, line: 148, type: !7129, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7166)
!7166 = !{!7167, !7168}
!7167 = !DILocalVariable(name: "CS", arg: 1, scope: !7165, file: !1116, line: 148, type: !967)
!7168 = !DILocalVariable(name: "val", scope: !7165, file: !1116, line: 150, type: !61)
!7169 = !DILocation(line: 0, scope: !7165)
!7170 = !DILocation(line: 153, column: 16, scope: !7165)
!7171 = !DILocation(line: 154, column: 9, scope: !7165)
!7172 = !DILocation(line: 155, column: 24, scope: !7165)
!7173 = !DILocation(line: 158, column: 5, scope: !7165)
!7174 = !DILocation(line: 158, column: 18, scope: !7165)
!7175 = !DILocation(line: 158, column: 32, scope: !7165)
!7176 = distinct !{!7176, !7173, !7177}
!7177 = !DILocation(line: 158, column: 49, scope: !7165)
!7178 = !DILocation(line: 163, column: 16, scope: !7165)
!7179 = !DILocation(line: 164, column: 9, scope: !7165)
!7180 = !DILocation(line: 165, column: 24, scope: !7165)
!7181 = !DILocation(line: 168, column: 5, scope: !7165)
!7182 = !DILocation(line: 168, column: 18, scope: !7165)
!7183 = !DILocation(line: 168, column: 32, scope: !7165)
!7184 = distinct !{!7184, !7181, !7185}
!7185 = !DILocation(line: 168, column: 46, scope: !7165)
!7186 = !DILocation(line: 174, column: 10, scope: !7187)
!7187 = distinct !DILexicalBlock(scope: !7165, file: !1116, line: 174, column: 9)
!7188 = !DILocation(line: 174, column: 25, scope: !7187)
!7189 = !DILocation(line: 174, column: 9, scope: !7165)
!7190 = !DILocation(line: 175, column: 9, scope: !7191)
!7191 = distinct !DILexicalBlock(scope: !7192, file: !1116, line: 175, column: 9)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !1116, line: 175, column: 9)
!7193 = distinct !DILexicalBlock(scope: !7187, file: !1116, line: 174, column: 36)
!7194 = !DILocation(line: 176, column: 5, scope: !7193)
!7195 = !DILocation(line: 179, column: 1, scope: !7165)
!7196 = distinct !DISubprogram(name: "SFI_MacTrigger", scope: !1116, file: !1116, line: 186, type: !7197, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7199)
!7197 = !DISubroutineType(types: !7198)
!7198 = !{!61, !967}
!7199 = !{!7200, !7201, !7202}
!7200 = !DILocalVariable(name: "CS", arg: 1, scope: !7196, file: !1116, line: 186, type: !967)
!7201 = !DILocalVariable(name: "val", scope: !7196, file: !1116, line: 188, type: !61)
!7202 = !DILocalVariable(name: "misc_ctl", scope: !7196, file: !1116, line: 189, type: !61)
!7203 = !DILocation(line: 0, scope: !7196)
!7204 = !DILocation(line: 204, column: 16, scope: !7196)
!7205 = !DILocation(line: 208, column: 12, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7196, file: !1116, line: 208, column: 9)
!7207 = !DILocation(line: 208, column: 9, scope: !7196)
!7208 = !DILocation(line: 212, column: 20, scope: !7196)
!7209 = !DILocation(line: 215, column: 1, scope: !7196)
!7210 = !DILocation(line: 215, column: 15, scope: !7196)
!7211 = !DILocation(line: 215, column: 29, scope: !7196)
!7212 = !DILocation(line: 215, column: 8, scope: !7196)
!7213 = distinct !{!7213, !7209, !7214}
!7214 = !DILocation(line: 215, column: 46, scope: !7196)
!7215 = !DILocation(line: 216, column: 22, scope: !7196)
!7216 = !DILocation(line: 216, column: 36, scope: !7196)
!7217 = !DILocation(line: 216, column: 9, scope: !7196)
!7218 = distinct !{!7218, !7217, !7219}
!7219 = !DILocation(line: 216, column: 47, scope: !7196)
!7220 = !DILocation(line: 218, column: 13, scope: !7196)
!7221 = distinct !DISubprogram(name: "SFI_MacWaitReady", scope: !1116, file: !1116, line: 227, type: !7129, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7222)
!7222 = !{!7223}
!7223 = !DILocalVariable(name: "CS", arg: 1, scope: !7221, file: !1116, line: 227, type: !967)
!7224 = !DILocation(line: 0, scope: !7221)
!7225 = !DILocation(line: 235, column: 5, scope: !7221)
!7226 = !DILocation(line: 236, column: 5, scope: !7221)
!7227 = !DILocation(line: 238, column: 1, scope: !7221)
!7228 = distinct !DISubprogram(name: "SFI_Dev_Command", scope: !1116, file: !1116, line: 249, type: !7229, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7231)
!7229 = !DISubroutineType(types: !7230)
!7230 = !{null, !967, !772}
!7231 = !{!7232, !7233, !7234, !7235, !7236}
!7232 = !DILocalVariable(name: "CS", arg: 1, scope: !7228, file: !1116, line: 249, type: !967)
!7233 = !DILocalVariable(name: "cmd", arg: 2, scope: !7228, file: !1116, line: 249, type: !772)
!7234 = !DILocalVariable(name: "cmdi", scope: !7228, file: !1116, line: 251, type: !61)
!7235 = !DILocalVariable(name: "cmdo", scope: !7228, file: !1116, line: 251, type: !61)
!7236 = !DILocalVariable(name: "len", scope: !7228, file: !1116, line: 252, type: !460)
!7237 = !DILocation(line: 0, scope: !7228)
!7238 = !DILocation(line: 254, column: 46, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !1116, line: 254, column: 5)
!7240 = distinct !DILexicalBlock(scope: !7228, file: !1116, line: 254, column: 5)
!7241 = !DILocation(line: 254, column: 5, scope: !7240)
!7242 = !DILocation(line: 255, column: 22, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7239, file: !1116, line: 254, column: 103)
!7244 = !DILocation(line: 255, column: 59, scope: !7243)
!7245 = !DILocation(line: 255, column: 51, scope: !7243)
!7246 = !DILocation(line: 254, column: 65, scope: !7239)
!7247 = !DILocation(line: 254, column: 97, scope: !7239)
!7248 = distinct !{!7248, !7241, !7249}
!7249 = !DILocation(line: 256, column: 5, scope: !7240)
!7250 = !DILocation(line: 258, column: 9, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7228, file: !1116, line: 258, column: 9)
!7252 = !DILocation(line: 262, column: 5, scope: !7228)
!7253 = !DILocation(line: 263, column: 33, scope: !7228)
!7254 = !DILocation(line: 264, column: 25, scope: !7228)
!7255 = !DILocation(line: 265, column: 24, scope: !7228)
!7256 = !DILocation(line: 266, column: 5, scope: !7228)
!7257 = !DILocation(line: 268, column: 5, scope: !7228)
!7258 = !DILocation(line: 269, column: 1, scope: !7228)
!7259 = distinct !DISubprogram(name: "SFI_Dev_CommandAddress", scope: !1116, file: !1116, line: 281, type: !7260, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7262)
!7260 = !DISubroutineType(types: !7261)
!7261 = !{null, !967, !5070, !772, !772}
!7262 = !{!7263, !7264, !7265, !7266, !7267, !7268}
!7263 = !DILocalVariable(name: "CS", arg: 1, scope: !7259, file: !1116, line: 281, type: !967)
!7264 = !DILocalVariable(name: "cmd", arg: 2, scope: !7259, file: !1116, line: 281, type: !5070)
!7265 = !DILocalVariable(name: "address", arg: 3, scope: !7259, file: !1116, line: 281, type: !772)
!7266 = !DILocalVariable(name: "address_bytes", arg: 4, scope: !7259, file: !1116, line: 281, type: !772)
!7267 = !DILocalVariable(name: "cmd1", scope: !7259, file: !1116, line: 283, type: !61)
!7268 = !DILocalVariable(name: "cmd2", scope: !7259, file: !1116, line: 283, type: !61)
!7269 = !DILocation(line: 0, scope: !7259)
!7270 = !DILocation(line: 285, column: 12, scope: !7259)
!7271 = !DILocation(line: 287, column: 23, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7259, file: !1116, line: 287, column: 9)
!7273 = !DILocation(line: 287, column: 9, scope: !7259)
!7274 = !DILocation(line: 288, column: 22, scope: !7275)
!7275 = distinct !DILexicalBlock(scope: !7272, file: !1116, line: 287, column: 31)
!7276 = !DILocation(line: 288, column: 55, scope: !7275)
!7277 = !DILocation(line: 288, column: 53, scope: !7275)
!7278 = !DILocation(line: 289, column: 5, scope: !7275)
!7279 = !DILocation(line: 290, column: 22, scope: !7280)
!7280 = distinct !DILexicalBlock(scope: !7272, file: !1116, line: 289, column: 12)
!7281 = !DILocation(line: 290, column: 53, scope: !7280)
!7282 = !DILocation(line: 290, column: 51, scope: !7280)
!7283 = !DILocation(line: 291, column: 21, scope: !7280)
!7284 = !DILocation(line: 0, scope: !7272)
!7285 = !DILocation(line: 294, column: 33, scope: !7259)
!7286 = !DILocation(line: 295, column: 38, scope: !7259)
!7287 = !DILocation(line: 296, column: 41, scope: !7259)
!7288 = !DILocation(line: 296, column: 25, scope: !7259)
!7289 = !DILocation(line: 297, column: 24, scope: !7259)
!7290 = !DILocation(line: 299, column: 5, scope: !7259)
!7291 = !DILocation(line: 300, column: 5, scope: !7259)
!7292 = !DILocation(line: 302, column: 1, scope: !7259)
!7293 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A3", scope: !1116, file: !1116, line: 312, type: !7294, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7296)
!7294 = !DISubroutineType(types: !7295)
!7295 = !{!61, !772, !772}
!7296 = !{!7297, !7298}
!7297 = !DILocalVariable(name: "cmd", arg: 1, scope: !7293, file: !1116, line: 312, type: !772)
!7298 = !DILocalVariable(name: "address", arg: 2, scope: !7293, file: !1116, line: 312, type: !772)
!7299 = !DILocation(line: 0, scope: !7293)
!7300 = !DILocation(line: 314, column: 14, scope: !7293)
!7301 = !DILocation(line: 314, column: 44, scope: !7293)
!7302 = !DILocation(line: 314, column: 82, scope: !7293)
!7303 = !DILocation(line: 314, column: 75, scope: !7293)
!7304 = !DILocation(line: 314, column: 5, scope: !7293)
!7305 = distinct !DISubprogram(name: "SFI_GPRAM_Write_C1A4", scope: !1116, file: !1116, line: 332, type: !7306, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7309)
!7306 = !DISubroutineType(types: !7307)
!7307 = !{!61, !772, !772, !7308, !1153}
!7308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 32)
!7309 = !{!7310, !7311, !7312, !7313, !7314, !7322, !7323, !7324}
!7310 = !DILocalVariable(name: "cmd", arg: 1, scope: !7305, file: !1116, line: 332, type: !772)
!7311 = !DILocalVariable(name: "address", arg: 2, scope: !7305, file: !1116, line: 332, type: !772)
!7312 = !DILocalVariable(name: "p_data", arg: 3, scope: !7305, file: !1116, line: 332, type: !7308)
!7313 = !DILocalVariable(name: "length", arg: 4, scope: !7305, file: !1116, line: 332, type: !1153)
!7314 = !DILocalVariable(name: "tmp", scope: !7305, file: !1116, line: 334, type: !7315)
!7315 = !DIDerivedType(tag: DW_TAG_typedef, name: "sf_uint", file: !1306, line: 202, baseType: !7316)
!7316 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1306, line: 198, size: 32, elements: !7317)
!7317 = !{!7318, !7319, !7321}
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "u32", scope: !7316, file: !1306, line: 199, baseType: !61, size: 32)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "u16", scope: !7316, file: !1306, line: 200, baseType: !7320, size: 32)
!7320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !968, size: 32, elements: !465)
!7321 = !DIDerivedType(tag: DW_TAG_member, name: "u8", scope: !7316, file: !1306, line: 201, baseType: !459, size: 32)
!7322 = !DILocalVariable(name: "cmd1", scope: !7305, file: !1116, line: 335, type: !61)
!7323 = !DILocalVariable(name: "cmd2", scope: !7305, file: !1116, line: 335, type: !61)
!7324 = !DILocalVariable(name: "i", scope: !7305, file: !1116, line: 336, type: !61)
!7325 = !DILocation(line: 0, scope: !7305)
!7326 = !DILocation(line: 334, column: 5, scope: !7305)
!7327 = !DILocation(line: 334, column: 16, scope: !7305)
!7328 = !DILocation(line: 338, column: 12, scope: !7305)
!7329 = !DILocation(line: 340, column: 17, scope: !7305)
!7330 = !DILocation(line: 342, column: 17, scope: !7305)
!7331 = !DILocation(line: 342, column: 9, scope: !7305)
!7332 = !DILocation(line: 342, column: 15, scope: !7305)
!7333 = !DILocation(line: 344, column: 22, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7335, file: !1116, line: 343, column: 29)
!7335 = distinct !DILexicalBlock(scope: !7336, file: !1116, line: 343, column: 5)
!7336 = distinct !DILexicalBlock(scope: !7305, file: !1116, line: 343, column: 5)
!7337 = !DILocation(line: 343, column: 5, scope: !7336)
!7338 = !DILocation(line: 344, column: 21, scope: !7334)
!7339 = !DILocation(line: 344, column: 9, scope: !7334)
!7340 = !DILocation(line: 344, column: 19, scope: !7334)
!7341 = !DILocation(line: 345, column: 18, scope: !7334)
!7342 = !DILocation(line: 343, column: 25, scope: !7335)
!7343 = !DILocation(line: 343, column: 19, scope: !7335)
!7344 = distinct !{!7344, !7337, !7345}
!7345 = !DILocation(line: 346, column: 5, scope: !7336)
!7346 = !DILocation(line: 347, column: 16, scope: !7305)
!7347 = !DILocation(line: 348, column: 16, scope: !7305)
!7348 = !DILocation(line: 348, column: 15, scope: !7305)
!7349 = !DILocation(line: 339, column: 17, scope: !7305)
!7350 = !DILocation(line: 339, column: 52, scope: !7305)
!7351 = !DILocation(line: 339, column: 45, scope: !7305)
!7352 = !DILocation(line: 348, column: 13, scope: !7305)
!7353 = !DILocation(line: 349, column: 38, scope: !7305)
!7354 = !DILocation(line: 351, column: 1, scope: !7305)
!7355 = !DILocation(line: 350, column: 5, scope: !7305)
!7356 = distinct !DISubprogram(name: "SFI_GPRAM_Write", scope: !1116, file: !1116, line: 367, type: !7357, scopeLine: 368, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7359)
!7357 = !DISubroutineType(types: !7358)
!7358 = !{null, !61, !88, !1091}
!7359 = !{!7360, !7361, !7362, !7363, !7364, !7365}
!7360 = !DILocalVariable(name: "gpram_offset", arg: 1, scope: !7356, file: !1116, line: 367, type: !61)
!7361 = !DILocalVariable(name: "buff", arg: 2, scope: !7356, file: !1116, line: 367, type: !88)
!7362 = !DILocalVariable(name: "length", arg: 3, scope: !7356, file: !1116, line: 367, type: !1091)
!7363 = !DILocalVariable(name: "i", scope: !7356, file: !1116, line: 369, type: !61)
!7364 = !DILocalVariable(name: "p_data", scope: !7356, file: !1116, line: 370, type: !762)
!7365 = !DILocalVariable(name: "tmp", scope: !7356, file: !1116, line: 371, type: !7315)
!7366 = !DILocation(line: 0, scope: !7356)
!7367 = !DILocation(line: 371, column: 5, scope: !7356)
!7368 = !DILocation(line: 371, column: 13, scope: !7356)
!7369 = !DILocation(line: 373, column: 18, scope: !7356)
!7370 = !DILocation(line: 376, column: 15, scope: !7371)
!7371 = distinct !DILexicalBlock(scope: !7356, file: !1116, line: 376, column: 9)
!7372 = !DILocation(line: 376, column: 30, scope: !7371)
!7373 = !DILocation(line: 376, column: 11, scope: !7371)
!7374 = !DILocation(line: 376, column: 9, scope: !7356)
!7375 = !DILocation(line: 377, column: 23, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7377, file: !1116, line: 377, column: 9)
!7377 = distinct !DILexicalBlock(scope: !7378, file: !1116, line: 377, column: 9)
!7378 = distinct !DILexicalBlock(scope: !7371, file: !1116, line: 376, column: 41)
!7379 = !DILocation(line: 377, column: 9, scope: !7377)
!7380 = !DILocation(line: 378, column: 13, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7376, file: !1116, line: 377, column: 80)
!7382 = !DILocation(line: 377, column: 41, scope: !7376)
!7383 = !DILocation(line: 377, column: 54, scope: !7376)
!7384 = !DILocation(line: 377, column: 67, scope: !7376)
!7385 = distinct !{!7385, !7379, !7386}
!7386 = !DILocation(line: 379, column: 9, scope: !7377)
!7387 = !DILocation(line: 382, column: 37, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7371, file: !1116, line: 382, column: 14)
!7389 = !DILocation(line: 382, column: 16, scope: !7388)
!7390 = !DILocation(line: 0, scope: !7388)
!7391 = !DILocation(line: 382, column: 14, scope: !7371)
!7392 = !DILocation(line: 391, column: 9, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7394, file: !1116, line: 391, column: 9)
!7394 = distinct !DILexicalBlock(scope: !7388, file: !1116, line: 390, column: 13)
!7395 = !DILocation(line: 383, column: 9, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7397, file: !1116, line: 383, column: 9)
!7397 = distinct !DILexicalBlock(scope: !7388, file: !1116, line: 382, column: 49)
!7398 = !DILocation(line: 384, column: 26, scope: !7399)
!7399 = distinct !DILexicalBlock(scope: !7400, file: !1116, line: 383, column: 80)
!7400 = distinct !DILexicalBlock(scope: !7396, file: !1116, line: 383, column: 9)
!7401 = !DILocation(line: 384, column: 24, scope: !7399)
!7402 = !DILocation(line: 385, column: 47, scope: !7399)
!7403 = !DILocation(line: 385, column: 26, scope: !7399)
!7404 = !DILocation(line: 385, column: 24, scope: !7399)
!7405 = !DILocation(line: 386, column: 13, scope: !7399)
!7406 = !DILocation(line: 383, column: 41, scope: !7400)
!7407 = !DILocation(line: 383, column: 54, scope: !7400)
!7408 = !DILocation(line: 383, column: 67, scope: !7400)
!7409 = !DILocation(line: 383, column: 23, scope: !7400)
!7410 = distinct !{!7410, !7395, !7411}
!7411 = !DILocation(line: 387, column: 9, scope: !7396)
!7412 = !DILocation(line: 392, column: 13, scope: !7413)
!7413 = distinct !DILexicalBlock(scope: !7414, file: !1116, line: 392, column: 13)
!7414 = distinct !DILexicalBlock(scope: !7415, file: !1116, line: 391, column: 61)
!7415 = distinct !DILexicalBlock(scope: !7393, file: !1116, line: 391, column: 9)
!7416 = !DILocation(line: 393, column: 36, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !1116, line: 392, column: 51)
!7418 = distinct !DILexicalBlock(scope: !7413, file: !1116, line: 392, column: 13)
!7419 = !DILocation(line: 393, column: 29, scope: !7417)
!7420 = !DILocation(line: 393, column: 17, scope: !7417)
!7421 = !DILocation(line: 393, column: 27, scope: !7417)
!7422 = !DILocation(line: 392, column: 47, scope: !7418)
!7423 = !DILocation(line: 392, column: 27, scope: !7418)
!7424 = !DILocation(line: 392, column: 31, scope: !7418)
!7425 = distinct !{!7425, !7412, !7426}
!7426 = !DILocation(line: 394, column: 13, scope: !7413)
!7427 = !DILocation(line: 395, column: 13, scope: !7414)
!7428 = !DILocation(line: 391, column: 41, scope: !7415)
!7429 = !DILocation(line: 391, column: 54, scope: !7415)
!7430 = !DILocation(line: 391, column: 23, scope: !7415)
!7431 = distinct !{!7431, !7392, !7432}
!7432 = !DILocation(line: 396, column: 9, scope: !7393)
!7433 = !DILocation(line: 398, column: 1, scope: !7356)
!7434 = distinct !DISubprogram(name: "SFI_Dev_Command_Ext", scope: !1116, file: !1116, line: 414, type: !7435, scopeLine: 415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7437)
!7435 = !DISubroutineType(types: !7436)
!7436 = !{null, !967, !5069, !762, !967, !967}
!7437 = !{!7438, !7439, !7440, !7441, !7442, !7443, !7444, !7445, !7446, !7447}
!7438 = !DILocalVariable(name: "CS", arg: 1, scope: !7434, file: !1116, line: 414, type: !967)
!7439 = !DILocalVariable(name: "cmd", arg: 2, scope: !7434, file: !1116, line: 414, type: !5069)
!7440 = !DILocalVariable(name: "data", arg: 3, scope: !7434, file: !1116, line: 414, type: !762)
!7441 = !DILocalVariable(name: "outl", arg: 4, scope: !7434, file: !1116, line: 414, type: !967)
!7442 = !DILocalVariable(name: "inl", arg: 5, scope: !7434, file: !1116, line: 414, type: !967)
!7443 = !DILocalVariable(name: "tmp", scope: !7434, file: !1116, line: 416, type: !61)
!7444 = !DILocalVariable(name: "i", scope: !7434, file: !1116, line: 417, type: !61)
!7445 = !DILocalVariable(name: "j", scope: !7434, file: !1116, line: 417, type: !61)
!7446 = !DILocalVariable(name: "p_data", scope: !7434, file: !1116, line: 418, type: !762)
!7447 = !DILocalVariable(name: "p_tmp", scope: !7434, file: !1116, line: 418, type: !762)
!7448 = !DILocation(line: 0, scope: !7434)
!7449 = !DILocation(line: 416, column: 5, scope: !7434)
!7450 = !DILocation(line: 422, column: 60, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7452, file: !1116, line: 422, column: 5)
!7452 = distinct !DILexicalBlock(scope: !7434, file: !1116, line: 422, column: 5)
!7453 = !DILocation(line: 422, column: 5, scope: !7452)
!7454 = !DILocation(line: 423, column: 25, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7456, file: !1116, line: 423, column: 9)
!7456 = distinct !DILexicalBlock(scope: !7451, file: !1116, line: 422, column: 83)
!7457 = !DILocation(line: 423, column: 32, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7455, file: !1116, line: 423, column: 9)
!7459 = !DILocation(line: 423, column: 9, scope: !7455)
!7460 = !DILocation(line: 424, column: 24, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7458, file: !1116, line: 423, column: 59)
!7462 = !DILocation(line: 424, column: 13, scope: !7461)
!7463 = !DILocation(line: 424, column: 22, scope: !7461)
!7464 = !DILocation(line: 423, column: 50, scope: !7458)
!7465 = !DILocation(line: 423, column: 55, scope: !7458)
!7466 = !DILocation(line: 423, column: 39, scope: !7458)
!7467 = distinct !{!7467, !7459, !7468}
!7468 = !DILocation(line: 425, column: 9, scope: !7455)
!7469 = !DILocation(line: 426, column: 9, scope: !7456)
!7470 = !DILocation(line: 0, scope: !7452)
!7471 = !DILocation(line: 422, column: 75, scope: !7451)
!7472 = distinct !{!7472, !7453, !7473}
!7473 = !DILocation(line: 427, column: 5, scope: !7452)
!7474 = !DILocation(line: 428, column: 25, scope: !7434)
!7475 = !DILocation(line: 429, column: 26, scope: !7434)
!7476 = !DILocation(line: 429, column: 24, scope: !7434)
!7477 = !DILocation(line: 430, column: 5, scope: !7434)
!7478 = !DILocation(line: 431, column: 5, scope: !7434)
!7479 = !DILocation(line: 433, column: 67, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7481, file: !1116, line: 433, column: 5)
!7481 = distinct !DILexicalBlock(scope: !7434, file: !1116, line: 433, column: 5)
!7482 = !DILocation(line: 433, column: 5, scope: !7481)
!7483 = !DILocation(line: 433, column: 56, scope: !7481)
!7484 = !DILocation(line: 434, column: 17, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7480, file: !1116, line: 433, column: 100)
!7486 = !DILocation(line: 434, column: 15, scope: !7485)
!7487 = !DILocation(line: 433, column: 74, scope: !7480)
!7488 = !DILocation(line: 433, column: 79, scope: !7480)
!7489 = !DILocation(line: 433, column: 87, scope: !7480)
!7490 = distinct !{!7490, !7482, !7491}
!7491 = !DILocation(line: 435, column: 5, scope: !7481)
!7492 = !DILocation(line: 437, column: 1, scope: !7434)
!7493 = distinct !DISubprogram(name: "SFI_Dev_Command_List", scope: !1116, file: !1116, line: 462, type: !7494, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7496)
!7494 = !DISubroutineType(types: !7495)
!7495 = !{null, !967, !5069}
!7496 = !{!7497, !7498, !7499, !7500, !7501}
!7497 = !DILocalVariable(name: "CS", arg: 1, scope: !7493, file: !1116, line: 462, type: !967)
!7498 = !DILocalVariable(name: "cmdlist", arg: 2, scope: !7493, file: !1116, line: 462, type: !5069)
!7499 = !DILocalVariable(name: "i", scope: !7493, file: !1116, line: 464, type: !61)
!7500 = !DILocalVariable(name: "val", scope: !7493, file: !1116, line: 465, type: !61)
!7501 = !DILocalVariable(name: "status", scope: !7502, file: !1116, line: 492, type: !460)
!7502 = distinct !DILexicalBlock(scope: !7503, file: !1116, line: 491, column: 47)
!7503 = distinct !DILexicalBlock(scope: !7504, file: !1116, line: 491, column: 13)
!7504 = distinct !DILexicalBlock(scope: !7493, file: !1116, line: 477, column: 17)
!7505 = !DILocation(line: 0, scope: !7493)
!7506 = !DILocation(line: 467, column: 17, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7493, file: !1116, line: 467, column: 9)
!7508 = !DILocation(line: 467, column: 9, scope: !7493)
!7509 = !DILocation(line: 474, column: 11, scope: !7493)
!7510 = !DILocation(line: 477, column: 5, scope: !7493)
!7511 = !DILocation(line: 478, column: 17, scope: !7504)
!7512 = !DILocation(line: 478, column: 9, scope: !7504)
!7513 = !DILocation(line: 481, column: 17, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !1116, line: 481, column: 17)
!7515 = distinct !DILexicalBlock(scope: !7504, file: !1116, line: 478, column: 29)
!7516 = !DILocation(line: 481, column: 17, scope: !7517)
!7517 = distinct !DILexicalBlock(scope: !7518, file: !1116, line: 481, column: 17)
!7518 = distinct !DILexicalBlock(scope: !7519, file: !1116, line: 481, column: 17)
!7519 = distinct !DILexicalBlock(scope: !7514, file: !1116, line: 481, column: 17)
!7520 = !DILocation(line: 481, column: 17, scope: !7518)
!7521 = !DILocation(line: 481, column: 17, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7523, file: !1116, line: 481, column: 17)
!7523 = distinct !DILexicalBlock(scope: !7519, file: !1116, line: 481, column: 17)
!7524 = !DILocation(line: 484, column: 17, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7515, file: !1116, line: 484, column: 17)
!7526 = !DILocation(line: 484, column: 17, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7528, file: !1116, line: 484, column: 17)
!7528 = distinct !DILexicalBlock(scope: !7529, file: !1116, line: 484, column: 17)
!7529 = distinct !DILexicalBlock(scope: !7525, file: !1116, line: 484, column: 17)
!7530 = !DILocation(line: 484, column: 17, scope: !7528)
!7531 = !DILocation(line: 484, column: 17, scope: !7532)
!7532 = distinct !DILexicalBlock(scope: !7533, file: !1116, line: 484, column: 17)
!7533 = distinct !DILexicalBlock(scope: !7529, file: !1116, line: 484, column: 17)
!7534 = !DILocation(line: 0, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !1116, line: 487, column: 17)
!7536 = distinct !DILexicalBlock(scope: !7515, file: !1116, line: 487, column: 17)
!7537 = !DILocation(line: 487, column: 17, scope: !7536)
!7538 = !DILocation(line: 487, column: 17, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7540, file: !1116, line: 487, column: 17)
!7540 = distinct !DILexicalBlock(scope: !7535, file: !1116, line: 487, column: 17)
!7541 = !DILocation(line: 487, column: 17, scope: !7540)
!7542 = !DILocation(line: 487, column: 17, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7544, file: !1116, line: 487, column: 17)
!7544 = distinct !DILexicalBlock(scope: !7535, file: !1116, line: 487, column: 17)
!7545 = !DILocation(line: 487, column: 17, scope: !7544)
!7546 = !DILocation(line: 491, column: 23, scope: !7503)
!7547 = !DILocation(line: 491, column: 13, scope: !7503)
!7548 = !DILocation(line: 491, column: 28, scope: !7503)
!7549 = !DILocation(line: 491, column: 13, scope: !7504)
!7550 = !DILocation(line: 492, column: 13, scope: !7502)
!7551 = !DILocation(line: 494, column: 13, scope: !7502)
!7552 = !DILocation(line: 0, scope: !7502)
!7553 = !DILocation(line: 495, column: 17, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7502, file: !1116, line: 494, column: 16)
!7555 = !DILocation(line: 496, column: 22, scope: !7502)
!7556 = !DILocation(line: 496, column: 31, scope: !7502)
!7557 = !DILocation(line: 496, column: 29, scope: !7502)
!7558 = !DILocation(line: 496, column: 13, scope: !7554)
!7559 = distinct !{!7559, !7551, !7560}
!7560 = !DILocation(line: 496, column: 45, scope: !7502)
!7561 = !DILocation(line: 497, column: 9, scope: !7503)
!7562 = !DILocation(line: 503, column: 25, scope: !7504)
!7563 = !DILocation(line: 497, column: 9, scope: !7502)
!7564 = !DILocation(line: 500, column: 70, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7503, file: !1116, line: 499, column: 14)
!7566 = !DILocation(line: 500, column: 60, scope: !7565)
!7567 = !DILocation(line: 500, column: 13, scope: !7565)
!7568 = !DILocation(line: 503, column: 15, scope: !7504)
!7569 = !DILocation(line: 503, column: 11, scope: !7504)
!7570 = distinct !{!7570, !7510, !7571}
!7571 = !DILocation(line: 504, column: 5, scope: !7493)
!7572 = !DILocation(line: 505, column: 1, scope: !7493)
!7573 = distinct !DISubprogram(name: "SFI_ReadDeviceID", scope: !1116, file: !1116, line: 514, type: !7574, scopeLine: 515, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7576)
!7574 = !DISubroutineType(types: !7575)
!7575 = !{null, !967, !762, !460}
!7576 = !{!7577, !7578, !7579}
!7577 = !DILocalVariable(name: "CS", arg: 1, scope: !7573, file: !1116, line: 514, type: !967)
!7578 = !DILocalVariable(name: "id", arg: 2, scope: !7573, file: !1116, line: 514, type: !762)
!7579 = !DILocalVariable(name: "cmd", arg: 3, scope: !7573, file: !1116, line: 514, type: !460)
!7580 = !DILocation(line: 0, scope: !7573)
!7581 = !DILocation(line: 517, column: 5, scope: !7573)
!7582 = !DILocation(line: 518, column: 1, scope: !7573)
!7583 = distinct !DISubprogram(name: "SFI_ReadDeviceID_SPI", scope: !1116, file: !1116, line: 521, type: !7584, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7586)
!7584 = !DISubroutineType(types: !7585)
!7585 = !{null, !967, !762}
!7586 = !{!7587, !7588}
!7587 = !DILocalVariable(name: "CS", arg: 1, scope: !7583, file: !1116, line: 521, type: !967)
!7588 = !DILocalVariable(name: "id", arg: 2, scope: !7583, file: !1116, line: 521, type: !762)
!7589 = !DILocation(line: 0, scope: !7583)
!7590 = !DILocation(line: 523, column: 5, scope: !7583)
!7591 = !DILocation(line: 524, column: 1, scope: !7583)
!7592 = distinct !DISubprogram(name: "SFI_Dev_WorkingFrequencyQuery", scope: !1116, file: !1116, line: 536, type: !7593, scopeLine: 537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !293)
!7593 = !DISubroutineType(types: !7594)
!7594 = !{!7595}
!7595 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_clock_enum", file: !1119, line: 57, baseType: !1118)
!7596 = !DILocation(line: 540, column: 5, scope: !7592)
!7597 = distinct !DISubprogram(name: "SFI_Dev_WorkingVoltageQuery", scope: !1116, file: !1116, line: 561, type: !7598, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !293)
!7598 = !DISubroutineType(types: !7599)
!7599 = !{!7600}
!7600 = !DIDerivedType(tag: DW_TAG_typedef, name: "sfi_voltage_enum", file: !1119, line: 66, baseType: !1126)
!7601 = !DILocation(line: 564, column: 15, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7597, file: !1116, line: 564, column: 9)
!7603 = !DILocation(line: 564, column: 31, scope: !7602)
!7604 = !DILocation(line: 564, column: 45, scope: !7602)
!7605 = !DILocation(line: 0, scope: !7602)
!7606 = !DILocation(line: 569, column: 1, scope: !7597)
!7607 = distinct !DISubprogram(name: "SFI_Dev_GetUniqueID", scope: !1116, file: !1116, line: 580, type: !7608, scopeLine: 581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7610)
!7608 = !DISubroutineType(types: !7609)
!7609 = !{!91, !762}
!7610 = !{!7611, !7612}
!7611 = !DILocalVariable(name: "buffer", arg: 1, scope: !7607, file: !1116, line: 580, type: !762)
!7612 = !DILocalVariable(name: "i", scope: !7607, file: !1116, line: 582, type: !7)
!7613 = !DILocation(line: 0, scope: !7607)
!7614 = !DILocation(line: 583, column: 5, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7607, file: !1116, line: 583, column: 5)
!7616 = !DILocation(line: 584, column: 9, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7618, file: !1116, line: 583, column: 29)
!7618 = distinct !DILexicalBlock(scope: !7615, file: !1116, line: 583, column: 5)
!7619 = !DILocation(line: 584, column: 19, scope: !7617)
!7620 = !DILocation(line: 583, column: 25, scope: !7618)
!7621 = !DILocation(line: 583, column: 19, scope: !7618)
!7622 = distinct !{!7622, !7614, !7623}
!7623 = !DILocation(line: 585, column: 5, scope: !7615)
!7624 = !DILocation(line: 586, column: 5, scope: !7607)
!7625 = distinct !DISubprogram(name: "SF_DAL_DEV_Enter_DPD", scope: !1116, file: !1116, line: 613, type: !291, scopeLine: 614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !7626)
!7626 = !{!7627}
!7627 = !DILocalVariable(name: "D", scope: !7625, file: !1116, line: 615, type: !7002)
!7628 = !DILocation(line: 0, scope: !7625)
!7629 = !DILocation(line: 616, column: 32, scope: !7625)
!7630 = !DILocation(line: 616, column: 37, scope: !7625)
!7631 = !DILocation(line: 616, column: 27, scope: !7625)
!7632 = !DILocation(line: 617, column: 44, scope: !7625)
!7633 = !DILocation(line: 617, column: 31, scope: !7625)
!7634 = !DILocation(line: 617, column: 28, scope: !7625)
!7635 = !DILocation(line: 618, column: 32, scope: !7625)
!7636 = !DILocation(line: 618, column: 31, scope: !7625)
!7637 = !DILocation(line: 618, column: 29, scope: !7625)
!7638 = !DILocation(line: 621, column: 31, scope: !7625)
!7639 = !DILocation(line: 621, column: 24, scope: !7625)
!7640 = !DILocation(line: 622, column: 34, scope: !7625)
!7641 = !DILocation(line: 622, column: 27, scope: !7625)
!7642 = !DILocation(line: 623, column: 32, scope: !7625)
!7643 = !DILocation(line: 623, column: 25, scope: !7625)
!7644 = !DILocation(line: 624, column: 33, scope: !7625)
!7645 = !DILocation(line: 624, column: 26, scope: !7625)
!7646 = !DILocation(line: 625, column: 33, scope: !7625)
!7647 = !DILocation(line: 625, column: 26, scope: !7625)
!7648 = !DILocation(line: 629, column: 32, scope: !7625)
!7649 = !DILocation(line: 629, column: 47, scope: !7625)
!7650 = !DILocation(line: 629, column: 25, scope: !7625)
!7651 = !DILocation(line: 630, column: 32, scope: !7625)
!7652 = !DILocation(line: 630, column: 47, scope: !7625)
!7653 = !DILocation(line: 630, column: 25, scope: !7625)
!7654 = !DILocation(line: 633, column: 24, scope: !7625)
!7655 = !DILocation(line: 633, column: 31, scope: !7625)
!7656 = !DILocation(line: 633, column: 36, scope: !7625)
!7657 = !DILocation(line: 633, column: 28, scope: !7625)
!7658 = !DILocation(line: 633, column: 5, scope: !7625)
!7659 = !DILocation(line: 635, column: 5, scope: !7625)
!7660 = !DILocation(line: 636, column: 1, scope: !7625)
!7661 = distinct !DISubprogram(name: "SF_DAL_DEV_Leave_DPD", scope: !1116, file: !1116, line: 641, type: !291, scopeLine: 642, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !293)
!7662 = !DILocation(line: 644, column: 26, scope: !7661)
!7663 = !DILocation(line: 644, column: 24, scope: !7661)
!7664 = !DILocation(line: 645, column: 29, scope: !7661)
!7665 = !DILocation(line: 645, column: 27, scope: !7661)
!7666 = !DILocation(line: 646, column: 27, scope: !7661)
!7667 = !DILocation(line: 646, column: 25, scope: !7661)
!7668 = !DILocation(line: 647, column: 28, scope: !7661)
!7669 = !DILocation(line: 647, column: 26, scope: !7661)
!7670 = !DILocation(line: 648, column: 27, scope: !7661)
!7671 = !DILocation(line: 648, column: 25, scope: !7661)
!7672 = !DILocation(line: 652, column: 32, scope: !7661)
!7673 = !DILocation(line: 652, column: 47, scope: !7661)
!7674 = !DILocation(line: 652, column: 25, scope: !7661)
!7675 = !DILocation(line: 655, column: 24, scope: !7661)
!7676 = !DILocation(line: 655, column: 5, scope: !7661)
!7677 = !DILocation(line: 657, column: 5, scope: !7661)
!7678 = !DILocation(line: 660, column: 9, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7661, file: !1116, line: 660, column: 9)
!7680 = !DILocation(line: 660, column: 59, scope: !7679)
!7681 = !DILocation(line: 660, column: 38, scope: !7679)
!7682 = !DILocation(line: 660, column: 37, scope: !7679)
!7683 = !DILocation(line: 660, column: 33, scope: !7679)
!7684 = !DILocation(line: 660, column: 9, scope: !7661)
!7685 = !DILocation(line: 661, column: 9, scope: !7679)
!7686 = distinct !{!7686, !7685, !7687}
!7687 = !DILocation(line: 661, column: 18, scope: !7679)
!7688 = !DILocation(line: 662, column: 1, scope: !7661)
!7689 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_LOW_FQ", scope: !1116, file: !1116, line: 668, type: !291, scopeLine: 669, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !293)
!7690 = !DILocation(line: 671, column: 9, scope: !7691)
!7691 = distinct !DILexicalBlock(scope: !7689, file: !1116, line: 671, column: 9)
!7692 = !DILocation(line: 671, column: 40, scope: !7691)
!7693 = !DILocation(line: 671, column: 9, scope: !7689)
!7694 = !DILocation(line: 672, column: 47, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7691, file: !1116, line: 671, column: 46)
!7696 = !DILocation(line: 672, column: 40, scope: !7695)
!7697 = !DILocation(line: 673, column: 5, scope: !7695)
!7698 = !DILocation(line: 674, column: 9, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7689, file: !1116, line: 674, column: 9)
!7700 = !DILocation(line: 674, column: 41, scope: !7699)
!7701 = !DILocation(line: 674, column: 9, scope: !7689)
!7702 = !DILocation(line: 675, column: 48, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7699, file: !1116, line: 674, column: 47)
!7704 = !DILocation(line: 675, column: 41, scope: !7703)
!7705 = !DILocation(line: 676, column: 5, scope: !7703)
!7706 = !DILocation(line: 679, column: 33, scope: !7689)
!7707 = !DILocation(line: 679, column: 48, scope: !7689)
!7708 = !DILocation(line: 679, column: 25, scope: !7689)
!7709 = !DILocation(line: 680, column: 25, scope: !7689)
!7710 = !DILocation(line: 686, column: 5, scope: !7689)
!7711 = !DILocation(line: 688, column: 1, scope: !7689)
!7712 = distinct !DISubprogram(name: "SF_DAL_DEV_SWITCH_TO_HIGH_FQ", scope: !1116, file: !1116, line: 689, type: !291, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1115, retainedNodes: !293)
!7713 = !DILocation(line: 692, column: 9, scope: !7714)
!7714 = distinct !DILexicalBlock(scope: !7712, file: !1116, line: 692, column: 9)
!7715 = !DILocation(line: 692, column: 40, scope: !7714)
!7716 = !DILocation(line: 692, column: 9, scope: !7712)
!7717 = !DILocation(line: 693, column: 29, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7714, file: !1116, line: 692, column: 46)
!7719 = !DILocation(line: 694, column: 5, scope: !7718)
!7720 = !DILocation(line: 695, column: 9, scope: !7721)
!7721 = distinct !DILexicalBlock(scope: !7712, file: !1116, line: 695, column: 9)
!7722 = !DILocation(line: 695, column: 41, scope: !7721)
!7723 = !DILocation(line: 695, column: 9, scope: !7712)
!7724 = !DILocation(line: 696, column: 29, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7721, file: !1116, line: 695, column: 47)
!7726 = !DILocation(line: 697, column: 5, scope: !7725)
!7727 = !DILocation(line: 698, column: 5, scope: !7712)
!7728 = !DILocation(line: 699, column: 1, scope: !7712)
!7729 = distinct !DISubprogram(name: "ust_get_current_time", scope: !1212, file: !1212, line: 91, type: !3940, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7730)
!7730 = !{!7731}
!7731 = !DILocalVariable(name: "counter", scope: !7729, file: !1212, line: 102, type: !61)
!7732 = !DILocation(line: 0, scope: !7729)
!7733 = !DILocation(line: 110, column: 5, scope: !7729)
!7734 = distinct !DISubprogram(name: "get_current_32K_counter", scope: !1212, file: !1212, line: 114, type: !3940, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7735)
!7735 = !{!7736}
!7736 = !DILocalVariable(name: "counter", scope: !7734, file: !1212, line: 125, type: !61)
!7737 = !DILocation(line: 0, scope: !7734)
!7738 = !DILocation(line: 133, column: 5, scope: !7734)
!7739 = distinct !DISubprogram(name: "ust_busy_wait", scope: !1212, file: !1212, line: 137, type: !6865, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7740)
!7740 = !{!7741}
!7741 = !DILocalVariable(name: "delay_us", arg: 1, scope: !7739, file: !1212, line: 137, type: !61)
!7742 = !DILocation(line: 0, scope: !7739)
!7743 = !DILocation(line: 142, column: 5, scope: !7739)
!7744 = !DILocation(line: 144, column: 1, scope: !7739)
!7745 = distinct !DISubprogram(name: "SaveAndSetIRQMask", scope: !1212, file: !1212, line: 163, type: !3940, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7746)
!7746 = !{!7747}
!7747 = !DILocalVariable(name: "mask", scope: !7745, file: !1212, line: 165, type: !61)
!7748 = !DILocation(line: 166, column: 12, scope: !7745)
!7749 = !DILocation(line: 0, scope: !7745)
!7750 = !DILocation(line: 167, column: 5, scope: !7745)
!7751 = distinct !DISubprogram(name: "RestoreIRQMask", scope: !1212, file: !1212, line: 171, type: !6865, scopeLine: 172, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7752)
!7752 = !{!7753}
!7753 = !DILocalVariable(name: "mask", arg: 1, scope: !7751, file: !1212, line: 171, type: !61)
!7754 = !DILocation(line: 0, scope: !7751)
!7755 = !DILocation(line: 173, column: 5, scope: !7751)
!7756 = !DILocation(line: 174, column: 1, scope: !7751)
!7757 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_None", scope: !1212, file: !1212, line: 199, type: !1484, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7758)
!7758 = !{!7759}
!7759 = !DILocalVariable(name: "MTDData", arg: 1, scope: !7757, file: !1212, line: 199, type: !88)
!7760 = !DILocation(line: 0, scope: !7757)
!7761 = !DILocation(line: 201, column: 5, scope: !7757)
!7762 = distinct !DISubprogram(name: "sfi_60qbit_test", scope: !1212, file: !1212, line: 388, type: !7763, scopeLine: 389, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !293)
!7763 = !DISubroutineType(types: !7764)
!7764 = !{!1091}
!7765 = !DILocation(line: 390, column: 5, scope: !7762)
!7766 = distinct !DISubprogram(name: "CompareData", scope: !1212, file: !1212, line: 872, type: !7767, scopeLine: 873, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7769)
!7767 = !DISubroutineType(types: !7768)
!7768 = !{!91, !88, !88, !61}
!7769 = !{!7770, !7771, !7772, !7773, !7774, !7777, !7778, !7781, !7782, !7784}
!7770 = !DILocalVariable(name: "Address", arg: 1, scope: !7766, file: !1212, line: 872, type: !88)
!7771 = !DILocalVariable(name: "Data", arg: 2, scope: !7766, file: !1212, line: 872, type: !88)
!7772 = !DILocalVariable(name: "Length", arg: 3, scope: !7766, file: !1212, line: 872, type: !61)
!7773 = !DILocalVariable(name: "i", scope: !7766, file: !1212, line: 874, type: !61)
!7774 = !DILocalVariable(name: "Source", scope: !7775, file: !1212, line: 877, type: !1153)
!7775 = distinct !DILexicalBlock(scope: !7776, file: !1212, line: 876, column: 74)
!7776 = distinct !DILexicalBlock(scope: !7766, file: !1212, line: 876, column: 9)
!7777 = !DILocalVariable(name: "Dest", scope: !7775, file: !1212, line: 878, type: !1153)
!7778 = !DILocalVariable(name: "Source", scope: !7779, file: !1212, line: 885, type: !1184)
!7779 = distinct !DILexicalBlock(scope: !7780, file: !1212, line: 884, column: 79)
!7780 = distinct !DILexicalBlock(scope: !7776, file: !1212, line: 884, column: 16)
!7781 = !DILocalVariable(name: "Dest", scope: !7779, file: !1212, line: 886, type: !1184)
!7782 = !DILocalVariable(name: "Source", scope: !7783, file: !1212, line: 893, type: !762)
!7783 = distinct !DILexicalBlock(scope: !7780, file: !1212, line: 892, column: 12)
!7784 = !DILocalVariable(name: "Dest", scope: !7783, file: !1212, line: 894, type: !762)
!7785 = !DILocation(line: 0, scope: !7766)
!7786 = !DILocation(line: 876, column: 11, scope: !7776)
!7787 = !DILocation(line: 876, column: 42, scope: !7776)
!7788 = !DILocation(line: 877, column: 28, scope: !7775)
!7789 = !DILocation(line: 0, scope: !7775)
!7790 = !DILocation(line: 878, column: 26, scope: !7775)
!7791 = !DILocation(line: 879, column: 23, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7793, file: !1212, line: 879, column: 9)
!7793 = distinct !DILexicalBlock(scope: !7775, file: !1212, line: 879, column: 9)
!7794 = !DILocation(line: 879, column: 9, scope: !7793)
!7795 = !DILocation(line: 880, column: 17, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7797, file: !1212, line: 880, column: 17)
!7797 = distinct !DILexicalBlock(scope: !7792, file: !1212, line: 879, column: 68)
!7798 = !DILocation(line: 880, column: 30, scope: !7796)
!7799 = !DILocation(line: 880, column: 27, scope: !7796)
!7800 = !DILocation(line: 879, column: 64, scope: !7792)
!7801 = !DILocation(line: 880, column: 17, scope: !7797)
!7802 = distinct !{!7802, !7794, !7803}
!7803 = !DILocation(line: 883, column: 9, scope: !7793)
!7804 = !DILocation(line: 884, column: 47, scope: !7780)
!7805 = !DILocation(line: 895, column: 23, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !1212, line: 895, column: 9)
!7807 = distinct !DILexicalBlock(scope: !7783, file: !1212, line: 895, column: 9)
!7808 = !DILocation(line: 895, column: 9, scope: !7807)
!7809 = !DILocation(line: 885, column: 28, scope: !7779)
!7810 = !DILocation(line: 0, scope: !7779)
!7811 = !DILocation(line: 886, column: 26, scope: !7779)
!7812 = !DILocation(line: 887, column: 23, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7814, file: !1212, line: 887, column: 9)
!7814 = distinct !DILexicalBlock(scope: !7779, file: !1212, line: 887, column: 9)
!7815 = !DILocation(line: 887, column: 9, scope: !7814)
!7816 = !DILocation(line: 888, column: 17, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7818, file: !1212, line: 888, column: 17)
!7818 = distinct !DILexicalBlock(scope: !7813, file: !1212, line: 887, column: 68)
!7819 = !DILocation(line: 888, column: 30, scope: !7817)
!7820 = !DILocation(line: 888, column: 27, scope: !7817)
!7821 = !DILocation(line: 887, column: 64, scope: !7813)
!7822 = !DILocation(line: 888, column: 17, scope: !7818)
!7823 = distinct !{!7823, !7815, !7824}
!7824 = !DILocation(line: 891, column: 9, scope: !7814)
!7825 = !DILocation(line: 896, column: 17, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7827, file: !1212, line: 896, column: 17)
!7827 = distinct !DILexicalBlock(scope: !7806, file: !1212, line: 895, column: 38)
!7828 = !DILocation(line: 896, column: 30, scope: !7826)
!7829 = !DILocation(line: 896, column: 27, scope: !7826)
!7830 = !DILocation(line: 895, column: 34, scope: !7806)
!7831 = !DILocation(line: 896, column: 17, scope: !7827)
!7832 = distinct !{!7832, !7808, !7833}
!7833 = !DILocation(line: 899, column: 9, scope: !7807)
!7834 = !DILocation(line: 902, column: 1, scope: !7766)
!7835 = distinct !DISubprogram(name: "Flash_ProgramData", scope: !1212, file: !1212, line: 919, type: !7836, scopeLine: 920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7838)
!7836 = !DISubroutineType(types: !7837)
!7837 = !{null, !88, !88, !61}
!7838 = !{!7839, !7840, !7841, !7842, !7843, !7844, !7845, !7846, !7847, !7848, !7849}
!7839 = !DILocalVariable(name: "Target", arg: 1, scope: !7835, file: !1212, line: 919, type: !88)
!7840 = !DILocalVariable(name: "Data", arg: 2, scope: !7835, file: !1212, line: 919, type: !88)
!7841 = !DILocalVariable(name: "Size", arg: 3, scope: !7835, file: !1212, line: 919, type: !61)
!7842 = !DILocalVariable(name: "D", scope: !7835, file: !1212, line: 921, type: !1382)
!7843 = !DILocalVariable(name: "address", scope: !7835, file: !1212, line: 922, type: !61)
!7844 = !DILocalVariable(name: "p_data", scope: !7835, file: !1212, line: 923, type: !762)
!7845 = !DILocalVariable(name: "cmd1", scope: !7835, file: !1212, line: 924, type: !61)
!7846 = !DILocalVariable(name: "length", scope: !7835, file: !1212, line: 924, type: !61)
!7847 = !DILocalVariable(name: "written", scope: !7835, file: !1212, line: 924, type: !61)
!7848 = !DILocalVariable(name: "status", scope: !7835, file: !1212, line: 925, type: !1434)
!7849 = !DILocalVariable(name: "savedMask", scope: !7835, file: !1212, line: 926, type: !61)
!7850 = !DILocation(line: 0, scope: !7835)
!7851 = !DILocation(line: 921, column: 60, scope: !7835)
!7852 = !DILocation(line: 923, column: 5, scope: !7835)
!7853 = !DILocation(line: 923, column: 19, scope: !7835)
!7854 = !DILocation(line: 924, column: 5, scope: !7835)
!7855 = !DILocation(line: 932, column: 9, scope: !7835)
!7856 = !DILocation(line: 933, column: 8, scope: !7835)
!7857 = !DILocation(line: 933, column: 21, scope: !7835)
!7858 = !DILocation(line: 935, column: 14, scope: !7835)
!7859 = !DILocation(line: 935, column: 5, scope: !7835)
!7860 = !DILocation(line: 922, column: 29, scope: !7835)
!7861 = !DILocation(line: 937, column: 18, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7835, file: !1212, line: 935, column: 23)
!7863 = !DILocation(line: 937, column: 35, scope: !7862)
!7864 = !DILocation(line: 937, column: 74, scope: !7862)
!7865 = !DILocation(line: 937, column: 50, scope: !7862)
!7866 = !DILocation(line: 937, column: 39, scope: !7862)
!7867 = !DILocation(line: 940, column: 35, scope: !7862)
!7868 = !DILocation(line: 940, column: 29, scope: !7862)
!7869 = !DILocation(line: 940, column: 16, scope: !7862)
!7870 = !DILocation(line: 942, column: 18, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7862, file: !1212, line: 942, column: 13)
!7872 = !DILocation(line: 942, column: 29, scope: !7871)
!7873 = !DILocation(line: 942, column: 13, scope: !7862)
!7874 = !DILocation(line: 943, column: 13, scope: !7875)
!7875 = distinct !DILexicalBlock(scope: !7871, file: !1212, line: 942, column: 55)
!7876 = !DILocation(line: 944, column: 9, scope: !7875)
!7877 = !DILocation(line: 947, column: 16, scope: !7878)
!7878 = distinct !DILexicalBlock(scope: !7862, file: !1212, line: 947, column: 13)
!7879 = !DILocation(line: 947, column: 29, scope: !7878)
!7880 = !DILocation(line: 0, scope: !7878)
!7881 = !DILocation(line: 947, column: 13, scope: !7862)
!7882 = !DILocation(line: 948, column: 20, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7878, file: !1212, line: 947, column: 35)
!7884 = !DILocation(line: 949, column: 32, scope: !7883)
!7885 = !DILocation(line: 949, column: 40, scope: !7883)
!7886 = !DILocation(line: 949, column: 13, scope: !7883)
!7887 = !DILocation(line: 950, column: 9, scope: !7883)
!7888 = !DILocation(line: 953, column: 20, scope: !7889)
!7889 = distinct !DILexicalBlock(scope: !7878, file: !1212, line: 952, column: 9)
!7890 = !DILocation(line: 954, column: 32, scope: !7889)
!7891 = !DILocation(line: 954, column: 40, scope: !7889)
!7892 = !DILocation(line: 954, column: 13, scope: !7889)
!7893 = !DILocation(line: 957, column: 21, scope: !7862)
!7894 = !DILocation(line: 963, column: 45, scope: !7862)
!7895 = !DILocation(line: 963, column: 42, scope: !7862)
!7896 = !DILocation(line: 963, column: 40, scope: !7862)
!7897 = !DILocation(line: 963, column: 58, scope: !7862)
!7898 = !DILocation(line: 963, column: 29, scope: !7862)
!7899 = !DILocation(line: 964, column: 28, scope: !7862)
!7900 = !DILocation(line: 965, column: 37, scope: !7862)
!7901 = !DILocation(line: 966, column: 9, scope: !7862)
!7902 = !DILocation(line: 967, column: 26, scope: !7862)
!7903 = !DILocation(line: 967, column: 9, scope: !7862)
!7904 = !DILocation(line: 968, column: 29, scope: !7862)
!7905 = !DILocation(line: 968, column: 9, scope: !7862)
!7906 = !DILocation(line: 972, column: 9, scope: !7862)
!7907 = !DILocation(line: 978, column: 9, scope: !7862)
!7908 = !DILocation(line: 979, column: 50, scope: !7909)
!7909 = distinct !DILexicalBlock(scope: !7862, file: !1212, line: 978, column: 22)
!7910 = !DILocation(line: 979, column: 55, scope: !7909)
!7911 = !DILocation(line: 979, column: 22, scope: !7909)
!7912 = !DILocation(line: 980, column: 35, scope: !7913)
!7913 = distinct !DILexicalBlock(scope: !7909, file: !1212, line: 980, column: 17)
!7914 = !DILocation(line: 980, column: 32, scope: !7913)
!7915 = !DILocation(line: 980, column: 30, scope: !7913)
!7916 = !DILocation(line: 980, column: 19, scope: !7913)
!7917 = !DILocation(line: 980, column: 17, scope: !7909)
!7918 = distinct !{!7918, !7907, !7919}
!7919 = !DILocation(line: 983, column: 9, scope: !7862)
!7920 = !DILocation(line: 991, column: 9, scope: !7862)
!7921 = !DILocation(line: 993, column: 19, scope: !7862)
!7922 = !DILocation(line: 993, column: 16, scope: !7862)
!7923 = !DILocation(line: 994, column: 14, scope: !7862)
!7924 = !DILocation(line: 995, column: 17, scope: !7862)
!7925 = distinct !{!7925, !7859, !7926}
!7926 = !DILocation(line: 996, column: 5, scope: !7835)
!7927 = !DILocation(line: 998, column: 21, scope: !7835)
!7928 = !DILocation(line: 1005, column: 9, scope: !7835)
!7929 = !DILocation(line: 1008, column: 1, scope: !7835)
!7930 = distinct !DISubprogram(name: "SF_DAL_GetDevLock", scope: !1212, file: !1212, line: 1427, type: !7931, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7933)
!7931 = !DISubroutineType(types: !7932)
!7932 = !{null, !1382}
!7933 = !{!7934, !7935}
!7934 = !DILocalVariable(name: "D", arg: 1, scope: !7930, file: !1212, line: 1427, type: !1382)
!7935 = !DILocalVariable(name: "Result", scope: !7930, file: !1212, line: 1429, type: !2050)
!7936 = !DILocation(line: 0, scope: !7930)
!7937 = !DILocation(line: 1430, column: 5, scope: !7930)
!7938 = !DILocation(line: 1431, column: 18, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7930, file: !1212, line: 1430, column: 8)
!7940 = !DILocation(line: 1432, column: 21, scope: !7930)
!7941 = !DILocation(line: 1432, column: 5, scope: !7939)
!7942 = distinct !{!7942, !7937, !7943}
!7943 = !DILocation(line: 1432, column: 43, scope: !7930)
!7944 = !DILocation(line: 1433, column: 1, scope: !7930)
!7945 = distinct !DISubprogram(name: "SF_DAL_Dev_WriteEnable", scope: !1212, file: !1212, line: 3478, type: !7931, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7946)
!7946 = !{!7947}
!7947 = !DILocalVariable(name: "D", arg: 1, scope: !7945, file: !1212, line: 3478, type: !1382)
!7948 = !DILocation(line: 0, scope: !7945)
!7949 = !DILocation(line: 3480, column: 30, scope: !7945)
!7950 = !DILocation(line: 3480, column: 35, scope: !7945)
!7951 = !DILocation(line: 3480, column: 27, scope: !7945)
!7952 = !DILocation(line: 3480, column: 5, scope: !7945)
!7953 = !DILocation(line: 3481, column: 1, scope: !7945)
!7954 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_SET", scope: !1212, file: !1212, line: 2382, type: !291, scopeLine: 2383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7955)
!7955 = !{!7956}
!7956 = !DILocalVariable(name: "savedMask", scope: !7954, file: !1212, line: 2384, type: !61)
!7957 = !DILocation(line: 2385, column: 17, scope: !7954)
!7958 = !DILocation(line: 0, scope: !7954)
!7959 = !DILocation(line: 2390, column: 20, scope: !7954)
!7960 = !DILocation(line: 2391, column: 5, scope: !7954)
!7961 = !DILocation(line: 2392, column: 1, scope: !7954)
!7962 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadStatus", scope: !1212, file: !1212, line: 3536, type: !7963, scopeLine: 3537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7965)
!7963 = !DISubroutineType(types: !7964)
!7964 = !{!61, !1382, !460}
!7965 = !{!7966, !7967, !7968, !7969}
!7966 = !DILocalVariable(name: "D", arg: 1, scope: !7962, file: !1212, line: 3536, type: !1382)
!7967 = !DILocalVariable(name: "cmd", arg: 2, scope: !7962, file: !1212, line: 3536, type: !460)
!7968 = !DILocalVariable(name: "savedMask", scope: !7962, file: !1212, line: 3538, type: !61)
!7969 = !DILocalVariable(name: "result", scope: !7962, file: !1212, line: 3539, type: !61)
!7970 = !DILocation(line: 0, scope: !7962)
!7971 = !DILocation(line: 3541, column: 17, scope: !7962)
!7972 = !DILocation(line: 3542, column: 22, scope: !7962)
!7973 = !DILocation(line: 3542, column: 5, scope: !7962)
!7974 = !DILocation(line: 3543, column: 35, scope: !7962)
!7975 = !DILocation(line: 3543, column: 33, scope: !7962)
!7976 = !DILocation(line: 3544, column: 25, scope: !7962)
!7977 = !DILocation(line: 3545, column: 24, scope: !7962)
!7978 = !DILocation(line: 3546, column: 25, scope: !7962)
!7979 = !DILocation(line: 3546, column: 5, scope: !7962)
!7980 = !DILocation(line: 3547, column: 42, scope: !7962)
!7981 = !DILocation(line: 3547, column: 60, scope: !7962)
!7982 = !DILocation(line: 3547, column: 14, scope: !7962)
!7983 = !DILocation(line: 3548, column: 5, scope: !7962)
!7984 = !DILocation(line: 3550, column: 5, scope: !7962)
!7985 = distinct !DISubprogram(name: "SF_DAL_FLAG_BUSY_CLR", scope: !1212, file: !1212, line: 2393, type: !291, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7986)
!7986 = !{!7987}
!7987 = !DILocalVariable(name: "savedMask", scope: !7985, file: !1212, line: 2395, type: !61)
!7988 = !DILocation(line: 2396, column: 17, scope: !7985)
!7989 = !DILocation(line: 0, scope: !7985)
!7990 = !DILocation(line: 2401, column: 20, scope: !7985)
!7991 = !DILocation(line: 2402, column: 5, scope: !7992)
!7992 = distinct !DILexicalBlock(scope: !7993, file: !1212, line: 2402, column: 5)
!7993 = distinct !DILexicalBlock(scope: !7985, file: !1212, line: 2402, column: 5)
!7994 = !DILocation(line: 2403, column: 5, scope: !7985)
!7995 = !DILocation(line: 2404, column: 1, scope: !7985)
!7996 = distinct !DISubprogram(name: "SF_DAL_FreeDevLock", scope: !1212, file: !1212, line: 1440, type: !7931, scopeLine: 1441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !7997)
!7997 = !{!7998, !7999}
!7998 = !DILocalVariable(name: "D", arg: 1, scope: !7996, file: !1212, line: 1440, type: !1382)
!7999 = !DILocalVariable(name: "savedMask", scope: !7996, file: !1212, line: 1442, type: !1091)
!8000 = !DILocation(line: 0, scope: !7996)
!8001 = !DILocation(line: 1443, column: 17, scope: !7996)
!8002 = !DILocation(line: 1444, column: 9, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7996, file: !1212, line: 1444, column: 9)
!8004 = !DILocation(line: 1444, column: 9, scope: !7996)
!8005 = !DILocation(line: 1445, column: 17, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8003, file: !1212, line: 1444, column: 24)
!8007 = !DILocation(line: 1446, column: 9, scope: !8006)
!8008 = !DILocation(line: 1451, column: 1, scope: !7996)
!8009 = !DILocation(line: 1448, column: 9, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8003, file: !1212, line: 1447, column: 12)
!8011 = !DILocation(line: 1449, column: 9, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8013, file: !1212, line: 1449, column: 9)
!8013 = distinct !DILexicalBlock(scope: !8014, file: !1212, line: 1449, column: 9)
!8014 = distinct !DILexicalBlock(scope: !8010, file: !1212, line: 1449, column: 9)
!8015 = distinct !DISubprogram(name: "Flash_ReturnReady", scope: !1212, file: !1212, line: 1027, type: !291, scopeLine: 1028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8016)
!8016 = !{!8017, !8018, !8019, !8020}
!8017 = !DILocalVariable(name: "D", scope: !8015, file: !1212, line: 1029, type: !1382)
!8018 = !DILocalVariable(name: "status", scope: !8015, file: !1212, line: 1030, type: !1434)
!8019 = !DILocalVariable(name: "savedMask", scope: !8015, file: !1212, line: 1031, type: !61)
!8020 = !DILocalVariable(name: "duration", scope: !8021, file: !1212, line: 1231, type: !61)
!8021 = distinct !DILexicalBlock(scope: !8015, file: !1212, line: 1230, column: 5)
!8022 = !DILocation(line: 0, scope: !8015)
!8023 = !DILocation(line: 1033, column: 17, scope: !8015)
!8024 = !DILocation(line: 1034, column: 8, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8015, file: !1212, line: 1034, column: 8)
!8026 = !DILocation(line: 1034, column: 30, scope: !8025)
!8027 = !DILocation(line: 1034, column: 8, scope: !8015)
!8028 = !DILocation(line: 1039, column: 27, scope: !8015)
!8029 = !DILocation(line: 1058, column: 48, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8015, file: !1212, line: 1055, column: 5)
!8031 = !DILocation(line: 1069, column: 5, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8033, file: !1212, line: 1069, column: 5)
!8033 = distinct !DILexicalBlock(scope: !8015, file: !1212, line: 1069, column: 5)
!8034 = !DILocation(line: 1069, column: 5, scope: !8033)
!8035 = !DILocation(line: 1069, column: 5, scope: !8036)
!8036 = distinct !DILexicalBlock(scope: !8032, file: !1212, line: 1069, column: 5)
!8037 = !DILocation(line: 1075, column: 10, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8015, file: !1212, line: 1075, column: 9)
!8039 = !DILocation(line: 1075, column: 27, scope: !8038)
!8040 = !DILocation(line: 1075, column: 33, scope: !8038)
!8041 = !DILocation(line: 1075, column: 40, scope: !8038)
!8042 = !DILocation(line: 1075, column: 53, scope: !8038)
!8043 = !DILocation(line: 1075, column: 9, scope: !8015)
!8044 = !DILocation(line: 1084, column: 9, scope: !8045)
!8045 = distinct !DILexicalBlock(scope: !8038, file: !1212, line: 1083, column: 11)
!8046 = !DILocation(line: 1085, column: 50, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8045, file: !1212, line: 1084, column: 21)
!8048 = !DILocation(line: 1085, column: 55, scope: !8047)
!8049 = !DILocation(line: 1085, column: 22, scope: !8047)
!8050 = !DILocation(line: 1086, column: 35, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8047, file: !1212, line: 1086, column: 17)
!8052 = !DILocation(line: 1086, column: 32, scope: !8051)
!8053 = !DILocation(line: 1086, column: 30, scope: !8051)
!8054 = !DILocation(line: 1086, column: 19, scope: !8051)
!8055 = !DILocation(line: 1086, column: 17, scope: !8047)
!8056 = distinct !{!8056, !8044, !8057}
!8057 = !DILocation(line: 1089, column: 9, scope: !8045)
!8058 = !DILocation(line: 1107, column: 11, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8015, file: !1212, line: 1107, column: 9)
!8060 = !DILocation(line: 1107, column: 30, scope: !8059)
!8061 = !DILocation(line: 1117, column: 46, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8059, file: !1212, line: 1107, column: 53)
!8063 = !DILocation(line: 1117, column: 51, scope: !8062)
!8064 = !DILocation(line: 1117, column: 18, scope: !8062)
!8065 = !DILocation(line: 1120, column: 31, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8062, file: !1212, line: 1120, column: 13)
!8067 = !DILocation(line: 1120, column: 28, scope: !8066)
!8068 = !DILocation(line: 1120, column: 26, scope: !8066)
!8069 = !DILocation(line: 1120, column: 15, scope: !8066)
!8070 = !DILocation(line: 1120, column: 13, scope: !8062)
!8071 = !DILocation(line: 1128, column: 13, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8066, file: !1212, line: 1120, column: 55)
!8073 = !DILocation(line: 1131, column: 13, scope: !8072)
!8074 = !DILocation(line: 1132, column: 54, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8072, file: !1212, line: 1131, column: 23)
!8076 = !DILocation(line: 1132, column: 59, scope: !8075)
!8077 = !DILocation(line: 1132, column: 26, scope: !8075)
!8078 = !DILocation(line: 1133, column: 39, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8075, file: !1212, line: 1133, column: 21)
!8080 = !DILocation(line: 1133, column: 36, scope: !8079)
!8081 = !DILocation(line: 1133, column: 34, scope: !8079)
!8082 = !DILocation(line: 1133, column: 23, scope: !8079)
!8083 = !DILocation(line: 1133, column: 21, scope: !8075)
!8084 = distinct !{!8084, !8073, !8085}
!8085 = !DILocation(line: 1158, column: 13, scope: !8072)
!8086 = !DILocation(line: 1162, column: 21, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8072, file: !1212, line: 1162, column: 17)
!8088 = !DILocation(line: 1162, column: 32, scope: !8087)
!8089 = !DILocation(line: 1162, column: 51, scope: !8087)
!8090 = !DILocation(line: 1162, column: 58, scope: !8087)
!8091 = !DILocation(line: 1162, column: 71, scope: !8087)
!8092 = !DILocation(line: 1162, column: 17, scope: !8072)
!8093 = !DILocation(line: 1164, column: 45, scope: !8094)
!8094 = distinct !DILexicalBlock(scope: !8087, file: !1212, line: 1162, column: 91)
!8095 = !DILocation(line: 1165, column: 36, scope: !8094)
!8096 = !DILocation(line: 1166, column: 37, scope: !8094)
!8097 = !DILocation(line: 1167, column: 34, scope: !8094)
!8098 = !DILocation(line: 1167, column: 17, scope: !8094)
!8099 = !DILocation(line: 1168, column: 37, scope: !8094)
!8100 = !DILocation(line: 1168, column: 17, scope: !8094)
!8101 = !DILocation(line: 1171, column: 50, scope: !8094)
!8102 = !DILocation(line: 1172, column: 37, scope: !8094)
!8103 = !DILocation(line: 1173, column: 45, scope: !8094)
!8104 = !DILocation(line: 1174, column: 34, scope: !8094)
!8105 = !DILocation(line: 1174, column: 17, scope: !8094)
!8106 = !DILocation(line: 1175, column: 37, scope: !8094)
!8107 = !DILocation(line: 1175, column: 17, scope: !8094)
!8108 = !DILocation(line: 1178, column: 17, scope: !8094)
!8109 = !DILocation(line: 1179, column: 49, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8094, file: !1212, line: 1178, column: 20)
!8111 = !DILocation(line: 1180, column: 40, scope: !8110)
!8112 = !DILocation(line: 1181, column: 41, scope: !8110)
!8113 = !DILocation(line: 1182, column: 38, scope: !8110)
!8114 = !DILocation(line: 1182, column: 21, scope: !8110)
!8115 = !DILocation(line: 1183, column: 41, scope: !8110)
!8116 = !DILocation(line: 1183, column: 21, scope: !8110)
!8117 = !DILocation(line: 1184, column: 43, scope: !8110)
!8118 = !DILocation(line: 1185, column: 17, scope: !8110)
!8119 = distinct !{!8119, !8108, !8120}
!8120 = !DILocation(line: 1185, column: 32, scope: !8094)
!8121 = !DILocation(line: 1194, column: 13, scope: !8072)
!8122 = !DILocation(line: 1195, column: 9, scope: !8072)
!8123 = !DILocation(line: 1197, column: 21, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8125, file: !1212, line: 1197, column: 17)
!8125 = distinct !DILexicalBlock(scope: !8066, file: !1212, line: 1195, column: 16)
!8126 = !DILocation(line: 1197, column: 32, scope: !8124)
!8127 = !DILocation(line: 1197, column: 53, scope: !8124)
!8128 = !DILocation(line: 1197, column: 60, scope: !8124)
!8129 = !DILocation(line: 1197, column: 76, scope: !8124)
!8130 = !DILocation(line: 1197, column: 17, scope: !8125)
!8131 = !DILocation(line: 1198, column: 54, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !8124, file: !1212, line: 1197, column: 98)
!8133 = !DILocation(line: 1198, column: 59, scope: !8132)
!8134 = !DILocation(line: 1198, column: 26, scope: !8132)
!8135 = !DILocation(line: 1199, column: 40, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8132, file: !1212, line: 1199, column: 21)
!8137 = !DILocation(line: 1199, column: 37, scope: !8136)
!8138 = !DILocation(line: 1199, column: 35, scope: !8136)
!8139 = !DILocation(line: 1199, column: 24, scope: !8136)
!8140 = !DILocation(line: 1199, column: 63, scope: !8136)
!8141 = !DILocation(line: 1200, column: 41, scope: !8136)
!8142 = !DILocation(line: 1200, column: 39, scope: !8136)
!8143 = !DILocation(line: 1200, column: 28, scope: !8136)
!8144 = !DILocation(line: 1199, column: 21, scope: !8132)
!8145 = !DILocation(line: 1201, column: 40, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !8136, file: !1212, line: 1200, column: 68)
!8147 = !DILocation(line: 1201, column: 21, scope: !8146)
!8148 = !DILocation(line: 1202, column: 40, scope: !8146)
!8149 = !DILocation(line: 1202, column: 21, scope: !8146)
!8150 = !DILocation(line: 1203, column: 17, scope: !8146)
!8151 = !DILocation(line: 1206, column: 13, scope: !8125)
!8152 = !DILocation(line: 1228, column: 25, scope: !8015)
!8153 = !DILocation(line: 1231, column: 29, scope: !8021)
!8154 = !DILocation(line: 0, scope: !8021)
!8155 = !DILocation(line: 1232, column: 13, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8021, file: !1212, line: 1232, column: 13)
!8157 = !DILocation(line: 1232, column: 43, scope: !8156)
!8158 = !DILocation(line: 1232, column: 13, scope: !8021)
!8159 = !DILocation(line: 1233, column: 43, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8156, file: !1212, line: 1232, column: 55)
!8161 = !DILocation(line: 1234, column: 9, scope: !8160)
!8162 = !DILocation(line: 1237, column: 5, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8164, file: !1212, line: 1237, column: 5)
!8164 = distinct !DILexicalBlock(scope: !8015, file: !1212, line: 1237, column: 5)
!8165 = !DILocation(line: 1240, column: 5, scope: !8015)
!8166 = !DILocation(line: 1241, column: 1, scope: !8015)
!8167 = distinct !DISubprogram(name: "SF_DAL_Dev_Suspend", scope: !1212, file: !1212, line: 3421, type: !7931, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8168)
!8168 = !{!8169, !8170, !8171, !8172}
!8169 = !DILocalVariable(name: "D", arg: 1, scope: !8167, file: !1212, line: 3421, type: !1382)
!8170 = !DILocalVariable(name: "savedMask", scope: !8167, file: !1212, line: 3423, type: !61)
!8171 = !DILocalVariable(name: "currtime", scope: !8167, file: !1212, line: 3424, type: !61)
!8172 = !DILocalVariable(name: "difftime", scope: !8167, file: !1212, line: 3424, type: !61)
!8173 = !DILocation(line: 0, scope: !8167)
!8174 = !DILocation(line: 3427, column: 9, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8167, file: !1212, line: 3427, column: 9)
!8176 = !DILocation(line: 3427, column: 28, scope: !8175)
!8177 = !DILocation(line: 3427, column: 9, scope: !8167)
!8178 = !DILocation(line: 3429, column: 20, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8175, file: !1212, line: 3427, column: 59)
!8180 = !DILocation(line: 3430, column: 27, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8179, file: !1212, line: 3430, column: 13)
!8182 = !DILocation(line: 3430, column: 24, scope: !8181)
!8183 = !DILocation(line: 3430, column: 22, scope: !8181)
!8184 = !DILocation(line: 3430, column: 13, scope: !8179)
!8185 = !DILocation(line: 3431, column: 47, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8181, file: !1212, line: 3430, column: 46)
!8187 = !DILocation(line: 3431, column: 13, scope: !8186)
!8188 = !DILocation(line: 3432, column: 9, scope: !8186)
!8189 = !DILocation(line: 3435, column: 17, scope: !8167)
!8190 = !DILocation(line: 3436, column: 24, scope: !8167)
!8191 = !DILocation(line: 3436, column: 31, scope: !8167)
!8192 = !DILocation(line: 3436, column: 36, scope: !8167)
!8193 = !DILocation(line: 3436, column: 28, scope: !8167)
!8194 = !DILocation(line: 3436, column: 5, scope: !8167)
!8195 = !DILocation(line: 3442, column: 5, scope: !8167)
!8196 = !DILocation(line: 3443, column: 1, scope: !8167)
!8197 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_SET", scope: !1212, file: !1212, line: 2405, type: !291, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8198)
!8198 = !{!8199}
!8199 = !DILocalVariable(name: "savedMask", scope: !8197, file: !1212, line: 2407, type: !61)
!8200 = !DILocation(line: 2408, column: 17, scope: !8197)
!8201 = !DILocation(line: 0, scope: !8197)
!8202 = !DILocation(line: 2413, column: 25, scope: !8197)
!8203 = !DILocation(line: 2414, column: 5, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8205, file: !1212, line: 2414, column: 5)
!8205 = distinct !DILexicalBlock(scope: !8197, file: !1212, line: 2414, column: 5)
!8206 = !DILocation(line: 2415, column: 5, scope: !8197)
!8207 = !DILocation(line: 2416, column: 1, scope: !8197)
!8208 = distinct !DISubprogram(name: "SF_DAL_Dev_Command", scope: !1212, file: !1212, line: 3561, type: !8209, scopeLine: 3562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8211)
!8209 = !DISubroutineType(types: !8210)
!8210 = !{null, !1382, !772, !460}
!8211 = !{!8212, !8213, !8214, !8215}
!8212 = !DILocalVariable(name: "D", arg: 1, scope: !8208, file: !1212, line: 3561, type: !1382)
!8213 = !DILocalVariable(name: "cmd", arg: 2, scope: !8208, file: !1212, line: 3561, type: !772)
!8214 = !DILocalVariable(name: "outlen", arg: 3, scope: !8208, file: !1212, line: 3561, type: !460)
!8215 = !DILocalVariable(name: "savedMask", scope: !8208, file: !1212, line: 3563, type: !61)
!8216 = !DILocation(line: 0, scope: !8208)
!8217 = !DILocation(line: 3565, column: 17, scope: !8208)
!8218 = !DILocation(line: 3566, column: 22, scope: !8208)
!8219 = !DILocation(line: 3566, column: 5, scope: !8208)
!8220 = !DILocation(line: 3567, column: 33, scope: !8208)
!8221 = !DILocation(line: 3568, column: 27, scope: !8208)
!8222 = !DILocation(line: 3568, column: 25, scope: !8208)
!8223 = !DILocation(line: 3569, column: 24, scope: !8208)
!8224 = !DILocation(line: 3570, column: 25, scope: !8208)
!8225 = !DILocation(line: 3570, column: 5, scope: !8208)
!8226 = !DILocation(line: 3571, column: 5, scope: !8208)
!8227 = !DILocation(line: 3573, column: 1, scope: !8208)
!8228 = distinct !DISubprogram(name: "retrieve_MTD_lock", scope: !1212, file: !1212, line: 1410, type: !8229, scopeLine: 1411, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8231)
!8229 = !DISubroutineType(types: !8230)
!8230 = !{!2050}
!8231 = !{!8232}
!8232 = !DILocalVariable(name: "savedMask", scope: !8228, file: !1212, line: 1412, type: !1091)
!8233 = !DILocation(line: 1413, column: 17, scope: !8228)
!8234 = !DILocation(line: 0, scope: !8228)
!8235 = !DILocation(line: 1414, column: 9, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8228, file: !1212, line: 1414, column: 9)
!8237 = !DILocation(line: 1414, column: 9, scope: !8228)
!8238 = !DILocation(line: 1415, column: 17, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8236, file: !1212, line: 1414, column: 24)
!8240 = !DILocation(line: 1417, column: 9, scope: !8239)
!8241 = !DILocation(line: 0, scope: !8236)
!8242 = !DILocation(line: 1425, column: 1, scope: !8228)
!8243 = distinct !DISubprogram(name: "Flash_CheckReady", scope: !1212, file: !1212, line: 1257, type: !8244, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8246)
!8244 = !DISubroutineType(types: !8245)
!8245 = !{!91}
!8246 = !{!8247, !8248, !8249}
!8247 = !DILocalVariable(name: "D", scope: !8243, file: !1212, line: 1259, type: !1382)
!8248 = !DILocalVariable(name: "status", scope: !8243, file: !1212, line: 1260, type: !1434)
!8249 = !DILocalVariable(name: "result", scope: !8243, file: !1212, line: 1261, type: !91)
!8250 = !DILocation(line: 1259, column: 57, scope: !8243)
!8251 = !DILocation(line: 0, scope: !8243)
!8252 = !DILocation(line: 1263, column: 5, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8254, file: !1212, line: 1263, column: 5)
!8254 = distinct !DILexicalBlock(scope: !8243, file: !1212, line: 1263, column: 5)
!8255 = !DILocation(line: 1263, column: 5, scope: !8254)
!8256 = !DILocation(line: 1263, column: 5, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8253, file: !1212, line: 1263, column: 5)
!8258 = !DILocation(line: 1265, column: 5, scope: !8243)
!8259 = !DILocation(line: 1267, column: 42, scope: !8243)
!8260 = !DILocation(line: 1267, column: 47, scope: !8243)
!8261 = !DILocation(line: 1267, column: 14, scope: !8243)
!8262 = !DILocation(line: 1269, column: 27, scope: !8263)
!8263 = distinct !DILexicalBlock(scope: !8243, file: !1212, line: 1269, column: 9)
!8264 = !DILocation(line: 1269, column: 24, scope: !8263)
!8265 = !DILocation(line: 1269, column: 22, scope: !8263)
!8266 = !DILocation(line: 1269, column: 11, scope: !8263)
!8267 = !DILocation(line: 1269, column: 9, scope: !8243)
!8268 = !DILocation(line: 1270, column: 9, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8263, file: !1212, line: 1269, column: 51)
!8270 = !DILocation(line: 1272, column: 5, scope: !8269)
!8271 = !DILocation(line: 1274, column: 5, scope: !8243)
!8272 = !DILocation(line: 1276, column: 5, scope: !8243)
!8273 = distinct !DISubprogram(name: "Flash_ResumeOperation", scope: !1212, file: !1212, line: 1289, type: !291, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8274)
!8274 = !{!8275}
!8275 = !DILocalVariable(name: "D", scope: !8273, file: !1212, line: 1291, type: !1382)
!8276 = !DILocation(line: 0, scope: !8273)
!8277 = !DILocation(line: 1293, column: 5, scope: !8278)
!8278 = distinct !DILexicalBlock(scope: !8279, file: !1212, line: 1293, column: 5)
!8279 = distinct !DILexicalBlock(scope: !8273, file: !1212, line: 1293, column: 5)
!8280 = !DILocation(line: 1293, column: 5, scope: !8281)
!8281 = distinct !DILexicalBlock(scope: !8278, file: !1212, line: 1293, column: 5)
!8282 = !DILocation(line: 1293, column: 5, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8284, file: !1212, line: 1293, column: 5)
!8284 = distinct !DILexicalBlock(scope: !8285, file: !1212, line: 1293, column: 5)
!8285 = distinct !DILexicalBlock(scope: !8281, file: !1212, line: 1293, column: 5)
!8286 = !DILocation(line: 1291, column: 60, scope: !8273)
!8287 = !DILocation(line: 1295, column: 5, scope: !8273)
!8288 = !DILocation(line: 1296, column: 1, scope: !8273)
!8289 = distinct !DISubprogram(name: "SF_DAL_Dev_Resume", scope: !1212, file: !1212, line: 3452, type: !7931, scopeLine: 3453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8290)
!8290 = !{!8291, !8292}
!8291 = !DILocalVariable(name: "D", arg: 1, scope: !8289, file: !1212, line: 3452, type: !1382)
!8292 = !DILocalVariable(name: "savedMask", scope: !8289, file: !1212, line: 3454, type: !61)
!8293 = !DILocation(line: 0, scope: !8289)
!8294 = !DILocation(line: 3456, column: 17, scope: !8289)
!8295 = !DILocation(line: 3462, column: 24, scope: !8289)
!8296 = !DILocation(line: 3462, column: 31, scope: !8289)
!8297 = !DILocation(line: 3462, column: 36, scope: !8289)
!8298 = !DILocation(line: 3462, column: 28, scope: !8289)
!8299 = !DILocation(line: 3462, column: 5, scope: !8289)
!8300 = !DILocation(line: 3463, column: 12, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8289, file: !1212, line: 3463, column: 9)
!8302 = !DILocation(line: 3463, column: 27, scope: !8301)
!8303 = !DILocation(line: 3463, column: 9, scope: !8289)
!8304 = !DILocation(line: 3464, column: 28, scope: !8305)
!8305 = distinct !DILexicalBlock(scope: !8301, file: !1212, line: 3463, column: 33)
!8306 = !DILocation(line: 3465, column: 5, scope: !8305)
!8307 = !DILocation(line: 3467, column: 5, scope: !8289)
!8308 = !DILocation(line: 3468, column: 5, scope: !8289)
!8309 = !DILocation(line: 3469, column: 1, scope: !8289)
!8310 = distinct !DISubprogram(name: "SF_DAL_FLAG_SUS_CLR", scope: !1212, file: !1212, line: 2417, type: !291, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8311)
!8311 = !{!8312}
!8312 = !DILocalVariable(name: "savedMask", scope: !8310, file: !1212, line: 2419, type: !61)
!8313 = !DILocation(line: 2420, column: 17, scope: !8310)
!8314 = !DILocation(line: 0, scope: !8310)
!8315 = !DILocation(line: 2425, column: 25, scope: !8310)
!8316 = !DILocation(line: 2426, column: 5, scope: !8310)
!8317 = !DILocation(line: 2427, column: 1, scope: !8310)
!8318 = distinct !DISubprogram(name: "Flash_SuspendOperation", scope: !1212, file: !1212, line: 1308, type: !291, scopeLine: 1309, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8319)
!8319 = !{!8320, !8321}
!8320 = !DILocalVariable(name: "D", scope: !8318, file: !1212, line: 1310, type: !1382)
!8321 = !DILocalVariable(name: "status", scope: !8318, file: !1212, line: 1311, type: !1434)
!8322 = !DILocation(line: 1310, column: 60, scope: !8318)
!8323 = !DILocation(line: 0, scope: !8318)
!8324 = !DILocation(line: 1313, column: 5, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8326, file: !1212, line: 1313, column: 5)
!8326 = distinct !DILexicalBlock(scope: !8318, file: !1212, line: 1313, column: 5)
!8327 = !DILocation(line: 1313, column: 5, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8325, file: !1212, line: 1313, column: 5)
!8329 = !DILocation(line: 1313, column: 5, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8331, file: !1212, line: 1313, column: 5)
!8331 = distinct !DILexicalBlock(scope: !8332, file: !1212, line: 1313, column: 5)
!8332 = distinct !DILexicalBlock(scope: !8328, file: !1212, line: 1313, column: 5)
!8333 = !DILocation(line: 1315, column: 5, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8335, file: !1212, line: 1315, column: 5)
!8335 = distinct !DILexicalBlock(scope: !8318, file: !1212, line: 1315, column: 5)
!8336 = !DILocation(line: 1315, column: 5, scope: !8335)
!8337 = !DILocation(line: 1315, column: 5, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8334, file: !1212, line: 1315, column: 5)
!8339 = !DILocation(line: 1317, column: 5, scope: !8318)
!8340 = !DILocation(line: 1319, column: 5, scope: !8318)
!8341 = !DILocation(line: 1320, column: 46, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8318, file: !1212, line: 1319, column: 15)
!8343 = !DILocation(line: 1320, column: 51, scope: !8342)
!8344 = !DILocation(line: 1320, column: 18, scope: !8342)
!8345 = !DILocation(line: 1322, column: 31, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8342, file: !1212, line: 1322, column: 13)
!8347 = !DILocation(line: 1322, column: 28, scope: !8346)
!8348 = !DILocation(line: 1322, column: 26, scope: !8346)
!8349 = !DILocation(line: 1322, column: 15, scope: !8346)
!8350 = !DILocation(line: 1322, column: 13, scope: !8342)
!8351 = distinct !{!8351, !8340, !8352}
!8352 = !DILocation(line: 1325, column: 5, scope: !8318)
!8353 = !DILocation(line: 1327, column: 5, scope: !8318)
!8354 = !DILocation(line: 1328, column: 1, scope: !8318)
!8355 = distinct !DISubprogram(name: "SF_DAL_CreateDevLock", scope: !1212, file: !1212, line: 1394, type: !7931, scopeLine: 1395, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8356)
!8356 = !{!8357}
!8357 = !DILocalVariable(name: "D", arg: 1, scope: !8355, file: !1212, line: 1394, type: !1382)
!8358 = !DILocation(line: 0, scope: !8355)
!8359 = !DILocation(line: 1401, column: 1, scope: !8355)
!8360 = distinct !DISubprogram(name: "SF_DAL_Init_MXIC", scope: !1212, file: !1212, line: 1556, type: !8361, scopeLine: 1557, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8382)
!8361 = !DISubroutineType(types: !8362)
!8362 = !{!1091, !8363, !1382}
!8363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8364, size: 32)
!8364 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1408, line: 121, baseType: !8365)
!8365 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 105, size: 480, elements: !8366)
!8366 = !{!8367, !8368, !8369, !8370, !8371, !8372, !8373, !8374, !8375, !8376, !8377, !8378, !8379, !8380, !8381}
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !8365, file: !1408, line: 106, baseType: !1682, size: 32)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !8365, file: !1408, line: 107, baseType: !1483, size: 32, offset: 32)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !8365, file: !1408, line: 108, baseType: !1687, size: 32, offset: 64)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !8365, file: !1408, line: 109, baseType: !1691, size: 32, offset: 96)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !8365, file: !1408, line: 110, baseType: !1695, size: 32, offset: 128)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !8365, file: !1408, line: 111, baseType: !1691, size: 32, offset: 160)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !8365, file: !1408, line: 112, baseType: !1700, size: 32, offset: 192)
!8374 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !8365, file: !1408, line: 113, baseType: !1691, size: 32, offset: 224)
!8375 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !8365, file: !1408, line: 114, baseType: !1691, size: 32, offset: 256)
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !8365, file: !1408, line: 115, baseType: !1691, size: 32, offset: 288)
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !8365, file: !1408, line: 116, baseType: !1707, size: 32, offset: 320)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !8365, file: !1408, line: 117, baseType: !1712, size: 32, offset: 352)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !8365, file: !1408, line: 118, baseType: !1717, size: 32, offset: 384)
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !8365, file: !1408, line: 119, baseType: !1721, size: 32, offset: 416)
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !8365, file: !1408, line: 120, baseType: !1725, size: 32, offset: 448)
!8382 = !{!8383, !8384, !8385}
!8383 = !DILocalVariable(name: "driver", arg: 1, scope: !8360, file: !1212, line: 1556, type: !8363)
!8384 = !DILocalVariable(name: "D", arg: 2, scope: !8360, file: !1212, line: 1556, type: !1382)
!8385 = !DILocalVariable(name: "smap", scope: !8360, file: !1212, line: 1558, type: !1433)
!8386 = !DILocation(line: 0, scope: !8360)
!8387 = !DILocation(line: 1561, column: 15, scope: !8360)
!8388 = !DILocation(line: 1562, column: 22, scope: !8360)
!8389 = !DILocation(line: 1563, column: 5, scope: !8360)
!8390 = !DILocation(line: 1563, column: 22, scope: !8360)
!8391 = !DILocation(line: 1565, column: 5, scope: !8360)
!8392 = !DILocation(line: 1565, column: 22, scope: !8360)
!8393 = !DILocation(line: 1566, column: 5, scope: !8360)
!8394 = !DILocation(line: 1566, column: 22, scope: !8360)
!8395 = !DILocation(line: 1568, column: 5, scope: !8360)
!8396 = !DILocation(line: 1568, column: 22, scope: !8360)
!8397 = !DILocation(line: 1569, column: 5, scope: !8360)
!8398 = !DILocation(line: 1569, column: 22, scope: !8360)
!8399 = !DILocation(line: 1570, column: 5, scope: !8360)
!8400 = !DILocation(line: 1570, column: 22, scope: !8360)
!8401 = !DILocation(line: 1573, column: 8, scope: !8360)
!8402 = !DILocation(line: 1573, column: 13, scope: !8360)
!8403 = !DILocation(line: 1573, column: 28, scope: !8360)
!8404 = !DILocation(line: 1574, column: 8, scope: !8360)
!8405 = !DILocation(line: 1574, column: 13, scope: !8360)
!8406 = !DILocation(line: 1574, column: 29, scope: !8360)
!8407 = !DILocation(line: 1575, column: 8, scope: !8360)
!8408 = !DILocation(line: 1575, column: 13, scope: !8360)
!8409 = !DILocation(line: 1575, column: 30, scope: !8360)
!8410 = !DILocation(line: 1576, column: 8, scope: !8360)
!8411 = !DILocation(line: 1576, column: 13, scope: !8360)
!8412 = !DILocation(line: 1576, column: 23, scope: !8360)
!8413 = !DILocation(line: 1577, column: 8, scope: !8360)
!8414 = !DILocation(line: 1577, column: 13, scope: !8360)
!8415 = !DILocation(line: 1577, column: 24, scope: !8360)
!8416 = !DILocation(line: 1578, column: 8, scope: !8360)
!8417 = !DILocation(line: 1578, column: 13, scope: !8360)
!8418 = !DILocation(line: 1578, column: 25, scope: !8360)
!8419 = !DILocation(line: 1579, column: 8, scope: !8360)
!8420 = !DILocation(line: 1579, column: 23, scope: !8360)
!8421 = !DILocation(line: 1583, column: 10, scope: !8422)
!8422 = distinct !DILexicalBlock(scope: !8360, file: !1212, line: 1583, column: 9)
!8423 = !DILocation(line: 1583, column: 24, scope: !8422)
!8424 = !DILocation(line: 1583, column: 32, scope: !8422)
!8425 = !DILocation(line: 1583, column: 35, scope: !8422)
!8426 = !DILocation(line: 1583, column: 49, scope: !8422)
!8427 = !DILocation(line: 1583, column: 9, scope: !8360)
!8428 = !DILocation(line: 1586, column: 12, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8422, file: !1212, line: 1583, column: 59)
!8430 = !DILocation(line: 1586, column: 17, scope: !8429)
!8431 = !DILocation(line: 1586, column: 25, scope: !8429)
!8432 = !DILocation(line: 1587, column: 12, scope: !8429)
!8433 = !DILocation(line: 1587, column: 17, scope: !8429)
!8434 = !DILocation(line: 1587, column: 24, scope: !8429)
!8435 = !DILocation(line: 1591, column: 10, scope: !8436)
!8436 = distinct !DILexicalBlock(scope: !8360, file: !1212, line: 1591, column: 9)
!8437 = !DILocation(line: 1589, column: 5, scope: !8429)
!8438 = !DILocation(line: 1600, column: 32, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8360, file: !1212, line: 1600, column: 9)
!8440 = !DILocation(line: 1600, column: 35, scope: !8439)
!8441 = !DILocation(line: 1600, column: 49, scope: !8439)
!8442 = !DILocation(line: 1600, column: 9, scope: !8360)
!8443 = !DILocation(line: 1601, column: 12, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8439, file: !1212, line: 1600, column: 59)
!8445 = !DILocation(line: 1601, column: 17, scope: !8444)
!8446 = !DILocation(line: 1601, column: 25, scope: !8444)
!8447 = !DILocation(line: 1602, column: 12, scope: !8444)
!8448 = !DILocation(line: 1602, column: 17, scope: !8444)
!8449 = !DILocation(line: 1602, column: 24, scope: !8444)
!8450 = !DILocation(line: 1603, column: 5, scope: !8444)
!8451 = !DILocation(line: 1607, column: 8, scope: !8360)
!8452 = !DILocation(line: 1607, column: 20, scope: !8360)
!8453 = !DILocation(line: 1622, column: 5, scope: !8360)
!8454 = distinct !DISubprogram(name: "SF_DAL_UnlockBlock_MXIC", scope: !1212, file: !1212, line: 4553, type: !1484, scopeLine: 4554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8455)
!8455 = !{!8456, !8457, !8458, !8459}
!8456 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8454, file: !1212, line: 4553, type: !88)
!8457 = !DILocalVariable(name: "D", scope: !8454, file: !1212, line: 4555, type: !1382)
!8458 = !DILocalVariable(name: "unlock", scope: !8454, file: !1212, line: 4556, type: !61)
!8459 = !DILocalVariable(name: "cmd", scope: !8454, file: !1212, line: 4557, type: !460)
!8460 = !DILocation(line: 0, scope: !8454)
!8461 = !DILocation(line: 4555, column: 24, scope: !8454)
!8462 = !DILocation(line: 4557, column: 5, scope: !8454)
!8463 = !DILocation(line: 4558, column: 12, scope: !8464)
!8464 = distinct !DILexicalBlock(scope: !8454, file: !1212, line: 4558, column: 9)
!8465 = !DILocation(line: 4558, column: 9, scope: !8464)
!8466 = !DILocation(line: 4558, column: 23, scope: !8464)
!8467 = !DILocation(line: 4558, column: 31, scope: !8464)
!8468 = !DILocation(line: 4558, column: 34, scope: !8464)
!8469 = !DILocation(line: 4558, column: 48, scope: !8464)
!8470 = !DILocation(line: 4558, column: 56, scope: !8464)
!8471 = !DILocation(line: 4558, column: 59, scope: !8464)
!8472 = !DILocation(line: 4558, column: 73, scope: !8464)
!8473 = !DILocation(line: 4558, column: 9, scope: !8454)
!8474 = !DILocation(line: 4563, column: 24, scope: !8454)
!8475 = !DILocation(line: 4563, column: 31, scope: !8454)
!8476 = !DILocation(line: 4563, column: 36, scope: !8454)
!8477 = !DILocation(line: 4563, column: 28, scope: !8454)
!8478 = !DILocation(line: 4563, column: 5, scope: !8454)
!8479 = !DILocation(line: 4564, column: 5, scope: !8454)
!8480 = !DILocation(line: 4567, column: 28, scope: !8454)
!8481 = !DILocation(line: 4567, column: 36, scope: !8454)
!8482 = !DILocation(line: 4567, column: 41, scope: !8454)
!8483 = !DILocation(line: 4567, column: 5, scope: !8454)
!8484 = !DILocation(line: 4568, column: 17, scope: !8454)
!8485 = !DILocation(line: 4568, column: 22, scope: !8454)
!8486 = !DILocation(line: 4568, column: 14, scope: !8454)
!8487 = !DILocation(line: 4569, column: 22, scope: !8454)
!8488 = !DILocation(line: 4569, column: 54, scope: !8454)
!8489 = !DILocation(line: 4569, column: 65, scope: !8454)
!8490 = !DILocation(line: 4569, column: 62, scope: !8454)
!8491 = !DILocation(line: 4569, column: 87, scope: !8454)
!8492 = !DILocation(line: 4569, column: 85, scope: !8454)
!8493 = !DILocation(line: 4569, column: 60, scope: !8454)
!8494 = !DILocation(line: 4569, column: 58, scope: !8454)
!8495 = !DILocation(line: 4569, column: 51, scope: !8454)
!8496 = !DILocation(line: 4572, column: 24, scope: !8454)
!8497 = !DILocation(line: 4572, column: 5, scope: !8454)
!8498 = !DILocation(line: 4573, column: 5, scope: !8454)
!8499 = !DILocation(line: 4575, column: 5, scope: !8454)
!8500 = !DILocation(line: 4576, column: 1, scope: !8454)
!8501 = distinct !DISubprogram(name: "SF_DAL_Dev_WaitReady_EMIINIT", scope: !1212, file: !1212, line: 4488, type: !7931, scopeLine: 4489, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8502)
!8502 = !{!8503, !8504}
!8503 = !DILocalVariable(name: "D", arg: 1, scope: !8501, file: !1212, line: 4488, type: !1382)
!8504 = !DILocalVariable(name: "status", scope: !8501, file: !1212, line: 4490, type: !1434)
!8505 = !DILocation(line: 0, scope: !8501)
!8506 = !DILocation(line: 4490, column: 5, scope: !8501)
!8507 = !DILocation(line: 4491, column: 5, scope: !8501)
!8508 = !DILocation(line: 4492, column: 32, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8501, file: !1212, line: 4491, column: 10)
!8510 = !DILocation(line: 4492, column: 40, scope: !8509)
!8511 = !DILocation(line: 4492, column: 45, scope: !8509)
!8512 = !DILocation(line: 4492, column: 9, scope: !8509)
!8513 = !DILocation(line: 4493, column: 20, scope: !8501)
!8514 = !DILocation(line: 4493, column: 32, scope: !8501)
!8515 = !DILocation(line: 4493, column: 29, scope: !8501)
!8516 = !DILocation(line: 4493, column: 27, scope: !8501)
!8517 = !DILocation(line: 4493, column: 16, scope: !8501)
!8518 = !DILocation(line: 4493, column: 5, scope: !8509)
!8519 = distinct !{!8519, !8507, !8520}
!8520 = !DILocation(line: 4493, column: 54, scope: !8501)
!8521 = !DILocation(line: 4494, column: 1, scope: !8501)
!8522 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND", scope: !1212, file: !1212, line: 1742, type: !8361, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8523)
!8523 = !{!8524, !8525, !8526}
!8524 = !DILocalVariable(name: "driver", arg: 1, scope: !8522, file: !1212, line: 1742, type: !8363)
!8525 = !DILocalVariable(name: "D", arg: 2, scope: !8522, file: !1212, line: 1742, type: !1382)
!8526 = !DILocalVariable(name: "smap", scope: !8522, file: !1212, line: 1744, type: !1433)
!8527 = !DILocation(line: 0, scope: !8522)
!8528 = !DILocation(line: 1747, column: 15, scope: !8522)
!8529 = !DILocation(line: 1748, column: 22, scope: !8522)
!8530 = !DILocation(line: 1749, column: 5, scope: !8522)
!8531 = !DILocation(line: 1749, column: 22, scope: !8522)
!8532 = !DILocation(line: 1750, column: 5, scope: !8522)
!8533 = !DILocation(line: 1750, column: 22, scope: !8522)
!8534 = !DILocation(line: 1751, column: 5, scope: !8522)
!8535 = !DILocation(line: 1751, column: 22, scope: !8522)
!8536 = !DILocation(line: 1752, column: 5, scope: !8522)
!8537 = !DILocation(line: 1752, column: 22, scope: !8522)
!8538 = !DILocation(line: 1753, column: 5, scope: !8522)
!8539 = !DILocation(line: 1753, column: 22, scope: !8522)
!8540 = !DILocation(line: 1756, column: 8, scope: !8522)
!8541 = !DILocation(line: 1756, column: 13, scope: !8522)
!8542 = !DILocation(line: 1756, column: 24, scope: !8522)
!8543 = !DILocation(line: 1758, column: 8, scope: !8522)
!8544 = !DILocation(line: 1758, column: 13, scope: !8522)
!8545 = !DILocation(line: 1758, column: 28, scope: !8522)
!8546 = !DILocation(line: 1759, column: 8, scope: !8522)
!8547 = !DILocation(line: 1759, column: 13, scope: !8522)
!8548 = !DILocation(line: 1759, column: 29, scope: !8522)
!8549 = !DILocation(line: 1760, column: 8, scope: !8522)
!8550 = !DILocation(line: 1760, column: 13, scope: !8522)
!8551 = !DILocation(line: 1760, column: 23, scope: !8522)
!8552 = !DILocation(line: 1761, column: 8, scope: !8522)
!8553 = !DILocation(line: 1761, column: 13, scope: !8522)
!8554 = !DILocation(line: 1761, column: 24, scope: !8522)
!8555 = !DILocation(line: 1762, column: 8, scope: !8522)
!8556 = !DILocation(line: 1762, column: 13, scope: !8522)
!8557 = !DILocation(line: 1762, column: 21, scope: !8522)
!8558 = !DILocation(line: 1763, column: 8, scope: !8522)
!8559 = !DILocation(line: 1763, column: 13, scope: !8522)
!8560 = !DILocation(line: 1763, column: 20, scope: !8522)
!8561 = !DILocation(line: 1764, column: 8, scope: !8522)
!8562 = !DILocation(line: 1764, column: 23, scope: !8522)
!8563 = !DILocation(line: 1768, column: 8, scope: !8522)
!8564 = !DILocation(line: 1768, column: 20, scope: !8522)
!8565 = !DILocation(line: 1770, column: 5, scope: !8522)
!8566 = distinct !DISubprogram(name: "SF_DAL_Init_WINBOND_OTP", scope: !1212, file: !1212, line: 1775, type: !8361, scopeLine: 1776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8567)
!8567 = !{!8568, !8569}
!8568 = !DILocalVariable(name: "driver", arg: 1, scope: !8566, file: !1212, line: 1775, type: !8363)
!8569 = !DILocalVariable(name: "D", arg: 2, scope: !8566, file: !1212, line: 1775, type: !1382)
!8570 = !DILocation(line: 0, scope: !8566)
!8571 = !DILocation(line: 1793, column: 5, scope: !8566)
!8572 = distinct !DISubprogram(name: "SF_DAL_Init_Common", scope: !1212, file: !1212, line: 1932, type: !8361, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8573)
!8573 = !{!8574, !8575}
!8574 = !DILocalVariable(name: "driver", arg: 1, scope: !8572, file: !1212, line: 1932, type: !8363)
!8575 = !DILocalVariable(name: "D", arg: 2, scope: !8572, file: !1212, line: 1932, type: !1382)
!8576 = !DILocation(line: 0, scope: !8572)
!8577 = !DILocation(line: 1935, column: 13, scope: !8572)
!8578 = !DILocation(line: 1935, column: 25, scope: !8572)
!8579 = !DILocation(line: 1936, column: 13, scope: !8572)
!8580 = !DILocation(line: 1936, column: 22, scope: !8572)
!8581 = !DILocation(line: 1937, column: 13, scope: !8572)
!8582 = !DILocation(line: 1937, column: 23, scope: !8572)
!8583 = !DILocation(line: 1939, column: 13, scope: !8572)
!8584 = !DILocation(line: 1939, column: 24, scope: !8572)
!8585 = !DILocation(line: 1940, column: 13, scope: !8572)
!8586 = !DILocation(line: 1940, column: 25, scope: !8572)
!8587 = !DILocation(line: 1945, column: 13, scope: !8572)
!8588 = !DILocation(line: 1945, column: 32, scope: !8572)
!8589 = !DILocation(line: 1946, column: 13, scope: !8572)
!8590 = !DILocation(line: 1946, column: 30, scope: !8572)
!8591 = !DILocation(line: 1947, column: 13, scope: !8572)
!8592 = !DILocation(line: 1947, column: 26, scope: !8572)
!8593 = !DILocation(line: 1948, column: 13, scope: !8572)
!8594 = !DILocation(line: 1948, column: 25, scope: !8572)
!8595 = !DILocation(line: 1949, column: 13, scope: !8572)
!8596 = !DILocation(line: 1949, column: 24, scope: !8572)
!8597 = !DILocation(line: 1956, column: 13, scope: !8572)
!8598 = !DILocation(line: 1956, column: 23, scope: !8572)
!8599 = !DILocation(line: 1957, column: 13, scope: !8572)
!8600 = !DILocation(line: 1957, column: 28, scope: !8572)
!8601 = !DILocation(line: 1960, column: 13, scope: !8572)
!8602 = !DILocation(line: 1960, column: 30, scope: !8572)
!8603 = !DILocation(line: 1961, column: 13, scope: !8572)
!8604 = !DILocation(line: 1961, column: 30, scope: !8572)
!8605 = !DILocation(line: 1962, column: 13, scope: !8572)
!8606 = !DILocation(line: 1962, column: 20, scope: !8572)
!8607 = !DILocation(line: 1968, column: 9, scope: !8608)
!8608 = distinct !DILexicalBlock(scope: !8572, file: !1212, line: 1968, column: 9)
!8609 = !DILocation(line: 1968, column: 36, scope: !8608)
!8610 = !DILocation(line: 1968, column: 9, scope: !8572)
!8611 = !DILocation(line: 1971, column: 12, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8608, file: !1212, line: 1970, column: 5)
!8613 = !DILocation(line: 1971, column: 25, scope: !8612)
!8614 = !DILocation(line: 1979, column: 8, scope: !8572)
!8615 = !DILocation(line: 1979, column: 13, scope: !8572)
!8616 = !DILocation(line: 1979, column: 25, scope: !8572)
!8617 = !DILocation(line: 1980, column: 8, scope: !8572)
!8618 = !DILocation(line: 1980, column: 13, scope: !8572)
!8619 = !DILocation(line: 1980, column: 24, scope: !8572)
!8620 = !DILocation(line: 1981, column: 8, scope: !8572)
!8621 = !DILocation(line: 1981, column: 13, scope: !8572)
!8622 = !DILocation(line: 1981, column: 24, scope: !8572)
!8623 = !DILocation(line: 1982, column: 8, scope: !8572)
!8624 = !DILocation(line: 1982, column: 13, scope: !8572)
!8625 = !DILocation(line: 1982, column: 22, scope: !8572)
!8626 = !DILocation(line: 1983, column: 8, scope: !8572)
!8627 = !DILocation(line: 1983, column: 13, scope: !8572)
!8628 = !DILocation(line: 1983, column: 21, scope: !8572)
!8629 = !DILocation(line: 1984, column: 8, scope: !8572)
!8630 = !DILocation(line: 1984, column: 13, scope: !8572)
!8631 = !DILocation(line: 1984, column: 22, scope: !8572)
!8632 = !DILocation(line: 1985, column: 8, scope: !8572)
!8633 = !DILocation(line: 1985, column: 13, scope: !8572)
!8634 = !DILocation(line: 1985, column: 22, scope: !8572)
!8635 = !DILocation(line: 1986, column: 8, scope: !8572)
!8636 = !DILocation(line: 1986, column: 13, scope: !8572)
!8637 = !DILocation(line: 1986, column: 21, scope: !8572)
!8638 = !DILocation(line: 1987, column: 8, scope: !8572)
!8639 = !DILocation(line: 1987, column: 13, scope: !8572)
!8640 = !DILocation(line: 1987, column: 20, scope: !8572)
!8641 = !DILocation(line: 1988, column: 8, scope: !8572)
!8642 = !DILocation(line: 1988, column: 13, scope: !8572)
!8643 = !DILocation(line: 1988, column: 25, scope: !8572)
!8644 = !DILocation(line: 1989, column: 8, scope: !8572)
!8645 = !DILocation(line: 1989, column: 13, scope: !8572)
!8646 = !DILocation(line: 1989, column: 22, scope: !8572)
!8647 = !DILocation(line: 1990, column: 8, scope: !8572)
!8648 = !DILocation(line: 1990, column: 13, scope: !8572)
!8649 = !DILocation(line: 1990, column: 22, scope: !8572)
!8650 = !DILocation(line: 1993, column: 8, scope: !8572)
!8651 = !DILocation(line: 1993, column: 13, scope: !8572)
!8652 = !DILocation(line: 1993, column: 26, scope: !8572)
!8653 = !DILocation(line: 1996, column: 8, scope: !8572)
!8654 = !DILocation(line: 1996, column: 20, scope: !8572)
!8655 = !DILocation(line: 1999, column: 8, scope: !8572)
!8656 = !DILocation(line: 1999, column: 24, scope: !8572)
!8657 = !DILocation(line: 2000, column: 8, scope: !8572)
!8658 = !DILocation(line: 2000, column: 19, scope: !8572)
!8659 = !DILocation(line: 2001, column: 8, scope: !8572)
!8660 = !DILocation(line: 2001, column: 24, scope: !8572)
!8661 = !DILocation(line: 2002, column: 8, scope: !8572)
!8662 = !DILocation(line: 2002, column: 23, scope: !8572)
!8663 = !DILocation(line: 2004, column: 5, scope: !8572)
!8664 = distinct !DISubprogram(name: "SF_DAL_MountDevice", scope: !1212, file: !1212, line: 2160, type: !1683, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8665)
!8665 = !{!8666, !8667, !8668, !8681, !8682, !8683}
!8666 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8664, file: !1212, line: 2160, type: !88)
!8667 = !DILocalVariable(name: "Info", arg: 2, scope: !8664, file: !1212, line: 2160, type: !88)
!8668 = !DILocalVariable(name: "FlashInfo", scope: !8664, file: !1212, line: 2162, type: !8669)
!8669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8670, size: 32)
!8670 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1408, line: 99, baseType: !8671)
!8671 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 90, size: 928, elements: !8672)
!8672 = !{!8673, !8674, !8675, !8676, !8677, !8678, !8679, !8680}
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !8671, file: !1408, line: 91, baseType: !61, size: 32)
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !8671, file: !1408, line: 92, baseType: !1739, size: 256, offset: 32)
!8675 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !8671, file: !1408, line: 93, baseType: !1739, size: 256, offset: 288)
!8676 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !8671, file: !1408, line: 94, baseType: !1739, size: 256, offset: 544)
!8677 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !8671, file: !1408, line: 95, baseType: !61, size: 32, offset: 800)
!8678 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !8671, file: !1408, line: 96, baseType: !1731, size: 16, offset: 832)
!8679 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !8671, file: !1408, line: 97, baseType: !61, size: 32, offset: 864)
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !8671, file: !1408, line: 98, baseType: !61, size: 32, offset: 896)
!8681 = !DILocalVariable(name: "D", scope: !8664, file: !1212, line: 2163, type: !1382)
!8682 = !DILocalVariable(name: "i", scope: !8664, file: !1212, line: 2164, type: !61)
!8683 = !DILocalVariable(name: "result", scope: !8664, file: !1212, line: 2166, type: !1091)
!8684 = !DILocation(line: 0, scope: !8664)
!8685 = !DILocation(line: 2163, column: 37, scope: !8664)
!8686 = !DILocation(line: 2202, column: 16, scope: !8664)
!8687 = !DILocation(line: 2202, column: 28, scope: !8664)
!8688 = !DILocation(line: 2204, column: 15, scope: !8664)
!8689 = !DILocation(line: 2204, column: 29, scope: !8664)
!8690 = !DILocation(line: 2204, column: 39, scope: !8664)
!8691 = !DILocation(line: 2204, column: 5, scope: !8664)
!8692 = !DILocation(line: 2205, column: 9, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8664, file: !1212, line: 2204, column: 45)
!8694 = !DILocation(line: 2205, column: 33, scope: !8693)
!8695 = !DILocation(line: 2206, column: 41, scope: !8693)
!8696 = !DILocation(line: 2206, column: 55, scope: !8693)
!8697 = !DILocation(line: 2206, column: 9, scope: !8693)
!8698 = !DILocation(line: 2206, column: 36, scope: !8693)
!8699 = !DILocation(line: 2207, column: 38, scope: !8693)
!8700 = !DILocation(line: 2207, column: 52, scope: !8693)
!8701 = !DILocation(line: 2207, column: 32, scope: !8693)
!8702 = !DILocation(line: 2209, column: 10, scope: !8693)
!8703 = distinct !{!8703, !8691, !8704}
!8704 = !DILocation(line: 2210, column: 5, scope: !8664)
!8705 = !DILocation(line: 2212, column: 16, scope: !8664)
!8706 = !DILocation(line: 2212, column: 32, scope: !8664)
!8707 = !DILocation(line: 2213, column: 16, scope: !8664)
!8708 = !DILocation(line: 2213, column: 25, scope: !8664)
!8709 = !DILocation(line: 2236, column: 5, scope: !8664)
!8710 = !DILocation(line: 2238, column: 5, scope: !8664)
!8711 = !DILocation(line: 2239, column: 18, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8664, file: !1212, line: 2238, column: 10)
!8713 = !DILocation(line: 2240, column: 34, scope: !8664)
!8714 = !DILocation(line: 2240, column: 5, scope: !8712)
!8715 = distinct !{!8715, !8710, !8716}
!8716 = !DILocation(line: 2240, column: 43, scope: !8664)
!8717 = !DILocation(line: 2259, column: 5, scope: !8664)
!8718 = distinct !DISubprogram(name: "SF_DAL_ShutDown", scope: !1212, file: !1212, line: 2275, type: !1484, scopeLine: 2276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8719)
!8719 = !{!8720, !8721, !8722, !8723}
!8720 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8718, file: !1212, line: 2275, type: !88)
!8721 = !DILocalVariable(name: "D", scope: !8718, file: !1212, line: 2278, type: !1382)
!8722 = !DILocalVariable(name: "status", scope: !8718, file: !1212, line: 2279, type: !1434)
!8723 = !DILocalVariable(name: "saved_mask", scope: !8718, file: !1212, line: 2280, type: !61)
!8724 = !DILocation(line: 0, scope: !8718)
!8725 = !DILocation(line: 2278, column: 33, scope: !8718)
!8726 = !DILocation(line: 2286, column: 5, scope: !8718)
!8727 = !DILocation(line: 2293, column: 9, scope: !8718)
!8728 = !DILocation(line: 2294, column: 26, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8718, file: !1212, line: 2293, column: 19)
!8730 = !DILocation(line: 2297, column: 17, scope: !8731)
!8731 = distinct !DILexicalBlock(scope: !8729, file: !1212, line: 2297, column: 17)
!8732 = !DILocation(line: 2297, column: 17, scope: !8729)
!8733 = !DILocation(line: 2298, column: 17, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8731, file: !1212, line: 2297, column: 36)
!8735 = !DILocation(line: 2299, column: 37, scope: !8734)
!8736 = !DILocation(line: 2300, column: 13, scope: !8734)
!8737 = !DILocation(line: 2303, column: 50, scope: !8729)
!8738 = !DILocation(line: 2303, column: 55, scope: !8729)
!8739 = !DILocation(line: 2303, column: 22, scope: !8729)
!8740 = !DILocation(line: 2306, column: 35, scope: !8741)
!8741 = distinct !DILexicalBlock(scope: !8729, file: !1212, line: 2306, column: 17)
!8742 = !DILocation(line: 2306, column: 32, scope: !8741)
!8743 = !DILocation(line: 2306, column: 30, scope: !8741)
!8744 = !DILocation(line: 2306, column: 19, scope: !8741)
!8745 = !DILocation(line: 2306, column: 17, scope: !8729)
!8746 = !DILocation(line: 2307, column: 17, scope: !8747)
!8747 = distinct !DILexicalBlock(scope: !8741, file: !1212, line: 2306, column: 59)
!8748 = !DILocation(line: 2308, column: 17, scope: !8747)
!8749 = !DILocation(line: 2315, column: 12, scope: !8718)
!8750 = !DILocation(line: 2315, column: 21, scope: !8718)
!8751 = !DILocation(line: 2325, column: 9, scope: !8718)
!8752 = !DILocation(line: 2326, column: 5, scope: !8718)
!8753 = !DILocation(line: 2311, column: 17, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8741, file: !1212, line: 2310, column: 20)
!8755 = distinct !{!8755, !8727, !8756}
!8756 = !DILocation(line: 2313, column: 9, scope: !8718)
!8757 = distinct !DISubprogram(name: "SF_DAL_EraseBlock", scope: !1212, file: !1212, line: 2819, type: !1692, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8758)
!8758 = !{!8759, !8760, !8761, !8762, !8763, !8764, !8765, !8766, !8767, !8768, !8771, !8772}
!8759 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8757, file: !1212, line: 2819, type: !88)
!8760 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8757, file: !1212, line: 2819, type: !61)
!8761 = !DILocalVariable(name: "result", scope: !8757, file: !1212, line: 2821, type: !1091)
!8762 = !DILocalVariable(name: "blocksize", scope: !8757, file: !1212, line: 2822, type: !61)
!8763 = !DILocalVariable(name: "eraseunit", scope: !8757, file: !1212, line: 2823, type: !61)
!8764 = !DILocalVariable(name: "eraseaddr", scope: !8757, file: !1212, line: 2824, type: !61)
!8765 = !DILocalVariable(name: "iteration", scope: !8757, file: !1212, line: 2825, type: !61)
!8766 = !DILocalVariable(name: "D", scope: !8757, file: !1212, line: 2826, type: !1382)
!8767 = !DILocalVariable(name: "erase_block", scope: !8757, file: !1212, line: 2827, type: !61)
!8768 = !DILocalVariable(name: "a", scope: !8769, file: !1212, line: 2853, type: !61)
!8769 = distinct !DILexicalBlock(scope: !8770, file: !1212, line: 2852, column: 56)
!8770 = distinct !DILexicalBlock(scope: !8757, file: !1212, line: 2852, column: 9)
!8771 = !DILocalVariable(name: "b", scope: !8769, file: !1212, line: 2853, type: !61)
!8772 = !DILocalVariable(name: "c", scope: !8769, file: !1212, line: 2853, type: !61)
!8773 = !DILocation(line: 0, scope: !8757)
!8774 = !DILocation(line: 2826, column: 30, scope: !8757)
!8775 = !DILocation(line: 2829, column: 5, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !1212, line: 2829, column: 5)
!8777 = distinct !DILexicalBlock(scope: !8757, file: !1212, line: 2829, column: 5)
!8778 = !DILocation(line: 2829, column: 5, scope: !8777)
!8779 = !DILocation(line: 2829, column: 5, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8776, file: !1212, line: 2829, column: 5)
!8781 = !DILocation(line: 2836, column: 9, scope: !8757)
!8782 = !DILocation(line: 2838, column: 8, scope: !8757)
!8783 = !DILocation(line: 2838, column: 21, scope: !8757)
!8784 = !DILocation(line: 2847, column: 5, scope: !8757)
!8785 = !DILocation(line: 2848, column: 18, scope: !8786)
!8786 = distinct !DILexicalBlock(scope: !8757, file: !1212, line: 2847, column: 10)
!8787 = !DILocation(line: 2850, column: 34, scope: !8757)
!8788 = !DILocation(line: 2850, column: 5, scope: !8786)
!8789 = distinct !{!8789, !8784, !8790}
!8790 = !DILocation(line: 2850, column: 43, scope: !8757)
!8791 = !DILocation(line: 2839, column: 32, scope: !8757)
!8792 = !DILocation(line: 2861, column: 53, scope: !8769)
!8793 = !DILocation(line: 2861, column: 40, scope: !8769)
!8794 = !DILocation(line: 2861, column: 25, scope: !8769)
!8795 = !DILocation(line: 2874, column: 16, scope: !8769)
!8796 = !DILocation(line: 2874, column: 13, scope: !8769)
!8797 = !DILocation(line: 0, scope: !8769)
!8798 = !DILocation(line: 2875, column: 24, scope: !8769)
!8799 = !DILocation(line: 2877, column: 21, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8769, file: !1212, line: 2877, column: 13)
!8801 = !DILocation(line: 2877, column: 13, scope: !8769)
!8802 = !DILocation(line: 2879, column: 23, scope: !8803)
!8803 = distinct !DILexicalBlock(scope: !8804, file: !1212, line: 2879, column: 21)
!8804 = distinct !DILexicalBlock(scope: !8805, file: !1212, line: 2878, column: 120)
!8805 = distinct !DILexicalBlock(scope: !8806, file: !1212, line: 2878, column: 13)
!8806 = distinct !DILexicalBlock(scope: !8807, file: !1212, line: 2878, column: 13)
!8807 = distinct !DILexicalBlock(scope: !8800, file: !1212, line: 2877, column: 27)
!8808 = !DILocation(line: 2879, column: 21, scope: !8804)
!8809 = !DILocation(line: 2878, column: 48, scope: !8805)
!8810 = !DILocation(line: 2878, column: 83, scope: !8805)
!8811 = !DILocation(line: 2878, column: 113, scope: !8805)
!8812 = !DILocation(line: 2878, column: 35, scope: !8805)
!8813 = !DILocation(line: 2878, column: 13, scope: !8806)
!8814 = distinct !{!8814, !8813, !8815}
!8815 = !DILocation(line: 2883, column: 13, scope: !8806)
!8816 = !DILocation(line: 2863, column: 19, scope: !8769)
!8817 = !DILocation(line: 2825, column: 24, scope: !8757)
!8818 = !DILocation(line: 2886, column: 9, scope: !8769)
!8819 = !DILocation(line: 2888, column: 36, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8769, file: !1212, line: 2886, column: 31)
!8821 = !DILocation(line: 2888, column: 41, scope: !8820)
!8822 = !DILocation(line: 2889, column: 17, scope: !8820)
!8823 = !DILocation(line: 2891, column: 36, scope: !8820)
!8824 = !DILocation(line: 2891, column: 41, scope: !8820)
!8825 = !DILocation(line: 2892, column: 17, scope: !8820)
!8826 = !DILocation(line: 2894, column: 36, scope: !8820)
!8827 = !DILocation(line: 2894, column: 41, scope: !8820)
!8828 = !DILocation(line: 2895, column: 17, scope: !8820)
!8829 = !DILocation(line: 2897, column: 17, scope: !8830)
!8830 = distinct !DILexicalBlock(scope: !8831, file: !1212, line: 2897, column: 17)
!8831 = distinct !DILexicalBlock(scope: !8832, file: !1212, line: 2897, column: 17)
!8832 = distinct !DILexicalBlock(scope: !8820, file: !1212, line: 2897, column: 17)
!8833 = !DILocation(line: 0, scope: !8820)
!8834 = !DILocation(line: 2906, column: 5, scope: !8757)
!8835 = !DILocation(line: 2908, column: 32, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8757, file: !1212, line: 2906, column: 27)
!8837 = !DILocation(line: 2908, column: 37, scope: !8836)
!8838 = !DILocation(line: 2909, column: 13, scope: !8836)
!8839 = !DILocation(line: 2911, column: 32, scope: !8836)
!8840 = !DILocation(line: 2911, column: 37, scope: !8836)
!8841 = !DILocation(line: 2912, column: 13, scope: !8836)
!8842 = !DILocation(line: 2914, column: 32, scope: !8836)
!8843 = !DILocation(line: 2914, column: 37, scope: !8836)
!8844 = !DILocation(line: 2915, column: 13, scope: !8836)
!8845 = !DILocation(line: 0, scope: !8836)
!8846 = !DILocation(line: 2921, column: 56, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8848, file: !1212, line: 2921, column: 5)
!8848 = distinct !DILexicalBlock(scope: !8757, file: !1212, line: 2921, column: 5)
!8849 = !DILocation(line: 2921, column: 5, scope: !8848)
!8850 = !DILocation(line: 2921, column: 35, scope: !8848)
!8851 = !DILocation(line: 2921, column: 22, scope: !8848)
!8852 = !DILocation(line: 2922, column: 9, scope: !8853)
!8853 = distinct !DILexicalBlock(scope: !8847, file: !1212, line: 2921, column: 99)
!8854 = !DILocation(line: 2929, column: 9, scope: !8853)
!8855 = !DILocation(line: 2938, column: 26, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8853, file: !1212, line: 2929, column: 26)
!8857 = !DILocation(line: 2939, column: 37, scope: !8858)
!8858 = distinct !DILexicalBlock(scope: !8856, file: !1212, line: 2939, column: 17)
!8859 = !DILocation(line: 2939, column: 17, scope: !8856)
!8860 = distinct !{!8860, !8854, !8861}
!8861 = !DILocation(line: 2943, column: 9, scope: !8853)
!8862 = !DILocation(line: 2921, column: 71, scope: !8847)
!8863 = !DILocation(line: 2921, column: 85, scope: !8847)
!8864 = distinct !{!8864, !8849, !8865}
!8865 = !DILocation(line: 2983, column: 5, scope: !8848)
!8866 = !DILocation(line: 2985, column: 21, scope: !8757)
!8867 = !DILocation(line: 2992, column: 9, scope: !8757)
!8868 = !DILocation(line: 3000, column: 5, scope: !8757)
!8869 = distinct !DISubprogram(name: "SF_DAL_ProgramData", scope: !1212, file: !1212, line: 2533, type: !1696, scopeLine: 2534, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8870)
!8870 = !{!8871, !8872, !8873, !8874, !8875, !8876, !8877, !8878, !8879, !8880, !8881, !8882, !8883, !8884}
!8871 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8869, file: !1212, line: 2533, type: !88)
!8872 = !DILocalVariable(name: "Address", arg: 2, scope: !8869, file: !1212, line: 2533, type: !88)
!8873 = !DILocalVariable(name: "Data", arg: 3, scope: !8869, file: !1212, line: 2533, type: !88)
!8874 = !DILocalVariable(name: "Length", arg: 4, scope: !8869, file: !1212, line: 2533, type: !61)
!8875 = !DILocalVariable(name: "D", scope: !8869, file: !1212, line: 2535, type: !1382)
!8876 = !DILocalVariable(name: "savedMask", scope: !8869, file: !1212, line: 2536, type: !61)
!8877 = !DILocalVariable(name: "address", scope: !8869, file: !1212, line: 2537, type: !61)
!8878 = !DILocalVariable(name: "p_data", scope: !8869, file: !1212, line: 2538, type: !762)
!8879 = !DILocalVariable(name: "p_data_first", scope: !8869, file: !1212, line: 2539, type: !762)
!8880 = !DILocalVariable(name: "result", scope: !8869, file: !1212, line: 2540, type: !1091)
!8881 = !DILocalVariable(name: "written", scope: !8869, file: !1212, line: 2541, type: !61)
!8882 = !DILocalVariable(name: "length", scope: !8869, file: !1212, line: 2542, type: !61)
!8883 = !DILocalVariable(name: "cmd1", scope: !8869, file: !1212, line: 2543, type: !61)
!8884 = !DILocalVariable(name: "j", scope: !8885, file: !1212, line: 2599, type: !61)
!8885 = distinct !DILexicalBlock(scope: !8886, file: !1212, line: 2597, column: 61)
!8886 = distinct !DILexicalBlock(scope: !8887, file: !1212, line: 2597, column: 13)
!8887 = distinct !DILexicalBlock(scope: !8869, file: !1212, line: 2583, column: 25)
!8888 = !DILocation(line: 0, scope: !8869)
!8889 = !DILocation(line: 2535, column: 26, scope: !8869)
!8890 = !DILocation(line: 2537, column: 37, scope: !8869)
!8891 = !DILocation(line: 2538, column: 5, scope: !8869)
!8892 = !DILocation(line: 2538, column: 19, scope: !8869)
!8893 = !DILocation(line: 2542, column: 5, scope: !8869)
!8894 = !DILocation(line: 2545, column: 5, scope: !8895)
!8895 = distinct !DILexicalBlock(scope: !8896, file: !1212, line: 2545, column: 5)
!8896 = distinct !DILexicalBlock(scope: !8869, file: !1212, line: 2545, column: 5)
!8897 = !DILocation(line: 2545, column: 5, scope: !8896)
!8898 = !DILocation(line: 2545, column: 5, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8895, file: !1212, line: 2545, column: 5)
!8900 = !DILocation(line: 2567, column: 9, scope: !8869)
!8901 = !DILocation(line: 2569, column: 8, scope: !8869)
!8902 = !DILocation(line: 2569, column: 21, scope: !8869)
!8903 = !DILocation(line: 2576, column: 5, scope: !8869)
!8904 = !DILocation(line: 2577, column: 18, scope: !8905)
!8905 = distinct !DILexicalBlock(scope: !8869, file: !1212, line: 2576, column: 10)
!8906 = !DILocation(line: 2579, column: 34, scope: !8869)
!8907 = !DILocation(line: 2579, column: 5, scope: !8905)
!8908 = distinct !{!8908, !8903, !8909}
!8909 = !DILocation(line: 2579, column: 43, scope: !8869)
!8910 = !DILocation(line: 2583, column: 14, scope: !8869)
!8911 = !DILocation(line: 2583, column: 5, scope: !8869)
!8912 = !DILocation(line: 2584, column: 27, scope: !8887)
!8913 = !DILocation(line: 2592, column: 18, scope: !8887)
!8914 = !DILocation(line: 2592, column: 35, scope: !8887)
!8915 = !DILocation(line: 2592, column: 74, scope: !8887)
!8916 = !DILocation(line: 2592, column: 50, scope: !8887)
!8917 = !DILocation(line: 2592, column: 39, scope: !8887)
!8918 = !DILocation(line: 2595, column: 37, scope: !8887)
!8919 = !DILocation(line: 2595, column: 29, scope: !8887)
!8920 = !DILocation(line: 2595, column: 16, scope: !8887)
!8921 = !DILocation(line: 2597, column: 13, scope: !8886)
!8922 = !DILocation(line: 2597, column: 30, scope: !8886)
!8923 = !DILocation(line: 2597, column: 13, scope: !8887)
!8924 = !DILocation(line: 0, scope: !8885)
!8925 = !DILocation(line: 2600, column: 27, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8927, file: !1212, line: 2600, column: 13)
!8927 = distinct !DILexicalBlock(scope: !8885, file: !1212, line: 2600, column: 13)
!8928 = !DILocation(line: 2600, column: 13, scope: !8927)
!8929 = !DILocation(line: 2601, column: 38, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8926, file: !1212, line: 2600, column: 42)
!8931 = !DILocation(line: 2601, column: 17, scope: !8930)
!8932 = !DILocation(line: 2601, column: 36, scope: !8930)
!8933 = !DILocation(line: 2600, column: 38, scope: !8926)
!8934 = distinct !{!8934, !8928, !8935}
!8935 = !DILocation(line: 2602, column: 13, scope: !8927)
!8936 = !DILocation(line: 0, scope: !8887)
!8937 = !DILocation(line: 2606, column: 18, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8887, file: !1212, line: 2606, column: 13)
!8939 = !DILocation(line: 2606, column: 29, scope: !8938)
!8940 = !DILocation(line: 2606, column: 13, scope: !8887)
!8941 = !DILocation(line: 2607, column: 13, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8938, file: !1212, line: 2606, column: 55)
!8943 = !DILocation(line: 2608, column: 9, scope: !8942)
!8944 = !DILocation(line: 2613, column: 16, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8887, file: !1212, line: 2613, column: 13)
!8946 = !DILocation(line: 2613, column: 29, scope: !8945)
!8947 = !DILocation(line: 0, scope: !8945)
!8948 = !DILocation(line: 2613, column: 13, scope: !8887)
!8949 = !DILocation(line: 2614, column: 20, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8945, file: !1212, line: 2613, column: 35)
!8951 = !DILocation(line: 2615, column: 32, scope: !8950)
!8952 = !DILocation(line: 2615, column: 40, scope: !8950)
!8953 = !DILocation(line: 2615, column: 13, scope: !8950)
!8954 = !DILocation(line: 2616, column: 9, scope: !8950)
!8955 = !DILocation(line: 2619, column: 20, scope: !8956)
!8956 = distinct !DILexicalBlock(scope: !8945, file: !1212, line: 2618, column: 9)
!8957 = !DILocation(line: 2620, column: 32, scope: !8956)
!8958 = !DILocation(line: 2620, column: 40, scope: !8956)
!8959 = !DILocation(line: 2620, column: 13, scope: !8956)
!8960 = !DILocation(line: 2626, column: 21, scope: !8887)
!8961 = !DILocation(line: 2633, column: 37, scope: !8887)
!8962 = !DILocation(line: 2634, column: 45, scope: !8887)
!8963 = !DILocation(line: 2634, column: 42, scope: !8887)
!8964 = !DILocation(line: 2634, column: 40, scope: !8887)
!8965 = !DILocation(line: 2634, column: 58, scope: !8887)
!8966 = !DILocation(line: 2634, column: 29, scope: !8887)
!8967 = !DILocation(line: 2635, column: 28, scope: !8887)
!8968 = !DILocation(line: 2636, column: 9, scope: !8887)
!8969 = !DILocation(line: 2638, column: 26, scope: !8887)
!8970 = !DILocation(line: 2638, column: 9, scope: !8887)
!8971 = !DILocation(line: 2639, column: 29, scope: !8887)
!8972 = !DILocation(line: 2639, column: 9, scope: !8887)
!8973 = !DILocation(line: 2662, column: 9, scope: !8887)
!8974 = !DILocation(line: 2670, column: 9, scope: !8887)
!8975 = !DILocation(line: 2676, column: 89, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8887, file: !1212, line: 2670, column: 13)
!8977 = !DILocation(line: 2676, column: 26, scope: !8976)
!8978 = !DILocation(line: 2678, column: 36, scope: !8887)
!8979 = !DILocation(line: 2678, column: 9, scope: !8976)
!8980 = distinct !{!8980, !8974, !8981}
!8981 = !DILocation(line: 2678, column: 45, scope: !8887)
!8982 = !DILocation(line: 2718, column: 19, scope: !8887)
!8983 = !DILocation(line: 2718, column: 16, scope: !8887)
!8984 = !DILocation(line: 2719, column: 16, scope: !8887)
!8985 = !DILocation(line: 2722, column: 31, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8887, file: !1212, line: 2722, column: 13)
!8987 = !DILocation(line: 2722, column: 13, scope: !8887)
!8988 = distinct !{!8988, !8911, !8989}
!8989 = !DILocation(line: 2725, column: 5, scope: !8869)
!8990 = !DILocation(line: 2748, column: 21, scope: !8869)
!8991 = !DILocation(line: 2755, column: 9, scope: !8869)
!8992 = !DILocation(line: 2757, column: 16, scope: !8993)
!8993 = distinct !DILexicalBlock(scope: !8869, file: !1212, line: 2757, column: 9)
!8994 = !DILocation(line: 2761, column: 1, scope: !8869)
!8995 = distinct !DISubprogram(name: "SF_DAL_NonBlockEraseBlock", scope: !1212, file: !1212, line: 3019, type: !1692, scopeLine: 3020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !8996)
!8996 = !{!8997, !8998}
!8997 = !DILocalVariable(name: "MTDData", arg: 1, scope: !8995, file: !1212, line: 3019, type: !88)
!8998 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !8995, file: !1212, line: 3019, type: !61)
!8999 = !DILocation(line: 0, scope: !8995)
!9000 = !DILocation(line: 3021, column: 5, scope: !8995)
!9001 = distinct !DISubprogram(name: "SF_DAL_CheckDeviceReady", scope: !1212, file: !1212, line: 3124, type: !1701, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9002)
!9002 = !{!9003, !9004, !9005, !9006, !9007, !9008, !9009, !9010}
!9003 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9001, file: !1212, line: 3124, type: !88)
!9004 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9001, file: !1212, line: 3124, type: !61)
!9005 = !DILocalVariable(name: "result", scope: !9001, file: !1212, line: 3126, type: !1091)
!9006 = !DILocalVariable(name: "savedMask", scope: !9001, file: !1212, line: 3127, type: !61)
!9007 = !DILocalVariable(name: "D", scope: !9001, file: !1212, line: 3128, type: !1382)
!9008 = !DILocalVariable(name: "status_busy", scope: !9001, file: !1212, line: 3129, type: !1434)
!9009 = !DILocalVariable(name: "status_suspend", scope: !9001, file: !1212, line: 3129, type: !1434)
!9010 = !DILocalVariable(name: "check_status", scope: !9011, file: !1212, line: 3141, type: !1434)
!9011 = distinct !DILexicalBlock(scope: !9012, file: !1212, line: 3140, column: 56)
!9012 = distinct !DILexicalBlock(scope: !9001, file: !1212, line: 3140, column: 9)
!9013 = !DILocation(line: 0, scope: !9001)
!9014 = !DILocation(line: 3128, column: 47, scope: !9001)
!9015 = !DILocation(line: 3131, column: 5, scope: !9016)
!9016 = distinct !DILexicalBlock(scope: !9017, file: !1212, line: 3131, column: 5)
!9017 = distinct !DILexicalBlock(scope: !9001, file: !1212, line: 3131, column: 5)
!9018 = !DILocation(line: 3131, column: 5, scope: !9017)
!9019 = !DILocation(line: 3131, column: 5, scope: !9020)
!9020 = distinct !DILexicalBlock(scope: !9016, file: !1212, line: 3131, column: 5)
!9021 = !DILocation(line: 3134, column: 50, scope: !9001)
!9022 = !DILocation(line: 3134, column: 55, scope: !9001)
!9023 = !DILocation(line: 3134, column: 22, scope: !9001)
!9024 = !DILocation(line: 3135, column: 50, scope: !9001)
!9025 = !DILocation(line: 3135, column: 55, scope: !9001)
!9026 = !DILocation(line: 3135, column: 22, scope: !9001)
!9027 = !DILocation(line: 3138, column: 17, scope: !9001)
!9028 = !DILocation(line: 3140, column: 32, scope: !9012)
!9029 = !DILocation(line: 3140, column: 29, scope: !9012)
!9030 = !DILocation(line: 3140, column: 27, scope: !9012)
!9031 = !DILocation(line: 3140, column: 11, scope: !9012)
!9032 = !DILocation(line: 3140, column: 9, scope: !9001)
!9033 = !DILocation(line: 3141, column: 34, scope: !9011)
!9034 = !DILocation(line: 3141, column: 60, scope: !9011)
!9035 = !DILocation(line: 3141, column: 58, scope: !9011)
!9036 = !DILocation(line: 0, scope: !9011)
!9037 = !DILocation(line: 3144, column: 37, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !9011, file: !1212, line: 3144, column: 13)
!9039 = !DILocation(line: 3144, column: 35, scope: !9038)
!9040 = !DILocation(line: 3144, column: 16, scope: !9038)
!9041 = !DILocation(line: 3144, column: 52, scope: !9038)
!9042 = !DILocation(line: 3145, column: 21, scope: !9038)
!9043 = !DILocation(line: 3145, column: 38, scope: !9038)
!9044 = !DILocation(line: 3147, column: 13, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9046, file: !1212, line: 3147, column: 13)
!9046 = distinct !DILexicalBlock(scope: !9047, file: !1212, line: 3147, column: 13)
!9047 = distinct !DILexicalBlock(scope: !9038, file: !1212, line: 3145, column: 61)
!9048 = !DILocation(line: 3147, column: 13, scope: !9046)
!9049 = !DILocation(line: 3147, column: 13, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9045, file: !1212, line: 3147, column: 13)
!9051 = !DILocation(line: 3150, column: 13, scope: !9047)
!9052 = !DILocation(line: 3151, column: 33, scope: !9047)
!9053 = !DILocation(line: 3153, column: 9, scope: !9047)
!9054 = !DILocation(line: 3155, column: 20, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !1212, line: 3155, column: 17)
!9056 = distinct !DILexicalBlock(scope: !9038, file: !1212, line: 3153, column: 16)
!9057 = !DILocation(line: 3155, column: 31, scope: !9055)
!9058 = !DILocation(line: 3155, column: 17, scope: !9056)
!9059 = !DILocation(line: 3156, column: 36, scope: !9060)
!9060 = distinct !DILexicalBlock(scope: !9055, file: !1212, line: 3155, column: 54)
!9061 = !DILocation(line: 3156, column: 17, scope: !9060)
!9062 = !DILocation(line: 3157, column: 36, scope: !9060)
!9063 = !DILocation(line: 3157, column: 17, scope: !9060)
!9064 = !DILocation(line: 3158, column: 13, scope: !9060)
!9065 = !DILocation(line: 3191, column: 5, scope: !9001)
!9066 = !DILocation(line: 3193, column: 9, scope: !9001)
!9067 = !DILocation(line: 3160, column: 13, scope: !9056)
!9068 = !DILocation(line: 3173, column: 13, scope: !9056)
!9069 = !DILocation(line: 3194, column: 18, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9071, file: !1212, line: 3193, column: 32)
!9071 = distinct !DILexicalBlock(scope: !9001, file: !1212, line: 3193, column: 9)
!9072 = !DILocation(line: 3195, column: 5, scope: !9070)
!9073 = !DILocation(line: 3197, column: 5, scope: !9001)
!9074 = distinct !DISubprogram(name: "SF_DAL_SuspendErase", scope: !1212, file: !1212, line: 3225, type: !1692, scopeLine: 3226, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9075)
!9075 = !{!9076, !9077, !9078, !9079, !9080}
!9076 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9074, file: !1212, line: 3225, type: !88)
!9077 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9074, file: !1212, line: 3225, type: !61)
!9078 = !DILocalVariable(name: "D", scope: !9074, file: !1212, line: 3227, type: !1382)
!9079 = !DILocalVariable(name: "status", scope: !9074, file: !1212, line: 3228, type: !1434)
!9080 = !DILocalVariable(name: "savedMask", scope: !9074, file: !1212, line: 3229, type: !61)
!9081 = !DILocation(line: 0, scope: !9074)
!9082 = !DILocation(line: 3227, column: 30, scope: !9074)
!9083 = !DILocation(line: 3231, column: 17, scope: !9074)
!9084 = !DILocation(line: 3234, column: 5, scope: !9074)
!9085 = !DILocation(line: 3238, column: 5, scope: !9074)
!9086 = !DILocation(line: 3239, column: 46, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9074, file: !1212, line: 3238, column: 15)
!9088 = !DILocation(line: 3239, column: 51, scope: !9087)
!9089 = !DILocation(line: 3239, column: 18, scope: !9087)
!9090 = !DILocation(line: 3241, column: 31, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9087, file: !1212, line: 3241, column: 13)
!9092 = !DILocation(line: 3241, column: 28, scope: !9091)
!9093 = !DILocation(line: 3241, column: 26, scope: !9091)
!9094 = !DILocation(line: 3241, column: 15, scope: !9091)
!9095 = !DILocation(line: 3241, column: 13, scope: !9087)
!9096 = distinct !{!9096, !9085, !9097}
!9097 = !DILocation(line: 3244, column: 5, scope: !9074)
!9098 = !DILocation(line: 3246, column: 5, scope: !9074)
!9099 = !DILocation(line: 3248, column: 5, scope: !9074)
!9100 = !DILocation(line: 3250, column: 5, scope: !9074)
!9101 = distinct !DISubprogram(name: "SF_DAL_ResumeErase", scope: !1212, file: !1212, line: 3277, type: !1692, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9102)
!9102 = !{!9103, !9104, !9105}
!9103 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9101, file: !1212, line: 3277, type: !88)
!9104 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !9101, file: !1212, line: 3277, type: !61)
!9105 = !DILocalVariable(name: "D", scope: !9101, file: !1212, line: 3279, type: !1382)
!9106 = !DILocation(line: 0, scope: !9101)
!9107 = !DILocation(line: 3279, column: 29, scope: !9101)
!9108 = !DILocation(line: 3281, column: 5, scope: !9101)
!9109 = !DILocation(line: 3282, column: 5, scope: !9101)
!9110 = !DILocation(line: 3283, column: 5, scope: !9101)
!9111 = !DILocation(line: 3285, column: 5, scope: !9101)
!9112 = distinct !DISubprogram(name: "SF_DAL_LockEraseBlkAddr", scope: !1212, file: !1212, line: 3332, type: !1718, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9113)
!9113 = !{!9114, !9115, !9116}
!9114 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9112, file: !1212, line: 3332, type: !88)
!9115 = !DILocalVariable(name: "BlkAddr", arg: 2, scope: !9112, file: !1212, line: 3332, type: !88)
!9116 = !DILocalVariable(name: "ACTION", arg: 3, scope: !9112, file: !1212, line: 3332, type: !61)
!9117 = !DILocation(line: 0, scope: !9112)
!9118 = !DILocation(line: 3334, column: 5, scope: !9112)
!9119 = distinct !DISubprogram(name: "SF_DAL_IOCtrl", scope: !1212, file: !1212, line: 2350, type: !1726, scopeLine: 2351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9120)
!9120 = !{!9121, !9122, !9123, !9124}
!9121 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9119, file: !1212, line: 2350, type: !88)
!9122 = !DILocalVariable(name: "CtrlAction", arg: 2, scope: !9119, file: !1212, line: 2350, type: !61)
!9123 = !DILocalVariable(name: "CtrlData", arg: 3, scope: !9119, file: !1212, line: 2350, type: !88)
!9124 = !DILocalVariable(name: "D", scope: !9119, file: !1212, line: 2352, type: !1382)
!9125 = !DILocation(line: 0, scope: !9119)
!9126 = !DILocation(line: 2353, column: 9, scope: !9119)
!9127 = !DILocation(line: 2354, column: 12, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9129, file: !1212, line: 2353, column: 51)
!9129 = distinct !DILexicalBlock(scope: !9119, file: !1212, line: 2353, column: 9)
!9130 = !DILocation(line: 2354, column: 9, scope: !9128)
!9131 = !DILocation(line: 2355, column: 5, scope: !9128)
!9132 = !DILocation(line: 2356, column: 17, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9134, file: !1212, line: 2356, column: 13)
!9134 = distinct !DILexicalBlock(scope: !9135, file: !1212, line: 2355, column: 71)
!9135 = distinct !DILexicalBlock(scope: !9129, file: !1212, line: 2355, column: 16)
!9136 = !DILocation(line: 2356, column: 14, scope: !9133)
!9137 = !DILocation(line: 2356, column: 28, scope: !9133)
!9138 = !DILocation(line: 2356, column: 49, scope: !9133)
!9139 = !DILocation(line: 2356, column: 56, scope: !9133)
!9140 = !DILocation(line: 2356, column: 70, scope: !9133)
!9141 = !DILocation(line: 2356, column: 80, scope: !9133)
!9142 = !DILocation(line: 2356, column: 13, scope: !9134)
!9143 = !DILocation(line: 2361, column: 9, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9145, file: !1212, line: 2361, column: 9)
!9145 = distinct !DILexicalBlock(scope: !9146, file: !1212, line: 2361, column: 9)
!9146 = distinct !DILexicalBlock(scope: !9147, file: !1212, line: 2361, column: 9)
!9147 = distinct !DILexicalBlock(scope: !9135, file: !1212, line: 2359, column: 12)
!9148 = !DILocation(line: 2363, column: 5, scope: !9119)
!9149 = !DILocation(line: 2364, column: 1, scope: !9119)
!9150 = distinct !DISubprogram(name: "SF_DAL_FailCheck", scope: !1212, file: !1212, line: 3355, type: !1484, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9151)
!9151 = !{!9152, !9153, !9154}
!9152 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9150, file: !1212, line: 3355, type: !88)
!9153 = !DILocalVariable(name: "D", scope: !9150, file: !1212, line: 3357, type: !1382)
!9154 = !DILocalVariable(name: "status", scope: !9150, file: !1212, line: 3358, type: !968)
!9155 = !DILocation(line: 0, scope: !9150)
!9156 = !DILocation(line: 3366, column: 12, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9150, file: !1212, line: 3366, column: 9)
!9158 = !DILocation(line: 3366, column: 17, scope: !9157)
!9159 = !DILocation(line: 3366, column: 9, scope: !9157)
!9160 = !DILocation(line: 3366, column: 9, scope: !9150)
!9161 = !DILocation(line: 3357, column: 25, scope: !9150)
!9162 = !DILocation(line: 3367, column: 18, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9157, file: !1212, line: 3366, column: 33)
!9164 = !DILocation(line: 3368, column: 25, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9163, file: !1212, line: 3368, column: 13)
!9166 = !DILocation(line: 3368, column: 22, scope: !9165)
!9167 = !DILocation(line: 3368, column: 20, scope: !9165)
!9168 = !DILocation(line: 3368, column: 13, scope: !9163)
!9169 = !DILocation(line: 3373, column: 5, scope: !9150)
!9170 = !DILocation(line: 3374, column: 1, scope: !9150)
!9171 = distinct !DISubprogram(name: "SF_DAL_CheckReadyAndResume", scope: !1212, file: !1212, line: 3044, type: !9172, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9174)
!9172 = !DISubroutineType(types: !9173)
!9173 = !{!1091, !88, !61, !460}
!9174 = !{!9175, !9176, !9177, !9178, !9179, !9180, !9181, !9182}
!9175 = !DILocalVariable(name: "MTDData", arg: 1, scope: !9171, file: !1212, line: 3044, type: !88)
!9176 = !DILocalVariable(name: "addr", arg: 2, scope: !9171, file: !1212, line: 3044, type: !61)
!9177 = !DILocalVariable(name: "data", arg: 3, scope: !9171, file: !1212, line: 3044, type: !460)
!9178 = !DILocalVariable(name: "savedMask", scope: !9171, file: !1212, line: 3046, type: !61)
!9179 = !DILocalVariable(name: "D", scope: !9171, file: !1212, line: 3047, type: !1382)
!9180 = !DILocalVariable(name: "result", scope: !9171, file: !1212, line: 3048, type: !1091)
!9181 = !DILocalVariable(name: "check_data", scope: !9171, file: !1212, line: 3049, type: !460)
!9182 = !DILocalVariable(name: "status_busy", scope: !9171, file: !1212, line: 3050, type: !968)
!9183 = !DILocation(line: 0, scope: !9171)
!9184 = !DILocation(line: 3047, column: 43, scope: !9171)
!9185 = !DILocation(line: 3053, column: 47, scope: !9171)
!9186 = !DILocation(line: 3053, column: 52, scope: !9171)
!9187 = !DILocation(line: 3053, column: 19, scope: !9171)
!9188 = !DILocation(line: 3056, column: 9, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9171, file: !1212, line: 3056, column: 9)
!9190 = !DILocation(line: 3056, column: 9, scope: !9171)
!9191 = !DILocation(line: 3058, column: 9, scope: !9192)
!9192 = distinct !DILexicalBlock(scope: !9193, file: !1212, line: 3058, column: 9)
!9193 = distinct !DILexicalBlock(scope: !9194, file: !1212, line: 3058, column: 9)
!9194 = distinct !DILexicalBlock(scope: !9189, file: !1212, line: 3056, column: 28)
!9195 = !DILocation(line: 3058, column: 9, scope: !9193)
!9196 = !DILocation(line: 3058, column: 9, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9192, file: !1212, line: 3058, column: 9)
!9198 = !DILocation(line: 3060, column: 9, scope: !9194)
!9199 = !DILocation(line: 3062, column: 29, scope: !9194)
!9200 = !DILocation(line: 3063, column: 5, scope: !9194)
!9201 = !DILocation(line: 3065, column: 38, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9189, file: !1212, line: 3065, column: 15)
!9203 = !DILocation(line: 3065, column: 35, scope: !9202)
!9204 = !DILocation(line: 3065, column: 33, scope: !9202)
!9205 = !DILocation(line: 3065, column: 17, scope: !9202)
!9206 = !DILocation(line: 3065, column: 15, scope: !9189)
!9207 = !DILocation(line: 3066, column: 21, scope: !9208)
!9208 = distinct !DILexicalBlock(scope: !9202, file: !1212, line: 3065, column: 62)
!9209 = !DILocation(line: 3068, column: 9, scope: !9208)
!9210 = !DILocation(line: 3071, column: 23, scope: !9208)
!9211 = !DILocation(line: 3071, column: 22, scope: !9208)
!9212 = !DILocation(line: 3073, column: 24, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9208, file: !1212, line: 3073, column: 13)
!9214 = !DILocation(line: 3073, column: 13, scope: !9208)
!9215 = !DILocation(line: 3078, column: 16, scope: !9216)
!9216 = distinct !DILexicalBlock(scope: !9217, file: !1212, line: 3078, column: 16)
!9217 = distinct !DILexicalBlock(scope: !9213, file: !1212, line: 3075, column: 16)
!9218 = !DILocation(line: 3078, column: 16, scope: !9217)
!9219 = !DILocation(line: 3081, column: 58, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9216, file: !1212, line: 3078, column: 46)
!9221 = !DILocation(line: 3081, column: 17, scope: !9220)
!9222 = !DILocation(line: 3082, column: 22, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9220, file: !1212, line: 3082, column: 21)
!9224 = !DILocation(line: 3082, column: 49, scope: !9223)
!9225 = !DILocation(line: 3082, column: 21, scope: !9220)
!9226 = !DILocation(line: 3088, column: 9, scope: !9208)
!9227 = !DILocation(line: 3091, column: 9, scope: !9171)
!9228 = !DILocation(line: 3092, column: 13, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9230, file: !1212, line: 3092, column: 13)
!9230 = distinct !DILexicalBlock(scope: !9171, file: !1212, line: 3091, column: 9)
!9231 = !DILocation(line: 3092, column: 33, scope: !9229)
!9232 = !DILocation(line: 3092, column: 13, scope: !9230)
!9233 = !DILocation(line: 3106, column: 5, scope: !9171)
!9234 = !DILocation(line: 3107, column: 1, scope: !9171)
!9235 = distinct !DISubprogram(name: "SF_DAL_Dev_EraseBlock", scope: !1212, file: !1212, line: 3497, type: !9236, scopeLine: 3498, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9238)
!9236 = !DISubroutineType(types: !9237)
!9237 = !{null, !1382, !61}
!9238 = !{!9239, !9240, !9241}
!9239 = !DILocalVariable(name: "D", arg: 1, scope: !9235, file: !1212, line: 3497, type: !1382)
!9240 = !DILocalVariable(name: "addr", arg: 2, scope: !9235, file: !1212, line: 3497, type: !61)
!9241 = !DILocalVariable(name: "savedMask", scope: !9235, file: !1212, line: 3499, type: !61)
!9242 = !DILocation(line: 0, scope: !9235)
!9243 = !DILocation(line: 3501, column: 14, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9235, file: !1212, line: 3501, column: 9)
!9245 = !DILocation(line: 3501, column: 25, scope: !9244)
!9246 = !DILocation(line: 3501, column: 9, scope: !9235)
!9247 = !DILocation(line: 3502, column: 9, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9244, file: !1212, line: 3501, column: 51)
!9249 = !DILocation(line: 3503, column: 5, scope: !9248)
!9250 = !DILocation(line: 3507, column: 17, scope: !9235)
!9251 = !DILocation(line: 3516, column: 5, scope: !9235)
!9252 = !DILocation(line: 3517, column: 31, scope: !9235)
!9253 = !DILocation(line: 3517, column: 38, scope: !9235)
!9254 = !DILocation(line: 3517, column: 43, scope: !9235)
!9255 = !DILocation(line: 3517, column: 59, scope: !9235)
!9256 = !DILocation(line: 3517, column: 56, scope: !9235)
!9257 = !DILocation(line: 3517, column: 5, scope: !9235)
!9258 = !DILocation(line: 3523, column: 5, scope: !9235)
!9259 = !DILocation(line: 3524, column: 1, scope: !9235)
!9260 = distinct !DISubprogram(name: "SF_DAL_Init_Vendor", scope: !1212, file: !1212, line: 2018, type: !8361, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9261)
!9261 = !{!9262, !9263, !9264}
!9262 = !DILocalVariable(name: "driver", arg: 1, scope: !9260, file: !1212, line: 2018, type: !8363)
!9263 = !DILocalVariable(name: "D", arg: 2, scope: !9260, file: !1212, line: 2018, type: !1382)
!9264 = !DILocalVariable(name: "result", scope: !9260, file: !1212, line: 2020, type: !1091)
!9265 = !DILocation(line: 0, scope: !9260)
!9266 = !DILocation(line: 2022, column: 13, scope: !9260)
!9267 = !DILocation(line: 2022, column: 5, scope: !9260)
!9268 = !DILocation(line: 2031, column: 16, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9260, file: !1212, line: 2022, column: 31)
!9270 = !DILocation(line: 2031, column: 27, scope: !9269)
!9271 = !DILocation(line: 2033, column: 22, scope: !9269)
!9272 = !DILocation(line: 2034, column: 13, scope: !9269)
!9273 = !DILocation(line: 2049, column: 16, scope: !9269)
!9274 = !DILocation(line: 2049, column: 27, scope: !9269)
!9275 = !DILocation(line: 2051, column: 23, scope: !9269)
!9276 = !DILocation(line: 2053, column: 13, scope: !9269)
!9277 = !DILocation(line: 2058, column: 22, scope: !9269)
!9278 = !DILocation(line: 2059, column: 13, scope: !9269)
!9279 = !DILocation(line: 2079, column: 13, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9281, file: !1212, line: 2079, column: 13)
!9281 = distinct !DILexicalBlock(scope: !9282, file: !1212, line: 2079, column: 13)
!9282 = distinct !DILexicalBlock(scope: !9269, file: !1212, line: 2079, column: 13)
!9283 = !DILocation(line: 2083, column: 5, scope: !9260)
!9284 = distinct !DISubprogram(name: "SF_DAL_Init_Driver", scope: !1212, file: !1212, line: 2100, type: !9285, scopeLine: 2101, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9287)
!9285 = !DISubroutineType(types: !9286)
!9286 = !{!1091, !8363, !1382, !61, !61}
!9287 = !{!9288, !9289, !9290, !9291, !9292}
!9288 = !DILocalVariable(name: "driver", arg: 1, scope: !9284, file: !1212, line: 2100, type: !8363)
!9289 = !DILocalVariable(name: "D", arg: 2, scope: !9284, file: !1212, line: 2100, type: !1382)
!9290 = !DILocalVariable(name: "baseaddr", arg: 3, scope: !9284, file: !1212, line: 2100, type: !61)
!9291 = !DILocalVariable(name: "parameter", arg: 4, scope: !9284, file: !1212, line: 2100, type: !61)
!9292 = !DILocalVariable(name: "result", scope: !9284, file: !1212, line: 2102, type: !1091)
!9293 = !DILocation(line: 0, scope: !9284)
!9294 = !DILocation(line: 2105, column: 16, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9284, file: !1212, line: 2105, column: 9)
!9296 = !DILocation(line: 2105, column: 24, scope: !9295)
!9297 = !DILocation(line: 2109, column: 12, scope: !9298)
!9298 = distinct !DILexicalBlock(scope: !9284, file: !1212, line: 2109, column: 9)
!9299 = !DILocation(line: 2109, column: 16, scope: !9298)
!9300 = !DILocation(line: 2109, column: 24, scope: !9298)
!9301 = !DILocation(line: 2109, column: 30, scope: !9298)
!9302 = !DILocation(line: 2109, column: 40, scope: !9298)
!9303 = !DILocation(line: 2109, column: 9, scope: !9284)
!9304 = !DILocation(line: 2118, column: 19, scope: !9284)
!9305 = !DILocation(line: 2118, column: 8, scope: !9284)
!9306 = !DILocation(line: 2118, column: 17, scope: !9284)
!9307 = !DILocation(line: 2119, column: 23, scope: !9284)
!9308 = !DILocation(line: 2119, column: 8, scope: !9284)
!9309 = !DILocation(line: 2119, column: 21, scope: !9284)
!9310 = !DILocation(line: 2122, column: 5, scope: !9284)
!9311 = !DILocation(line: 2125, column: 8, scope: !9284)
!9312 = !DILocation(line: 2125, column: 13, scope: !9284)
!9313 = !DILocation(line: 2125, column: 24, scope: !9284)
!9314 = !DILocation(line: 2126, column: 26, scope: !9284)
!9315 = !DILocation(line: 2126, column: 5, scope: !9284)
!9316 = !DILocation(line: 2128, column: 9, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9284, file: !1212, line: 2128, column: 9)
!9318 = !DILocation(line: 2128, column: 31, scope: !9317)
!9319 = !DILocation(line: 2128, column: 60, scope: !9317)
!9320 = !DILocation(line: 2128, column: 9, scope: !9284)
!9321 = !DILocation(line: 2129, column: 12, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9317, file: !1212, line: 2128, column: 110)
!9323 = !DILocation(line: 2129, column: 17, scope: !9322)
!9324 = !DILocation(line: 2129, column: 28, scope: !9322)
!9325 = !DILocation(line: 2130, column: 9, scope: !9322)
!9326 = !DILocation(line: 2131, column: 5, scope: !9322)
!9327 = !DILocation(line: 2134, column: 14, scope: !9284)
!9328 = !DILocation(line: 2136, column: 5, scope: !9284)
!9329 = !DILocation(line: 2137, column: 1, scope: !9284)
!9330 = distinct !DISubprogram(name: "SF_DAL_Dev_ReadID", scope: !1212, file: !1212, line: 3387, type: !9331, scopeLine: 3388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9333)
!9331 = !DISubroutineType(types: !9332)
!9332 = !{null, !1382, !762}
!9333 = !{!9334, !9335, !9336}
!9334 = !DILocalVariable(name: "D", arg: 1, scope: !9330, file: !1212, line: 3387, type: !1382)
!9335 = !DILocalVariable(name: "id", arg: 2, scope: !9330, file: !1212, line: 3387, type: !762)
!9336 = !DILocalVariable(name: "cmd", scope: !9330, file: !1212, line: 3389, type: !460)
!9337 = !DILocation(line: 0, scope: !9330)
!9338 = !DILocation(line: 3389, column: 5, scope: !9330)
!9339 = !DILocation(line: 3405, column: 9, scope: !9340)
!9340 = distinct !DILexicalBlock(scope: !9330, file: !1212, line: 3405, column: 9)
!9341 = !DILocation(line: 3405, column: 21, scope: !9340)
!9342 = !DILocation(line: 0, scope: !9340)
!9343 = !DILocation(line: 3405, column: 9, scope: !9330)
!9344 = !DILocation(line: 3411, column: 31, scope: !9330)
!9345 = !DILocation(line: 3411, column: 5, scope: !9330)
!9346 = !DILocation(line: 3412, column: 1, scope: !9330)
!9347 = distinct !DISubprogram(name: "SF_DAL_Dev_Command_Ext", scope: !1212, file: !1212, line: 3585, type: !9348, scopeLine: 3586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1211, retainedNodes: !9350)
!9348 = !DISubroutineType(types: !9349)
!9349 = !{null, !967, !762, !762, !967, !967}
!9350 = !{!9351, !9352, !9353, !9354, !9355, !9356}
!9351 = !DILocalVariable(name: "CS", arg: 1, scope: !9347, file: !1212, line: 3585, type: !967)
!9352 = !DILocalVariable(name: "cmd", arg: 2, scope: !9347, file: !1212, line: 3585, type: !762)
!9353 = !DILocalVariable(name: "data", arg: 3, scope: !9347, file: !1212, line: 3585, type: !762)
!9354 = !DILocalVariable(name: "outl", arg: 4, scope: !9347, file: !1212, line: 3585, type: !967)
!9355 = !DILocalVariable(name: "inl", arg: 5, scope: !9347, file: !1212, line: 3585, type: !967)
!9356 = !DILocalVariable(name: "savedMask", scope: !9347, file: !1212, line: 3587, type: !61)
!9357 = !DILocation(line: 0, scope: !9347)
!9358 = !DILocation(line: 3589, column: 17, scope: !9347)
!9359 = !DILocation(line: 3590, column: 5, scope: !9347)
!9360 = !DILocation(line: 3591, column: 5, scope: !9347)
!9361 = !DILocation(line: 3593, column: 1, scope: !9347)
!9362 = distinct !DISubprogram(name: "CMEM_CheckValidDeviceID", scope: !1537, file: !1537, line: 110, type: !7608, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !9363)
!9363 = !{!9364, !9365, !9366, !9367}
!9364 = !DILocalVariable(name: "id", arg: 1, scope: !9362, file: !1537, line: 110, type: !762)
!9365 = !DILocalVariable(name: "i", scope: !9362, file: !1537, line: 114, type: !1091)
!9366 = !DILocalVariable(name: "j", scope: !9362, file: !1537, line: 114, type: !1091)
!9367 = !DILocalVariable(name: "id_list", scope: !9362, file: !1537, line: 115, type: !9368)
!9368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9369, size: 32)
!9369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!9370 = !DILocation(line: 0, scope: !9362)
!9371 = !DILocation(line: 119, column: 5, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9362, file: !1537, line: 119, column: 5)
!9373 = !DILocation(line: 119, column: 46, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9372, file: !1537, line: 119, column: 5)
!9375 = !DILocation(line: 119, column: 19, scope: !9374)
!9376 = distinct !{!9376, !9371, !9377}
!9377 = !DILocation(line: 131, column: 5, scope: !9372)
!9378 = !DILocation(line: 121, column: 23, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9380, file: !1537, line: 121, column: 9)
!9380 = distinct !DILexicalBlock(scope: !9381, file: !1537, line: 121, column: 9)
!9381 = distinct !DILexicalBlock(scope: !9374, file: !1537, line: 119, column: 50)
!9382 = !DILocation(line: 121, column: 9, scope: !9380)
!9383 = !DILocation(line: 122, column: 17, scope: !9384)
!9384 = distinct !DILexicalBlock(scope: !9385, file: !1537, line: 122, column: 17)
!9385 = distinct !DILexicalBlock(scope: !9379, file: !1537, line: 121, column: 51)
!9386 = !DILocation(line: 122, column: 37, scope: !9384)
!9387 = !DILocation(line: 122, column: 34, scope: !9384)
!9388 = !DILocation(line: 122, column: 17, scope: !9385)
!9389 = !DILocation(line: 121, column: 47, scope: !9379)
!9390 = distinct !{!9390, !9382, !9391}
!9391 = !DILocation(line: 125, column: 9, scope: !9380)
!9392 = !DILocation(line: 0, scope: !9380)
!9393 = !DILocation(line: 127, column: 15, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9381, file: !1537, line: 127, column: 13)
!9395 = !DILocation(line: 127, column: 13, scope: !9381)
!9396 = !DILocation(line: 134, column: 1, scope: !9362)
!9397 = distinct !DISubprogram(name: "CMEM_Index", scope: !1537, file: !1537, line: 153, type: !7763, scopeLine: 155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !9398)
!9398 = !{!9399, !9400, !9401, !9408}
!9399 = !DILocalVariable(name: "i", scope: !9397, file: !1537, line: 156, type: !1091)
!9400 = !DILocalVariable(name: "j", scope: !9397, file: !1537, line: 156, type: !1091)
!9401 = !DILocalVariable(name: "id", scope: !9397, file: !1537, line: 157, type: !9402)
!9402 = !DIDerivedType(tag: DW_TAG_typedef, name: "CMEMFlashID", file: !1608, line: 89, baseType: !9403)
!9403 = distinct !DICompositeType(tag: DW_TAG_union_type, file: !1608, line: 86, size: 64, elements: !9404)
!9404 = !{!9405, !9406}
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "NAND", scope: !9403, file: !1608, line: 87, baseType: !1621, size: 64)
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "NOR", scope: !9403, file: !1608, line: 88, baseType: !9407, size: 64)
!9407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !968, size: 64, elements: !463)
!9408 = !DILocalVariable(name: "id_list", scope: !9397, file: !1537, line: 158, type: !9368)
!9409 = !DILocation(line: 157, column: 5, scope: !9397)
!9410 = !DILocation(line: 157, column: 17, scope: !9397)
!9411 = !DILocation(line: 0, scope: !9397)
!9412 = !DILocation(line: 161, column: 9, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !9397, file: !1537, line: 161, column: 9)
!9414 = !DILocation(line: 161, column: 20, scope: !9413)
!9415 = !DILocation(line: 161, column: 9, scope: !9397)
!9416 = !DILocation(line: 172, column: 58, scope: !9397)
!9417 = !DILocation(line: 172, column: 5, scope: !9397)
!9418 = !DILocation(line: 178, column: 5, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9397, file: !1537, line: 178, column: 5)
!9420 = !DILocation(line: 180, column: 23, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9422, file: !1537, line: 180, column: 9)
!9422 = distinct !DILexicalBlock(scope: !9423, file: !1537, line: 180, column: 9)
!9423 = distinct !DILexicalBlock(scope: !9424, file: !1537, line: 178, column: 53)
!9424 = distinct !DILexicalBlock(scope: !9419, file: !1537, line: 178, column: 5)
!9425 = !DILocation(line: 180, column: 9, scope: !9422)
!9426 = !DILocation(line: 181, column: 17, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9428, file: !1537, line: 181, column: 17)
!9428 = distinct !DILexicalBlock(scope: !9421, file: !1537, line: 180, column: 51)
!9429 = !DILocation(line: 181, column: 37, scope: !9427)
!9430 = !DILocation(line: 181, column: 34, scope: !9427)
!9431 = !DILocation(line: 181, column: 17, scope: !9428)
!9432 = !DILocation(line: 180, column: 47, scope: !9421)
!9433 = distinct !{!9433, !9425, !9434}
!9434 = !DILocation(line: 184, column: 9, scope: !9422)
!9435 = !DILocation(line: 0, scope: !9422)
!9436 = !DILocation(line: 186, column: 15, scope: !9437)
!9437 = distinct !DILexicalBlock(scope: !9423, file: !1537, line: 186, column: 13)
!9438 = !DILocation(line: 186, column: 13, scope: !9423)
!9439 = !DILocation(line: 188, column: 26, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9437, file: !1537, line: 186, column: 41)
!9441 = !DILocation(line: 188, column: 24, scope: !9440)
!9442 = !DILocation(line: 189, column: 13, scope: !9440)
!9443 = !DILocation(line: 178, column: 46, scope: !9424)
!9444 = !DILocation(line: 178, column: 19, scope: !9424)
!9445 = distinct !{!9445, !9418, !9446}
!9446 = !DILocation(line: 191, column: 5, scope: !9419)
!9447 = !DILocation(line: 222, column: 12, scope: !9397)
!9448 = !DILocation(line: 223, column: 1, scope: !9397)
!9449 = distinct !DISubprogram(name: "CMEM_GetIDEntry", scope: !1537, file: !1537, line: 240, type: !9450, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !9452)
!9450 = !DISubroutineType(types: !9451)
!9451 = !{!9368, !61}
!9452 = !{!9453}
!9453 = !DILocalVariable(name: "index", arg: 1, scope: !9449, file: !1537, line: 240, type: !61)
!9454 = !DILocation(line: 0, scope: !9449)
!9455 = !DILocation(line: 242, column: 13, scope: !9449)
!9456 = !DILocation(line: 242, column: 5, scope: !9449)
!9457 = distinct !DISubprogram(name: "CMEM_EMIINIT_ReadID", scope: !1537, file: !1537, line: 254, type: !9458, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !9460)
!9458 = !DISubroutineType(types: !9459)
!9459 = !{null, !967, !88, !1184}
!9460 = !{!9461, !9462, !9463, !9464, !9466, !9467}
!9461 = !DILocalVariable(name: "CS", arg: 1, scope: !9457, file: !1537, line: 254, type: !967)
!9462 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9457, file: !1537, line: 254, type: !88)
!9463 = !DILocalVariable(name: "flashid", arg: 3, scope: !9457, file: !1537, line: 254, type: !1184)
!9464 = !DILocalVariable(name: "cmd", scope: !9465, file: !1537, line: 258, type: !460)
!9465 = distinct !DILexicalBlock(scope: !9457, file: !1537, line: 257, column: 5)
!9466 = !DILocalVariable(name: "id", scope: !9465, file: !1537, line: 258, type: !1472)
!9467 = !DILocalVariable(name: "i", scope: !9465, file: !1537, line: 258, type: !460)
!9468 = !DILocation(line: 0, scope: !9457)
!9469 = !DILocation(line: 258, column: 9, scope: !9465)
!9470 = !DILocation(line: 258, column: 22, scope: !9465)
!9471 = !DILocation(line: 0, scope: !9465)
!9472 = !DILocation(line: 260, column: 13, scope: !9465)
!9473 = !DILocation(line: 261, column: 9, scope: !9465)
!9474 = !DILocation(line: 263, column: 13, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9465, file: !1537, line: 263, column: 13)
!9476 = !DILocation(line: 263, column: 27, scope: !9475)
!9477 = !DILocation(line: 263, column: 48, scope: !9475)
!9478 = !DILocation(line: 263, column: 13, scope: !9465)
!9479 = !DILocation(line: 264, column: 17, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9475, file: !1537, line: 263, column: 95)
!9481 = !DILocation(line: 265, column: 13, scope: !9480)
!9482 = !DILocation(line: 266, column: 9, scope: !9480)
!9483 = !DILocation(line: 268, column: 9, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9465, file: !1537, line: 268, column: 9)
!9485 = !DILocation(line: 269, column: 26, scope: !9486)
!9486 = distinct !DILexicalBlock(scope: !9487, file: !1537, line: 268, column: 50)
!9487 = distinct !DILexicalBlock(scope: !9484, file: !1537, line: 268, column: 9)
!9488 = !DILocation(line: 269, column: 13, scope: !9486)
!9489 = !DILocation(line: 269, column: 24, scope: !9486)
!9490 = !DILocation(line: 268, column: 46, scope: !9487)
!9491 = !DILocation(line: 268, column: 23, scope: !9487)
!9492 = distinct !{!9492, !9483, !9493}
!9493 = !DILocation(line: 270, column: 9, scope: !9484)
!9494 = !DILocation(line: 271, column: 5, scope: !9457)
!9495 = !DILocation(line: 272, column: 5, scope: !9457)
!9496 = distinct !DISubprogram(name: "CMEM_EMIINIT_CheckValidDeviceID", scope: !1537, file: !1537, line: 285, type: !7608, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !9497)
!9497 = !{!9498, !9499, !9500, !9501}
!9498 = !DILocalVariable(name: "id", arg: 1, scope: !9496, file: !1537, line: 285, type: !762)
!9499 = !DILocalVariable(name: "i", scope: !9496, file: !1537, line: 289, type: !1091)
!9500 = !DILocalVariable(name: "j", scope: !9496, file: !1537, line: 289, type: !1091)
!9501 = !DILocalVariable(name: "id_list", scope: !9496, file: !1537, line: 290, type: !9368)
!9502 = !DILocation(line: 0, scope: !9496)
!9503 = !DILocation(line: 294, column: 5, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9496, file: !1537, line: 294, column: 5)
!9505 = !DILocation(line: 294, column: 46, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9504, file: !1537, line: 294, column: 5)
!9507 = !DILocation(line: 294, column: 19, scope: !9506)
!9508 = distinct !{!9508, !9503, !9509}
!9509 = !DILocation(line: 306, column: 5, scope: !9504)
!9510 = !DILocation(line: 296, column: 23, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9512, file: !1537, line: 296, column: 9)
!9512 = distinct !DILexicalBlock(scope: !9513, file: !1537, line: 296, column: 9)
!9513 = distinct !DILexicalBlock(scope: !9506, file: !1537, line: 294, column: 53)
!9514 = !DILocation(line: 296, column: 9, scope: !9512)
!9515 = !DILocation(line: 297, column: 17, scope: !9516)
!9516 = distinct !DILexicalBlock(scope: !9517, file: !1537, line: 297, column: 17)
!9517 = distinct !DILexicalBlock(scope: !9511, file: !1537, line: 296, column: 51)
!9518 = !DILocation(line: 297, column: 37, scope: !9516)
!9519 = !DILocation(line: 297, column: 34, scope: !9516)
!9520 = !DILocation(line: 297, column: 17, scope: !9517)
!9521 = !DILocation(line: 296, column: 47, scope: !9511)
!9522 = distinct !{!9522, !9514, !9523}
!9523 = !DILocation(line: 300, column: 9, scope: !9512)
!9524 = !DILocation(line: 0, scope: !9512)
!9525 = !DILocation(line: 302, column: 15, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9513, file: !1537, line: 302, column: 13)
!9527 = !DILocation(line: 302, column: 13, scope: !9513)
!9528 = !DILocation(line: 310, column: 1, scope: !9496)
!9529 = distinct !DISubprogram(name: "CMEM_EMIINIT_Index", scope: !1537, file: !1537, line: 328, type: !7763, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1536, retainedNodes: !9530)
!9530 = !{!9531, !9532, !9533, !9534}
!9531 = !DILocalVariable(name: "i", scope: !9529, file: !1537, line: 331, type: !1091)
!9532 = !DILocalVariable(name: "j", scope: !9529, file: !1537, line: 331, type: !1091)
!9533 = !DILocalVariable(name: "id", scope: !9529, file: !1537, line: 332, type: !9402)
!9534 = !DILocalVariable(name: "id_list", scope: !9529, file: !1537, line: 333, type: !9368)
!9535 = !DILocation(line: 332, column: 5, scope: !9529)
!9536 = !DILocation(line: 332, column: 17, scope: !9529)
!9537 = !DILocation(line: 0, scope: !9529)
!9538 = !DILocation(line: 336, column: 9, scope: !9539)
!9539 = distinct !DILexicalBlock(scope: !9529, file: !1537, line: 336, column: 9)
!9540 = !DILocation(line: 336, column: 28, scope: !9539)
!9541 = !DILocation(line: 336, column: 9, scope: !9529)
!9542 = !DILocation(line: 344, column: 60, scope: !9529)
!9543 = !DILocation(line: 344, column: 5, scope: !9529)
!9544 = !DILocation(line: 350, column: 5, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9529, file: !1537, line: 350, column: 5)
!9546 = !DILocation(line: 352, column: 23, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9548, file: !1537, line: 352, column: 9)
!9548 = distinct !DILexicalBlock(scope: !9549, file: !1537, line: 352, column: 9)
!9549 = distinct !DILexicalBlock(scope: !9550, file: !1537, line: 350, column: 53)
!9550 = distinct !DILexicalBlock(scope: !9545, file: !1537, line: 350, column: 5)
!9551 = !DILocation(line: 352, column: 9, scope: !9548)
!9552 = !DILocation(line: 353, column: 17, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9554, file: !1537, line: 353, column: 17)
!9554 = distinct !DILexicalBlock(scope: !9547, file: !1537, line: 352, column: 51)
!9555 = !DILocation(line: 353, column: 37, scope: !9553)
!9556 = !DILocation(line: 353, column: 34, scope: !9553)
!9557 = !DILocation(line: 353, column: 17, scope: !9554)
!9558 = !DILocation(line: 352, column: 47, scope: !9547)
!9559 = distinct !{!9559, !9551, !9560}
!9560 = !DILocation(line: 356, column: 9, scope: !9548)
!9561 = !DILocation(line: 0, scope: !9548)
!9562 = !DILocation(line: 358, column: 15, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9549, file: !1537, line: 358, column: 13)
!9564 = !DILocation(line: 358, column: 13, scope: !9549)
!9565 = !DILocation(line: 360, column: 34, scope: !9566)
!9566 = distinct !DILexicalBlock(scope: !9563, file: !1537, line: 358, column: 41)
!9567 = !DILocation(line: 360, column: 32, scope: !9566)
!9568 = !DILocation(line: 361, column: 13, scope: !9566)
!9569 = !DILocation(line: 350, column: 46, scope: !9550)
!9570 = !DILocation(line: 350, column: 19, scope: !9550)
!9571 = distinct !{!9571, !9544, !9572}
!9572 = !DILocation(line: 363, column: 5, scope: !9545)
!9573 = !DILocation(line: 364, column: 12, scope: !9529)
!9574 = !DILocation(line: 365, column: 1, scope: !9529)
!9575 = distinct !DISubprogram(name: "NOR_ReadID", scope: !2740, file: !2740, line: 64, type: !9576, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2739, retainedNodes: !9582)
!9576 = !DISubroutineType(types: !9577)
!9577 = !{null, !967, !9578, !1184}
!9578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9579, size: 32)
!9579 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !9580)
!9580 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !9581, line: 158, baseType: !968)
!9581 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_cfi_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!9582 = !{!9583, !9584, !9585, !9586, !9587, !9589, !9590}
!9583 = !DILocalVariable(name: "CS", arg: 1, scope: !9575, file: !2740, line: 64, type: !967)
!9584 = !DILocalVariable(name: "BaseAddr", arg: 2, scope: !9575, file: !2740, line: 64, type: !9578)
!9585 = !DILocalVariable(name: "flashid", arg: 3, scope: !9575, file: !2740, line: 64, type: !1184)
!9586 = !DILocalVariable(name: "savedMask", scope: !9575, file: !2740, line: 66, type: !61)
!9587 = !DILocalVariable(name: "cmd", scope: !9588, file: !2740, line: 70, type: !460)
!9588 = distinct !DILexicalBlock(scope: !9575, file: !2740, line: 69, column: 5)
!9589 = !DILocalVariable(name: "id", scope: !9588, file: !2740, line: 70, type: !1472)
!9590 = !DILocalVariable(name: "i", scope: !9588, file: !2740, line: 70, type: !460)
!9591 = !DILocation(line: 0, scope: !9575)
!9592 = !DILocation(line: 70, column: 9, scope: !9588)
!9593 = !DILocation(line: 70, column: 22, scope: !9588)
!9594 = !DILocation(line: 0, scope: !9588)
!9595 = !DILocation(line: 72, column: 13, scope: !9588)
!9596 = !DILocation(line: 73, column: 21, scope: !9588)
!9597 = !DILocation(line: 74, column: 9, scope: !9588)
!9598 = !DILocation(line: 75, column: 9, scope: !9588)
!9599 = !DILocation(line: 77, column: 13, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9588, file: !2740, line: 77, column: 13)
!9601 = !DILocation(line: 77, column: 27, scope: !9600)
!9602 = !DILocation(line: 77, column: 48, scope: !9600)
!9603 = !DILocation(line: 77, column: 13, scope: !9588)
!9604 = !DILocation(line: 78, column: 17, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9600, file: !2740, line: 77, column: 87)
!9606 = !DILocation(line: 79, column: 25, scope: !9605)
!9607 = !DILocation(line: 80, column: 13, scope: !9605)
!9608 = !DILocation(line: 81, column: 13, scope: !9605)
!9609 = !DILocation(line: 82, column: 9, scope: !9605)
!9610 = !DILocation(line: 84, column: 9, scope: !9611)
!9611 = distinct !DILexicalBlock(scope: !9588, file: !2740, line: 84, column: 9)
!9612 = !DILocation(line: 85, column: 26, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9614, file: !2740, line: 84, column: 50)
!9614 = distinct !DILexicalBlock(scope: !9611, file: !2740, line: 84, column: 9)
!9615 = !DILocation(line: 85, column: 13, scope: !9613)
!9616 = !DILocation(line: 85, column: 24, scope: !9613)
!9617 = !DILocation(line: 84, column: 46, scope: !9614)
!9618 = !DILocation(line: 84, column: 23, scope: !9614)
!9619 = distinct !{!9619, !9610, !9620}
!9620 = !DILocation(line: 86, column: 9, scope: !9611)
!9621 = !DILocation(line: 87, column: 5, scope: !9575)
!9622 = !DILocation(line: 89, column: 1, scope: !9575)
!9623 = distinct !DISubprogram(name: "custom_get_NORFLASH_ROMSpace", scope: !1625, file: !1625, line: 248, type: !3940, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!9624 = !DILocation(line: 250, column: 5, scope: !9623)
!9625 = distinct !DISubprogram(name: "custom_get_NORFLASH_Size", scope: !1625, file: !1625, line: 270, type: !3940, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!9626 = !DILocation(line: 272, column: 5, scope: !9625)
!9627 = distinct !DISubprogram(name: "Initialize_FDD_tables", scope: !1625, file: !1625, line: 294, type: !291, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!9628 = !DILocation(line: 296, column: 5, scope: !9627)
!9629 = !DILocation(line: 297, column: 5, scope: !9627)
!9630 = distinct !DISubprogram(name: "nor_sweep_device", scope: !1625, file: !1625, line: 304, type: !291, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!9631 = !DILocation(line: 309, column: 5, scope: !9630)
!9632 = distinct !DISubprogram(name: "nor_manual_reclaim", scope: !1625, file: !1625, line: 312, type: !291, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!9633 = !DILocation(line: 317, column: 5, scope: !9632)
!9634 = distinct !DISubprogram(name: "custom_get_fat_addr", scope: !1625, file: !1625, line: 334, type: !3940, scopeLine: 335, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!9635 = !DILocation(line: 336, column: 5, scope: !9634)
!9636 = distinct !DISubprogram(name: "custom_get_fat_len", scope: !1625, file: !1625, line: 353, type: !3940, scopeLine: 354, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!9637 = !DILocation(line: 355, column: 5, scope: !9636)
!9638 = distinct !DISubprogram(name: "Custom_NOR_Init", scope: !1625, file: !1625, line: 374, type: !291, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!9639 = !DILocation(line: 376, column: 5, scope: !9638)
!9640 = !DILocation(line: 377, column: 1, scope: !9638)
!9641 = distinct !DISubprogram(name: "custom_get_NORFLASH_Base", scope: !1625, file: !1625, line: 395, type: !3940, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!9642 = !DILocation(line: 397, column: 5, scope: !9641)
!9643 = distinct !DISubprogram(name: "custom_get_FLASH_Size", scope: !1625, file: !1625, line: 416, type: !3940, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1624, retainedNodes: !293)
!9644 = !DILocation(line: 418, column: 5, scope: !9643)
!9645 = distinct !DISubprogram(name: "INT_RetrieveFlashBaseAddr", scope: !1636, file: !1636, line: 254, type: !3940, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!9646 = !DILocation(line: 256, column: 32, scope: !9645)
!9647 = !DILocation(line: 257, column: 5, scope: !9645)
!9648 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_Common", scope: !1636, file: !1636, line: 269, type: !7763, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!9649 = !DILocation(line: 275, column: 24, scope: !9648)
!9650 = !DILocation(line: 278, column: 24, scope: !9648)
!9651 = !DILocation(line: 278, column: 33, scope: !9648)
!9652 = !DILocation(line: 278, column: 49, scope: !9648)
!9653 = !DILocation(line: 278, column: 22, scope: !9648)
!9654 = !DILocation(line: 281, column: 5, scope: !9648)
!9655 = !DILocation(line: 283, column: 34, scope: !9648)
!9656 = !DILocation(line: 283, column: 23, scope: !9648)
!9657 = !DILocation(line: 286, column: 25, scope: !9648)
!9658 = !DILocation(line: 321, column: 5, scope: !9648)
!9659 = distinct !DISubprogram(name: "CMEM_Init_NOR_MTD_SF", scope: !1636, file: !1636, line: 332, type: !7763, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9660)
!9660 = !{!9661}
!9661 = !DILocalVariable(name: "result", scope: !9659, file: !1636, line: 334, type: !1091)
!9662 = !DILocation(line: 340, column: 30, scope: !9659)
!9663 = !DILocation(line: 343, column: 24, scope: !9659)
!9664 = !DILocation(line: 344, column: 18, scope: !9659)
!9665 = !DILocation(line: 348, column: 17, scope: !9659)
!9666 = !DILocation(line: 353, column: 19, scope: !9659)
!9667 = !DILocation(line: 354, column: 18, scope: !9659)
!9668 = !DILocation(line: 354, column: 27, scope: !9659)
!9669 = !DILocation(line: 354, column: 43, scope: !9659)
!9670 = !DILocation(line: 350, column: 14, scope: !9659)
!9671 = !DILocation(line: 0, scope: !9659)
!9672 = !DILocation(line: 356, column: 16, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9659, file: !1636, line: 356, column: 9)
!9674 = !DILocation(line: 395, column: 1, scope: !9659)
!9675 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_COUNT", scope: !1636, file: !1636, line: 406, type: !9676, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!9676 = !DISubroutineType(types: !2692)
!9677 = !DILocation(line: 408, column: 5, scope: !9675)
!9678 = distinct !DISubprogram(name: "EMINIT_CMEM_GET_NOR_FLASH_SIZE", scope: !1636, file: !1636, line: 420, type: !9679, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9681)
!9679 = !DISubroutineType(types: !9680)
!9680 = !{!61, !460}
!9681 = !{!9682, !9683, !9684}
!9682 = !DILocalVariable(name: "CS", arg: 1, scope: !9678, file: !1636, line: 420, type: !460)
!9683 = !DILocalVariable(name: "index", scope: !9678, file: !1636, line: 422, type: !61)
!9684 = !DILocalVariable(name: "list", scope: !9678, file: !1636, line: 423, type: !1953)
!9685 = !DILocation(line: 0, scope: !9678)
!9686 = !DILocation(line: 427, column: 13, scope: !9678)
!9687 = !DILocation(line: 430, column: 34, scope: !9678)
!9688 = !DILocation(line: 430, column: 5, scope: !9678)
!9689 = distinct !DISubprogram(name: "CMEM_BlockSize_Internal", scope: !1636, file: !1636, line: 442, type: !9690, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9692)
!9690 = !DISubroutineType(types: !9691)
!9691 = !{!61, !61, !1825}
!9692 = !{!9693, !9694, !9695}
!9693 = !DILocalVariable(name: "address", arg: 1, scope: !9689, file: !1636, line: 442, type: !61)
!9694 = !DILocalVariable(name: "blocklayout", arg: 2, scope: !9689, file: !1636, line: 442, type: !1825)
!9695 = !DILocalVariable(name: "i", scope: !9689, file: !1636, line: 444, type: !968)
!9696 = !DILocation(line: 0, scope: !9689)
!9697 = !DILocation(line: 446, column: 23, scope: !9689)
!9698 = !DILocation(line: 448, column: 36, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !1636, line: 448, column: 5)
!9700 = distinct !DILexicalBlock(scope: !9689, file: !1636, line: 448, column: 5)
!9701 = !DILocation(line: 448, column: 41, scope: !9699)
!9702 = !DILocation(line: 448, column: 5, scope: !9700)
!9703 = !DILocation(line: 449, column: 39, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9705, file: !1636, line: 449, column: 13)
!9705 = distinct !DILexicalBlock(scope: !9699, file: !1636, line: 448, column: 54)
!9706 = !DILocation(line: 449, column: 21, scope: !9704)
!9707 = !DILocation(line: 449, column: 46, scope: !9704)
!9708 = !DILocation(line: 450, column: 46, scope: !9704)
!9709 = !DILocation(line: 450, column: 25, scope: !9704)
!9710 = !DILocation(line: 449, column: 13, scope: !9705)
!9711 = !DILocation(line: 448, column: 48, scope: !9699)
!9712 = !DILocation(line: 448, column: 29, scope: !9699)
!9713 = !DILocation(line: 448, column: 31, scope: !9699)
!9714 = distinct !{!9714, !9702, !9715}
!9715 = !DILocation(line: 453, column: 5, scope: !9700)
!9716 = !DILocation(line: 454, column: 27, scope: !9689)
!9717 = !DILocation(line: 454, column: 5, scope: !9689)
!9718 = distinct !DISubprogram(name: "CMEM_BlockSize", scope: !1636, file: !1636, line: 462, type: !3688, scopeLine: 463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9719)
!9719 = !{!9720}
!9720 = !DILocalVariable(name: "address", arg: 1, scope: !9718, file: !1636, line: 462, type: !61)
!9721 = !DILocation(line: 0, scope: !9718)
!9722 = !DILocation(line: 464, column: 45, scope: !9718)
!9723 = !DILocation(line: 464, column: 12, scope: !9718)
!9724 = !DILocation(line: 464, column: 5, scope: !9718)
!9725 = distinct !DISubprogram(name: "EMIINIT_CMEM_BlockSize", scope: !1636, file: !1636, line: 487, type: !3688, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9726)
!9726 = !{!9727, !9728, !9729}
!9727 = !DILocalVariable(name: "address", arg: 1, scope: !9725, file: !1636, line: 487, type: !61)
!9728 = !DILocalVariable(name: "index", scope: !9725, file: !1636, line: 490, type: !61)
!9729 = !DILocalVariable(name: "list", scope: !9725, file: !1636, line: 491, type: !1953)
!9730 = !DILocation(line: 0, scope: !9725)
!9731 = !DILocation(line: 490, column: 22, scope: !9725)
!9732 = !DILocation(line: 495, column: 45, scope: !9725)
!9733 = !DILocation(line: 495, column: 12, scope: !9725)
!9734 = !DILocation(line: 495, column: 5, scope: !9725)
!9735 = distinct !DISubprogram(name: "NOR_Get_FlashSizeFromBankInfo", scope: !1636, file: !1636, line: 517, type: !9736, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9740)
!9736 = !DISubroutineType(types: !9737)
!9737 = !{!1091, !9738}
!9738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9739, size: 32)
!9739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1839)
!9740 = !{!9741, !9742, !9743}
!9741 = !DILocalVariable(name: "bankinfo", arg: 1, scope: !9735, file: !1636, line: 517, type: !9738)
!9742 = !DILocalVariable(name: "result", scope: !9735, file: !1636, line: 519, type: !61)
!9743 = !DILocalVariable(name: "i", scope: !9735, file: !1636, line: 519, type: !61)
!9744 = !DILocation(line: 0, scope: !9735)
!9745 = !DILocation(line: 522, column: 29, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9747, file: !1636, line: 522, column: 5)
!9747 = distinct !DILexicalBlock(scope: !9735, file: !1636, line: 522, column: 5)
!9748 = !DILocation(line: 522, column: 38, scope: !9746)
!9749 = !DILocation(line: 522, column: 5, scope: !9747)
!9750 = !DILocation(line: 523, column: 31, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9746, file: !1636, line: 522, column: 51)
!9752 = !DILocation(line: 523, column: 37, scope: !9751)
!9753 = !DILocation(line: 523, column: 16, scope: !9751)
!9754 = !DILocation(line: 522, column: 45, scope: !9746)
!9755 = distinct !{!9755, !9749, !9756}
!9756 = !DILocation(line: 524, column: 5, scope: !9747)
!9757 = !DILocation(line: 525, column: 5, scope: !9735)
!9758 = distinct !DISubprogram(name: "CMEM_NOR_Construct_RegionInfo_Internal", scope: !1636, file: !1636, line: 535, type: !9759, scopeLine: 540, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9761)
!9759 = !DISubroutineType(types: !9760)
!9760 = !{!61, !61, !61, !1651, !1825}
!9761 = !{!9762, !9763, !9764, !9765, !9766, !9767, !9768, !9769, !9770}
!9762 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9758, file: !1636, line: 536, type: !61)
!9763 = !DILocalVariable(name: "length", arg: 2, scope: !9758, file: !1636, line: 537, type: !61)
!9764 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9758, file: !1636, line: 538, type: !1651)
!9765 = !DILocalVariable(name: "blocklayout", arg: 4, scope: !9758, file: !1636, line: 539, type: !1825)
!9766 = !DILocalVariable(name: "addr", scope: !9758, file: !1636, line: 541, type: !61)
!9767 = !DILocalVariable(name: "ptr", scope: !9758, file: !1636, line: 541, type: !61)
!9768 = !DILocalVariable(name: "blksize", scope: !9758, file: !1636, line: 541, type: !61)
!9769 = !DILocalVariable(name: "total_blocks", scope: !9758, file: !1636, line: 541, type: !61)
!9770 = !DILocalVariable(name: "endaddr", scope: !9758, file: !1636, line: 542, type: !61)
!9771 = !DILocation(line: 0, scope: !9758)
!9772 = !DILocation(line: 542, column: 33, scope: !9758)
!9773 = !DILocation(line: 557, column: 59, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !9775, file: !1636, line: 557, column: 5)
!9775 = distinct !DILexicalBlock(scope: !9758, file: !1636, line: 557, column: 5)
!9776 = !DILocation(line: 557, column: 5, scope: !9775)
!9777 = !DILocation(line: 560, column: 19, scope: !9778)
!9778 = distinct !DILexicalBlock(scope: !9774, file: !1636, line: 559, column: 5)
!9779 = !DILocation(line: 562, column: 26, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9778, file: !1636, line: 562, column: 13)
!9781 = !DILocation(line: 0, scope: !9780)
!9782 = !DILocation(line: 562, column: 13, scope: !9778)
!9783 = !DILocation(line: 563, column: 39, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9780, file: !1636, line: 562, column: 34)
!9785 = !DILocation(line: 564, column: 29, scope: !9784)
!9786 = !DILocation(line: 564, column: 42, scope: !9784)
!9787 = !DILocation(line: 565, column: 9, scope: !9784)
!9788 = !DILocation(line: 567, column: 45, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9780, file: !1636, line: 567, column: 18)
!9790 = !DILocation(line: 567, column: 26, scope: !9789)
!9791 = !DILocation(line: 567, column: 18, scope: !9780)
!9792 = !DILocation(line: 568, column: 29, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9789, file: !1636, line: 567, column: 59)
!9794 = !DILocation(line: 568, column: 41, scope: !9793)
!9795 = !DILocation(line: 569, column: 9, scope: !9793)
!9796 = !DILocation(line: 572, column: 16, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9789, file: !1636, line: 571, column: 14)
!9798 = !DILocation(line: 573, column: 21, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9797, file: !1636, line: 573, column: 17)
!9800 = !DILocation(line: 573, column: 17, scope: !9797)
!9801 = !DILocation(line: 576, column: 29, scope: !9797)
!9802 = !DILocation(line: 576, column: 39, scope: !9797)
!9803 = !DILocation(line: 577, column: 29, scope: !9797)
!9804 = !DILocation(line: 577, column: 42, scope: !9797)
!9805 = !DILocation(line: 0, scope: !9775)
!9806 = !DILocation(line: 579, column: 14, scope: !9778)
!9807 = !DILocation(line: 580, column: 21, scope: !9778)
!9808 = distinct !{!9808, !9776, !9809}
!9809 = !DILocation(line: 581, column: 5, scope: !9775)
!9810 = !DILocation(line: 586, column: 1, scope: !9758)
!9811 = distinct !DISubprogram(name: "NOR_Construct_RegionInfo", scope: !1636, file: !1636, line: 593, type: !9812, scopeLine: 594, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9814)
!9812 = !DISubroutineType(types: !9813)
!9813 = !{!1091, !61, !61, !1651}
!9814 = !{!9815, !9816, !9817}
!9815 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9811, file: !1636, line: 593, type: !61)
!9816 = !DILocalVariable(name: "length", arg: 2, scope: !9811, file: !1636, line: 593, type: !61)
!9817 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9811, file: !1636, line: 593, type: !1651)
!9818 = !DILocation(line: 0, scope: !9811)
!9819 = !DILocation(line: 595, column: 12, scope: !9811)
!9820 = !DILocation(line: 595, column: 5, scope: !9811)
!9821 = !DILocation(line: 597, column: 81, scope: !9811)
!9822 = !DILocation(line: 597, column: 12, scope: !9811)
!9823 = !DILocation(line: 597, column: 5, scope: !9811)
!9824 = distinct !DISubprogram(name: "NOR_Construct_DualRegionInfo", scope: !1636, file: !1636, line: 606, type: !9812, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9825)
!9825 = !{!9826, !9827, !9828}
!9826 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9824, file: !1636, line: 606, type: !61)
!9827 = !DILocalVariable(name: "length", arg: 2, scope: !9824, file: !1636, line: 606, type: !61)
!9828 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9824, file: !1636, line: 606, type: !1651)
!9829 = !DILocation(line: 0, scope: !9824)
!9830 = !DILocation(line: 624, column: 5, scope: !9824)
!9831 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_RegionInfo", scope: !1636, file: !1636, line: 637, type: !9812, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9832)
!9832 = !{!9833, !9834, !9835, !9836, !9837}
!9833 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9831, file: !1636, line: 637, type: !61)
!9834 = !DILocalVariable(name: "length", arg: 2, scope: !9831, file: !1636, line: 637, type: !61)
!9835 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9831, file: !1636, line: 637, type: !1651)
!9836 = !DILocalVariable(name: "index", scope: !9831, file: !1636, line: 642, type: !61)
!9837 = !DILocalVariable(name: "list", scope: !9831, file: !1636, line: 644, type: !1953)
!9838 = !DILocation(line: 0, scope: !9831)
!9839 = !DILocation(line: 642, column: 22, scope: !9831)
!9840 = !DILocation(line: 648, column: 81, scope: !9831)
!9841 = !DILocation(line: 648, column: 12, scope: !9831)
!9842 = !DILocation(line: 648, column: 5, scope: !9831)
!9843 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_Construct_DualRegionInfo", scope: !1636, file: !1636, line: 658, type: !9812, scopeLine: 659, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9844)
!9844 = !{!9845, !9846, !9847}
!9845 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9843, file: !1636, line: 658, type: !61)
!9846 = !DILocalVariable(name: "length", arg: 2, scope: !9843, file: !1636, line: 658, type: !61)
!9847 = !DILocalVariable(name: "regioninfo", arg: 3, scope: !9843, file: !1636, line: 658, type: !1651)
!9848 = !DILocation(line: 0, scope: !9843)
!9849 = !DILocation(line: 688, column: 5, scope: !9843)
!9850 = distinct !DISubprogram(name: "EMIINIT_CMEM_NOR_GetUniformBlock", scope: !1636, file: !1636, line: 700, type: !7197, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9851)
!9851 = !{!9852, !9853, !9854}
!9852 = !DILocalVariable(name: "CS", arg: 1, scope: !9850, file: !1636, line: 700, type: !967)
!9853 = !DILocalVariable(name: "index", scope: !9850, file: !1636, line: 705, type: !61)
!9854 = !DILocalVariable(name: "list", scope: !9850, file: !1636, line: 707, type: !1953)
!9855 = !DILocation(line: 0, scope: !9850)
!9856 = !DILocation(line: 705, column: 22, scope: !9850)
!9857 = !DILocation(line: 711, column: 24, scope: !9850)
!9858 = !DILocation(line: 711, column: 5, scope: !9850)
!9859 = distinct !DISubprogram(name: "CMEM_NOR_AddBankInfo", scope: !1636, file: !1636, line: 721, type: !9860, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9862)
!9860 = !DISubroutineType(types: !9861)
!9861 = !{null, !1871, !1153, !61}
!9862 = !{!9863, !9864, !9865}
!9863 = !DILocalVariable(name: "bankInfo", arg: 1, scope: !9859, file: !1636, line: 721, type: !1871)
!9864 = !DILocalVariable(name: "index", arg: 2, scope: !9859, file: !1636, line: 721, type: !1153)
!9865 = !DILocalVariable(name: "bankSize", arg: 3, scope: !9859, file: !1636, line: 721, type: !61)
!9866 = !DILocation(line: 0, scope: !9859)
!9867 = !DILocation(line: 723, column: 18, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9859, file: !1636, line: 723, column: 9)
!9869 = !DILocation(line: 723, column: 26, scope: !9868)
!9870 = !DILocation(line: 723, column: 35, scope: !9868)
!9871 = !DILocation(line: 723, column: 9, scope: !9859)
!9872 = !DILocation(line: 724, column: 26, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9868, file: !1636, line: 723, column: 48)
!9874 = !DILocation(line: 724, column: 32, scope: !9873)
!9875 = !DILocation(line: 725, column: 5, scope: !9873)
!9876 = !DILocation(line: 726, column: 18, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9868, file: !1636, line: 725, column: 12)
!9878 = !DILocation(line: 727, column: 26, scope: !9877)
!9879 = !DILocation(line: 727, column: 32, scope: !9877)
!9880 = !DILocation(line: 728, column: 18, scope: !9877)
!9881 = !DILocation(line: 728, column: 26, scope: !9877)
!9882 = !DILocation(line: 728, column: 35, scope: !9877)
!9883 = !DILocation(line: 731, column: 1, scope: !9859)
!9884 = distinct !DISubprogram(name: "CMEM_NOR_Construct_BankInfo", scope: !1636, file: !1636, line: 739, type: !9885, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9887)
!9885 = !DISubroutineType(types: !9886)
!9886 = !{!61, !61, !61, !1871, !9738}
!9887 = !{!9888, !9889, !9890, !9891, !9892, !9893, !9894, !9895, !9896}
!9888 = !DILocalVariable(name: "baseaddr", arg: 1, scope: !9884, file: !1636, line: 740, type: !61)
!9889 = !DILocalVariable(name: "length", arg: 2, scope: !9884, file: !1636, line: 741, type: !61)
!9890 = !DILocalVariable(name: "bankInfo", arg: 3, scope: !9884, file: !1636, line: 742, type: !1871)
!9891 = !DILocalVariable(name: "cmemBankInfo", arg: 4, scope: !9884, file: !1636, line: 743, type: !9738)
!9892 = !DILocalVariable(name: "Partition", scope: !9884, file: !1636, line: 745, type: !61)
!9893 = !DILocalVariable(name: "Index", scope: !9884, file: !1636, line: 746, type: !1091)
!9894 = !DILocalVariable(name: "bankSize", scope: !9884, file: !1636, line: 747, type: !61)
!9895 = !DILocalVariable(name: "NextBankAddr", scope: !9884, file: !1636, line: 748, type: !61)
!9896 = !DILocalVariable(name: "srcBankIdx", scope: !9884, file: !1636, line: 748, type: !61)
!9897 = !DILocation(line: 0, scope: !9884)
!9898 = !DILocation(line: 750, column: 12, scope: !9884)
!9899 = !DILocation(line: 750, column: 5, scope: !9884)
!9900 = !DILocation(line: 752, column: 51, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9902, file: !1636, line: 752, column: 5)
!9902 = distinct !DILexicalBlock(scope: !9884, file: !1636, line: 752, column: 5)
!9903 = !DILocation(line: 752, column: 5, scope: !9902)
!9904 = !DILocation(line: 753, column: 51, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9906, file: !1636, line: 753, column: 13)
!9906 = distinct !DILexicalBlock(scope: !9901, file: !1636, line: 752, column: 70)
!9907 = !DILocation(line: 753, column: 24, scope: !9905)
!9908 = !DILocation(line: 753, column: 13, scope: !9906)
!9909 = !DILocation(line: 758, column: 49, scope: !9906)
!9910 = !DILocation(line: 758, column: 22, scope: !9906)
!9911 = !DILocation(line: 760, column: 22, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9906, file: !1636, line: 760, column: 13)
!9913 = !DILocation(line: 760, column: 13, scope: !9906)
!9914 = !DILocation(line: 761, column: 37, scope: !9915)
!9915 = distinct !DILexicalBlock(scope: !9912, file: !1636, line: 760, column: 39)
!9916 = !DILocation(line: 762, column: 24, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9915, file: !1636, line: 762, column: 17)
!9918 = !DILocation(line: 762, column: 17, scope: !9915)
!9919 = !DILocation(line: 767, column: 33, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9915, file: !1636, line: 767, column: 17)
!9921 = !DILocation(line: 767, column: 42, scope: !9920)
!9922 = !DILocation(line: 767, column: 17, scope: !9915)
!9923 = !DILocation(line: 768, column: 33, scope: !9924)
!9924 = distinct !DILexicalBlock(scope: !9920, file: !1636, line: 767, column: 55)
!9925 = !DILocation(line: 768, column: 39, scope: !9924)
!9926 = !DILocation(line: 769, column: 13, scope: !9924)
!9927 = !DILocation(line: 770, column: 46, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9929, file: !1636, line: 770, column: 21)
!9929 = distinct !DILexicalBlock(scope: !9920, file: !1636, line: 769, column: 20)
!9930 = !DILocation(line: 770, column: 21, scope: !9929)
!9931 = !DILocation(line: 773, column: 33, scope: !9929)
!9932 = !DILocation(line: 773, column: 39, scope: !9929)
!9933 = !DILocation(line: 774, column: 33, scope: !9929)
!9934 = !DILocation(line: 774, column: 42, scope: !9929)
!9935 = !DILocation(line: 777, column: 22, scope: !9915)
!9936 = !DILocation(line: 778, column: 20, scope: !9915)
!9937 = !DILocation(line: 779, column: 9, scope: !9915)
!9938 = !DILocation(line: 746, column: 13, scope: !9884)
!9939 = !DILocation(line: 752, column: 66, scope: !9901)
!9940 = distinct !{!9940, !9903, !9941}
!9941 = !DILocation(line: 781, column: 5, scope: !9902)
!9942 = !DILocation(line: 784, column: 5, scope: !9884)
!9943 = distinct !DISubprogram(name: "CMEM_Init_NOR", scope: !1636, file: !1636, line: 796, type: !7763, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9944)
!9944 = !{!9945, !9946}
!9945 = !DILocalVariable(name: "result", scope: !9943, file: !1636, line: 798, type: !1091)
!9946 = !DILocalVariable(name: "i", scope: !9943, file: !1636, line: 799, type: !1091)
!9947 = !DILocation(line: 803, column: 19, scope: !9943)
!9948 = !DILocation(line: 803, column: 28, scope: !9943)
!9949 = !DILocation(line: 803, column: 17, scope: !9943)
!9950 = !DILocation(line: 822, column: 33, scope: !9943)
!9951 = !DILocation(line: 822, column: 56, scope: !9943)
!9952 = !DILocation(line: 822, column: 88, scope: !9943)
!9953 = !DILocation(line: 822, column: 97, scope: !9943)
!9954 = !DILocation(line: 822, column: 5, scope: !9943)
!9955 = !DILocation(line: 829, column: 39, scope: !9943)
!9956 = !DILocation(line: 829, column: 62, scope: !9943)
!9957 = !DILocation(line: 829, column: 14, scope: !9943)
!9958 = !DILocation(line: 0, scope: !9943)
!9959 = !DILocation(line: 834, column: 16, scope: !9960)
!9960 = distinct !DILexicalBlock(scope: !9943, file: !1636, line: 834, column: 9)
!9961 = !DILocation(line: 834, column: 9, scope: !9943)
!9962 = !DILocation(line: 838, column: 30, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9943, file: !1636, line: 838, column: 5)
!9964 = !DILocation(line: 838, column: 58, scope: !9963)
!9965 = !DILocation(line: 838, column: 78, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9963, file: !1636, line: 838, column: 5)
!9967 = !DILocation(line: 838, column: 88, scope: !9966)
!9968 = !DILocation(line: 838, column: 5, scope: !9963)
!9969 = !DILocation(line: 839, column: 39, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9966, file: !1636, line: 838, column: 102)
!9971 = !DILocation(line: 839, column: 22, scope: !9970)
!9972 = !DILocation(line: 840, column: 37, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9970, file: !1636, line: 840, column: 13)
!9974 = !DILocation(line: 840, column: 13, scope: !9970)
!9975 = !DILocation(line: 841, column: 36, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9973, file: !1636, line: 840, column: 63)
!9977 = !DILocation(line: 842, column: 9, scope: !9976)
!9978 = !DILocation(line: 838, column: 95, scope: !9966)
!9979 = distinct !{!9979, !9968, !9980}
!9980 = !DILocation(line: 843, column: 5, scope: !9963)
!9981 = !DILocation(line: 871, column: 49, scope: !9943)
!9982 = !DILocation(line: 871, column: 72, scope: !9943)
!9983 = !DILocation(line: 871, column: 47, scope: !9943)
!9984 = !DILocation(line: 871, column: 97, scope: !9943)
!9985 = !DILocation(line: 871, column: 19, scope: !9943)
!9986 = !DILocation(line: 882, column: 14, scope: !9943)
!9987 = !DILocation(line: 887, column: 13, scope: !9943)
!9988 = !DILocation(line: 887, column: 22, scope: !9943)
!9989 = !DILocation(line: 887, column: 5, scope: !9943)
!9990 = !DILocation(line: 889, column: 22, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9943, file: !1636, line: 887, column: 34)
!9992 = !DILocation(line: 890, column: 13, scope: !9991)
!9993 = !DILocation(line: 902, column: 1, scope: !9943)
!9994 = distinct !DISubprogram(name: "CMEM_Init_nor_list", scope: !1636, file: !1636, line: 912, type: !9995, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !9997)
!9995 = !DISubroutineType(types: !9996)
!9996 = !{null, !772}
!9997 = !{!9998}
!9998 = !DILocalVariable(name: "CS", arg: 1, scope: !9994, file: !1636, line: 912, type: !772)
!9999 = !DILocation(line: 0, scope: !9994)
!10000 = !DILocation(line: 914, column: 12, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9994, file: !1636, line: 914, column: 9)
!10002 = !DILocation(line: 914, column: 9, scope: !9994)
!10003 = !DILocation(line: 918, column: 26, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !10001, file: !1636, line: 914, column: 18)
!10005 = !DILocation(line: 918, column: 24, scope: !10004)
!10006 = !DILocation(line: 920, column: 28, scope: !10007)
!10007 = distinct !DILexicalBlock(scope: !10004, file: !1636, line: 920, column: 13)
!10008 = !DILocation(line: 920, column: 13, scope: !10004)
!10009 = !DILocation(line: 921, column: 13, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10011, file: !1636, line: 921, column: 13)
!10011 = distinct !DILexicalBlock(scope: !10012, file: !1636, line: 921, column: 13)
!10012 = distinct !DILexicalBlock(scope: !10013, file: !1636, line: 921, column: 13)
!10013 = distinct !DILexicalBlock(scope: !10007, file: !1636, line: 920, column: 33)
!10014 = !DILocation(line: 923, column: 19, scope: !10004)
!10015 = !DILocation(line: 923, column: 17, scope: !10004)
!10016 = !DILocation(line: 924, column: 5, scope: !10004)
!10017 = !DILocation(line: 935, column: 14, scope: !9994)
!10018 = !DILocation(line: 936, column: 1, scope: !9994)
!10019 = distinct !DISubprogram(name: "ComboMem_Initialize", scope: !1636, file: !1636, line: 952, type: !7763, scopeLine: 953, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !293)
!10020 = !DILocation(line: 955, column: 5, scope: !10019)
!10021 = !DILocation(line: 956, column: 12, scope: !10019)
!10022 = !DILocation(line: 956, column: 5, scope: !10019)
!10023 = distinct !DISubprogram(name: "CMEM_Init_FullDriver", scope: !1636, file: !1636, line: 974, type: !7763, scopeLine: 975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1635, retainedNodes: !10024)
!10024 = !{!10025}
!10025 = !DILocalVariable(name: "result", scope: !10023, file: !1636, line: 976, type: !1091)
!10026 = !DILocation(line: 981, column: 5, scope: !10023)
!10027 = !DILocation(line: 986, column: 24, scope: !10023)
!10028 = !DILocation(line: 986, column: 33, scope: !10023)
!10029 = !DILocation(line: 986, column: 49, scope: !10023)
!10030 = !DILocation(line: 986, column: 22, scope: !10023)
!10031 = !DILocation(line: 1002, column: 19, scope: !10023)
!10032 = !DILocation(line: 1002, column: 17, scope: !10023)
!10033 = !DILocation(line: 1014, column: 22, scope: !10023)
!10034 = !DILocation(line: 1014, column: 5, scope: !10023)
!10035 = !DILocation(line: 1024, column: 33, scope: !10023)
!10036 = !DILocation(line: 1026, column: 27, scope: !10023)
!10037 = !DILocation(line: 1027, column: 26, scope: !10023)
!10038 = !DILocation(line: 1042, column: 33, scope: !10023)
!10039 = !DILocation(line: 1044, column: 32, scope: !10023)
!10040 = !DILocation(line: 1052, column: 18, scope: !10023)
!10041 = !DILocation(line: 1052, column: 27, scope: !10023)
!10042 = !DILocation(line: 1052, column: 43, scope: !10023)
!10043 = !DILocation(line: 1048, column: 14, scope: !10023)
!10044 = !DILocation(line: 0, scope: !10023)
!10045 = !DILocation(line: 1063, column: 5, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10047, file: !1636, line: 1063, column: 5)
!10047 = distinct !DILexicalBlock(scope: !10023, file: !1636, line: 1063, column: 5)
!10048 = !DILocation(line: 1063, column: 5, scope: !10047)
!10049 = !DILocation(line: 1063, column: 5, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10046, file: !1636, line: 1063, column: 5)
!10051 = !DILocation(line: 1096, column: 36, scope: !10023)
!10052 = !DILocation(line: 1096, column: 34, scope: !10023)
!10053 = !DILocation(line: 1101, column: 5, scope: !10023)
!10054 = !DILocation(line: 1103, column: 34, scope: !10023)
!10055 = !DILocation(line: 1109, column: 35, scope: !10023)
!10056 = !DILocation(line: 1110, column: 33, scope: !10023)
!10057 = !DILocation(line: 1111, column: 34, scope: !10023)
!10058 = !DILocation(line: 1113, column: 5, scope: !10023)
!10059 = distinct !DISubprogram(name: "CreateFDMLock", scope: !1994, file: !1994, line: 84, type: !291, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!10060 = !DILocation(line: 86, column: 1, scope: !10059)
!10061 = distinct !DISubprogram(name: "GetFDMLock", scope: !1994, file: !1994, line: 87, type: !8229, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10062)
!10062 = !{!10063}
!10063 = !DILocalVariable(name: "savedMask", scope: !10061, file: !1994, line: 89, type: !1091)
!10064 = !DILocation(line: 90, column: 17, scope: !10061)
!10065 = !DILocation(line: 0, scope: !10061)
!10066 = !DILocation(line: 91, column: 9, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10061, file: !1994, line: 91, column: 9)
!10068 = !DILocation(line: 91, column: 9, scope: !10061)
!10069 = !DILocation(line: 92, column: 17, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10067, file: !1994, line: 91, column: 24)
!10071 = !DILocation(line: 94, column: 9, scope: !10070)
!10072 = !DILocation(line: 0, scope: !10067)
!10073 = !DILocation(line: 102, column: 1, scope: !10061)
!10074 = distinct !DISubprogram(name: "FreeFDMLock", scope: !1994, file: !1994, line: 103, type: !291, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10075)
!10075 = !{!10076}
!10076 = !DILocalVariable(name: "savedMask", scope: !10074, file: !1994, line: 105, type: !1091)
!10077 = !DILocation(line: 106, column: 17, scope: !10074)
!10078 = !DILocation(line: 0, scope: !10074)
!10079 = !DILocation(line: 107, column: 9, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10074, file: !1994, line: 107, column: 9)
!10081 = !DILocation(line: 107, column: 9, scope: !10074)
!10082 = !DILocation(line: 108, column: 17, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10080, file: !1994, line: 107, column: 24)
!10084 = !DILocation(line: 109, column: 9, scope: !10083)
!10085 = !DILocation(line: 114, column: 1, scope: !10074)
!10086 = !DILocation(line: 111, column: 9, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10080, file: !1994, line: 110, column: 12)
!10088 = !DILocation(line: 112, column: 9, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10090, file: !1994, line: 112, column: 9)
!10090 = distinct !DILexicalBlock(scope: !10091, file: !1994, line: 112, column: 9)
!10091 = distinct !DILexicalBlock(scope: !10087, file: !1994, line: 112, column: 9)
!10092 = distinct !DISubprogram(name: "create_FDM_lock", scope: !1994, file: !1994, line: 119, type: !291, scopeLine: 120, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!10093 = !DILocation(line: 123, column: 1, scope: !10092)
!10094 = distinct !DISubprogram(name: "retrieve_FDM_lock", scope: !1994, file: !1994, line: 130, type: !291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10095)
!10095 = !{!10096}
!10096 = !DILocalVariable(name: "Result", scope: !10094, file: !1994, line: 132, type: !2050)
!10097 = !DILocation(line: 133, column: 5, scope: !10094)
!10098 = !DILocation(line: 134, column: 18, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10094, file: !1994, line: 133, column: 8)
!10100 = !DILocation(line: 0, scope: !10094)
!10101 = !DILocation(line: 135, column: 21, scope: !10094)
!10102 = !DILocation(line: 135, column: 5, scope: !10099)
!10103 = distinct !{!10103, !10097, !10104}
!10104 = !DILocation(line: 135, column: 43, scope: !10094)
!10105 = !DILocation(line: 136, column: 1, scope: !10094)
!10106 = distinct !DISubprogram(name: "release_FDM_lock", scope: !1994, file: !1994, line: 143, type: !291, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!10107 = !DILocation(line: 147, column: 5, scope: !10106)
!10108 = !DILocation(line: 148, column: 1, scope: !10106)
!10109 = distinct !DISubprogram(name: "readRawDiskData", scope: !1994, file: !1994, line: 216, type: !10110, scopeLine: 217, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10151)
!10110 = !DISubroutineType(types: !10111)
!10111 = !{!1091, !10112, !61, !762, !61}
!10112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10113, size: 32)
!10113 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_FLASH_DISK_Data", file: !1941, line: 93, baseType: !10114)
!10114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1941, line: 83, size: 1056, elements: !10115)
!10115 = !{!10116, !10117, !10137, !10138, !10150}
!10116 = !DIDerivedType(tag: DW_TAG_member, name: "DiskSize", scope: !10114, file: !1941, line: 84, baseType: !61, size: 32)
!10117 = !DIDerivedType(tag: DW_TAG_member, name: "MTDDriver", scope: !10114, file: !1941, line: 85, baseType: !10118, size: 32, offset: 32)
!10118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10119, size: 32)
!10119 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_Driver", file: !1408, line: 121, baseType: !10120)
!10120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 105, size: 480, elements: !10121)
!10121 = !{!10122, !10123, !10124, !10125, !10126, !10127, !10128, !10129, !10130, !10131, !10132, !10133, !10134, !10135, !10136}
!10122 = !DIDerivedType(tag: DW_TAG_member, name: "MountDevice", scope: !10120, file: !1408, line: 106, baseType: !1682, size: 32)
!10123 = !DIDerivedType(tag: DW_TAG_member, name: "ShutDown", scope: !10120, file: !1408, line: 107, baseType: !1483, size: 32, offset: 32)
!10124 = !DIDerivedType(tag: DW_TAG_member, name: "MapWindow", scope: !10120, file: !1408, line: 108, baseType: !1687, size: 32, offset: 64)
!10125 = !DIDerivedType(tag: DW_TAG_member, name: "EraseBlock", scope: !10120, file: !1408, line: 109, baseType: !1691, size: 32, offset: 96)
!10126 = !DIDerivedType(tag: DW_TAG_member, name: "ProgramData", scope: !10120, file: !1408, line: 110, baseType: !1695, size: 32, offset: 128)
!10127 = !DIDerivedType(tag: DW_TAG_member, name: "NonBlockEraseBlock", scope: !10120, file: !1408, line: 111, baseType: !1691, size: 32, offset: 160)
!10128 = !DIDerivedType(tag: DW_TAG_member, name: "CheckDeviceReady", scope: !10120, file: !1408, line: 112, baseType: !1700, size: 32, offset: 192)
!10129 = !DIDerivedType(tag: DW_TAG_member, name: "SuspendErase", scope: !10120, file: !1408, line: 113, baseType: !1691, size: 32, offset: 224)
!10130 = !DIDerivedType(tag: DW_TAG_member, name: "ResumeErase", scope: !10120, file: !1408, line: 114, baseType: !1691, size: 32, offset: 256)
!10131 = !DIDerivedType(tag: DW_TAG_member, name: "BlankCheck", scope: !10120, file: !1408, line: 115, baseType: !1691, size: 32, offset: 288)
!10132 = !DIDerivedType(tag: DW_TAG_member, name: "OTPAccess", scope: !10120, file: !1408, line: 116, baseType: !1707, size: 32, offset: 320)
!10133 = !DIDerivedType(tag: DW_TAG_member, name: "OTPQueryLength", scope: !10120, file: !1408, line: 117, baseType: !1712, size: 32, offset: 352)
!10134 = !DIDerivedType(tag: DW_TAG_member, name: "LockEraseBlkAddr", scope: !10120, file: !1408, line: 118, baseType: !1717, size: 32, offset: 384)
!10135 = !DIDerivedType(tag: DW_TAG_member, name: "IsEraseSuspended", scope: !10120, file: !1408, line: 119, baseType: !1721, size: 32, offset: 416)
!10136 = !DIDerivedType(tag: DW_TAG_member, name: "IOCtrl", scope: !10120, file: !1408, line: 120, baseType: !1725, size: 32, offset: 448)
!10137 = !DIDerivedType(tag: DW_TAG_member, name: "MTDData", scope: !10114, file: !1941, line: 86, baseType: !88, size: 32, offset: 64)
!10138 = !DIDerivedType(tag: DW_TAG_member, name: "FlashInfo", scope: !10114, file: !1941, line: 87, baseType: !10139, size: 928, offset: 96)
!10139 = !DIDerivedType(tag: DW_TAG_typedef, name: "NOR_MTD_FlashInfo", file: !1408, line: 99, baseType: !10140)
!10140 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1408, line: 90, size: 928, elements: !10141)
!10141 = !{!10142, !10143, !10144, !10145, !10146, !10147, !10148, !10149}
!10142 = !DIDerivedType(tag: DW_TAG_member, name: "TotalBlocks", scope: !10140, file: !1408, line: 91, baseType: !61, size: 32)
!10143 = !DIDerivedType(tag: DW_TAG_member, name: "BlockSize", scope: !10140, file: !1408, line: 92, baseType: !1739, size: 256, offset: 32)
!10144 = !DIDerivedType(tag: DW_TAG_member, name: "AvailInRegion", scope: !10140, file: !1408, line: 93, baseType: !1739, size: 256, offset: 288)
!10145 = !DIDerivedType(tag: DW_TAG_member, name: "RegionBlocks", scope: !10140, file: !1408, line: 94, baseType: !1739, size: 256, offset: 544)
!10146 = !DIDerivedType(tag: DW_TAG_member, name: "ActualRegionNum", scope: !10140, file: !1408, line: 95, baseType: !61, size: 32, offset: 800)
!10147 = !DIDerivedType(tag: DW_TAG_member, name: "PageSize", scope: !10140, file: !1408, line: 96, baseType: !1731, size: 16, offset: 832)
!10148 = !DIDerivedType(tag: DW_TAG_member, name: "baseUnlockBlock", scope: !10140, file: !1408, line: 97, baseType: !61, size: 32, offset: 864)
!10149 = !DIDerivedType(tag: DW_TAG_member, name: "endUnlockBlock", scope: !10140, file: !1408, line: 98, baseType: !61, size: 32, offset: 896)
!10150 = !DIDerivedType(tag: DW_TAG_member, name: "is_mount", scope: !10114, file: !1941, line: 92, baseType: !91, size: 8, offset: 1024)
!10151 = !{!10152, !10153, !10154, !10155, !10156, !10157}
!10152 = !DILocalVariable(name: "D", arg: 1, scope: !10109, file: !1994, line: 216, type: !10112)
!10153 = !DILocalVariable(name: "addr", arg: 2, scope: !10109, file: !1994, line: 216, type: !61)
!10154 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10109, file: !1994, line: 216, type: !762)
!10155 = !DILocalVariable(name: "len", arg: 4, scope: !10109, file: !1994, line: 216, type: !61)
!10156 = !DILocalVariable(name: "phyAddr", scope: !10109, file: !1994, line: 219, type: !61)
!10157 = !DILocalVariable(name: "diskSize", scope: !10109, file: !1994, line: 220, type: !61)
!10158 = !DILocation(line: 0, scope: !10109)
!10159 = !DILocation(line: 220, column: 28, scope: !10109)
!10160 = !DILocation(line: 222, column: 14, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10109, file: !1994, line: 222, column: 9)
!10162 = !DILocation(line: 222, column: 26, scope: !10161)
!10163 = !DILocation(line: 225, column: 51, scope: !10109)
!10164 = !DILocation(line: 225, column: 61, scope: !10109)
!10165 = !DILocation(line: 225, column: 15, scope: !10109)
!10166 = !DILocation(line: 225, column: 70, scope: !10109)
!10167 = !DILocation(line: 227, column: 13, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10109, file: !1994, line: 227, column: 9)
!10169 = !DILocation(line: 227, column: 9, scope: !10109)
!10170 = !DILocation(line: 228, column: 9, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10168, file: !1994, line: 227, column: 23)
!10172 = !DILocation(line: 229, column: 5, scope: !10171)
!10173 = !DILocation(line: 231, column: 5, scope: !10109)
!10174 = !DILocation(line: 233, column: 22, scope: !10109)
!10175 = !DILocation(line: 233, column: 5, scope: !10109)
!10176 = !DILocation(line: 235, column: 5, scope: !10109)
!10177 = !DILocation(line: 237, column: 5, scope: !10109)
!10178 = !DILocation(line: 238, column: 1, scope: !10109)
!10179 = distinct !DISubprogram(name: "MountDevice", scope: !1994, file: !1994, line: 165, type: !10180, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10182)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{null, !10112}
!10182 = !{!10183, !10184}
!10183 = !DILocalVariable(name: "D", arg: 1, scope: !10179, file: !1994, line: 165, type: !10112)
!10184 = !DILocalVariable(name: "Result", scope: !10179, file: !1994, line: 167, type: !1091)
!10185 = !DILocation(line: 0, scope: !10179)
!10186 = !DILocation(line: 171, column: 12, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10179, file: !1994, line: 171, column: 9)
!10188 = !DILocation(line: 171, column: 9, scope: !10179)
!10189 = !DILocation(line: 176, column: 5, scope: !10179)
!10190 = !DILocation(line: 186, column: 17, scope: !10179)
!10191 = !DILocation(line: 186, column: 28, scope: !10179)
!10192 = !DILocation(line: 186, column: 43, scope: !10179)
!10193 = !DILocation(line: 186, column: 64, scope: !10179)
!10194 = !DILocation(line: 186, column: 52, scope: !10179)
!10195 = !DILocation(line: 186, column: 14, scope: !10179)
!10196 = !DILocation(line: 188, column: 5, scope: !10179)
!10197 = !DILocation(line: 190, column: 16, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10179, file: !1994, line: 190, column: 9)
!10199 = !DILocation(line: 190, column: 9, scope: !10179)
!10200 = !DILocation(line: 191, column: 9, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10202, file: !1994, line: 191, column: 9)
!10202 = distinct !DILexicalBlock(scope: !10203, file: !1994, line: 191, column: 9)
!10203 = distinct !DILexicalBlock(scope: !10204, file: !1994, line: 191, column: 9)
!10204 = distinct !DILexicalBlock(scope: !10198, file: !1994, line: 190, column: 31)
!10205 = !DILocation(line: 194, column: 17, scope: !10179)
!10206 = !DILocation(line: 195, column: 1, scope: !10179)
!10207 = distinct !DISubprogram(name: "writeRawDiskData", scope: !1994, file: !1994, line: 277, type: !10110, scopeLine: 278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10208)
!10208 = !{!10209, !10210, !10211, !10212, !10213, !10214, !10215, !10216, !10217, !10218, !10222, !10223, !10224, !10229}
!10209 = !DILocalVariable(name: "D", arg: 1, scope: !10207, file: !1994, line: 277, type: !10112)
!10210 = !DILocalVariable(name: "addr", arg: 2, scope: !10207, file: !1994, line: 277, type: !61)
!10211 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10207, file: !1994, line: 277, type: !762)
!10212 = !DILocalVariable(name: "len", arg: 4, scope: !10207, file: !1994, line: 277, type: !61)
!10213 = !DILocalVariable(name: "dest", scope: !10207, file: !1994, line: 279, type: !61)
!10214 = !DILocalVariable(name: "src", scope: !10207, file: !1994, line: 279, type: !61)
!10215 = !DILocalVariable(name: "diskSize", scope: !10207, file: !1994, line: 280, type: !61)
!10216 = !DILocalVariable(name: "result", scope: !10207, file: !1994, line: 281, type: !1091)
!10217 = !DILocalVariable(name: "DoneLength", scope: !10207, file: !1994, line: 282, type: !61)
!10218 = !DILocalVariable(name: "blockSize", scope: !10219, file: !1994, line: 313, type: !61)
!10219 = distinct !DILexicalBlock(scope: !10220, file: !1994, line: 312, column: 14)
!10220 = distinct !DILexicalBlock(scope: !10221, file: !1994, line: 305, column: 13)
!10221 = distinct !DILexicalBlock(scope: !10207, file: !1994, line: 298, column: 30)
!10222 = !DILocalVariable(name: "programBytes", scope: !10219, file: !1994, line: 314, type: !61)
!10223 = !DILocalVariable(name: "nextBlkAddr", scope: !10219, file: !1994, line: 316, type: !61)
!10224 = !DILocalVariable(name: "Cell", scope: !10225, file: !1994, line: 346, type: !10227)
!10225 = distinct !DILexicalBlock(scope: !10226, file: !1994, line: 345, column: 83)
!10226 = distinct !DILexicalBlock(scope: !10219, file: !1994, line: 345, column: 17)
!10227 = !DIDerivedType(tag: DW_TAG_typedef, name: "FLASH_CELL", file: !10228, line: 76, baseType: !968)
!10228 = !DIFile(filename: "../../../../../driver/chip/mt2523/inc/hal_flash_mtd_internal.h", directory: "/home/mjshen/RTOSExploration/Embedded-GUI-for-MT2523/project/mt2523_hdk/hal_examples/spi_slave_from_master/GCC")
!10229 = !DILocalVariable(name: "b", scope: !10225, file: !1994, line: 347, type: !762)
!10230 = !DILocation(line: 0, scope: !10207)
!10231 = !DILocation(line: 280, column: 28, scope: !10207)
!10232 = !DILocation(line: 284, column: 14, scope: !10233)
!10233 = distinct !DILexicalBlock(scope: !10207, file: !1994, line: 284, column: 9)
!10234 = !DILocation(line: 284, column: 9, scope: !10207)
!10235 = !DILocation(line: 288, column: 14, scope: !10236)
!10236 = distinct !DILexicalBlock(scope: !10207, file: !1994, line: 288, column: 9)
!10237 = !DILocation(line: 288, column: 20, scope: !10236)
!10238 = !DILocation(line: 288, column: 9, scope: !10207)
!10239 = !DILocation(line: 292, column: 13, scope: !10240)
!10240 = distinct !DILexicalBlock(scope: !10207, file: !1994, line: 292, column: 9)
!10241 = !DILocation(line: 292, column: 9, scope: !10207)
!10242 = !DILocation(line: 293, column: 9, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10240, file: !1994, line: 292, column: 23)
!10244 = !DILocation(line: 294, column: 5, scope: !10243)
!10245 = !DILocation(line: 296, column: 5, scope: !10207)
!10246 = !DILocation(line: 346, column: 17, scope: !10225)
!10247 = !DILocation(line: 298, column: 23, scope: !10207)
!10248 = !DILocation(line: 298, column: 5, scope: !10207)
!10249 = !DILocation(line: 299, column: 52, scope: !10221)
!10250 = !DILocation(line: 299, column: 62, scope: !10221)
!10251 = !DILocation(line: 299, column: 16, scope: !10221)
!10252 = !DILocation(line: 299, column: 71, scope: !10221)
!10253 = !DILocation(line: 299, column: 78, scope: !10221)
!10254 = !DILocation(line: 300, column: 34, scope: !10221)
!10255 = !DILocation(line: 302, column: 12, scope: !10221)
!10256 = !DILocation(line: 302, column: 23, scope: !10221)
!10257 = !DILocation(line: 302, column: 81, scope: !10221)
!10258 = !DILocation(line: 302, column: 45, scope: !10221)
!10259 = !DILocation(line: 302, column: 9, scope: !10221)
!10260 = !DILocation(line: 305, column: 29, scope: !10220)
!10261 = !DILocation(line: 305, column: 57, scope: !10220)
!10262 = !DILocation(line: 305, column: 66, scope: !10220)
!10263 = !DILocation(line: 305, column: 80, scope: !10220)
!10264 = !DILocation(line: 305, column: 13, scope: !10221)
!10265 = !DILocation(line: 306, column: 25, scope: !10266)
!10266 = distinct !DILexicalBlock(scope: !10220, file: !1994, line: 305, column: 87)
!10267 = !DILocation(line: 306, column: 36, scope: !10266)
!10268 = !DILocation(line: 306, column: 51, scope: !10266)
!10269 = !DILocation(line: 306, column: 60, scope: !10266)
!10270 = !DILocation(line: 306, column: 74, scope: !10266)
!10271 = !DILocation(line: 306, column: 22, scope: !10266)
!10272 = !DILocation(line: 307, column: 24, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10266, file: !1994, line: 307, column: 17)
!10274 = !DILocation(line: 307, column: 17, scope: !10266)
!10275 = !DILocation(line: 310, column: 23, scope: !10266)
!10276 = !DILocation(line: 311, column: 9, scope: !10266)
!10277 = !DILocation(line: 313, column: 47, scope: !10219)
!10278 = !DILocation(line: 313, column: 56, scope: !10219)
!10279 = !DILocation(line: 313, column: 34, scope: !10219)
!10280 = !DILocation(line: 0, scope: !10219)
!10281 = !DILocation(line: 316, column: 42, scope: !10219)
!10282 = !DILocation(line: 316, column: 58, scope: !10219)
!10283 = !DILocation(line: 316, column: 55, scope: !10219)
!10284 = !DILocation(line: 326, column: 22, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10219, file: !1994, line: 326, column: 17)
!10286 = !DILocation(line: 326, column: 37, scope: !10285)
!10287 = !DILocation(line: 326, column: 17, scope: !10219)
!10288 = !DILocation(line: 332, column: 43, scope: !10219)
!10289 = !DILocation(line: 345, column: 30, scope: !10226)
!10290 = !DILocation(line: 345, column: 52, scope: !10226)
!10291 = !DILocation(line: 0, scope: !10225)
!10292 = !DILocation(line: 348, column: 26, scope: !10225)
!10293 = !DILocation(line: 348, column: 24, scope: !10225)
!10294 = !DILocation(line: 348, column: 22, scope: !10225)
!10295 = !DILocation(line: 349, column: 41, scope: !10225)
!10296 = !DILocation(line: 349, column: 24, scope: !10225)
!10297 = !DILocation(line: 349, column: 22, scope: !10225)
!10298 = !DILocation(line: 350, column: 29, scope: !10225)
!10299 = !DILocation(line: 350, column: 40, scope: !10225)
!10300 = !DILocation(line: 350, column: 55, scope: !10225)
!10301 = !DILocation(line: 350, column: 64, scope: !10225)
!10302 = !DILocation(line: 350, column: 26, scope: !10225)
!10303 = !DILocation(line: 351, column: 28, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10225, file: !1994, line: 351, column: 21)
!10305 = !DILocation(line: 354, column: 13, scope: !10226)
!10306 = !DILocation(line: 362, column: 33, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10308, file: !1994, line: 361, column: 24)
!10308 = distinct !DILexicalBlock(scope: !10309, file: !1994, line: 355, column: 21)
!10309 = distinct !DILexicalBlock(scope: !10226, file: !1994, line: 354, column: 20)
!10310 = !DILocation(line: 362, column: 44, scope: !10307)
!10311 = !DILocation(line: 362, column: 59, scope: !10307)
!10312 = !DILocation(line: 362, column: 68, scope: !10307)
!10313 = !DILocation(line: 362, column: 82, scope: !10307)
!10314 = !DILocation(line: 362, column: 30, scope: !10307)
!10315 = !DILocation(line: 364, column: 28, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10309, file: !1994, line: 364, column: 21)
!10317 = !DILocation(line: 364, column: 21, scope: !10309)
!10318 = !DILocation(line: 368, column: 24, scope: !10219)
!10319 = !DILocation(line: 0, scope: !10220)
!10320 = distinct !{!10320, !10248, !10321}
!10321 = !DILocation(line: 370, column: 5, scope: !10207)
!10322 = !DILocation(line: 372, column: 5, scope: !10207)
!10323 = !DILocation(line: 379, column: 1, scope: !10207)
!10324 = distinct !DISubprogram(name: "eraseRawDiskBlock", scope: !1994, file: !1994, line: 398, type: !10325, scopeLine: 399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10327)
!10325 = !DISubroutineType(types: !10326)
!10326 = !{!1091, !10112, !61}
!10327 = !{!10328, !10329, !10330, !10331}
!10328 = !DILocalVariable(name: "D", arg: 1, scope: !10324, file: !1994, line: 398, type: !10112)
!10329 = !DILocalVariable(name: "blkIdx", arg: 2, scope: !10324, file: !1994, line: 398, type: !61)
!10330 = !DILocalVariable(name: "result", scope: !10324, file: !1994, line: 401, type: !1091)
!10331 = !DILocalVariable(name: "block_index", scope: !10324, file: !1994, line: 402, type: !61)
!10332 = !DILocation(line: 0, scope: !10324)
!10333 = !DILocation(line: 402, column: 36, scope: !10324)
!10334 = !DILocation(line: 403, column: 13, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10324, file: !1994, line: 403, column: 9)
!10336 = !DILocation(line: 403, column: 9, scope: !10324)
!10337 = !DILocation(line: 404, column: 9, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10335, file: !1994, line: 403, column: 23)
!10339 = !DILocation(line: 405, column: 5, scope: !10338)
!10340 = !DILocation(line: 407, column: 37, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10324, file: !1994, line: 407, column: 9)
!10342 = !DILocation(line: 407, column: 21, scope: !10341)
!10343 = !DILocation(line: 407, column: 9, scope: !10324)
!10344 = !DILocation(line: 412, column: 5, scope: !10324)
!10345 = !DILocation(line: 414, column: 8, scope: !10324)
!10346 = !DILocation(line: 414, column: 19, scope: !10324)
!10347 = !DILocation(line: 414, column: 32, scope: !10324)
!10348 = !DILocation(line: 414, column: 5, scope: !10324)
!10349 = !DILocation(line: 416, column: 17, scope: !10324)
!10350 = !DILocation(line: 416, column: 28, scope: !10324)
!10351 = !DILocation(line: 416, column: 42, scope: !10324)
!10352 = !DILocation(line: 416, column: 14, scope: !10324)
!10353 = !DILocation(line: 418, column: 5, scope: !10324)
!10354 = !DILocation(line: 420, column: 16, scope: !10355)
!10355 = distinct !DILexicalBlock(scope: !10324, file: !1994, line: 420, column: 9)
!10356 = !DILocation(line: 424, column: 1, scope: !10324)
!10357 = distinct !DISubprogram(name: "NOR_init", scope: !1994, file: !1994, line: 433, type: !7763, scopeLine: 434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!10358 = !DILocation(line: 436, column: 9, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10357, file: !1994, line: 436, column: 9)
!10360 = !DILocation(line: 436, column: 9, scope: !10357)
!10361 = !DILocation(line: 437, column: 9, scope: !10362)
!10362 = distinct !DILexicalBlock(scope: !10359, file: !1994, line: 436, column: 62)
!10363 = !DILocation(line: 438, column: 9, scope: !10362)
!10364 = !DILocation(line: 439, column: 27, scope: !10362)
!10365 = !DILocation(line: 440, column: 5, scope: !10362)
!10366 = !DILocation(line: 441, column: 5, scope: !10357)
!10367 = distinct !DISubprogram(name: "get_NOR_init_status", scope: !1994, file: !1994, line: 444, type: !8229, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!10368 = !DILocation(line: 446, column: 12, scope: !10367)
!10369 = !DILocation(line: 446, column: 5, scope: !10367)
!10370 = distinct !DISubprogram(name: "NOR_ReadPhysicalPage", scope: !1994, file: !1994, line: 449, type: !10371, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10373)
!10371 = !DISubroutineType(types: !10372)
!10372 = !{!1091, !61, !61, !762}
!10373 = !{!10374, !10375, !10376, !10377, !10378, !10379, !10380}
!10374 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10370, file: !1994, line: 449, type: !61)
!10375 = !DILocalVariable(name: "page_idx", arg: 2, scope: !10370, file: !1994, line: 449, type: !61)
!10376 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10370, file: !1994, line: 449, type: !762)
!10377 = !DILocalVariable(name: "D", scope: !10370, file: !1994, line: 451, type: !10112)
!10378 = !DILocalVariable(name: "mtdData", scope: !10370, file: !1994, line: 452, type: !2002)
!10379 = !DILocalVariable(name: "result", scope: !10370, file: !1994, line: 453, type: !1091)
!10380 = !DILocalVariable(name: "addr", scope: !10370, file: !1994, line: 455, type: !61)
!10381 = !DILocation(line: 0, scope: !10370)
!10382 = !DILocation(line: 452, column: 60, scope: !10370)
!10383 = !DILocation(line: 455, column: 32, scope: !10370)
!10384 = !DILocation(line: 455, column: 22, scope: !10370)
!10385 = !DILocation(line: 455, column: 95, scope: !10370)
!10386 = !DILocation(line: 455, column: 76, scope: !10370)
!10387 = !DILocation(line: 455, column: 118, scope: !10370)
!10388 = !DILocation(line: 455, column: 74, scope: !10370)
!10389 = !DILocation(line: 455, column: 106, scope: !10370)
!10390 = !DILocation(line: 457, column: 14, scope: !10370)
!10391 = !DILocation(line: 459, column: 16, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10370, file: !1994, line: 459, column: 9)
!10393 = !DILocation(line: 463, column: 1, scope: !10370)
!10394 = distinct !DISubprogram(name: "NOR_ProgramPhysicalPage", scope: !1994, file: !1994, line: 466, type: !10371, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10395)
!10395 = !{!10396, !10397, !10398, !10399, !10400, !10401, !10402}
!10396 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10394, file: !1994, line: 466, type: !61)
!10397 = !DILocalVariable(name: "page_idx", arg: 2, scope: !10394, file: !1994, line: 466, type: !61)
!10398 = !DILocalVariable(name: "data_ptr", arg: 3, scope: !10394, file: !1994, line: 466, type: !762)
!10399 = !DILocalVariable(name: "D", scope: !10394, file: !1994, line: 468, type: !10112)
!10400 = !DILocalVariable(name: "mtdData", scope: !10394, file: !1994, line: 469, type: !2002)
!10401 = !DILocalVariable(name: "result", scope: !10394, file: !1994, line: 470, type: !1091)
!10402 = !DILocalVariable(name: "addr", scope: !10394, file: !1994, line: 472, type: !61)
!10403 = !DILocation(line: 0, scope: !10394)
!10404 = !DILocation(line: 469, column: 60, scope: !10394)
!10405 = !DILocation(line: 472, column: 32, scope: !10394)
!10406 = !DILocation(line: 472, column: 22, scope: !10394)
!10407 = !DILocation(line: 472, column: 95, scope: !10394)
!10408 = !DILocation(line: 472, column: 76, scope: !10394)
!10409 = !DILocation(line: 472, column: 118, scope: !10394)
!10410 = !DILocation(line: 472, column: 74, scope: !10394)
!10411 = !DILocation(line: 472, column: 106, scope: !10394)
!10412 = !DILocation(line: 474, column: 14, scope: !10394)
!10413 = !DILocation(line: 475, column: 16, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10394, file: !1994, line: 475, column: 9)
!10415 = !DILocation(line: 479, column: 1, scope: !10394)
!10416 = distinct !DISubprogram(name: "NOR_ErasePhysicalBlock", scope: !1994, file: !1994, line: 481, type: !10417, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10419)
!10417 = !DISubroutineType(types: !10418)
!10418 = !{!1091, !61}
!10419 = !{!10420, !10421}
!10420 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10416, file: !1994, line: 481, type: !61)
!10421 = !DILocalVariable(name: "result", scope: !10416, file: !1994, line: 483, type: !1091)
!10422 = !DILocation(line: 0, scope: !10416)
!10423 = !DILocation(line: 484, column: 14, scope: !10416)
!10424 = !DILocation(line: 485, column: 16, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10416, file: !1994, line: 485, column: 9)
!10426 = !DILocation(line: 489, column: 1, scope: !10416)
!10427 = distinct !DISubprogram(name: "NOR_BlockSize", scope: !1994, file: !1994, line: 492, type: !3688, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10428)
!10428 = !{!10429, !10430, !10431}
!10429 = !DILocalVariable(name: "block_idx", arg: 1, scope: !10427, file: !1994, line: 492, type: !61)
!10430 = !DILocalVariable(name: "D", scope: !10427, file: !1994, line: 494, type: !10112)
!10431 = !DILocalVariable(name: "mtdData", scope: !10427, file: !1994, line: 495, type: !2002)
!10432 = !DILocation(line: 0, scope: !10427)
!10433 = !DILocation(line: 495, column: 60, scope: !10427)
!10434 = !DILocation(line: 496, column: 12, scope: !10427)
!10435 = !DILocation(line: 496, column: 5, scope: !10427)
!10436 = distinct !DISubprogram(name: "NOR_BlockIndex", scope: !1994, file: !1994, line: 499, type: !3688, scopeLine: 500, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10437)
!10437 = !{!10438, !10439, !10440}
!10438 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10436, file: !1994, line: 499, type: !61)
!10439 = !DILocalVariable(name: "D", scope: !10436, file: !1994, line: 501, type: !10112)
!10440 = !DILocalVariable(name: "mtdData", scope: !10436, file: !1994, line: 502, type: !2002)
!10441 = !DILocation(line: 0, scope: !10436)
!10442 = !DILocation(line: 502, column: 60, scope: !10436)
!10443 = !DILocation(line: 504, column: 12, scope: !10436)
!10444 = !DILocation(line: 504, column: 5, scope: !10436)
!10445 = distinct !DISubprogram(name: "NOR_Addr2BlockIndexOffset", scope: !1994, file: !1994, line: 510, type: !10446, scopeLine: 511, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10448)
!10446 = !DISubroutineType(types: !10447)
!10447 = !{!1091, !61, !1153, !1153}
!10448 = !{!10449, !10450, !10451, !10452, !10453}
!10449 = !DILocalVariable(name: "block_addr", arg: 1, scope: !10445, file: !1994, line: 510, type: !61)
!10450 = !DILocalVariable(name: "block_index", arg: 2, scope: !10445, file: !1994, line: 510, type: !1153)
!10451 = !DILocalVariable(name: "offset", arg: 3, scope: !10445, file: !1994, line: 510, type: !1153)
!10452 = !DILocalVariable(name: "D", scope: !10445, file: !1994, line: 512, type: !10112)
!10453 = !DILocalVariable(name: "mtdData", scope: !10445, file: !1994, line: 513, type: !2002)
!10454 = !DILocation(line: 0, scope: !10445)
!10455 = !DILocation(line: 513, column: 60, scope: !10445)
!10456 = !DILocation(line: 519, column: 20, scope: !10445)
!10457 = !DILocation(line: 519, column: 18, scope: !10445)
!10458 = !DILocation(line: 520, column: 22, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10445, file: !1994, line: 520, column: 9)
!10460 = !DILocation(line: 520, column: 9, scope: !10445)
!10461 = !DILocation(line: 524, column: 28, scope: !10445)
!10462 = !DILocation(line: 524, column: 26, scope: !10445)
!10463 = !DILocation(line: 524, column: 13, scope: !10445)
!10464 = !DILocation(line: 526, column: 5, scope: !10445)
!10465 = !DILocation(line: 527, column: 1, scope: !10445)
!10466 = distinct !DISubprogram(name: "NOR_BlockIndexOffset2Addr", scope: !1994, file: !1994, line: 532, type: !10467, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10469)
!10467 = !DISubroutineType(types: !10468)
!10468 = !{!1091, !61, !61, !1153}
!10469 = !{!10470, !10471, !10472, !10473, !10474}
!10470 = !DILocalVariable(name: "block_index", arg: 1, scope: !10466, file: !1994, line: 532, type: !61)
!10471 = !DILocalVariable(name: "offset", arg: 2, scope: !10466, file: !1994, line: 532, type: !61)
!10472 = !DILocalVariable(name: "addr", arg: 3, scope: !10466, file: !1994, line: 532, type: !1153)
!10473 = !DILocalVariable(name: "D", scope: !10466, file: !1994, line: 534, type: !10112)
!10474 = !DILocalVariable(name: "mtdData", scope: !10466, file: !1994, line: 535, type: !2002)
!10475 = !DILocation(line: 0, scope: !10466)
!10476 = !DILocation(line: 535, column: 60, scope: !10466)
!10477 = !DILocation(line: 537, column: 23, scope: !10466)
!10478 = !DILocation(line: 537, column: 13, scope: !10466)
!10479 = !DILocation(line: 537, column: 79, scope: !10466)
!10480 = !DILocation(line: 537, column: 60, scope: !10466)
!10481 = !DILocation(line: 537, column: 58, scope: !10466)
!10482 = !DILocation(line: 537, column: 88, scope: !10466)
!10483 = !DILocation(line: 537, column: 11, scope: !10466)
!10484 = !DILocation(line: 539, column: 5, scope: !10466)
!10485 = distinct !DISubprogram(name: "get_rawdisk_error_code", scope: !1994, file: !1994, line: 545, type: !10486, scopeLine: 546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10488)
!10486 = !DISubroutineType(types: !10487)
!10487 = !{!2050, !1091}
!10488 = !{!10489}
!10489 = !DILocalVariable(name: "ori_err_code", arg: 1, scope: !10485, file: !1994, line: 545, type: !1091)
!10490 = !DILocation(line: 0, scope: !10485)
!10491 = !DILocation(line: 547, column: 9, scope: !10485)
!10492 = !DILocation(line: 558, column: 9, scope: !10493)
!10493 = distinct !DILexicalBlock(scope: !10494, file: !1994, line: 558, column: 9)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !1994, line: 558, column: 9)
!10495 = distinct !DILexicalBlock(scope: !10496, file: !1994, line: 558, column: 9)
!10496 = distinct !DILexicalBlock(scope: !10497, file: !1994, line: 557, column: 12)
!10497 = distinct !DILexicalBlock(scope: !10498, file: !1994, line: 555, column: 16)
!10498 = distinct !DILexicalBlock(scope: !10499, file: !1994, line: 553, column: 16)
!10499 = distinct !DILexicalBlock(scope: !10500, file: !1994, line: 551, column: 16)
!10500 = distinct !DILexicalBlock(scope: !10501, file: !1994, line: 549, column: 16)
!10501 = distinct !DILexicalBlock(scope: !10485, file: !1994, line: 547, column: 9)
!10502 = !DILocation(line: 560, column: 1, scope: !10485)
!10503 = distinct !DISubprogram(name: "get_block_size_from_address", scope: !1994, file: !1994, line: 561, type: !10504, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10507)
!10504 = !DISubroutineType(types: !10505)
!10505 = !{!10506, !61}
!10506 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_flash_block_t", file: !1331, line: 127, baseType: !1996)
!10507 = !{!10508, !10509, !10510}
!10508 = !DILocalVariable(name: "address", arg: 1, scope: !10503, file: !1994, line: 561, type: !61)
!10509 = !DILocalVariable(name: "block_size", scope: !10503, file: !1994, line: 563, type: !61)
!10510 = !DILocalVariable(name: "block_index", scope: !10503, file: !1994, line: 564, type: !61)
!10511 = !DILocation(line: 0, scope: !10503)
!10512 = !DILocation(line: 566, column: 19, scope: !10503)
!10513 = !DILocation(line: 567, column: 21, scope: !10514)
!10514 = distinct !DILexicalBlock(scope: !10503, file: !1994, line: 567, column: 9)
!10515 = !DILocation(line: 567, column: 9, scope: !10503)
!10516 = !DILocation(line: 568, column: 9, scope: !10517)
!10517 = distinct !DILexicalBlock(scope: !10518, file: !1994, line: 568, column: 9)
!10518 = distinct !DILexicalBlock(scope: !10519, file: !1994, line: 568, column: 9)
!10519 = distinct !DILexicalBlock(scope: !10520, file: !1994, line: 568, column: 9)
!10520 = distinct !DILexicalBlock(scope: !10514, file: !1994, line: 567, column: 45)
!10521 = !DILocation(line: 570, column: 18, scope: !10503)
!10522 = !DILocation(line: 571, column: 9, scope: !10503)
!10523 = !DILocation(line: 574, column: 9, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10525, file: !1994, line: 573, column: 38)
!10525 = distinct !DILexicalBlock(scope: !10526, file: !1994, line: 573, column: 16)
!10526 = distinct !DILexicalBlock(scope: !10503, file: !1994, line: 571, column: 9)
!10527 = !DILocation(line: 576, column: 9, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10529, file: !1994, line: 575, column: 39)
!10529 = distinct !DILexicalBlock(scope: !10525, file: !1994, line: 575, column: 16)
!10530 = !DILocation(line: 578, column: 9, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10532, file: !1994, line: 578, column: 9)
!10532 = distinct !DILexicalBlock(scope: !10533, file: !1994, line: 578, column: 9)
!10533 = distinct !DILexicalBlock(scope: !10534, file: !1994, line: 578, column: 9)
!10534 = distinct !DILexicalBlock(scope: !10529, file: !1994, line: 577, column: 12)
!10535 = !DILocation(line: 0, scope: !10526)
!10536 = !DILocation(line: 580, column: 1, scope: !10503)
!10537 = distinct !DISubprogram(name: "hal_flash_init", scope: !1994, file: !1994, line: 583, type: !8229, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!10538 = !DILocation(line: 585, column: 5, scope: !10537)
!10539 = !DILocation(line: 586, column: 5, scope: !10537)
!10540 = distinct !DISubprogram(name: "hal_flash_deinit", scope: !1994, file: !1994, line: 589, type: !8229, scopeLine: 590, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !293)
!10541 = !DILocation(line: 591, column: 5, scope: !10540)
!10542 = distinct !DISubprogram(name: "hal_flash_erase", scope: !1994, file: !1994, line: 595, type: !10543, scopeLine: 596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10545)
!10543 = !DISubroutineType(types: !10544)
!10544 = !{!2050, !61, !10506}
!10545 = !{!10546, !10547, !10548, !10549, !10550}
!10546 = !DILocalVariable(name: "start_address", arg: 1, scope: !10542, file: !1994, line: 595, type: !61)
!10547 = !DILocalVariable(name: "block", arg: 2, scope: !10542, file: !1994, line: 595, type: !10506)
!10548 = !DILocalVariable(name: "result", scope: !10542, file: !1994, line: 597, type: !1091)
!10549 = !DILocalVariable(name: "block_index", scope: !10542, file: !1994, line: 598, type: !61)
!10550 = !DILocalVariable(name: "erase_type", scope: !10542, file: !1994, line: 599, type: !61)
!10551 = !DILocation(line: 0, scope: !10542)
!10552 = !DILocation(line: 601, column: 9, scope: !10542)
!10553 = !DILocation(line: 602, column: 28, scope: !10554)
!10554 = distinct !DILexicalBlock(scope: !10555, file: !1994, line: 602, column: 13)
!10555 = distinct !DILexicalBlock(scope: !10556, file: !1994, line: 601, column: 38)
!10556 = distinct !DILexicalBlock(scope: !10542, file: !1994, line: 601, column: 9)
!10557 = !DILocation(line: 602, column: 37, scope: !10554)
!10558 = !DILocation(line: 602, column: 13, scope: !10555)
!10559 = !DILocation(line: 607, column: 28, scope: !10560)
!10560 = distinct !DILexicalBlock(scope: !10561, file: !1994, line: 607, column: 13)
!10561 = distinct !DILexicalBlock(scope: !10562, file: !1994, line: 606, column: 46)
!10562 = distinct !DILexicalBlock(scope: !10556, file: !1994, line: 606, column: 16)
!10563 = !DILocation(line: 607, column: 38, scope: !10560)
!10564 = !DILocation(line: 607, column: 13, scope: !10561)
!10565 = !DILocation(line: 612, column: 28, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10567, file: !1994, line: 612, column: 13)
!10567 = distinct !DILexicalBlock(scope: !10568, file: !1994, line: 611, column: 46)
!10568 = distinct !DILexicalBlock(scope: !10562, file: !1994, line: 611, column: 16)
!10569 = !DILocation(line: 612, column: 38, scope: !10566)
!10570 = !DILocation(line: 612, column: 13, scope: !10567)
!10571 = !DILocation(line: 0, scope: !10556)
!10572 = !DILocation(line: 621, column: 19, scope: !10542)
!10573 = !DILocation(line: 622, column: 21, scope: !10574)
!10574 = distinct !DILexicalBlock(scope: !10542, file: !1994, line: 622, column: 9)
!10575 = !DILocation(line: 622, column: 9, scope: !10542)
!10576 = !DILocation(line: 626, column: 17, scope: !10542)
!10577 = !DILocation(line: 627, column: 14, scope: !10542)
!10578 = !DILocation(line: 628, column: 16, scope: !10579)
!10579 = distinct !DILexicalBlock(scope: !10542, file: !1994, line: 628, column: 9)
!10580 = !DILocation(line: 628, column: 9, scope: !10542)
!10581 = !DILocation(line: 629, column: 16, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10579, file: !1994, line: 628, column: 38)
!10583 = !DILocation(line: 629, column: 9, scope: !10582)
!10584 = !DILocation(line: 632, column: 1, scope: !10542)
!10585 = distinct !DISubprogram(name: "hal_flash_read", scope: !1994, file: !1994, line: 634, type: !10586, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10588)
!10586 = !DISubroutineType(types: !10587)
!10587 = !{!2050, !61, !762, !61}
!10588 = !{!10589, !10590, !10591, !10592, !10593}
!10589 = !DILocalVariable(name: "start_address", arg: 1, scope: !10585, file: !1994, line: 634, type: !61)
!10590 = !DILocalVariable(name: "buffer", arg: 2, scope: !10585, file: !1994, line: 634, type: !762)
!10591 = !DILocalVariable(name: "length", arg: 3, scope: !10585, file: !1994, line: 634, type: !61)
!10592 = !DILocalVariable(name: "D", scope: !10585, file: !1994, line: 636, type: !10112)
!10593 = !DILocalVariable(name: "result", scope: !10585, file: !1994, line: 637, type: !1091)
!10594 = !DILocation(line: 0, scope: !10585)
!10595 = !DILocation(line: 639, column: 14, scope: !10585)
!10596 = !DILocation(line: 641, column: 16, scope: !10597)
!10597 = distinct !DILexicalBlock(scope: !10585, file: !1994, line: 641, column: 9)
!10598 = !DILocation(line: 641, column: 9, scope: !10585)
!10599 = !DILocation(line: 642, column: 16, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10597, file: !1994, line: 641, column: 38)
!10601 = !DILocation(line: 642, column: 9, scope: !10600)
!10602 = !DILocation(line: 645, column: 1, scope: !10585)
!10603 = distinct !DISubprogram(name: "hal_flash_write", scope: !1994, file: !1994, line: 647, type: !10604, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !1993, retainedNodes: !10606)
!10604 = !DISubroutineType(types: !10605)
!10605 = !{!2050, !61, !5069, !61}
!10606 = !{!10607, !10608, !10609, !10610, !10611, !10612}
!10607 = !DILocalVariable(name: "address", arg: 1, scope: !10603, file: !1994, line: 647, type: !61)
!10608 = !DILocalVariable(name: "data", arg: 2, scope: !10603, file: !1994, line: 647, type: !5069)
!10609 = !DILocalVariable(name: "length", arg: 3, scope: !10603, file: !1994, line: 647, type: !61)
!10610 = !DILocalVariable(name: "D", scope: !10603, file: !1994, line: 649, type: !10112)
!10611 = !DILocalVariable(name: "result", scope: !10603, file: !1994, line: 650, type: !1091)
!10612 = !DILocalVariable(name: "addr", scope: !10613, file: !1994, line: 660, type: !61)
!10613 = distinct !DILexicalBlock(scope: !10614, file: !1994, line: 659, column: 40)
!10614 = distinct !DILexicalBlock(scope: !10603, file: !1994, line: 659, column: 8)
!10615 = !DILocation(line: 0, scope: !10603)
!10616 = !DILocation(line: 652, column: 14, scope: !10603)
!10617 = !DILocation(line: 653, column: 16, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10603, file: !1994, line: 653, column: 9)
!10619 = !DILocation(line: 653, column: 9, scope: !10603)
!10620 = !DILocation(line: 654, column: 16, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10618, file: !1994, line: 653, column: 38)
!10622 = !DILocation(line: 654, column: 9, scope: !10621)
!10623 = !DILocation(line: 659, column: 8, scope: !10614)
!10624 = !DILocation(line: 659, column: 8, scope: !10603)
!10625 = !DILocation(line: 661, column: 25, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10613, file: !1994, line: 661, column: 8)
!10627 = !DILocation(line: 0, scope: !10613)
!10628 = !DILocation(line: 661, column: 58, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10626, file: !1994, line: 661, column: 8)
!10630 = !DILocation(line: 661, column: 8, scope: !10626)
!10631 = !DILocation(line: 662, column: 13, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10629, file: !1994, line: 661, column: 147)
!10633 = !DILocation(line: 661, column: 128, scope: !10629)
!10634 = distinct !{!10634, !10630, !10635}
!10635 = !DILocation(line: 663, column: 8, scope: !10626)
!10636 = !DILocation(line: 668, column: 1, scope: !10603)
!10637 = distinct !DISubprogram(name: "BlockAddress", scope: !2055, file: !2055, line: 111, type: !10638, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !10640)
!10638 = !DISubroutineType(types: !10639)
!10639 = !{!88, !88, !61}
!10640 = !{!10641, !10642, !10643, !10644, !10645, !10646}
!10641 = !DILocalVariable(name: "DriverData", arg: 1, scope: !10637, file: !2055, line: 111, type: !88)
!10642 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10637, file: !2055, line: 111, type: !61)
!10643 = !DILocalVariable(name: "D", scope: !10637, file: !2055, line: 113, type: !2083)
!10644 = !DILocalVariable(name: "addr", scope: !10637, file: !2055, line: 114, type: !61)
!10645 = !DILocalVariable(name: "region", scope: !10637, file: !2055, line: 115, type: !61)
!10646 = !DILocalVariable(name: "BlockUpperBound", scope: !10637, file: !2055, line: 115, type: !61)
!10647 = !DILocation(line: 0, scope: !10637)
!10648 = !DILocation(line: 117, column: 26, scope: !10637)
!10649 = !DILocation(line: 117, column: 40, scope: !10637)
!10650 = !DILocation(line: 118, column: 28, scope: !10637)
!10651 = !DILocation(line: 118, column: 5, scope: !10637)
!10652 = !DILocation(line: 119, column: 39, scope: !10653)
!10653 = distinct !DILexicalBlock(scope: !10637, file: !2055, line: 118, column: 43)
!10654 = !DILocation(line: 119, column: 76, scope: !10653)
!10655 = !DILocation(line: 119, column: 52, scope: !10653)
!10656 = !DILocation(line: 119, column: 14, scope: !10653)
!10657 = !DILocation(line: 120, column: 15, scope: !10653)
!10658 = !DILocation(line: 121, column: 50, scope: !10653)
!10659 = !DILocation(line: 121, column: 25, scope: !10653)
!10660 = distinct !{!10660, !10651, !10661}
!10661 = !DILocation(line: 122, column: 5, scope: !10637)
!10662 = !DILocation(line: 123, column: 68, scope: !10637)
!10663 = !DILocation(line: 123, column: 44, scope: !10637)
!10664 = !DILocation(line: 123, column: 25, scope: !10637)
!10665 = !DILocation(line: 123, column: 107, scope: !10637)
!10666 = !DILocation(line: 123, column: 83, scope: !10637)
!10667 = !DILocation(line: 123, column: 10, scope: !10637)
!10668 = !DILocation(line: 125, column: 16, scope: !10637)
!10669 = !DILocation(line: 125, column: 25, scope: !10637)
!10670 = !DILocation(line: 125, column: 5, scope: !10637)
!10671 = distinct !DISubprogram(name: "MapWindow", scope: !2055, file: !2055, line: 180, type: !1688, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !10672)
!10672 = !{!10673, !10674, !10675, !10676}
!10673 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10671, file: !2055, line: 180, type: !88)
!10674 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10671, file: !2055, line: 180, type: !61)
!10675 = !DILocalVariable(name: "WindowIndex", arg: 3, scope: !10671, file: !2055, line: 180, type: !61)
!10676 = !DILocalVariable(name: "D", scope: !10671, file: !2055, line: 182, type: !2083)
!10677 = !DILocation(line: 0, scope: !10671)
!10678 = !DILocation(line: 185, column: 5, scope: !10679)
!10679 = distinct !DILexicalBlock(scope: !10680, file: !2055, line: 185, column: 5)
!10680 = distinct !DILexicalBlock(scope: !10671, file: !2055, line: 185, column: 5)
!10681 = !DILocation(line: 185, column: 5, scope: !10680)
!10682 = !DILocation(line: 185, column: 5, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10679, file: !2055, line: 185, column: 5)
!10684 = !DILocation(line: 186, column: 27, scope: !10671)
!10685 = !DILocation(line: 186, column: 19, scope: !10671)
!10686 = !DILocation(line: 186, column: 8, scope: !10671)
!10687 = !DILocation(line: 186, column: 17, scope: !10671)
!10688 = !DILocation(line: 188, column: 5, scope: !10671)
!10689 = !DILocation(line: 0, scope: !2076)
!10690 = !DILocation(line: 142, column: 12, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !2076, file: !2055, line: 142, column: 9)
!10692 = !DILocation(line: 142, column: 34, scope: !10691)
!10693 = !DILocation(line: 142, column: 64, scope: !10691)
!10694 = !DILocation(line: 142, column: 75, scope: !10691)
!10695 = !DILocation(line: 142, column: 9, scope: !2076)
!10696 = !DILocation(line: 143, column: 79, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10698, file: !2055, line: 143, column: 13)
!10698 = distinct !DILexicalBlock(scope: !10691, file: !2055, line: 142, column: 99)
!10699 = !DILocation(line: 143, column: 13, scope: !10698)
!10700 = !DILocation(line: 144, column: 72, scope: !10701)
!10701 = distinct !DILexicalBlock(scope: !10702, file: !2055, line: 144, column: 17)
!10702 = distinct !DILexicalBlock(scope: !10697, file: !2055, line: 143, column: 94)
!10703 = !DILocation(line: 144, column: 83, scope: !10701)
!10704 = !DILocation(line: 144, column: 17, scope: !10702)
!10705 = !DILocation(line: 145, column: 87, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10707, file: !2055, line: 145, column: 21)
!10707 = distinct !DILexicalBlock(scope: !10701, file: !2055, line: 144, column: 107)
!10708 = !DILocation(line: 145, column: 21, scope: !10707)
!10709 = !DILocation(line: 146, column: 33, scope: !10710)
!10710 = distinct !DILexicalBlock(scope: !10706, file: !2055, line: 145, column: 102)
!10711 = !DILocation(line: 147, column: 25, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10710, file: !2055, line: 147, column: 25)
!10713 = !DILocation(line: 147, column: 62, scope: !10712)
!10714 = !DILocation(line: 147, column: 34, scope: !10712)
!10715 = !DILocation(line: 147, column: 25, scope: !10710)
!10716 = !DILocation(line: 148, column: 91, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10712, file: !2055, line: 147, column: 106)
!10718 = !DILocation(line: 149, column: 111, scope: !10717)
!10719 = !DILocation(line: 149, column: 101, scope: !10717)
!10720 = !DILocation(line: 149, column: 87, scope: !10717)
!10721 = !DILocation(line: 149, column: 99, scope: !10717)
!10722 = !DILocation(line: 150, column: 37, scope: !10717)
!10723 = !DILocation(line: 150, column: 34, scope: !10717)
!10724 = !DILocation(line: 151, column: 21, scope: !10717)
!10725 = !DILocation(line: 152, column: 91, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10712, file: !2055, line: 151, column: 28)
!10727 = !DILocation(line: 153, column: 111, scope: !10726)
!10728 = !DILocation(line: 153, column: 101, scope: !10726)
!10729 = !DILocation(line: 153, column: 87, scope: !10726)
!10730 = !DILocation(line: 153, column: 99, scope: !10726)
!10731 = !DILocation(line: 154, column: 34, scope: !10726)
!10732 = !DILocation(line: 157, column: 32, scope: !10733)
!10733 = distinct !DILexicalBlock(scope: !10706, file: !2055, line: 156, column: 24)
!10734 = !DILocation(line: 158, column: 83, scope: !10733)
!10735 = !DILocation(line: 159, column: 60, scope: !10733)
!10736 = !DILocation(line: 159, column: 33, scope: !10733)
!10737 = !DILocation(line: 159, column: 30, scope: !10733)
!10738 = !DILocation(line: 162, column: 29, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10701, file: !2055, line: 161, column: 20)
!10740 = !DILocation(line: 163, column: 83, scope: !10739)
!10741 = !DILocation(line: 164, column: 103, scope: !10739)
!10742 = !DILocation(line: 164, column: 93, scope: !10739)
!10743 = !DILocation(line: 164, column: 79, scope: !10739)
!10744 = !DILocation(line: 164, column: 91, scope: !10739)
!10745 = !DILocation(line: 165, column: 56, scope: !10739)
!10746 = !DILocation(line: 165, column: 29, scope: !10739)
!10747 = !DILocation(line: 165, column: 26, scope: !10739)
!10748 = !DILocation(line: 168, column: 24, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10697, file: !2055, line: 167, column: 16)
!10750 = !DILocation(line: 169, column: 75, scope: !10749)
!10751 = !DILocation(line: 170, column: 50, scope: !10749)
!10752 = !DILocation(line: 170, column: 22, scope: !10749)
!10753 = !DILocation(line: 173, column: 21, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10691, file: !2055, line: 172, column: 12)
!10755 = !DILocation(line: 174, column: 75, scope: !10754)
!10756 = !DILocation(line: 175, column: 95, scope: !10754)
!10757 = !DILocation(line: 175, column: 85, scope: !10754)
!10758 = !DILocation(line: 175, column: 71, scope: !10754)
!10759 = !DILocation(line: 175, column: 83, scope: !10754)
!10760 = !DILocation(line: 176, column: 46, scope: !10754)
!10761 = !DILocation(line: 176, column: 18, scope: !10754)
!10762 = !DILocation(line: 0, scope: !10691)
!10763 = !DILocation(line: 178, column: 5, scope: !2076)
!10764 = distinct !DISubprogram(name: "BlockSize", scope: !2055, file: !2055, line: 191, type: !2077, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !10765)
!10765 = !{!10766, !10767, !10768, !10769, !10770}
!10766 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10764, file: !2055, line: 191, type: !88)
!10767 = !DILocalVariable(name: "BlockIndex", arg: 2, scope: !10764, file: !2055, line: 191, type: !61)
!10768 = !DILocalVariable(name: "D", scope: !10764, file: !2055, line: 193, type: !2083)
!10769 = !DILocalVariable(name: "region", scope: !10764, file: !2055, line: 194, type: !61)
!10770 = !DILocalVariable(name: "BlockUpperBound", scope: !10764, file: !2055, line: 194, type: !61)
!10771 = !DILocation(line: 0, scope: !10764)
!10772 = !DILocation(line: 196, column: 26, scope: !10764)
!10773 = !DILocation(line: 196, column: 45, scope: !10764)
!10774 = !DILocation(line: 197, column: 28, scope: !10764)
!10775 = !DILocation(line: 197, column: 5, scope: !10764)
!10776 = !DILocation(line: 198, column: 15, scope: !10777)
!10777 = distinct !DILexicalBlock(scope: !10764, file: !2055, line: 197, column: 43)
!10778 = !DILocation(line: 199, column: 50, scope: !10777)
!10779 = !DILocation(line: 199, column: 25, scope: !10777)
!10780 = distinct !{!10780, !10775, !10781}
!10781 = !DILocation(line: 200, column: 5, scope: !10764)
!10782 = !DILocation(line: 202, column: 35, scope: !10764)
!10783 = !DILocation(line: 202, column: 5, scope: !10764)
!10784 = distinct !DISubprogram(name: "BlockIndex", scope: !2055, file: !2055, line: 205, type: !2077, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !10785)
!10785 = !{!10786, !10787, !10788, !10789, !10790, !10791}
!10786 = !DILocalVariable(name: "DriveData", arg: 1, scope: !10784, file: !2055, line: 205, type: !88)
!10787 = !DILocalVariable(name: "blk_addr", arg: 2, scope: !10784, file: !2055, line: 205, type: !61)
!10788 = !DILocalVariable(name: "D", scope: !10784, file: !2055, line: 207, type: !2083)
!10789 = !DILocalVariable(name: "region", scope: !10784, file: !2055, line: 208, type: !61)
!10790 = !DILocalVariable(name: "BlockUpperAddr", scope: !10784, file: !2055, line: 208, type: !61)
!10791 = !DILocalVariable(name: "blk_idx", scope: !10784, file: !2055, line: 209, type: !61)
!10792 = !DILocation(line: 0, scope: !10784)
!10793 = !DILocation(line: 211, column: 25, scope: !10784)
!10794 = !DILocation(line: 211, column: 44, scope: !10784)
!10795 = !DILocation(line: 211, column: 81, scope: !10784)
!10796 = !DILocation(line: 211, column: 57, scope: !10784)
!10797 = !DILocation(line: 213, column: 28, scope: !10784)
!10798 = !DILocation(line: 213, column: 40, scope: !10784)
!10799 = !DILocation(line: 213, column: 66, scope: !10784)
!10800 = !DILocation(line: 213, column: 5, scope: !10784)
!10801 = !DILocation(line: 214, column: 17, scope: !10802)
!10802 = distinct !DILexicalBlock(scope: !10784, file: !2055, line: 213, column: 78)
!10803 = !DILocation(line: 215, column: 18, scope: !10802)
!10804 = !DILocation(line: 216, column: 15, scope: !10802)
!10805 = !DILocation(line: 217, column: 48, scope: !10802)
!10806 = !DILocation(line: 217, column: 85, scope: !10802)
!10807 = !DILocation(line: 217, column: 61, scope: !10802)
!10808 = distinct !{!10808, !10800, !10809}
!10809 = !DILocation(line: 218, column: 5, scope: !10784)
!10810 = !DILocation(line: 221, column: 53, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10812, file: !2055, line: 220, column: 37)
!10812 = distinct !DILexicalBlock(scope: !10784, file: !2055, line: 220, column: 9)
!10813 = !DILocation(line: 221, column: 29, scope: !10811)
!10814 = !DILocation(line: 221, column: 17, scope: !10811)
!10815 = !DILocation(line: 222, column: 5, scope: !10811)
!10816 = !DILocation(line: 0, scope: !10812)
!10817 = !DILocation(line: 225, column: 5, scope: !10784)
!10818 = distinct !DISubprogram(name: "get_ROM_BASE", scope: !2055, file: !2055, line: 232, type: !3940, scopeLine: 233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!10819 = !DILocation(line: 238, column: 5, scope: !10818)
!10820 = distinct !DISubprogram(name: "get_NOR_FLASH_BASE_ADDRESS", scope: !2055, file: !2055, line: 243, type: !3940, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!10821 = !DILocation(line: 245, column: 5, scope: !10820)
!10822 = distinct !DISubprogram(name: "get_Dual_NOR_FLASH_SIZE", scope: !2055, file: !2055, line: 249, type: !3940, scopeLine: 250, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!10823 = !DILocation(line: 254, column: 5, scope: !10822)
!10824 = distinct !DISubprogram(name: "get_NOR_ALLOCATED_FAT_SPACE", scope: !2055, file: !2055, line: 259, type: !3940, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !293)
!10825 = !DILocation(line: 261, column: 5, scope: !10824)
!10826 = distinct !DISubprogram(name: "DelayAWhile_UST", scope: !2055, file: !2055, line: 271, type: !6865, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2054, retainedNodes: !10827)
!10827 = !{!10828, !10829}
!10828 = !DILocalVariable(name: "delay", arg: 1, scope: !10826, file: !2055, line: 271, type: !61)
!10829 = !DILocalVariable(name: "ret", scope: !10826, file: !2055, line: 276, type: !3107)
!10830 = !DILocation(line: 0, scope: !10826)
!10831 = !DILocation(line: 277, column: 11, scope: !10826)
!10832 = !DILocation(line: 278, column: 13, scope: !10833)
!10833 = distinct !DILexicalBlock(scope: !10826, file: !2055, line: 278, column: 9)
!10834 = !DILocation(line: 278, column: 9, scope: !10826)
!10835 = !DILocation(line: 279, column: 9, scope: !10836)
!10836 = distinct !DILexicalBlock(scope: !10837, file: !2055, line: 279, column: 9)
!10837 = distinct !DILexicalBlock(scope: !10838, file: !2055, line: 279, column: 9)
!10838 = distinct !DILexicalBlock(scope: !10839, file: !2055, line: 279, column: 9)
!10839 = distinct !DILexicalBlock(scope: !10833, file: !2055, line: 278, column: 35)
!10840 = !DILocation(line: 282, column: 1, scope: !10826)
!10841 = distinct !DISubprogram(name: "log_hal_error_internal", scope: !2742, file: !2742, line: 58, type: !10842, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !10844)
!10842 = !DISubroutineType(types: !10843)
!10843 = !{null, !2376, !7, !2376, null}
!10844 = !{!10845, !10846, !10847, !10848, !10857}
!10845 = !DILocalVariable(name: "func", arg: 1, scope: !10841, file: !2742, line: 58, type: !2376)
!10846 = !DILocalVariable(name: "line", arg: 2, scope: !10841, file: !2742, line: 58, type: !7)
!10847 = !DILocalVariable(name: "message", arg: 3, scope: !10841, file: !2742, line: 58, type: !2376)
!10848 = !DILocalVariable(name: "ap", scope: !10841, file: !2742, line: 60, type: !10849)
!10849 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !10850, line: 46, baseType: !10851)
!10850 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/stdio.h", directory: "/home/mjshen/RTOSExploration")
!10851 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !10852, line: 32, baseType: !10853)
!10852 = !DIFile(filename: "/usr/lib/llvm-14/lib/clang/14.0.6/include/stdarg.h", directory: "")
!10853 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !2742, baseType: !10854)
!10854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list", size: 32, elements: !10855)
!10855 = !{!10856}
!10856 = !DIDerivedType(tag: DW_TAG_member, name: "__ap", scope: !10854, file: !2742, line: 60, baseType: !88, size: 32)
!10857 = !DILocalVariable(name: "mask", scope: !10841, file: !2742, line: 62, type: !61)
!10858 = !DILocation(line: 0, scope: !10841)
!10859 = !DILocation(line: 60, column: 5, scope: !10841)
!10860 = !DILocation(line: 60, column: 13, scope: !10841)
!10861 = !DILocation(line: 62, column: 5, scope: !10841)
!10862 = !DILocation(line: 63, column: 5, scope: !10841)
!10863 = !DILocation(line: 65, column: 5, scope: !10841)
!10864 = !DILocation(line: 66, column: 5, scope: !10841)
!10865 = !DILocation(line: 67, column: 5, scope: !10841)
!10866 = !DILocation(line: 69, column: 37, scope: !10841)
!10867 = !DILocation(line: 69, column: 5, scope: !10841)
!10868 = !DILocation(line: 71, column: 1, scope: !10841)
!10869 = distinct !DISubprogram(name: "log_hal_warning_internal", scope: !2742, file: !2742, line: 72, type: !10842, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !10870)
!10870 = !{!10871, !10872, !10873, !10874, !10875}
!10871 = !DILocalVariable(name: "func", arg: 1, scope: !10869, file: !2742, line: 72, type: !2376)
!10872 = !DILocalVariable(name: "line", arg: 2, scope: !10869, file: !2742, line: 72, type: !7)
!10873 = !DILocalVariable(name: "message", arg: 3, scope: !10869, file: !2742, line: 72, type: !2376)
!10874 = !DILocalVariable(name: "ap", scope: !10869, file: !2742, line: 74, type: !10849)
!10875 = !DILocalVariable(name: "mask", scope: !10869, file: !2742, line: 76, type: !61)
!10876 = !DILocation(line: 0, scope: !10869)
!10877 = !DILocation(line: 74, column: 5, scope: !10869)
!10878 = !DILocation(line: 74, column: 13, scope: !10869)
!10879 = !DILocation(line: 76, column: 5, scope: !10869)
!10880 = !DILocation(line: 77, column: 5, scope: !10869)
!10881 = !DILocation(line: 79, column: 5, scope: !10869)
!10882 = !DILocation(line: 80, column: 5, scope: !10869)
!10883 = !DILocation(line: 81, column: 5, scope: !10869)
!10884 = !DILocation(line: 83, column: 37, scope: !10869)
!10885 = !DILocation(line: 83, column: 5, scope: !10869)
!10886 = !DILocation(line: 85, column: 1, scope: !10869)
!10887 = distinct !DISubprogram(name: "log_hal_info_internal", scope: !2742, file: !2742, line: 86, type: !10842, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !10888)
!10888 = !{!10889, !10890, !10891, !10892, !10893}
!10889 = !DILocalVariable(name: "func", arg: 1, scope: !10887, file: !2742, line: 86, type: !2376)
!10890 = !DILocalVariable(name: "line", arg: 2, scope: !10887, file: !2742, line: 86, type: !7)
!10891 = !DILocalVariable(name: "message", arg: 3, scope: !10887, file: !2742, line: 86, type: !2376)
!10892 = !DILocalVariable(name: "ap", scope: !10887, file: !2742, line: 88, type: !10849)
!10893 = !DILocalVariable(name: "mask", scope: !10887, file: !2742, line: 90, type: !61)
!10894 = !DILocation(line: 0, scope: !10887)
!10895 = !DILocation(line: 88, column: 5, scope: !10887)
!10896 = !DILocation(line: 88, column: 13, scope: !10887)
!10897 = !DILocation(line: 90, column: 5, scope: !10887)
!10898 = !DILocation(line: 91, column: 5, scope: !10887)
!10899 = !DILocation(line: 93, column: 5, scope: !10887)
!10900 = !DILocation(line: 94, column: 5, scope: !10887)
!10901 = !DILocation(line: 95, column: 5, scope: !10887)
!10902 = !DILocation(line: 97, column: 37, scope: !10887)
!10903 = !DILocation(line: 97, column: 5, scope: !10887)
!10904 = !DILocation(line: 99, column: 1, scope: !10887)
!10905 = distinct !DISubprogram(name: "log_hal_dump_internal", scope: !2742, file: !2742, line: 101, type: !10906, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2741, retainedNodes: !10910)
!10906 = !DISubroutineType(types: !10907)
!10907 = !{null, !2376, !7, !2376, !10908, !7, null}
!10908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10909, size: 32)
!10909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!10910 = !{!10911, !10912, !10913, !10914, !10915}
!10911 = !DILocalVariable(name: "func", arg: 1, scope: !10905, file: !2742, line: 101, type: !2376)
!10912 = !DILocalVariable(name: "line", arg: 2, scope: !10905, file: !2742, line: 101, type: !7)
!10913 = !DILocalVariable(name: "message", arg: 3, scope: !10905, file: !2742, line: 101, type: !2376)
!10914 = !DILocalVariable(name: "data", arg: 4, scope: !10905, file: !2742, line: 101, type: !10908)
!10915 = !DILocalVariable(name: "length", arg: 5, scope: !10905, file: !2742, line: 101, type: !7)
!10916 = !DILocation(line: 0, scope: !10905)
!10917 = !DILocation(line: 103, column: 1, scope: !10905)
!10918 = distinct !DISubprogram(name: "__EMI_GetSR", scope: !2135, file: !2135, line: 87, type: !3688, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !10919)
!10919 = !{!10920, !10921}
!10920 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10918, file: !2135, line: 87, type: !61)
!10921 = !DILocalVariable(name: "value", scope: !10918, file: !2135, line: 89, type: !61)
!10922 = !DILocation(line: 0, scope: !10918)
!10923 = !DILocation(line: 91, column: 41, scope: !10918)
!10924 = !DILocation(line: 91, column: 5, scope: !10918)
!10925 = !DILocation(line: 91, column: 19, scope: !10918)
!10926 = !DILocation(line: 91, column: 31, scope: !10918)
!10927 = !DILocation(line: 92, column: 77, scope: !10918)
!10928 = !DILocation(line: 92, column: 60, scope: !10918)
!10929 = !DILocation(line: 92, column: 31, scope: !10918)
!10930 = !DILocation(line: 94, column: 5, scope: !10918)
!10931 = !DILocation(line: 94, column: 27, scope: !10918)
!10932 = !DILocation(line: 94, column: 39, scope: !10918)
!10933 = !DILocation(line: 94, column: 65, scope: !10918)
!10934 = distinct !{!10934, !10930, !10935}
!10935 = !DILocation(line: 94, column: 70, scope: !10918)
!10936 = !DILocation(line: 96, column: 29, scope: !10918)
!10937 = !DILocation(line: 96, column: 64, scope: !10918)
!10938 = !DILocation(line: 98, column: 5, scope: !10918)
!10939 = distinct !DISubprogram(name: "__EMI_SetSR", scope: !2135, file: !2135, line: 102, type: !10940, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !10942)
!10940 = !DISubroutineType(types: !10941)
!10941 = !{null, !61, !61}
!10942 = !{!10943, !10944}
!10943 = !DILocalVariable(name: "bank_no", arg: 1, scope: !10939, file: !2135, line: 102, type: !61)
!10944 = !DILocalVariable(name: "value", arg: 2, scope: !10939, file: !2135, line: 102, type: !61)
!10945 = !DILocation(line: 0, scope: !10939)
!10946 = !DILocation(line: 106, column: 40, scope: !10939)
!10947 = !DILocation(line: 106, column: 77, scope: !10939)
!10948 = !DILocation(line: 106, column: 102, scope: !10939)
!10949 = !DILocation(line: 106, column: 5, scope: !10939)
!10950 = !DILocation(line: 106, column: 19, scope: !10939)
!10951 = !DILocation(line: 106, column: 31, scope: !10939)
!10952 = !DILocation(line: 107, column: 77, scope: !10939)
!10953 = !DILocation(line: 107, column: 60, scope: !10939)
!10954 = !DILocation(line: 107, column: 31, scope: !10939)
!10955 = !DILocation(line: 109, column: 5, scope: !10939)
!10956 = !DILocation(line: 109, column: 27, scope: !10939)
!10957 = !DILocation(line: 109, column: 39, scope: !10939)
!10958 = !DILocation(line: 109, column: 65, scope: !10939)
!10959 = distinct !{!10959, !10955, !10960}
!10960 = !DILocation(line: 109, column: 70, scope: !10939)
!10961 = !DILocation(line: 111, column: 5, scope: !10939)
!10962 = distinct !DISubprogram(name: "__EMI_SetRegValfromCMCP", scope: !2135, file: !2135, line: 114, type: !291, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!10963 = !DILocation(line: 117, column: 36, scope: !10962)
!10964 = !DILocation(line: 117, column: 18, scope: !10962)
!10965 = !DILocation(line: 118, column: 37, scope: !10962)
!10966 = !DILocation(line: 118, column: 18, scope: !10962)
!10967 = !DILocation(line: 119, column: 37, scope: !10962)
!10968 = !DILocation(line: 119, column: 19, scope: !10962)
!10969 = !DILocation(line: 120, column: 37, scope: !10962)
!10970 = !DILocation(line: 120, column: 19, scope: !10962)
!10971 = !DILocation(line: 121, column: 37, scope: !10962)
!10972 = !DILocation(line: 121, column: 19, scope: !10962)
!10973 = !DILocation(line: 122, column: 37, scope: !10962)
!10974 = !DILocation(line: 122, column: 19, scope: !10962)
!10975 = !DILocation(line: 123, column: 37, scope: !10962)
!10976 = !DILocation(line: 123, column: 19, scope: !10962)
!10977 = !DILocation(line: 125, column: 37, scope: !10962)
!10978 = !DILocation(line: 125, column: 19, scope: !10962)
!10979 = !DILocation(line: 126, column: 37, scope: !10962)
!10980 = !DILocation(line: 126, column: 19, scope: !10962)
!10981 = !DILocation(line: 127, column: 37, scope: !10962)
!10982 = !DILocation(line: 127, column: 19, scope: !10962)
!10983 = !DILocation(line: 128, column: 37, scope: !10962)
!10984 = !DILocation(line: 128, column: 19, scope: !10962)
!10985 = !DILocation(line: 130, column: 36, scope: !10962)
!10986 = !DILocation(line: 130, column: 18, scope: !10962)
!10987 = !DILocation(line: 131, column: 36, scope: !10962)
!10988 = !DILocation(line: 131, column: 18, scope: !10962)
!10989 = !DILocation(line: 133, column: 5, scope: !10962)
!10990 = distinct !DISubprogram(name: "__EMI_EnableBandwidthLimiter", scope: !2135, file: !2135, line: 140, type: !10991, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!10991 = !DISubroutineType(types: !10992)
!10992 = !{!7}
!10993 = !DILocation(line: 144, column: 5, scope: !10990)
!10994 = !DILocation(line: 144, column: 19, scope: !10990)
!10995 = !DILocation(line: 144, column: 28, scope: !10990)
!10996 = !DILocation(line: 147, column: 19, scope: !10990)
!10997 = !DILocation(line: 147, column: 28, scope: !10990)
!10998 = !DILocation(line: 150, column: 19, scope: !10990)
!10999 = !DILocation(line: 150, column: 28, scope: !10990)
!11000 = !DILocation(line: 152, column: 5, scope: !10990)
!11001 = distinct !DISubprogram(name: "TestCase_MBIST", scope: !2135, file: !2135, line: 157, type: !7763, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11002)
!11002 = !{!11003, !11004, !11005, !11006, !11007, !11008}
!11003 = !DILocalVariable(name: "mbist_src", scope: !11001, file: !2135, line: 159, type: !61)
!11004 = !DILocalVariable(name: "mbist_len", scope: !11001, file: !2135, line: 159, type: !61)
!11005 = !DILocalVariable(name: "mbist_data", scope: !11001, file: !2135, line: 159, type: !3661)
!11006 = !DILocalVariable(name: "i", scope: !11001, file: !2135, line: 160, type: !61)
!11007 = !DILocalVariable(name: "bist_data_inv", scope: !11001, file: !2135, line: 160, type: !61)
!11008 = !DILocalVariable(name: "bist_data_random", scope: !11001, file: !2135, line: 160, type: !61)
!11009 = !DILocation(line: 159, column: 36, scope: !11001)
!11010 = !DILocation(line: 0, scope: !11001)
!11011 = !DILocation(line: 165, column: 5, scope: !11001)
!11012 = !DILocation(line: 165, column: 19, scope: !11001)
!11013 = !DILocation(line: 165, column: 30, scope: !11001)
!11014 = !DILocation(line: 166, column: 5, scope: !11015)
!11015 = distinct !DILexicalBlock(scope: !11001, file: !2135, line: 166, column: 5)
!11016 = !DILocation(line: 167, column: 9, scope: !11017)
!11017 = distinct !DILexicalBlock(scope: !11018, file: !2135, line: 167, column: 9)
!11018 = distinct !DILexicalBlock(scope: !11019, file: !2135, line: 166, column: 66)
!11019 = distinct !DILexicalBlock(scope: !11015, file: !2135, line: 166, column: 5)
!11020 = !DILocation(line: 168, column: 13, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11022, file: !2135, line: 168, column: 13)
!11022 = distinct !DILexicalBlock(scope: !11023, file: !2135, line: 167, column: 34)
!11023 = distinct !DILexicalBlock(scope: !11017, file: !2135, line: 167, column: 9)
!11024 = !DILocation(line: 168, column: 57, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11021, file: !2135, line: 168, column: 13)
!11026 = distinct !{!11026, !11020, !11027}
!11027 = !DILocation(line: 183, column: 13, scope: !11021)
!11028 = !DILocation(line: 170, column: 42, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11025, file: !2135, line: 168, column: 83)
!11030 = !DILocation(line: 172, column: 42, scope: !11029)
!11031 = !DILocation(line: 174, column: 45, scope: !11029)
!11032 = !DILocation(line: 174, column: 59, scope: !11029)
!11033 = !DILocation(line: 174, column: 154, scope: !11029)
!11034 = !DILocation(line: 174, column: 87, scope: !11029)
!11035 = !DILocation(line: 174, column: 134, scope: !11029)
!11036 = !DILocation(line: 174, column: 42, scope: !11029)
!11037 = !DILocation(line: 175, column: 42, scope: !11029)
!11038 = !DILocation(line: 177, column: 17, scope: !11029)
!11039 = !DILocation(line: 177, column: 39, scope: !11029)
!11040 = !DILocation(line: 177, column: 50, scope: !11029)
!11041 = !DILocation(line: 177, column: 71, scope: !11029)
!11042 = distinct !{!11042, !11038, !11043}
!11043 = !DILocation(line: 177, column: 78, scope: !11029)
!11044 = !DILocation(line: 179, column: 36, scope: !11045)
!11045 = distinct !DILexicalBlock(scope: !11029, file: !2135, line: 179, column: 21)
!11046 = !DILocation(line: 179, column: 47, scope: !11045)
!11047 = !DILocation(line: 179, column: 69, scope: !11045)
!11048 = !DILocation(line: 168, column: 79, scope: !11025)
!11049 = !DILocation(line: 179, column: 21, scope: !11029)
!11050 = !DILocation(line: 167, column: 30, scope: !11023)
!11051 = !DILocation(line: 167, column: 23, scope: !11023)
!11052 = distinct !{!11052, !11016, !11053}
!11053 = !DILocation(line: 184, column: 9, scope: !11017)
!11054 = !DILocation(line: 166, column: 62, scope: !11019)
!11055 = !DILocation(line: 166, column: 43, scope: !11019)
!11056 = distinct !{!11056, !11014, !11057}
!11057 = !DILocation(line: 185, column: 5, scope: !11015)
!11058 = !DILocation(line: 189, column: 1, scope: !11001)
!11059 = distinct !DISubprogram(name: "__EMI_DataAutoTrackingMbistTest", scope: !2135, file: !2135, line: 190, type: !7763, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11060 = !DILocation(line: 192, column: 9, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11059, file: !2135, line: 192, column: 9)
!11062 = !DILocation(line: 192, column: 26, scope: !11061)
!11063 = !DILocation(line: 0, scope: !11059)
!11064 = !DILocation(line: 197, column: 1, scope: !11059)
!11065 = distinct !DISubprogram(name: "__EMI_EnableDataAutoTracking", scope: !2135, file: !2135, line: 201, type: !291, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11066)
!11066 = !{!11067, !11068}
!11067 = !DILocalVariable(name: "dqy_in_del", scope: !11065, file: !2135, line: 203, type: !1091)
!11068 = !DILocalVariable(name: "dqs_in_del", scope: !11065, file: !2135, line: 204, type: !1091)
!11069 = !DILocation(line: 0, scope: !11065)
!11070 = !DILocation(line: 206, column: 5, scope: !11065)
!11071 = !DILocation(line: 206, column: 19, scope: !11065)
!11072 = !DILocation(line: 206, column: 28, scope: !11065)
!11073 = !DILocation(line: 207, column: 19, scope: !11065)
!11074 = !DILocation(line: 207, column: 28, scope: !11065)
!11075 = !DILocation(line: 208, column: 19, scope: !11065)
!11076 = !DILocation(line: 208, column: 28, scope: !11065)
!11077 = !DILocation(line: 209, column: 19, scope: !11065)
!11078 = !DILocation(line: 209, column: 28, scope: !11065)
!11079 = !DILocation(line: 212, column: 23, scope: !11080)
!11080 = distinct !DILexicalBlock(scope: !11081, file: !2135, line: 211, column: 78)
!11081 = distinct !DILexicalBlock(scope: !11082, file: !2135, line: 211, column: 5)
!11082 = distinct !DILexicalBlock(scope: !11065, file: !2135, line: 211, column: 5)
!11083 = !DILocation(line: 212, column: 32, scope: !11080)
!11084 = !DILocation(line: 213, column: 23, scope: !11080)
!11085 = !DILocation(line: 213, column: 32, scope: !11080)
!11086 = !DILocation(line: 215, column: 19, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11080, file: !2135, line: 215, column: 13)
!11088 = !DILocation(line: 215, column: 15, scope: !11087)
!11089 = !DILocation(line: 215, column: 13, scope: !11080)
!11090 = !DILocation(line: 211, column: 40, scope: !11081)
!11091 = !DILocation(line: 211, column: 5, scope: !11082)
!11092 = distinct !{!11092, !11091, !11093}
!11093 = !DILocation(line: 218, column: 5, scope: !11082)
!11094 = !DILocation(line: 211, column: 57, scope: !11081)
!11095 = !DILocation(line: 212, column: 9, scope: !11080)
!11096 = !DILocation(line: 212, column: 45, scope: !11080)
!11097 = !DILocation(line: 212, column: 83, scope: !11080)
!11098 = !DILocation(line: 212, column: 121, scope: !11080)
!11099 = !DILocation(line: 212, column: 70, scope: !11080)
!11100 = !DILocation(line: 212, column: 108, scope: !11080)
!11101 = !DILocation(line: 212, column: 146, scope: !11080)
!11102 = !DILocation(line: 222, column: 49, scope: !11103)
!11103 = distinct !DILexicalBlock(scope: !11104, file: !2135, line: 221, column: 84)
!11104 = distinct !DILexicalBlock(scope: !11105, file: !2135, line: 221, column: 9)
!11105 = distinct !DILexicalBlock(scope: !11106, file: !2135, line: 221, column: 9)
!11106 = distinct !DILexicalBlock(scope: !11107, file: !2135, line: 220, column: 25)
!11107 = distinct !DILexicalBlock(scope: !11065, file: !2135, line: 220, column: 9)
!11108 = !DILocation(line: 222, column: 13, scope: !11103)
!11109 = !DILocation(line: 222, column: 27, scope: !11103)
!11110 = !DILocation(line: 222, column: 36, scope: !11103)
!11111 = !DILocation(line: 224, column: 23, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11103, file: !2135, line: 224, column: 17)
!11113 = !DILocation(line: 224, column: 19, scope: !11112)
!11114 = !DILocation(line: 224, column: 17, scope: !11103)
!11115 = distinct !{!11115, !11116, !11117}
!11116 = !DILocation(line: 221, column: 9, scope: !11105)
!11117 = !DILocation(line: 227, column: 9, scope: !11105)
!11118 = !DILocation(line: 230, column: 1, scope: !11065)
!11119 = distinct !DISubprogram(name: "EMI_PowerOn_Init", scope: !2135, file: !2135, line: 253, type: !291, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11120 = !DILocation(line: 257, column: 26, scope: !11119)
!11121 = !DILocation(line: 259, column: 5, scope: !11119)
!11122 = !DILocation(line: 259, column: 19, scope: !11119)
!11123 = !DILocation(line: 259, column: 29, scope: !11119)
!11124 = !DILocation(line: 260, column: 5, scope: !11119)
!11125 = !DILocation(line: 260, column: 27, scope: !11119)
!11126 = !DILocation(line: 260, column: 93, scope: !11119)
!11127 = distinct !{!11127, !11124, !11128}
!11128 = !DILocation(line: 260, column: 98, scope: !11119)
!11129 = !DILocation(line: 261, column: 29, scope: !11119)
!11130 = !DILocation(line: 262, column: 5, scope: !11119)
!11131 = !DILocation(line: 262, column: 27, scope: !11119)
!11132 = !DILocation(line: 262, column: 93, scope: !11119)
!11133 = distinct !{!11133, !11130, !11134}
!11134 = !DILocation(line: 262, column: 98, scope: !11119)
!11135 = !DILocation(line: 264, column: 42, scope: !11119)
!11136 = !DILocation(line: 265, column: 48, scope: !11119)
!11137 = !DILocation(line: 267, column: 5, scope: !11119)
!11138 = !DILocation(line: 267, column: 27, scope: !11119)
!11139 = !DILocation(line: 267, column: 39, scope: !11119)
!11140 = !DILocation(line: 267, column: 65, scope: !11119)
!11141 = distinct !{!11141, !11137, !11142}
!11142 = !DILocation(line: 267, column: 70, scope: !11119)
!11143 = !DILocation(line: 269, column: 5, scope: !11119)
!11144 = !DILocation(line: 273, column: 8, scope: !11119)
!11145 = !DILocation(line: 275, column: 5, scope: !11119)
!11146 = !DILocation(line: 275, column: 27, scope: !11119)
!11147 = !DILocation(line: 275, column: 39, scope: !11119)
!11148 = !DILocation(line: 275, column: 65, scope: !11119)
!11149 = distinct !{!11149, !11145, !11150}
!11150 = !DILocation(line: 275, column: 70, scope: !11119)
!11151 = !DILocation(line: 278, column: 9, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11119, file: !2135, line: 278, column: 9)
!11153 = !DILocation(line: 278, column: 44, scope: !11152)
!11154 = !DILocation(line: 278, column: 9, scope: !11119)
!11155 = !DILocation(line: 279, column: 13, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11157, file: !2135, line: 279, column: 12)
!11157 = distinct !DILexicalBlock(scope: !11152, file: !2135, line: 278, column: 55)
!11158 = !DILocation(line: 279, column: 48, scope: !11156)
!11159 = !DILocation(line: 279, column: 56, scope: !11156)
!11160 = !DILocation(line: 0, scope: !11156)
!11161 = !DILocation(line: 288, column: 1, scope: !11119)
!11162 = distinct !DISubprogram(name: "custom_setEMI", scope: !2135, file: !2135, line: 294, type: !11163, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11163 = !DISubroutineType(types: !11164)
!11164 = !{!1402}
!11165 = !DILocation(line: 298, column: 5, scope: !11162)
!11166 = !DILocation(line: 300, column: 5, scope: !11162)
!11167 = !DILocation(line: 302, column: 20, scope: !11162)
!11168 = !DILocation(line: 302, column: 18, scope: !11162)
!11169 = !DILocation(line: 303, column: 20, scope: !11162)
!11170 = !DILocation(line: 303, column: 18, scope: !11162)
!11171 = !DILocation(line: 304, column: 20, scope: !11162)
!11172 = !DILocation(line: 304, column: 18, scope: !11162)
!11173 = !DILocation(line: 307, column: 5, scope: !11162)
!11174 = distinct !DISubprogram(name: "custom_setAdvEMI", scope: !2135, file: !2135, line: 312, type: !11163, scopeLine: 313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11175 = !DILocation(line: 319, column: 29, scope: !11174)
!11176 = !DILocation(line: 319, column: 5, scope: !11174)
!11177 = !DILocation(line: 319, column: 19, scope: !11174)
!11178 = !DILocation(line: 319, column: 27, scope: !11174)
!11179 = !DILocation(line: 320, column: 29, scope: !11174)
!11180 = !DILocation(line: 320, column: 19, scope: !11174)
!11181 = !DILocation(line: 320, column: 27, scope: !11174)
!11182 = !DILocation(line: 322, column: 30, scope: !11174)
!11183 = !DILocation(line: 322, column: 19, scope: !11174)
!11184 = !DILocation(line: 322, column: 28, scope: !11174)
!11185 = !DILocation(line: 324, column: 30, scope: !11174)
!11186 = !DILocation(line: 324, column: 19, scope: !11174)
!11187 = !DILocation(line: 324, column: 28, scope: !11174)
!11188 = !DILocation(line: 326, column: 31, scope: !11174)
!11189 = !DILocation(line: 326, column: 19, scope: !11174)
!11190 = !DILocation(line: 326, column: 29, scope: !11174)
!11191 = !DILocation(line: 327, column: 31, scope: !11174)
!11192 = !DILocation(line: 327, column: 19, scope: !11174)
!11193 = !DILocation(line: 327, column: 29, scope: !11174)
!11194 = !DILocation(line: 332, column: 30, scope: !11174)
!11195 = !DILocation(line: 332, column: 19, scope: !11174)
!11196 = !DILocation(line: 332, column: 28, scope: !11174)
!11197 = !DILocation(line: 333, column: 30, scope: !11174)
!11198 = !DILocation(line: 333, column: 19, scope: !11174)
!11199 = !DILocation(line: 333, column: 28, scope: !11174)
!11200 = !DILocation(line: 334, column: 30, scope: !11174)
!11201 = !DILocation(line: 334, column: 19, scope: !11174)
!11202 = !DILocation(line: 334, column: 28, scope: !11174)
!11203 = !DILocation(line: 336, column: 30, scope: !11174)
!11204 = !DILocation(line: 336, column: 19, scope: !11174)
!11205 = !DILocation(line: 336, column: 28, scope: !11174)
!11206 = !DILocation(line: 337, column: 30, scope: !11174)
!11207 = !DILocation(line: 337, column: 19, scope: !11174)
!11208 = !DILocation(line: 337, column: 28, scope: !11174)
!11209 = !DILocation(line: 338, column: 30, scope: !11174)
!11210 = !DILocation(line: 338, column: 19, scope: !11174)
!11211 = !DILocation(line: 338, column: 28, scope: !11174)
!11212 = !DILocation(line: 339, column: 30, scope: !11174)
!11213 = !DILocation(line: 339, column: 19, scope: !11174)
!11214 = !DILocation(line: 339, column: 28, scope: !11174)
!11215 = !DILocation(line: 341, column: 5, scope: !11174)
!11216 = !DILocation(line: 345, column: 5, scope: !11174)
!11217 = !DILocation(line: 345, column: 19, scope: !11174)
!11218 = !DILocation(line: 345, column: 28, scope: !11174)
!11219 = !DILocation(line: 346, column: 5, scope: !11174)
!11220 = !DILocation(line: 346, column: 28, scope: !11174)
!11221 = !DILocation(line: 346, column: 82, scope: !11174)
!11222 = distinct !{!11222, !11219, !11223}
!11223 = !DILocation(line: 346, column: 87, scope: !11174)
!11224 = !DILocation(line: 347, column: 28, scope: !11174)
!11225 = !DILocation(line: 348, column: 5, scope: !11174)
!11226 = !DILocation(line: 348, column: 28, scope: !11174)
!11227 = !DILocation(line: 348, column: 82, scope: !11174)
!11228 = distinct !{!11228, !11225, !11229}
!11229 = !DILocation(line: 348, column: 87, scope: !11174)
!11230 = !DILocation(line: 349, column: 28, scope: !11174)
!11231 = !DILocation(line: 351, column: 5, scope: !11174)
!11232 = !DILocation(line: 353, column: 5, scope: !11174)
!11233 = distinct !DISubprogram(name: "EMI_Setting_Save", scope: !2135, file: !2135, line: 358, type: !291, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11234 = !DILocation(line: 361, column: 36, scope: !11233)
!11235 = !DILocation(line: 361, column: 50, scope: !11233)
!11236 = !DILocation(line: 361, column: 34, scope: !11233)
!11237 = !DILocation(line: 362, column: 50, scope: !11233)
!11238 = !DILocation(line: 362, column: 34, scope: !11233)
!11239 = !DILocation(line: 363, column: 50, scope: !11233)
!11240 = !DILocation(line: 363, column: 34, scope: !11233)
!11241 = !DILocation(line: 364, column: 50, scope: !11233)
!11242 = !DILocation(line: 364, column: 34, scope: !11233)
!11243 = !DILocation(line: 365, column: 50, scope: !11233)
!11244 = !DILocation(line: 365, column: 34, scope: !11233)
!11245 = !DILocation(line: 366, column: 50, scope: !11233)
!11246 = !DILocation(line: 366, column: 34, scope: !11233)
!11247 = !DILocation(line: 367, column: 50, scope: !11233)
!11248 = !DILocation(line: 367, column: 34, scope: !11233)
!11249 = !DILocation(line: 368, column: 50, scope: !11233)
!11250 = !DILocation(line: 368, column: 34, scope: !11233)
!11251 = !DILocation(line: 369, column: 50, scope: !11233)
!11252 = !DILocation(line: 369, column: 34, scope: !11233)
!11253 = !DILocation(line: 370, column: 50, scope: !11233)
!11254 = !DILocation(line: 370, column: 34, scope: !11233)
!11255 = !DILocation(line: 371, column: 50, scope: !11233)
!11256 = !DILocation(line: 371, column: 34, scope: !11233)
!11257 = !DILocation(line: 372, column: 50, scope: !11233)
!11258 = !DILocation(line: 372, column: 34, scope: !11233)
!11259 = !DILocation(line: 373, column: 51, scope: !11233)
!11260 = !DILocation(line: 373, column: 35, scope: !11233)
!11261 = !DILocation(line: 374, column: 51, scope: !11233)
!11262 = !DILocation(line: 374, column: 35, scope: !11233)
!11263 = !DILocation(line: 375, column: 50, scope: !11233)
!11264 = !DILocation(line: 375, column: 34, scope: !11233)
!11265 = !DILocation(line: 376, column: 50, scope: !11233)
!11266 = !DILocation(line: 376, column: 34, scope: !11233)
!11267 = !DILocation(line: 377, column: 50, scope: !11233)
!11268 = !DILocation(line: 377, column: 34, scope: !11233)
!11269 = !DILocation(line: 378, column: 50, scope: !11233)
!11270 = !DILocation(line: 378, column: 34, scope: !11233)
!11271 = !DILocation(line: 379, column: 50, scope: !11233)
!11272 = !DILocation(line: 379, column: 34, scope: !11233)
!11273 = !DILocation(line: 380, column: 50, scope: !11233)
!11274 = !DILocation(line: 380, column: 34, scope: !11233)
!11275 = !DILocation(line: 382, column: 1, scope: !11233)
!11276 = distinct !DISubprogram(name: "EMI_Setting_restore", scope: !2135, file: !2135, line: 384, type: !291, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11277 = !DILocation(line: 387, column: 5, scope: !11276)
!11278 = !DILocation(line: 387, column: 27, scope: !11276)
!11279 = !DILocation(line: 387, column: 36, scope: !11276)
!11280 = !DILocation(line: 387, column: 76, scope: !11276)
!11281 = distinct !{!11281, !11277, !11282}
!11282 = !DILocation(line: 387, column: 84, scope: !11276)
!11283 = !DILocation(line: 388, column: 50, scope: !11276)
!11284 = !DILocation(line: 388, column: 19, scope: !11276)
!11285 = !DILocation(line: 388, column: 28, scope: !11276)
!11286 = !DILocation(line: 389, column: 50, scope: !11276)
!11287 = !DILocation(line: 389, column: 19, scope: !11276)
!11288 = !DILocation(line: 389, column: 28, scope: !11276)
!11289 = !DILocation(line: 390, column: 50, scope: !11276)
!11290 = !DILocation(line: 390, column: 19, scope: !11276)
!11291 = !DILocation(line: 390, column: 28, scope: !11276)
!11292 = !DILocation(line: 391, column: 50, scope: !11276)
!11293 = !DILocation(line: 391, column: 19, scope: !11276)
!11294 = !DILocation(line: 391, column: 28, scope: !11276)
!11295 = !DILocation(line: 392, column: 50, scope: !11276)
!11296 = !DILocation(line: 392, column: 19, scope: !11276)
!11297 = !DILocation(line: 392, column: 28, scope: !11276)
!11298 = !DILocation(line: 393, column: 50, scope: !11276)
!11299 = !DILocation(line: 393, column: 19, scope: !11276)
!11300 = !DILocation(line: 393, column: 28, scope: !11276)
!11301 = !DILocation(line: 394, column: 51, scope: !11276)
!11302 = !DILocation(line: 394, column: 19, scope: !11276)
!11303 = !DILocation(line: 394, column: 29, scope: !11276)
!11304 = !DILocation(line: 395, column: 51, scope: !11276)
!11305 = !DILocation(line: 395, column: 19, scope: !11276)
!11306 = !DILocation(line: 395, column: 29, scope: !11276)
!11307 = !DILocation(line: 396, column: 50, scope: !11276)
!11308 = !DILocation(line: 396, column: 19, scope: !11276)
!11309 = !DILocation(line: 396, column: 28, scope: !11276)
!11310 = !DILocation(line: 397, column: 50, scope: !11276)
!11311 = !DILocation(line: 397, column: 19, scope: !11276)
!11312 = !DILocation(line: 397, column: 28, scope: !11276)
!11313 = !DILocation(line: 398, column: 50, scope: !11276)
!11314 = !DILocation(line: 398, column: 19, scope: !11276)
!11315 = !DILocation(line: 398, column: 28, scope: !11276)
!11316 = !DILocation(line: 399, column: 50, scope: !11276)
!11317 = !DILocation(line: 399, column: 19, scope: !11276)
!11318 = !DILocation(line: 399, column: 28, scope: !11276)
!11319 = !DILocation(line: 400, column: 50, scope: !11276)
!11320 = !DILocation(line: 400, column: 19, scope: !11276)
!11321 = !DILocation(line: 400, column: 28, scope: !11276)
!11322 = !DILocation(line: 401, column: 50, scope: !11276)
!11323 = !DILocation(line: 401, column: 19, scope: !11276)
!11324 = !DILocation(line: 401, column: 28, scope: !11276)
!11325 = !DILocation(line: 402, column: 50, scope: !11276)
!11326 = !DILocation(line: 402, column: 19, scope: !11276)
!11327 = !DILocation(line: 402, column: 28, scope: !11276)
!11328 = !DILocation(line: 403, column: 50, scope: !11276)
!11329 = !DILocation(line: 403, column: 19, scope: !11276)
!11330 = !DILocation(line: 403, column: 28, scope: !11276)
!11331 = !DILocation(line: 404, column: 50, scope: !11276)
!11332 = !DILocation(line: 404, column: 19, scope: !11276)
!11333 = !DILocation(line: 404, column: 28, scope: !11276)
!11334 = !DILocation(line: 405, column: 50, scope: !11276)
!11335 = !DILocation(line: 405, column: 19, scope: !11276)
!11336 = !DILocation(line: 405, column: 28, scope: !11276)
!11337 = !DILocation(line: 406, column: 50, scope: !11276)
!11338 = !DILocation(line: 406, column: 19, scope: !11276)
!11339 = !DILocation(line: 406, column: 28, scope: !11276)
!11340 = !DILocation(line: 408, column: 1, scope: !11276)
!11341 = distinct !DISubprogram(name: "mtk_psram_half_sleep_exit", scope: !2135, file: !2135, line: 410, type: !291, scopeLine: 411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11342 = !DILocation(line: 413, column: 29, scope: !11341)
!11343 = !DILocation(line: 413, column: 43, scope: !11341)
!11344 = !DILocation(line: 413, column: 51, scope: !11341)
!11345 = !DILocation(line: 413, column: 27, scope: !11341)
!11346 = !DILocation(line: 416, column: 19, scope: !11341)
!11347 = !DILocation(line: 416, column: 29, scope: !11341)
!11348 = !DILocation(line: 417, column: 5, scope: !11341)
!11349 = !DILocation(line: 417, column: 27, scope: !11341)
!11350 = !DILocation(line: 417, column: 93, scope: !11341)
!11351 = distinct !{!11351, !11348, !11352}
!11352 = !DILocation(line: 417, column: 98, scope: !11341)
!11353 = !DILocation(line: 418, column: 29, scope: !11341)
!11354 = !DILocation(line: 419, column: 5, scope: !11341)
!11355 = !DILocation(line: 419, column: 27, scope: !11341)
!11356 = !DILocation(line: 419, column: 93, scope: !11341)
!11357 = distinct !{!11357, !11354, !11358}
!11358 = !DILocation(line: 419, column: 98, scope: !11341)
!11359 = !DILocation(line: 421, column: 5, scope: !11341)
!11360 = !DILocation(line: 422, column: 5, scope: !11341)
!11361 = !DILocation(line: 422, column: 19, scope: !11341)
!11362 = !DILocation(line: 422, column: 28, scope: !11341)
!11363 = !DILocation(line: 423, column: 5, scope: !11341)
!11364 = !DILocation(line: 423, column: 28, scope: !11341)
!11365 = !DILocation(line: 423, column: 82, scope: !11341)
!11366 = distinct !{!11366, !11363, !11367}
!11367 = !DILocation(line: 423, column: 87, scope: !11341)
!11368 = !DILocation(line: 424, column: 28, scope: !11341)
!11369 = !DILocation(line: 425, column: 5, scope: !11341)
!11370 = !DILocation(line: 425, column: 28, scope: !11341)
!11371 = !DILocation(line: 425, column: 82, scope: !11341)
!11372 = distinct !{!11372, !11369, !11373}
!11373 = !DILocation(line: 425, column: 87, scope: !11341)
!11374 = !DILocation(line: 426, column: 28, scope: !11341)
!11375 = !DILocation(line: 428, column: 50, scope: !11341)
!11376 = !DILocation(line: 428, column: 19, scope: !11341)
!11377 = !DILocation(line: 428, column: 28, scope: !11341)
!11378 = !DILocation(line: 432, column: 1, scope: !11341)
!11379 = distinct !DISubprogram(name: "mtk_psram_half_sleep_enter", scope: !2135, file: !2135, line: 434, type: !291, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11380 = !DILocation(line: 437, column: 5, scope: !11379)
!11381 = !DILocation(line: 440, column: 5, scope: !11379)
!11382 = !DILocation(line: 440, column: 27, scope: !11379)
!11383 = !DILocation(line: 440, column: 36, scope: !11379)
!11384 = !DILocation(line: 440, column: 76, scope: !11379)
!11385 = distinct !{!11385, !11381, !11386}
!11386 = !DILocation(line: 440, column: 84, scope: !11379)
!11387 = !DILocation(line: 441, column: 45, scope: !11379)
!11388 = !DILocation(line: 441, column: 54, scope: !11379)
!11389 = !DILocation(line: 441, column: 28, scope: !11379)
!11390 = !DILocation(line: 442, column: 19, scope: !11379)
!11391 = !DILocation(line: 442, column: 31, scope: !11379)
!11392 = !DILocation(line: 443, column: 5, scope: !11379)
!11393 = !DILocation(line: 443, column: 27, scope: !11379)
!11394 = !DILocation(line: 443, column: 39, scope: !11379)
!11395 = !DILocation(line: 443, column: 65, scope: !11379)
!11396 = distinct !{!11396, !11392, !11397}
!11397 = !DILocation(line: 443, column: 70, scope: !11379)
!11398 = !DILocation(line: 444, column: 19, scope: !11379)
!11399 = !DILocation(line: 444, column: 28, scope: !11379)
!11400 = !DILocation(line: 445, column: 5, scope: !11379)
!11401 = !DILocation(line: 445, column: 27, scope: !11379)
!11402 = !DILocation(line: 445, column: 91, scope: !11379)
!11403 = distinct !{!11403, !11400, !11404}
!11404 = !DILocation(line: 445, column: 96, scope: !11379)
!11405 = !DILocation(line: 447, column: 43, scope: !11379)
!11406 = !DILocation(line: 447, column: 51, scope: !11379)
!11407 = !DILocation(line: 447, column: 27, scope: !11379)
!11408 = !DILocation(line: 450, column: 1, scope: !11379)
!11409 = distinct !DISubprogram(name: "EMI_DynamicClockSwitch", scope: !2135, file: !2135, line: 452, type: !11410, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !11413)
!11410 = !DISubroutineType(types: !11411)
!11411 = !{!1091, !11412}
!11412 = !DIDerivedType(tag: DW_TAG_typedef, name: "emi_clock", file: !2138, line: 43, baseType: !2137)
!11413 = !{!11414, !11415}
!11414 = !DILocalVariable(name: "clock", arg: 1, scope: !11409, file: !2135, line: 452, type: !11412)
!11415 = !DILocalVariable(name: "delay", scope: !11409, file: !2135, line: 457, type: !60)
!11416 = !DILocation(line: 0, scope: !11409)
!11417 = !DILocation(line: 457, column: 5, scope: !11409)
!11418 = !DILocation(line: 457, column: 23, scope: !11409)
!11419 = !DILocation(line: 458, column: 9, scope: !11409)
!11420 = !DILocation(line: 465, column: 9, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11422, file: !2135, line: 458, column: 39)
!11422 = distinct !DILexicalBlock(scope: !11409, file: !2135, line: 458, column: 9)
!11423 = !DILocation(line: 465, column: 23, scope: !11421)
!11424 = !DILocation(line: 465, column: 32, scope: !11421)
!11425 = !DILocation(line: 466, column: 32, scope: !11421)
!11426 = !DILocation(line: 467, column: 9, scope: !11421)
!11427 = !DILocation(line: 467, column: 32, scope: !11421)
!11428 = !DILocation(line: 467, column: 86, scope: !11421)
!11429 = distinct !{!11429, !11426, !11430}
!11430 = !DILocation(line: 467, column: 91, scope: !11421)
!11431 = !DILocation(line: 468, column: 32, scope: !11421)
!11432 = !DILocation(line: 469, column: 9, scope: !11421)
!11433 = !DILocation(line: 469, column: 32, scope: !11421)
!11434 = !DILocation(line: 469, column: 86, scope: !11421)
!11435 = distinct !{!11435, !11432, !11436}
!11436 = !DILocation(line: 469, column: 91, scope: !11421)
!11437 = !DILocation(line: 470, column: 32, scope: !11421)
!11438 = !DILocation(line: 472, column: 20, scope: !11439)
!11439 = distinct !DILexicalBlock(scope: !11421, file: !2135, line: 472, column: 9)
!11440 = !DILocation(line: 472, column: 25, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11439, file: !2135, line: 472, column: 9)
!11442 = !DILocation(line: 472, column: 31, scope: !11441)
!11443 = !DILocation(line: 472, column: 9, scope: !11439)
!11444 = !DILocation(line: 472, column: 44, scope: !11441)
!11445 = distinct !{!11445, !11443, !11446}
!11446 = !DILocation(line: 472, column: 47, scope: !11439)
!11447 = !DILocation(line: 478, column: 9, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !2135, line: 477, column: 12)
!11449 = distinct !DILexicalBlock(scope: !11422, file: !2135, line: 475, column: 16)
!11450 = !DILocation(line: 483, column: 1, scope: !11409)
!11451 = distinct !DISubprogram(name: "emi_mask_master", scope: !2135, file: !2135, line: 487, type: !291, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11452 = !DILocation(line: 490, column: 30, scope: !11451)
!11453 = !DILocation(line: 490, column: 44, scope: !11451)
!11454 = !DILocation(line: 490, column: 53, scope: !11451)
!11455 = !DILocation(line: 490, column: 28, scope: !11451)
!11456 = !DILocation(line: 492, column: 1, scope: !11451)
!11457 = distinct !DISubprogram(name: "emi_unmask_master", scope: !2135, file: !2135, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2134, retainedNodes: !293)
!11458 = !DILocation(line: 497, column: 30, scope: !11457)
!11459 = !DILocation(line: 497, column: 44, scope: !11457)
!11460 = !DILocation(line: 497, column: 53, scope: !11457)
!11461 = !DILocation(line: 497, column: 28, scope: !11457)
!11462 = !DILocation(line: 500, column: 1, scope: !11457)
!11463 = distinct !DISubprogram(name: "is_clk_use_lfosc", scope: !2301, file: !2301, line: 56, type: !8244, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !293)
!11464 = !DILocation(line: 61, column: 5, scope: !11463)
!11465 = distinct !DISubprogram(name: "is_clk_use_mpll", scope: !2301, file: !2301, line: 65, type: !8244, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !293)
!11466 = !DILocation(line: 70, column: 5, scope: !11465)
!11467 = distinct !DISubprogram(name: "cm_bus_clk_208m", scope: !2301, file: !2301, line: 74, type: !291, scopeLine: 75, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !293)
!11468 = !DILocation(line: 79, column: 9, scope: !11469)
!11469 = distinct !DILexicalBlock(scope: !11470, file: !2301, line: 78, column: 12)
!11470 = distinct !DILexicalBlock(scope: !11467, file: !2301, line: 76, column: 9)
!11471 = !DILocation(line: 81, column: 1, scope: !11467)
!11472 = distinct !DISubprogram(name: "cm_bus_clk_104m", scope: !2301, file: !2301, line: 83, type: !291, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !293)
!11473 = !DILocation(line: 88, column: 9, scope: !11474)
!11474 = distinct !DILexicalBlock(scope: !11475, file: !2301, line: 87, column: 12)
!11475 = distinct !DILexicalBlock(scope: !11472, file: !2301, line: 85, column: 9)
!11476 = !DILocation(line: 90, column: 1, scope: !11472)
!11477 = distinct !DISubprogram(name: "cm_bus_clk_26m", scope: !2301, file: !2301, line: 92, type: !291, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !293)
!11478 = !DILocation(line: 97, column: 9, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11480, file: !2301, line: 96, column: 12)
!11480 = distinct !DILexicalBlock(scope: !11477, file: !2301, line: 94, column: 9)
!11481 = !DILocation(line: 99, column: 1, scope: !11477)
!11482 = distinct !DISubprogram(name: "peri_clk_26m", scope: !2301, file: !2301, line: 101, type: !291, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2300, retainedNodes: !293)
!11483 = !DILocation(line: 106, column: 9, scope: !11484)
!11484 = distinct !DILexicalBlock(scope: !11485, file: !2301, line: 105, column: 12)
!11485 = distinct !DILexicalBlock(scope: !11482, file: !2301, line: 103, column: 9)
!11486 = !DILocation(line: 108, column: 1, scope: !11482)
!11487 = distinct !DISubprogram(name: "__io_putchar", scope: !2313, file: !2313, line: 73, type: !11488, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !11490)
!11488 = !DISubroutineType(types: !11489)
!11489 = !{!7, !7}
!11490 = !{!11491}
!11491 = !DILocalVariable(name: "ch", arg: 1, scope: !11487, file: !2313, line: 73, type: !7)
!11492 = !DILocation(line: 0, scope: !11487)
!11493 = !DILocation(line: 80, column: 35, scope: !11487)
!11494 = !DILocation(line: 80, column: 5, scope: !11487)
!11495 = !DILocation(line: 81, column: 5, scope: !11487)
!11496 = distinct !DISubprogram(name: "main", scope: !2313, file: !2313, line: 338, type: !10991, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !293)
!11497 = !DILocation(line: 341, column: 5, scope: !11496)
!11498 = !DILocation(line: 343, column: 5, scope: !11496)
!11499 = !DILocation(line: 346, column: 5, scope: !11496)
!11500 = !DILocation(line: 319, column: 3, scope: !11501, inlinedAt: !11502)
!11501 = distinct !DISubprogram(name: "__enable_irq", scope: !6856, file: !6856, line: 317, type: !291, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !293)
!11502 = distinct !DILocation(line: 349, column: 5, scope: !11496)
!11503 = !{i64 668003}
!11504 = !DILocation(line: 496, column: 3, scope: !11505, inlinedAt: !11506)
!11505 = distinct !DISubprogram(name: "__enable_fault_irq", scope: !6856, file: !6856, line: 494, type: !291, scopeLine: 495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !293)
!11506 = distinct !DILocation(line: 350, column: 5, scope: !11496)
!11507 = !{i64 672278}
!11508 = !DILocation(line: 353, column: 5, scope: !11496)
!11509 = !DILocation(line: 355, column: 5, scope: !11496)
!11510 = !DILocation(line: 356, column: 5, scope: !11496)
!11511 = !DILocation(line: 359, column: 5, scope: !11496)
!11512 = !DILocation(line: 361, column: 5, scope: !11496)
!11513 = distinct !{!11513, !11512, !11514}
!11514 = !DILocation(line: 361, column: 14, scope: !11496)
!11515 = distinct !DISubprogram(name: "SystemClock_Config", scope: !2313, file: !2313, line: 112, type: !291, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !293)
!11516 = !DILocation(line: 114, column: 5, scope: !11515)
!11517 = !DILocation(line: 115, column: 1, scope: !11515)
!11518 = distinct !DISubprogram(name: "prvSetupHardware", scope: !2313, file: !2313, line: 122, type: !291, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !293)
!11519 = !DILocation(line: 125, column: 5, scope: !11518)
!11520 = !DILocation(line: 126, column: 5, scope: !11518)
!11521 = !DILocation(line: 127, column: 5, scope: !11518)
!11522 = !DILocation(line: 128, column: 1, scope: !11518)
!11523 = distinct !DISubprogram(name: "spi_slave_transfer_data_two_boards_example", scope: !2313, file: !2313, line: 235, type: !291, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !11524)
!11524 = !{!11525, !11526}
!11525 = !DILocalVariable(name: "i", scope: !11523, file: !2313, line: 237, type: !61)
!11526 = !DILocalVariable(name: "spi_configure", scope: !11523, file: !2313, line: 238, type: !11527)
!11527 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_config_t", file: !872, line: 550, baseType: !11528)
!11528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 545, size: 128, elements: !11529)
!11529 = !{!11530, !11531, !11532, !11533}
!11530 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_threshold", scope: !11528, file: !872, line: 546, baseType: !61, size: 32)
!11531 = !DIDerivedType(tag: DW_TAG_member, name: "bit_order", scope: !11528, file: !872, line: 547, baseType: !6149, size: 32, offset: 32)
!11532 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !11528, file: !872, line: 548, baseType: !6151, size: 32, offset: 64)
!11533 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !11528, file: !872, line: 549, baseType: !6153, size: 32, offset: 96)
!11534 = !DILocation(line: 0, scope: !11523)
!11535 = !DILocation(line: 238, column: 5, scope: !11523)
!11536 = !DILocation(line: 238, column: 28, scope: !11523)
!11537 = !DILocation(line: 240, column: 5, scope: !11523)
!11538 = !DILocation(line: 243, column: 28, scope: !11523)
!11539 = !DILocation(line: 244, column: 30, scope: !11523)
!11540 = !DILocation(line: 245, column: 31, scope: !11523)
!11541 = !DILocation(line: 246, column: 32, scope: !11523)
!11542 = !DILocation(line: 247, column: 29, scope: !11523)
!11543 = !DILocation(line: 248, column: 30, scope: !11523)
!11544 = !DILocation(line: 249, column: 31, scope: !11523)
!11545 = !DILocation(line: 250, column: 28, scope: !11523)
!11546 = !DILocation(line: 251, column: 5, scope: !11523)
!11547 = !DILocation(line: 254, column: 5, scope: !11523)
!11548 = !DILocation(line: 255, column: 5, scope: !11523)
!11549 = !DILocation(line: 256, column: 5, scope: !11523)
!11550 = !DILocation(line: 257, column: 5, scope: !11523)
!11551 = !DILocation(line: 258, column: 5, scope: !11523)
!11552 = !DILocation(line: 259, column: 5, scope: !11523)
!11553 = !DILocation(line: 260, column: 5, scope: !11523)
!11554 = !DILocation(line: 261, column: 5, scope: !11523)
!11555 = !DILocation(line: 262, column: 19, scope: !11523)
!11556 = !DILocation(line: 262, column: 29, scope: !11523)
!11557 = !DILocation(line: 263, column: 19, scope: !11523)
!11558 = !DILocation(line: 263, column: 25, scope: !11523)
!11559 = !DILocation(line: 264, column: 19, scope: !11523)
!11560 = !DILocation(line: 264, column: 28, scope: !11523)
!11561 = !DILocation(line: 265, column: 19, scope: !11523)
!11562 = !DILocation(line: 265, column: 37, scope: !11523)
!11563 = !DILocation(line: 266, column: 36, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11523, file: !2313, line: 266, column: 9)
!11565 = !DILocation(line: 266, column: 33, scope: !11564)
!11566 = !DILocation(line: 266, column: 9, scope: !11523)
!11567 = !DILocation(line: 267, column: 9, scope: !11568)
!11568 = distinct !DILexicalBlock(scope: !11564, file: !2313, line: 266, column: 88)
!11569 = !DILocation(line: 268, column: 5, scope: !11568)
!11570 = !DILocation(line: 271, column: 36, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11523, file: !2313, line: 271, column: 9)
!11572 = !DILocation(line: 271, column: 33, scope: !11571)
!11573 = !DILocation(line: 271, column: 9, scope: !11523)
!11574 = !DILocation(line: 272, column: 9, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11571, file: !2313, line: 271, column: 111)
!11576 = !DILocation(line: 273, column: 5, scope: !11575)
!11577 = !DILocation(line: 276, column: 5, scope: !11523)
!11578 = !DILocation(line: 277, column: 5, scope: !11523)
!11579 = !DILocation(line: 277, column: 12, scope: !11523)
!11580 = !DILocation(line: 277, column: 35, scope: !11523)
!11581 = !DILocation(line: 278, column: 13, scope: !11582)
!11582 = distinct !DILexicalBlock(scope: !11583, file: !2313, line: 278, column: 13)
!11583 = distinct !DILexicalBlock(scope: !11523, file: !2313, line: 277, column: 45)
!11584 = !DILocation(line: 278, column: 13, scope: !11583)
!11585 = distinct !{!11585, !11578, !11586}
!11586 = !DILocation(line: 282, column: 5, scope: !11523)
!11587 = !DILocation(line: 285, column: 5, scope: !11523)
!11588 = !DILocation(line: 286, column: 5, scope: !11523)
!11589 = !DILocation(line: 286, column: 12, scope: !11523)
!11590 = !DILocation(line: 286, column: 37, scope: !11523)
!11591 = distinct !{!11591, !11588, !11592}
!11592 = !DILocation(line: 286, column: 46, scope: !11523)
!11593 = !DILocation(line: 289, column: 5, scope: !11523)
!11594 = !DILocation(line: 290, column: 5, scope: !11523)
!11595 = !DILocation(line: 290, column: 12, scope: !11523)
!11596 = !DILocation(line: 290, column: 38, scope: !11523)
!11597 = !DILocation(line: 291, column: 13, scope: !11598)
!11598 = distinct !DILexicalBlock(scope: !11599, file: !2313, line: 291, column: 13)
!11599 = distinct !DILexicalBlock(scope: !11523, file: !2313, line: 290, column: 48)
!11600 = !DILocation(line: 291, column: 13, scope: !11599)
!11601 = distinct !{!11601, !11594, !11602}
!11602 = !DILocation(line: 295, column: 5, scope: !11523)
!11603 = !DILocation(line: 298, column: 5, scope: !11523)
!11604 = !DILocation(line: 299, column: 10, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11523, file: !2313, line: 299, column: 5)
!11606 = !DILocation(line: 0, scope: !11605)
!11607 = !DILocation(line: 299, column: 19, scope: !11608)
!11608 = distinct !DILexicalBlock(scope: !11605, file: !2313, line: 299, column: 5)
!11609 = !DILocation(line: 299, column: 5, scope: !11605)
!11610 = !DILocation(line: 300, column: 13, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11612, file: !2313, line: 300, column: 13)
!11612 = distinct !DILexicalBlock(scope: !11608, file: !2313, line: 299, column: 46)
!11613 = !DILocation(line: 300, column: 40, scope: !11611)
!11614 = !DILocation(line: 300, column: 45, scope: !11611)
!11615 = !DILocation(line: 300, column: 33, scope: !11611)
!11616 = !DILocation(line: 300, column: 13, scope: !11612)
!11617 = distinct !{!11617, !11609, !11618}
!11618 = !DILocation(line: 304, column: 5, scope: !11605)
!11619 = !DILocation(line: 305, column: 5, scope: !11523)
!11620 = !DILocation(line: 308, column: 5, scope: !11523)
!11621 = !DILocation(line: 309, column: 5, scope: !11523)
!11622 = !DILocation(line: 309, column: 12, scope: !11523)
!11623 = !DILocation(line: 309, column: 36, scope: !11523)
!11624 = distinct !{!11624, !11621, !11625}
!11625 = !DILocation(line: 309, column: 45, scope: !11523)
!11626 = !DILocation(line: 312, column: 5, scope: !11523)
!11627 = !DILocation(line: 313, column: 5, scope: !11523)
!11628 = !DILocation(line: 313, column: 12, scope: !11523)
!11629 = !DILocation(line: 313, column: 37, scope: !11523)
!11630 = !DILocation(line: 314, column: 13, scope: !11631)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !2313, line: 314, column: 13)
!11632 = distinct !DILexicalBlock(scope: !11523, file: !2313, line: 313, column: 47)
!11633 = !DILocation(line: 314, column: 13, scope: !11632)
!11634 = distinct !{!11634, !11627, !11635}
!11635 = !DILocation(line: 318, column: 5, scope: !11523)
!11636 = !DILocation(line: 321, column: 5, scope: !11523)
!11637 = !DILocation(line: 322, column: 5, scope: !11523)
!11638 = !DILocation(line: 322, column: 12, scope: !11523)
!11639 = distinct !{!11639, !11637, !11640}
!11640 = !DILocation(line: 322, column: 43, scope: !11523)
!11641 = !DILocation(line: 325, column: 5, scope: !11523)
!11642 = !DILocation(line: 326, column: 36, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11523, file: !2313, line: 326, column: 9)
!11644 = !DILocation(line: 326, column: 33, scope: !11643)
!11645 = !DILocation(line: 326, column: 9, scope: !11523)
!11646 = !DILocation(line: 330, column: 5, scope: !11523)
!11647 = !DILocation(line: 331, column: 5, scope: !11523)
!11648 = !DILocation(line: 332, column: 5, scope: !11523)
!11649 = !DILocation(line: 333, column: 5, scope: !11523)
!11650 = !DILocation(line: 336, column: 1, scope: !11523)
!11651 = distinct !DISubprogram(name: "spi_slave_callback", scope: !2313, file: !2313, line: 136, type: !11652, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !11659)
!11652 = !DISubroutineType(types: !11653)
!11653 = !{null, !11654, !88}
!11654 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_spi_slave_transaction_status_t", file: !872, line: 557, baseType: !11655)
!11655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !872, line: 554, size: 64, elements: !11656)
!11656 = !{!11657, !11658}
!11657 = !DIDerivedType(tag: DW_TAG_member, name: "fsm_status", scope: !11655, file: !872, line: 555, baseType: !958, size: 32)
!11658 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_status", scope: !11655, file: !872, line: 556, baseType: !960, size: 32, offset: 32)
!11659 = !{!11660, !11661, !11662, !11663, !11664}
!11660 = !DILocalVariable(name: "status", arg: 1, scope: !11651, file: !2313, line: 136, type: !11654)
!11661 = !DILocalVariable(name: "user_data", arg: 2, scope: !11651, file: !2313, line: 136, type: !88)
!11662 = !DILocalVariable(name: "slave_status", scope: !11651, file: !2313, line: 138, type: !960)
!11663 = !DILocalVariable(name: "request_address", scope: !11651, file: !2313, line: 139, type: !61)
!11664 = !DILocalVariable(name: "request_length", scope: !11651, file: !2313, line: 139, type: !61)
!11665 = !DILocation(line: 0, scope: !11651)
!11666 = !DILocation(line: 139, column: 5, scope: !11651)
!11667 = !DILocation(line: 141, column: 9, scope: !11651)
!11668 = !DILocation(line: 144, column: 9, scope: !11669)
!11669 = distinct !DILexicalBlock(scope: !11670, file: !2313, line: 141, column: 69)
!11670 = distinct !DILexicalBlock(scope: !11651, file: !2313, line: 141, column: 9)
!11671 = !DILocation(line: 147, column: 40, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11669, file: !2313, line: 144, column: 31)
!11673 = !DILocation(line: 148, column: 17, scope: !11672)
!11674 = !DILocation(line: 149, column: 17, scope: !11672)
!11675 = !DILocation(line: 151, column: 17, scope: !11672)
!11676 = !DILocation(line: 152, column: 40, scope: !11672)
!11677 = !DILocation(line: 153, column: 17, scope: !11672)
!11678 = !DILocation(line: 154, column: 17, scope: !11672)
!11679 = !DILocation(line: 157, column: 17, scope: !11672)
!11680 = !DILocation(line: 158, column: 70, scope: !11672)
!11681 = !DILocation(line: 158, column: 17, scope: !11672)
!11682 = !DILocation(line: 159, column: 41, scope: !11672)
!11683 = !DILocation(line: 160, column: 17, scope: !11672)
!11684 = !DILocation(line: 161, column: 17, scope: !11672)
!11685 = !DILocation(line: 164, column: 17, scope: !11672)
!11686 = !DILocation(line: 165, column: 73, scope: !11672)
!11687 = !DILocation(line: 165, column: 17, scope: !11672)
!11688 = !DILocation(line: 166, column: 42, scope: !11672)
!11689 = !DILocation(line: 167, column: 17, scope: !11672)
!11690 = !DILocation(line: 168, column: 17, scope: !11672)
!11691 = !DILocation(line: 170, column: 42, scope: !11672)
!11692 = !DILocation(line: 171, column: 17, scope: !11672)
!11693 = !DILocation(line: 172, column: 17, scope: !11672)
!11694 = !DILocation(line: 175, column: 43, scope: !11672)
!11695 = !DILocation(line: 176, column: 17, scope: !11672)
!11696 = !DILocation(line: 177, column: 17, scope: !11672)
!11697 = !DILocation(line: 180, column: 43, scope: !11672)
!11698 = !DILocation(line: 181, column: 17, scope: !11672)
!11699 = !DILocation(line: 182, column: 17, scope: !11672)
!11700 = !DILocation(line: 185, column: 44, scope: !11672)
!11701 = !DILocation(line: 186, column: 17, scope: !11672)
!11702 = !DILocation(line: 187, column: 17, scope: !11672)
!11703 = !DILocation(line: 190, column: 40, scope: !11672)
!11704 = !DILocation(line: 191, column: 17, scope: !11672)
!11705 = !DILocation(line: 192, column: 17, scope: !11672)
!11706 = !DILocation(line: 199, column: 17, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11708, file: !2313, line: 197, column: 36)
!11708 = distinct !DILexicalBlock(scope: !11709, file: !2313, line: 196, column: 76)
!11709 = distinct !DILexicalBlock(scope: !11670, file: !2313, line: 196, column: 16)
!11710 = !DILocation(line: 200, column: 17, scope: !11707)
!11711 = !DILocation(line: 202, column: 17, scope: !11707)
!11712 = !DILocation(line: 203, column: 17, scope: !11707)
!11713 = !DILocation(line: 205, column: 17, scope: !11707)
!11714 = !DILocation(line: 206, column: 17, scope: !11707)
!11715 = !DILocation(line: 208, column: 17, scope: !11707)
!11716 = !DILocation(line: 209, column: 17, scope: !11707)
!11717 = !DILocation(line: 211, column: 17, scope: !11707)
!11718 = !DILocation(line: 212, column: 17, scope: !11707)
!11719 = !DILocation(line: 214, column: 17, scope: !11707)
!11720 = !DILocation(line: 215, column: 17, scope: !11707)
!11721 = !DILocation(line: 217, column: 17, scope: !11707)
!11722 = !DILocation(line: 218, column: 17, scope: !11707)
!11723 = !DILocation(line: 220, column: 17, scope: !11707)
!11724 = !DILocation(line: 221, column: 17, scope: !11707)
!11725 = !DILocation(line: 226, column: 9, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11709, file: !2313, line: 225, column: 12)
!11727 = !DILocation(line: 228, column: 1, scope: !11651)
!11728 = distinct !DISubprogram(name: "plain_log_uart_init", scope: !2313, file: !2313, line: 89, type: !291, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2312, retainedNodes: !11729)
!11729 = !{!11730}
!11730 = !DILocalVariable(name: "uart_config", scope: !11728, file: !2313, line: 91, type: !11731)
!11731 = !DIDerivedType(tag: DW_TAG_typedef, name: "hal_uart_config_t", file: !654, line: 378, baseType: !11732)
!11732 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 373, size: 128, elements: !11733)
!11733 = !{!11734, !11735, !11736, !11737}
!11734 = !DIDerivedType(tag: DW_TAG_member, name: "baudrate", scope: !11732, file: !654, line: 374, baseType: !4791, size: 32)
!11735 = !DIDerivedType(tag: DW_TAG_member, name: "word_length", scope: !11732, file: !654, line: 375, baseType: !4841, size: 32, offset: 32)
!11736 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bit", scope: !11732, file: !654, line: 376, baseType: !4843, size: 32, offset: 64)
!11737 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !11732, file: !654, line: 377, baseType: !4845, size: 32, offset: 96)
!11738 = !DILocation(line: 91, column: 5, scope: !11728)
!11739 = !DILocation(line: 91, column: 23, scope: !11728)
!11740 = !DILocation(line: 94, column: 5, scope: !11728)
!11741 = !DILocation(line: 95, column: 5, scope: !11728)
!11742 = !DILocation(line: 96, column: 5, scope: !11728)
!11743 = !DILocation(line: 97, column: 5, scope: !11728)
!11744 = !DILocation(line: 100, column: 17, scope: !11728)
!11745 = !DILocation(line: 100, column: 26, scope: !11728)
!11746 = !DILocation(line: 101, column: 17, scope: !11728)
!11747 = !DILocation(line: 101, column: 29, scope: !11728)
!11748 = !DILocation(line: 102, column: 17, scope: !11728)
!11749 = !DILocation(line: 102, column: 26, scope: !11728)
!11750 = !DILocation(line: 103, column: 17, scope: !11728)
!11751 = !DILocation(line: 103, column: 24, scope: !11728)
!11752 = !DILocation(line: 104, column: 5, scope: !11728)
!11753 = !DILocation(line: 105, column: 1, scope: !11728)
!11754 = distinct !DISubprogram(name: "_close", scope: !2338, file: !2338, line: 5, type: !11488, scopeLine: 6, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !11755)
!11755 = !{!11756}
!11756 = !DILocalVariable(name: "file", arg: 1, scope: !11754, file: !2338, line: 5, type: !7)
!11757 = !DILocation(line: 0, scope: !11754)
!11758 = !DILocation(line: 7, column: 5, scope: !11754)
!11759 = distinct !DISubprogram(name: "_fstat", scope: !2338, file: !2338, line: 10, type: !11760, scopeLine: 11, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !11808)
!11760 = !DISubroutineType(types: !11761)
!11761 = !{!7, !7, !11762}
!11762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11763, size: 32)
!11763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !11764, line: 27, size: 704, elements: !11765)
!11764 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/stat.h", directory: "/home/mjshen/RTOSExploration")
!11765 = !{!11766, !11769, !11772, !11775, !11778, !11781, !11784, !11785, !11788, !11798, !11799, !11800, !11803, !11806}
!11766 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !11763, file: !11764, line: 29, baseType: !11767, size: 16)
!11767 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !2342, line: 161, baseType: !11768)
!11768 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2382, line: 56, baseType: !1588)
!11769 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !11763, file: !11764, line: 30, baseType: !11770, size: 16, offset: 16)
!11770 = !DIDerivedType(tag: DW_TAG_typedef, name: "ino_t", file: !2342, line: 139, baseType: !11771)
!11771 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2382, line: 75, baseType: !970)
!11772 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !11763, file: !11764, line: 31, baseType: !11773, size: 32, offset: 32)
!11773 = !DIDerivedType(tag: DW_TAG_typedef, name: "mode_t", file: !2342, line: 189, baseType: !11774)
!11774 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2382, line: 90, baseType: !63)
!11775 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !11763, file: !11764, line: 32, baseType: !11776, size: 16, offset: 64)
!11776 = !DIDerivedType(tag: DW_TAG_typedef, name: "nlink_t", file: !2342, line: 194, baseType: !11777)
!11777 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2382, line: 209, baseType: !970)
!11778 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !11763, file: !11764, line: 33, baseType: !11779, size: 16, offset: 80)
!11779 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !2342, line: 165, baseType: !11780)
!11780 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2382, line: 60, baseType: !970)
!11781 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !11763, file: !11764, line: 34, baseType: !11782, size: 16, offset: 96)
!11782 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !2342, line: 169, baseType: !11783)
!11783 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2382, line: 63, baseType: !970)
!11784 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !11763, file: !11764, line: 35, baseType: !11767, size: 16, offset: 112)
!11785 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !11763, file: !11764, line: 36, baseType: !11786, size: 32, offset: 128)
!11786 = !DIDerivedType(tag: DW_TAG_typedef, name: "off_t", file: !2342, line: 157, baseType: !11787)
!11787 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2382, line: 102, baseType: !2398)
!11788 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !11763, file: !11764, line: 42, baseType: !11789, size: 128, offset: 192)
!11789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !11790, line: 47, size: 128, elements: !11791)
!11790 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timespec.h", directory: "/home/mjshen/RTOSExploration")
!11791 = !{!11792, !11797}
!11792 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !11789, file: !11790, line: 48, baseType: !11793, size: 64)
!11793 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !11794, line: 42, baseType: !11795)
!11794 = !DIFile(filename: "gcc-arm-none-eabi-10.3-2021.10/bin/../lib/gcc/arm-none-eabi/10.3.1/../../../../arm-none-eabi/include/sys/_timeval.h", directory: "/home/mjshen/RTOSExploration")
!11795 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int_least64_t", file: !64, line: 200, baseType: !11796)
!11796 = !DIBasicType(name: "long long", size: 64, encoding: DW_ATE_signed)
!11797 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !11789, file: !11790, line: 49, baseType: !2383, size: 32, offset: 64)
!11798 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !11763, file: !11764, line: 43, baseType: !11789, size: 128, offset: 320)
!11799 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !11763, file: !11764, line: 44, baseType: !11789, size: 128, offset: 448)
!11800 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !11763, file: !11764, line: 45, baseType: !11801, size: 32, offset: 576)
!11801 = !DIDerivedType(tag: DW_TAG_typedef, name: "blksize_t", file: !2342, line: 102, baseType: !11802)
!11802 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2382, line: 34, baseType: !2383)
!11803 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !11763, file: !11764, line: 46, baseType: !11804, size: 32, offset: 608)
!11804 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !2342, line: 97, baseType: !11805)
!11805 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2382, line: 30, baseType: !2383)
!11806 = !DIDerivedType(tag: DW_TAG_member, name: "st_spare4", scope: !11763, file: !11764, line: 48, baseType: !11807, size: 64, offset: 640)
!11807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2383, size: 64, elements: !465)
!11808 = !{!11809, !11810}
!11809 = !DILocalVariable(name: "file", arg: 1, scope: !11759, file: !2338, line: 10, type: !7)
!11810 = !DILocalVariable(name: "st", arg: 2, scope: !11759, file: !2338, line: 10, type: !11762)
!11811 = !DILocation(line: 0, scope: !11759)
!11812 = !DILocation(line: 12, column: 5, scope: !11759)
!11813 = distinct !DISubprogram(name: "_isatty", scope: !2338, file: !2338, line: 15, type: !11488, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !11814)
!11814 = !{!11815}
!11815 = !DILocalVariable(name: "file", arg: 1, scope: !11813, file: !2338, line: 15, type: !7)
!11816 = !DILocation(line: 0, scope: !11813)
!11817 = !DILocation(line: 17, column: 5, scope: !11813)
!11818 = distinct !DISubprogram(name: "_lseek", scope: !2338, file: !2338, line: 20, type: !11819, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !11821)
!11819 = !DISubroutineType(types: !11820)
!11820 = !{!7, !7, !7, !7}
!11821 = !{!11822, !11823, !11824}
!11822 = !DILocalVariable(name: "file", arg: 1, scope: !11818, file: !2338, line: 20, type: !7)
!11823 = !DILocalVariable(name: "ptr", arg: 2, scope: !11818, file: !2338, line: 20, type: !7)
!11824 = !DILocalVariable(name: "dir", arg: 3, scope: !11818, file: !2338, line: 20, type: !7)
!11825 = !DILocation(line: 0, scope: !11818)
!11826 = !DILocation(line: 22, column: 5, scope: !11818)
!11827 = distinct !DISubprogram(name: "_open", scope: !2338, file: !2338, line: 25, type: !11828, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !11830)
!11828 = !DISubroutineType(types: !11829)
!11829 = !{!7, !2376, !7, !7}
!11830 = !{!11831, !11832, !11833}
!11831 = !DILocalVariable(name: "name", arg: 1, scope: !11827, file: !2338, line: 25, type: !2376)
!11832 = !DILocalVariable(name: "flags", arg: 2, scope: !11827, file: !2338, line: 25, type: !7)
!11833 = !DILocalVariable(name: "mode", arg: 3, scope: !11827, file: !2338, line: 25, type: !7)
!11834 = !DILocation(line: 0, scope: !11827)
!11835 = !DILocation(line: 27, column: 5, scope: !11827)
!11836 = distinct !DISubprogram(name: "_read", scope: !2338, file: !2338, line: 30, type: !11837, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !11839)
!11837 = !DISubroutineType(types: !11838)
!11838 = !{!7, !7, !2343, !7}
!11839 = !{!11840, !11841, !11842}
!11840 = !DILocalVariable(name: "file", arg: 1, scope: !11836, file: !2338, line: 30, type: !7)
!11841 = !DILocalVariable(name: "ptr", arg: 2, scope: !11836, file: !2338, line: 30, type: !2343)
!11842 = !DILocalVariable(name: "len", arg: 3, scope: !11836, file: !2338, line: 30, type: !7)
!11843 = !DILocation(line: 0, scope: !11836)
!11844 = !DILocation(line: 32, column: 5, scope: !11836)
!11845 = distinct !DISubprogram(name: "_getpid", scope: !2338, file: !2338, line: 48, type: !10991, scopeLine: 49, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !293)
!11846 = !DILocation(line: 50, column: 5, scope: !11845)
!11847 = distinct !DISubprogram(name: "_kill", scope: !2338, file: !2338, line: 56, type: !11848, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !11850)
!11848 = !DISubroutineType(types: !11849)
!11849 = !{!7, !7, !7}
!11850 = !{!11851, !11852}
!11851 = !DILocalVariable(name: "pid", arg: 1, scope: !11847, file: !2338, line: 56, type: !7)
!11852 = !DILocalVariable(name: "sig", arg: 2, scope: !11847, file: !2338, line: 56, type: !7)
!11853 = !DILocation(line: 0, scope: !11847)
!11854 = !DILocation(line: 58, column: 5, scope: !11847)
!11855 = distinct !DISubprogram(name: "_exit", scope: !2338, file: !2338, line: 61, type: !11488, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !11856)
!11856 = !{!11857}
!11857 = !DILocalVariable(name: "val", arg: 1, scope: !11855, file: !2338, line: 61, type: !7)
!11858 = !DILocation(line: 0, scope: !11855)
!11859 = !DILocation(line: 63, column: 5, scope: !11855)
!11860 = !DILocation(line: 0, scope: !2337)
!11861 = !DILocation(line: 73, column: 5, scope: !2337)
!11862 = !{i64 1127}
!11863 = !DILocation(line: 75, column: 14, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !2337, file: !2338, line: 75, column: 9)
!11865 = !DILocation(line: 75, column: 11, scope: !11864)
!11866 = !DILocation(line: 75, column: 9, scope: !2337)
!11867 = !DILocation(line: 81, column: 32, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !2337, file: !2338, line: 81, column: 9)
!11869 = !DILocation(line: 81, column: 15, scope: !11868)
!11870 = !DILocation(line: 92, column: 1, scope: !2337)
!11871 = !DILocation(line: 81, column: 9, scope: !2337)
!11872 = distinct !DISubprogram(name: "_write", scope: !2338, file: !2338, line: 94, type: !11837, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2530, retainedNodes: !11873)
!11873 = !{!11874, !11875, !11876, !11877}
!11874 = !DILocalVariable(name: "file", arg: 1, scope: !11872, file: !2338, line: 94, type: !7)
!11875 = !DILocalVariable(name: "ptr", arg: 2, scope: !11872, file: !2338, line: 94, type: !2343)
!11876 = !DILocalVariable(name: "len", arg: 3, scope: !11872, file: !2338, line: 94, type: !7)
!11877 = !DILocalVariable(name: "DataIdx", scope: !11872, file: !2338, line: 96, type: !7)
!11878 = !DILocation(line: 0, scope: !11872)
!11879 = !DILocation(line: 98, column: 31, scope: !11880)
!11880 = distinct !DILexicalBlock(scope: !11881, file: !2338, line: 98, column: 5)
!11881 = distinct !DILexicalBlock(scope: !11872, file: !2338, line: 98, column: 5)
!11882 = !DILocation(line: 98, column: 5, scope: !11881)
!11883 = !DILocation(line: 99, column: 26, scope: !11884)
!11884 = distinct !DILexicalBlock(scope: !11880, file: !2338, line: 98, column: 49)
!11885 = !DILocation(line: 99, column: 22, scope: !11884)
!11886 = !DILocation(line: 99, column: 9, scope: !11884)
!11887 = !DILocation(line: 98, column: 45, scope: !11880)
!11888 = distinct !{!11888, !11882, !11889}
!11889 = !DILocation(line: 100, column: 5, scope: !11881)
!11890 = !DILocation(line: 101, column: 5, scope: !11872)
!11891 = distinct !DISubprogram(name: "SysTick_Set", scope: !2542, file: !2542, line: 62, type: !3688, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !11892)
!11892 = !{!11893, !11894}
!11893 = !DILocalVariable(name: "ticks", arg: 1, scope: !11891, file: !2542, line: 62, type: !61)
!11894 = !DILocalVariable(name: "val", scope: !11891, file: !2542, line: 64, type: !61)
!11895 = !DILocation(line: 0, scope: !11891)
!11896 = !DILocation(line: 67, column: 16, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11891, file: !2542, line: 67, column: 9)
!11898 = !DILocation(line: 67, column: 21, scope: !11897)
!11899 = !DILocation(line: 67, column: 9, scope: !11891)
!11900 = !DILocation(line: 72, column: 20, scope: !11891)
!11901 = !DILocation(line: 75, column: 19, scope: !11891)
!11902 = !DILocation(line: 79, column: 20, scope: !11891)
!11903 = !DILocation(line: 80, column: 20, scope: !11891)
!11904 = !DILocation(line: 83, column: 19, scope: !11891)
!11905 = !DILocation(line: 85, column: 5, scope: !11891)
!11906 = !DILocation(line: 86, column: 1, scope: !11891)
!11907 = distinct !DISubprogram(name: "SysInitStatus_Set", scope: !2542, file: !2542, line: 95, type: !291, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !293)
!11908 = !DILocation(line: 97, column: 28, scope: !11907)
!11909 = !DILocation(line: 98, column: 1, scope: !11907)
!11910 = distinct !DISubprogram(name: "SysInitStatus_Query", scope: !2542, file: !2542, line: 107, type: !3940, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !293)
!11911 = !DILocation(line: 109, column: 12, scope: !11910)
!11912 = !DILocation(line: 109, column: 5, scope: !11910)
!11913 = distinct !DISubprogram(name: "SystemCoreClockUpdate", scope: !2542, file: !2542, line: 119, type: !291, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !11914)
!11914 = !{!11915}
!11915 = !DILocalVariable(name: "cm_mux_sel", scope: !11913, file: !2542, line: 121, type: !460)
!11916 = !DILocation(line: 121, column: 38, scope: !11913)
!11917 = !DILocation(line: 121, column: 26, scope: !11913)
!11918 = !DILocation(line: 0, scope: !11913)
!11919 = !DILocation(line: 123, column: 5, scope: !11913)
!11920 = !DILocation(line: 132, column: 13, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11913, file: !2542, line: 123, column: 25)
!11922 = !DILocation(line: 140, column: 13, scope: !11921)
!11923 = !DILocation(line: 0, scope: !11921)
!11924 = !DILocation(line: 146, column: 26, scope: !11925)
!11925 = distinct !DILexicalBlock(scope: !11913, file: !2542, line: 146, column: 9)
!11926 = !DILocation(line: 146, column: 50, scope: !11925)
!11927 = !DILocation(line: 146, column: 41, scope: !11925)
!11928 = !DILocation(line: 148, column: 25, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11925, file: !2542, line: 147, column: 52)
!11930 = !DILocation(line: 149, column: 5, scope: !11929)
!11931 = !DILocation(line: 150, column: 1, scope: !11913)
!11932 = distinct !DISubprogram(name: "SystemInit", scope: !2542, file: !2542, line: 158, type: !291, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !293)
!11933 = !DILocation(line: 162, column: 16, scope: !11932)
!11934 = !DILocation(line: 166, column: 16, scope: !11932)
!11935 = !DILocation(line: 169, column: 16, scope: !11932)
!11936 = !DILocation(line: 172, column: 1, scope: !11932)
!11937 = distinct !DISubprogram(name: "CachePreInit", scope: !2542, file: !2542, line: 180, type: !291, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2541, retainedNodes: !293)
!11938 = !DILocation(line: 183, column: 22, scope: !11937)
!11939 = !DILocation(line: 186, column: 21, scope: !11937)
!11940 = !DILocation(line: 189, column: 21, scope: !11937)
!11941 = !DILocation(line: 192, column: 29, scope: !11937)
!11942 = !DILocation(line: 193, column: 33, scope: !11937)
!11943 = !DILocation(line: 195, column: 28, scope: !11937)
!11944 = !DILocation(line: 200, column: 30, scope: !11937)
!11945 = !DILocation(line: 214, column: 1, scope: !11937)
